

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 06 08:42:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F18345 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0097                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0197                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0295                     	;# 
   215  0295                     	;# 
   216  0296                     	;# 
   217  0297                     	;# 
   218  0298                     	;# 
   219  029F                     	;# 
   220  030C                     	;# 
   221  030D                     	;# 
   222  030E                     	;# 
   223  0311                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0315                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  038C                     	;# 
   234  038D                     	;# 
   235  038E                     	;# 
   236  0391                     	;# 
   237  0392                     	;# 
   238  0393                     	;# 
   239  0394                     	;# 
   240  0395                     	;# 
   241  0396                     	;# 
   242  0397                     	;# 
   243  0398                     	;# 
   244  0399                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0411                     	;# 
   251  0411                     	;# 
   252  0412                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  0418                     	;# 
   260  0419                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  0498                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  049E                     	;# 
   276  049F                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  0619                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  061C                     	;# 
   285  061F                     	;# 
   286  0691                     	;# 
   287  0692                     	;# 
   288  0693                     	;# 
   289  0694                     	;# 
   290  0695                     	;# 
   291  0696                     	;# 
   292  0697                     	;# 
   293  0698                     	;# 
   294  0699                     	;# 
   295  0711                     	;# 
   296  0712                     	;# 
   297  0713                     	;# 
   298  0714                     	;# 
   299  0715                     	;# 
   300  0716                     	;# 
   301  0717                     	;# 
   302  0718                     	;# 
   303  0719                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0891                     	;# 
   307  0891                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0892                     	;# 
   311  0892                     	;# 
   312  0892                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0893                     	;# 
   316  0893                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0894                     	;# 
   320  0894                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0895                     	;# 
   324  0895                     	;# 
   325  0896                     	;# 
   326  0896                     	;# 
   327  0896                     	;# 
   328  089B                     	;# 
   329  0911                     	;# 
   330  0912                     	;# 
   331  0913                     	;# 
   332  0914                     	;# 
   333  0915                     	;# 
   334  0916                     	;# 
   335  0918                     	;# 
   336  0919                     	;# 
   337  091A                     	;# 
   338  091B                     	;# 
   339  091C                     	;# 
   340  091D                     	;# 
   341  091E                     	;# 
   342  091F                     	;# 
   343  0E0F                     	;# 
   344  0E10                     	;# 
   345  0E11                     	;# 
   346  0E12                     	;# 
   347  0E13                     	;# 
   348  0E14                     	;# 
   349  0E15                     	;# 
   350  0E16                     	;# 
   351  0E17                     	;# 
   352  0E18                     	;# 
   353  0E19                     	;# 
   354  0E1A                     	;# 
   355  0E1B                     	;# 
   356  0E1C                     	;# 
   357  0E1D                     	;# 
   358  0E1E                     	;# 
   359  0E1F                     	;# 
   360  0E20                     	;# 
   361  0E21                     	;# 
   362  0E22                     	;# 
   363  0E24                     	;# 
   364  0E25                     	;# 
   365  0E28                     	;# 
   366  0E29                     	;# 
   367  0E2A                     	;# 
   368  0E2B                     	;# 
   369  0E2C                     	;# 
   370  0E2D                     	;# 
   371  0E2E                     	;# 
   372  0E2F                     	;# 
   373  0E90                     	;# 
   374  0E91                     	;# 
   375  0E92                     	;# 
   376  0E94                     	;# 
   377  0E95                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0EA0                     	;# 
   383  0EA1                     	;# 
   384  0EA2                     	;# 
   385  0EA3                     	;# 
   386  0EA4                     	;# 
   387  0EA5                     	;# 
   388  0EA6                     	;# 
   389  0EA7                     	;# 
   390  0F0F                     	;# 
   391  0F10                     	;# 
   392  0F11                     	;# 
   393  0F12                     	;# 
   394  0F13                     	;# 
   395  0F14                     	;# 
   396  0F15                     	;# 
   397  0F16                     	;# 
   398  0F17                     	;# 
   399  0F18                     	;# 
   400  0F19                     	;# 
   401  0F1A                     	;# 
   402  0F1B                     	;# 
   403  0F1C                     	;# 
   404  0F1D                     	;# 
   405  0F1E                     	;# 
   406  0F1F                     	;# 
   407  0F20                     	;# 
   408  0F21                     	;# 
   409  0F22                     	;# 
   410  0F23                     	;# 
   411  0F24                     	;# 
   412  0F25                     	;# 
   413  0F26                     	;# 
   414  0F27                     	;# 
   415  0F28                     	;# 
   416  0F29                     	;# 
   417  0F2A                     	;# 
   418  0F2B                     	;# 
   419  0F2C                     	;# 
   420  0F2D                     	;# 
   421  0F2E                     	;# 
   422  0F2F                     	;# 
   423  0F30                     	;# 
   424  0F31                     	;# 
   425  0F32                     	;# 
   426  0F33                     	;# 
   427  0F34                     	;# 
   428  0F35                     	;# 
   429  0F36                     	;# 
   430  0F37                     	;# 
   431  0FE4                     	;# 
   432  0FE5                     	;# 
   433  0FE6                     	;# 
   434  0FE7                     	;# 
   435  0FE8                     	;# 
   436  0FE9                     	;# 
   437  0FEA                     	;# 
   438  0FEB                     	;# 
   439  0FED                     	;# 
   440  0FEE                     	;# 
   441  0FEF                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  008D                     	;# 
   478  008E                     	;# 
   479  0090                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0097                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  009F                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  010E                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  018E                     	;# 
   506  0197                     	;# 
   507  0199                     	;# 
   508  0199                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019A                     	;# 
   512  019A                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019C                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019D                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019E                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  019F                     	;# 
   529  019F                     	;# 
   530  019F                     	;# 
   531  019F                     	;# 
   532  020C                     	;# 
   533  020D                     	;# 
   534  020E                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0219                     	;# 
   552  021A                     	;# 
   553  021B                     	;# 
   554  021C                     	;# 
   555  021D                     	;# 
   556  021D                     	;# 
   557  021E                     	;# 
   558  021F                     	;# 
   559  028C                     	;# 
   560  028D                     	;# 
   561  028E                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0295                     	;# 
   568  0295                     	;# 
   569  0296                     	;# 
   570  0297                     	;# 
   571  0298                     	;# 
   572  029F                     	;# 
   573  030C                     	;# 
   574  030D                     	;# 
   575  030E                     	;# 
   576  0311                     	;# 
   577  0311                     	;# 
   578  0312                     	;# 
   579  0313                     	;# 
   580  0314                     	;# 
   581  0315                     	;# 
   582  0315                     	;# 
   583  0316                     	;# 
   584  0317                     	;# 
   585  0318                     	;# 
   586  038C                     	;# 
   587  038D                     	;# 
   588  038E                     	;# 
   589  0391                     	;# 
   590  0392                     	;# 
   591  0393                     	;# 
   592  0394                     	;# 
   593  0395                     	;# 
   594  0396                     	;# 
   595  0397                     	;# 
   596  0398                     	;# 
   597  0399                     	;# 
   598  039A                     	;# 
   599  039C                     	;# 
   600  039D                     	;# 
   601  039E                     	;# 
   602  039F                     	;# 
   603  0411                     	;# 
   604  0411                     	;# 
   605  0412                     	;# 
   606  0413                     	;# 
   607  0414                     	;# 
   608  0415                     	;# 
   609  0416                     	;# 
   610  0417                     	;# 
   611  0418                     	;# 
   612  0418                     	;# 
   613  0419                     	;# 
   614  041A                     	;# 
   615  041B                     	;# 
   616  041C                     	;# 
   617  041D                     	;# 
   618  041E                     	;# 
   619  041F                     	;# 
   620  0498                     	;# 
   621  0498                     	;# 
   622  0499                     	;# 
   623  049A                     	;# 
   624  049B                     	;# 
   625  049B                     	;# 
   626  049C                     	;# 
   627  049D                     	;# 
   628  049E                     	;# 
   629  049F                     	;# 
   630  0617                     	;# 
   631  0618                     	;# 
   632  0619                     	;# 
   633  0619                     	;# 
   634  061A                     	;# 
   635  061B                     	;# 
   636  061C                     	;# 
   637  061C                     	;# 
   638  061F                     	;# 
   639  0691                     	;# 
   640  0692                     	;# 
   641  0693                     	;# 
   642  0694                     	;# 
   643  0695                     	;# 
   644  0696                     	;# 
   645  0697                     	;# 
   646  0698                     	;# 
   647  0699                     	;# 
   648  0711                     	;# 
   649  0712                     	;# 
   650  0713                     	;# 
   651  0714                     	;# 
   652  0715                     	;# 
   653  0716                     	;# 
   654  0717                     	;# 
   655  0718                     	;# 
   656  0719                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0891                     	;# 
   662  0891                     	;# 
   663  0892                     	;# 
   664  0892                     	;# 
   665  0892                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0893                     	;# 
   671  0893                     	;# 
   672  0894                     	;# 
   673  0894                     	;# 
   674  0894                     	;# 
   675  0895                     	;# 
   676  0895                     	;# 
   677  0895                     	;# 
   678  0896                     	;# 
   679  0896                     	;# 
   680  0896                     	;# 
   681  089B                     	;# 
   682  0911                     	;# 
   683  0912                     	;# 
   684  0913                     	;# 
   685  0914                     	;# 
   686  0915                     	;# 
   687  0916                     	;# 
   688  0918                     	;# 
   689  0919                     	;# 
   690  091A                     	;# 
   691  091B                     	;# 
   692  091C                     	;# 
   693  091D                     	;# 
   694  091E                     	;# 
   695  091F                     	;# 
   696  0E0F                     	;# 
   697  0E10                     	;# 
   698  0E11                     	;# 
   699  0E12                     	;# 
   700  0E13                     	;# 
   701  0E14                     	;# 
   702  0E15                     	;# 
   703  0E16                     	;# 
   704  0E17                     	;# 
   705  0E18                     	;# 
   706  0E19                     	;# 
   707  0E1A                     	;# 
   708  0E1B                     	;# 
   709  0E1C                     	;# 
   710  0E1D                     	;# 
   711  0E1E                     	;# 
   712  0E1F                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E2C                     	;# 
   723  0E2D                     	;# 
   724  0E2E                     	;# 
   725  0E2F                     	;# 
   726  0E90                     	;# 
   727  0E91                     	;# 
   728  0E92                     	;# 
   729  0E94                     	;# 
   730  0E95                     	;# 
   731  0E9C                     	;# 
   732  0E9D                     	;# 
   733  0E9E                     	;# 
   734  0E9F                     	;# 
   735  0EA0                     	;# 
   736  0EA1                     	;# 
   737  0EA2                     	;# 
   738  0EA3                     	;# 
   739  0EA4                     	;# 
   740  0EA5                     	;# 
   741  0EA6                     	;# 
   742  0EA7                     	;# 
   743  0F0F                     	;# 
   744  0F10                     	;# 
   745  0F11                     	;# 
   746  0F12                     	;# 
   747  0F13                     	;# 
   748  0F14                     	;# 
   749  0F15                     	;# 
   750  0F16                     	;# 
   751  0F17                     	;# 
   752  0F18                     	;# 
   753  0F19                     	;# 
   754  0F1A                     	;# 
   755  0F1B                     	;# 
   756  0F1C                     	;# 
   757  0F1D                     	;# 
   758  0F1E                     	;# 
   759  0F1F                     	;# 
   760  0F20                     	;# 
   761  0F21                     	;# 
   762  0F22                     	;# 
   763  0F23                     	;# 
   764  0F24                     	;# 
   765  0F25                     	;# 
   766  0F26                     	;# 
   767  0F27                     	;# 
   768  0F28                     	;# 
   769  0F29                     	;# 
   770  0F2A                     	;# 
   771  0F2B                     	;# 
   772  0F2C                     	;# 
   773  0F2D                     	;# 
   774  0F2E                     	;# 
   775  0F2F                     	;# 
   776  0F30                     	;# 
   777  0F31                     	;# 
   778  0F32                     	;# 
   779  0F33                     	;# 
   780  0F34                     	;# 
   781  0F35                     	;# 
   782  0F36                     	;# 
   783  0F37                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0094                     	;# 
   837  0097                     	;# 
   838  009B                     	;# 
   839  009B                     	;# 
   840  009C                     	;# 
   841  009D                     	;# 
   842  009E                     	;# 
   843  009F                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0111                     	;# 
   848  0112                     	;# 
   849  0113                     	;# 
   850  0114                     	;# 
   851  0115                     	;# 
   852  0116                     	;# 
   853  0117                     	;# 
   854  0118                     	;# 
   855  0119                     	;# 
   856  018C                     	;# 
   857  018D                     	;# 
   858  018E                     	;# 
   859  0197                     	;# 
   860  0199                     	;# 
   861  0199                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019A                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019C                     	;# 
   873  019C                     	;# 
   874  019D                     	;# 
   875  019D                     	;# 
   876  019D                     	;# 
   877  019E                     	;# 
   878  019E                     	;# 
   879  019E                     	;# 
   880  019F                     	;# 
   881  019F                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  020D                     	;# 
   887  020E                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0216                     	;# 
   901  0216                     	;# 
   902  0217                     	;# 
   903  0217                     	;# 
   904  0219                     	;# 
   905  021A                     	;# 
   906  021B                     	;# 
   907  021C                     	;# 
   908  021D                     	;# 
   909  021D                     	;# 
   910  021E                     	;# 
   911  021F                     	;# 
   912  028C                     	;# 
   913  028D                     	;# 
   914  028E                     	;# 
   915  0291                     	;# 
   916  0291                     	;# 
   917  0292                     	;# 
   918  0293                     	;# 
   919  0294                     	;# 
   920  0295                     	;# 
   921  0295                     	;# 
   922  0296                     	;# 
   923  0297                     	;# 
   924  0298                     	;# 
   925  029F                     	;# 
   926  030C                     	;# 
   927  030D                     	;# 
   928  030E                     	;# 
   929  0311                     	;# 
   930  0311                     	;# 
   931  0312                     	;# 
   932  0313                     	;# 
   933  0314                     	;# 
   934  0315                     	;# 
   935  0315                     	;# 
   936  0316                     	;# 
   937  0317                     	;# 
   938  0318                     	;# 
   939  038C                     	;# 
   940  038D                     	;# 
   941  038E                     	;# 
   942  0391                     	;# 
   943  0392                     	;# 
   944  0393                     	;# 
   945  0394                     	;# 
   946  0395                     	;# 
   947  0396                     	;# 
   948  0397                     	;# 
   949  0398                     	;# 
   950  0399                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0411                     	;# 
   957  0411                     	;# 
   958  0412                     	;# 
   959  0413                     	;# 
   960  0414                     	;# 
   961  0415                     	;# 
   962  0416                     	;# 
   963  0417                     	;# 
   964  0418                     	;# 
   965  0418                     	;# 
   966  0419                     	;# 
   967  041A                     	;# 
   968  041B                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  041F                     	;# 
   973  0498                     	;# 
   974  0498                     	;# 
   975  0499                     	;# 
   976  049A                     	;# 
   977  049B                     	;# 
   978  049B                     	;# 
   979  049C                     	;# 
   980  049D                     	;# 
   981  049E                     	;# 
   982  049F                     	;# 
   983  0617                     	;# 
   984  0618                     	;# 
   985  0619                     	;# 
   986  0619                     	;# 
   987  061A                     	;# 
   988  061B                     	;# 
   989  061C                     	;# 
   990  061C                     	;# 
   991  061F                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  0711                     	;# 
  1002  0712                     	;# 
  1003  0713                     	;# 
  1004  0714                     	;# 
  1005  0715                     	;# 
  1006  0716                     	;# 
  1007  0717                     	;# 
  1008  0718                     	;# 
  1009  0719                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0892                     	;# 
  1017  0892                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0894                     	;# 
  1026  0894                     	;# 
  1027  0894                     	;# 
  1028  0895                     	;# 
  1029  0895                     	;# 
  1030  0895                     	;# 
  1031  0896                     	;# 
  1032  0896                     	;# 
  1033  0896                     	;# 
  1034  089B                     	;# 
  1035  0911                     	;# 
  1036  0912                     	;# 
  1037  0913                     	;# 
  1038  0914                     	;# 
  1039  0915                     	;# 
  1040  0916                     	;# 
  1041  0918                     	;# 
  1042  0919                     	;# 
  1043  091A                     	;# 
  1044  091B                     	;# 
  1045  091C                     	;# 
  1046  091D                     	;# 
  1047  091E                     	;# 
  1048  091F                     	;# 
  1049  0E0F                     	;# 
  1050  0E10                     	;# 
  1051  0E11                     	;# 
  1052  0E12                     	;# 
  1053  0E13                     	;# 
  1054  0E14                     	;# 
  1055  0E15                     	;# 
  1056  0E16                     	;# 
  1057  0E17                     	;# 
  1058  0E18                     	;# 
  1059  0E19                     	;# 
  1060  0E1A                     	;# 
  1061  0E1B                     	;# 
  1062  0E1C                     	;# 
  1063  0E1D                     	;# 
  1064  0E1E                     	;# 
  1065  0E1F                     	;# 
  1066  0E20                     	;# 
  1067  0E21                     	;# 
  1068  0E22                     	;# 
  1069  0E24                     	;# 
  1070  0E25                     	;# 
  1071  0E28                     	;# 
  1072  0E29                     	;# 
  1073  0E2A                     	;# 
  1074  0E2B                     	;# 
  1075  0E2C                     	;# 
  1076  0E2D                     	;# 
  1077  0E2E                     	;# 
  1078  0E2F                     	;# 
  1079  0E90                     	;# 
  1080  0E91                     	;# 
  1081  0E92                     	;# 
  1082  0E94                     	;# 
  1083  0E95                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0E9F                     	;# 
  1088  0EA0                     	;# 
  1089  0EA1                     	;# 
  1090  0EA2                     	;# 
  1091  0EA3                     	;# 
  1092  0EA4                     	;# 
  1093  0EA5                     	;# 
  1094  0EA6                     	;# 
  1095  0EA7                     	;# 
  1096  0F0F                     	;# 
  1097  0F10                     	;# 
  1098  0F11                     	;# 
  1099  0F12                     	;# 
  1100  0F13                     	;# 
  1101  0F14                     	;# 
  1102  0F15                     	;# 
  1103  0F16                     	;# 
  1104  0F17                     	;# 
  1105  0F18                     	;# 
  1106  0F19                     	;# 
  1107  0F1A                     	;# 
  1108  0F1B                     	;# 
  1109  0F1C                     	;# 
  1110  0F1D                     	;# 
  1111  0F1E                     	;# 
  1112  0F1F                     	;# 
  1113  0F20                     	;# 
  1114  0F21                     	;# 
  1115  0F22                     	;# 
  1116  0F23                     	;# 
  1117  0F24                     	;# 
  1118  0F25                     	;# 
  1119  0F26                     	;# 
  1120  0F27                     	;# 
  1121  0F28                     	;# 
  1122  0F29                     	;# 
  1123  0F2A                     	;# 
  1124  0F2B                     	;# 
  1125  0F2C                     	;# 
  1126  0F2D                     	;# 
  1127  0F2E                     	;# 
  1128  0F2F                     	;# 
  1129  0F30                     	;# 
  1130  0F31                     	;# 
  1131  0F32                     	;# 
  1132  0F33                     	;# 
  1133  0F34                     	;# 
  1134  0F35                     	;# 
  1135  0F36                     	;# 
  1136  0F37                     	;# 
  1137  0FE4                     	;# 
  1138  0FE5                     	;# 
  1139  0FE6                     	;# 
  1140  0FE7                     	;# 
  1141  0FE8                     	;# 
  1142  0FE9                     	;# 
  1143  0FEA                     	;# 
  1144  0FEB                     	;# 
  1145  0FED                     	;# 
  1146  0FEE                     	;# 
  1147  0FEF                     	;# 
  1148  0000                     	;# 
  1149  0001                     	;# 
  1150  0002                     	;# 
  1151  0003                     	;# 
  1152  0004                     	;# 
  1153  0005                     	;# 
  1154  0006                     	;# 
  1155  0007                     	;# 
  1156  0008                     	;# 
  1157  0009                     	;# 
  1158  000A                     	;# 
  1159  000B                     	;# 
  1160  000C                     	;# 
  1161  000D                     	;# 
  1162  000E                     	;# 
  1163  0010                     	;# 
  1164  0011                     	;# 
  1165  0012                     	;# 
  1166  0013                     	;# 
  1167  0014                     	;# 
  1168  0015                     	;# 
  1169  0015                     	;# 
  1170  0016                     	;# 
  1171  0016                     	;# 
  1172  0017                     	;# 
  1173  0018                     	;# 
  1174  0019                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  001D                     	;# 
  1180  001E                     	;# 
  1181  001F                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0093                     	;# 
  1189  0094                     	;# 
  1190  0097                     	;# 
  1191  009B                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  009F                     	;# 
  1197  010C                     	;# 
  1198  010D                     	;# 
  1199  010E                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0118                     	;# 
  1208  0119                     	;# 
  1209  018C                     	;# 
  1210  018D                     	;# 
  1211  018E                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  0199                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019A                     	;# 
  1218  019A                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019C                     	;# 
  1225  019C                     	;# 
  1226  019C                     	;# 
  1227  019D                     	;# 
  1228  019D                     	;# 
  1229  019D                     	;# 
  1230  019E                     	;# 
  1231  019E                     	;# 
  1232  019E                     	;# 
  1233  019F                     	;# 
  1234  019F                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0212                     	;# 
  1245  0213                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0216                     	;# 
  1254  0216                     	;# 
  1255  0217                     	;# 
  1256  0217                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021D                     	;# 
  1262  021D                     	;# 
  1263  021E                     	;# 
  1264  021F                     	;# 
  1265  028C                     	;# 
  1266  028D                     	;# 
  1267  028E                     	;# 
  1268  0291                     	;# 
  1269  0291                     	;# 
  1270  0292                     	;# 
  1271  0293                     	;# 
  1272  0294                     	;# 
  1273  0295                     	;# 
  1274  0295                     	;# 
  1275  0296                     	;# 
  1276  0297                     	;# 
  1277  0298                     	;# 
  1278  029F                     	;# 
  1279  030C                     	;# 
  1280  030D                     	;# 
  1281  030E                     	;# 
  1282  0311                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0315                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  038C                     	;# 
  1293  038D                     	;# 
  1294  038E                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  0393                     	;# 
  1298  0394                     	;# 
  1299  0395                     	;# 
  1300  0396                     	;# 
  1301  0397                     	;# 
  1302  0398                     	;# 
  1303  0399                     	;# 
  1304  039A                     	;# 
  1305  039C                     	;# 
  1306  039D                     	;# 
  1307  039E                     	;# 
  1308  039F                     	;# 
  1309  0411                     	;# 
  1310  0411                     	;# 
  1311  0412                     	;# 
  1312  0413                     	;# 
  1313  0414                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  0418                     	;# 
  1318  0418                     	;# 
  1319  0419                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041D                     	;# 
  1324  041E                     	;# 
  1325  041F                     	;# 
  1326  0498                     	;# 
  1327  0498                     	;# 
  1328  0499                     	;# 
  1329  049A                     	;# 
  1330  049B                     	;# 
  1331  049B                     	;# 
  1332  049C                     	;# 
  1333  049D                     	;# 
  1334  049E                     	;# 
  1335  049F                     	;# 
  1336  0617                     	;# 
  1337  0618                     	;# 
  1338  0619                     	;# 
  1339  0619                     	;# 
  1340  061A                     	;# 
  1341  061B                     	;# 
  1342  061C                     	;# 
  1343  061C                     	;# 
  1344  061F                     	;# 
  1345  0691                     	;# 
  1346  0692                     	;# 
  1347  0693                     	;# 
  1348  0694                     	;# 
  1349  0695                     	;# 
  1350  0696                     	;# 
  1351  0697                     	;# 
  1352  0698                     	;# 
  1353  0699                     	;# 
  1354  0711                     	;# 
  1355  0712                     	;# 
  1356  0713                     	;# 
  1357  0714                     	;# 
  1358  0715                     	;# 
  1359  0716                     	;# 
  1360  0717                     	;# 
  1361  0718                     	;# 
  1362  0719                     	;# 
  1363  0891                     	;# 
  1364  0891                     	;# 
  1365  0891                     	;# 
  1366  0891                     	;# 
  1367  0891                     	;# 
  1368  0891                     	;# 
  1369  0892                     	;# 
  1370  0892                     	;# 
  1371  0892                     	;# 
  1372  0893                     	;# 
  1373  0893                     	;# 
  1374  0893                     	;# 
  1375  0893                     	;# 
  1376  0893                     	;# 
  1377  0893                     	;# 
  1378  0894                     	;# 
  1379  0894                     	;# 
  1380  0894                     	;# 
  1381  0895                     	;# 
  1382  0895                     	;# 
  1383  0895                     	;# 
  1384  0896                     	;# 
  1385  0896                     	;# 
  1386  0896                     	;# 
  1387  089B                     	;# 
  1388  0911                     	;# 
  1389  0912                     	;# 
  1390  0913                     	;# 
  1391  0914                     	;# 
  1392  0915                     	;# 
  1393  0916                     	;# 
  1394  0918                     	;# 
  1395  0919                     	;# 
  1396  091A                     	;# 
  1397  091B                     	;# 
  1398  091C                     	;# 
  1399  091D                     	;# 
  1400  091E                     	;# 
  1401  091F                     	;# 
  1402  0E0F                     	;# 
  1403  0E10                     	;# 
  1404  0E11                     	;# 
  1405  0E12                     	;# 
  1406  0E13                     	;# 
  1407  0E14                     	;# 
  1408  0E15                     	;# 
  1409  0E16                     	;# 
  1410  0E17                     	;# 
  1411  0E18                     	;# 
  1412  0E19                     	;# 
  1413  0E1A                     	;# 
  1414  0E1B                     	;# 
  1415  0E1C                     	;# 
  1416  0E1D                     	;# 
  1417  0E1E                     	;# 
  1418  0E1F                     	;# 
  1419  0E20                     	;# 
  1420  0E21                     	;# 
  1421  0E22                     	;# 
  1422  0E24                     	;# 
  1423  0E25                     	;# 
  1424  0E28                     	;# 
  1425  0E29                     	;# 
  1426  0E2A                     	;# 
  1427  0E2B                     	;# 
  1428  0E2C                     	;# 
  1429  0E2D                     	;# 
  1430  0E2E                     	;# 
  1431  0E2F                     	;# 
  1432  0E90                     	;# 
  1433  0E91                     	;# 
  1434  0E92                     	;# 
  1435  0E94                     	;# 
  1436  0E95                     	;# 
  1437  0E9C                     	;# 
  1438  0E9D                     	;# 
  1439  0E9E                     	;# 
  1440  0E9F                     	;# 
  1441  0EA0                     	;# 
  1442  0EA1                     	;# 
  1443  0EA2                     	;# 
  1444  0EA3                     	;# 
  1445  0EA4                     	;# 
  1446  0EA5                     	;# 
  1447  0EA6                     	;# 
  1448  0EA7                     	;# 
  1449  0F0F                     	;# 
  1450  0F10                     	;# 
  1451  0F11                     	;# 
  1452  0F12                     	;# 
  1453  0F13                     	;# 
  1454  0F14                     	;# 
  1455  0F15                     	;# 
  1456  0F16                     	;# 
  1457  0F17                     	;# 
  1458  0F18                     	;# 
  1459  0F19                     	;# 
  1460  0F1A                     	;# 
  1461  0F1B                     	;# 
  1462  0F1C                     	;# 
  1463  0F1D                     	;# 
  1464  0F1E                     	;# 
  1465  0F1F                     	;# 
  1466  0F20                     	;# 
  1467  0F21                     	;# 
  1468  0F22                     	;# 
  1469  0F23                     	;# 
  1470  0F24                     	;# 
  1471  0F25                     	;# 
  1472  0F26                     	;# 
  1473  0F27                     	;# 
  1474  0F28                     	;# 
  1475  0F29                     	;# 
  1476  0F2A                     	;# 
  1477  0F2B                     	;# 
  1478  0F2C                     	;# 
  1479  0F2D                     	;# 
  1480  0F2E                     	;# 
  1481  0F2F                     	;# 
  1482  0F30                     	;# 
  1483  0F31                     	;# 
  1484  0F32                     	;# 
  1485  0F33                     	;# 
  1486  0F34                     	;# 
  1487  0F35                     	;# 
  1488  0F36                     	;# 
  1489  0F37                     	;# 
  1490  0FE4                     	;# 
  1491  0FE5                     	;# 
  1492  0FE6                     	;# 
  1493  0FE7                     	;# 
  1494  0FE8                     	;# 
  1495  0FE9                     	;# 
  1496  0FEA                     	;# 
  1497  0FEB                     	;# 
  1498  0FED                     	;# 
  1499  0FEE                     	;# 
  1500  0FEF                     	;# 
  1501  0000                     	;# 
  1502  0001                     	;# 
  1503  0002                     	;# 
  1504  0003                     	;# 
  1505  0004                     	;# 
  1506  0005                     	;# 
  1507  0006                     	;# 
  1508  0007                     	;# 
  1509  0008                     	;# 
  1510  0009                     	;# 
  1511  000A                     	;# 
  1512  000B                     	;# 
  1513  000C                     	;# 
  1514  000D                     	;# 
  1515  000E                     	;# 
  1516  0010                     	;# 
  1517  0011                     	;# 
  1518  0012                     	;# 
  1519  0013                     	;# 
  1520  0014                     	;# 
  1521  0015                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001D                     	;# 
  1533  001E                     	;# 
  1534  001F                     	;# 
  1535  008C                     	;# 
  1536  008D                     	;# 
  1537  008E                     	;# 
  1538  0090                     	;# 
  1539  0091                     	;# 
  1540  0092                     	;# 
  1541  0093                     	;# 
  1542  0094                     	;# 
  1543  0097                     	;# 
  1544  009B                     	;# 
  1545  009B                     	;# 
  1546  009C                     	;# 
  1547  009D                     	;# 
  1548  009E                     	;# 
  1549  009F                     	;# 
  1550  010C                     	;# 
  1551  010D                     	;# 
  1552  010E                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  018C                     	;# 
  1563  018D                     	;# 
  1564  018E                     	;# 
  1565  0197                     	;# 
  1566  0199                     	;# 
  1567  0199                     	;# 
  1568  0199                     	;# 
  1569  019A                     	;# 
  1570  019A                     	;# 
  1571  019A                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019C                     	;# 
  1578  019C                     	;# 
  1579  019C                     	;# 
  1580  019D                     	;# 
  1581  019D                     	;# 
  1582  019D                     	;# 
  1583  019E                     	;# 
  1584  019E                     	;# 
  1585  019E                     	;# 
  1586  019F                     	;# 
  1587  019F                     	;# 
  1588  019F                     	;# 
  1589  019F                     	;# 
  1590  019F                     	;# 
  1591  020C                     	;# 
  1592  020D                     	;# 
  1593  020E                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0212                     	;# 
  1598  0213                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0215                     	;# 
  1606  0216                     	;# 
  1607  0216                     	;# 
  1608  0217                     	;# 
  1609  0217                     	;# 
  1610  0219                     	;# 
  1611  021A                     	;# 
  1612  021B                     	;# 
  1613  021C                     	;# 
  1614  021D                     	;# 
  1615  021D                     	;# 
  1616  021E                     	;# 
  1617  021F                     	;# 
  1618  028C                     	;# 
  1619  028D                     	;# 
  1620  028E                     	;# 
  1621  0291                     	;# 
  1622  0291                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0294                     	;# 
  1626  0295                     	;# 
  1627  0295                     	;# 
  1628  0296                     	;# 
  1629  0297                     	;# 
  1630  0298                     	;# 
  1631  029F                     	;# 
  1632  030C                     	;# 
  1633  030D                     	;# 
  1634  030E                     	;# 
  1635  0311                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0315                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0317                     	;# 
  1644  0318                     	;# 
  1645  038C                     	;# 
  1646  038D                     	;# 
  1647  038E                     	;# 
  1648  0391                     	;# 
  1649  0392                     	;# 
  1650  0393                     	;# 
  1651  0394                     	;# 
  1652  0395                     	;# 
  1653  0396                     	;# 
  1654  0397                     	;# 
  1655  0398                     	;# 
  1656  0399                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0411                     	;# 
  1663  0411                     	;# 
  1664  0412                     	;# 
  1665  0413                     	;# 
  1666  0414                     	;# 
  1667  0415                     	;# 
  1668  0416                     	;# 
  1669  0417                     	;# 
  1670  0418                     	;# 
  1671  0418                     	;# 
  1672  0419                     	;# 
  1673  041A                     	;# 
  1674  041B                     	;# 
  1675  041C                     	;# 
  1676  041D                     	;# 
  1677  041E                     	;# 
  1678  041F                     	;# 
  1679  0498                     	;# 
  1680  0498                     	;# 
  1681  0499                     	;# 
  1682  049A                     	;# 
  1683  049B                     	;# 
  1684  049B                     	;# 
  1685  049C                     	;# 
  1686  049D                     	;# 
  1687  049E                     	;# 
  1688  049F                     	;# 
  1689  0617                     	;# 
  1690  0618                     	;# 
  1691  0619                     	;# 
  1692  0619                     	;# 
  1693  061A                     	;# 
  1694  061B                     	;# 
  1695  061C                     	;# 
  1696  061C                     	;# 
  1697  061F                     	;# 
  1698  0691                     	;# 
  1699  0692                     	;# 
  1700  0693                     	;# 
  1701  0694                     	;# 
  1702  0695                     	;# 
  1703  0696                     	;# 
  1704  0697                     	;# 
  1705  0698                     	;# 
  1706  0699                     	;# 
  1707  0711                     	;# 
  1708  0712                     	;# 
  1709  0713                     	;# 
  1710  0714                     	;# 
  1711  0715                     	;# 
  1712  0716                     	;# 
  1713  0717                     	;# 
  1714  0718                     	;# 
  1715  0719                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0891                     	;# 
  1719  0891                     	;# 
  1720  0891                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0892                     	;# 
  1724  0892                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0893                     	;# 
  1730  0893                     	;# 
  1731  0894                     	;# 
  1732  0894                     	;# 
  1733  0894                     	;# 
  1734  0895                     	;# 
  1735  0895                     	;# 
  1736  0895                     	;# 
  1737  0896                     	;# 
  1738  0896                     	;# 
  1739  0896                     	;# 
  1740  089B                     	;# 
  1741  0911                     	;# 
  1742  0912                     	;# 
  1743  0913                     	;# 
  1744  0914                     	;# 
  1745  0915                     	;# 
  1746  0916                     	;# 
  1747  0918                     	;# 
  1748  0919                     	;# 
  1749  091A                     	;# 
  1750  091B                     	;# 
  1751  091C                     	;# 
  1752  091D                     	;# 
  1753  091E                     	;# 
  1754  091F                     	;# 
  1755  0E0F                     	;# 
  1756  0E10                     	;# 
  1757  0E11                     	;# 
  1758  0E12                     	;# 
  1759  0E13                     	;# 
  1760  0E14                     	;# 
  1761  0E15                     	;# 
  1762  0E16                     	;# 
  1763  0E17                     	;# 
  1764  0E18                     	;# 
  1765  0E19                     	;# 
  1766  0E1A                     	;# 
  1767  0E1B                     	;# 
  1768  0E1C                     	;# 
  1769  0E1D                     	;# 
  1770  0E1E                     	;# 
  1771  0E1F                     	;# 
  1772  0E20                     	;# 
  1773  0E21                     	;# 
  1774  0E22                     	;# 
  1775  0E24                     	;# 
  1776  0E25                     	;# 
  1777  0E28                     	;# 
  1778  0E29                     	;# 
  1779  0E2A                     	;# 
  1780  0E2B                     	;# 
  1781  0E2C                     	;# 
  1782  0E2D                     	;# 
  1783  0E2E                     	;# 
  1784  0E2F                     	;# 
  1785  0E90                     	;# 
  1786  0E91                     	;# 
  1787  0E92                     	;# 
  1788  0E94                     	;# 
  1789  0E95                     	;# 
  1790  0E9C                     	;# 
  1791  0E9D                     	;# 
  1792  0E9E                     	;# 
  1793  0E9F                     	;# 
  1794  0EA0                     	;# 
  1795  0EA1                     	;# 
  1796  0EA2                     	;# 
  1797  0EA3                     	;# 
  1798  0EA4                     	;# 
  1799  0EA5                     	;# 
  1800  0EA6                     	;# 
  1801  0EA7                     	;# 
  1802  0F0F                     	;# 
  1803  0F10                     	;# 
  1804  0F11                     	;# 
  1805  0F12                     	;# 
  1806  0F13                     	;# 
  1807  0F14                     	;# 
  1808  0F15                     	;# 
  1809  0F16                     	;# 
  1810  0F17                     	;# 
  1811  0F18                     	;# 
  1812  0F19                     	;# 
  1813  0F1A                     	;# 
  1814  0F1B                     	;# 
  1815  0F1C                     	;# 
  1816  0F1D                     	;# 
  1817  0F1E                     	;# 
  1818  0F1F                     	;# 
  1819  0F20                     	;# 
  1820  0F21                     	;# 
  1821  0F22                     	;# 
  1822  0F23                     	;# 
  1823  0F24                     	;# 
  1824  0F25                     	;# 
  1825  0F26                     	;# 
  1826  0F27                     	;# 
  1827  0F28                     	;# 
  1828  0F29                     	;# 
  1829  0F2A                     	;# 
  1830  0F2B                     	;# 
  1831  0F2C                     	;# 
  1832  0F2D                     	;# 
  1833  0F2E                     	;# 
  1834  0F2F                     	;# 
  1835  0F30                     	;# 
  1836  0F31                     	;# 
  1837  0F32                     	;# 
  1838  0F33                     	;# 
  1839  0F34                     	;# 
  1840  0F35                     	;# 
  1841  0F36                     	;# 
  1842  0F37                     	;# 
  1843  0FE4                     	;# 
  1844  0FE5                     	;# 
  1845  0FE6                     	;# 
  1846  0FE7                     	;# 
  1847  0FE8                     	;# 
  1848  0FE9                     	;# 
  1849  0FEA                     	;# 
  1850  0FEB                     	;# 
  1851  0FED                     	;# 
  1852  0FEE                     	;# 
  1853  0FEF                     	;# 
  1854  0000                     	;# 
  1855  0001                     	;# 
  1856  0002                     	;# 
  1857  0003                     	;# 
  1858  0004                     	;# 
  1859  0005                     	;# 
  1860  0006                     	;# 
  1861  0007                     	;# 
  1862  0008                     	;# 
  1863  0009                     	;# 
  1864  000A                     	;# 
  1865  000B                     	;# 
  1866  000C                     	;# 
  1867  000D                     	;# 
  1868  000E                     	;# 
  1869  0010                     	;# 
  1870  0011                     	;# 
  1871  0012                     	;# 
  1872  0013                     	;# 
  1873  0014                     	;# 
  1874  0015                     	;# 
  1875  0015                     	;# 
  1876  0016                     	;# 
  1877  0016                     	;# 
  1878  0017                     	;# 
  1879  0018                     	;# 
  1880  0019                     	;# 
  1881  0019                     	;# 
  1882  001A                     	;# 
  1883  001B                     	;# 
  1884  001C                     	;# 
  1885  001D                     	;# 
  1886  001E                     	;# 
  1887  001F                     	;# 
  1888  008C                     	;# 
  1889  008D                     	;# 
  1890  008E                     	;# 
  1891  0090                     	;# 
  1892  0091                     	;# 
  1893  0092                     	;# 
  1894  0093                     	;# 
  1895  0094                     	;# 
  1896  0097                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  018C                     	;# 
  1916  018D                     	;# 
  1917  018E                     	;# 
  1918  0197                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  0211                     	;# 
  1948  0211                     	;# 
  1949  0212                     	;# 
  1950  0212                     	;# 
  1951  0213                     	;# 
  1952  0213                     	;# 
  1953  0214                     	;# 
  1954  0214                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0216                     	;# 
  1960  0216                     	;# 
  1961  0217                     	;# 
  1962  0217                     	;# 
  1963  0219                     	;# 
  1964  021A                     	;# 
  1965  021B                     	;# 
  1966  021C                     	;# 
  1967  021D                     	;# 
  1968  021D                     	;# 
  1969  021E                     	;# 
  1970  021F                     	;# 
  1971  028C                     	;# 
  1972  028D                     	;# 
  1973  028E                     	;# 
  1974  0291                     	;# 
  1975  0291                     	;# 
  1976  0292                     	;# 
  1977  0293                     	;# 
  1978  0294                     	;# 
  1979  0295                     	;# 
  1980  0295                     	;# 
  1981  0296                     	;# 
  1982  0297                     	;# 
  1983  0298                     	;# 
  1984  029F                     	;# 
  1985  030C                     	;# 
  1986  030D                     	;# 
  1987  030E                     	;# 
  1988  0311                     	;# 
  1989  0311                     	;# 
  1990  0312                     	;# 
  1991  0313                     	;# 
  1992  0314                     	;# 
  1993  0315                     	;# 
  1994  0315                     	;# 
  1995  0316                     	;# 
  1996  0317                     	;# 
  1997  0318                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0391                     	;# 
  2002  0392                     	;# 
  2003  0393                     	;# 
  2004  0394                     	;# 
  2005  0395                     	;# 
  2006  0396                     	;# 
  2007  0397                     	;# 
  2008  0398                     	;# 
  2009  0399                     	;# 
  2010  039A                     	;# 
  2011  039C                     	;# 
  2012  039D                     	;# 
  2013  039E                     	;# 
  2014  039F                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  041F                     	;# 
  2032  0498                     	;# 
  2033  0498                     	;# 
  2034  0499                     	;# 
  2035  049A                     	;# 
  2036  049B                     	;# 
  2037  049B                     	;# 
  2038  049C                     	;# 
  2039  049D                     	;# 
  2040  049E                     	;# 
  2041  049F                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  0619                     	;# 
  2046  061A                     	;# 
  2047  061B                     	;# 
  2048  061C                     	;# 
  2049  061C                     	;# 
  2050  061F                     	;# 
  2051  0691                     	;# 
  2052  0692                     	;# 
  2053  0693                     	;# 
  2054  0694                     	;# 
  2055  0695                     	;# 
  2056  0696                     	;# 
  2057  0697                     	;# 
  2058  0698                     	;# 
  2059  0699                     	;# 
  2060  0711                     	;# 
  2061  0712                     	;# 
  2062  0713                     	;# 
  2063  0714                     	;# 
  2064  0715                     	;# 
  2065  0716                     	;# 
  2066  0717                     	;# 
  2067  0718                     	;# 
  2068  0719                     	;# 
  2069  0891                     	;# 
  2070  0891                     	;# 
  2071  0891                     	;# 
  2072  0891                     	;# 
  2073  0891                     	;# 
  2074  0891                     	;# 
  2075  0892                     	;# 
  2076  0892                     	;# 
  2077  0892                     	;# 
  2078  0893                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0893                     	;# 
  2082  0893                     	;# 
  2083  0893                     	;# 
  2084  0894                     	;# 
  2085  0894                     	;# 
  2086  0894                     	;# 
  2087  0895                     	;# 
  2088  0895                     	;# 
  2089  0895                     	;# 
  2090  0896                     	;# 
  2091  0896                     	;# 
  2092  0896                     	;# 
  2093  089B                     	;# 
  2094  0911                     	;# 
  2095  0912                     	;# 
  2096  0913                     	;# 
  2097  0914                     	;# 
  2098  0915                     	;# 
  2099  0916                     	;# 
  2100  0918                     	;# 
  2101  0919                     	;# 
  2102  091A                     	;# 
  2103  091B                     	;# 
  2104  091C                     	;# 
  2105  091D                     	;# 
  2106  091E                     	;# 
  2107  091F                     	;# 
  2108  0E0F                     	;# 
  2109  0E10                     	;# 
  2110  0E11                     	;# 
  2111  0E12                     	;# 
  2112  0E13                     	;# 
  2113  0E14                     	;# 
  2114  0E15                     	;# 
  2115  0E16                     	;# 
  2116  0E17                     	;# 
  2117  0E18                     	;# 
  2118  0E19                     	;# 
  2119  0E1A                     	;# 
  2120  0E1B                     	;# 
  2121  0E1C                     	;# 
  2122  0E1D                     	;# 
  2123  0E1E                     	;# 
  2124  0E1F                     	;# 
  2125  0E20                     	;# 
  2126  0E21                     	;# 
  2127  0E22                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E28                     	;# 
  2131  0E29                     	;# 
  2132  0E2A                     	;# 
  2133  0E2B                     	;# 
  2134  0E2C                     	;# 
  2135  0E2D                     	;# 
  2136  0E2E                     	;# 
  2137  0E2F                     	;# 
  2138  0E90                     	;# 
  2139  0E91                     	;# 
  2140  0E92                     	;# 
  2141  0E94                     	;# 
  2142  0E95                     	;# 
  2143  0E9C                     	;# 
  2144  0E9D                     	;# 
  2145  0E9E                     	;# 
  2146  0E9F                     	;# 
  2147  0EA0                     	;# 
  2148  0EA1                     	;# 
  2149  0EA2                     	;# 
  2150  0EA3                     	;# 
  2151  0EA4                     	;# 
  2152  0EA5                     	;# 
  2153  0EA6                     	;# 
  2154  0EA7                     	;# 
  2155  0F0F                     	;# 
  2156  0F10                     	;# 
  2157  0F11                     	;# 
  2158  0F12                     	;# 
  2159  0F13                     	;# 
  2160  0F14                     	;# 
  2161  0F15                     	;# 
  2162  0F16                     	;# 
  2163  0F17                     	;# 
  2164  0F18                     	;# 
  2165  0F19                     	;# 
  2166  0F1A                     	;# 
  2167  0F1B                     	;# 
  2168  0F1C                     	;# 
  2169  0F1D                     	;# 
  2170  0F1E                     	;# 
  2171  0F1F                     	;# 
  2172  0F20                     	;# 
  2173  0F21                     	;# 
  2174  0F22                     	;# 
  2175  0F23                     	;# 
  2176  0F24                     	;# 
  2177  0F25                     	;# 
  2178  0F26                     	;# 
  2179  0F27                     	;# 
  2180  0F28                     	;# 
  2181  0F29                     	;# 
  2182  0F2A                     	;# 
  2183  0F2B                     	;# 
  2184  0F2C                     	;# 
  2185  0F2D                     	;# 
  2186  0F2E                     	;# 
  2187  0F2F                     	;# 
  2188  0F30                     	;# 
  2189  0F31                     	;# 
  2190  0F32                     	;# 
  2191  0F33                     	;# 
  2192  0F34                     	;# 
  2193  0F35                     	;# 
  2194  0F36                     	;# 
  2195  0F37                     	;# 
  2196  0FE4                     	;# 
  2197  0FE5                     	;# 
  2198  0FE6                     	;# 
  2199  0FE7                     	;# 
  2200  0FE8                     	;# 
  2201  0FE9                     	;# 
  2202  0FEA                     	;# 
  2203  0FEB                     	;# 
  2204  0FED                     	;# 
  2205  0FEE                     	;# 
  2206  0FEF                     	;# 
  2207  0000                     	;# 
  2208  0001                     	;# 
  2209  0002                     	;# 
  2210  0003                     	;# 
  2211  0004                     	;# 
  2212  0005                     	;# 
  2213  0006                     	;# 
  2214  0007                     	;# 
  2215  0008                     	;# 
  2216  0009                     	;# 
  2217  000A                     	;# 
  2218  000B                     	;# 
  2219  000C                     	;# 
  2220  000D                     	;# 
  2221  000E                     	;# 
  2222  0010                     	;# 
  2223  0011                     	;# 
  2224  0012                     	;# 
  2225  0013                     	;# 
  2226  0014                     	;# 
  2227  0015                     	;# 
  2228  0015                     	;# 
  2229  0016                     	;# 
  2230  0016                     	;# 
  2231  0017                     	;# 
  2232  0018                     	;# 
  2233  0019                     	;# 
  2234  0019                     	;# 
  2235  001A                     	;# 
  2236  001B                     	;# 
  2237  001C                     	;# 
  2238  001D                     	;# 
  2239  001E                     	;# 
  2240  001F                     	;# 
  2241  008C                     	;# 
  2242  008D                     	;# 
  2243  008E                     	;# 
  2244  0090                     	;# 
  2245  0091                     	;# 
  2246  0092                     	;# 
  2247  0093                     	;# 
  2248  0094                     	;# 
  2249  0097                     	;# 
  2250  009B                     	;# 
  2251  009B                     	;# 
  2252  009C                     	;# 
  2253  009D                     	;# 
  2254  009E                     	;# 
  2255  009F                     	;# 
  2256  010C                     	;# 
  2257  010D                     	;# 
  2258  010E                     	;# 
  2259  0111                     	;# 
  2260  0112                     	;# 
  2261  0113                     	;# 
  2262  0114                     	;# 
  2263  0115                     	;# 
  2264  0116                     	;# 
  2265  0117                     	;# 
  2266  0118                     	;# 
  2267  0119                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  0197                     	;# 
  2272  0199                     	;# 
  2273  0199                     	;# 
  2274  0199                     	;# 
  2275  019A                     	;# 
  2276  019A                     	;# 
  2277  019A                     	;# 
  2278  019B                     	;# 
  2279  019B                     	;# 
  2280  019B                     	;# 
  2281  019B                     	;# 
  2282  019B                     	;# 
  2283  019C                     	;# 
  2284  019C                     	;# 
  2285  019C                     	;# 
  2286  019D                     	;# 
  2287  019D                     	;# 
  2288  019D                     	;# 
  2289  019E                     	;# 
  2290  019E                     	;# 
  2291  019E                     	;# 
  2292  019F                     	;# 
  2293  019F                     	;# 
  2294  019F                     	;# 
  2295  019F                     	;# 
  2296  019F                     	;# 
  2297  020C                     	;# 
  2298  020D                     	;# 
  2299  020E                     	;# 
  2300  0211                     	;# 
  2301  0211                     	;# 
  2302  0212                     	;# 
  2303  0212                     	;# 
  2304  0213                     	;# 
  2305  0213                     	;# 
  2306  0214                     	;# 
  2307  0214                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0215                     	;# 
  2311  0215                     	;# 
  2312  0216                     	;# 
  2313  0216                     	;# 
  2314  0217                     	;# 
  2315  0217                     	;# 
  2316  0219                     	;# 
  2317  021A                     	;# 
  2318  021B                     	;# 
  2319  021C                     	;# 
  2320  021D                     	;# 
  2321  021D                     	;# 
  2322  021E                     	;# 
  2323  021F                     	;# 
  2324  028C                     	;# 
  2325  028D                     	;# 
  2326  028E                     	;# 
  2327  0291                     	;# 
  2328  0291                     	;# 
  2329  0292                     	;# 
  2330  0293                     	;# 
  2331  0294                     	;# 
  2332  0295                     	;# 
  2333  0295                     	;# 
  2334  0296                     	;# 
  2335  0297                     	;# 
  2336  0298                     	;# 
  2337  029F                     	;# 
  2338  030C                     	;# 
  2339  030D                     	;# 
  2340  030E                     	;# 
  2341  0311                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0315                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  0393                     	;# 
  2357  0394                     	;# 
  2358  0395                     	;# 
  2359  0396                     	;# 
  2360  0397                     	;# 
  2361  0398                     	;# 
  2362  0399                     	;# 
  2363  039A                     	;# 
  2364  039C                     	;# 
  2365  039D                     	;# 
  2366  039E                     	;# 
  2367  039F                     	;# 
  2368  0411                     	;# 
  2369  0411                     	;# 
  2370  0412                     	;# 
  2371  0413                     	;# 
  2372  0414                     	;# 
  2373  0415                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041D                     	;# 
  2383  041E                     	;# 
  2384  041F                     	;# 
  2385  0498                     	;# 
  2386  0498                     	;# 
  2387  0499                     	;# 
  2388  049A                     	;# 
  2389  049B                     	;# 
  2390  049B                     	;# 
  2391  049C                     	;# 
  2392  049D                     	;# 
  2393  049E                     	;# 
  2394  049F                     	;# 
  2395  0617                     	;# 
  2396  0618                     	;# 
  2397  0619                     	;# 
  2398  0619                     	;# 
  2399  061A                     	;# 
  2400  061B                     	;# 
  2401  061C                     	;# 
  2402  061C                     	;# 
  2403  061F                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  0695                     	;# 
  2409  0696                     	;# 
  2410  0697                     	;# 
  2411  0698                     	;# 
  2412  0699                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0715                     	;# 
  2418  0716                     	;# 
  2419  0717                     	;# 
  2420  0718                     	;# 
  2421  0719                     	;# 
  2422  0891                     	;# 
  2423  0891                     	;# 
  2424  0891                     	;# 
  2425  0891                     	;# 
  2426  0891                     	;# 
  2427  0891                     	;# 
  2428  0892                     	;# 
  2429  0892                     	;# 
  2430  0892                     	;# 
  2431  0893                     	;# 
  2432  0893                     	;# 
  2433  0893                     	;# 
  2434  0893                     	;# 
  2435  0893                     	;# 
  2436  0893                     	;# 
  2437  0894                     	;# 
  2438  0894                     	;# 
  2439  0894                     	;# 
  2440  0895                     	;# 
  2441  0895                     	;# 
  2442  0895                     	;# 
  2443  0896                     	;# 
  2444  0896                     	;# 
  2445  0896                     	;# 
  2446  089B                     	;# 
  2447  0911                     	;# 
  2448  0912                     	;# 
  2449  0913                     	;# 
  2450  0914                     	;# 
  2451  0915                     	;# 
  2452  0916                     	;# 
  2453  0918                     	;# 
  2454  0919                     	;# 
  2455  091A                     	;# 
  2456  091B                     	;# 
  2457  091C                     	;# 
  2458  091D                     	;# 
  2459  091E                     	;# 
  2460  091F                     	;# 
  2461  0E0F                     	;# 
  2462  0E10                     	;# 
  2463  0E11                     	;# 
  2464  0E12                     	;# 
  2465  0E13                     	;# 
  2466  0E14                     	;# 
  2467  0E15                     	;# 
  2468  0E16                     	;# 
  2469  0E17                     	;# 
  2470  0E18                     	;# 
  2471  0E19                     	;# 
  2472  0E1A                     	;# 
  2473  0E1B                     	;# 
  2474  0E1C                     	;# 
  2475  0E1D                     	;# 
  2476  0E1E                     	;# 
  2477  0E1F                     	;# 
  2478  0E20                     	;# 
  2479  0E21                     	;# 
  2480  0E22                     	;# 
  2481  0E24                     	;# 
  2482  0E25                     	;# 
  2483  0E28                     	;# 
  2484  0E29                     	;# 
  2485  0E2A                     	;# 
  2486  0E2B                     	;# 
  2487  0E2C                     	;# 
  2488  0E2D                     	;# 
  2489  0E2E                     	;# 
  2490  0E2F                     	;# 
  2491  0E90                     	;# 
  2492  0E91                     	;# 
  2493  0E92                     	;# 
  2494  0E94                     	;# 
  2495  0E95                     	;# 
  2496  0E9C                     	;# 
  2497  0E9D                     	;# 
  2498  0E9E                     	;# 
  2499  0E9F                     	;# 
  2500  0EA0                     	;# 
  2501  0EA1                     	;# 
  2502  0EA2                     	;# 
  2503  0EA3                     	;# 
  2504  0EA4                     	;# 
  2505  0EA5                     	;# 
  2506  0EA6                     	;# 
  2507  0EA7                     	;# 
  2508  0F0F                     	;# 
  2509  0F10                     	;# 
  2510  0F11                     	;# 
  2511  0F12                     	;# 
  2512  0F13                     	;# 
  2513  0F14                     	;# 
  2514  0F15                     	;# 
  2515  0F16                     	;# 
  2516  0F17                     	;# 
  2517  0F18                     	;# 
  2518  0F19                     	;# 
  2519  0F1A                     	;# 
  2520  0F1B                     	;# 
  2521  0F1C                     	;# 
  2522  0F1D                     	;# 
  2523  0F1E                     	;# 
  2524  0F1F                     	;# 
  2525  0F20                     	;# 
  2526  0F21                     	;# 
  2527  0F22                     	;# 
  2528  0F23                     	;# 
  2529  0F24                     	;# 
  2530  0F25                     	;# 
  2531  0F26                     	;# 
  2532  0F27                     	;# 
  2533  0F28                     	;# 
  2534  0F29                     	;# 
  2535  0F2A                     	;# 
  2536  0F2B                     	;# 
  2537  0F2C                     	;# 
  2538  0F2D                     	;# 
  2539  0F2E                     	;# 
  2540  0F2F                     	;# 
  2541  0F30                     	;# 
  2542  0F31                     	;# 
  2543  0F32                     	;# 
  2544  0F33                     	;# 
  2545  0F34                     	;# 
  2546  0F35                     	;# 
  2547  0F36                     	;# 
  2548  0F37                     	;# 
  2549  0FE4                     	;# 
  2550  0FE5                     	;# 
  2551  0FE6                     	;# 
  2552  0FE7                     	;# 
  2553  0FE8                     	;# 
  2554  0FE9                     	;# 
  2555  0FEA                     	;# 
  2556  0FEB                     	;# 
  2557  0FED                     	;# 
  2558  0FEE                     	;# 
  2559  0FEF                     	;# 
  2560  0000                     	;# 
  2561  0001                     	;# 
  2562  0002                     	;# 
  2563  0003                     	;# 
  2564  0004                     	;# 
  2565  0005                     	;# 
  2566  0006                     	;# 
  2567  0007                     	;# 
  2568  0008                     	;# 
  2569  0009                     	;# 
  2570  000A                     	;# 
  2571  000B                     	;# 
  2572  000C                     	;# 
  2573  000D                     	;# 
  2574  000E                     	;# 
  2575  0010                     	;# 
  2576  0011                     	;# 
  2577  0012                     	;# 
  2578  0013                     	;# 
  2579  0014                     	;# 
  2580  0015                     	;# 
  2581  0015                     	;# 
  2582  0016                     	;# 
  2583  0016                     	;# 
  2584  0017                     	;# 
  2585  0018                     	;# 
  2586  0019                     	;# 
  2587  0019                     	;# 
  2588  001A                     	;# 
  2589  001B                     	;# 
  2590  001C                     	;# 
  2591  001D                     	;# 
  2592  001E                     	;# 
  2593  001F                     	;# 
  2594  008C                     	;# 
  2595  008D                     	;# 
  2596  008E                     	;# 
  2597  0090                     	;# 
  2598  0091                     	;# 
  2599  0092                     	;# 
  2600  0093                     	;# 
  2601  0094                     	;# 
  2602  0097                     	;# 
  2603  009B                     	;# 
  2604  009B                     	;# 
  2605  009C                     	;# 
  2606  009D                     	;# 
  2607  009E                     	;# 
  2608  009F                     	;# 
  2609  010C                     	;# 
  2610  010D                     	;# 
  2611  010E                     	;# 
  2612  0111                     	;# 
  2613  0112                     	;# 
  2614  0113                     	;# 
  2615  0114                     	;# 
  2616  0115                     	;# 
  2617  0116                     	;# 
  2618  0117                     	;# 
  2619  0118                     	;# 
  2620  0119                     	;# 
  2621  018C                     	;# 
  2622  018D                     	;# 
  2623  018E                     	;# 
  2624  0197                     	;# 
  2625  0199                     	;# 
  2626  0199                     	;# 
  2627  0199                     	;# 
  2628  019A                     	;# 
  2629  019A                     	;# 
  2630  019A                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019B                     	;# 
  2636  019C                     	;# 
  2637  019C                     	;# 
  2638  019C                     	;# 
  2639  019D                     	;# 
  2640  019D                     	;# 
  2641  019D                     	;# 
  2642  019E                     	;# 
  2643  019E                     	;# 
  2644  019E                     	;# 
  2645  019F                     	;# 
  2646  019F                     	;# 
  2647  019F                     	;# 
  2648  019F                     	;# 
  2649  019F                     	;# 
  2650  020C                     	;# 
  2651  020D                     	;# 
  2652  020E                     	;# 
  2653  0211                     	;# 
  2654  0211                     	;# 
  2655  0212                     	;# 
  2656  0212                     	;# 
  2657  0213                     	;# 
  2658  0213                     	;# 
  2659  0214                     	;# 
  2660  0214                     	;# 
  2661  0215                     	;# 
  2662  0215                     	;# 
  2663  0215                     	;# 
  2664  0215                     	;# 
  2665  0216                     	;# 
  2666  0216                     	;# 
  2667  0217                     	;# 
  2668  0217                     	;# 
  2669  0219                     	;# 
  2670  021A                     	;# 
  2671  021B                     	;# 
  2672  021C                     	;# 
  2673  021D                     	;# 
  2674  021D                     	;# 
  2675  021E                     	;# 
  2676  021F                     	;# 
  2677  028C                     	;# 
  2678  028D                     	;# 
  2679  028E                     	;# 
  2680  0291                     	;# 
  2681  0291                     	;# 
  2682  0292                     	;# 
  2683  0293                     	;# 
  2684  0294                     	;# 
  2685  0295                     	;# 
  2686  0295                     	;# 
  2687  0296                     	;# 
  2688  0297                     	;# 
  2689  0298                     	;# 
  2690  029F                     	;# 
  2691  030C                     	;# 
  2692  030D                     	;# 
  2693  030E                     	;# 
  2694  0311                     	;# 
  2695  0311                     	;# 
  2696  0312                     	;# 
  2697  0313                     	;# 
  2698  0314                     	;# 
  2699  0315                     	;# 
  2700  0315                     	;# 
  2701  0316                     	;# 
  2702  0317                     	;# 
  2703  0318                     	;# 
  2704  038C                     	;# 
  2705  038D                     	;# 
  2706  038E                     	;# 
  2707  0391                     	;# 
  2708  0392                     	;# 
  2709  0393                     	;# 
  2710  0394                     	;# 
  2711  0395                     	;# 
  2712  0396                     	;# 
  2713  0397                     	;# 
  2714  0398                     	;# 
  2715  0399                     	;# 
  2716  039A                     	;# 
  2717  039C                     	;# 
  2718  039D                     	;# 
  2719  039E                     	;# 
  2720  039F                     	;# 
  2721  0411                     	;# 
  2722  0411                     	;# 
  2723  0412                     	;# 
  2724  0413                     	;# 
  2725  0414                     	;# 
  2726  0415                     	;# 
  2727  0416                     	;# 
  2728  0417                     	;# 
  2729  0418                     	;# 
  2730  0418                     	;# 
  2731  0419                     	;# 
  2732  041A                     	;# 
  2733  041B                     	;# 
  2734  041C                     	;# 
  2735  041D                     	;# 
  2736  041E                     	;# 
  2737  041F                     	;# 
  2738  0498                     	;# 
  2739  0498                     	;# 
  2740  0499                     	;# 
  2741  049A                     	;# 
  2742  049B                     	;# 
  2743  049B                     	;# 
  2744  049C                     	;# 
  2745  049D                     	;# 
  2746  049E                     	;# 
  2747  049F                     	;# 
  2748  0617                     	;# 
  2749  0618                     	;# 
  2750  0619                     	;# 
  2751  0619                     	;# 
  2752  061A                     	;# 
  2753  061B                     	;# 
  2754  061C                     	;# 
  2755  061C                     	;# 
  2756  061F                     	;# 
  2757  0691                     	;# 
  2758  0692                     	;# 
  2759  0693                     	;# 
  2760  0694                     	;# 
  2761  0695                     	;# 
  2762  0696                     	;# 
  2763  0697                     	;# 
  2764  0698                     	;# 
  2765  0699                     	;# 
  2766  0711                     	;# 
  2767  0712                     	;# 
  2768  0713                     	;# 
  2769  0714                     	;# 
  2770  0715                     	;# 
  2771  0716                     	;# 
  2772  0717                     	;# 
  2773  0718                     	;# 
  2774  0719                     	;# 
  2775  0891                     	;# 
  2776  0891                     	;# 
  2777  0891                     	;# 
  2778  0891                     	;# 
  2779  0891                     	;# 
  2780  0891                     	;# 
  2781  0892                     	;# 
  2782  0892                     	;# 
  2783  0892                     	;# 
  2784  0893                     	;# 
  2785  0893                     	;# 
  2786  0893                     	;# 
  2787  0893                     	;# 
  2788  0893                     	;# 
  2789  0893                     	;# 
  2790  0894                     	;# 
  2791  0894                     	;# 
  2792  0894                     	;# 
  2793  0895                     	;# 
  2794  0895                     	;# 
  2795  0895                     	;# 
  2796  0896                     	;# 
  2797  0896                     	;# 
  2798  0896                     	;# 
  2799  089B                     	;# 
  2800  0911                     	;# 
  2801  0912                     	;# 
  2802  0913                     	;# 
  2803  0914                     	;# 
  2804  0915                     	;# 
  2805  0916                     	;# 
  2806  0918                     	;# 
  2807  0919                     	;# 
  2808  091A                     	;# 
  2809  091B                     	;# 
  2810  091C                     	;# 
  2811  091D                     	;# 
  2812  091E                     	;# 
  2813  091F                     	;# 
  2814  0E0F                     	;# 
  2815  0E10                     	;# 
  2816  0E11                     	;# 
  2817  0E12                     	;# 
  2818  0E13                     	;# 
  2819  0E14                     	;# 
  2820  0E15                     	;# 
  2821  0E16                     	;# 
  2822  0E17                     	;# 
  2823  0E18                     	;# 
  2824  0E19                     	;# 
  2825  0E1A                     	;# 
  2826  0E1B                     	;# 
  2827  0E1C                     	;# 
  2828  0E1D                     	;# 
  2829  0E1E                     	;# 
  2830  0E1F                     	;# 
  2831  0E20                     	;# 
  2832  0E21                     	;# 
  2833  0E22                     	;# 
  2834  0E24                     	;# 
  2835  0E25                     	;# 
  2836  0E28                     	;# 
  2837  0E29                     	;# 
  2838  0E2A                     	;# 
  2839  0E2B                     	;# 
  2840  0E2C                     	;# 
  2841  0E2D                     	;# 
  2842  0E2E                     	;# 
  2843  0E2F                     	;# 
  2844  0E90                     	;# 
  2845  0E91                     	;# 
  2846  0E92                     	;# 
  2847  0E94                     	;# 
  2848  0E95                     	;# 
  2849  0E9C                     	;# 
  2850  0E9D                     	;# 
  2851  0E9E                     	;# 
  2852  0E9F                     	;# 
  2853  0EA0                     	;# 
  2854  0EA1                     	;# 
  2855  0EA2                     	;# 
  2856  0EA3                     	;# 
  2857  0EA4                     	;# 
  2858  0EA5                     	;# 
  2859  0EA6                     	;# 
  2860  0EA7                     	;# 
  2861  0F0F                     	;# 
  2862  0F10                     	;# 
  2863  0F11                     	;# 
  2864  0F12                     	;# 
  2865  0F13                     	;# 
  2866  0F14                     	;# 
  2867  0F15                     	;# 
  2868  0F16                     	;# 
  2869  0F17                     	;# 
  2870  0F18                     	;# 
  2871  0F19                     	;# 
  2872  0F1A                     	;# 
  2873  0F1B                     	;# 
  2874  0F1C                     	;# 
  2875  0F1D                     	;# 
  2876  0F1E                     	;# 
  2877  0F1F                     	;# 
  2878  0F20                     	;# 
  2879  0F21                     	;# 
  2880  0F22                     	;# 
  2881  0F23                     	;# 
  2882  0F24                     	;# 
  2883  0F25                     	;# 
  2884  0F26                     	;# 
  2885  0F27                     	;# 
  2886  0F28                     	;# 
  2887  0F29                     	;# 
  2888  0F2A                     	;# 
  2889  0F2B                     	;# 
  2890  0F2C                     	;# 
  2891  0F2D                     	;# 
  2892  0F2E                     	;# 
  2893  0F2F                     	;# 
  2894  0F30                     	;# 
  2895  0F31                     	;# 
  2896  0F32                     	;# 
  2897  0F33                     	;# 
  2898  0F34                     	;# 
  2899  0F35                     	;# 
  2900  0F36                     	;# 
  2901  0F37                     	;# 
  2902  0FE4                     	;# 
  2903  0FE5                     	;# 
  2904  0FE6                     	;# 
  2905  0FE7                     	;# 
  2906  0FE8                     	;# 
  2907  0FE9                     	;# 
  2908  0FEA                     	;# 
  2909  0FEB                     	;# 
  2910  0FED                     	;# 
  2911  0FEE                     	;# 
  2912  0FEF                     	;# 
  2913                           
  2914                           	psect	nvBANK0
  2915  003C                     __pnvBANK0:	
  2916  003C                     _IOCAF4_InterruptHandler:	
  2917  003C                     	ds	2
  2918  0011                     _PIR1bits	set	17
  2919  000B                     _INTCONbits	set	11
  2920  0010                     _PIR0bits	set	16
  2921  008E                     _TRISC	set	142
  2922  008D                     _TRISB	set	141
  2923  008C                     _TRISA	set	140
  2924  0097                     _WDTCON	set	151
  2925  0091                     _PIE1bits	set	145
  2926  0090                     _PIE0bits	set	144
  2927  010C                     _LATAbits	set	268
  2928  010E                     _LATCbits	set	270
  2929  010E                     _LATC	set	270
  2930  010D                     _LATB	set	269
  2931  010C                     _LATA	set	268
  2932  018C                     _ANSELA	set	396
  2933  018D                     _ANSELB	set	397
  2934  018E                     _ANSELC	set	398
  2935  0211                     _SSPBUF	set	529
  2936  0214                     _SSP1STATbits	set	532
  2937  0213                     _SSP1MSK	set	531
  2938  0211                     _SSP1BUF	set	529
  2939  0216                     _SSP1CON2bits	set	534
  2940  0212                     _SSP1ADD	set	530
  2941  0216                     _SSP1CON2	set	534
  2942  0215                     _SSP1CON1	set	533
  2943  0214                     _SSP1STAT	set	532
  2944  0215                     _SSP1CON1bits	set	533
  2945  020E                     _WPUC	set	526
  2946  020C                     _WPUA	set	524
  2947  020D                     _WPUB	set	525
  2948  028E                     _ODCONC	set	654
  2949  028D                     _ODCONB	set	653
  2950  028C                     _ODCONA	set	652
  2951  030E                     _SLRCONC	set	782
  2952  030D                     _SLRCONB	set	781
  2953  030C                     _SLRCONA	set	780
  2954  0391                     _IOCAPbits	set	913
  2955  0392                     _IOCANbits	set	914
  2956  0393                     _IOCAFbits	set	915
  2957  0916                     _PMD5	set	2326
  2958  0915                     _PMD4	set	2325
  2959  0914                     _PMD3	set	2324
  2960  0913                     _PMD2	set	2323
  2961  0912                     _PMD1	set	2322
  2962  0911                     _PMD0	set	2321
  2963  091E                     _OSCTUNE	set	2334
  2964  091F                     _OSCFRQ	set	2335
  2965  091D                     _OSCEN	set	2333
  2966  091B                     _OSCCON3	set	2331
  2967  0919                     _OSCCON1	set	2329
  2968  0E21                     _SSP1DATPPS	set	3617
  2969  0E20                     _SSP1CLKPPS	set	3616
  2970  0EA1                     _RC1PPS	set	3745
  2971  0EA0                     _RC0PPS	set	3744
  2972                           
  2973                           ; #config settings
  2974  0000                     
  2975                           	psect	cinit
  2976  0020                     start_initialization:	
  2977  0020                     __initialization:	
  2978                           
  2979                           ; Clear objects allocated to BANK0
  2980  0020  3020               	movlw	low __pbssBANK0
  2981  0021  0084               	movwf	4
  2982  0022  3000               	movlw	high __pbssBANK0
  2983  0023  0085               	movwf	5
  2984  0024  3016               	movlw	22
  2985  0025  3185  250A  3180   	fcall	clear_ram0
  2986                           
  2987                           ; Clear objects allocated to BANK1
  2988  0028  30A0               	movlw	low __pbssBANK1
  2989  0029  0084               	movwf	4
  2990  002A  3000               	movlw	high __pbssBANK1
  2991  002B  0085               	movwf	5
  2992  002C  3044               	movlw	68
  2993  002D  3185  250A         	fcall	clear_ram0
  2994  002F                     end_of_initialization:	
  2995                           ;End of C runtime variable initialization code
  2996                           
  2997  002F                     __end_of__initialization:	
  2998  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2999  0030  0020               	movlb	0
  3000  0031  3183  2B5B         	ljmp	_main	;jump to C main() function
  3001                           
  3002                           	psect	bssBANK0
  3003  0020                     __pbssBANK0:	
  3004  0020                     _gesture_motion_:	
  3005  0020                     	ds	2
  3006  0022                     _gesture_state_:	
  3007  0022                     	ds	2
  3008  0024                     _gesture_far_count_:	
  3009  0024                     	ds	2
  3010  0026                     _gesture_near_count_:	
  3011  0026                     	ds	2
  3012  0028                     _gesture_lr_count_:	
  3013  0028                     	ds	2
  3014  002A                     _gesture_ud_count_:	
  3015  002A                     	ds	2
  3016  002C                     _gesture_lr_delta_:	
  3017  002C                     	ds	2
  3018  002E                     _gesture_ud_delta_:	
  3019  002E                     	ds	2
  3020  0030                     _i2c1_driver_i2cISR:	
  3021  0030                     	ds	2
  3022  0032                     _i2c1_driver_busCollisionISR:	
  3023  0032                     	ds	2
  3024  0034                     _b_i2c_error_flag:	
  3025  0034                     	ds	1
  3026  0035                     _handleGestureFlag:	
  3027  0035                     	ds	1
  3028                           
  3029                           	psect	bssBANK1
  3030  00A0                     __pbssBANK1:	
  3031  00A0                     _gesture_data_:	
  3032  00A0                     	ds	68
  3033                           
  3034                           	psect	clrtext
  3035  050A                     clear_ram0:	
  3036                           ;	Called with FSR0 containing the base address, and
  3037                           ;	WREG with the size to clear
  3038                           
  3039  050A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3040  050B                     clrloop0:	
  3041  050B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3042  050C  3101               	addfsr 0,1
  3043  050D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3044  050E  2D0B               	goto	clrloop0	;have we reached the end yet?
  3045  050F  3400               	retlw	0	;all done for this memory range, return
  3046                           
  3047                           	psect	cstackCOMMON
  3048  0070                     __pcstackCOMMON:	
  3049  0070                     ?_PIN_MANAGER_IOC:	
  3050  0070                     ??_PIN_MANAGER_IOC:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053  0070                     ?_PMD_Initialize:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  0070                     ??_PMD_Initialize:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059  0070                     ?_PIN_MANAGER_Initialize:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0070                     ?_OSCILLATOR_Initialize:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0070                     ??_OSCILLATOR_Initialize:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068  0070                     ?_WDT_Initialize:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0070                     ??_WDT_Initialize:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  0070                     ?_IOCAF4_SetInterruptHandler:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0070                     ?_IOCAF4_ISR:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  0070                     ??_IOCAF4_ISR:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0070                     ?_initialize:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0070                     ?_enableGestureSensor:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  0070                     ?_InitI2C:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  0070                     ??_InitI2C:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  0070                     ?_wireReadDataByte:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  0070                     ?_setLEDDrive:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  0070                     ?_setProximityGain:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  0070                     ?_setAmbientLightGain:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  0070                     ?_setProxIntLowThresh:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  0070                     ?_setProxIntHighThresh:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  0070                     ?_setGestureEnterThresh:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  0070                     ?_setGestureExitThresh:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  0070                     ?_setGestureGain:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  0070                     ?_setGestureLEDDrive:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  0070                     ?_setGestureWaitTime:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  0070                     ?_setGestureIntEnable:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  0070                     ?_getMode:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  0070                     ?_resetGestureParameters:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0070                     ??_resetGestureParameters:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0070                     ?_setLEDBoost:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0070                     ?_setGestureMode:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0070                     ?_enablePower:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0070                     ?_I2C_Start:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0070                     ??_I2C_Start:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0070                     ?_I2C_Write_Byte:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0070                     ??_I2C_Write_Byte:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0070                     ?_I2C_ReStart:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0070                     ??_I2C_ReStart:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0070                     ?_I2C_Read_Byte:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0070                     ??_I2C_Read_Byte:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0070                     ?_I2C_Send_NACK:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0070                     ??_I2C_Send_NACK:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0070                     ?_I2C_Stop:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0070                     ??_I2C_Stop:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0070                     ?_INTERRUPT_InterruptManager:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0070                     ??_INTERRUPT_InterruptManager:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0070                     ?_SYSTEM_Initialize:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0070                     ?_GestureInterruptHandler:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0070                     ??_GestureInterruptHandler:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0070                     ?_main:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0070                     I2C_Write_Byte@Byte:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0070                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215                           
  3216                           ; 2 bytes @ 0x0
  3217  0070                     	ds	1
  3218  0071                     ?_wireWriteDataByte:	
  3219  0071                     wireWriteDataByte@val:	
  3220                           ; 2 bytes @ 0x1
  3221                           
  3222                           
  3223                           ; 1 bytes @ 0x1
  3224  0071                     	ds	1
  3225  0072                     ??_PIN_MANAGER_Initialize:	
  3226  0072                     ??_IOCAF4_SetInterruptHandler:	
  3227                           ; 1 bytes @ 0x2
  3228                           
  3229  0072                     ??_SYSTEM_Initialize:	
  3230                           ; 1 bytes @ 0x2
  3231                           
  3232                           
  3233                           ; 1 bytes @ 0x2
  3234  0072                     	ds	2
  3235  0074                     ??_wireWriteDataByte:	
  3236  0074                     wireWriteDataByte@reg:	
  3237                           ; 1 bytes @ 0x4
  3238                           
  3239  0074                     I2C_Read_Byte@count:	
  3240                           ; 1 bytes @ 0x4
  3241                           
  3242                           
  3243                           ; 4 bytes @ 0x4
  3244  0074                     	ds	1
  3245  0075                     ??_setProxIntLowThresh:	
  3246  0075                     ??_setProxIntHighThresh:	
  3247                           ; 1 bytes @ 0x5
  3248                           
  3249  0075                     ?_setLightIntLowThreshold:	
  3250                           ; 1 bytes @ 0x5
  3251                           
  3252  0075                     ?_setLightIntHighThreshold:	
  3253                           ; 1 bytes @ 0x5
  3254                           
  3255  0075                     ??_setGestureEnterThresh:	
  3256                           ; 1 bytes @ 0x5
  3257                           
  3258  0075                     ??_setGestureExitThresh:	
  3259                           ; 1 bytes @ 0x5
  3260                           
  3261  0075                     setLightIntLowThreshold@threshold:	
  3262                           ; 1 bytes @ 0x5
  3263                           
  3264  0075                     setLightIntHighThreshold@threshold:	
  3265                           ; 2 bytes @ 0x5
  3266                           
  3267                           
  3268                           ; 2 bytes @ 0x5
  3269  0075                     	ds	1
  3270  0076                     setProxIntLowThresh@threshold:	
  3271  0076                     setProxIntHighThresh@threshold:	
  3272                           ; 1 bytes @ 0x6
  3273                           
  3274  0076                     setGestureEnterThresh@threshold:	
  3275                           ; 1 bytes @ 0x6
  3276                           
  3277  0076                     setGestureExitThresh@threshold:	
  3278                           ; 1 bytes @ 0x6
  3279                           
  3280                           
  3281                           ; 1 bytes @ 0x6
  3282  0076                     	ds	1
  3283  0077                     ??_setLightIntLowThreshold:	
  3284  0077                     ??_setLightIntHighThreshold:	
  3285                           ; 1 bytes @ 0x7
  3286                           
  3287                           
  3288                           ; 1 bytes @ 0x7
  3289  0077                     	ds	1
  3290  0078                     ??_wireReadDataByte:	
  3291  0078                     setLightIntLowThreshold@val_low:	
  3292                           ; 1 bytes @ 0x8
  3293                           
  3294  0078                     setLightIntHighThreshold@val_low:	
  3295                           ; 1 bytes @ 0x8
  3296                           
  3297                           
  3298                           ; 1 bytes @ 0x8
  3299  0078                     	ds	1
  3300  0079                     setLightIntLowThreshold@val_high:	
  3301  0079                     setLightIntHighThreshold@val_high:	
  3302                           ; 1 bytes @ 0x9
  3303                           
  3304  0079                     wireReadDataByte@reg:	
  3305                           ; 1 bytes @ 0x9
  3306                           
  3307                           
  3308                           ; 1 bytes @ 0x9
  3309  0079                     	ds	1
  3310  007A                     wireReadDataByte@val:	
  3311                           
  3312                           ; 1 bytes @ 0xA
  3313  007A                     	ds	1
  3314  007B                     ??_setLEDDrive:	
  3315  007B                     ??_setProximityGain:	
  3316                           ; 1 bytes @ 0xB
  3317                           
  3318  007B                     ??_setAmbientLightGain:	
  3319                           ; 1 bytes @ 0xB
  3320                           
  3321  007B                     ??_setGestureGain:	
  3322                           ; 1 bytes @ 0xB
  3323                           
  3324  007B                     ??_setGestureLEDDrive:	
  3325                           ; 1 bytes @ 0xB
  3326                           
  3327  007B                     ??_setGestureWaitTime:	
  3328                           ; 1 bytes @ 0xB
  3329                           
  3330  007B                     ??_setGestureIntEnable:	
  3331                           ; 1 bytes @ 0xB
  3332                           
  3333  007B                     ??_getMode:	
  3334                           ; 1 bytes @ 0xB
  3335                           
  3336  007B                     ??_setLEDBoost:	
  3337                           ; 1 bytes @ 0xB
  3338                           
  3339  007B                     ??_setGestureMode:	
  3340                           ; 1 bytes @ 0xB
  3341                           
  3342                           
  3343                           ; 1 bytes @ 0xB
  3344  007B                     	ds	1
  3345  007C                     getMode@enable_value:	
  3346  007C                     setAmbientLightGain@drive:	
  3347                           ; 1 bytes @ 0xC
  3348                           
  3349  007C                     setGestureWaitTime@time:	
  3350                           ; 1 bytes @ 0xC
  3351                           
  3352  007C                     setGestureIntEnable@val:	
  3353                           ; 1 bytes @ 0xC
  3354                           
  3355  007C                     setGestureMode@mode:	
  3356                           ; 1 bytes @ 0xC
  3357                           
  3358                           
  3359                           ; 1 bytes @ 0xC
  3360  007C                     	ds	1
  3361  007D                     ?_setMode:	
  3362  007D                     setMode@enable:	
  3363                           ; 1 bytes @ 0xD
  3364                           
  3365  007D                     setAmbientLightGain@val:	
  3366                           ; 1 bytes @ 0xD
  3367                           
  3368  007D                     setGestureWaitTime@val:	
  3369                           ; 1 bytes @ 0xD
  3370                           
  3371  007D                     setGestureIntEnable@enable:	
  3372                           ; 1 bytes @ 0xD
  3373                           
  3374  007D                     setGestureMode@val:	
  3375                           ; 1 bytes @ 0xD
  3376                           
  3377                           
  3378                           ; 1 bytes @ 0xD
  3379  007D                     	ds	1
  3380  007E                     ??_enablePower:	
  3381  007E                     ??_main:	
  3382                           ; 1 bytes @ 0xE
  3383                           
  3384                           
  3385                           	psect	cstackBANK0
  3386  0036                     __pcstackBANK0:	
  3387                           ; 1 bytes @ 0xE
  3388                           
  3389  0036                     ??_setMode:	
  3390  0036                     setLEDDrive@val:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0036                     setProximityGain@val:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0036                     setGestureGain@val:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0036                     setGestureLEDDrive@val:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0036                     setLEDBoost@val:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405                           
  3406                           ; 1 bytes @ 0x0
  3407  0036                     	ds	1
  3408  0037                     setLEDDrive@drive:	
  3409  0037                     setProximityGain@drive:	
  3410                           ; 1 bytes @ 0x1
  3411                           
  3412  0037                     setGestureGain@gain:	
  3413                           ; 1 bytes @ 0x1
  3414                           
  3415  0037                     setGestureLEDDrive@drive:	
  3416                           ; 1 bytes @ 0x1
  3417                           
  3418  0037                     setLEDBoost@boost:	
  3419                           ; 1 bytes @ 0x1
  3420                           
  3421                           
  3422                           ; 1 bytes @ 0x1
  3423  0037                     	ds	1
  3424  0038                     setMode@reg_val:	
  3425                           
  3426                           ; 1 bytes @ 0x2
  3427  0038                     	ds	1
  3428  0039                     setMode@mode:	
  3429                           
  3430                           ; 1 bytes @ 0x3
  3431  0039                     	ds	1
  3432  003A                     ??_initialize:	
  3433  003A                     ??_enableGestureSensor:	
  3434                           ; 1 bytes @ 0x4
  3435                           
  3436                           
  3437                           ; 1 bytes @ 0x4
  3438  003A                     	ds	1
  3439  003B                     initialize@id:	
  3440  003B                     enableGestureSensor@interrupts:	
  3441                           ; 1 bytes @ 0x5
  3442                           
  3443                           
  3444                           ; 1 bytes @ 0x5
  3445  003B                     	ds	1
  3446                           
  3447                           	psect	maintext
  3448  035B                     __pmaintext:	
  3449 ;;
  3450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3451 ;;
  3452 ;; *************** function _main *****************
  3453 ;; Defined at:
  3454 ;;		line 60 in file "main.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : B1F/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:        0 bytes
  3473 ;; Hardware stack levels required when called:   10
  3474 ;; This function calls:
  3475 ;;		_IOCAF4_SetInterruptHandler
  3476 ;;		_SYSTEM_Initialize
  3477 ;;		_enableGestureSensor
  3478 ;;		_initialize
  3479 ;; This function is called by:
  3480 ;;		Startup code after reset
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function _main
  3486  035B                     _main:	
  3487                           
  3488                           ;main.c: 63:     SYSTEM_Initialize();
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3492  035B  3184  24E5  3183   	fcall	_SYSTEM_Initialize
  3493                           
  3494                           ;main.c: 69:     (INTCONbits.GIE = 1);
  3495  035E  178B               	bsf	11,7	;volatile
  3496                           
  3497                           ;main.c: 72:     (INTCONbits.PEIE = 1);
  3498  035F  170B               	bsf	11,6	;volatile
  3499                           
  3500                           ;main.c: 74:     IOCAF4_SetInterruptHandler(GestureInterruptHandler);
  3501  0360  3024               	movlw	low _GestureInterruptHandler
  3502  0361  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3503  0362  3005               	movlw	high _GestureInterruptHandler
  3504  0363  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3505  0364  3185  2510  3183   	fcall	_IOCAF4_SetInterruptHandler
  3506  0367  0022               	movlb	2	; select bank2
  3507  0368  168E               	bsf	14,5	;volatile
  3508                           
  3509                           ;main.c: 86:     if(initialize()){
  3510  0369  3180  2033  3183   	fcall	_initialize
  3511  036C  3A00               	xorlw	0
  3512  036D  1903               	skipnz
  3513  036E  2B71               	goto	l3270
  3514                           
  3515                           ;main.c: 87:         do { LATAbits.LATA2 = 1; } while(0);
  3516  036F  0022               	movlb	2	; select bank2
  3517  0370  150C               	bsf	12,2	;volatile
  3518  0371                     l3270:	
  3519                           
  3520                           ;main.c: 90:     if(enableGestureSensor(1)){
  3521  0371  3001               	movlw	1
  3522  0372  3181  213B  3183   	fcall	_enableGestureSensor
  3523  0375  3A00               	xorlw	0
  3524  0376  1903               	skipnz
  3525  0377  2B7A               	goto	l3272
  3526                           
  3527                           ;main.c: 91:         do { LATAbits.LATA1 = 1; } while(0);
  3528  0378  0022               	movlb	2	; select bank2
  3529  0379  148C               	bsf	12,1	;volatile
  3530  037A                     l3272:	
  3531                           
  3532                           ;main.c: 95:     {;main.c: 96:         if(handleGestureFlag){
  3533  037A  0020               	movlb	0	; select bank0
  3534  037B  0835               	movf	_handleGestureFlag,w
  3535  037C  1903               	btfsc	3,2
  3536  037D  2B7A               	goto	l3272
  3537                           
  3538                           ;main.c: 98:             handleGestureFlag = 0;
  3539  037E  01B5               	clrf	_handleGestureFlag
  3540  037F  2B7A               	goto	l3272
  3541  0380                     __end_of_main:	
  3542                           
  3543                           	psect	text1
  3544  0033                     __ptext1:	
  3545 ;; *************** function _initialize *****************
  3546 ;; Defined at:
  3547 ;;		line 18 in file "APDS9960.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  id              1    5[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      _Bool 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;Total ram usage:        2 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    8
  3568 ;; This function calls:
  3569 ;;		_InitI2C
  3570 ;;		_setAmbientLightGain
  3571 ;;		_setGestureEnterThresh
  3572 ;;		_setGestureExitThresh
  3573 ;;		_setGestureGain
  3574 ;;		_setGestureIntEnable
  3575 ;;		_setGestureLEDDrive
  3576 ;;		_setGestureWaitTime
  3577 ;;		_setLEDDrive
  3578 ;;		_setLightIntHighThreshold
  3579 ;;		_setLightIntLowThreshold
  3580 ;;		_setMode
  3581 ;;		_setProxIntHighThresh
  3582 ;;		_setProxIntLowThresh
  3583 ;;		_setProximityGain
  3584 ;;		_wireReadDataByte
  3585 ;;		_wireWriteDataByte
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _initialize
  3593  0033                     _initialize:	
  3594                           
  3595                           ;APDS9960.c: 23:     InitI2C();
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  3599  0033  3185  2531  3180   	fcall	_InitI2C
  3600                           
  3601                           ;APDS9960.c: 27:     id = wireReadDataByte(0x92);
  3602  0036  3092               	movlw	146
  3603  0037  3184  2410  3180   	fcall	_wireReadDataByte
  3604  003A  0020               	movlb	0	; select bank0
  3605  003B  00BA               	movwf	??_initialize
  3606  003C  083A               	movf	??_initialize,w
  3607  003D  00BB               	movwf	initialize@id
  3608                           
  3609                           ;APDS9960.c: 30:     if( !(id == 0xAB ||id == 0x9C ) )
  3610  003E  30AB               	movlw	171
  3611  003F  063B               	xorwf	initialize@id,w
  3612  0040  1903               	btfsc	3,2
  3613  0041  2848               	goto	l3034
  3614  0042  309C               	movlw	156
  3615  0043  063B               	xorwf	initialize@id,w
  3616  0044  1903               	btfsc	3,2
  3617  0045  2848               	goto	l3034
  3618  0046                     l3030:	
  3619                           
  3620                           ;APDS9960.c: 31:     {;APDS9960.c: 32:      return 0;
  3621  0046  3000               	movlw	0
  3622  0047  0008               	return
  3623  0048                     l3034:	
  3624                           
  3625                           ;APDS9960.c: 35:     setMode(7, 0);
  3626  0048  01FD               	clrf	setMode@enable
  3627  0049  3007               	movlw	7
  3628  004A  3181  219B  3180   	fcall	_setMode
  3629                           
  3630                           ;APDS9960.c: 37:     wireWriteDataByte(0x81, 219);
  3631  004D  30DB               	movlw	219
  3632  004E  0020               	movlb	0	; select bank0
  3633  004F  00BA               	movwf	??_initialize
  3634  0050  083A               	movf	??_initialize,w
  3635  0051  00F1               	movwf	wireWriteDataByte@val
  3636  0052  3081               	movlw	129
  3637  0053  3184  244C  3180   	fcall	_wireWriteDataByte
  3638                           
  3639                           ;APDS9960.c: 38:     wireWriteDataByte(0x83, 246);
  3640  0056  30F6               	movlw	246
  3641  0057  0020               	movlb	0	; select bank0
  3642  0058  00BA               	movwf	??_initialize
  3643  0059  083A               	movf	??_initialize,w
  3644  005A  00F1               	movwf	wireWriteDataByte@val
  3645  005B  3083               	movlw	131
  3646  005C  3184  244C  3180   	fcall	_wireWriteDataByte
  3647                           
  3648                           ;APDS9960.c: 39:     wireWriteDataByte(0x8E, 0x87);
  3649  005F  3087               	movlw	135
  3650  0060  0020               	movlb	0	; select bank0
  3651  0061  00BA               	movwf	??_initialize
  3652  0062  083A               	movf	??_initialize,w
  3653  0063  00F1               	movwf	wireWriteDataByte@val
  3654  0064  308E               	movlw	142
  3655  0065  3184  244C  3180   	fcall	_wireWriteDataByte
  3656                           
  3657                           ;APDS9960.c: 40:     wireWriteDataByte(0x9D, 0) ;
  3658  0068  01F1               	clrf	wireWriteDataByte@val
  3659  0069  309D               	movlw	157
  3660  006A  3184  244C  3180   	fcall	_wireWriteDataByte
  3661                           
  3662                           ;APDS9960.c: 41:     wireWriteDataByte(0x9E, 0) ;
  3663  006D  01F1               	clrf	wireWriteDataByte@val
  3664  006E  309E               	movlw	158
  3665  006F  3184  244C  3180   	fcall	_wireWriteDataByte
  3666                           
  3667                           ;APDS9960.c: 42:     wireWriteDataByte(0x8D, 0x60) ;
  3668  0072  3060               	movlw	96
  3669  0073  0020               	movlb	0	; select bank0
  3670  0074  00BA               	movwf	??_initialize
  3671  0075  083A               	movf	??_initialize,w
  3672  0076  00F1               	movwf	wireWriteDataByte@val
  3673  0077  308D               	movlw	141
  3674  0078  3184  244C  3180   	fcall	_wireWriteDataByte
  3675                           
  3676                           ;APDS9960.c: 43:     setLEDDrive(0);
  3677  007B  3000               	movlw	0
  3678  007C  3183  230A  3180   	fcall	_setLEDDrive
  3679                           
  3680                           ;APDS9960.c: 44:     setProximityGain(2);
  3681  007F  3002               	movlw	2
  3682  0080  3182  22E1  3180   	fcall	_setProximityGain
  3683                           
  3684                           ;APDS9960.c: 45:     setAmbientLightGain(1);
  3685  0083  3001               	movlw	1
  3686  0084  3184  2430  3180   	fcall	_setAmbientLightGain
  3687                           
  3688                           ;APDS9960.c: 46:     if( !setProxIntLowThresh(0) ) {
  3689  0087  3000               	movlw	0
  3690  0088  3184  2478  3180   	fcall	_setProxIntLowThresh
  3691  008B  3A00               	xorlw	0
  3692  008C  1903               	btfsc	3,2
  3693  008D  2846               	goto	l3030
  3694                           
  3695                           ;APDS9960.c: 50:     if( !setProxIntHighThresh(50) ) {
  3696  008E  3032               	movlw	50
  3697  008F  3184  2489  3180   	fcall	_setProxIntHighThresh
  3698  0092  3A00               	xorlw	0
  3699  0093  1903               	btfsc	3,2
  3700  0094  2846               	goto	l3030
  3701                           
  3702                           ;APDS9960.c: 55:     if( !setLightIntLowThreshold(0xFFFF) ) {
  3703  0095  30FF               	movlw	255
  3704  0096  00F5               	movwf	setLightIntLowThreshold@threshold
  3705  0097  30FF               	movlw	255
  3706  0098  00F6               	movwf	setLightIntLowThreshold@threshold+1
  3707  0099  3183  2380  3180   	fcall	_setLightIntLowThreshold
  3708  009C  3A00               	xorlw	0
  3709  009D  1903               	btfsc	3,2
  3710  009E  2846               	goto	l3030
  3711                           
  3712                           ;APDS9960.c: 58:     if( !setLightIntHighThreshold(0) ) {
  3713  009F  3000               	movlw	0
  3714  00A0  00F5               	movwf	setLightIntHighThreshold@threshold
  3715  00A1  00F6               	movwf	setLightIntHighThreshold@threshold+1
  3716  00A2  3183  23A4  3180   	fcall	_setLightIntHighThreshold
  3717  00A5  3A00               	xorlw	0
  3718  00A6  1903               	btfsc	3,2
  3719  00A7  2846               	goto	l3030
  3720                           
  3721                           ;APDS9960.c: 62:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  3722  00A8  3011               	movlw	17
  3723  00A9  0020               	movlb	0	; select bank0
  3724  00AA  00BA               	movwf	??_initialize
  3725  00AB  083A               	movf	??_initialize,w
  3726  00AC  00F1               	movwf	wireWriteDataByte@val
  3727  00AD  308C               	movlw	140
  3728  00AE  3184  244C  3180   	fcall	_wireWriteDataByte
  3729  00B1  0871               	movf	?_wireWriteDataByte,w
  3730  00B2  0472               	iorwf	?_wireWriteDataByte+1,w
  3731  00B3  1903               	btfsc	3,2
  3732  00B4  2846               	goto	l3030
  3733                           
  3734                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x90, 0x01) ) {
  3735  00B5  01F1               	clrf	wireWriteDataByte@val
  3736  00B6  0AF1               	incf	wireWriteDataByte@val,f
  3737  00B7  3090               	movlw	144
  3738  00B8  3184  244C  3180   	fcall	_wireWriteDataByte
  3739  00BB  0871               	movf	?_wireWriteDataByte,w
  3740  00BC  0472               	iorwf	?_wireWriteDataByte+1,w
  3741  00BD  1903               	btfsc	3,2
  3742  00BE  2846               	goto	l3030
  3743                           
  3744                           ;APDS9960.c: 69:     if( !wireWriteDataByte(0x9F, 0) ) {
  3745  00BF  01F1               	clrf	wireWriteDataByte@val
  3746  00C0  309F               	movlw	159
  3747  00C1  3184  244C  3180   	fcall	_wireWriteDataByte
  3748  00C4  0871               	movf	?_wireWriteDataByte,w
  3749  00C5  0472               	iorwf	?_wireWriteDataByte+1,w
  3750  00C6  1903               	btfsc	3,2
  3751  00C7  2846               	goto	l3030
  3752                           
  3753                           ;APDS9960.c: 73:     if( !setGestureEnterThresh(40) ) {
  3754  00C8  3028               	movlw	40
  3755  00C9  3184  24AB  3180   	fcall	_setGestureEnterThresh
  3756  00CC  3A00               	xorlw	0
  3757  00CD  1903               	btfsc	3,2
  3758  00CE  2846               	goto	l3030
  3759                           
  3760                           ;APDS9960.c: 77:     if( !setGestureExitThresh(30) ) {
  3761  00CF  301E               	movlw	30
  3762  00D0  3184  249A  3180   	fcall	_setGestureExitThresh
  3763  00D3  3A00               	xorlw	0
  3764  00D4  1903               	btfsc	3,2
  3765  00D5  2846               	goto	l3030
  3766                           
  3767                           ;APDS9960.c: 80:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  3768  00D6  3040               	movlw	64
  3769  00D7  0020               	movlb	0	; select bank0
  3770  00D8  00BA               	movwf	??_initialize
  3771  00D9  083A               	movf	??_initialize,w
  3772  00DA  00F1               	movwf	wireWriteDataByte@val
  3773  00DB  30A2               	movlw	162
  3774  00DC  3184  244C  3180   	fcall	_wireWriteDataByte
  3775  00DF  0871               	movf	?_wireWriteDataByte,w
  3776  00E0  0472               	iorwf	?_wireWriteDataByte+1,w
  3777  00E1  1903               	btfsc	3,2
  3778  00E2  2846               	goto	l3030
  3779                           
  3780                           ;APDS9960.c: 83:     if( !setGestureGain(2) ) {
  3781  00E3  3002               	movlw	2
  3782  00E4  3182  2255  3180   	fcall	_setGestureGain
  3783  00E7  3A00               	xorlw	0
  3784  00E8  1903               	btfsc	3,2
  3785  00E9  2846               	goto	l3030
  3786                           
  3787                           ;APDS9960.c: 86:     if( !setGestureLEDDrive(0) ) {
  3788  00EA  3000               	movlw	0
  3789  00EB  3182  2224  3180   	fcall	_setGestureLEDDrive
  3790  00EE  3A00               	xorlw	0
  3791  00EF  1903               	btfsc	3,2
  3792  00F0  2846               	goto	l3030
  3793                           
  3794                           ;APDS9960.c: 89:     if( !setGestureWaitTime(1) ) {
  3795  00F1  3001               	movlw	1
  3796  00F2  3183  23C8  3180   	fcall	_setGestureWaitTime
  3797  00F5  3A00               	xorlw	0
  3798  00F6  1903               	btfsc	3,2
  3799  00F7  2846               	goto	l3030
  3800                           
  3801                           ;APDS9960.c: 92:     if( !wireWriteDataByte(0xA4, 0) ) {
  3802  00F8  01F1               	clrf	wireWriteDataByte@val
  3803  00F9  30A4               	movlw	164
  3804  00FA  3184  244C  3180   	fcall	_wireWriteDataByte
  3805  00FD  0871               	movf	?_wireWriteDataByte,w
  3806  00FE  0472               	iorwf	?_wireWriteDataByte+1,w
  3807  00FF  1903               	btfsc	3,2
  3808  0100  2846               	goto	l3030
  3809                           
  3810                           ;APDS9960.c: 95:     if( !wireWriteDataByte(0xA5, 0) ) {
  3811  0101  01F1               	clrf	wireWriteDataByte@val
  3812  0102  30A5               	movlw	165
  3813  0103  3184  244C  3180   	fcall	_wireWriteDataByte
  3814  0106  0871               	movf	?_wireWriteDataByte,w
  3815  0107  0472               	iorwf	?_wireWriteDataByte+1,w
  3816  0108  1903               	btfsc	3,2
  3817  0109  2846               	goto	l3030
  3818                           
  3819                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA7, 0) ) {
  3820  010A  01F1               	clrf	wireWriteDataByte@val
  3821  010B  30A7               	movlw	167
  3822  010C  3184  244C  3180   	fcall	_wireWriteDataByte
  3823  010F  0871               	movf	?_wireWriteDataByte,w
  3824  0110  0472               	iorwf	?_wireWriteDataByte+1,w
  3825  0111  1903               	btfsc	3,2
  3826  0112  2846               	goto	l3030
  3827                           
  3828                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA9, 0) ) {
  3829  0113  01F1               	clrf	wireWriteDataByte@val
  3830  0114  30A9               	movlw	169
  3831  0115  3184  244C  3180   	fcall	_wireWriteDataByte
  3832  0118  0871               	movf	?_wireWriteDataByte,w
  3833  0119  0472               	iorwf	?_wireWriteDataByte+1,w
  3834  011A  1903               	btfsc	3,2
  3835  011B  2846               	goto	l3030
  3836                           
  3837                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  3838  011C  30C9               	movlw	201
  3839  011D  0020               	movlb	0	; select bank0
  3840  011E  00BA               	movwf	??_initialize
  3841  011F  083A               	movf	??_initialize,w
  3842  0120  00F1               	movwf	wireWriteDataByte@val
  3843  0121  30A6               	movlw	166
  3844  0122  3184  244C  3180   	fcall	_wireWriteDataByte
  3845  0125  0871               	movf	?_wireWriteDataByte,w
  3846  0126  0472               	iorwf	?_wireWriteDataByte+1,w
  3847  0127  1903               	btfsc	3,2
  3848  0128  2846               	goto	l3030
  3849                           
  3850                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xAA, 0) ) {
  3851  0129  01F1               	clrf	wireWriteDataByte@val
  3852  012A  30AA               	movlw	170
  3853  012B  3184  244C  3180   	fcall	_wireWriteDataByte
  3854  012E  0871               	movf	?_wireWriteDataByte,w
  3855  012F  0472               	iorwf	?_wireWriteDataByte+1,w
  3856  0130  1903               	btfsc	3,2
  3857  0131  2846               	goto	l3030
  3858                           
  3859                           ;APDS9960.c: 110:     if( !setGestureIntEnable(0) ) {
  3860  0132  3000               	movlw	0
  3861  0133  3183  2333  3180   	fcall	_setGestureIntEnable
  3862  0136  3A00               	xorlw	0
  3863  0137  1903               	btfsc	3,2
  3864  0138  2846               	goto	l3030
  3865                           
  3866                           ;APDS9960.c: 114:     return 1;
  3867  0139  3001               	movlw	1
  3868  013A  0008               	return
  3869  013B                     __end_of_initialize:	
  3870                           
  3871                           	psect	text2
  3872  02E1                     __ptext2:	
  3873 ;; *************** function _setProximityGain *****************
  3874 ;; Defined at:
  3875 ;;		line 186 in file "APDS9960.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  drive           1    wreg     unsigned char 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  drive           1    1[BANK0 ] unsigned char 
  3880 ;;  val             1    0[BANK0 ] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      _Bool 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:        4 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    6
  3897 ;; This function calls:
  3898 ;;		_wireReadDataByte
  3899 ;;		_wireWriteDataByte
  3900 ;; This function is called by:
  3901 ;;		_initialize
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _setProximityGain
  3907  02E1                     _setProximityGain:	
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  3911                           ;setProximityGain@drive stored from wreg
  3912  02E1  0020               	movlb	0	; select bank0
  3913  02E2  00B7               	movwf	setProximityGain@drive
  3914                           
  3915                           ;APDS9960.c: 186: _Bool setProximityGain(uint8_t drive);APDS9960.c: 187: {;APDS9960.c: 1
      +                          88:     uint8_t val;;APDS9960.c: 191:     val=wireReadDataByte(0x8F);
  3916  02E3  308F               	movlw	143
  3917  02E4  3184  2410  3182   	fcall	_wireReadDataByte
  3918  02E7  00FB               	movwf	??_setProximityGain
  3919  02E8  087B               	movf	??_setProximityGain,w
  3920  02E9  0020               	movlb	0	; select bank0
  3921  02EA  00B6               	movwf	setProximityGain@val
  3922                           
  3923                           ;APDS9960.c: 193:     drive &= 0b00000011;
  3924  02EB  3003               	movlw	3
  3925  02EC  00FB               	movwf	??_setProximityGain
  3926  02ED  087B               	movf	??_setProximityGain,w
  3927  02EE  05B7               	andwf	setProximityGain@drive,f
  3928                           
  3929                           ;APDS9960.c: 194:     drive = drive << 2;
  3930  02EF  0837               	movf	setProximityGain@drive,w
  3931  02F0  00FB               	movwf	??_setProximityGain
  3932  02F1  3001               	movlw	1
  3933  02F2                     u1815:	
  3934  02F2  35FB               	lslf	??_setProximityGain,f
  3935  02F3  3EFF               	addlw	-1
  3936  02F4  1D03               	skipz
  3937  02F5  2AF2               	goto	u1815
  3938  02F6  357B               	lslf	??_setProximityGain,w
  3939  02F7  00FC               	movwf	??_setProximityGain+1
  3940  02F8  087C               	movf	??_setProximityGain+1,w
  3941  02F9  00B7               	movwf	setProximityGain@drive
  3942                           
  3943                           ;APDS9960.c: 195:     val &= 0b11110011;
  3944  02FA  30F3               	movlw	243
  3945  02FB  00FB               	movwf	??_setProximityGain
  3946  02FC  087B               	movf	??_setProximityGain,w
  3947  02FD  05B6               	andwf	setProximityGain@val,f
  3948                           
  3949                           ;APDS9960.c: 196:     val |= drive;
  3950  02FE  0837               	movf	setProximityGain@drive,w
  3951  02FF  00FB               	movwf	??_setProximityGain
  3952  0300  087B               	movf	??_setProximityGain,w
  3953  0301  04B6               	iorwf	setProximityGain@val,f
  3954                           
  3955                           ;APDS9960.c: 199:     if( !wireWriteDataByte(0x8F, val) ) {
  3956  0302  0836               	movf	setProximityGain@val,w
  3957  0303  00FB               	movwf	??_setProximityGain
  3958  0304  087B               	movf	??_setProximityGain,w
  3959  0305  00F1               	movwf	wireWriteDataByte@val
  3960  0306  308F               	movlw	143
  3961  0307  3184  244C         	fcall	_wireWriteDataByte
  3962  0309  0008               	return
  3963  030A                     __end_of_setProximityGain:	
  3964                           
  3965                           	psect	text3
  3966  0478                     __ptext3:	
  3967 ;; *************** function _setProxIntLowThresh *****************
  3968 ;; Defined at:
  3969 ;;		line 228 in file "APDS9960.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  threshold       1    wreg     unsigned char 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  threshold       1    6[COMMON] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      _Bool 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:        2 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    6
  3990 ;; This function calls:
  3991 ;;		_wireWriteDataByte
  3992 ;; This function is called by:
  3993 ;;		_initialize
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           
  3998                           ;psect for function _setProxIntLowThresh
  3999  0478                     _setProxIntLowThresh:	
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  4003                           ;setProxIntLowThresh@threshold stored from wreg
  4004  0478  00F6               	movwf	setProxIntLowThresh@threshold
  4005                           
  4006                           ;APDS9960.c: 228: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 229: {;APDS99
      +                          60.c: 230:     if( !wireWriteDataByte(0x89, threshold) ) {
  4007  0479  0876               	movf	setProxIntLowThresh@threshold,w
  4008  047A  00F5               	movwf	??_setProxIntLowThresh
  4009  047B  0875               	movf	??_setProxIntLowThresh,w
  4010  047C  00F1               	movwf	wireWriteDataByte@val
  4011  047D  3089               	movlw	137
  4012  047E  3184  244C  3184   	fcall	_wireWriteDataByte
  4013  0481  0871               	movf	?_wireWriteDataByte,w
  4014  0482  0472               	iorwf	?_wireWriteDataByte+1,w
  4015  0483  1D03               	btfss	3,2
  4016  0484  2C87               	goto	l2814
  4017                           
  4018                           ;APDS9960.c: 231:         return 0;
  4019  0485  3000               	movlw	0
  4020  0486  0008               	return
  4021  0487                     l2814:	
  4022                           
  4023                           ;APDS9960.c: 234:     return 1;
  4024  0487  3001               	movlw	1
  4025  0488  0008               	return
  4026  0489                     __end_of_setProxIntLowThresh:	
  4027                           
  4028                           	psect	text4
  4029  0489                     __ptext4:	
  4030 ;; *************** function _setProxIntHighThresh *****************
  4031 ;; Defined at:
  4032 ;;		line 238 in file "APDS9960.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  threshold       1    wreg     unsigned char 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  threshold       1    6[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      _Bool 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;Total ram usage:        2 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    6
  4053 ;; This function calls:
  4054 ;;		_wireWriteDataByte
  4055 ;; This function is called by:
  4056 ;;		_initialize
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _setProxIntHighThresh
  4062  0489                     _setProxIntHighThresh:	
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  4066                           ;setProxIntHighThresh@threshold stored from wreg
  4067  0489  00F6               	movwf	setProxIntHighThresh@threshold
  4068                           
  4069                           ;APDS9960.c: 238: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 239: {;APDS9
      +                          960.c: 240:     if( !wireWriteDataByte(0x8B, threshold) ) {
  4070  048A  0876               	movf	setProxIntHighThresh@threshold,w
  4071  048B  00F5               	movwf	??_setProxIntHighThresh
  4072  048C  0875               	movf	??_setProxIntHighThresh,w
  4073  048D  00F1               	movwf	wireWriteDataByte@val
  4074  048E  308B               	movlw	139
  4075  048F  3184  244C  3184   	fcall	_wireWriteDataByte
  4076  0492  0871               	movf	?_wireWriteDataByte,w
  4077  0493  0472               	iorwf	?_wireWriteDataByte+1,w
  4078  0494  1D03               	btfss	3,2
  4079  0495  2C98               	goto	l2824
  4080                           
  4081                           ;APDS9960.c: 241:         return 0;
  4082  0496  3000               	movlw	0
  4083  0497  0008               	return
  4084  0498                     l2824:	
  4085                           
  4086                           ;APDS9960.c: 244:     return 1;
  4087  0498  3001               	movlw	1
  4088  0499  0008               	return
  4089  049A                     __end_of_setProxIntHighThresh:	
  4090                           
  4091                           	psect	text5
  4092  0380                     __ptext5:	
  4093 ;; *************** function _setLightIntLowThreshold *****************
  4094 ;; Defined at:
  4095 ;;		line 248 in file "APDS9960.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  threshold       2    5[COMMON] unsigned short 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  val_high        1    9[COMMON] unsigned char 
  4100 ;;  val_low         1    8[COMMON] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      _Bool 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;Total ram usage:        5 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    6
  4117 ;; This function calls:
  4118 ;;		_wireWriteDataByte
  4119 ;; This function is called by:
  4120 ;;		_initialize
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _setLightIntLowThreshold
  4126  0380                     _setLightIntLowThreshold:	
  4127                           
  4128                           ;APDS9960.c: 248: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 249: {;A
      +                          PDS9960.c: 250:     uint8_t val_low;;APDS9960.c: 251:     uint8_t val_high;;APDS9960.c: 
      +                          254:     val_low = threshold & 0x00FF;
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  4132  0380  0875               	movf	setLightIntLowThreshold@threshold,w
  4133  0381  00F7               	movwf	??_setLightIntLowThreshold
  4134  0382  0877               	movf	??_setLightIntLowThreshold,w
  4135  0383  00F8               	movwf	setLightIntLowThreshold@val_low
  4136                           
  4137                           ;APDS9960.c: 255:     val_high = (threshold & 0xFF00) >> 8;
  4138  0384  0876               	movf	setLightIntLowThreshold@threshold+1,w
  4139  0385  00F7               	movwf	??_setLightIntLowThreshold
  4140  0386  0877               	movf	??_setLightIntLowThreshold,w
  4141  0387  00F9               	movwf	setLightIntLowThreshold@val_high
  4142                           
  4143                           ;APDS9960.c: 258:     if( !wireWriteDataByte(0x84, val_low) ) {
  4144  0388  0878               	movf	setLightIntLowThreshold@val_low,w
  4145  0389  00F7               	movwf	??_setLightIntLowThreshold
  4146  038A  0877               	movf	??_setLightIntLowThreshold,w
  4147  038B  00F1               	movwf	wireWriteDataByte@val
  4148  038C  3084               	movlw	132
  4149  038D  3184  244C  3183   	fcall	_wireWriteDataByte
  4150  0390  0871               	movf	?_wireWriteDataByte,w
  4151  0391  0472               	iorwf	?_wireWriteDataByte+1,w
  4152  0392  1D03               	btfss	3,2
  4153  0393  2B96               	goto	l2838
  4154  0394                     l2834:	
  4155                           
  4156                           ;APDS9960.c: 259:         return 0;
  4157  0394  3000               	movlw	0
  4158  0395  0008               	return
  4159  0396                     l2838:	
  4160                           
  4161                           ;APDS9960.c: 263:     if( !wireWriteDataByte(0x85, val_high) ) {
  4162  0396  0879               	movf	setLightIntLowThreshold@val_high,w
  4163  0397  00F7               	movwf	??_setLightIntLowThreshold
  4164  0398  0877               	movf	??_setLightIntLowThreshold,w
  4165  0399  00F1               	movwf	wireWriteDataByte@val
  4166  039A  3085               	movlw	133
  4167  039B  3184  244C  3183   	fcall	_wireWriteDataByte
  4168  039E  0871               	movf	?_wireWriteDataByte,w
  4169  039F  0472               	iorwf	?_wireWriteDataByte+1,w
  4170  03A0  1903               	btfsc	3,2
  4171  03A1  2B94               	goto	l2834
  4172                           
  4173                           ;APDS9960.c: 267:     return 1;
  4174  03A2  3001               	movlw	1
  4175  03A3  0008               	return
  4176  03A4                     __end_of_setLightIntLowThreshold:	
  4177                           
  4178                           	psect	text6
  4179  03A4                     __ptext6:	
  4180 ;; *************** function _setLightIntHighThreshold *****************
  4181 ;; Defined at:
  4182 ;;		line 271 in file "APDS9960.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  threshold       2    5[COMMON] unsigned short 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  val_high        1    9[COMMON] unsigned char 
  4187 ;;  val_low         1    8[COMMON] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      _Bool 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;Total ram usage:        5 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    6
  4204 ;; This function calls:
  4205 ;;		_wireWriteDataByte
  4206 ;; This function is called by:
  4207 ;;		_initialize
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _setLightIntHighThreshold
  4213  03A4                     _setLightIntHighThreshold:	
  4214                           
  4215                           ;APDS9960.c: 271: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 272: {;
      +                          APDS9960.c: 273:     uint8_t val_low;;APDS9960.c: 274:     uint8_t val_high;;APDS9960.c:
      +                           277:     val_low = threshold & 0x00FF;
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  4219  03A4  0875               	movf	setLightIntHighThreshold@threshold,w
  4220  03A5  00F7               	movwf	??_setLightIntHighThreshold
  4221  03A6  0877               	movf	??_setLightIntHighThreshold,w
  4222  03A7  00F8               	movwf	setLightIntHighThreshold@val_low
  4223                           
  4224                           ;APDS9960.c: 278:     val_high = (threshold & 0xFF00) >> 8;
  4225  03A8  0876               	movf	setLightIntHighThreshold@threshold+1,w
  4226  03A9  00F7               	movwf	??_setLightIntHighThreshold
  4227  03AA  0877               	movf	??_setLightIntHighThreshold,w
  4228  03AB  00F9               	movwf	setLightIntHighThreshold@val_high
  4229                           
  4230                           ;APDS9960.c: 281:     if( !wireWriteDataByte(0x86, val_low) ) {
  4231  03AC  0878               	movf	setLightIntHighThreshold@val_low,w
  4232  03AD  00F7               	movwf	??_setLightIntHighThreshold
  4233  03AE  0877               	movf	??_setLightIntHighThreshold,w
  4234  03AF  00F1               	movwf	wireWriteDataByte@val
  4235  03B0  3086               	movlw	134
  4236  03B1  3184  244C  3183   	fcall	_wireWriteDataByte
  4237  03B4  0871               	movf	?_wireWriteDataByte,w
  4238  03B5  0472               	iorwf	?_wireWriteDataByte+1,w
  4239  03B6  1D03               	btfss	3,2
  4240  03B7  2BBA               	goto	l2858
  4241  03B8                     l2854:	
  4242                           
  4243                           ;APDS9960.c: 282:         return 0;
  4244  03B8  3000               	movlw	0
  4245  03B9  0008               	return
  4246  03BA                     l2858:	
  4247                           
  4248                           ;APDS9960.c: 286:     if( !wireWriteDataByte(0x87, val_high) ) {
  4249  03BA  0879               	movf	setLightIntHighThreshold@val_high,w
  4250  03BB  00F7               	movwf	??_setLightIntHighThreshold
  4251  03BC  0877               	movf	??_setLightIntHighThreshold,w
  4252  03BD  00F1               	movwf	wireWriteDataByte@val
  4253  03BE  3087               	movlw	135
  4254  03BF  3184  244C  3183   	fcall	_wireWriteDataByte
  4255  03C2  0871               	movf	?_wireWriteDataByte,w
  4256  03C3  0472               	iorwf	?_wireWriteDataByte+1,w
  4257  03C4  1903               	btfsc	3,2
  4258  03C5  2BB8               	goto	l2854
  4259                           
  4260                           ;APDS9960.c: 290:     return 1;
  4261  03C6  3001               	movlw	1
  4262  03C7  0008               	return
  4263  03C8                     __end_of_setLightIntHighThreshold:	
  4264                           
  4265                           	psect	text7
  4266  030A                     __ptext7:	
  4267 ;; *************** function _setLEDDrive *****************
  4268 ;; Defined at:
  4269 ;;		line 164 in file "APDS9960.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  drive           1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  drive           1    1[BANK0 ] unsigned char 
  4274 ;;  val             1    0[BANK0 ] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      _Bool 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0, pclath, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;Total ram usage:        4 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    6
  4291 ;; This function calls:
  4292 ;;		_wireReadDataByte
  4293 ;;		_wireWriteDataByte
  4294 ;; This function is called by:
  4295 ;;		_initialize
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _setLEDDrive
  4301  030A                     _setLEDDrive:	
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4305                           ;setLEDDrive@drive stored from wreg
  4306  030A  0020               	movlb	0	; select bank0
  4307  030B  00B7               	movwf	setLEDDrive@drive
  4308                           
  4309                           ;APDS9960.c: 164: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 165: {;APDS9960.c: 166:  
      +                             uint8_t val;;APDS9960.c: 169:     val=wireReadDataByte(0x8F);
  4310  030C  308F               	movlw	143
  4311  030D  3184  2410  3183   	fcall	_wireReadDataByte
  4312  0310  00FB               	movwf	??_setLEDDrive
  4313  0311  087B               	movf	??_setLEDDrive,w
  4314  0312  0020               	movlb	0	; select bank0
  4315  0313  00B6               	movwf	setLEDDrive@val
  4316                           
  4317                           ;APDS9960.c: 172:     drive &= 0b00000011;
  4318  0314  3003               	movlw	3
  4319  0315  00FB               	movwf	??_setLEDDrive
  4320  0316  087B               	movf	??_setLEDDrive,w
  4321  0317  05B7               	andwf	setLEDDrive@drive,f
  4322                           
  4323                           ;APDS9960.c: 173:     drive = drive << 6;
  4324  0318  0837               	movf	setLEDDrive@drive,w
  4325  0319  00FB               	movwf	??_setLEDDrive
  4326  031A  3005               	movlw	5
  4327  031B                     u1805:	
  4328  031B  35FB               	lslf	??_setLEDDrive,f
  4329  031C  3EFF               	addlw	-1
  4330  031D  1D03               	skipz
  4331  031E  2B1B               	goto	u1805
  4332  031F  357B               	lslf	??_setLEDDrive,w
  4333  0320  00FC               	movwf	??_setLEDDrive+1
  4334  0321  087C               	movf	??_setLEDDrive+1,w
  4335  0322  00B7               	movwf	setLEDDrive@drive
  4336                           
  4337                           ;APDS9960.c: 174:     val &= 0b00111111;
  4338  0323  303F               	movlw	63
  4339  0324  00FB               	movwf	??_setLEDDrive
  4340  0325  087B               	movf	??_setLEDDrive,w
  4341  0326  05B6               	andwf	setLEDDrive@val,f
  4342                           
  4343                           ;APDS9960.c: 175:     val |= drive;
  4344  0327  0837               	movf	setLEDDrive@drive,w
  4345  0328  00FB               	movwf	??_setLEDDrive
  4346  0329  087B               	movf	??_setLEDDrive,w
  4347  032A  04B6               	iorwf	setLEDDrive@val,f
  4348                           
  4349                           ;APDS9960.c: 178:     if( !wireWriteDataByte(0x8F, val) ) {
  4350  032B  0836               	movf	setLEDDrive@val,w
  4351  032C  00FB               	movwf	??_setLEDDrive
  4352  032D  087B               	movf	??_setLEDDrive,w
  4353  032E  00F1               	movwf	wireWriteDataByte@val
  4354  032F  308F               	movlw	143
  4355  0330  3184  244C         	fcall	_wireWriteDataByte
  4356  0332  0008               	return
  4357  0333                     __end_of_setLEDDrive:	
  4358                           
  4359                           	psect	text8
  4360  03C8                     __ptext8:	
  4361 ;; *************** function _setGestureWaitTime *****************
  4362 ;; Defined at:
  4363 ;;		line 360 in file "APDS9960.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  time            1    wreg     unsigned char 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  time            1   12[COMMON] unsigned char 
  4368 ;;  val             1   13[COMMON] unsigned char 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      _Bool 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, pclath, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;Total ram usage:        3 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    6
  4385 ;; This function calls:
  4386 ;;		_wireReadDataByte
  4387 ;;		_wireWriteDataByte
  4388 ;; This function is called by:
  4389 ;;		_initialize
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _setGestureWaitTime
  4395  03C8                     _setGestureWaitTime:	
  4396                           
  4397                           ;incstack = 0
  4398                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  4399                           ;setGestureWaitTime@time stored from wreg
  4400  03C8  00FC               	movwf	setGestureWaitTime@time
  4401                           
  4402                           ;APDS9960.c: 360: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 361: {;APDS9960.c: 
      +                          362:     uint8_t val;;APDS9960.c: 365:     val = wireReadDataByte(0xA3);
  4403  03C9  30A3               	movlw	163
  4404  03CA  3184  2410  3183   	fcall	_wireReadDataByte
  4405  03CD  00FB               	movwf	??_setGestureWaitTime
  4406  03CE  087B               	movf	??_setGestureWaitTime,w
  4407  03CF  00FD               	movwf	setGestureWaitTime@val
  4408                           
  4409                           ;APDS9960.c: 368:     time &= 0b00000111;
  4410  03D0  3007               	movlw	7
  4411  03D1  00FB               	movwf	??_setGestureWaitTime
  4412  03D2  087B               	movf	??_setGestureWaitTime,w
  4413  03D3  05FC               	andwf	setGestureWaitTime@time,f
  4414                           
  4415                           ;APDS9960.c: 369:     val &= 0b11111000;
  4416  03D4  30F8               	movlw	248
  4417  03D5  00FB               	movwf	??_setGestureWaitTime
  4418  03D6  087B               	movf	??_setGestureWaitTime,w
  4419  03D7  05FD               	andwf	setGestureWaitTime@val,f
  4420                           
  4421                           ;APDS9960.c: 370:     val |= time;
  4422  03D8  087C               	movf	setGestureWaitTime@time,w
  4423  03D9  00FB               	movwf	??_setGestureWaitTime
  4424  03DA  087B               	movf	??_setGestureWaitTime,w
  4425  03DB  04FD               	iorwf	setGestureWaitTime@val,f
  4426                           
  4427                           ;APDS9960.c: 373:     if( !wireWriteDataByte(0xA3, val) ) {
  4428  03DC  087D               	movf	setGestureWaitTime@val,w
  4429  03DD  00FB               	movwf	??_setGestureWaitTime
  4430  03DE  087B               	movf	??_setGestureWaitTime,w
  4431  03DF  00F1               	movwf	wireWriteDataByte@val
  4432  03E0  30A3               	movlw	163
  4433  03E1  3184  244C  3183   	fcall	_wireWriteDataByte
  4434  03E4  0871               	movf	?_wireWriteDataByte,w
  4435  03E5  0472               	iorwf	?_wireWriteDataByte+1,w
  4436  03E6  1D03               	btfss	3,2
  4437  03E7  2BEA               	goto	l2938
  4438                           
  4439                           ;APDS9960.c: 374:         return 0;
  4440  03E8  3000               	movlw	0
  4441  03E9  0008               	return
  4442  03EA                     l2938:	
  4443                           
  4444                           ;APDS9960.c: 377:     return 1;
  4445  03EA  3001               	movlw	1
  4446  03EB  0008               	return
  4447  03EC                     __end_of_setGestureWaitTime:	
  4448                           
  4449                           	psect	text9
  4450  0224                     __ptext9:	
  4451 ;; *************** function _setGestureLEDDrive *****************
  4452 ;; Defined at:
  4453 ;;		line 337 in file "APDS9960.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  drive           1    wreg     unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  drive           1    1[BANK0 ] unsigned char 
  4458 ;;  val             1    0[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      _Bool 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;Total ram usage:        4 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    6
  4475 ;; This function calls:
  4476 ;;		_wireReadDataByte
  4477 ;;		_wireWriteDataByte
  4478 ;; This function is called by:
  4479 ;;		_initialize
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _setGestureLEDDrive
  4485  0224                     _setGestureLEDDrive:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4489                           ;setGestureLEDDrive@drive stored from wreg
  4490  0224  0020               	movlb	0	; select bank0
  4491  0225  00B7               	movwf	setGestureLEDDrive@drive
  4492                           
  4493                           ;APDS9960.c: 337: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 338: {;APDS9960.c:
      +                           339:     uint8_t val;;APDS9960.c: 342:     val = wireReadDataByte(0xA3);
  4494  0226  30A3               	movlw	163
  4495  0227  3184  2410  3182   	fcall	_wireReadDataByte
  4496  022A  00FB               	movwf	??_setGestureLEDDrive
  4497  022B  087B               	movf	??_setGestureLEDDrive,w
  4498  022C  0020               	movlb	0	; select bank0
  4499  022D  00B6               	movwf	setGestureLEDDrive@val
  4500                           
  4501                           ;APDS9960.c: 346:     drive &= 0b00000011;
  4502  022E  3003               	movlw	3
  4503  022F  00FB               	movwf	??_setGestureLEDDrive
  4504  0230  087B               	movf	??_setGestureLEDDrive,w
  4505  0231  05B7               	andwf	setGestureLEDDrive@drive,f
  4506                           
  4507                           ;APDS9960.c: 347:     drive = drive << 3;
  4508  0232  0837               	movf	setGestureLEDDrive@drive,w
  4509  0233  00FB               	movwf	??_setGestureLEDDrive
  4510  0234  3002               	movlw	2
  4511  0235                     u1925:	
  4512  0235  35FB               	lslf	??_setGestureLEDDrive,f
  4513  0236  3EFF               	addlw	-1
  4514  0237  1D03               	skipz
  4515  0238  2A35               	goto	u1925
  4516  0239  357B               	lslf	??_setGestureLEDDrive,w
  4517  023A  00FC               	movwf	??_setGestureLEDDrive+1
  4518  023B  087C               	movf	??_setGestureLEDDrive+1,w
  4519  023C  00B7               	movwf	setGestureLEDDrive@drive
  4520                           
  4521                           ;APDS9960.c: 348:     val &= 0b11100111;
  4522  023D  30E7               	movlw	231
  4523  023E  00FB               	movwf	??_setGestureLEDDrive
  4524  023F  087B               	movf	??_setGestureLEDDrive,w
  4525  0240  05B6               	andwf	setGestureLEDDrive@val,f
  4526                           
  4527                           ;APDS9960.c: 349:     val |= drive;
  4528  0241  0837               	movf	setGestureLEDDrive@drive,w
  4529  0242  00FB               	movwf	??_setGestureLEDDrive
  4530  0243  087B               	movf	??_setGestureLEDDrive,w
  4531  0244  04B6               	iorwf	setGestureLEDDrive@val,f
  4532                           
  4533                           ;APDS9960.c: 352:     if( !wireWriteDataByte(0xA3, val) ) {
  4534  0245  0836               	movf	setGestureLEDDrive@val,w
  4535  0246  00FB               	movwf	??_setGestureLEDDrive
  4536  0247  087B               	movf	??_setGestureLEDDrive,w
  4537  0248  00F1               	movwf	wireWriteDataByte@val
  4538  0249  30A3               	movlw	163
  4539  024A  3184  244C  3182   	fcall	_wireWriteDataByte
  4540  024D  0871               	movf	?_wireWriteDataByte,w
  4541  024E  0472               	iorwf	?_wireWriteDataByte+1,w
  4542  024F  1D03               	btfss	3,2
  4543  0250  2A53               	goto	l2920
  4544                           
  4545                           ;APDS9960.c: 353:         return 0;
  4546  0251  3000               	movlw	0
  4547  0252  0008               	return
  4548  0253                     l2920:	
  4549                           
  4550                           ;APDS9960.c: 356:     return 1;
  4551  0253  3001               	movlw	1
  4552  0254  0008               	return
  4553  0255                     __end_of_setGestureLEDDrive:	
  4554                           
  4555                           	psect	text10
  4556  0255                     __ptext10:	
  4557 ;; *************** function _setGestureGain *****************
  4558 ;; Defined at:
  4559 ;;		line 314 in file "APDS9960.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  gain            1    wreg     unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  gain            1    1[BANK0 ] unsigned char 
  4564 ;;  val             1    0[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      _Bool 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;Total ram usage:        4 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    6
  4581 ;; This function calls:
  4582 ;;		_wireReadDataByte
  4583 ;;		_wireWriteDataByte
  4584 ;; This function is called by:
  4585 ;;		_initialize
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _setGestureGain
  4591  0255                     _setGestureGain:	
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  4595                           ;setGestureGain@gain stored from wreg
  4596  0255  0020               	movlb	0	; select bank0
  4597  0256  00B7               	movwf	setGestureGain@gain
  4598                           
  4599                           ;APDS9960.c: 314: _Bool setGestureGain(uint8_t gain);APDS9960.c: 315: {;APDS9960.c: 316:
      +                               uint8_t val;;APDS9960.c: 319:     val = wireReadDataByte(0xA3);
  4600  0257  30A3               	movlw	163
  4601  0258  3184  2410  3182   	fcall	_wireReadDataByte
  4602  025B  00FB               	movwf	??_setGestureGain
  4603  025C  087B               	movf	??_setGestureGain,w
  4604  025D  0020               	movlb	0	; select bank0
  4605  025E  00B6               	movwf	setGestureGain@val
  4606                           
  4607                           ;APDS9960.c: 323:     gain &= 0b00000011;
  4608  025F  3003               	movlw	3
  4609  0260  00FB               	movwf	??_setGestureGain
  4610  0261  087B               	movf	??_setGestureGain,w
  4611  0262  05B7               	andwf	setGestureGain@gain,f
  4612                           
  4613                           ;APDS9960.c: 324:     gain = gain << 5;
  4614  0263  0837               	movf	setGestureGain@gain,w
  4615  0264  00FB               	movwf	??_setGestureGain
  4616  0265  3004               	movlw	4
  4617  0266                     u1905:	
  4618  0266  35FB               	lslf	??_setGestureGain,f
  4619  0267  3EFF               	addlw	-1
  4620  0268  1D03               	skipz
  4621  0269  2A66               	goto	u1905
  4622  026A  357B               	lslf	??_setGestureGain,w
  4623  026B  00FC               	movwf	??_setGestureGain+1
  4624  026C  087C               	movf	??_setGestureGain+1,w
  4625  026D  00B7               	movwf	setGestureGain@gain
  4626                           
  4627                           ;APDS9960.c: 325:     val &= 0b10011111;
  4628  026E  309F               	movlw	159
  4629  026F  00FB               	movwf	??_setGestureGain
  4630  0270  087B               	movf	??_setGestureGain,w
  4631  0271  05B6               	andwf	setGestureGain@val,f
  4632                           
  4633                           ;APDS9960.c: 326:     val |= gain;
  4634  0272  0837               	movf	setGestureGain@gain,w
  4635  0273  00FB               	movwf	??_setGestureGain
  4636  0274  087B               	movf	??_setGestureGain,w
  4637  0275  04B6               	iorwf	setGestureGain@val,f
  4638                           
  4639                           ;APDS9960.c: 329:     if( !wireWriteDataByte(0xA3, val) ) {
  4640  0276  0836               	movf	setGestureGain@val,w
  4641  0277  00FB               	movwf	??_setGestureGain
  4642  0278  087B               	movf	??_setGestureGain,w
  4643  0279  00F1               	movwf	wireWriteDataByte@val
  4644  027A  30A3               	movlw	163
  4645  027B  3184  244C  3182   	fcall	_wireWriteDataByte
  4646  027E  0871               	movf	?_wireWriteDataByte,w
  4647  027F  0472               	iorwf	?_wireWriteDataByte+1,w
  4648  0280  1D03               	btfss	3,2
  4649  0281  2A84               	goto	l2902
  4650                           
  4651                           ;APDS9960.c: 330:         return 0;
  4652  0282  3000               	movlw	0
  4653  0283  0008               	return
  4654  0284                     l2902:	
  4655                           
  4656                           ;APDS9960.c: 333:     return 1;
  4657  0284  3001               	movlw	1
  4658  0285  0008               	return
  4659  0286                     __end_of_setGestureGain:	
  4660                           
  4661                           	psect	text11
  4662  049A                     __ptext11:	
  4663 ;; *************** function _setGestureExitThresh *****************
  4664 ;; Defined at:
  4665 ;;		line 304 in file "APDS9960.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  threshold       1    wreg     unsigned char 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  threshold       1    6[COMMON] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      _Bool 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;Total ram usage:        2 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    6
  4686 ;; This function calls:
  4687 ;;		_wireWriteDataByte
  4688 ;; This function is called by:
  4689 ;;		_initialize
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _setGestureExitThresh
  4695  049A                     _setGestureExitThresh:	
  4696                           
  4697                           ;incstack = 0
  4698                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  4699                           ;setGestureExitThresh@threshold stored from wreg
  4700  049A  00F6               	movwf	setGestureExitThresh@threshold
  4701                           
  4702                           ;APDS9960.c: 304: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 305: {;APDS9
      +                          960.c: 306:     if( !wireWriteDataByte(0xA1, threshold) ) {
  4703  049B  0876               	movf	setGestureExitThresh@threshold,w
  4704  049C  00F5               	movwf	??_setGestureExitThresh
  4705  049D  0875               	movf	??_setGestureExitThresh,w
  4706  049E  00F1               	movwf	wireWriteDataByte@val
  4707  049F  30A1               	movlw	161
  4708  04A0  3184  244C  3184   	fcall	_wireWriteDataByte
  4709  04A3  0871               	movf	?_wireWriteDataByte,w
  4710  04A4  0472               	iorwf	?_wireWriteDataByte+1,w
  4711  04A5  1D03               	btfss	3,2
  4712  04A6  2CA9               	goto	l2884
  4713                           
  4714                           ;APDS9960.c: 307:         return 0;
  4715  04A7  3000               	movlw	0
  4716  04A8  0008               	return
  4717  04A9                     l2884:	
  4718                           
  4719                           ;APDS9960.c: 310:     return 1;
  4720  04A9  3001               	movlw	1
  4721  04AA  0008               	return
  4722  04AB                     __end_of_setGestureExitThresh:	
  4723                           
  4724                           	psect	text12
  4725  04AB                     __ptext12:	
  4726 ;; *************** function _setGestureEnterThresh *****************
  4727 ;; Defined at:
  4728 ;;		line 294 in file "APDS9960.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  threshold       1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  threshold       1    6[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      _Bool 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;Total ram usage:        2 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    6
  4749 ;; This function calls:
  4750 ;;		_wireWriteDataByte
  4751 ;; This function is called by:
  4752 ;;		_initialize
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _setGestureEnterThresh
  4758  04AB                     _setGestureEnterThresh:	
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  4762                           ;setGestureEnterThresh@threshold stored from wreg
  4763  04AB  00F6               	movwf	setGestureEnterThresh@threshold
  4764                           
  4765                           ;APDS9960.c: 294: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 295: {;APDS
      +                          9960.c: 296:     if( !wireWriteDataByte(0xA0, threshold) ) {
  4766  04AC  0876               	movf	setGestureEnterThresh@threshold,w
  4767  04AD  00F5               	movwf	??_setGestureEnterThresh
  4768  04AE  0875               	movf	??_setGestureEnterThresh,w
  4769  04AF  00F1               	movwf	wireWriteDataByte@val
  4770  04B0  30A0               	movlw	160
  4771  04B1  3184  244C  3184   	fcall	_wireWriteDataByte
  4772  04B4  0871               	movf	?_wireWriteDataByte,w
  4773  04B5  0472               	iorwf	?_wireWriteDataByte+1,w
  4774  04B6  1D03               	btfss	3,2
  4775  04B7  2CBA               	goto	l2874
  4776                           
  4777                           ;APDS9960.c: 297:         return 0;
  4778  04B8  3000               	movlw	0
  4779  04B9  0008               	return
  4780  04BA                     l2874:	
  4781                           
  4782                           ;APDS9960.c: 300:     return 1;
  4783  04BA  3001               	movlw	1
  4784  04BB  0008               	return
  4785  04BC                     __end_of_setGestureEnterThresh:	
  4786                           
  4787                           	psect	text13
  4788  0430                     __ptext13:	
  4789 ;; *************** function _setAmbientLightGain *****************
  4790 ;; Defined at:
  4791 ;;		line 207 in file "APDS9960.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  drive           1    wreg     unsigned char 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  drive           1   12[COMMON] unsigned char 
  4796 ;;  val             1   13[COMMON] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      _Bool 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;Total ram usage:        3 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    6
  4813 ;; This function calls:
  4814 ;;		_wireReadDataByte
  4815 ;;		_wireWriteDataByte
  4816 ;; This function is called by:
  4817 ;;		_initialize
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _setAmbientLightGain
  4823  0430                     _setAmbientLightGain:	
  4824                           
  4825                           ;incstack = 0
  4826                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  4827                           ;setAmbientLightGain@drive stored from wreg
  4828  0430  00FC               	movwf	setAmbientLightGain@drive
  4829                           
  4830                           ;APDS9960.c: 207: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 208: {;APDS9960.c
      +                          : 209:     uint8_t val;;APDS9960.c: 212:     val= wireReadDataByte(0x8F);
  4831  0431  308F               	movlw	143
  4832  0432  3184  2410  3184   	fcall	_wireReadDataByte
  4833  0435  00FB               	movwf	??_setAmbientLightGain
  4834  0436  087B               	movf	??_setAmbientLightGain,w
  4835  0437  00FD               	movwf	setAmbientLightGain@val
  4836                           
  4837                           ;APDS9960.c: 215:     drive &= 0b00000011;
  4838  0438  3003               	movlw	3
  4839  0439  00FB               	movwf	??_setAmbientLightGain
  4840  043A  087B               	movf	??_setAmbientLightGain,w
  4841  043B  05FC               	andwf	setAmbientLightGain@drive,f
  4842                           
  4843                           ;APDS9960.c: 216:     val &= 0b11111100;
  4844  043C  30FC               	movlw	252
  4845  043D  00FB               	movwf	??_setAmbientLightGain
  4846  043E  087B               	movf	??_setAmbientLightGain,w
  4847  043F  05FD               	andwf	setAmbientLightGain@val,f
  4848                           
  4849                           ;APDS9960.c: 217:     val |= drive;
  4850  0440  087C               	movf	setAmbientLightGain@drive,w
  4851  0441  00FB               	movwf	??_setAmbientLightGain
  4852  0442  087B               	movf	??_setAmbientLightGain,w
  4853  0443  04FD               	iorwf	setAmbientLightGain@val,f
  4854                           
  4855                           ;APDS9960.c: 220:     if( !wireWriteDataByte(0x8F, val) ) {
  4856  0444  087D               	movf	setAmbientLightGain@val,w
  4857  0445  00FB               	movwf	??_setAmbientLightGain
  4858  0446  087B               	movf	??_setAmbientLightGain,w
  4859  0447  00F1               	movwf	wireWriteDataByte@val
  4860  0448  308F               	movlw	143
  4861  0449  3184  244C         	fcall	_wireWriteDataByte
  4862  044B  0008               	return
  4863  044C                     __end_of_setAmbientLightGain:	
  4864                           
  4865                           	psect	text14
  4866  0531                     __ptext14:	
  4867 ;; *************** function _InitI2C *****************
  4868 ;; Defined at:
  4869 ;;		line 15 in file "i2c.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		None
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    4
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_initialize
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _InitI2C
  4899  0531                     _InitI2C:	
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _InitI2C: []
  4903  0531  0008               	return
  4904  0532                     __end_of_InitI2C:	
  4905                           
  4906                           	psect	text15
  4907  013B                     __ptext15:	
  4908 ;; *************** function _enableGestureSensor *****************
  4909 ;; Defined at:
  4910 ;;		line 403 in file "APDS9960.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  interrupts      1    wreg     _Bool 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  interrupts      1    5[BANK0 ] _Bool 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      _Bool 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;Total ram usage:        2 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    9
  4931 ;; This function calls:
  4932 ;;		_enablePower
  4933 ;;		_resetGestureParameters
  4934 ;;		_setGestureIntEnable
  4935 ;;		_setGestureMode
  4936 ;;		_setLEDBoost
  4937 ;;		_setMode
  4938 ;;		_wireWriteDataByte
  4939 ;; This function is called by:
  4940 ;;		_main
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _enableGestureSensor
  4946  013B                     _enableGestureSensor:	
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  4950                           ;enableGestureSensor@interrupts stored from wreg
  4951  013B  0020               	movlb	0	; select bank0
  4952  013C  00BB               	movwf	enableGestureSensor@interrupts
  4953                           
  4954                           ;APDS9960.c: 403: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 404: {;APDS9
      +                          960.c: 412:     resetGestureParameters();
  4955  013D  3184  2463  3181   	fcall	_resetGestureParameters
  4956                           
  4957                           ;APDS9960.c: 413:     if( !wireWriteDataByte(0x83, 0xFF) ) {
  4958  0140  30FF               	movlw	255
  4959  0141  0020               	movlb	0	; select bank0
  4960  0142  00BA               	movwf	??_enableGestureSensor
  4961  0143  083A               	movf	??_enableGestureSensor,w
  4962  0144  00F1               	movwf	wireWriteDataByte@val
  4963  0145  3083               	movlw	131
  4964  0146  3184  244C  3181   	fcall	_wireWriteDataByte
  4965  0149  0871               	movf	?_wireWriteDataByte,w
  4966  014A  0472               	iorwf	?_wireWriteDataByte+1,w
  4967  014B  1903               	btfsc	3,2
  4968  014C  2950               	goto	l3162
  4969  014D  2952               	goto	l3166
  4970  014E                     l3180:	
  4971                           
  4972                           ;APDS9960.c: 423:         if( !setGestureIntEnable(1) ) {
  4973  014E  3001               	movlw	1
  4974  014F  296B               	goto	L1
  4975  0150                     l3162:	
  4976                           
  4977                           ;APDS9960.c: 414:         return 0;
  4978  0150  3000               	movlw	0
  4979  0151  0008               	return
  4980  0152                     l3166:	
  4981                           
  4982                           ;APDS9960.c: 416:     if( !wireWriteDataByte(0x8E, 0x89) ) {
  4983  0152  3089               	movlw	137
  4984  0153  0020               	movlb	0	; select bank0
  4985  0154  00BA               	movwf	??_enableGestureSensor
  4986  0155  083A               	movf	??_enableGestureSensor,w
  4987  0156  00F1               	movwf	wireWriteDataByte@val
  4988  0157  308E               	movlw	142
  4989  0158  3184  244C  3181   	fcall	_wireWriteDataByte
  4990  015B  0871               	movf	?_wireWriteDataByte,w
  4991  015C  0472               	iorwf	?_wireWriteDataByte+1,w
  4992  015D  1903               	btfsc	3,2
  4993  015E  2950               	goto	l3162
  4994                           
  4995                           ;APDS9960.c: 419:     if( !setLEDBoost(3) ) {
  4996  015F  3003               	movlw	3
  4997  0160  3182  2286  3181   	fcall	_setLEDBoost
  4998  0163  3A00               	xorlw	0
  4999  0164  1903               	btfsc	3,2
  5000  0165  2950               	goto	l3162
  5001                           
  5002                           ;APDS9960.c: 422:     if( interrupts ) {
  5003  0166  0020               	movlb	0	; select bank0
  5004  0167  083B               	movf	enableGestureSensor@interrupts,w
  5005  0168  1D03               	btfss	3,2
  5006  0169  294E               	goto	l3180
  5007                           
  5008                           ;APDS9960.c: 427:         if( !setGestureIntEnable(0) ) {
  5009  016A  3000               	movlw	0
  5010  016B                     L1:	
  5011  016B  3183  2333  3181   	fcall	_setGestureIntEnable
  5012  016E  3A00               	xorlw	0
  5013  016F  1903               	btfsc	3,2
  5014  0170  2950               	goto	l3162
  5015                           
  5016                           ;APDS9960.c: 431:     if( !setGestureMode(1) ) {
  5017  0171  3001               	movlw	1
  5018  0172  3183  23EC  3181   	fcall	_setGestureMode
  5019  0175  3A00               	xorlw	0
  5020  0176  1903               	btfsc	3,2
  5021  0177  2950               	goto	l3162
  5022                           
  5023                           ;APDS9960.c: 434:     if( !enablePower() ){
  5024  0178  3184  24CB  3181   	fcall	_enablePower
  5025  017B  3A00               	xorlw	0
  5026  017C  1903               	btfsc	3,2
  5027  017D  2950               	goto	l3162
  5028                           
  5029                           ;APDS9960.c: 437:     if( !setMode(3, 1) ) {
  5030  017E  01FD               	clrf	setMode@enable
  5031  017F  0AFD               	incf	setMode@enable,f
  5032  0180  3003               	movlw	3
  5033  0181  3181  219B  3181   	fcall	_setMode
  5034  0184  3A00               	xorlw	0
  5035  0185  1903               	btfsc	3,2
  5036  0186  2950               	goto	l3162
  5037                           
  5038                           ;APDS9960.c: 440:     if( !setMode(2, 1) ) {
  5039  0187  01FD               	clrf	setMode@enable
  5040  0188  0AFD               	incf	setMode@enable,f
  5041  0189  3002               	movlw	2
  5042  018A  3181  219B  3181   	fcall	_setMode
  5043  018D  3A00               	xorlw	0
  5044  018E  1903               	btfsc	3,2
  5045  018F  2950               	goto	l3162
  5046                           
  5047                           ;APDS9960.c: 443:     if( !setMode(6, 1) ) {
  5048  0190  01FD               	clrf	setMode@enable
  5049  0191  0AFD               	incf	setMode@enable,f
  5050  0192  3006               	movlw	6
  5051  0193  3181  219B  3181   	fcall	_setMode
  5052  0196  3A00               	xorlw	0
  5053  0197  1903               	btfsc	3,2
  5054  0198  2950               	goto	l3162
  5055                           
  5056                           ;APDS9960.c: 447:     return 1;
  5057  0199  3001               	movlw	1
  5058  019A  0008               	return
  5059  019B                     __end_of_enableGestureSensor:	
  5060                           
  5061                           	psect	text16
  5062  0286                     __ptext16:	
  5063 ;; *************** function _setLEDBoost *****************
  5064 ;; Defined at:
  5065 ;;		line 478 in file "APDS9960.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  boost           1    wreg     unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  boost           1    1[BANK0 ] unsigned char 
  5070 ;;  val             1    0[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      _Bool 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, pclath, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;Total ram usage:        4 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    6
  5087 ;; This function calls:
  5088 ;;		_wireReadDataByte
  5089 ;;		_wireWriteDataByte
  5090 ;; This function is called by:
  5091 ;;		_enableGestureSensor
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _setLEDBoost
  5097  0286                     _setLEDBoost:	
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  5101                           ;setLEDBoost@boost stored from wreg
  5102  0286  0020               	movlb	0	; select bank0
  5103  0287  00B7               	movwf	setLEDBoost@boost
  5104                           
  5105                           ;APDS9960.c: 478: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 479: {;APDS9960.c: 480:  
      +                             uint8_t val;;APDS9960.c: 483:     val=wireReadDataByte(0x90);
  5106  0288  3090               	movlw	144
  5107  0289  3184  2410  3182   	fcall	_wireReadDataByte
  5108  028C  00FB               	movwf	??_setLEDBoost
  5109  028D  087B               	movf	??_setLEDBoost,w
  5110  028E  0020               	movlb	0	; select bank0
  5111  028F  00B6               	movwf	setLEDBoost@val
  5112                           
  5113                           ;APDS9960.c: 486:     boost &= 0b00000011;
  5114  0290  3003               	movlw	3
  5115  0291  00FB               	movwf	??_setLEDBoost
  5116  0292  087B               	movf	??_setLEDBoost,w
  5117  0293  05B7               	andwf	setLEDBoost@boost,f
  5118                           
  5119                           ;APDS9960.c: 487:     boost = boost << 4;
  5120  0294  0837               	movf	setLEDBoost@boost,w
  5121  0295  00FB               	movwf	??_setLEDBoost
  5122  0296  3003               	movlw	3
  5123  0297                     u1965:	
  5124  0297  35FB               	lslf	??_setLEDBoost,f
  5125  0298  3EFF               	addlw	-1
  5126  0299  1D03               	skipz
  5127  029A  2A97               	goto	u1965
  5128  029B  357B               	lslf	??_setLEDBoost,w
  5129  029C  00FC               	movwf	??_setLEDBoost+1
  5130  029D  087C               	movf	??_setLEDBoost+1,w
  5131  029E  00B7               	movwf	setLEDBoost@boost
  5132                           
  5133                           ;APDS9960.c: 488:     val &= 0b11001111;
  5134  029F  30CF               	movlw	207
  5135  02A0  00FB               	movwf	??_setLEDBoost
  5136  02A1  087B               	movf	??_setLEDBoost,w
  5137  02A2  05B6               	andwf	setLEDBoost@val,f
  5138                           
  5139                           ;APDS9960.c: 489:     val |= boost;
  5140  02A3  0837               	movf	setLEDBoost@boost,w
  5141  02A4  00FB               	movwf	??_setLEDBoost
  5142  02A5  087B               	movf	??_setLEDBoost,w
  5143  02A6  04B6               	iorwf	setLEDBoost@val,f
  5144                           
  5145                           ;APDS9960.c: 492:     if( !wireWriteDataByte(0x90, val) ) {
  5146  02A7  0836               	movf	setLEDBoost@val,w
  5147  02A8  00FB               	movwf	??_setLEDBoost
  5148  02A9  087B               	movf	??_setLEDBoost,w
  5149  02AA  00F1               	movwf	wireWriteDataByte@val
  5150  02AB  3090               	movlw	144
  5151  02AC  3184  244C  3182   	fcall	_wireWriteDataByte
  5152  02AF  0871               	movf	?_wireWriteDataByte,w
  5153  02B0  0472               	iorwf	?_wireWriteDataByte+1,w
  5154  02B1  1D03               	btfss	3,2
  5155  02B2  2AB5               	goto	l2976
  5156                           
  5157                           ;APDS9960.c: 493:         return 0;
  5158  02B3  3000               	movlw	0
  5159  02B4  0008               	return
  5160  02B5                     l2976:	
  5161                           
  5162                           ;APDS9960.c: 496:     return 1;
  5163  02B5  3001               	movlw	1
  5164  02B6  0008               	return
  5165  02B7                     __end_of_setLEDBoost:	
  5166                           
  5167                           	psect	text17
  5168  03EC                     __ptext17:	
  5169 ;; *************** function _setGestureMode *****************
  5170 ;; Defined at:
  5171 ;;		line 500 in file "APDS9960.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  mode            1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  mode            1   12[COMMON] unsigned char 
  5176 ;;  val             1   13[COMMON] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      _Bool 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;Total ram usage:        3 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    6
  5193 ;; This function calls:
  5194 ;;		_wireReadDataByte
  5195 ;;		_wireWriteDataByte
  5196 ;; This function is called by:
  5197 ;;		_enableGestureSensor
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function _setGestureMode
  5203  03EC                     _setGestureMode:	
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  5207                           ;setGestureMode@mode stored from wreg
  5208  03EC  00FC               	movwf	setGestureMode@mode
  5209                           
  5210                           ;APDS9960.c: 500: _Bool setGestureMode(uint8_t mode);APDS9960.c: 501: {;APDS9960.c: 502:
      +                               uint8_t val;;APDS9960.c: 505:     val = wireReadDataByte(0xAB);
  5211  03ED  30AB               	movlw	171
  5212  03EE  3184  2410  3183   	fcall	_wireReadDataByte
  5213  03F1  00FB               	movwf	??_setGestureMode
  5214  03F2  087B               	movf	??_setGestureMode,w
  5215  03F3  00FD               	movwf	setGestureMode@val
  5216                           
  5217                           ;APDS9960.c: 508:     mode &= 0b00000001;
  5218  03F4  3001               	movlw	1
  5219  03F5  00FB               	movwf	??_setGestureMode
  5220  03F6  087B               	movf	??_setGestureMode,w
  5221  03F7  05FC               	andwf	setGestureMode@mode,f
  5222                           
  5223                           ;APDS9960.c: 509:     val &= 0b11111110;
  5224  03F8  30FE               	movlw	254
  5225  03F9  00FB               	movwf	??_setGestureMode
  5226  03FA  087B               	movf	??_setGestureMode,w
  5227  03FB  05FD               	andwf	setGestureMode@val,f
  5228                           
  5229                           ;APDS9960.c: 510:     val |= mode;
  5230  03FC  087C               	movf	setGestureMode@mode,w
  5231  03FD  00FB               	movwf	??_setGestureMode
  5232  03FE  087B               	movf	??_setGestureMode,w
  5233  03FF  04FD               	iorwf	setGestureMode@val,f
  5234                           
  5235                           ;APDS9960.c: 513:     if( !wireWriteDataByte(0xAB, val) ) {
  5236  0400  087D               	movf	setGestureMode@val,w
  5237  0401  00FB               	movwf	??_setGestureMode
  5238  0402  087B               	movf	??_setGestureMode,w
  5239  0403  00F1               	movwf	wireWriteDataByte@val
  5240  0404  30AB               	movlw	171
  5241  0405  3184  244C  3183   	fcall	_wireWriteDataByte
  5242  0408  0871               	movf	?_wireWriteDataByte,w
  5243  0409  0472               	iorwf	?_wireWriteDataByte+1,w
  5244  040A  1D03               	btfss	3,2
  5245  040B  2C0E               	goto	l2994
  5246                           
  5247                           ;APDS9960.c: 514:         return 0;
  5248  040C  3000               	movlw	0
  5249  040D  0008               	return
  5250  040E                     l2994:	
  5251                           
  5252                           ;APDS9960.c: 517:     return 1;
  5253  040E  3001               	movlw	1
  5254  040F  0008               	return
  5255  0410                     __end_of_setGestureMode:	
  5256                           
  5257                           	psect	text18
  5258  0333                     __ptext18:	
  5259 ;; *************** function _setGestureIntEnable *****************
  5260 ;; Defined at:
  5261 ;;		line 381 in file "APDS9960.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  enable          1    wreg     unsigned char 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  enable          1   13[COMMON] unsigned char 
  5266 ;;  val             1   12[COMMON] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      _Bool 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;Total ram usage:        3 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    6
  5283 ;; This function calls:
  5284 ;;		_wireReadDataByte
  5285 ;;		_wireWriteDataByte
  5286 ;; This function is called by:
  5287 ;;		_initialize
  5288 ;;		_enableGestureSensor
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           
  5293                           ;psect for function _setGestureIntEnable
  5294  0333                     _setGestureIntEnable:	
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  5298                           ;setGestureIntEnable@enable stored from wreg
  5299  0333  00FD               	movwf	setGestureIntEnable@enable
  5300                           
  5301                           ;APDS9960.c: 381: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 382: {;APDS9960.
      +                          c: 383:     uint8_t val;;APDS9960.c: 386:     val = wireReadDataByte(0xAB);
  5302  0334  30AB               	movlw	171
  5303  0335  3184  2410  3183   	fcall	_wireReadDataByte
  5304  0338  00FB               	movwf	??_setGestureIntEnable
  5305  0339  087B               	movf	??_setGestureIntEnable,w
  5306  033A  00FC               	movwf	setGestureIntEnable@val
  5307                           
  5308                           ;APDS9960.c: 389:     enable &= 0b00000001;
  5309  033B  3001               	movlw	1
  5310  033C  00FB               	movwf	??_setGestureIntEnable
  5311  033D  087B               	movf	??_setGestureIntEnable,w
  5312  033E  05FD               	andwf	setGestureIntEnable@enable,f
  5313                           
  5314                           ;APDS9960.c: 390:     enable = enable << 1;
  5315  033F  357D               	lslf	setGestureIntEnable@enable,w
  5316  0340  00FB               	movwf	??_setGestureIntEnable
  5317  0341  087B               	movf	??_setGestureIntEnable,w
  5318  0342  00FD               	movwf	setGestureIntEnable@enable
  5319                           
  5320                           ;APDS9960.c: 391:     val &= 0b11111101;
  5321  0343  30FD               	movlw	253
  5322  0344  00FB               	movwf	??_setGestureIntEnable
  5323  0345  087B               	movf	??_setGestureIntEnable,w
  5324  0346  05FC               	andwf	setGestureIntEnable@val,f
  5325                           
  5326                           ;APDS9960.c: 392:     val |= enable;
  5327  0347  087D               	movf	setGestureIntEnable@enable,w
  5328  0348  00FB               	movwf	??_setGestureIntEnable
  5329  0349  087B               	movf	??_setGestureIntEnable,w
  5330  034A  04FC               	iorwf	setGestureIntEnable@val,f
  5331                           
  5332                           ;APDS9960.c: 395:     if( !wireWriteDataByte(0xAB, val) ) {
  5333  034B  087C               	movf	setGestureIntEnable@val,w
  5334  034C  00FB               	movwf	??_setGestureIntEnable
  5335  034D  087B               	movf	??_setGestureIntEnable,w
  5336  034E  00F1               	movwf	wireWriteDataByte@val
  5337  034F  30AB               	movlw	171
  5338  0350  3184  244C  3183   	fcall	_wireWriteDataByte
  5339  0353  0871               	movf	?_wireWriteDataByte,w
  5340  0354  0472               	iorwf	?_wireWriteDataByte+1,w
  5341  0355  1D03               	btfss	3,2
  5342  0356  2B59               	goto	l2956
  5343                           
  5344                           ;APDS9960.c: 396:         return 0;
  5345  0357  3000               	movlw	0
  5346  0358  0008               	return
  5347  0359                     l2956:	
  5348                           
  5349                           ;APDS9960.c: 399:     return 1;
  5350  0359  3001               	movlw	1
  5351  035A  0008               	return
  5352  035B                     __end_of_setGestureIntEnable:	
  5353                           
  5354                           	psect	text19
  5355  0463                     __ptext19:	
  5356 ;; *************** function _resetGestureParameters *****************
  5357 ;; Defined at:
  5358 ;;		line 451 in file "APDS9960.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      void 
  5365 ;; Registers used:
  5366 ;;		status,2
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    4
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_enableGestureSensor
  5383 ;;		_readGesture
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _resetGestureParameters
  5389  0463                     _resetGestureParameters:	
  5390                           
  5391                           ;APDS9960.c: 454:     gesture_data_.index = 0;
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _resetGestureParameters: [status,2]
  5395  0463  0021               	movlb	1	; select bank1
  5396  0464  01E0               	clrf	(_gesture_data_^(0+128)+64)
  5397                           
  5398                           ;APDS9960.c: 455:     gesture_data_.total_gestures = 0;
  5399  0465  01E1               	clrf	(_gesture_data_^(0+128)+65)
  5400                           
  5401                           ;APDS9960.c: 457:     gesture_ud_delta_ = 0;
  5402  0466  0020               	movlb	0	; select bank0
  5403  0467  01AE               	clrf	_gesture_ud_delta_
  5404  0468  01AF               	clrf	_gesture_ud_delta_+1
  5405                           
  5406                           ;APDS9960.c: 458:     gesture_lr_delta_ = 0;
  5407  0469  01AC               	clrf	_gesture_lr_delta_
  5408  046A  01AD               	clrf	_gesture_lr_delta_+1
  5409                           
  5410                           ;APDS9960.c: 460:     gesture_ud_count_ = 0;
  5411  046B  01AA               	clrf	_gesture_ud_count_
  5412  046C  01AB               	clrf	_gesture_ud_count_+1
  5413                           
  5414                           ;APDS9960.c: 461:     gesture_lr_count_ = 0;
  5415  046D  01A8               	clrf	_gesture_lr_count_
  5416  046E  01A9               	clrf	_gesture_lr_count_+1
  5417                           
  5418                           ;APDS9960.c: 463:     gesture_near_count_ = 0;
  5419  046F  01A6               	clrf	_gesture_near_count_
  5420  0470  01A7               	clrf	_gesture_near_count_+1
  5421                           
  5422                           ;APDS9960.c: 464:     gesture_far_count_ = 0;
  5423  0471  01A4               	clrf	_gesture_far_count_
  5424  0472  01A5               	clrf	_gesture_far_count_+1
  5425                           
  5426                           ;APDS9960.c: 466:     gesture_state_ = 0;
  5427  0473  01A2               	clrf	_gesture_state_
  5428  0474  01A3               	clrf	_gesture_state_+1
  5429                           
  5430                           ;APDS9960.c: 467:     gesture_motion_ = DIR_NONE;
  5431  0475  01A0               	clrf	_gesture_motion_
  5432  0476  01A1               	clrf	_gesture_motion_+1
  5433  0477  0008               	return
  5434  0478                     __end_of_resetGestureParameters:	
  5435                           
  5436                           	psect	text20
  5437  04CB                     __ptext20:	
  5438 ;; *************** function _enablePower *****************
  5439 ;; Defined at:
  5440 ;;		line 521 in file "APDS9960.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      _Bool 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, pclath, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    8
  5461 ;; This function calls:
  5462 ;;		_setMode
  5463 ;; This function is called by:
  5464 ;;		_enableGestureSensor
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function _enablePower
  5470  04CB                     _enablePower:	
  5471                           
  5472                           ;APDS9960.c: 523:     if( !setMode(0, 1) ) {
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  5476  04CB  01FD               	clrf	setMode@enable
  5477  04CC  0AFD               	incf	setMode@enable,f
  5478  04CD  3000               	movlw	0
  5479  04CE  3181  219B  3184   	fcall	_setMode
  5480  04D1  3A00               	xorlw	0
  5481  04D2  1D03               	skipz
  5482  04D3  2CD6               	goto	l3004
  5483                           
  5484                           ;APDS9960.c: 524:         return 0;
  5485  04D4  3000               	movlw	0
  5486  04D5  0008               	return
  5487  04D6                     l3004:	
  5488                           
  5489                           ;APDS9960.c: 527:     return 1;
  5490  04D6  3001               	movlw	1
  5491  04D7  0008               	return
  5492  04D8                     __end_of_enablePower:	
  5493                           
  5494                           	psect	text21
  5495  019B                     __ptext21:	
  5496 ;; *************** function _setMode *****************
  5497 ;; Defined at:
  5498 ;;		line 118 in file "APDS9960.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  mode            1    wreg     unsigned char 
  5501 ;;  enable          1   13[COMMON] unsigned char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  mode            1    3[BANK0 ] unsigned char 
  5504 ;;  reg_val         1    2[BANK0 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      _Bool 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0, pclath, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5514 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;Total ram usage:        5 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    7
  5521 ;; This function calls:
  5522 ;;		_getMode
  5523 ;;		_wireWriteDataByte
  5524 ;; This function is called by:
  5525 ;;		_initialize
  5526 ;;		_enableGestureSensor
  5527 ;;		_enablePower
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _setMode
  5533  019B                     _setMode:	
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  5537                           ;setMode@mode stored from wreg
  5538  019B  0020               	movlb	0	; select bank0
  5539  019C  00B9               	movwf	setMode@mode
  5540                           
  5541                           ;APDS9960.c: 118: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 119: {;APDS996
      +                          0.c: 120:     uint8_t reg_val;;APDS9960.c: 123:     reg_val = getMode();
  5542  019D  3184  24FA  3181   	fcall	_getMode
  5543  01A0  0020               	movlb	0	; select bank0
  5544  01A1  00B6               	movwf	??_setMode
  5545  01A2  0836               	movf	??_setMode,w
  5546  01A3  00B8               	movwf	setMode@reg_val
  5547                           
  5548                           ;APDS9960.c: 124:     if( reg_val == 0xFF ) {
  5549  01A4  0A38               	incf	setMode@reg_val,w
  5550  01A5  1D03               	btfss	3,2
  5551  01A6  29A9               	goto	l2686
  5552  01A7                     l2682:	
  5553                           
  5554                           ;APDS9960.c: 125:         return 0;
  5555  01A7  3000               	movlw	0
  5556  01A8  0008               	return
  5557  01A9                     l2686:	
  5558                           
  5559                           ;APDS9960.c: 129:     enable = enable & 0x01;
  5560  01A9  087D               	movf	setMode@enable,w
  5561  01AA  3901               	andlw	1
  5562  01AB  00B6               	movwf	??_setMode
  5563  01AC  0836               	movf	??_setMode,w
  5564  01AD  00FD               	movwf	setMode@enable
  5565                           
  5566                           ;APDS9960.c: 130:     if( mode >= 0 && mode <= 6 ) {
  5567  01AE  3007               	movlw	7
  5568  01AF  0239               	subwf	setMode@mode,w
  5569  01B0  1803               	skipnc
  5570  01B1  29CE               	goto	l2696
  5571                           
  5572                           ;APDS9960.c: 131:         if (enable) {
  5573  01B2  087D               	movf	setMode@enable,w
  5574  01B3  1903               	btfsc	3,2
  5575  01B4  29C1               	goto	l2694
  5576                           
  5577                           ;APDS9960.c: 132:             reg_val |= (1 << mode);
  5578  01B5  3001               	movlw	1
  5579  01B6  00B6               	movwf	??_setMode
  5580  01B7  0A39               	incf	setMode@mode,w
  5581  01B8  29BA               	goto	u1744
  5582  01B9                     u1745:	
  5583  01B9  35B6               	lslf	??_setMode,f
  5584  01BA                     u1744:	
  5585  01BA  0B89               	decfsz	9,f
  5586  01BB  29B9               	goto	u1745
  5587  01BC  0836               	movf	??_setMode,w
  5588  01BD  00B7               	movwf	??_setMode+1
  5589  01BE  0837               	movf	??_setMode+1,w
  5590  01BF  04B8               	iorwf	setMode@reg_val,f
  5591                           
  5592                           ;APDS9960.c: 133:         } else {
  5593  01C0  29DB               	goto	l2704
  5594  01C1                     l2694:	
  5595                           
  5596                           ;APDS9960.c: 134:             reg_val &= ~(1 << mode);
  5597  01C1  3001               	movlw	1
  5598  01C2  00B6               	movwf	??_setMode
  5599  01C3  0A39               	incf	setMode@mode,w
  5600  01C4  29C6               	goto	u1754
  5601  01C5                     u1755:	
  5602  01C5  35B6               	lslf	??_setMode,f
  5603  01C6                     u1754:	
  5604  01C6  0B89               	decfsz	9,f
  5605  01C7  29C5               	goto	u1755
  5606  01C8  0836               	movf	??_setMode,w
  5607  01C9  3AFF               	xorlw	255
  5608  01CA  00B7               	movwf	??_setMode+1
  5609  01CB  0837               	movf	??_setMode+1,w
  5610  01CC  05B8               	andwf	setMode@reg_val,f
  5611  01CD  29DB               	goto	l2704
  5612  01CE                     l2696:	
  5613  01CE  3007               	movlw	7
  5614  01CF  0639               	xorwf	setMode@mode,w
  5615  01D0  1D03               	btfss	3,2
  5616  01D1  29DB               	goto	l2704
  5617                           
  5618                           ;APDS9960.c: 137:         if (enable) {
  5619  01D2  087D               	movf	setMode@enable,w
  5620  01D3  1903               	btfsc	3,2
  5621  01D4  29DA               	goto	l2702
  5622                           
  5623                           ;APDS9960.c: 138:             reg_val = 0x7F;
  5624  01D5  307F               	movlw	127
  5625  01D6  00B6               	movwf	??_setMode
  5626  01D7  0836               	movf	??_setMode,w
  5627  01D8  00B8               	movwf	setMode@reg_val
  5628                           
  5629                           ;APDS9960.c: 139:         } else {
  5630  01D9  29DB               	goto	l2704
  5631  01DA                     l2702:	
  5632                           
  5633                           ;APDS9960.c: 140:             reg_val = 0x00;
  5634  01DA  01B8               	clrf	setMode@reg_val
  5635  01DB                     l2704:	
  5636                           
  5637                           ;APDS9960.c: 145:     if( !wireWriteDataByte(0x80, reg_val) ) {
  5638  01DB  0838               	movf	setMode@reg_val,w
  5639  01DC  00B6               	movwf	??_setMode
  5640  01DD  0836               	movf	??_setMode,w
  5641  01DE  00F1               	movwf	wireWriteDataByte@val
  5642  01DF  3080               	movlw	128
  5643  01E0  3184  244C  3181   	fcall	_wireWriteDataByte
  5644  01E3  0871               	movf	?_wireWriteDataByte,w
  5645  01E4  0472               	iorwf	?_wireWriteDataByte+1,w
  5646  01E5  1903               	btfsc	3,2
  5647  01E6  29A7               	goto	l2682
  5648                           
  5649                           ;APDS9960.c: 149:     return 1;
  5650  01E7  3001               	movlw	1
  5651  01E8  0008               	return
  5652  01E9                     __end_of_setMode:	
  5653                           
  5654                           	psect	text22
  5655  044C                     __ptext22:	
  5656 ;; *************** function _wireWriteDataByte *****************
  5657 ;; Defined at:
  5658 ;;		line 866 in file "APDS9960.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  reg             1    wreg     unsigned char 
  5661 ;;  val             1    1[COMMON] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  reg             1    4[COMMON] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    1[COMMON] int 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, pclath, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;Total ram usage:        4 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    5
  5680 ;; This function calls:
  5681 ;;		_I2C_Start
  5682 ;;		_I2C_Stop
  5683 ;;		_I2C_Write_Byte
  5684 ;; This function is called by:
  5685 ;;		_initialize
  5686 ;;		_setMode
  5687 ;;		_setLEDDrive
  5688 ;;		_setProximityGain
  5689 ;;		_setAmbientLightGain
  5690 ;;		_setProxIntLowThresh
  5691 ;;		_setProxIntHighThresh
  5692 ;;		_setLightIntLowThreshold
  5693 ;;		_setLightIntHighThreshold
  5694 ;;		_setGestureEnterThresh
  5695 ;;		_setGestureExitThresh
  5696 ;;		_setGestureGain
  5697 ;;		_setGestureLEDDrive
  5698 ;;		_setGestureWaitTime
  5699 ;;		_setGestureIntEnable
  5700 ;;		_enableGestureSensor
  5701 ;;		_setLEDBoost
  5702 ;;		_setGestureMode
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _wireWriteDataByte
  5708  044C                     _wireWriteDataByte:	
  5709                           
  5710                           ;incstack = 0
  5711                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  5712                           ;wireWriteDataByte@reg stored from wreg
  5713  044C  00F4               	movwf	wireWriteDataByte@reg
  5714                           
  5715                           ;APDS9960.c: 866: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 867: {;APDS9960.c: 869:     I2C_Start();
  5716  044D  3185  252B  3184   	fcall	_I2C_Start
  5717                           
  5718                           ;APDS9960.c: 870:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5719  0450  3072               	movlw	114
  5720  0451  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5721                           
  5722                           ;APDS9960.c: 871:     I2C_Write_Byte(reg);
  5723  0454  0874               	movf	wireWriteDataByte@reg,w
  5724  0455  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5725                           
  5726                           ;APDS9960.c: 872:     I2C_Write_Byte(val);
  5727  0458  0871               	movf	wireWriteDataByte@val,w
  5728  0459  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5729                           
  5730                           ;APDS9960.c: 873:     I2C_Stop();
  5731  045C  3185  2528         	fcall	_I2C_Stop
  5732                           
  5733                           ;APDS9960.c: 875:     return 1;
  5734  045E  3001               	movlw	1
  5735  045F  00F1               	movwf	?_wireWriteDataByte
  5736  0460  3000               	movlw	0
  5737  0461  00F2               	movwf	?_wireWriteDataByte+1
  5738  0462  0008               	return
  5739  0463                     __end_of_wireWriteDataByte:	
  5740                           
  5741                           	psect	text23
  5742  04FA                     __ptext23:	
  5743 ;; *************** function _getMode *****************
  5744 ;; Defined at:
  5745 ;;		line 153 in file "APDS9960.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  enable_value    1   12[COMMON] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      unsigned char 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;Total ram usage:        2 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    6
  5766 ;; This function calls:
  5767 ;;		_wireReadDataByte
  5768 ;; This function is called by:
  5769 ;;		_setMode
  5770 ;;		_readGesture
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function _getMode
  5776  04FA                     _getMode:	
  5777                           
  5778                           ;APDS9960.c: 155:     uint8_t enable_value;;APDS9960.c: 158:     enable_value = wireRead
      +                          DataByte(0x80);
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  5782  04FA  3080               	movlw	128
  5783  04FB  3184  2410         	fcall	_wireReadDataByte
  5784  04FD  00FB               	movwf	??_getMode
  5785  04FE  087B               	movf	??_getMode,w
  5786  04FF  00FC               	movwf	getMode@enable_value
  5787                           
  5788                           ;APDS9960.c: 160:     return enable_value;
  5789  0500  087C               	movf	getMode@enable_value,w
  5790  0501  0008               	return
  5791  0502                     __end_of_getMode:	
  5792                           
  5793                           	psect	text24
  5794  0410                     __ptext24:	
  5795 ;; *************** function _wireReadDataByte *****************
  5796 ;; Defined at:
  5797 ;;		line 879 in file "APDS9960.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  reg             1    wreg     unsigned char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  reg             1    9[COMMON] unsigned char 
  5802 ;;  val             1   10[COMMON] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      unsigned char 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;Total ram usage:        3 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    5
  5819 ;; This function calls:
  5820 ;;		_I2C_ReStart
  5821 ;;		_I2C_Read_Byte
  5822 ;;		_I2C_Send_NACK
  5823 ;;		_I2C_Start
  5824 ;;		_I2C_Stop
  5825 ;;		_I2C_Write_Byte
  5826 ;; This function is called by:
  5827 ;;		_initialize
  5828 ;;		_getMode
  5829 ;;		_setLEDDrive
  5830 ;;		_setProximityGain
  5831 ;;		_setAmbientLightGain
  5832 ;;		_setGestureGain
  5833 ;;		_setGestureLEDDrive
  5834 ;;		_setGestureWaitTime
  5835 ;;		_setGestureIntEnable
  5836 ;;		_setLEDBoost
  5837 ;;		_setGestureMode
  5838 ;;		_isGestureAvailable
  5839 ;;		_readGesture
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function _wireReadDataByte
  5845  0410                     _wireReadDataByte:	
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  5849                           ;wireReadDataByte@reg stored from wreg
  5850  0410  00F9               	movwf	wireReadDataByte@reg
  5851                           
  5852                           ;APDS9960.c: 879:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 880: {;
      +                          APDS9960.c: 882:     unsigned char val;;APDS9960.c: 884:     I2C_Start();
  5853  0411  3185  252B  3184   	fcall	_I2C_Start
  5854                           
  5855                           ;APDS9960.c: 885:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5856  0414  3072               	movlw	114
  5857  0415  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5858                           
  5859                           ;APDS9960.c: 886:     I2C_Write_Byte(reg);
  5860  0418  0879               	movf	wireReadDataByte@reg,w
  5861  0419  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5862                           
  5863                           ;APDS9960.c: 887:     I2C_ReStart();
  5864  041C  3185  252E  3184   	fcall	_I2C_ReStart
  5865                           
  5866                           ;APDS9960.c: 888:     I2C_Write_Byte((0x39 << 1) | 0x01);
  5867  041F  3073               	movlw	115
  5868  0420  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5869                           
  5870                           ;APDS9960.c: 889:     val=I2C_Read_Byte();
  5871  0423  3182  22B7  3184   	fcall	_I2C_Read_Byte
  5872  0426  00F8               	movwf	??_wireReadDataByte
  5873  0427  0878               	movf	??_wireReadDataByte,w
  5874  0428  00FA               	movwf	wireReadDataByte@val
  5875                           
  5876                           ;APDS9960.c: 890:     I2C_Send_NACK();
  5877  0429  3185  251C  3184   	fcall	_I2C_Send_NACK
  5878                           
  5879                           ;APDS9960.c: 891:     I2C_Stop();
  5880  042C  3185  2528         	fcall	_I2C_Stop
  5881                           
  5882                           ;APDS9960.c: 893:     return (val);
  5883  042E  087A               	movf	wireReadDataByte@val,w
  5884  042F  0008               	return
  5885  0430                     __end_of_wireReadDataByte:	
  5886                           
  5887                           	psect	text25
  5888  04BC                     __ptext25:	
  5889 ;; *************** function _I2C_Write_Byte *****************
  5890 ;; Defined at:
  5891 ;;		line 70 in file "i2c.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  Byte            1    wreg     unsigned char 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  Byte            1    0[COMMON] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;Total ram usage:        1 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    4
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_wireWriteDataByte
  5916 ;;		_wireReadDataByte
  5917 ;;		_wireReadDataBlock
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function _I2C_Write_Byte
  5923  04BC                     _I2C_Write_Byte:	
  5924                           
  5925                           ;incstack = 0
  5926                           ; Regs used in _I2C_Write_Byte: [wreg+status,2]
  5927                           ;I2C_Write_Byte@Byte stored from wreg
  5928  04BC  00F0               	movwf	I2C_Write_Byte@Byte
  5929                           
  5930                           ;i2c.c: 70: void I2C_Write_Byte(unsigned char Byte);i2c.c: 71: {;i2c.c: 73:  b_i2c_error
      +                          _flag = 0;
  5931  04BD  0020               	movlb	0	; select bank0
  5932  04BE  01B4               	clrf	_b_i2c_error_flag
  5933                           
  5934                           ;i2c.c: 74:  SSPBUF = Byte;
  5935  04BF  0870               	movf	I2C_Write_Byte@Byte,w
  5936  04C0  0024               	movlb	4	; select bank4
  5937  04C1  0091               	movwf	17	;volatile
  5938                           
  5939                           ;i2c.c: 78:  if (SSP1CON2bits.ACKSTAT == 1) {
  5940  04C2  1F16               	btfss	22,6	;volatile
  5941  04C3  0008               	return
  5942                           
  5943                           ;i2c.c: 80:   SSP1CON2bits.PEN = 1;
  5944  04C4  1516               	bsf	22,2	;volatile
  5945  04C5                     l792:	
  5946                           ;i2c.c: 81:   while (SSP1CON2bits.PEN == 1);
  5947                           
  5948  04C5  1916               	btfsc	22,2	;volatile
  5949  04C6  2CC5               	goto	l792
  5950                           
  5951                           ;i2c.c: 84:   b_i2c_error_flag = 1;
  5952  04C7  0020               	movlb	0	; select bank0
  5953  04C8  01B4               	clrf	_b_i2c_error_flag
  5954  04C9  0AB4               	incf	_b_i2c_error_flag,f
  5955                           
  5956                           ;i2c.c: 85:   return;
  5957  04CA  0008               	return
  5958  04CB                     __end_of_I2C_Write_Byte:	
  5959                           
  5960                           	psect	text26
  5961  0528                     __ptext26:	
  5962 ;; *************** function _I2C_Stop *****************
  5963 ;; Defined at:
  5964 ;;		line 47 in file "i2c.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		None
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    4
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_wireWriteDataByte
  5989 ;;		_wireReadDataByte
  5990 ;;		_wireReadDataBlock
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _I2C_Stop
  5996  0528                     _I2C_Stop:	
  5997                           
  5998                           ;i2c.c: 49:  SSP1CON2bits.PEN=1;
  5999                           
  6000                           ;incstack = 0
  6001                           ; Regs used in _I2C_Stop: []
  6002  0528  0024               	movlb	4	; select bank4
  6003  0529  1516               	bsf	22,2	;volatile
  6004  052A  0008               	return
  6005  052B                     __end_of_I2C_Stop:	
  6006                           
  6007                           	psect	text27
  6008  052B                     __ptext27:	
  6009 ;; *************** function _I2C_Start *****************
  6010 ;; Defined at:
  6011 ;;		line 33 in file "i2c.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		None
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;Total ram usage:        0 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    4
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_wireWriteDataByte
  6036 ;;		_wireReadDataByte
  6037 ;;		_wireReadDataBlock
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function _I2C_Start
  6043  052B                     _I2C_Start:	
  6044                           
  6045                           ;i2c.c: 35:  SSP1CON2bits.SEN = 1;
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in _I2C_Start: []
  6049  052B  0024               	movlb	4	; select bank4
  6050  052C  1416               	bsf	22,0	;volatile
  6051  052D  0008               	return
  6052  052E                     __end_of_I2C_Start:	
  6053                           
  6054                           	psect	text28
  6055  051C                     __ptext28:	
  6056 ;; *************** function _I2C_Send_NACK *****************
  6057 ;; Defined at:
  6058 ;;		line 62 in file "i2c.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		None
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;Total ram usage:        0 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    4
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_wireReadDataByte
  6083 ;;		_wireReadDataBlock
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function _I2C_Send_NACK
  6089  051C                     _I2C_Send_NACK:	
  6090                           
  6091                           ;i2c.c: 64:  SSP1CON2bits.ACKDT=1;
  6092                           
  6093                           ;incstack = 0
  6094                           ; Regs used in _I2C_Send_NACK: []
  6095  051C  0024               	movlb	4	; select bank4
  6096  051D  1696               	bsf	22,5	;volatile
  6097                           
  6098                           ;i2c.c: 65:    SSP1CON2bits.ACKEN=1;
  6099  051E  1616               	bsf	22,4	;volatile
  6100  051F  0008               	return
  6101  0520                     __end_of_I2C_Send_NACK:	
  6102                           
  6103                           	psect	text29
  6104  02B7                     __ptext29:	
  6105 ;; *************** function _I2C_Read_Byte *****************
  6106 ;; Defined at:
  6107 ;;		line 91 in file "i2c.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  count           4    4[COMMON] unsigned long 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;Total ram usage:        8 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    4
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_wireReadDataByte
  6132 ;;		_wireReadDataBlock
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           
  6137                           ;psect for function _I2C_Read_Byte
  6138  02B7                     _I2C_Read_Byte:	
  6139                           
  6140                           ;i2c.c: 93:   SSP1CON2bits.RCEN=1;
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in _I2C_Read_Byte: [wreg]
  6144  02B7  0024               	movlb	4	; select bank4
  6145  02B8  1596               	bsf	22,3	;volatile
  6146                           
  6147                           ;i2c.c: 96:  unsigned long count = 10000L;
  6148  02B9  3000               	movlw	0
  6149  02BA  00F7               	movwf	I2C_Read_Byte@count+3
  6150  02BB  3000               	movlw	0
  6151  02BC  00F6               	movwf	I2C_Read_Byte@count+2
  6152  02BD  3027               	movlw	39
  6153  02BE  00F5               	movwf	I2C_Read_Byte@count+1
  6154  02BF  3010               	movlw	16
  6155  02C0  00F4               	movwf	I2C_Read_Byte@count
  6156  02C1                     l798:	
  6157                           ;i2c.c: 109:  }
  6158                           
  6159                           ;i2c.c: 97:  while (SSP1STATbits.BF == 0) {
  6160                           
  6161                           
  6162                           ;i2c.c: 97:  while (SSP1STATbits.BF == 0) {
  6163  02C1  1814               	btfsc	20,0	;volatile
  6164  02C2  2ADF               	goto	l2628
  6165                           
  6166                           ;i2c.c: 100:   if (--count == 0) {
  6167  02C3  3001               	movlw	1
  6168  02C4  00F0               	movwf	??_I2C_Read_Byte
  6169  02C5  3000               	movlw	0
  6170  02C6  00F1               	movwf	??_I2C_Read_Byte+1
  6171  02C7  3000               	movlw	0
  6172  02C8  00F2               	movwf	??_I2C_Read_Byte+2
  6173  02C9  3000               	movlw	0
  6174  02CA  00F3               	movwf	??_I2C_Read_Byte+3
  6175  02CB  0870               	movf	??_I2C_Read_Byte,w
  6176  02CC  02F4               	subwf	I2C_Read_Byte@count,f
  6177  02CD  0871               	movf	??_I2C_Read_Byte+1,w
  6178  02CE  3BF5               	subwfb	I2C_Read_Byte@count+1,f
  6179  02CF  0872               	movf	??_I2C_Read_Byte+2,w
  6180  02D0  3BF6               	subwfb	I2C_Read_Byte@count+2,f
  6181  02D1  0873               	movf	??_I2C_Read_Byte+3,w
  6182  02D2  3BF7               	subwfb	I2C_Read_Byte@count+3,f
  6183  02D3  0877               	movf	I2C_Read_Byte@count+3,w
  6184  02D4  0476               	iorwf	I2C_Read_Byte@count+2,w
  6185  02D5  0475               	iorwf	I2C_Read_Byte@count+1,w
  6186  02D6  0474               	iorwf	I2C_Read_Byte@count,w
  6187  02D7  1D03               	skipz
  6188  02D8  2AC1               	goto	l798
  6189                           
  6190                           ;i2c.c: 102:    SSP1CON2bits.PEN = 1;
  6191  02D9  1516               	bsf	22,2	;volatile
  6192                           
  6193                           ;i2c.c: 106:    b_i2c_error_flag = 1;
  6194  02DA  0020               	movlb	0	; select bank0
  6195  02DB  01B4               	clrf	_b_i2c_error_flag
  6196  02DC  0AB4               	incf	_b_i2c_error_flag,f
  6197                           
  6198                           ;i2c.c: 107:    return 0;
  6199  02DD  3000               	movlw	0
  6200  02DE  0008               	return
  6201  02DF                     l2628:	
  6202                           
  6203                           ;i2c.c: 111:   return SSPBUF;
  6204  02DF  0811               	movf	17,w	;volatile
  6205  02E0  0008               	return
  6206  02E1                     __end_of_I2C_Read_Byte:	
  6207                           
  6208                           	psect	text30
  6209  052E                     __ptext30:	
  6210 ;; *************** function _I2C_ReStart *****************
  6211 ;; Defined at:
  6212 ;;		line 40 in file "i2c.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		None
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    4
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_wireReadDataByte
  6237 ;;		_wireReadDataBlock
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _I2C_ReStart
  6243  052E                     _I2C_ReStart:	
  6244                           
  6245                           ;i2c.c: 42:  SSP1CON2bits.RSEN = 1;
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _I2C_ReStart: []
  6249  052E  0024               	movlb	4	; select bank4
  6250  052F  1496               	bsf	22,1	;volatile
  6251  0530  0008               	return
  6252  0531                     __end_of_I2C_ReStart:	
  6253                           
  6254                           	psect	text31
  6255  04E5                     __ptext31:	
  6256 ;; *************** function _SYSTEM_Initialize *****************
  6257 ;; Defined at:
  6258 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, pclath, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    6
  6279 ;; This function calls:
  6280 ;;		_OSCILLATOR_Initialize
  6281 ;;		_PIN_MANAGER_Initialize
  6282 ;;		_PMD_Initialize
  6283 ;;		_WDT_Initialize
  6284 ;; This function is called by:
  6285 ;;		_main
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           
  6290                           ;psect for function _SYSTEM_Initialize
  6291  04E5                     _SYSTEM_Initialize:	
  6292                           
  6293                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6294                           
  6295                           ;incstack = 0
  6296                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6297  04E5  3185  2502  3184   	fcall	_PMD_Initialize
  6298                           
  6299                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6300  04E8  3181  21E9  3184   	fcall	_PIN_MANAGER_Initialize
  6301                           
  6302                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6303  04EB  3184  24F1  3184   	fcall	_OSCILLATOR_Initialize
  6304                           
  6305                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6306  04EE  3185  2520         	fcall	_WDT_Initialize
  6307  04F0  0008               	return
  6308  04F1                     __end_of_SYSTEM_Initialize:	
  6309                           
  6310                           	psect	text32
  6311  0520                     __ptext32:	
  6312 ;; *************** function _WDT_Initialize *****************
  6313 ;; Defined at:
  6314 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    4
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_SYSTEM_Initialize
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _WDT_Initialize
  6344  0520                     _WDT_Initialize:	
  6345                           
  6346                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _WDT_Initialize: [wreg]
  6350  0520  3016               	movlw	22
  6351  0521  0021               	movlb	1	; select bank1
  6352  0522  0097               	movwf	23	;volatile
  6353  0523  0008               	return
  6354  0524                     __end_of_WDT_Initialize:	
  6355                           
  6356                           	psect	text33
  6357  0502                     __ptext33:	
  6358 ;; *************** function _PMD_Initialize *****************
  6359 ;; Defined at:
  6360 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		status,2
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;Total ram usage:        0 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    4
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_SYSTEM_Initialize
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _PMD_Initialize
  6390  0502                     _PMD_Initialize:	
  6391                           
  6392                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  6393                           
  6394                           ;incstack = 0
  6395                           ; Regs used in _PMD_Initialize: [status,2]
  6396  0502  0032               	movlb	18	; select bank18
  6397  0503  0191               	clrf	17	;volatile
  6398                           
  6399                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  6400  0504  0192               	clrf	18	;volatile
  6401                           
  6402                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  6403  0505  0193               	clrf	19	;volatile
  6404                           
  6405                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  6406  0506  0194               	clrf	20	;volatile
  6407                           
  6408                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  6409  0507  0195               	clrf	21	;volatile
  6410                           
  6411                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  6412  0508  0196               	clrf	22	;volatile
  6413  0509  0008               	return
  6414  050A                     __end_of_PMD_Initialize:	
  6415                           
  6416                           	psect	text34
  6417  01E9                     __ptext34:	
  6418 ;; *************** function _PIN_MANAGER_Initialize *****************
  6419 ;; Defined at:
  6420 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;		None
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, pclath, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;Total ram usage:        0 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    5
  6441 ;; This function calls:
  6442 ;;		_IOCAF4_SetInterruptHandler
  6443 ;; This function is called by:
  6444 ;;		_SYSTEM_Initialize
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           
  6449                           ;psect for function _PIN_MANAGER_Initialize
  6450  01E9                     _PIN_MANAGER_Initialize:	
  6451                           
  6452                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6453                           
  6454                           ;incstack = 0
  6455                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6456  01E9  0022               	movlb	2	; select bank2
  6457  01EA  018C               	clrf	12	;volatile
  6458                           
  6459                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6460  01EB  018D               	clrf	13	;volatile
  6461                           
  6462                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6463  01EC  018E               	clrf	14	;volatile
  6464                           
  6465                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  6466  01ED  3011               	movlw	17
  6467  01EE  0021               	movlb	1	; select bank1
  6468  01EF  008C               	movwf	12	;volatile
  6469                           
  6470                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  6471  01F0  30F0               	movlw	240
  6472  01F1  008D               	movwf	13	;volatile
  6473                           
  6474                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  6475  01F2  30DF               	movlw	223
  6476  01F3  008E               	movwf	14	;volatile
  6477                           
  6478                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xFC;
  6479  01F4  30FC               	movlw	252
  6480  01F5  0023               	movlb	3	; select bank3
  6481  01F6  008E               	movwf	14	;volatile
  6482                           
  6483                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF0;
  6484  01F7  30F0               	movlw	240
  6485  01F8  008D               	movwf	13	;volatile
  6486                           
  6487                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x27;
  6488  01F9  3027               	movlw	39
  6489  01FA  008C               	movwf	12	;volatile
  6490                           
  6491                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  6492  01FB  0024               	movlb	4	; select bank4
  6493  01FC  018D               	clrf	13	;volatile
  6494                           
  6495                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  6496  01FD  018C               	clrf	12	;volatile
  6497                           
  6498                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x03;
  6499  01FE  3003               	movlw	3
  6500  01FF  008E               	movwf	14	;volatile
  6501                           
  6502                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  6503  0200  0025               	movlb	5	; select bank5
  6504  0201  018C               	clrf	12	;volatile
  6505                           
  6506                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  6507  0202  018D               	clrf	13	;volatile
  6508                           
  6509                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  6510  0203  018E               	clrf	14	;volatile
  6511                           
  6512                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  6513  0204  3037               	movlw	55
  6514  0205  0026               	movlb	6	; select bank6
  6515  0206  008C               	movwf	12	;volatile
  6516                           
  6517                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  6518  0207  30F0               	movlw	240
  6519  0208  008D               	movwf	13	;volatile
  6520                           
  6521                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  6522  0209  30FF               	movlw	255
  6523  020A  008E               	movwf	14	;volatile
  6524                           
  6525                           ;mcc_generated_files/pin_manager.c: 106:     IOCAFbits.IOCAF4 = 0;
  6526  020B  0027               	movlb	7	; select bank7
  6527  020C  1213               	bcf	19,4	;volatile
  6528                           
  6529                           ;mcc_generated_files/pin_manager.c: 108:     IOCANbits.IOCAN4 = 1;
  6530  020D  1612               	bsf	18,4	;volatile
  6531                           
  6532                           ;mcc_generated_files/pin_manager.c: 110:     IOCAPbits.IOCAP4 = 0;
  6533  020E  1211               	bcf	17,4	;volatile
  6534                           
  6535                           ;mcc_generated_files/pin_manager.c: 115:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  6536  020F  3032               	movlw	low _IOCAF4_DefaultInterruptHandler
  6537  0210  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  6538  0211  3005               	movlw	high _IOCAF4_DefaultInterruptHandler
  6539  0212  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  6540  0213  3185  2510         	fcall	_IOCAF4_SetInterruptHandler
  6541                           
  6542                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6543  0215  0021               	movlb	1	; select bank1
  6544  0216  1610               	bsf	16,4	;volatile
  6545                           
  6546                           ;mcc_generated_files/pin_manager.c: 121:     RC0PPS = 0x18;
  6547  0217  3018               	movlw	24
  6548  0218  003D               	movlb	29	; select bank29
  6549  0219  00A0               	movwf	32	;volatile
  6550                           
  6551                           ;mcc_generated_files/pin_manager.c: 122:     SSP1CLKPPS = 0x10;
  6552  021A  3010               	movlw	16
  6553  021B  003C               	movlb	28	; select bank28
  6554  021C  00A0               	movwf	32	;volatile
  6555                           
  6556                           ;mcc_generated_files/pin_manager.c: 123:     RC1PPS = 0x19;
  6557  021D  3019               	movlw	25
  6558  021E  003D               	movlb	29	; select bank29
  6559  021F  00A1               	movwf	33	;volatile
  6560                           
  6561                           ;mcc_generated_files/pin_manager.c: 124:     SSP1DATPPS = 0x11;
  6562  0220  3011               	movlw	17
  6563  0221  003C               	movlb	28	; select bank28
  6564  0222  00A1               	movwf	33	;volatile
  6565  0223  0008               	return
  6566  0224                     __end_of_PIN_MANAGER_Initialize:	
  6567                           
  6568                           	psect	text35
  6569  0510                     __ptext35:	
  6570 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  6571 ;; Defined at:
  6572 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  6575 ;;		 -> GestureInterruptHandler(1), IOCAF4_DefaultInterruptHandler(1), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;Total ram usage:        2 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_PIN_MANAGER_Initialize
  6598 ;;		_main
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _IOCAF4_SetInterruptHandler
  6604  0510                     _IOCAF4_SetInterruptHandler:	
  6605                           
  6606                           ;mcc_generated_files/pin_manager.c: 155:     IOCAF4_InterruptHandler = InterruptHandler;
  6607                           
  6608                           ;incstack = 0
  6609                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  6610  0510  0871               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  6611  0511  0020               	movlb	0	; select bank0
  6612  0512  00BD               	movwf	_IOCAF4_InterruptHandler+1
  6613  0513  0870               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  6614  0514  00BC               	movwf	_IOCAF4_InterruptHandler
  6615  0515  0008               	return
  6616  0516                     __end_of_IOCAF4_SetInterruptHandler:	
  6617                           
  6618                           	psect	text36
  6619  04F1                     __ptext36:	
  6620 ;; *************** function _OSCILLATOR_Initialize *****************
  6621 ;; Defined at:
  6622 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    4
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_SYSTEM_Initialize
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function _OSCILLATOR_Initialize
  6652  04F1                     _OSCILLATOR_Initialize:	
  6653                           
  6654                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6658  04F1  3062               	movlw	98
  6659  04F2  0032               	movlb	18	; select bank18
  6660  04F3  0099               	movwf	25	;volatile
  6661                           
  6662                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6663  04F4  019B               	clrf	27	;volatile
  6664                           
  6665                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6666  04F5  019D               	clrf	29	;volatile
  6667                           
  6668                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
  6669  04F6  3003               	movlw	3
  6670  04F7  009F               	movwf	31	;volatile
  6671                           
  6672                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  6673  04F8  019E               	clrf	30	;volatile
  6674  04F9  0008               	return
  6675  04FA                     __end_of_OSCILLATOR_Initialize:	
  6676                           
  6677                           	psect	intentry
  6678  0004                     __pintentry:	
  6679 ;; *************** function _INTERRUPT_InterruptManager *****************
  6680 ;; Defined at:
  6681 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    3
  6702 ;; This function calls:
  6703 ;;		_PIN_MANAGER_IOC
  6704 ;; This function is called by:
  6705 ;;		Interrupt level 1
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709  0004                     _INTERRUPT_InterruptManager:	
  6710                           
  6711                           ;incstack = 0
  6712  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6713                           
  6714                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6715  0005  3180               	pagesel	$
  6716                           
  6717                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6718  0006  0021               	movlb	1	; select bank1
  6719  0007  1E10               	btfss	16,4	;volatile
  6720  0008  2810               	goto	i1l21
  6721  0009  0020               	movlb	0	; select bank0
  6722  000A  1E10               	btfss	16,4	;volatile
  6723  000B  2810               	goto	i1l21
  6724                           
  6725                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6726  000C  3185  2516  3180   	fcall	_PIN_MANAGER_IOC
  6727                           
  6728                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6729  000F  281C               	goto	i1l29
  6730  0010                     i1l21:	
  6731                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6732                           
  6733  0010  1F0B               	btfss	11,6	;volatile
  6734  0011  281C               	goto	i1l29
  6735                           
  6736                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  6737  0012  0021               	movlb	1	; select bank1
  6738  0013  1991               	btfsc	17,3	;volatile
  6739                           
  6740                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  6741  0014  0020               	movlb	0	; select bank0
  6742  0015  1991               	btfsc	17,3	;volatile
  6743  0016  281C               	goto	i1l29
  6744                           
  6745                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
  6746  0017  0021               	movlb	1	; select bank1
  6747  0018  1D11               	btfss	17,2	;volatile
  6748  0019  281C               	goto	i1l29
  6749                           
  6750                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
  6751  001A  0020               	movlb	0	; select bank0
  6752  001B  0811               	movf	17,w	;volatile
  6753  001C                     i1l29:	
  6754                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6755                           
  6756  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6757  001D  0009               	retfie
  6758  001E                     __end_of_INTERRUPT_InterruptManager:	
  6759                           
  6760                           	psect	text38
  6761  0516                     __ptext38:	
  6762 ;; *************** function _PIN_MANAGER_IOC *****************
  6763 ;; Defined at:
  6764 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    2
  6785 ;; This function calls:
  6786 ;;		_IOCAF4_ISR
  6787 ;; This function is called by:
  6788 ;;		_INTERRUPT_InterruptManager
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           
  6793                           ;psect for function _PIN_MANAGER_IOC
  6794  0516                     _PIN_MANAGER_IOC:	
  6795                           
  6796                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCAFbits.IOCAF4 == 1)
  6797                           
  6798                           ;incstack = 0
  6799                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6800  0516  0027               	movlb	7	; select bank7
  6801  0517  1E13               	btfss	19,4	;volatile
  6802  0518  0008               	return
  6803                           
  6804                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCAF4_ISR();
  6805  0519  3184  24D8         	fcall	_IOCAF4_ISR
  6806  051B  0008               	return
  6807  051C                     __end_of_PIN_MANAGER_IOC:	
  6808                           
  6809                           	psect	text39
  6810  04D8                     __ptext39:	
  6811 ;; *************** function _IOCAF4_ISR *****************
  6812 ;; Defined at:
  6813 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0, pclath, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    1
  6834 ;; This function calls:
  6835 ;;		Absolute function
  6836 ;;		_GestureInterruptHandler
  6837 ;;		_IOCAF4_DefaultInterruptHandler
  6838 ;; This function is called by:
  6839 ;;		_PIN_MANAGER_IOC
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function _IOCAF4_ISR
  6845  04D8                     _IOCAF4_ISR:	
  6846                           
  6847                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCAF4_InterruptHandler)
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6851  04D8  0020               	movlb	0	; select bank0
  6852  04D9  083C               	movf	_IOCAF4_InterruptHandler,w
  6853  04DA  043D               	iorwf	_IOCAF4_InterruptHandler+1,w
  6854  04DB  1903               	btfsc	3,2
  6855  04DC  2CE2               	goto	i1l2770
  6856                           
  6857                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCAF4_InterruptHandler();
  6858  04DD  083D               	movf	_IOCAF4_InterruptHandler+1,w
  6859  04DE  008A               	movwf	10
  6860  04DF  083C               	movf	_IOCAF4_InterruptHandler,w
  6861  04E0  000A               	callw
  6862  04E1  3184               	pagesel	$
  6863  04E2                     i1l2770:	
  6864                           
  6865                           ;mcc_generated_files/pin_manager.c: 148:     IOCAFbits.IOCAF4 = 0;
  6866  04E2  0027               	movlb	7	; select bank7
  6867  04E3  1213               	bcf	19,4	;volatile
  6868  04E4  0008               	return
  6869  04E5                     __end_of_IOCAF4_ISR:	
  6870                           
  6871                           	psect	text40
  6872  0524                     __ptext40:	
  6873 ;; *************** function _GestureInterruptHandler *****************
  6874 ;; Defined at:
  6875 ;;		line 54 in file "main.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		None
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;Total ram usage:        0 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; This function calls:
  6896 ;;		Nothing
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;;		_IOCAF4_ISR
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           
  6904                           ;psect for function _GestureInterruptHandler
  6905  0524                     _GestureInterruptHandler:	
  6906                           
  6907                           ;main.c: 55:     handleGestureFlag = 1;
  6908                           
  6909                           ;incstack = 0
  6910                           ; Regs used in _GestureInterruptHandler: []
  6911  0524  0020               	movlb	0	; select bank0
  6912  0525  01B5               	clrf	_handleGestureFlag
  6913  0526  0AB5               	incf	_handleGestureFlag,f
  6914  0527  0008               	return
  6915  0528                     __end_of_GestureInterruptHandler:	
  6916                           
  6917                           	psect	text41
  6918  0532                     __ptext41:	
  6919 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  6920 ;; Defined at:
  6921 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		None
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_PIN_MANAGER_Initialize
  6945 ;;		_IOCAF4_ISR
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           
  6950                           ;psect for function _IOCAF4_DefaultInterruptHandler
  6951  0532                     _IOCAF4_DefaultInterruptHandler:	
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  6955  0532  0008               	return
  6956  0533                     __end_of_IOCAF4_DefaultInterruptHandler:	
  6957  007E                     btemp	set	126	;btemp
  6958  007E                     int$flags	set	126
  6959  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         90
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      30
    BANK1            80      0      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), Absolute function(), IOCAF4_DefaultInterruptHandler(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _initialize->_setAmbientLightGain
    _initialize->_setGestureIntEnable
    _initialize->_setGestureWaitTime
    _initialize->_setMode
    _setProximityGain->_wireReadDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireReadDataByte
    _setGestureWaitTime->_wireReadDataByte
    _setGestureLEDDrive->_wireReadDataByte
    _setGestureGain->_wireReadDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireReadDataByte
    _enableGestureSensor->_setGestureIntEnable
    _enableGestureSensor->_setGestureMode
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireReadDataByte
    _setGestureMode->_wireReadDataByte
    _setGestureIntEnable->_wireReadDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Read_Byte
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_enableGestureSensor
    _main->_initialize
    _initialize->_setMode
    _enableGestureSensor->_setMode
    _enablePower->_setMode

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   63400
         _IOCAF4_SetInterruptHandler
                  _SYSTEM_Initialize
                _enableGestureSensor
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   44364
                                              4 BANK0      2     2      0
                            _InitI2C
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   18688
                                              4 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    2963
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    3499
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    3499
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    2802
                                              1 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     113
                                             11 COMMON     2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0      90
                                              8 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
            _GestureInterruptHandler *
     _IOCAF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _GestureInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF4_SetInterruptHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
             _I2C_Read_Byte
             _I2C_Send_NACK
             _I2C_Start
             _I2C_Stop
             _I2C_Write_Byte
         _wireWriteDataByte
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _initialize
     _InitI2C
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireReadDataByte
       _I2C_ReStart
       _I2C_Read_Byte
       _I2C_Send_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF4_ISR
       Absolute function(Fake) *
       _GestureInterruptHandler *
       _IOCAF4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      1E       5       37.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      70      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 06 08:42:14 2019

                     ?_setGestureExitThresh 0070                          __size_of_I2C_Start 0003  
                               __CFG_CP$OFF 0000                                 __CFG_LVP$ON 0000  
                                       l792 04C5                                         l798 02C1  
                              __CFG_CPD$OFF 0000                        __size_of_I2C_ReStart 0003  
                   __size_of_PMD_Initialize 0008                          I2C_Write_Byte@Byte 0070  
                                       wreg 0009                                        l3004 04D6  
                                      l3030 0046                                        l3034 0048  
                                      l3162 0150                                        l3180 014E  
                                      l2702 01DA                                        l3166 0152  
                                      l3270 0371                                        l2704 01DB  
                                      l3272 037A                                        l2628 02DF  
                                      l2902 0284                                        l2814 0487  
                                      l2920 0253                                        l2824 0498  
                                      l2682 01A7                                        l2834 0394  
                                      l2694 01C1                                        l2686 01A9  
                                      l2854 03B8                                        l2838 0396  
                                      l2696 01CE                                        l2874 04BA  
                                      l2938 03EA                                        l2858 03BA  
                                      l2956 0359                                        l2884 04A9  
                                      l2976 02B5                                        l2994 040E  
                                      _LATA 010C                                        _LATB 010D  
                                      _LATC 010E                                        u1805 031B  
                                      u1815 02F2                                        u1744 01BA  
                                      u1745 01B9                                        u1905 0266  
                                      u1754 01C6                                        u1755 01C5  
                                      u1925 0235                                        _PMD0 0911  
                                      i1l21 0010                                        u1965 0297  
                                      _PMD1 0912                                        _PMD2 0913  
                                      _PMD3 0914                                        _PMD4 0915  
                                      _PMD5 0916                                        i1l29 001C  
                                      _WPUA 020C                                        _WPUB 020D  
                                      _WPUC 020E                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 035B  
                                      fsr0h 0005                                        indf0 0000  
                                      fsr0l 0004                                        btemp 007E  
                     ??_setGestureIntEnable 007B                            __end_of_I2C_Stop 052B  
                             __CFG_BOREN$ON 0000                               __CFG_BORV$LOW 0000  
                                      start 001E                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                             __end_of_InitI2C 0532  
            __size_of_OSCILLATOR_Initialize 0009                         __size_of_IOCAF4_ISR 000D  
             __end_of_OSCILLATOR_Initialize 04FA                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                              __CFG_DEBUG$OFF 0000  
                              ?_setLEDBoost 0070                                ?_setLEDDrive 0070  
                            _setGestureGain 0255                                       _OSCEN 091D  
                            _setGestureMode 03EC                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 0489                             __end_of_getMode 0502  
                   __end_of_PIN_MANAGER_IOC 051C                      __size_of_I2C_Read_Byte 002A  
                            _WDT_Initialize 0520                            _b_i2c_error_flag 0034  
              __end_of_setProxIntHighThresh 049A                             __end_of_setMode 01E9  
                         __end_of_I2C_Start 052E                                       pclath 000A  
              __size_of_setAmbientLightGain 001C                      __size_of_I2C_Send_NACK 0004  
                                     status 0003                                       wtemp0 007E  
                  ?_setLightIntLowThreshold 0075                  __end_of_setGestureLEDDrive 0255  
                     setGestureWaitTime@val 007D                               _gesture_data_ 00A0  
                           __initialization 0020                      ??_setGestureExitThresh 0075  
                              __end_of_main 0380                           _handleGestureFlag 0035  
               ?_INTERRUPT_InterruptManager 0070                      __end_of_setGestureGain 0286  
                 __size_of_setProximityGain 0029                      __end_of_setGestureMode 0410  
                                    ??_main 007E                     _IOCAF4_InterruptHandler 003C  
         __size_of_setLightIntHighThreshold 0024                      __end_of_WDT_Initialize 0524  
                 ?_setLightIntHighThreshold 0075           setLightIntHighThreshold@threshold 0075  
                      __size_of_enablePower 000D                                      _ANSELA 018C  
                                    _ANSELB 018D                                      _ANSELC 018E  
                        __CFG_RSTOSC$HFINT1 0000                setProxIntLowThresh@threshold 0076  
                                    _RC0PPS 0EA0                                      _RC1PPS 0EA1  
                                    _ODCONA 028C                                      _ODCONB 028D  
                                    _ODCONC 028E                                      i1l2770 04E2  
                          _wireReadDataByte 0410                                      _OSCFRQ 091F  
                   ?_resetGestureParameters 0070                                      _WDTCON 0097  
                                    _SSPBUF 0211                                   ??_InitI2C 0070  
                         _gesture_lr_delta_ 002C                              __CFG_PWRTE$OFF 0000  
             setProxIntHighThresh@threshold 0076                           _gesture_lr_count_ 0028  
                       wireReadDataByte@reg 0079                         wireReadDataByte@val 007A  
                         _gesture_ud_delta_ 002E                               _I2C_Read_Byte 02B7  
                         _gesture_ud_count_ 002A                  __end_of_setGestureWaitTime 03EC  
                            __CFG_STVREN$ON 0000                             ?_setGestureGain 0070  
                             _I2C_Send_NACK 051C                                   ??_getMode 007B  
                           ?_setGestureMode 0070                     ??_setGestureEnterThresh 0075  
                            _PMD_Initialize 0502                                   ?_I2C_Stop 0070  
                                 ??_setMode 0036                             ?_WDT_Initialize 0070  
                  ?_GestureInterruptHandler 0070  IOCAF4_SetInterruptHandler@InterruptHandler 0070  
                          ?_PIN_MANAGER_IOC 0070                                ??_IOCAF4_ISR 0070  
            __end_of_resetGestureParameters 0478                           _SYSTEM_Initialize 04E5  
                   __end_of__initialization 002F                          ?_SYSTEM_Initialize 0070  
                    setGestureWaitTime@time 007C                              ?_I2C_Read_Byte 0070  
                            __pcstackCOMMON 0070                         ??_SYSTEM_Initialize 0072  
    __end_of_IOCAF4_DefaultInterruptHandler 0533     __size_of_IOCAF4_DefaultInterruptHandler 0001  
            _IOCAF4_DefaultInterruptHandler 0532                        _setProxIntHighThresh 0489  
                            _gesture_state_ 0022                              ?_I2C_Send_NACK 0070  
                    __end_of_PMD_Initialize 050A                          __end_of_IOCAF4_ISR 04E5  
                                ??_I2C_Stop 0070                          _gesture_far_count_ 0024  
                      __size_of_setLEDBoost 0031                        __size_of_setLEDDrive 0029  
                 __end_of_SYSTEM_Initialize 04F1                                  __pbssBANK0 0020  
                                __pbssBANK1 00A0                        wireWriteDataByte@reg 0074  
                      wireWriteDataByte@val 0071                         getMode@enable_value 007C  
                                __pmaintext 035B                     setGestureLEDDrive@drive 0037  
                           __CFG_PPS1WAY$ON 0000                __size_of_enableGestureSensor 0060  
                                __pintentry 0004                       ?_setProxIntHighThresh 0070  
                   __size_of_I2C_Write_Byte 000F                               ??_I2C_ReStart 0070  
                          _setProximityGain 02E1                                 setMode@mode 0039  
                           ?_PMD_Initialize 0070                         _setAmbientLightGain 0430  
           __end_of_GestureInterruptHandler 0528                                     _OSCCON1 0919  
                                   _OSCCON3 091B                                     _OSCTUNE 091E  
                                   _SSP1ADD 0212                                     _SLRCONA 030C  
                                   _SLRCONB 030D                                     _SLRCONC 030E  
                                   _SSP1BUF 0211                                     _SSP1MSK 0213  
               __end_of_setGestureIntEnable 035B                        ?_setAmbientLightGain 0070  
                        _i2c1_driver_i2cISR 0030                                     _InitI2C 0531  
                                 _I2C_Start 052B                             ??_I2C_Read_Byte 0070  
                             setMode@enable 007D                             ??_I2C_Send_NACK 0070  
                  __end_of_wireReadDataByte 0430                                  _initialize 0033  
                                   _getMode 04FA            __size_of_setLightIntLowThreshold 0024  
                        _setGestureLEDDrive 0224                                     __ptext1 0033  
                                   __ptext2 02E1                                     __ptext3 0478  
                                   __ptext4 0489                                     __ptext5 0380  
                                   __ptext6 03A4                                     __ptext7 030A  
                                   __ptext8 03C8                                     __ptext9 0224  
                     _OSCILLATOR_Initialize 04F1                                     _setMode 019B  
                  ??_PIN_MANAGER_Initialize 0072                                   _IOCAFbits 0393  
                       __end_of_I2C_ReStart 0531                                   _IOCANbits 0392  
                                 _IOCAPbits 0391                         ?_setGestureLEDDrive 0070  
                __size_of_SYSTEM_Initialize 000C                                     clrloop0 050B  
                      end_of_initialization 002F                       ??_setAmbientLightGain 007B  
              __size_of_setProxIntLowThresh 0011                                  ?_I2C_Start 0070  
             enableGestureSensor@interrupts 003B               setGestureExitThresh@threshold 0076  
                      ??_setGestureLEDDrive 007B                                initialize@id 003B  
                          ??_setGestureGain 007B                      ??_setProxIntHighThresh 0075  
                          ??_setGestureMode 007B               __size_of_setGestureExitThresh 0011  
                          ??_WDT_Initialize 0070                           _wireWriteDataByte 044C  
                             ??_enablePower 007E                          ?_wireWriteDataByte 0071  
           setLightIntHighThreshold@val_low 0078              __size_of_setGestureEnterThresh 0011  
             __end_of_setGestureEnterThresh 04BC                          _setGestureWaitTime 03C8  
              ??_IOCAF4_SetInterruptHandler 0072                           __size_of_I2C_Stop 0003  
                       ??_wireWriteDataByte 0074                            __CFG_FEXTOSC$OFF 0000  
                       ?_setGestureWaitTime 0070                       setProximityGain@drive 0037  
          __size_of_GestureInterruptHandler 0004                   __end_of_wireWriteDataByte 0463  
                            _I2C_Write_Byte 04BC                        ??_setGestureWaitTime 007B  
                               ?_initialize 0070                                 _I2C_ReStart 052E  
       __size_of_IOCAF4_SetInterruptHandler 0006                      ?_OSCILLATOR_Initialize 0070  
                  _setLightIntHighThreshold 03A4                             _gesture_motion_ 0020  
                       start_initialization 0020                          setGestureGain@gain 0037  
           __size_of_PIN_MANAGER_Initialize 003B            setLightIntHighThreshold@val_high 0079  
                       _enableGestureSensor 013B                         __end_of_enablePower 04D8  
                  __end_of_setProximityGain 030A                                 ??_I2C_Start 0070  
                  __size_of_PIN_MANAGER_IOC 0006                            __CFG_LPBOREN$OFF 0000  
                    __end_of_I2C_Write_Byte 04CB                            ??_PMD_Initialize 0070  
           setLightIntLowThreshold@val_high 0079                        ?_enableGestureSensor 0070  
                        setGestureMode@mode 007C                     _setLightIntLowThreshold 0380  
                 setGestureIntEnable@enable 007D                    setAmbientLightGain@drive 007C  
                             ??_setLEDBoost 007B                               ??_setLEDDrive 007B  
                    setGestureIntEnable@val 007C                                   ___latbits 0002  
                             __pcstackBANK0 0036                         __size_of_initialize 0108  
                                  ?_InitI2C 0070                                   __pnvBANK0 003C  
                    _PIN_MANAGER_Initialize 01E9                             ?_I2C_Write_Byte 0070  
                     ??_enableGestureSensor 003A                  __size_of_wireWriteDataByte 0017  
               _i2c1_driver_busCollisionISR 0032                         _setProxIntLowThresh 0478  
              ??_INTERRUPT_InterruptManager 0070                                    ?_getMode 0070  
                        I2C_Read_Byte@count 0074                           ?_wireReadDataByte 0070  
                               _enablePower 04CB                          ??_wireReadDataByte 0078  
                                  _I2C_Stop 0528                    ??_resetGestureParameters 0070  
                                  ?_setMode 007D          __end_of_IOCAF4_SetInterruptHandler 0516  
                _IOCAF4_SetInterruptHandler 0510                         __end_of_setLEDBoost 02B7  
                       __end_of_setLEDDrive 0333                        ?_setProxIntLowThresh 0070  
                                  _LATAbits 010C                                    _LATCbits 010E  
                                 clear_ram0 050A                                    _PIE0bits 0090  
                                  _PIE1bits 0091                __size_of_setGestureIntEnable 0028  
                   _GestureInterruptHandler 0524                         _gesture_near_count_ 0026  
       __size_of_INTERRUPT_InterruptManager 001A                                    _PIR0bits 0010  
                                  _PIR1bits 0011                       __end_of_I2C_Read_Byte 02E1  
                 ??_setLightIntLowThreshold 0077                                    _SSP1CON1 0215  
                                  _SSP1CON2 0216                              setLEDBoost@val 0036  
                                  _SSP1STAT 0214                           ??_PIN_MANAGER_IOC 0070  
                     __end_of_I2C_Send_NACK 0520                              setLEDDrive@val 0036  
               __end_of_setAmbientLightGain 044C                __end_of_setGestureExitThresh 04AB  
                     ??_setProxIntLowThresh 0075                           setGestureGain@val 0036  
                          __size_of_InitI2C 0001                  ??_setLightIntHighThreshold 0077  
               __size_of_setGestureLEDDrive 0031                              setMode@reg_val 0038  
            setLightIntLowThreshold@val_low 0078                           setGestureMode@val 007D  
                   ??_OSCILLATOR_Initialize 0070               __size_of_setProxIntHighThresh 0011  
                              ??_initialize 003A                                ?_I2C_ReStart 0070  
          setLightIntLowThreshold@threshold 0075                            __size_of_getMode 0008  
                               _setLEDBoost 0286                                 _setLEDDrive 030A  
           __size_of_resetGestureParameters 0015             __end_of_setLightIntLowThreshold 03A4  
                     setGestureLEDDrive@val 0036                            __size_of_setMode 004E  
                                  __ptext10 0255                                    __ptext11 049A  
                                  __ptext20 04CB                                    __ptext12 04AB  
                                  __ptext21 019B                                    __ptext13 0430  
                                  __ptext30 052E                                    __ptext22 044C  
                                  __ptext14 0531                                    __ptext31 04E5  
                                  __ptext23 04FA                                    __ptext15 013B  
                                  __ptext40 0524                                    __ptext32 0520  
                                  __ptext24 0410                                    __ptext16 0286  
                                  __ptext41 0532                                    __ptext33 0502  
                                  __ptext25 04BC                                    __ptext17 03EC  
                                  __ptext34 01E9                                    __ptext26 0528  
                                  __ptext18 0333                                    __ptext35 0510  
                                  __ptext27 052B                                    __ptext19 0463  
                                  __ptext36 04F1                                    __ptext28 051C  
                                  __ptext29 02B7                                    __ptext38 0516  
                                  __ptext39 04D8                       _setGestureEnterThresh 04AB  
                              _SSP1CON1bits 0215                                _SSP1CON2bits 0216  
            setGestureEnterThresh@threshold 0076                                  _IOCAF4_ISR 04D8  
                 ??_GestureInterruptHandler 0070                               __size_of_main 0025  
                         ?_setProximityGain 0070                          __end_of_initialize 013B  
                        ??_setProximityGain 007B                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 001E                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                         setProximityGain@val 0036  
               __size_of_setGestureWaitTime 0024                     __size_of_setGestureGain 0031  
                                _INTCONbits 000B                     __size_of_setGestureMode 0024  
                    setAmbientLightGain@val 007D                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                     ?_PIN_MANAGER_Initialize 0070  
                          ??_I2C_Write_Byte 0070                           __CFG_CLKOUTEN$OFF 0000  
                    _resetGestureParameters 0463                        _setGestureExitThresh 049A  
                                _SSP1DATPPS 0E21                                ?_enablePower 0070  
                                _SSP1CLKPPS 0E20                         _setGestureIntEnable 0333  
                          setLEDBoost@boost 0037                      ?_setGestureEnterThresh 0070  
               ?_IOCAF4_SetInterruptHandler 0070                                 ?_IOCAF4_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 0224                   __size_of_wireReadDataByte 0020  
          ??_IOCAF4_DefaultInterruptHandler 0070             ?_IOCAF4_DefaultInterruptHandler 0070  
                          setLEDDrive@drive 0037                             _PIN_MANAGER_IOC 0516  
               __end_of_enableGestureSensor 019B                        ?_setGestureIntEnable 0070  
          __end_of_setLightIntHighThreshold 03C8  
