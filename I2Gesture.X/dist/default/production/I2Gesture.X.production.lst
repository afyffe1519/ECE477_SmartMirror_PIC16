

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 06 16:39:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F18345 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0097                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0197                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0295                     	;# 
   215  0295                     	;# 
   216  0296                     	;# 
   217  0297                     	;# 
   218  0298                     	;# 
   219  029F                     	;# 
   220  030C                     	;# 
   221  030D                     	;# 
   222  030E                     	;# 
   223  0311                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0315                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  038C                     	;# 
   234  038D                     	;# 
   235  038E                     	;# 
   236  0391                     	;# 
   237  0392                     	;# 
   238  0393                     	;# 
   239  0394                     	;# 
   240  0395                     	;# 
   241  0396                     	;# 
   242  0397                     	;# 
   243  0398                     	;# 
   244  0399                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0411                     	;# 
   251  0411                     	;# 
   252  0412                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  0418                     	;# 
   260  0419                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  0498                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  049E                     	;# 
   276  049F                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  0619                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  061C                     	;# 
   285  061F                     	;# 
   286  0691                     	;# 
   287  0692                     	;# 
   288  0693                     	;# 
   289  0694                     	;# 
   290  0695                     	;# 
   291  0696                     	;# 
   292  0697                     	;# 
   293  0698                     	;# 
   294  0699                     	;# 
   295  0711                     	;# 
   296  0712                     	;# 
   297  0713                     	;# 
   298  0714                     	;# 
   299  0715                     	;# 
   300  0716                     	;# 
   301  0717                     	;# 
   302  0718                     	;# 
   303  0719                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0891                     	;# 
   307  0891                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0892                     	;# 
   311  0892                     	;# 
   312  0892                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0893                     	;# 
   316  0893                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0894                     	;# 
   320  0894                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0895                     	;# 
   324  0895                     	;# 
   325  0896                     	;# 
   326  0896                     	;# 
   327  0896                     	;# 
   328  089B                     	;# 
   329  0911                     	;# 
   330  0912                     	;# 
   331  0913                     	;# 
   332  0914                     	;# 
   333  0915                     	;# 
   334  0916                     	;# 
   335  0918                     	;# 
   336  0919                     	;# 
   337  091A                     	;# 
   338  091B                     	;# 
   339  091C                     	;# 
   340  091D                     	;# 
   341  091E                     	;# 
   342  091F                     	;# 
   343  0E0F                     	;# 
   344  0E10                     	;# 
   345  0E11                     	;# 
   346  0E12                     	;# 
   347  0E13                     	;# 
   348  0E14                     	;# 
   349  0E15                     	;# 
   350  0E16                     	;# 
   351  0E17                     	;# 
   352  0E18                     	;# 
   353  0E19                     	;# 
   354  0E1A                     	;# 
   355  0E1B                     	;# 
   356  0E1C                     	;# 
   357  0E1D                     	;# 
   358  0E1E                     	;# 
   359  0E1F                     	;# 
   360  0E20                     	;# 
   361  0E21                     	;# 
   362  0E22                     	;# 
   363  0E24                     	;# 
   364  0E25                     	;# 
   365  0E28                     	;# 
   366  0E29                     	;# 
   367  0E2A                     	;# 
   368  0E2B                     	;# 
   369  0E2C                     	;# 
   370  0E2D                     	;# 
   371  0E2E                     	;# 
   372  0E2F                     	;# 
   373  0E90                     	;# 
   374  0E91                     	;# 
   375  0E92                     	;# 
   376  0E94                     	;# 
   377  0E95                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0EA0                     	;# 
   383  0EA1                     	;# 
   384  0EA2                     	;# 
   385  0EA3                     	;# 
   386  0EA4                     	;# 
   387  0EA5                     	;# 
   388  0EA6                     	;# 
   389  0EA7                     	;# 
   390  0F0F                     	;# 
   391  0F10                     	;# 
   392  0F11                     	;# 
   393  0F12                     	;# 
   394  0F13                     	;# 
   395  0F14                     	;# 
   396  0F15                     	;# 
   397  0F16                     	;# 
   398  0F17                     	;# 
   399  0F18                     	;# 
   400  0F19                     	;# 
   401  0F1A                     	;# 
   402  0F1B                     	;# 
   403  0F1C                     	;# 
   404  0F1D                     	;# 
   405  0F1E                     	;# 
   406  0F1F                     	;# 
   407  0F20                     	;# 
   408  0F21                     	;# 
   409  0F22                     	;# 
   410  0F23                     	;# 
   411  0F24                     	;# 
   412  0F25                     	;# 
   413  0F26                     	;# 
   414  0F27                     	;# 
   415  0F28                     	;# 
   416  0F29                     	;# 
   417  0F2A                     	;# 
   418  0F2B                     	;# 
   419  0F2C                     	;# 
   420  0F2D                     	;# 
   421  0F2E                     	;# 
   422  0F2F                     	;# 
   423  0F30                     	;# 
   424  0F31                     	;# 
   425  0F32                     	;# 
   426  0F33                     	;# 
   427  0F34                     	;# 
   428  0F35                     	;# 
   429  0F36                     	;# 
   430  0F37                     	;# 
   431  0FE4                     	;# 
   432  0FE5                     	;# 
   433  0FE6                     	;# 
   434  0FE7                     	;# 
   435  0FE8                     	;# 
   436  0FE9                     	;# 
   437  0FEA                     	;# 
   438  0FEB                     	;# 
   439  0FED                     	;# 
   440  0FEE                     	;# 
   441  0FEF                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  008D                     	;# 
   478  008E                     	;# 
   479  0090                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0097                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  009F                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  010E                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  018E                     	;# 
   506  0197                     	;# 
   507  0199                     	;# 
   508  0199                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019A                     	;# 
   512  019A                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019C                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019D                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019E                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  019F                     	;# 
   529  019F                     	;# 
   530  019F                     	;# 
   531  019F                     	;# 
   532  020C                     	;# 
   533  020D                     	;# 
   534  020E                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0219                     	;# 
   552  021A                     	;# 
   553  021B                     	;# 
   554  021C                     	;# 
   555  021D                     	;# 
   556  021D                     	;# 
   557  021E                     	;# 
   558  021F                     	;# 
   559  028C                     	;# 
   560  028D                     	;# 
   561  028E                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0295                     	;# 
   568  0295                     	;# 
   569  0296                     	;# 
   570  0297                     	;# 
   571  0298                     	;# 
   572  029F                     	;# 
   573  030C                     	;# 
   574  030D                     	;# 
   575  030E                     	;# 
   576  0311                     	;# 
   577  0311                     	;# 
   578  0312                     	;# 
   579  0313                     	;# 
   580  0314                     	;# 
   581  0315                     	;# 
   582  0315                     	;# 
   583  0316                     	;# 
   584  0317                     	;# 
   585  0318                     	;# 
   586  038C                     	;# 
   587  038D                     	;# 
   588  038E                     	;# 
   589  0391                     	;# 
   590  0392                     	;# 
   591  0393                     	;# 
   592  0394                     	;# 
   593  0395                     	;# 
   594  0396                     	;# 
   595  0397                     	;# 
   596  0398                     	;# 
   597  0399                     	;# 
   598  039A                     	;# 
   599  039C                     	;# 
   600  039D                     	;# 
   601  039E                     	;# 
   602  039F                     	;# 
   603  0411                     	;# 
   604  0411                     	;# 
   605  0412                     	;# 
   606  0413                     	;# 
   607  0414                     	;# 
   608  0415                     	;# 
   609  0416                     	;# 
   610  0417                     	;# 
   611  0418                     	;# 
   612  0418                     	;# 
   613  0419                     	;# 
   614  041A                     	;# 
   615  041B                     	;# 
   616  041C                     	;# 
   617  041D                     	;# 
   618  041E                     	;# 
   619  041F                     	;# 
   620  0498                     	;# 
   621  0498                     	;# 
   622  0499                     	;# 
   623  049A                     	;# 
   624  049B                     	;# 
   625  049B                     	;# 
   626  049C                     	;# 
   627  049D                     	;# 
   628  049E                     	;# 
   629  049F                     	;# 
   630  0617                     	;# 
   631  0618                     	;# 
   632  0619                     	;# 
   633  0619                     	;# 
   634  061A                     	;# 
   635  061B                     	;# 
   636  061C                     	;# 
   637  061C                     	;# 
   638  061F                     	;# 
   639  0691                     	;# 
   640  0692                     	;# 
   641  0693                     	;# 
   642  0694                     	;# 
   643  0695                     	;# 
   644  0696                     	;# 
   645  0697                     	;# 
   646  0698                     	;# 
   647  0699                     	;# 
   648  0711                     	;# 
   649  0712                     	;# 
   650  0713                     	;# 
   651  0714                     	;# 
   652  0715                     	;# 
   653  0716                     	;# 
   654  0717                     	;# 
   655  0718                     	;# 
   656  0719                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0891                     	;# 
   662  0891                     	;# 
   663  0892                     	;# 
   664  0892                     	;# 
   665  0892                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0893                     	;# 
   671  0893                     	;# 
   672  0894                     	;# 
   673  0894                     	;# 
   674  0894                     	;# 
   675  0895                     	;# 
   676  0895                     	;# 
   677  0895                     	;# 
   678  0896                     	;# 
   679  0896                     	;# 
   680  0896                     	;# 
   681  089B                     	;# 
   682  0911                     	;# 
   683  0912                     	;# 
   684  0913                     	;# 
   685  0914                     	;# 
   686  0915                     	;# 
   687  0916                     	;# 
   688  0918                     	;# 
   689  0919                     	;# 
   690  091A                     	;# 
   691  091B                     	;# 
   692  091C                     	;# 
   693  091D                     	;# 
   694  091E                     	;# 
   695  091F                     	;# 
   696  0E0F                     	;# 
   697  0E10                     	;# 
   698  0E11                     	;# 
   699  0E12                     	;# 
   700  0E13                     	;# 
   701  0E14                     	;# 
   702  0E15                     	;# 
   703  0E16                     	;# 
   704  0E17                     	;# 
   705  0E18                     	;# 
   706  0E19                     	;# 
   707  0E1A                     	;# 
   708  0E1B                     	;# 
   709  0E1C                     	;# 
   710  0E1D                     	;# 
   711  0E1E                     	;# 
   712  0E1F                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E2C                     	;# 
   723  0E2D                     	;# 
   724  0E2E                     	;# 
   725  0E2F                     	;# 
   726  0E90                     	;# 
   727  0E91                     	;# 
   728  0E92                     	;# 
   729  0E94                     	;# 
   730  0E95                     	;# 
   731  0E9C                     	;# 
   732  0E9D                     	;# 
   733  0E9E                     	;# 
   734  0E9F                     	;# 
   735  0EA0                     	;# 
   736  0EA1                     	;# 
   737  0EA2                     	;# 
   738  0EA3                     	;# 
   739  0EA4                     	;# 
   740  0EA5                     	;# 
   741  0EA6                     	;# 
   742  0EA7                     	;# 
   743  0F0F                     	;# 
   744  0F10                     	;# 
   745  0F11                     	;# 
   746  0F12                     	;# 
   747  0F13                     	;# 
   748  0F14                     	;# 
   749  0F15                     	;# 
   750  0F16                     	;# 
   751  0F17                     	;# 
   752  0F18                     	;# 
   753  0F19                     	;# 
   754  0F1A                     	;# 
   755  0F1B                     	;# 
   756  0F1C                     	;# 
   757  0F1D                     	;# 
   758  0F1E                     	;# 
   759  0F1F                     	;# 
   760  0F20                     	;# 
   761  0F21                     	;# 
   762  0F22                     	;# 
   763  0F23                     	;# 
   764  0F24                     	;# 
   765  0F25                     	;# 
   766  0F26                     	;# 
   767  0F27                     	;# 
   768  0F28                     	;# 
   769  0F29                     	;# 
   770  0F2A                     	;# 
   771  0F2B                     	;# 
   772  0F2C                     	;# 
   773  0F2D                     	;# 
   774  0F2E                     	;# 
   775  0F2F                     	;# 
   776  0F30                     	;# 
   777  0F31                     	;# 
   778  0F32                     	;# 
   779  0F33                     	;# 
   780  0F34                     	;# 
   781  0F35                     	;# 
   782  0F36                     	;# 
   783  0F37                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0094                     	;# 
   837  0097                     	;# 
   838  009B                     	;# 
   839  009B                     	;# 
   840  009C                     	;# 
   841  009D                     	;# 
   842  009E                     	;# 
   843  009F                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0111                     	;# 
   848  0112                     	;# 
   849  0113                     	;# 
   850  0114                     	;# 
   851  0115                     	;# 
   852  0116                     	;# 
   853  0117                     	;# 
   854  0118                     	;# 
   855  0119                     	;# 
   856  018C                     	;# 
   857  018D                     	;# 
   858  018E                     	;# 
   859  0197                     	;# 
   860  0199                     	;# 
   861  0199                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019A                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019C                     	;# 
   873  019C                     	;# 
   874  019D                     	;# 
   875  019D                     	;# 
   876  019D                     	;# 
   877  019E                     	;# 
   878  019E                     	;# 
   879  019E                     	;# 
   880  019F                     	;# 
   881  019F                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  020D                     	;# 
   887  020E                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0216                     	;# 
   901  0216                     	;# 
   902  0217                     	;# 
   903  0217                     	;# 
   904  0219                     	;# 
   905  021A                     	;# 
   906  021B                     	;# 
   907  021C                     	;# 
   908  021D                     	;# 
   909  021D                     	;# 
   910  021E                     	;# 
   911  021F                     	;# 
   912  028C                     	;# 
   913  028D                     	;# 
   914  028E                     	;# 
   915  0291                     	;# 
   916  0291                     	;# 
   917  0292                     	;# 
   918  0293                     	;# 
   919  0294                     	;# 
   920  0295                     	;# 
   921  0295                     	;# 
   922  0296                     	;# 
   923  0297                     	;# 
   924  0298                     	;# 
   925  029F                     	;# 
   926  030C                     	;# 
   927  030D                     	;# 
   928  030E                     	;# 
   929  0311                     	;# 
   930  0311                     	;# 
   931  0312                     	;# 
   932  0313                     	;# 
   933  0314                     	;# 
   934  0315                     	;# 
   935  0315                     	;# 
   936  0316                     	;# 
   937  0317                     	;# 
   938  0318                     	;# 
   939  038C                     	;# 
   940  038D                     	;# 
   941  038E                     	;# 
   942  0391                     	;# 
   943  0392                     	;# 
   944  0393                     	;# 
   945  0394                     	;# 
   946  0395                     	;# 
   947  0396                     	;# 
   948  0397                     	;# 
   949  0398                     	;# 
   950  0399                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0411                     	;# 
   957  0411                     	;# 
   958  0412                     	;# 
   959  0413                     	;# 
   960  0414                     	;# 
   961  0415                     	;# 
   962  0416                     	;# 
   963  0417                     	;# 
   964  0418                     	;# 
   965  0418                     	;# 
   966  0419                     	;# 
   967  041A                     	;# 
   968  041B                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  041F                     	;# 
   973  0498                     	;# 
   974  0498                     	;# 
   975  0499                     	;# 
   976  049A                     	;# 
   977  049B                     	;# 
   978  049B                     	;# 
   979  049C                     	;# 
   980  049D                     	;# 
   981  049E                     	;# 
   982  049F                     	;# 
   983  0617                     	;# 
   984  0618                     	;# 
   985  0619                     	;# 
   986  0619                     	;# 
   987  061A                     	;# 
   988  061B                     	;# 
   989  061C                     	;# 
   990  061C                     	;# 
   991  061F                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  0711                     	;# 
  1002  0712                     	;# 
  1003  0713                     	;# 
  1004  0714                     	;# 
  1005  0715                     	;# 
  1006  0716                     	;# 
  1007  0717                     	;# 
  1008  0718                     	;# 
  1009  0719                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0892                     	;# 
  1017  0892                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0894                     	;# 
  1026  0894                     	;# 
  1027  0894                     	;# 
  1028  0895                     	;# 
  1029  0895                     	;# 
  1030  0895                     	;# 
  1031  0896                     	;# 
  1032  0896                     	;# 
  1033  0896                     	;# 
  1034  089B                     	;# 
  1035  0911                     	;# 
  1036  0912                     	;# 
  1037  0913                     	;# 
  1038  0914                     	;# 
  1039  0915                     	;# 
  1040  0916                     	;# 
  1041  0918                     	;# 
  1042  0919                     	;# 
  1043  091A                     	;# 
  1044  091B                     	;# 
  1045  091C                     	;# 
  1046  091D                     	;# 
  1047  091E                     	;# 
  1048  091F                     	;# 
  1049  0E0F                     	;# 
  1050  0E10                     	;# 
  1051  0E11                     	;# 
  1052  0E12                     	;# 
  1053  0E13                     	;# 
  1054  0E14                     	;# 
  1055  0E15                     	;# 
  1056  0E16                     	;# 
  1057  0E17                     	;# 
  1058  0E18                     	;# 
  1059  0E19                     	;# 
  1060  0E1A                     	;# 
  1061  0E1B                     	;# 
  1062  0E1C                     	;# 
  1063  0E1D                     	;# 
  1064  0E1E                     	;# 
  1065  0E1F                     	;# 
  1066  0E20                     	;# 
  1067  0E21                     	;# 
  1068  0E22                     	;# 
  1069  0E24                     	;# 
  1070  0E25                     	;# 
  1071  0E28                     	;# 
  1072  0E29                     	;# 
  1073  0E2A                     	;# 
  1074  0E2B                     	;# 
  1075  0E2C                     	;# 
  1076  0E2D                     	;# 
  1077  0E2E                     	;# 
  1078  0E2F                     	;# 
  1079  0E90                     	;# 
  1080  0E91                     	;# 
  1081  0E92                     	;# 
  1082  0E94                     	;# 
  1083  0E95                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0E9F                     	;# 
  1088  0EA0                     	;# 
  1089  0EA1                     	;# 
  1090  0EA2                     	;# 
  1091  0EA3                     	;# 
  1092  0EA4                     	;# 
  1093  0EA5                     	;# 
  1094  0EA6                     	;# 
  1095  0EA7                     	;# 
  1096  0F0F                     	;# 
  1097  0F10                     	;# 
  1098  0F11                     	;# 
  1099  0F12                     	;# 
  1100  0F13                     	;# 
  1101  0F14                     	;# 
  1102  0F15                     	;# 
  1103  0F16                     	;# 
  1104  0F17                     	;# 
  1105  0F18                     	;# 
  1106  0F19                     	;# 
  1107  0F1A                     	;# 
  1108  0F1B                     	;# 
  1109  0F1C                     	;# 
  1110  0F1D                     	;# 
  1111  0F1E                     	;# 
  1112  0F1F                     	;# 
  1113  0F20                     	;# 
  1114  0F21                     	;# 
  1115  0F22                     	;# 
  1116  0F23                     	;# 
  1117  0F24                     	;# 
  1118  0F25                     	;# 
  1119  0F26                     	;# 
  1120  0F27                     	;# 
  1121  0F28                     	;# 
  1122  0F29                     	;# 
  1123  0F2A                     	;# 
  1124  0F2B                     	;# 
  1125  0F2C                     	;# 
  1126  0F2D                     	;# 
  1127  0F2E                     	;# 
  1128  0F2F                     	;# 
  1129  0F30                     	;# 
  1130  0F31                     	;# 
  1131  0F32                     	;# 
  1132  0F33                     	;# 
  1133  0F34                     	;# 
  1134  0F35                     	;# 
  1135  0F36                     	;# 
  1136  0F37                     	;# 
  1137  0FE4                     	;# 
  1138  0FE5                     	;# 
  1139  0FE6                     	;# 
  1140  0FE7                     	;# 
  1141  0FE8                     	;# 
  1142  0FE9                     	;# 
  1143  0FEA                     	;# 
  1144  0FEB                     	;# 
  1145  0FED                     	;# 
  1146  0FEE                     	;# 
  1147  0FEF                     	;# 
  1148  0000                     	;# 
  1149  0001                     	;# 
  1150  0002                     	;# 
  1151  0003                     	;# 
  1152  0004                     	;# 
  1153  0005                     	;# 
  1154  0006                     	;# 
  1155  0007                     	;# 
  1156  0008                     	;# 
  1157  0009                     	;# 
  1158  000A                     	;# 
  1159  000B                     	;# 
  1160  000C                     	;# 
  1161  000D                     	;# 
  1162  000E                     	;# 
  1163  0010                     	;# 
  1164  0011                     	;# 
  1165  0012                     	;# 
  1166  0013                     	;# 
  1167  0014                     	;# 
  1168  0015                     	;# 
  1169  0015                     	;# 
  1170  0016                     	;# 
  1171  0016                     	;# 
  1172  0017                     	;# 
  1173  0018                     	;# 
  1174  0019                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  001D                     	;# 
  1180  001E                     	;# 
  1181  001F                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0093                     	;# 
  1189  0094                     	;# 
  1190  0097                     	;# 
  1191  009B                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  009F                     	;# 
  1197  010C                     	;# 
  1198  010D                     	;# 
  1199  010E                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0118                     	;# 
  1208  0119                     	;# 
  1209  018C                     	;# 
  1210  018D                     	;# 
  1211  018E                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  0199                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019A                     	;# 
  1218  019A                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019C                     	;# 
  1225  019C                     	;# 
  1226  019C                     	;# 
  1227  019D                     	;# 
  1228  019D                     	;# 
  1229  019D                     	;# 
  1230  019E                     	;# 
  1231  019E                     	;# 
  1232  019E                     	;# 
  1233  019F                     	;# 
  1234  019F                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0212                     	;# 
  1245  0213                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0216                     	;# 
  1254  0216                     	;# 
  1255  0217                     	;# 
  1256  0217                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021D                     	;# 
  1262  021D                     	;# 
  1263  021E                     	;# 
  1264  021F                     	;# 
  1265  028C                     	;# 
  1266  028D                     	;# 
  1267  028E                     	;# 
  1268  0291                     	;# 
  1269  0291                     	;# 
  1270  0292                     	;# 
  1271  0293                     	;# 
  1272  0294                     	;# 
  1273  0295                     	;# 
  1274  0295                     	;# 
  1275  0296                     	;# 
  1276  0297                     	;# 
  1277  0298                     	;# 
  1278  029F                     	;# 
  1279  030C                     	;# 
  1280  030D                     	;# 
  1281  030E                     	;# 
  1282  0311                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0315                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  038C                     	;# 
  1293  038D                     	;# 
  1294  038E                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  0393                     	;# 
  1298  0394                     	;# 
  1299  0395                     	;# 
  1300  0396                     	;# 
  1301  0397                     	;# 
  1302  0398                     	;# 
  1303  0399                     	;# 
  1304  039A                     	;# 
  1305  039C                     	;# 
  1306  039D                     	;# 
  1307  039E                     	;# 
  1308  039F                     	;# 
  1309  0411                     	;# 
  1310  0411                     	;# 
  1311  0412                     	;# 
  1312  0413                     	;# 
  1313  0414                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  0418                     	;# 
  1318  0418                     	;# 
  1319  0419                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041D                     	;# 
  1324  041E                     	;# 
  1325  041F                     	;# 
  1326  0498                     	;# 
  1327  0498                     	;# 
  1328  0499                     	;# 
  1329  049A                     	;# 
  1330  049B                     	;# 
  1331  049B                     	;# 
  1332  049C                     	;# 
  1333  049D                     	;# 
  1334  049E                     	;# 
  1335  049F                     	;# 
  1336  0617                     	;# 
  1337  0618                     	;# 
  1338  0619                     	;# 
  1339  0619                     	;# 
  1340  061A                     	;# 
  1341  061B                     	;# 
  1342  061C                     	;# 
  1343  061C                     	;# 
  1344  061F                     	;# 
  1345  0691                     	;# 
  1346  0692                     	;# 
  1347  0693                     	;# 
  1348  0694                     	;# 
  1349  0695                     	;# 
  1350  0696                     	;# 
  1351  0697                     	;# 
  1352  0698                     	;# 
  1353  0699                     	;# 
  1354  0711                     	;# 
  1355  0712                     	;# 
  1356  0713                     	;# 
  1357  0714                     	;# 
  1358  0715                     	;# 
  1359  0716                     	;# 
  1360  0717                     	;# 
  1361  0718                     	;# 
  1362  0719                     	;# 
  1363  0891                     	;# 
  1364  0891                     	;# 
  1365  0891                     	;# 
  1366  0891                     	;# 
  1367  0891                     	;# 
  1368  0891                     	;# 
  1369  0892                     	;# 
  1370  0892                     	;# 
  1371  0892                     	;# 
  1372  0893                     	;# 
  1373  0893                     	;# 
  1374  0893                     	;# 
  1375  0893                     	;# 
  1376  0893                     	;# 
  1377  0893                     	;# 
  1378  0894                     	;# 
  1379  0894                     	;# 
  1380  0894                     	;# 
  1381  0895                     	;# 
  1382  0895                     	;# 
  1383  0895                     	;# 
  1384  0896                     	;# 
  1385  0896                     	;# 
  1386  0896                     	;# 
  1387  089B                     	;# 
  1388  0911                     	;# 
  1389  0912                     	;# 
  1390  0913                     	;# 
  1391  0914                     	;# 
  1392  0915                     	;# 
  1393  0916                     	;# 
  1394  0918                     	;# 
  1395  0919                     	;# 
  1396  091A                     	;# 
  1397  091B                     	;# 
  1398  091C                     	;# 
  1399  091D                     	;# 
  1400  091E                     	;# 
  1401  091F                     	;# 
  1402  0E0F                     	;# 
  1403  0E10                     	;# 
  1404  0E11                     	;# 
  1405  0E12                     	;# 
  1406  0E13                     	;# 
  1407  0E14                     	;# 
  1408  0E15                     	;# 
  1409  0E16                     	;# 
  1410  0E17                     	;# 
  1411  0E18                     	;# 
  1412  0E19                     	;# 
  1413  0E1A                     	;# 
  1414  0E1B                     	;# 
  1415  0E1C                     	;# 
  1416  0E1D                     	;# 
  1417  0E1E                     	;# 
  1418  0E1F                     	;# 
  1419  0E20                     	;# 
  1420  0E21                     	;# 
  1421  0E22                     	;# 
  1422  0E24                     	;# 
  1423  0E25                     	;# 
  1424  0E28                     	;# 
  1425  0E29                     	;# 
  1426  0E2A                     	;# 
  1427  0E2B                     	;# 
  1428  0E2C                     	;# 
  1429  0E2D                     	;# 
  1430  0E2E                     	;# 
  1431  0E2F                     	;# 
  1432  0E90                     	;# 
  1433  0E91                     	;# 
  1434  0E92                     	;# 
  1435  0E94                     	;# 
  1436  0E95                     	;# 
  1437  0E9C                     	;# 
  1438  0E9D                     	;# 
  1439  0E9E                     	;# 
  1440  0E9F                     	;# 
  1441  0EA0                     	;# 
  1442  0EA1                     	;# 
  1443  0EA2                     	;# 
  1444  0EA3                     	;# 
  1445  0EA4                     	;# 
  1446  0EA5                     	;# 
  1447  0EA6                     	;# 
  1448  0EA7                     	;# 
  1449  0F0F                     	;# 
  1450  0F10                     	;# 
  1451  0F11                     	;# 
  1452  0F12                     	;# 
  1453  0F13                     	;# 
  1454  0F14                     	;# 
  1455  0F15                     	;# 
  1456  0F16                     	;# 
  1457  0F17                     	;# 
  1458  0F18                     	;# 
  1459  0F19                     	;# 
  1460  0F1A                     	;# 
  1461  0F1B                     	;# 
  1462  0F1C                     	;# 
  1463  0F1D                     	;# 
  1464  0F1E                     	;# 
  1465  0F1F                     	;# 
  1466  0F20                     	;# 
  1467  0F21                     	;# 
  1468  0F22                     	;# 
  1469  0F23                     	;# 
  1470  0F24                     	;# 
  1471  0F25                     	;# 
  1472  0F26                     	;# 
  1473  0F27                     	;# 
  1474  0F28                     	;# 
  1475  0F29                     	;# 
  1476  0F2A                     	;# 
  1477  0F2B                     	;# 
  1478  0F2C                     	;# 
  1479  0F2D                     	;# 
  1480  0F2E                     	;# 
  1481  0F2F                     	;# 
  1482  0F30                     	;# 
  1483  0F31                     	;# 
  1484  0F32                     	;# 
  1485  0F33                     	;# 
  1486  0F34                     	;# 
  1487  0F35                     	;# 
  1488  0F36                     	;# 
  1489  0F37                     	;# 
  1490  0FE4                     	;# 
  1491  0FE5                     	;# 
  1492  0FE6                     	;# 
  1493  0FE7                     	;# 
  1494  0FE8                     	;# 
  1495  0FE9                     	;# 
  1496  0FEA                     	;# 
  1497  0FEB                     	;# 
  1498  0FED                     	;# 
  1499  0FEE                     	;# 
  1500  0FEF                     	;# 
  1501  0000                     	;# 
  1502  0001                     	;# 
  1503  0002                     	;# 
  1504  0003                     	;# 
  1505  0004                     	;# 
  1506  0005                     	;# 
  1507  0006                     	;# 
  1508  0007                     	;# 
  1509  0008                     	;# 
  1510  0009                     	;# 
  1511  000A                     	;# 
  1512  000B                     	;# 
  1513  000C                     	;# 
  1514  000D                     	;# 
  1515  000E                     	;# 
  1516  0010                     	;# 
  1517  0011                     	;# 
  1518  0012                     	;# 
  1519  0013                     	;# 
  1520  0014                     	;# 
  1521  0015                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001D                     	;# 
  1533  001E                     	;# 
  1534  001F                     	;# 
  1535  008C                     	;# 
  1536  008D                     	;# 
  1537  008E                     	;# 
  1538  0090                     	;# 
  1539  0091                     	;# 
  1540  0092                     	;# 
  1541  0093                     	;# 
  1542  0094                     	;# 
  1543  0097                     	;# 
  1544  009B                     	;# 
  1545  009B                     	;# 
  1546  009C                     	;# 
  1547  009D                     	;# 
  1548  009E                     	;# 
  1549  009F                     	;# 
  1550  010C                     	;# 
  1551  010D                     	;# 
  1552  010E                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  018C                     	;# 
  1563  018D                     	;# 
  1564  018E                     	;# 
  1565  0197                     	;# 
  1566  0199                     	;# 
  1567  0199                     	;# 
  1568  0199                     	;# 
  1569  019A                     	;# 
  1570  019A                     	;# 
  1571  019A                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019C                     	;# 
  1578  019C                     	;# 
  1579  019C                     	;# 
  1580  019D                     	;# 
  1581  019D                     	;# 
  1582  019D                     	;# 
  1583  019E                     	;# 
  1584  019E                     	;# 
  1585  019E                     	;# 
  1586  019F                     	;# 
  1587  019F                     	;# 
  1588  019F                     	;# 
  1589  019F                     	;# 
  1590  019F                     	;# 
  1591  020C                     	;# 
  1592  020D                     	;# 
  1593  020E                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0212                     	;# 
  1598  0213                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0215                     	;# 
  1606  0216                     	;# 
  1607  0216                     	;# 
  1608  0217                     	;# 
  1609  0217                     	;# 
  1610  0219                     	;# 
  1611  021A                     	;# 
  1612  021B                     	;# 
  1613  021C                     	;# 
  1614  021D                     	;# 
  1615  021D                     	;# 
  1616  021E                     	;# 
  1617  021F                     	;# 
  1618  028C                     	;# 
  1619  028D                     	;# 
  1620  028E                     	;# 
  1621  0291                     	;# 
  1622  0291                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0294                     	;# 
  1626  0295                     	;# 
  1627  0295                     	;# 
  1628  0296                     	;# 
  1629  0297                     	;# 
  1630  0298                     	;# 
  1631  029F                     	;# 
  1632  030C                     	;# 
  1633  030D                     	;# 
  1634  030E                     	;# 
  1635  0311                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0315                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0317                     	;# 
  1644  0318                     	;# 
  1645  038C                     	;# 
  1646  038D                     	;# 
  1647  038E                     	;# 
  1648  0391                     	;# 
  1649  0392                     	;# 
  1650  0393                     	;# 
  1651  0394                     	;# 
  1652  0395                     	;# 
  1653  0396                     	;# 
  1654  0397                     	;# 
  1655  0398                     	;# 
  1656  0399                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0411                     	;# 
  1663  0411                     	;# 
  1664  0412                     	;# 
  1665  0413                     	;# 
  1666  0414                     	;# 
  1667  0415                     	;# 
  1668  0416                     	;# 
  1669  0417                     	;# 
  1670  0418                     	;# 
  1671  0418                     	;# 
  1672  0419                     	;# 
  1673  041A                     	;# 
  1674  041B                     	;# 
  1675  041C                     	;# 
  1676  041D                     	;# 
  1677  041E                     	;# 
  1678  041F                     	;# 
  1679  0498                     	;# 
  1680  0498                     	;# 
  1681  0499                     	;# 
  1682  049A                     	;# 
  1683  049B                     	;# 
  1684  049B                     	;# 
  1685  049C                     	;# 
  1686  049D                     	;# 
  1687  049E                     	;# 
  1688  049F                     	;# 
  1689  0617                     	;# 
  1690  0618                     	;# 
  1691  0619                     	;# 
  1692  0619                     	;# 
  1693  061A                     	;# 
  1694  061B                     	;# 
  1695  061C                     	;# 
  1696  061C                     	;# 
  1697  061F                     	;# 
  1698  0691                     	;# 
  1699  0692                     	;# 
  1700  0693                     	;# 
  1701  0694                     	;# 
  1702  0695                     	;# 
  1703  0696                     	;# 
  1704  0697                     	;# 
  1705  0698                     	;# 
  1706  0699                     	;# 
  1707  0711                     	;# 
  1708  0712                     	;# 
  1709  0713                     	;# 
  1710  0714                     	;# 
  1711  0715                     	;# 
  1712  0716                     	;# 
  1713  0717                     	;# 
  1714  0718                     	;# 
  1715  0719                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0891                     	;# 
  1719  0891                     	;# 
  1720  0891                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0892                     	;# 
  1724  0892                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0893                     	;# 
  1730  0893                     	;# 
  1731  0894                     	;# 
  1732  0894                     	;# 
  1733  0894                     	;# 
  1734  0895                     	;# 
  1735  0895                     	;# 
  1736  0895                     	;# 
  1737  0896                     	;# 
  1738  0896                     	;# 
  1739  0896                     	;# 
  1740  089B                     	;# 
  1741  0911                     	;# 
  1742  0912                     	;# 
  1743  0913                     	;# 
  1744  0914                     	;# 
  1745  0915                     	;# 
  1746  0916                     	;# 
  1747  0918                     	;# 
  1748  0919                     	;# 
  1749  091A                     	;# 
  1750  091B                     	;# 
  1751  091C                     	;# 
  1752  091D                     	;# 
  1753  091E                     	;# 
  1754  091F                     	;# 
  1755  0E0F                     	;# 
  1756  0E10                     	;# 
  1757  0E11                     	;# 
  1758  0E12                     	;# 
  1759  0E13                     	;# 
  1760  0E14                     	;# 
  1761  0E15                     	;# 
  1762  0E16                     	;# 
  1763  0E17                     	;# 
  1764  0E18                     	;# 
  1765  0E19                     	;# 
  1766  0E1A                     	;# 
  1767  0E1B                     	;# 
  1768  0E1C                     	;# 
  1769  0E1D                     	;# 
  1770  0E1E                     	;# 
  1771  0E1F                     	;# 
  1772  0E20                     	;# 
  1773  0E21                     	;# 
  1774  0E22                     	;# 
  1775  0E24                     	;# 
  1776  0E25                     	;# 
  1777  0E28                     	;# 
  1778  0E29                     	;# 
  1779  0E2A                     	;# 
  1780  0E2B                     	;# 
  1781  0E2C                     	;# 
  1782  0E2D                     	;# 
  1783  0E2E                     	;# 
  1784  0E2F                     	;# 
  1785  0E90                     	;# 
  1786  0E91                     	;# 
  1787  0E92                     	;# 
  1788  0E94                     	;# 
  1789  0E95                     	;# 
  1790  0E9C                     	;# 
  1791  0E9D                     	;# 
  1792  0E9E                     	;# 
  1793  0E9F                     	;# 
  1794  0EA0                     	;# 
  1795  0EA1                     	;# 
  1796  0EA2                     	;# 
  1797  0EA3                     	;# 
  1798  0EA4                     	;# 
  1799  0EA5                     	;# 
  1800  0EA6                     	;# 
  1801  0EA7                     	;# 
  1802  0F0F                     	;# 
  1803  0F10                     	;# 
  1804  0F11                     	;# 
  1805  0F12                     	;# 
  1806  0F13                     	;# 
  1807  0F14                     	;# 
  1808  0F15                     	;# 
  1809  0F16                     	;# 
  1810  0F17                     	;# 
  1811  0F18                     	;# 
  1812  0F19                     	;# 
  1813  0F1A                     	;# 
  1814  0F1B                     	;# 
  1815  0F1C                     	;# 
  1816  0F1D                     	;# 
  1817  0F1E                     	;# 
  1818  0F1F                     	;# 
  1819  0F20                     	;# 
  1820  0F21                     	;# 
  1821  0F22                     	;# 
  1822  0F23                     	;# 
  1823  0F24                     	;# 
  1824  0F25                     	;# 
  1825  0F26                     	;# 
  1826  0F27                     	;# 
  1827  0F28                     	;# 
  1828  0F29                     	;# 
  1829  0F2A                     	;# 
  1830  0F2B                     	;# 
  1831  0F2C                     	;# 
  1832  0F2D                     	;# 
  1833  0F2E                     	;# 
  1834  0F2F                     	;# 
  1835  0F30                     	;# 
  1836  0F31                     	;# 
  1837  0F32                     	;# 
  1838  0F33                     	;# 
  1839  0F34                     	;# 
  1840  0F35                     	;# 
  1841  0F36                     	;# 
  1842  0F37                     	;# 
  1843  0FE4                     	;# 
  1844  0FE5                     	;# 
  1845  0FE6                     	;# 
  1846  0FE7                     	;# 
  1847  0FE8                     	;# 
  1848  0FE9                     	;# 
  1849  0FEA                     	;# 
  1850  0FEB                     	;# 
  1851  0FED                     	;# 
  1852  0FEE                     	;# 
  1853  0FEF                     	;# 
  1854  0000                     	;# 
  1855  0001                     	;# 
  1856  0002                     	;# 
  1857  0003                     	;# 
  1858  0004                     	;# 
  1859  0005                     	;# 
  1860  0006                     	;# 
  1861  0007                     	;# 
  1862  0008                     	;# 
  1863  0009                     	;# 
  1864  000A                     	;# 
  1865  000B                     	;# 
  1866  000C                     	;# 
  1867  000D                     	;# 
  1868  000E                     	;# 
  1869  0010                     	;# 
  1870  0011                     	;# 
  1871  0012                     	;# 
  1872  0013                     	;# 
  1873  0014                     	;# 
  1874  0015                     	;# 
  1875  0015                     	;# 
  1876  0016                     	;# 
  1877  0016                     	;# 
  1878  0017                     	;# 
  1879  0018                     	;# 
  1880  0019                     	;# 
  1881  0019                     	;# 
  1882  001A                     	;# 
  1883  001B                     	;# 
  1884  001C                     	;# 
  1885  001D                     	;# 
  1886  001E                     	;# 
  1887  001F                     	;# 
  1888  008C                     	;# 
  1889  008D                     	;# 
  1890  008E                     	;# 
  1891  0090                     	;# 
  1892  0091                     	;# 
  1893  0092                     	;# 
  1894  0093                     	;# 
  1895  0094                     	;# 
  1896  0097                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  018C                     	;# 
  1916  018D                     	;# 
  1917  018E                     	;# 
  1918  0197                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  0211                     	;# 
  1948  0211                     	;# 
  1949  0212                     	;# 
  1950  0212                     	;# 
  1951  0213                     	;# 
  1952  0213                     	;# 
  1953  0214                     	;# 
  1954  0214                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0216                     	;# 
  1960  0216                     	;# 
  1961  0217                     	;# 
  1962  0217                     	;# 
  1963  0219                     	;# 
  1964  021A                     	;# 
  1965  021B                     	;# 
  1966  021C                     	;# 
  1967  021D                     	;# 
  1968  021D                     	;# 
  1969  021E                     	;# 
  1970  021F                     	;# 
  1971  028C                     	;# 
  1972  028D                     	;# 
  1973  028E                     	;# 
  1974  0291                     	;# 
  1975  0291                     	;# 
  1976  0292                     	;# 
  1977  0293                     	;# 
  1978  0294                     	;# 
  1979  0295                     	;# 
  1980  0295                     	;# 
  1981  0296                     	;# 
  1982  0297                     	;# 
  1983  0298                     	;# 
  1984  029F                     	;# 
  1985  030C                     	;# 
  1986  030D                     	;# 
  1987  030E                     	;# 
  1988  0311                     	;# 
  1989  0311                     	;# 
  1990  0312                     	;# 
  1991  0313                     	;# 
  1992  0314                     	;# 
  1993  0315                     	;# 
  1994  0315                     	;# 
  1995  0316                     	;# 
  1996  0317                     	;# 
  1997  0318                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0391                     	;# 
  2002  0392                     	;# 
  2003  0393                     	;# 
  2004  0394                     	;# 
  2005  0395                     	;# 
  2006  0396                     	;# 
  2007  0397                     	;# 
  2008  0398                     	;# 
  2009  0399                     	;# 
  2010  039A                     	;# 
  2011  039C                     	;# 
  2012  039D                     	;# 
  2013  039E                     	;# 
  2014  039F                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  041F                     	;# 
  2032  0498                     	;# 
  2033  0498                     	;# 
  2034  0499                     	;# 
  2035  049A                     	;# 
  2036  049B                     	;# 
  2037  049B                     	;# 
  2038  049C                     	;# 
  2039  049D                     	;# 
  2040  049E                     	;# 
  2041  049F                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  0619                     	;# 
  2046  061A                     	;# 
  2047  061B                     	;# 
  2048  061C                     	;# 
  2049  061C                     	;# 
  2050  061F                     	;# 
  2051  0691                     	;# 
  2052  0692                     	;# 
  2053  0693                     	;# 
  2054  0694                     	;# 
  2055  0695                     	;# 
  2056  0696                     	;# 
  2057  0697                     	;# 
  2058  0698                     	;# 
  2059  0699                     	;# 
  2060  0711                     	;# 
  2061  0712                     	;# 
  2062  0713                     	;# 
  2063  0714                     	;# 
  2064  0715                     	;# 
  2065  0716                     	;# 
  2066  0717                     	;# 
  2067  0718                     	;# 
  2068  0719                     	;# 
  2069  0891                     	;# 
  2070  0891                     	;# 
  2071  0891                     	;# 
  2072  0891                     	;# 
  2073  0891                     	;# 
  2074  0891                     	;# 
  2075  0892                     	;# 
  2076  0892                     	;# 
  2077  0892                     	;# 
  2078  0893                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0893                     	;# 
  2082  0893                     	;# 
  2083  0893                     	;# 
  2084  0894                     	;# 
  2085  0894                     	;# 
  2086  0894                     	;# 
  2087  0895                     	;# 
  2088  0895                     	;# 
  2089  0895                     	;# 
  2090  0896                     	;# 
  2091  0896                     	;# 
  2092  0896                     	;# 
  2093  089B                     	;# 
  2094  0911                     	;# 
  2095  0912                     	;# 
  2096  0913                     	;# 
  2097  0914                     	;# 
  2098  0915                     	;# 
  2099  0916                     	;# 
  2100  0918                     	;# 
  2101  0919                     	;# 
  2102  091A                     	;# 
  2103  091B                     	;# 
  2104  091C                     	;# 
  2105  091D                     	;# 
  2106  091E                     	;# 
  2107  091F                     	;# 
  2108  0E0F                     	;# 
  2109  0E10                     	;# 
  2110  0E11                     	;# 
  2111  0E12                     	;# 
  2112  0E13                     	;# 
  2113  0E14                     	;# 
  2114  0E15                     	;# 
  2115  0E16                     	;# 
  2116  0E17                     	;# 
  2117  0E18                     	;# 
  2118  0E19                     	;# 
  2119  0E1A                     	;# 
  2120  0E1B                     	;# 
  2121  0E1C                     	;# 
  2122  0E1D                     	;# 
  2123  0E1E                     	;# 
  2124  0E1F                     	;# 
  2125  0E20                     	;# 
  2126  0E21                     	;# 
  2127  0E22                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E28                     	;# 
  2131  0E29                     	;# 
  2132  0E2A                     	;# 
  2133  0E2B                     	;# 
  2134  0E2C                     	;# 
  2135  0E2D                     	;# 
  2136  0E2E                     	;# 
  2137  0E2F                     	;# 
  2138  0E90                     	;# 
  2139  0E91                     	;# 
  2140  0E92                     	;# 
  2141  0E94                     	;# 
  2142  0E95                     	;# 
  2143  0E9C                     	;# 
  2144  0E9D                     	;# 
  2145  0E9E                     	;# 
  2146  0E9F                     	;# 
  2147  0EA0                     	;# 
  2148  0EA1                     	;# 
  2149  0EA2                     	;# 
  2150  0EA3                     	;# 
  2151  0EA4                     	;# 
  2152  0EA5                     	;# 
  2153  0EA6                     	;# 
  2154  0EA7                     	;# 
  2155  0F0F                     	;# 
  2156  0F10                     	;# 
  2157  0F11                     	;# 
  2158  0F12                     	;# 
  2159  0F13                     	;# 
  2160  0F14                     	;# 
  2161  0F15                     	;# 
  2162  0F16                     	;# 
  2163  0F17                     	;# 
  2164  0F18                     	;# 
  2165  0F19                     	;# 
  2166  0F1A                     	;# 
  2167  0F1B                     	;# 
  2168  0F1C                     	;# 
  2169  0F1D                     	;# 
  2170  0F1E                     	;# 
  2171  0F1F                     	;# 
  2172  0F20                     	;# 
  2173  0F21                     	;# 
  2174  0F22                     	;# 
  2175  0F23                     	;# 
  2176  0F24                     	;# 
  2177  0F25                     	;# 
  2178  0F26                     	;# 
  2179  0F27                     	;# 
  2180  0F28                     	;# 
  2181  0F29                     	;# 
  2182  0F2A                     	;# 
  2183  0F2B                     	;# 
  2184  0F2C                     	;# 
  2185  0F2D                     	;# 
  2186  0F2E                     	;# 
  2187  0F2F                     	;# 
  2188  0F30                     	;# 
  2189  0F31                     	;# 
  2190  0F32                     	;# 
  2191  0F33                     	;# 
  2192  0F34                     	;# 
  2193  0F35                     	;# 
  2194  0F36                     	;# 
  2195  0F37                     	;# 
  2196  0FE4                     	;# 
  2197  0FE5                     	;# 
  2198  0FE6                     	;# 
  2199  0FE7                     	;# 
  2200  0FE8                     	;# 
  2201  0FE9                     	;# 
  2202  0FEA                     	;# 
  2203  0FEB                     	;# 
  2204  0FED                     	;# 
  2205  0FEE                     	;# 
  2206  0FEF                     	;# 
  2207  0000                     	;# 
  2208  0001                     	;# 
  2209  0002                     	;# 
  2210  0003                     	;# 
  2211  0004                     	;# 
  2212  0005                     	;# 
  2213  0006                     	;# 
  2214  0007                     	;# 
  2215  0008                     	;# 
  2216  0009                     	;# 
  2217  000A                     	;# 
  2218  000B                     	;# 
  2219  000C                     	;# 
  2220  000D                     	;# 
  2221  000E                     	;# 
  2222  0010                     	;# 
  2223  0011                     	;# 
  2224  0012                     	;# 
  2225  0013                     	;# 
  2226  0014                     	;# 
  2227  0015                     	;# 
  2228  0015                     	;# 
  2229  0016                     	;# 
  2230  0016                     	;# 
  2231  0017                     	;# 
  2232  0018                     	;# 
  2233  0019                     	;# 
  2234  0019                     	;# 
  2235  001A                     	;# 
  2236  001B                     	;# 
  2237  001C                     	;# 
  2238  001D                     	;# 
  2239  001E                     	;# 
  2240  001F                     	;# 
  2241  008C                     	;# 
  2242  008D                     	;# 
  2243  008E                     	;# 
  2244  0090                     	;# 
  2245  0091                     	;# 
  2246  0092                     	;# 
  2247  0093                     	;# 
  2248  0094                     	;# 
  2249  0097                     	;# 
  2250  009B                     	;# 
  2251  009B                     	;# 
  2252  009C                     	;# 
  2253  009D                     	;# 
  2254  009E                     	;# 
  2255  009F                     	;# 
  2256  010C                     	;# 
  2257  010D                     	;# 
  2258  010E                     	;# 
  2259  0111                     	;# 
  2260  0112                     	;# 
  2261  0113                     	;# 
  2262  0114                     	;# 
  2263  0115                     	;# 
  2264  0116                     	;# 
  2265  0117                     	;# 
  2266  0118                     	;# 
  2267  0119                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  0197                     	;# 
  2272  0199                     	;# 
  2273  0199                     	;# 
  2274  0199                     	;# 
  2275  019A                     	;# 
  2276  019A                     	;# 
  2277  019A                     	;# 
  2278  019B                     	;# 
  2279  019B                     	;# 
  2280  019B                     	;# 
  2281  019B                     	;# 
  2282  019B                     	;# 
  2283  019C                     	;# 
  2284  019C                     	;# 
  2285  019C                     	;# 
  2286  019D                     	;# 
  2287  019D                     	;# 
  2288  019D                     	;# 
  2289  019E                     	;# 
  2290  019E                     	;# 
  2291  019E                     	;# 
  2292  019F                     	;# 
  2293  019F                     	;# 
  2294  019F                     	;# 
  2295  019F                     	;# 
  2296  019F                     	;# 
  2297  020C                     	;# 
  2298  020D                     	;# 
  2299  020E                     	;# 
  2300  0211                     	;# 
  2301  0211                     	;# 
  2302  0212                     	;# 
  2303  0212                     	;# 
  2304  0213                     	;# 
  2305  0213                     	;# 
  2306  0214                     	;# 
  2307  0214                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0215                     	;# 
  2311  0215                     	;# 
  2312  0216                     	;# 
  2313  0216                     	;# 
  2314  0217                     	;# 
  2315  0217                     	;# 
  2316  0219                     	;# 
  2317  021A                     	;# 
  2318  021B                     	;# 
  2319  021C                     	;# 
  2320  021D                     	;# 
  2321  021D                     	;# 
  2322  021E                     	;# 
  2323  021F                     	;# 
  2324  028C                     	;# 
  2325  028D                     	;# 
  2326  028E                     	;# 
  2327  0291                     	;# 
  2328  0291                     	;# 
  2329  0292                     	;# 
  2330  0293                     	;# 
  2331  0294                     	;# 
  2332  0295                     	;# 
  2333  0295                     	;# 
  2334  0296                     	;# 
  2335  0297                     	;# 
  2336  0298                     	;# 
  2337  029F                     	;# 
  2338  030C                     	;# 
  2339  030D                     	;# 
  2340  030E                     	;# 
  2341  0311                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0315                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  0393                     	;# 
  2357  0394                     	;# 
  2358  0395                     	;# 
  2359  0396                     	;# 
  2360  0397                     	;# 
  2361  0398                     	;# 
  2362  0399                     	;# 
  2363  039A                     	;# 
  2364  039C                     	;# 
  2365  039D                     	;# 
  2366  039E                     	;# 
  2367  039F                     	;# 
  2368  0411                     	;# 
  2369  0411                     	;# 
  2370  0412                     	;# 
  2371  0413                     	;# 
  2372  0414                     	;# 
  2373  0415                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041D                     	;# 
  2383  041E                     	;# 
  2384  041F                     	;# 
  2385  0498                     	;# 
  2386  0498                     	;# 
  2387  0499                     	;# 
  2388  049A                     	;# 
  2389  049B                     	;# 
  2390  049B                     	;# 
  2391  049C                     	;# 
  2392  049D                     	;# 
  2393  049E                     	;# 
  2394  049F                     	;# 
  2395  0617                     	;# 
  2396  0618                     	;# 
  2397  0619                     	;# 
  2398  0619                     	;# 
  2399  061A                     	;# 
  2400  061B                     	;# 
  2401  061C                     	;# 
  2402  061C                     	;# 
  2403  061F                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  0695                     	;# 
  2409  0696                     	;# 
  2410  0697                     	;# 
  2411  0698                     	;# 
  2412  0699                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0715                     	;# 
  2418  0716                     	;# 
  2419  0717                     	;# 
  2420  0718                     	;# 
  2421  0719                     	;# 
  2422  0891                     	;# 
  2423  0891                     	;# 
  2424  0891                     	;# 
  2425  0891                     	;# 
  2426  0891                     	;# 
  2427  0891                     	;# 
  2428  0892                     	;# 
  2429  0892                     	;# 
  2430  0892                     	;# 
  2431  0893                     	;# 
  2432  0893                     	;# 
  2433  0893                     	;# 
  2434  0893                     	;# 
  2435  0893                     	;# 
  2436  0893                     	;# 
  2437  0894                     	;# 
  2438  0894                     	;# 
  2439  0894                     	;# 
  2440  0895                     	;# 
  2441  0895                     	;# 
  2442  0895                     	;# 
  2443  0896                     	;# 
  2444  0896                     	;# 
  2445  0896                     	;# 
  2446  089B                     	;# 
  2447  0911                     	;# 
  2448  0912                     	;# 
  2449  0913                     	;# 
  2450  0914                     	;# 
  2451  0915                     	;# 
  2452  0916                     	;# 
  2453  0918                     	;# 
  2454  0919                     	;# 
  2455  091A                     	;# 
  2456  091B                     	;# 
  2457  091C                     	;# 
  2458  091D                     	;# 
  2459  091E                     	;# 
  2460  091F                     	;# 
  2461  0E0F                     	;# 
  2462  0E10                     	;# 
  2463  0E11                     	;# 
  2464  0E12                     	;# 
  2465  0E13                     	;# 
  2466  0E14                     	;# 
  2467  0E15                     	;# 
  2468  0E16                     	;# 
  2469  0E17                     	;# 
  2470  0E18                     	;# 
  2471  0E19                     	;# 
  2472  0E1A                     	;# 
  2473  0E1B                     	;# 
  2474  0E1C                     	;# 
  2475  0E1D                     	;# 
  2476  0E1E                     	;# 
  2477  0E1F                     	;# 
  2478  0E20                     	;# 
  2479  0E21                     	;# 
  2480  0E22                     	;# 
  2481  0E24                     	;# 
  2482  0E25                     	;# 
  2483  0E28                     	;# 
  2484  0E29                     	;# 
  2485  0E2A                     	;# 
  2486  0E2B                     	;# 
  2487  0E2C                     	;# 
  2488  0E2D                     	;# 
  2489  0E2E                     	;# 
  2490  0E2F                     	;# 
  2491  0E90                     	;# 
  2492  0E91                     	;# 
  2493  0E92                     	;# 
  2494  0E94                     	;# 
  2495  0E95                     	;# 
  2496  0E9C                     	;# 
  2497  0E9D                     	;# 
  2498  0E9E                     	;# 
  2499  0E9F                     	;# 
  2500  0EA0                     	;# 
  2501  0EA1                     	;# 
  2502  0EA2                     	;# 
  2503  0EA3                     	;# 
  2504  0EA4                     	;# 
  2505  0EA5                     	;# 
  2506  0EA6                     	;# 
  2507  0EA7                     	;# 
  2508  0F0F                     	;# 
  2509  0F10                     	;# 
  2510  0F11                     	;# 
  2511  0F12                     	;# 
  2512  0F13                     	;# 
  2513  0F14                     	;# 
  2514  0F15                     	;# 
  2515  0F16                     	;# 
  2516  0F17                     	;# 
  2517  0F18                     	;# 
  2518  0F19                     	;# 
  2519  0F1A                     	;# 
  2520  0F1B                     	;# 
  2521  0F1C                     	;# 
  2522  0F1D                     	;# 
  2523  0F1E                     	;# 
  2524  0F1F                     	;# 
  2525  0F20                     	;# 
  2526  0F21                     	;# 
  2527  0F22                     	;# 
  2528  0F23                     	;# 
  2529  0F24                     	;# 
  2530  0F25                     	;# 
  2531  0F26                     	;# 
  2532  0F27                     	;# 
  2533  0F28                     	;# 
  2534  0F29                     	;# 
  2535  0F2A                     	;# 
  2536  0F2B                     	;# 
  2537  0F2C                     	;# 
  2538  0F2D                     	;# 
  2539  0F2E                     	;# 
  2540  0F2F                     	;# 
  2541  0F30                     	;# 
  2542  0F31                     	;# 
  2543  0F32                     	;# 
  2544  0F33                     	;# 
  2545  0F34                     	;# 
  2546  0F35                     	;# 
  2547  0F36                     	;# 
  2548  0F37                     	;# 
  2549  0FE4                     	;# 
  2550  0FE5                     	;# 
  2551  0FE6                     	;# 
  2552  0FE7                     	;# 
  2553  0FE8                     	;# 
  2554  0FE9                     	;# 
  2555  0FEA                     	;# 
  2556  0FEB                     	;# 
  2557  0FED                     	;# 
  2558  0FEE                     	;# 
  2559  0FEF                     	;# 
  2560  0000                     	;# 
  2561  0001                     	;# 
  2562  0002                     	;# 
  2563  0003                     	;# 
  2564  0004                     	;# 
  2565  0005                     	;# 
  2566  0006                     	;# 
  2567  0007                     	;# 
  2568  0008                     	;# 
  2569  0009                     	;# 
  2570  000A                     	;# 
  2571  000B                     	;# 
  2572  000C                     	;# 
  2573  000D                     	;# 
  2574  000E                     	;# 
  2575  0010                     	;# 
  2576  0011                     	;# 
  2577  0012                     	;# 
  2578  0013                     	;# 
  2579  0014                     	;# 
  2580  0015                     	;# 
  2581  0015                     	;# 
  2582  0016                     	;# 
  2583  0016                     	;# 
  2584  0017                     	;# 
  2585  0018                     	;# 
  2586  0019                     	;# 
  2587  0019                     	;# 
  2588  001A                     	;# 
  2589  001B                     	;# 
  2590  001C                     	;# 
  2591  001D                     	;# 
  2592  001E                     	;# 
  2593  001F                     	;# 
  2594  008C                     	;# 
  2595  008D                     	;# 
  2596  008E                     	;# 
  2597  0090                     	;# 
  2598  0091                     	;# 
  2599  0092                     	;# 
  2600  0093                     	;# 
  2601  0094                     	;# 
  2602  0097                     	;# 
  2603  009B                     	;# 
  2604  009B                     	;# 
  2605  009C                     	;# 
  2606  009D                     	;# 
  2607  009E                     	;# 
  2608  009F                     	;# 
  2609  010C                     	;# 
  2610  010D                     	;# 
  2611  010E                     	;# 
  2612  0111                     	;# 
  2613  0112                     	;# 
  2614  0113                     	;# 
  2615  0114                     	;# 
  2616  0115                     	;# 
  2617  0116                     	;# 
  2618  0117                     	;# 
  2619  0118                     	;# 
  2620  0119                     	;# 
  2621  018C                     	;# 
  2622  018D                     	;# 
  2623  018E                     	;# 
  2624  0197                     	;# 
  2625  0199                     	;# 
  2626  0199                     	;# 
  2627  0199                     	;# 
  2628  019A                     	;# 
  2629  019A                     	;# 
  2630  019A                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019B                     	;# 
  2636  019C                     	;# 
  2637  019C                     	;# 
  2638  019C                     	;# 
  2639  019D                     	;# 
  2640  019D                     	;# 
  2641  019D                     	;# 
  2642  019E                     	;# 
  2643  019E                     	;# 
  2644  019E                     	;# 
  2645  019F                     	;# 
  2646  019F                     	;# 
  2647  019F                     	;# 
  2648  019F                     	;# 
  2649  019F                     	;# 
  2650  020C                     	;# 
  2651  020D                     	;# 
  2652  020E                     	;# 
  2653  0211                     	;# 
  2654  0211                     	;# 
  2655  0212                     	;# 
  2656  0212                     	;# 
  2657  0213                     	;# 
  2658  0213                     	;# 
  2659  0214                     	;# 
  2660  0214                     	;# 
  2661  0215                     	;# 
  2662  0215                     	;# 
  2663  0215                     	;# 
  2664  0215                     	;# 
  2665  0216                     	;# 
  2666  0216                     	;# 
  2667  0217                     	;# 
  2668  0217                     	;# 
  2669  0219                     	;# 
  2670  021A                     	;# 
  2671  021B                     	;# 
  2672  021C                     	;# 
  2673  021D                     	;# 
  2674  021D                     	;# 
  2675  021E                     	;# 
  2676  021F                     	;# 
  2677  028C                     	;# 
  2678  028D                     	;# 
  2679  028E                     	;# 
  2680  0291                     	;# 
  2681  0291                     	;# 
  2682  0292                     	;# 
  2683  0293                     	;# 
  2684  0294                     	;# 
  2685  0295                     	;# 
  2686  0295                     	;# 
  2687  0296                     	;# 
  2688  0297                     	;# 
  2689  0298                     	;# 
  2690  029F                     	;# 
  2691  030C                     	;# 
  2692  030D                     	;# 
  2693  030E                     	;# 
  2694  0311                     	;# 
  2695  0311                     	;# 
  2696  0312                     	;# 
  2697  0313                     	;# 
  2698  0314                     	;# 
  2699  0315                     	;# 
  2700  0315                     	;# 
  2701  0316                     	;# 
  2702  0317                     	;# 
  2703  0318                     	;# 
  2704  038C                     	;# 
  2705  038D                     	;# 
  2706  038E                     	;# 
  2707  0391                     	;# 
  2708  0392                     	;# 
  2709  0393                     	;# 
  2710  0394                     	;# 
  2711  0395                     	;# 
  2712  0396                     	;# 
  2713  0397                     	;# 
  2714  0398                     	;# 
  2715  0399                     	;# 
  2716  039A                     	;# 
  2717  039C                     	;# 
  2718  039D                     	;# 
  2719  039E                     	;# 
  2720  039F                     	;# 
  2721  0411                     	;# 
  2722  0411                     	;# 
  2723  0412                     	;# 
  2724  0413                     	;# 
  2725  0414                     	;# 
  2726  0415                     	;# 
  2727  0416                     	;# 
  2728  0417                     	;# 
  2729  0418                     	;# 
  2730  0418                     	;# 
  2731  0419                     	;# 
  2732  041A                     	;# 
  2733  041B                     	;# 
  2734  041C                     	;# 
  2735  041D                     	;# 
  2736  041E                     	;# 
  2737  041F                     	;# 
  2738  0498                     	;# 
  2739  0498                     	;# 
  2740  0499                     	;# 
  2741  049A                     	;# 
  2742  049B                     	;# 
  2743  049B                     	;# 
  2744  049C                     	;# 
  2745  049D                     	;# 
  2746  049E                     	;# 
  2747  049F                     	;# 
  2748  0617                     	;# 
  2749  0618                     	;# 
  2750  0619                     	;# 
  2751  0619                     	;# 
  2752  061A                     	;# 
  2753  061B                     	;# 
  2754  061C                     	;# 
  2755  061C                     	;# 
  2756  061F                     	;# 
  2757  0691                     	;# 
  2758  0692                     	;# 
  2759  0693                     	;# 
  2760  0694                     	;# 
  2761  0695                     	;# 
  2762  0696                     	;# 
  2763  0697                     	;# 
  2764  0698                     	;# 
  2765  0699                     	;# 
  2766  0711                     	;# 
  2767  0712                     	;# 
  2768  0713                     	;# 
  2769  0714                     	;# 
  2770  0715                     	;# 
  2771  0716                     	;# 
  2772  0717                     	;# 
  2773  0718                     	;# 
  2774  0719                     	;# 
  2775  0891                     	;# 
  2776  0891                     	;# 
  2777  0891                     	;# 
  2778  0891                     	;# 
  2779  0891                     	;# 
  2780  0891                     	;# 
  2781  0892                     	;# 
  2782  0892                     	;# 
  2783  0892                     	;# 
  2784  0893                     	;# 
  2785  0893                     	;# 
  2786  0893                     	;# 
  2787  0893                     	;# 
  2788  0893                     	;# 
  2789  0893                     	;# 
  2790  0894                     	;# 
  2791  0894                     	;# 
  2792  0894                     	;# 
  2793  0895                     	;# 
  2794  0895                     	;# 
  2795  0895                     	;# 
  2796  0896                     	;# 
  2797  0896                     	;# 
  2798  0896                     	;# 
  2799  089B                     	;# 
  2800  0911                     	;# 
  2801  0912                     	;# 
  2802  0913                     	;# 
  2803  0914                     	;# 
  2804  0915                     	;# 
  2805  0916                     	;# 
  2806  0918                     	;# 
  2807  0919                     	;# 
  2808  091A                     	;# 
  2809  091B                     	;# 
  2810  091C                     	;# 
  2811  091D                     	;# 
  2812  091E                     	;# 
  2813  091F                     	;# 
  2814  0E0F                     	;# 
  2815  0E10                     	;# 
  2816  0E11                     	;# 
  2817  0E12                     	;# 
  2818  0E13                     	;# 
  2819  0E14                     	;# 
  2820  0E15                     	;# 
  2821  0E16                     	;# 
  2822  0E17                     	;# 
  2823  0E18                     	;# 
  2824  0E19                     	;# 
  2825  0E1A                     	;# 
  2826  0E1B                     	;# 
  2827  0E1C                     	;# 
  2828  0E1D                     	;# 
  2829  0E1E                     	;# 
  2830  0E1F                     	;# 
  2831  0E20                     	;# 
  2832  0E21                     	;# 
  2833  0E22                     	;# 
  2834  0E24                     	;# 
  2835  0E25                     	;# 
  2836  0E28                     	;# 
  2837  0E29                     	;# 
  2838  0E2A                     	;# 
  2839  0E2B                     	;# 
  2840  0E2C                     	;# 
  2841  0E2D                     	;# 
  2842  0E2E                     	;# 
  2843  0E2F                     	;# 
  2844  0E90                     	;# 
  2845  0E91                     	;# 
  2846  0E92                     	;# 
  2847  0E94                     	;# 
  2848  0E95                     	;# 
  2849  0E9C                     	;# 
  2850  0E9D                     	;# 
  2851  0E9E                     	;# 
  2852  0E9F                     	;# 
  2853  0EA0                     	;# 
  2854  0EA1                     	;# 
  2855  0EA2                     	;# 
  2856  0EA3                     	;# 
  2857  0EA4                     	;# 
  2858  0EA5                     	;# 
  2859  0EA6                     	;# 
  2860  0EA7                     	;# 
  2861  0F0F                     	;# 
  2862  0F10                     	;# 
  2863  0F11                     	;# 
  2864  0F12                     	;# 
  2865  0F13                     	;# 
  2866  0F14                     	;# 
  2867  0F15                     	;# 
  2868  0F16                     	;# 
  2869  0F17                     	;# 
  2870  0F18                     	;# 
  2871  0F19                     	;# 
  2872  0F1A                     	;# 
  2873  0F1B                     	;# 
  2874  0F1C                     	;# 
  2875  0F1D                     	;# 
  2876  0F1E                     	;# 
  2877  0F1F                     	;# 
  2878  0F20                     	;# 
  2879  0F21                     	;# 
  2880  0F22                     	;# 
  2881  0F23                     	;# 
  2882  0F24                     	;# 
  2883  0F25                     	;# 
  2884  0F26                     	;# 
  2885  0F27                     	;# 
  2886  0F28                     	;# 
  2887  0F29                     	;# 
  2888  0F2A                     	;# 
  2889  0F2B                     	;# 
  2890  0F2C                     	;# 
  2891  0F2D                     	;# 
  2892  0F2E                     	;# 
  2893  0F2F                     	;# 
  2894  0F30                     	;# 
  2895  0F31                     	;# 
  2896  0F32                     	;# 
  2897  0F33                     	;# 
  2898  0F34                     	;# 
  2899  0F35                     	;# 
  2900  0F36                     	;# 
  2901  0F37                     	;# 
  2902  0FE4                     	;# 
  2903  0FE5                     	;# 
  2904  0FE6                     	;# 
  2905  0FE7                     	;# 
  2906  0FE8                     	;# 
  2907  0FE9                     	;# 
  2908  0FEA                     	;# 
  2909  0FEB                     	;# 
  2910  0FED                     	;# 
  2911  0FEE                     	;# 
  2912  0FEF                     	;# 
  2913                           
  2914                           	psect	nvBANK0
  2915  003C                     __pnvBANK0:	
  2916  003C                     _IOCAF4_InterruptHandler:	
  2917  003C                     	ds	2
  2918  0011                     _PIR1bits	set	17
  2919  000B                     _INTCONbits	set	11
  2920  0010                     _PIR0bits	set	16
  2921  008E                     _TRISC	set	142
  2922  008D                     _TRISB	set	141
  2923  008C                     _TRISA	set	140
  2924  0097                     _WDTCON	set	151
  2925  0091                     _PIE1bits	set	145
  2926  0090                     _PIE0bits	set	144
  2927  010C                     _LATAbits	set	268
  2928  010E                     _LATCbits	set	270
  2929  010E                     _LATC	set	270
  2930  010D                     _LATB	set	269
  2931  010C                     _LATA	set	268
  2932  018C                     _ANSELA	set	396
  2933  018D                     _ANSELB	set	397
  2934  018E                     _ANSELC	set	398
  2935  0214                     _SSP1STATbits	set	532
  2936  0213                     _SSP1MSK	set	531
  2937  0211                     _SSP1BUF	set	529
  2938  0216                     _SSP1CON2bits	set	534
  2939  0212                     _SSP1ADD	set	530
  2940  0216                     _SSP1CON2	set	534
  2941  0215                     _SSP1CON1	set	533
  2942  0214                     _SSP1STAT	set	532
  2943  0215                     _SSP1CON1bits	set	533
  2944  020E                     _WPUC	set	526
  2945  020C                     _WPUA	set	524
  2946  020D                     _WPUB	set	525
  2947  028E                     _ODCONC	set	654
  2948  028D                     _ODCONB	set	653
  2949  028C                     _ODCONA	set	652
  2950  030E                     _SLRCONC	set	782
  2951  030D                     _SLRCONB	set	781
  2952  030C                     _SLRCONA	set	780
  2953  0391                     _IOCAPbits	set	913
  2954  0392                     _IOCANbits	set	914
  2955  0393                     _IOCAFbits	set	915
  2956  0916                     _PMD5	set	2326
  2957  0915                     _PMD4	set	2325
  2958  0914                     _PMD3	set	2324
  2959  0913                     _PMD2	set	2323
  2960  0912                     _PMD1	set	2322
  2961  0911                     _PMD0	set	2321
  2962  091E                     _OSCTUNE	set	2334
  2963  091F                     _OSCFRQ	set	2335
  2964  091D                     _OSCEN	set	2333
  2965  091B                     _OSCCON3	set	2331
  2966  0919                     _OSCCON1	set	2329
  2967  0E21                     _SSP1DATPPS	set	3617
  2968  0E20                     _SSP1CLKPPS	set	3616
  2969  0EA1                     _RC1PPS	set	3745
  2970  0EA0                     _RC0PPS	set	3744
  2971                           
  2972                           ; #config settings
  2973  0000                     
  2974                           	psect	cinit
  2975  0020                     start_initialization:	
  2976  0020                     __initialization:	
  2977                           
  2978                           ; Clear objects allocated to BANK0
  2979  0020  3020               	movlw	low __pbssBANK0
  2980  0021  0084               	movwf	4
  2981  0022  3000               	movlw	high __pbssBANK0
  2982  0023  0085               	movwf	5
  2983  0024  3016               	movlw	22
  2984  0025  3185  250A  3180   	fcall	clear_ram0
  2985                           
  2986                           ; Clear objects allocated to BANK1
  2987  0028  30A0               	movlw	low __pbssBANK1
  2988  0029  0084               	movwf	4
  2989  002A  3000               	movlw	high __pbssBANK1
  2990  002B  0085               	movwf	5
  2991  002C  3044               	movlw	68
  2992  002D  3185  250A         	fcall	clear_ram0
  2993  002F                     end_of_initialization:	
  2994                           ;End of C runtime variable initialization code
  2995                           
  2996  002F                     __end_of__initialization:	
  2997  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2998  0030  0020               	movlb	0
  2999  0031  3183  2B5B         	ljmp	_main	;jump to C main() function
  3000                           
  3001                           	psect	bssBANK0
  3002  0020                     __pbssBANK0:	
  3003  0020                     _gesture_motion_:	
  3004  0020                     	ds	2
  3005  0022                     _gesture_state_:	
  3006  0022                     	ds	2
  3007  0024                     _gesture_far_count_:	
  3008  0024                     	ds	2
  3009  0026                     _gesture_near_count_:	
  3010  0026                     	ds	2
  3011  0028                     _gesture_lr_count_:	
  3012  0028                     	ds	2
  3013  002A                     _gesture_ud_count_:	
  3014  002A                     	ds	2
  3015  002C                     _gesture_lr_delta_:	
  3016  002C                     	ds	2
  3017  002E                     _gesture_ud_delta_:	
  3018  002E                     	ds	2
  3019  0030                     _i2c1_driver_i2cISR:	
  3020  0030                     	ds	2
  3021  0032                     _i2c1_driver_busCollisionISR:	
  3022  0032                     	ds	2
  3023  0034                     _b_i2c_error_flag:	
  3024  0034                     	ds	1
  3025  0035                     _handleGestureFlag:	
  3026  0035                     	ds	1
  3027                           
  3028                           	psect	bssBANK1
  3029  00A0                     __pbssBANK1:	
  3030  00A0                     _gesture_data_:	
  3031  00A0                     	ds	68
  3032                           
  3033                           	psect	clrtext
  3034  050A                     clear_ram0:	
  3035                           ;	Called with FSR0 containing the base address, and
  3036                           ;	WREG with the size to clear
  3037                           
  3038  050A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3039  050B                     clrloop0:	
  3040  050B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3041  050C  3101               	addfsr 0,1
  3042  050D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3043  050E  2D0B               	goto	clrloop0	;have we reached the end yet?
  3044  050F  3400               	retlw	0	;all done for this memory range, return
  3045                           
  3046                           	psect	cstackCOMMON
  3047  0070                     __pcstackCOMMON:	
  3048  0070                     ?_PIN_MANAGER_IOC:	
  3049  0070                     ??_PIN_MANAGER_IOC:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0070                     ?_PMD_Initialize:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0070                     ??_PMD_Initialize:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0070                     ?_PIN_MANAGER_Initialize:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0070                     ?_OSCILLATOR_Initialize:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0070                     ??_OSCILLATOR_Initialize:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0070                     ?_WDT_Initialize:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0070                     ??_WDT_Initialize:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0070                     ?_IOCAF4_SetInterruptHandler:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0070                     ?_IOCAF4_ISR:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0070                     ??_IOCAF4_ISR:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0070                     ?_initialize:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0070                     ?_enableGestureSensor:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0070                     ?_InitI2C:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0070                     ??_InitI2C:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0070                     ?_wireReadDataByte:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0070                     ?_setLEDDrive:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0070                     ?_setProximityGain:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0070                     ?_setAmbientLightGain:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0070                     ?_setProxIntLowThresh:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0070                     ?_setProxIntHighThresh:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0070                     ?_setGestureEnterThresh:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0070                     ?_setGestureExitThresh:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0070                     ?_setGestureGain:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0070                     ?_setGestureLEDDrive:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0070                     ?_setGestureWaitTime:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0070                     ?_setGestureIntEnable:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0070                     ?_getMode:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  0070                     ?_resetGestureParameters:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142  0070                     ??_resetGestureParameters:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  0070                     ?_setLEDBoost:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0070                     ?_setGestureMode:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  0070                     ?_enablePower:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  0070                     ?_I2C_Start:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157  0070                     ??_I2C_Start:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160  0070                     ?_I2C_Write_Byte:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163  0070                     ??_I2C_Write_Byte:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166  0070                     ?_I2C_ReStart:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169  0070                     ??_I2C_ReStart:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172  0070                     ?_I2C_Read_Byte:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175  0070                     ??_I2C_Read_Byte:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178  0070                     ?_I2C_Send_NACK:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181  0070                     ??_I2C_Send_NACK:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184  0070                     ?_I2C_Stop:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187  0070                     ??_I2C_Stop:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190  0070                     ?_INTERRUPT_InterruptManager:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193  0070                     ??_INTERRUPT_InterruptManager:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196  0070                     ?_SYSTEM_Initialize:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199  0070                     ?_GestureInterruptHandler:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202  0070                     ??_GestureInterruptHandler:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205  0070                     ?_main:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208  0070                     I2C_Write_Byte@Byte:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211  0070                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214                           
  3215                           ; 2 bytes @ 0x0
  3216  0070                     	ds	1
  3217  0071                     ?_wireWriteDataByte:	
  3218  0071                     wireWriteDataByte@val:	
  3219                           ; 2 bytes @ 0x1
  3220                           
  3221                           
  3222                           ; 1 bytes @ 0x1
  3223  0071                     	ds	1
  3224  0072                     ??_PIN_MANAGER_Initialize:	
  3225  0072                     ??_IOCAF4_SetInterruptHandler:	
  3226                           ; 1 bytes @ 0x2
  3227                           
  3228  0072                     ??_SYSTEM_Initialize:	
  3229                           ; 1 bytes @ 0x2
  3230                           
  3231                           
  3232                           ; 1 bytes @ 0x2
  3233  0072                     	ds	2
  3234  0074                     ??_wireWriteDataByte:	
  3235  0074                     wireWriteDataByte@reg:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0074                     I2C_Read_Byte@count:	
  3239                           ; 1 bytes @ 0x4
  3240                           
  3241                           
  3242                           ; 4 bytes @ 0x4
  3243  0074                     	ds	1
  3244  0075                     ??_setProxIntLowThresh:	
  3245  0075                     ??_setProxIntHighThresh:	
  3246                           ; 1 bytes @ 0x5
  3247                           
  3248  0075                     ?_setLightIntLowThreshold:	
  3249                           ; 1 bytes @ 0x5
  3250                           
  3251  0075                     ?_setLightIntHighThreshold:	
  3252                           ; 1 bytes @ 0x5
  3253                           
  3254  0075                     ??_setGestureEnterThresh:	
  3255                           ; 1 bytes @ 0x5
  3256                           
  3257  0075                     ??_setGestureExitThresh:	
  3258                           ; 1 bytes @ 0x5
  3259                           
  3260  0075                     setLightIntLowThreshold@threshold:	
  3261                           ; 1 bytes @ 0x5
  3262                           
  3263  0075                     setLightIntHighThreshold@threshold:	
  3264                           ; 2 bytes @ 0x5
  3265                           
  3266                           
  3267                           ; 2 bytes @ 0x5
  3268  0075                     	ds	1
  3269  0076                     setProxIntLowThresh@threshold:	
  3270  0076                     setProxIntHighThresh@threshold:	
  3271                           ; 1 bytes @ 0x6
  3272                           
  3273  0076                     setGestureEnterThresh@threshold:	
  3274                           ; 1 bytes @ 0x6
  3275                           
  3276  0076                     setGestureExitThresh@threshold:	
  3277                           ; 1 bytes @ 0x6
  3278                           
  3279                           
  3280                           ; 1 bytes @ 0x6
  3281  0076                     	ds	1
  3282  0077                     ??_setLightIntLowThreshold:	
  3283  0077                     ??_setLightIntHighThreshold:	
  3284                           ; 1 bytes @ 0x7
  3285                           
  3286                           
  3287                           ; 1 bytes @ 0x7
  3288  0077                     	ds	1
  3289  0078                     ??_wireReadDataByte:	
  3290  0078                     setLightIntLowThreshold@val_low:	
  3291                           ; 1 bytes @ 0x8
  3292                           
  3293  0078                     setLightIntHighThreshold@val_low:	
  3294                           ; 1 bytes @ 0x8
  3295                           
  3296                           
  3297                           ; 1 bytes @ 0x8
  3298  0078                     	ds	1
  3299  0079                     setLightIntLowThreshold@val_high:	
  3300  0079                     setLightIntHighThreshold@val_high:	
  3301                           ; 1 bytes @ 0x9
  3302                           
  3303  0079                     wireReadDataByte@reg:	
  3304                           ; 1 bytes @ 0x9
  3305                           
  3306                           
  3307                           ; 1 bytes @ 0x9
  3308  0079                     	ds	1
  3309  007A                     wireReadDataByte@val:	
  3310                           
  3311                           ; 1 bytes @ 0xA
  3312  007A                     	ds	1
  3313  007B                     ??_setLEDDrive:	
  3314  007B                     ??_setProximityGain:	
  3315                           ; 1 bytes @ 0xB
  3316                           
  3317  007B                     ??_setAmbientLightGain:	
  3318                           ; 1 bytes @ 0xB
  3319                           
  3320  007B                     ??_setGestureGain:	
  3321                           ; 1 bytes @ 0xB
  3322                           
  3323  007B                     ??_setGestureLEDDrive:	
  3324                           ; 1 bytes @ 0xB
  3325                           
  3326  007B                     ??_setGestureWaitTime:	
  3327                           ; 1 bytes @ 0xB
  3328                           
  3329  007B                     ??_setGestureIntEnable:	
  3330                           ; 1 bytes @ 0xB
  3331                           
  3332  007B                     ??_getMode:	
  3333                           ; 1 bytes @ 0xB
  3334                           
  3335  007B                     ??_setLEDBoost:	
  3336                           ; 1 bytes @ 0xB
  3337                           
  3338  007B                     ??_setGestureMode:	
  3339                           ; 1 bytes @ 0xB
  3340                           
  3341                           
  3342                           ; 1 bytes @ 0xB
  3343  007B                     	ds	1
  3344  007C                     getMode@enable_value:	
  3345  007C                     setAmbientLightGain@drive:	
  3346                           ; 1 bytes @ 0xC
  3347                           
  3348  007C                     setGestureWaitTime@time:	
  3349                           ; 1 bytes @ 0xC
  3350                           
  3351  007C                     setGestureIntEnable@val:	
  3352                           ; 1 bytes @ 0xC
  3353                           
  3354  007C                     setGestureMode@mode:	
  3355                           ; 1 bytes @ 0xC
  3356                           
  3357                           
  3358                           ; 1 bytes @ 0xC
  3359  007C                     	ds	1
  3360  007D                     ?_setMode:	
  3361  007D                     setMode@enable:	
  3362                           ; 1 bytes @ 0xD
  3363                           
  3364  007D                     setAmbientLightGain@val:	
  3365                           ; 1 bytes @ 0xD
  3366                           
  3367  007D                     setGestureWaitTime@val:	
  3368                           ; 1 bytes @ 0xD
  3369                           
  3370  007D                     setGestureIntEnable@enable:	
  3371                           ; 1 bytes @ 0xD
  3372                           
  3373  007D                     setGestureMode@val:	
  3374                           ; 1 bytes @ 0xD
  3375                           
  3376                           
  3377                           ; 1 bytes @ 0xD
  3378  007D                     	ds	1
  3379  007E                     ??_enablePower:	
  3380  007E                     ??_main:	
  3381                           ; 1 bytes @ 0xE
  3382                           
  3383                           
  3384                           	psect	cstackBANK0
  3385  0036                     __pcstackBANK0:	
  3386                           ; 1 bytes @ 0xE
  3387                           
  3388  0036                     ??_setMode:	
  3389  0036                     setLEDDrive@val:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0036                     setProximityGain@val:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0036                     setGestureGain@val:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0036                     setGestureLEDDrive@val:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0036                     setLEDBoost@val:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404                           
  3405                           ; 1 bytes @ 0x0
  3406  0036                     	ds	1
  3407  0037                     setLEDDrive@drive:	
  3408  0037                     setProximityGain@drive:	
  3409                           ; 1 bytes @ 0x1
  3410                           
  3411  0037                     setGestureGain@gain:	
  3412                           ; 1 bytes @ 0x1
  3413                           
  3414  0037                     setGestureLEDDrive@drive:	
  3415                           ; 1 bytes @ 0x1
  3416                           
  3417  0037                     setLEDBoost@boost:	
  3418                           ; 1 bytes @ 0x1
  3419                           
  3420                           
  3421                           ; 1 bytes @ 0x1
  3422  0037                     	ds	1
  3423  0038                     setMode@reg_val:	
  3424                           
  3425                           ; 1 bytes @ 0x2
  3426  0038                     	ds	1
  3427  0039                     setMode@mode:	
  3428                           
  3429                           ; 1 bytes @ 0x3
  3430  0039                     	ds	1
  3431  003A                     ??_initialize:	
  3432  003A                     ??_enableGestureSensor:	
  3433                           ; 1 bytes @ 0x4
  3434                           
  3435                           
  3436                           ; 1 bytes @ 0x4
  3437  003A                     	ds	1
  3438  003B                     initialize@id:	
  3439  003B                     enableGestureSensor@interrupts:	
  3440                           ; 1 bytes @ 0x5
  3441                           
  3442                           
  3443                           ; 1 bytes @ 0x5
  3444  003B                     	ds	1
  3445                           
  3446                           	psect	maintext
  3447  035B                     __pmaintext:	
  3448 ;;
  3449 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3450 ;;
  3451 ;; *************** function _main *****************
  3452 ;; Defined at:
  3453 ;;		line 60 in file "main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : B1F/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels required when called:   10
  3473 ;; This function calls:
  3474 ;;		_IOCAF4_SetInterruptHandler
  3475 ;;		_SYSTEM_Initialize
  3476 ;;		_enableGestureSensor
  3477 ;;		_initialize
  3478 ;; This function is called by:
  3479 ;;		Startup code after reset
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _main
  3485  035B                     _main:	
  3486                           
  3487                           ;main.c: 63:     SYSTEM_Initialize();
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3491  035B  3184  24E5  3183   	fcall	_SYSTEM_Initialize
  3492                           
  3493                           ;main.c: 69:     (INTCONbits.GIE = 1);
  3494  035E  178B               	bsf	11,7	;volatile
  3495                           
  3496                           ;main.c: 72:     (INTCONbits.PEIE = 1);
  3497  035F  170B               	bsf	11,6	;volatile
  3498                           
  3499                           ;main.c: 74:     IOCAF4_SetInterruptHandler(GestureInterruptHandler);
  3500  0360  3024               	movlw	low _GestureInterruptHandler
  3501  0361  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3502  0362  3005               	movlw	high _GestureInterruptHandler
  3503  0363  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3504  0364  3185  2510  3183   	fcall	_IOCAF4_SetInterruptHandler
  3505  0367  0022               	movlb	2	; select bank2
  3506  0368  168E               	bsf	14,5	;volatile
  3507                           
  3508                           ;main.c: 86:     if(initialize()){
  3509  0369  3180  2033  3183   	fcall	_initialize
  3510  036C  3A00               	xorlw	0
  3511  036D  1903               	skipnz
  3512  036E  2B71               	goto	l3274
  3513                           
  3514                           ;main.c: 87:         do { LATAbits.LATA2 = 1; } while(0);
  3515  036F  0022               	movlb	2	; select bank2
  3516  0370  150C               	bsf	12,2	;volatile
  3517  0371                     l3274:	
  3518                           
  3519                           ;main.c: 90:     if(enableGestureSensor(1)){
  3520  0371  3001               	movlw	1
  3521  0372  3181  213B  3183   	fcall	_enableGestureSensor
  3522  0375  3A00               	xorlw	0
  3523  0376  1903               	skipnz
  3524  0377  2B7A               	goto	l3276
  3525                           
  3526                           ;main.c: 91:         do { LATAbits.LATA1 = 1; } while(0);
  3527  0378  0022               	movlb	2	; select bank2
  3528  0379  148C               	bsf	12,1	;volatile
  3529  037A                     l3276:	
  3530                           
  3531                           ;main.c: 95:     {;main.c: 96:         if(handleGestureFlag){
  3532  037A  0020               	movlb	0	; select bank0
  3533  037B  0835               	movf	_handleGestureFlag,w
  3534  037C  1903               	btfsc	3,2
  3535  037D  2B7A               	goto	l3276
  3536                           
  3537                           ;main.c: 98:             handleGestureFlag = 0;
  3538  037E  01B5               	clrf	_handleGestureFlag
  3539  037F  2B7A               	goto	l3276
  3540  0380                     __end_of_main:	
  3541                           
  3542                           	psect	text1
  3543  0033                     __ptext1:	
  3544 ;; *************** function _initialize *****************
  3545 ;; Defined at:
  3546 ;;		line 18 in file "APDS9960.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  id              1    5[BANK0 ] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      _Bool 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;Total ram usage:        2 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    8
  3567 ;; This function calls:
  3568 ;;		_InitI2C
  3569 ;;		_setAmbientLightGain
  3570 ;;		_setGestureEnterThresh
  3571 ;;		_setGestureExitThresh
  3572 ;;		_setGestureGain
  3573 ;;		_setGestureIntEnable
  3574 ;;		_setGestureLEDDrive
  3575 ;;		_setGestureWaitTime
  3576 ;;		_setLEDDrive
  3577 ;;		_setLightIntHighThreshold
  3578 ;;		_setLightIntLowThreshold
  3579 ;;		_setMode
  3580 ;;		_setProxIntHighThresh
  3581 ;;		_setProxIntLowThresh
  3582 ;;		_setProximityGain
  3583 ;;		_wireReadDataByte
  3584 ;;		_wireWriteDataByte
  3585 ;; This function is called by:
  3586 ;;		_main
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           
  3591                           ;psect for function _initialize
  3592  0033                     _initialize:	
  3593                           
  3594                           ;APDS9960.c: 23:     InitI2C();
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  3598  0033  3185  2528  3180   	fcall	_InitI2C
  3599                           
  3600                           ;APDS9960.c: 27:     id = wireReadDataByte(0x92);
  3601  0036  3092               	movlw	146
  3602  0037  3184  2410  3180   	fcall	_wireReadDataByte
  3603  003A  0020               	movlb	0	; select bank0
  3604  003B  00BA               	movwf	??_initialize
  3605  003C  083A               	movf	??_initialize,w
  3606  003D  00BB               	movwf	initialize@id
  3607                           
  3608                           ;APDS9960.c: 30:     if( !(id == 0xAB ||id == 0x9C ) )
  3609  003E  30AB               	movlw	171
  3610  003F  063B               	xorwf	initialize@id,w
  3611  0040  1903               	btfsc	3,2
  3612  0041  2848               	goto	l3038
  3613  0042  309C               	movlw	156
  3614  0043  063B               	xorwf	initialize@id,w
  3615  0044  1903               	btfsc	3,2
  3616  0045  2848               	goto	l3038
  3617  0046                     l3034:	
  3618                           
  3619                           ;APDS9960.c: 31:     {;APDS9960.c: 32:      return 0;
  3620  0046  3000               	movlw	0
  3621  0047  0008               	return
  3622  0048                     l3038:	
  3623                           
  3624                           ;APDS9960.c: 35:     setMode(7, 0);
  3625  0048  01FD               	clrf	setMode@enable
  3626  0049  3007               	movlw	7
  3627  004A  3181  219B  3180   	fcall	_setMode
  3628                           
  3629                           ;APDS9960.c: 37:     wireWriteDataByte(0x81, 219);
  3630  004D  30DB               	movlw	219
  3631  004E  0020               	movlb	0	; select bank0
  3632  004F  00BA               	movwf	??_initialize
  3633  0050  083A               	movf	??_initialize,w
  3634  0051  00F1               	movwf	wireWriteDataByte@val
  3635  0052  3081               	movlw	129
  3636  0053  3184  244C  3180   	fcall	_wireWriteDataByte
  3637                           
  3638                           ;APDS9960.c: 38:     wireWriteDataByte(0x83, 246);
  3639  0056  30F6               	movlw	246
  3640  0057  0020               	movlb	0	; select bank0
  3641  0058  00BA               	movwf	??_initialize
  3642  0059  083A               	movf	??_initialize,w
  3643  005A  00F1               	movwf	wireWriteDataByte@val
  3644  005B  3083               	movlw	131
  3645  005C  3184  244C  3180   	fcall	_wireWriteDataByte
  3646                           
  3647                           ;APDS9960.c: 39:     wireWriteDataByte(0x8E, 0x87);
  3648  005F  3087               	movlw	135
  3649  0060  0020               	movlb	0	; select bank0
  3650  0061  00BA               	movwf	??_initialize
  3651  0062  083A               	movf	??_initialize,w
  3652  0063  00F1               	movwf	wireWriteDataByte@val
  3653  0064  308E               	movlw	142
  3654  0065  3184  244C  3180   	fcall	_wireWriteDataByte
  3655                           
  3656                           ;APDS9960.c: 40:     wireWriteDataByte(0x9D, 0) ;
  3657  0068  01F1               	clrf	wireWriteDataByte@val
  3658  0069  309D               	movlw	157
  3659  006A  3184  244C  3180   	fcall	_wireWriteDataByte
  3660                           
  3661                           ;APDS9960.c: 41:     wireWriteDataByte(0x9E, 0) ;
  3662  006D  01F1               	clrf	wireWriteDataByte@val
  3663  006E  309E               	movlw	158
  3664  006F  3184  244C  3180   	fcall	_wireWriteDataByte
  3665                           
  3666                           ;APDS9960.c: 42:     wireWriteDataByte(0x8D, 0x60) ;
  3667  0072  3060               	movlw	96
  3668  0073  0020               	movlb	0	; select bank0
  3669  0074  00BA               	movwf	??_initialize
  3670  0075  083A               	movf	??_initialize,w
  3671  0076  00F1               	movwf	wireWriteDataByte@val
  3672  0077  308D               	movlw	141
  3673  0078  3184  244C  3180   	fcall	_wireWriteDataByte
  3674                           
  3675                           ;APDS9960.c: 43:     setLEDDrive(0);
  3676  007B  3000               	movlw	0
  3677  007C  3183  230A  3180   	fcall	_setLEDDrive
  3678                           
  3679                           ;APDS9960.c: 44:     setProximityGain(2);
  3680  007F  3002               	movlw	2
  3681  0080  3182  22E1  3180   	fcall	_setProximityGain
  3682                           
  3683                           ;APDS9960.c: 45:     setAmbientLightGain(1);
  3684  0083  3001               	movlw	1
  3685  0084  3184  2430  3180   	fcall	_setAmbientLightGain
  3686                           
  3687                           ;APDS9960.c: 46:     if( !setProxIntLowThresh(0) ) {
  3688  0087  3000               	movlw	0
  3689  0088  3184  2478  3180   	fcall	_setProxIntLowThresh
  3690  008B  3A00               	xorlw	0
  3691  008C  1903               	btfsc	3,2
  3692  008D  2846               	goto	l3034
  3693                           
  3694                           ;APDS9960.c: 50:     if( !setProxIntHighThresh(50) ) {
  3695  008E  3032               	movlw	50
  3696  008F  3184  2489  3180   	fcall	_setProxIntHighThresh
  3697  0092  3A00               	xorlw	0
  3698  0093  1903               	btfsc	3,2
  3699  0094  2846               	goto	l3034
  3700                           
  3701                           ;APDS9960.c: 55:     if( !setLightIntLowThreshold(0xFFFF) ) {
  3702  0095  30FF               	movlw	255
  3703  0096  00F5               	movwf	setLightIntLowThreshold@threshold
  3704  0097  30FF               	movlw	255
  3705  0098  00F6               	movwf	setLightIntLowThreshold@threshold+1
  3706  0099  3183  2380  3180   	fcall	_setLightIntLowThreshold
  3707  009C  3A00               	xorlw	0
  3708  009D  1903               	btfsc	3,2
  3709  009E  2846               	goto	l3034
  3710                           
  3711                           ;APDS9960.c: 58:     if( !setLightIntHighThreshold(0) ) {
  3712  009F  3000               	movlw	0
  3713  00A0  00F5               	movwf	setLightIntHighThreshold@threshold
  3714  00A1  00F6               	movwf	setLightIntHighThreshold@threshold+1
  3715  00A2  3183  23A4  3180   	fcall	_setLightIntHighThreshold
  3716  00A5  3A00               	xorlw	0
  3717  00A6  1903               	btfsc	3,2
  3718  00A7  2846               	goto	l3034
  3719                           
  3720                           ;APDS9960.c: 62:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  3721  00A8  3011               	movlw	17
  3722  00A9  0020               	movlb	0	; select bank0
  3723  00AA  00BA               	movwf	??_initialize
  3724  00AB  083A               	movf	??_initialize,w
  3725  00AC  00F1               	movwf	wireWriteDataByte@val
  3726  00AD  308C               	movlw	140
  3727  00AE  3184  244C  3180   	fcall	_wireWriteDataByte
  3728  00B1  0871               	movf	?_wireWriteDataByte,w
  3729  00B2  0472               	iorwf	?_wireWriteDataByte+1,w
  3730  00B3  1903               	btfsc	3,2
  3731  00B4  2846               	goto	l3034
  3732                           
  3733                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x90, 0x01) ) {
  3734  00B5  01F1               	clrf	wireWriteDataByte@val
  3735  00B6  0AF1               	incf	wireWriteDataByte@val,f
  3736  00B7  3090               	movlw	144
  3737  00B8  3184  244C  3180   	fcall	_wireWriteDataByte
  3738  00BB  0871               	movf	?_wireWriteDataByte,w
  3739  00BC  0472               	iorwf	?_wireWriteDataByte+1,w
  3740  00BD  1903               	btfsc	3,2
  3741  00BE  2846               	goto	l3034
  3742                           
  3743                           ;APDS9960.c: 69:     if( !wireWriteDataByte(0x9F, 0) ) {
  3744  00BF  01F1               	clrf	wireWriteDataByte@val
  3745  00C0  309F               	movlw	159
  3746  00C1  3184  244C  3180   	fcall	_wireWriteDataByte
  3747  00C4  0871               	movf	?_wireWriteDataByte,w
  3748  00C5  0472               	iorwf	?_wireWriteDataByte+1,w
  3749  00C6  1903               	btfsc	3,2
  3750  00C7  2846               	goto	l3034
  3751                           
  3752                           ;APDS9960.c: 73:     if( !setGestureEnterThresh(40) ) {
  3753  00C8  3028               	movlw	40
  3754  00C9  3184  24AB  3180   	fcall	_setGestureEnterThresh
  3755  00CC  3A00               	xorlw	0
  3756  00CD  1903               	btfsc	3,2
  3757  00CE  2846               	goto	l3034
  3758                           
  3759                           ;APDS9960.c: 77:     if( !setGestureExitThresh(30) ) {
  3760  00CF  301E               	movlw	30
  3761  00D0  3184  249A  3180   	fcall	_setGestureExitThresh
  3762  00D3  3A00               	xorlw	0
  3763  00D4  1903               	btfsc	3,2
  3764  00D5  2846               	goto	l3034
  3765                           
  3766                           ;APDS9960.c: 80:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  3767  00D6  3040               	movlw	64
  3768  00D7  0020               	movlb	0	; select bank0
  3769  00D8  00BA               	movwf	??_initialize
  3770  00D9  083A               	movf	??_initialize,w
  3771  00DA  00F1               	movwf	wireWriteDataByte@val
  3772  00DB  30A2               	movlw	162
  3773  00DC  3184  244C  3180   	fcall	_wireWriteDataByte
  3774  00DF  0871               	movf	?_wireWriteDataByte,w
  3775  00E0  0472               	iorwf	?_wireWriteDataByte+1,w
  3776  00E1  1903               	btfsc	3,2
  3777  00E2  2846               	goto	l3034
  3778                           
  3779                           ;APDS9960.c: 83:     if( !setGestureGain(2) ) {
  3780  00E3  3002               	movlw	2
  3781  00E4  3182  2255  3180   	fcall	_setGestureGain
  3782  00E7  3A00               	xorlw	0
  3783  00E8  1903               	btfsc	3,2
  3784  00E9  2846               	goto	l3034
  3785                           
  3786                           ;APDS9960.c: 86:     if( !setGestureLEDDrive(0) ) {
  3787  00EA  3000               	movlw	0
  3788  00EB  3182  2224  3180   	fcall	_setGestureLEDDrive
  3789  00EE  3A00               	xorlw	0
  3790  00EF  1903               	btfsc	3,2
  3791  00F0  2846               	goto	l3034
  3792                           
  3793                           ;APDS9960.c: 89:     if( !setGestureWaitTime(1) ) {
  3794  00F1  3001               	movlw	1
  3795  00F2  3183  23C8  3180   	fcall	_setGestureWaitTime
  3796  00F5  3A00               	xorlw	0
  3797  00F6  1903               	btfsc	3,2
  3798  00F7  2846               	goto	l3034
  3799                           
  3800                           ;APDS9960.c: 92:     if( !wireWriteDataByte(0xA4, 0) ) {
  3801  00F8  01F1               	clrf	wireWriteDataByte@val
  3802  00F9  30A4               	movlw	164
  3803  00FA  3184  244C  3180   	fcall	_wireWriteDataByte
  3804  00FD  0871               	movf	?_wireWriteDataByte,w
  3805  00FE  0472               	iorwf	?_wireWriteDataByte+1,w
  3806  00FF  1903               	btfsc	3,2
  3807  0100  2846               	goto	l3034
  3808                           
  3809                           ;APDS9960.c: 95:     if( !wireWriteDataByte(0xA5, 0) ) {
  3810  0101  01F1               	clrf	wireWriteDataByte@val
  3811  0102  30A5               	movlw	165
  3812  0103  3184  244C  3180   	fcall	_wireWriteDataByte
  3813  0106  0871               	movf	?_wireWriteDataByte,w
  3814  0107  0472               	iorwf	?_wireWriteDataByte+1,w
  3815  0108  1903               	btfsc	3,2
  3816  0109  2846               	goto	l3034
  3817                           
  3818                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA7, 0) ) {
  3819  010A  01F1               	clrf	wireWriteDataByte@val
  3820  010B  30A7               	movlw	167
  3821  010C  3184  244C  3180   	fcall	_wireWriteDataByte
  3822  010F  0871               	movf	?_wireWriteDataByte,w
  3823  0110  0472               	iorwf	?_wireWriteDataByte+1,w
  3824  0111  1903               	btfsc	3,2
  3825  0112  2846               	goto	l3034
  3826                           
  3827                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA9, 0) ) {
  3828  0113  01F1               	clrf	wireWriteDataByte@val
  3829  0114  30A9               	movlw	169
  3830  0115  3184  244C  3180   	fcall	_wireWriteDataByte
  3831  0118  0871               	movf	?_wireWriteDataByte,w
  3832  0119  0472               	iorwf	?_wireWriteDataByte+1,w
  3833  011A  1903               	btfsc	3,2
  3834  011B  2846               	goto	l3034
  3835                           
  3836                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  3837  011C  30C9               	movlw	201
  3838  011D  0020               	movlb	0	; select bank0
  3839  011E  00BA               	movwf	??_initialize
  3840  011F  083A               	movf	??_initialize,w
  3841  0120  00F1               	movwf	wireWriteDataByte@val
  3842  0121  30A6               	movlw	166
  3843  0122  3184  244C  3180   	fcall	_wireWriteDataByte
  3844  0125  0871               	movf	?_wireWriteDataByte,w
  3845  0126  0472               	iorwf	?_wireWriteDataByte+1,w
  3846  0127  1903               	btfsc	3,2
  3847  0128  2846               	goto	l3034
  3848                           
  3849                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xAA, 0) ) {
  3850  0129  01F1               	clrf	wireWriteDataByte@val
  3851  012A  30AA               	movlw	170
  3852  012B  3184  244C  3180   	fcall	_wireWriteDataByte
  3853  012E  0871               	movf	?_wireWriteDataByte,w
  3854  012F  0472               	iorwf	?_wireWriteDataByte+1,w
  3855  0130  1903               	btfsc	3,2
  3856  0131  2846               	goto	l3034
  3857                           
  3858                           ;APDS9960.c: 110:     if( !setGestureIntEnable(0) ) {
  3859  0132  3000               	movlw	0
  3860  0133  3183  2333  3180   	fcall	_setGestureIntEnable
  3861  0136  3A00               	xorlw	0
  3862  0137  1903               	btfsc	3,2
  3863  0138  2846               	goto	l3034
  3864                           
  3865                           ;APDS9960.c: 114:     return 1;
  3866  0139  3001               	movlw	1
  3867  013A  0008               	return
  3868  013B                     __end_of_initialize:	
  3869                           
  3870                           	psect	text2
  3871  02E1                     __ptext2:	
  3872 ;; *************** function _setProximityGain *****************
  3873 ;; Defined at:
  3874 ;;		line 186 in file "APDS9960.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  drive           1    wreg     unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  drive           1    1[BANK0 ] unsigned char 
  3879 ;;  val             1    0[BANK0 ] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      _Bool 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;Total ram usage:        4 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    6
  3896 ;; This function calls:
  3897 ;;		_wireReadDataByte
  3898 ;;		_wireWriteDataByte
  3899 ;; This function is called by:
  3900 ;;		_initialize
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _setProximityGain
  3906  02E1                     _setProximityGain:	
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  3910                           ;setProximityGain@drive stored from wreg
  3911  02E1  0020               	movlb	0	; select bank0
  3912  02E2  00B7               	movwf	setProximityGain@drive
  3913                           
  3914                           ;APDS9960.c: 186: _Bool setProximityGain(uint8_t drive);APDS9960.c: 187: {;APDS9960.c: 1
      +                          88:     uint8_t val;;APDS9960.c: 191:     val=wireReadDataByte(0x8F);
  3915  02E3  308F               	movlw	143
  3916  02E4  3184  2410  3182   	fcall	_wireReadDataByte
  3917  02E7  00FB               	movwf	??_setProximityGain
  3918  02E8  087B               	movf	??_setProximityGain,w
  3919  02E9  0020               	movlb	0	; select bank0
  3920  02EA  00B6               	movwf	setProximityGain@val
  3921                           
  3922                           ;APDS9960.c: 193:     drive &= 0b00000011;
  3923  02EB  3003               	movlw	3
  3924  02EC  00FB               	movwf	??_setProximityGain
  3925  02ED  087B               	movf	??_setProximityGain,w
  3926  02EE  05B7               	andwf	setProximityGain@drive,f
  3927                           
  3928                           ;APDS9960.c: 194:     drive = drive << 2;
  3929  02EF  0837               	movf	setProximityGain@drive,w
  3930  02F0  00FB               	movwf	??_setProximityGain
  3931  02F1  3001               	movlw	1
  3932  02F2                     u1815:	
  3933  02F2  35FB               	lslf	??_setProximityGain,f
  3934  02F3  3EFF               	addlw	-1
  3935  02F4  1D03               	skipz
  3936  02F5  2AF2               	goto	u1815
  3937  02F6  357B               	lslf	??_setProximityGain,w
  3938  02F7  00FC               	movwf	??_setProximityGain+1
  3939  02F8  087C               	movf	??_setProximityGain+1,w
  3940  02F9  00B7               	movwf	setProximityGain@drive
  3941                           
  3942                           ;APDS9960.c: 195:     val &= 0b11110011;
  3943  02FA  30F3               	movlw	243
  3944  02FB  00FB               	movwf	??_setProximityGain
  3945  02FC  087B               	movf	??_setProximityGain,w
  3946  02FD  05B6               	andwf	setProximityGain@val,f
  3947                           
  3948                           ;APDS9960.c: 196:     val |= drive;
  3949  02FE  0837               	movf	setProximityGain@drive,w
  3950  02FF  00FB               	movwf	??_setProximityGain
  3951  0300  087B               	movf	??_setProximityGain,w
  3952  0301  04B6               	iorwf	setProximityGain@val,f
  3953                           
  3954                           ;APDS9960.c: 199:     if( !wireWriteDataByte(0x8F, val) ) {
  3955  0302  0836               	movf	setProximityGain@val,w
  3956  0303  00FB               	movwf	??_setProximityGain
  3957  0304  087B               	movf	??_setProximityGain,w
  3958  0305  00F1               	movwf	wireWriteDataByte@val
  3959  0306  308F               	movlw	143
  3960  0307  3184  244C         	fcall	_wireWriteDataByte
  3961  0309  0008               	return
  3962  030A                     __end_of_setProximityGain:	
  3963                           
  3964                           	psect	text3
  3965  0478                     __ptext3:	
  3966 ;; *************** function _setProxIntLowThresh *****************
  3967 ;; Defined at:
  3968 ;;		line 228 in file "APDS9960.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  threshold       1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  threshold       1    6[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      _Bool 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    6
  3989 ;; This function calls:
  3990 ;;		_wireWriteDataByte
  3991 ;; This function is called by:
  3992 ;;		_initialize
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _setProxIntLowThresh
  3998  0478                     _setProxIntLowThresh:	
  3999                           
  4000                           ;incstack = 0
  4001                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  4002                           ;setProxIntLowThresh@threshold stored from wreg
  4003  0478  00F6               	movwf	setProxIntLowThresh@threshold
  4004                           
  4005                           ;APDS9960.c: 228: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 229: {;APDS99
      +                          60.c: 230:     if( !wireWriteDataByte(0x89, threshold) ) {
  4006  0479  0876               	movf	setProxIntLowThresh@threshold,w
  4007  047A  00F5               	movwf	??_setProxIntLowThresh
  4008  047B  0875               	movf	??_setProxIntLowThresh,w
  4009  047C  00F1               	movwf	wireWriteDataByte@val
  4010  047D  3089               	movlw	137
  4011  047E  3184  244C  3184   	fcall	_wireWriteDataByte
  4012  0481  0871               	movf	?_wireWriteDataByte,w
  4013  0482  0472               	iorwf	?_wireWriteDataByte+1,w
  4014  0483  1D03               	btfss	3,2
  4015  0484  2C87               	goto	l2818
  4016                           
  4017                           ;APDS9960.c: 231:         return 0;
  4018  0485  3000               	movlw	0
  4019  0486  0008               	return
  4020  0487                     l2818:	
  4021                           
  4022                           ;APDS9960.c: 234:     return 1;
  4023  0487  3001               	movlw	1
  4024  0488  0008               	return
  4025  0489                     __end_of_setProxIntLowThresh:	
  4026                           
  4027                           	psect	text4
  4028  0489                     __ptext4:	
  4029 ;; *************** function _setProxIntHighThresh *****************
  4030 ;; Defined at:
  4031 ;;		line 238 in file "APDS9960.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  threshold       1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  threshold       1    6[COMMON] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      _Bool 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        2 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    6
  4052 ;; This function calls:
  4053 ;;		_wireWriteDataByte
  4054 ;; This function is called by:
  4055 ;;		_initialize
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _setProxIntHighThresh
  4061  0489                     _setProxIntHighThresh:	
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  4065                           ;setProxIntHighThresh@threshold stored from wreg
  4066  0489  00F6               	movwf	setProxIntHighThresh@threshold
  4067                           
  4068                           ;APDS9960.c: 238: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 239: {;APDS9
      +                          960.c: 240:     if( !wireWriteDataByte(0x8B, threshold) ) {
  4069  048A  0876               	movf	setProxIntHighThresh@threshold,w
  4070  048B  00F5               	movwf	??_setProxIntHighThresh
  4071  048C  0875               	movf	??_setProxIntHighThresh,w
  4072  048D  00F1               	movwf	wireWriteDataByte@val
  4073  048E  308B               	movlw	139
  4074  048F  3184  244C  3184   	fcall	_wireWriteDataByte
  4075  0492  0871               	movf	?_wireWriteDataByte,w
  4076  0493  0472               	iorwf	?_wireWriteDataByte+1,w
  4077  0494  1D03               	btfss	3,2
  4078  0495  2C98               	goto	l2828
  4079                           
  4080                           ;APDS9960.c: 241:         return 0;
  4081  0496  3000               	movlw	0
  4082  0497  0008               	return
  4083  0498                     l2828:	
  4084                           
  4085                           ;APDS9960.c: 244:     return 1;
  4086  0498  3001               	movlw	1
  4087  0499  0008               	return
  4088  049A                     __end_of_setProxIntHighThresh:	
  4089                           
  4090                           	psect	text5
  4091  0380                     __ptext5:	
  4092 ;; *************** function _setLightIntLowThreshold *****************
  4093 ;; Defined at:
  4094 ;;		line 248 in file "APDS9960.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  threshold       2    5[COMMON] unsigned short 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  val_high        1    9[COMMON] unsigned char 
  4099 ;;  val_low         1    8[COMMON] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      _Bool 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;Total ram usage:        5 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    6
  4116 ;; This function calls:
  4117 ;;		_wireWriteDataByte
  4118 ;; This function is called by:
  4119 ;;		_initialize
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _setLightIntLowThreshold
  4125  0380                     _setLightIntLowThreshold:	
  4126                           
  4127                           ;APDS9960.c: 248: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 249: {;A
      +                          PDS9960.c: 250:     uint8_t val_low;;APDS9960.c: 251:     uint8_t val_high;;APDS9960.c: 
      +                          254:     val_low = threshold & 0x00FF;
  4128                           
  4129                           ;incstack = 0
  4130                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  4131  0380  0875               	movf	setLightIntLowThreshold@threshold,w
  4132  0381  00F7               	movwf	??_setLightIntLowThreshold
  4133  0382  0877               	movf	??_setLightIntLowThreshold,w
  4134  0383  00F8               	movwf	setLightIntLowThreshold@val_low
  4135                           
  4136                           ;APDS9960.c: 255:     val_high = (threshold & 0xFF00) >> 8;
  4137  0384  0876               	movf	setLightIntLowThreshold@threshold+1,w
  4138  0385  00F7               	movwf	??_setLightIntLowThreshold
  4139  0386  0877               	movf	??_setLightIntLowThreshold,w
  4140  0387  00F9               	movwf	setLightIntLowThreshold@val_high
  4141                           
  4142                           ;APDS9960.c: 258:     if( !wireWriteDataByte(0x84, val_low) ) {
  4143  0388  0878               	movf	setLightIntLowThreshold@val_low,w
  4144  0389  00F7               	movwf	??_setLightIntLowThreshold
  4145  038A  0877               	movf	??_setLightIntLowThreshold,w
  4146  038B  00F1               	movwf	wireWriteDataByte@val
  4147  038C  3084               	movlw	132
  4148  038D  3184  244C  3183   	fcall	_wireWriteDataByte
  4149  0390  0871               	movf	?_wireWriteDataByte,w
  4150  0391  0472               	iorwf	?_wireWriteDataByte+1,w
  4151  0392  1D03               	btfss	3,2
  4152  0393  2B96               	goto	l2842
  4153  0394                     l2838:	
  4154                           
  4155                           ;APDS9960.c: 259:         return 0;
  4156  0394  3000               	movlw	0
  4157  0395  0008               	return
  4158  0396                     l2842:	
  4159                           
  4160                           ;APDS9960.c: 263:     if( !wireWriteDataByte(0x85, val_high) ) {
  4161  0396  0879               	movf	setLightIntLowThreshold@val_high,w
  4162  0397  00F7               	movwf	??_setLightIntLowThreshold
  4163  0398  0877               	movf	??_setLightIntLowThreshold,w
  4164  0399  00F1               	movwf	wireWriteDataByte@val
  4165  039A  3085               	movlw	133
  4166  039B  3184  244C  3183   	fcall	_wireWriteDataByte
  4167  039E  0871               	movf	?_wireWriteDataByte,w
  4168  039F  0472               	iorwf	?_wireWriteDataByte+1,w
  4169  03A0  1903               	btfsc	3,2
  4170  03A1  2B94               	goto	l2838
  4171                           
  4172                           ;APDS9960.c: 267:     return 1;
  4173  03A2  3001               	movlw	1
  4174  03A3  0008               	return
  4175  03A4                     __end_of_setLightIntLowThreshold:	
  4176                           
  4177                           	psect	text6
  4178  03A4                     __ptext6:	
  4179 ;; *************** function _setLightIntHighThreshold *****************
  4180 ;; Defined at:
  4181 ;;		line 271 in file "APDS9960.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  threshold       2    5[COMMON] unsigned short 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  val_high        1    9[COMMON] unsigned char 
  4186 ;;  val_low         1    8[COMMON] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      _Bool 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        5 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    6
  4203 ;; This function calls:
  4204 ;;		_wireWriteDataByte
  4205 ;; This function is called by:
  4206 ;;		_initialize
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function _setLightIntHighThreshold
  4212  03A4                     _setLightIntHighThreshold:	
  4213                           
  4214                           ;APDS9960.c: 271: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 272: {;
      +                          APDS9960.c: 273:     uint8_t val_low;;APDS9960.c: 274:     uint8_t val_high;;APDS9960.c:
      +                           277:     val_low = threshold & 0x00FF;
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  4218  03A4  0875               	movf	setLightIntHighThreshold@threshold,w
  4219  03A5  00F7               	movwf	??_setLightIntHighThreshold
  4220  03A6  0877               	movf	??_setLightIntHighThreshold,w
  4221  03A7  00F8               	movwf	setLightIntHighThreshold@val_low
  4222                           
  4223                           ;APDS9960.c: 278:     val_high = (threshold & 0xFF00) >> 8;
  4224  03A8  0876               	movf	setLightIntHighThreshold@threshold+1,w
  4225  03A9  00F7               	movwf	??_setLightIntHighThreshold
  4226  03AA  0877               	movf	??_setLightIntHighThreshold,w
  4227  03AB  00F9               	movwf	setLightIntHighThreshold@val_high
  4228                           
  4229                           ;APDS9960.c: 281:     if( !wireWriteDataByte(0x86, val_low) ) {
  4230  03AC  0878               	movf	setLightIntHighThreshold@val_low,w
  4231  03AD  00F7               	movwf	??_setLightIntHighThreshold
  4232  03AE  0877               	movf	??_setLightIntHighThreshold,w
  4233  03AF  00F1               	movwf	wireWriteDataByte@val
  4234  03B0  3086               	movlw	134
  4235  03B1  3184  244C  3183   	fcall	_wireWriteDataByte
  4236  03B4  0871               	movf	?_wireWriteDataByte,w
  4237  03B5  0472               	iorwf	?_wireWriteDataByte+1,w
  4238  03B6  1D03               	btfss	3,2
  4239  03B7  2BBA               	goto	l2862
  4240  03B8                     l2858:	
  4241                           
  4242                           ;APDS9960.c: 282:         return 0;
  4243  03B8  3000               	movlw	0
  4244  03B9  0008               	return
  4245  03BA                     l2862:	
  4246                           
  4247                           ;APDS9960.c: 286:     if( !wireWriteDataByte(0x87, val_high) ) {
  4248  03BA  0879               	movf	setLightIntHighThreshold@val_high,w
  4249  03BB  00F7               	movwf	??_setLightIntHighThreshold
  4250  03BC  0877               	movf	??_setLightIntHighThreshold,w
  4251  03BD  00F1               	movwf	wireWriteDataByte@val
  4252  03BE  3087               	movlw	135
  4253  03BF  3184  244C  3183   	fcall	_wireWriteDataByte
  4254  03C2  0871               	movf	?_wireWriteDataByte,w
  4255  03C3  0472               	iorwf	?_wireWriteDataByte+1,w
  4256  03C4  1903               	btfsc	3,2
  4257  03C5  2BB8               	goto	l2858
  4258                           
  4259                           ;APDS9960.c: 290:     return 1;
  4260  03C6  3001               	movlw	1
  4261  03C7  0008               	return
  4262  03C8                     __end_of_setLightIntHighThreshold:	
  4263                           
  4264                           	psect	text7
  4265  030A                     __ptext7:	
  4266 ;; *************** function _setLEDDrive *****************
  4267 ;; Defined at:
  4268 ;;		line 164 in file "APDS9960.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  drive           1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  drive           1    1[BANK0 ] unsigned char 
  4273 ;;  val             1    0[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      _Bool 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        4 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    6
  4290 ;; This function calls:
  4291 ;;		_wireReadDataByte
  4292 ;;		_wireWriteDataByte
  4293 ;; This function is called by:
  4294 ;;		_initialize
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _setLEDDrive
  4300  030A                     _setLEDDrive:	
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4304                           ;setLEDDrive@drive stored from wreg
  4305  030A  0020               	movlb	0	; select bank0
  4306  030B  00B7               	movwf	setLEDDrive@drive
  4307                           
  4308                           ;APDS9960.c: 164: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 165: {;APDS9960.c: 166:  
      +                             uint8_t val;;APDS9960.c: 169:     val=wireReadDataByte(0x8F);
  4309  030C  308F               	movlw	143
  4310  030D  3184  2410  3183   	fcall	_wireReadDataByte
  4311  0310  00FB               	movwf	??_setLEDDrive
  4312  0311  087B               	movf	??_setLEDDrive,w
  4313  0312  0020               	movlb	0	; select bank0
  4314  0313  00B6               	movwf	setLEDDrive@val
  4315                           
  4316                           ;APDS9960.c: 172:     drive &= 0b00000011;
  4317  0314  3003               	movlw	3
  4318  0315  00FB               	movwf	??_setLEDDrive
  4319  0316  087B               	movf	??_setLEDDrive,w
  4320  0317  05B7               	andwf	setLEDDrive@drive,f
  4321                           
  4322                           ;APDS9960.c: 173:     drive = drive << 6;
  4323  0318  0837               	movf	setLEDDrive@drive,w
  4324  0319  00FB               	movwf	??_setLEDDrive
  4325  031A  3005               	movlw	5
  4326  031B                     u1805:	
  4327  031B  35FB               	lslf	??_setLEDDrive,f
  4328  031C  3EFF               	addlw	-1
  4329  031D  1D03               	skipz
  4330  031E  2B1B               	goto	u1805
  4331  031F  357B               	lslf	??_setLEDDrive,w
  4332  0320  00FC               	movwf	??_setLEDDrive+1
  4333  0321  087C               	movf	??_setLEDDrive+1,w
  4334  0322  00B7               	movwf	setLEDDrive@drive
  4335                           
  4336                           ;APDS9960.c: 174:     val &= 0b00111111;
  4337  0323  303F               	movlw	63
  4338  0324  00FB               	movwf	??_setLEDDrive
  4339  0325  087B               	movf	??_setLEDDrive,w
  4340  0326  05B6               	andwf	setLEDDrive@val,f
  4341                           
  4342                           ;APDS9960.c: 175:     val |= drive;
  4343  0327  0837               	movf	setLEDDrive@drive,w
  4344  0328  00FB               	movwf	??_setLEDDrive
  4345  0329  087B               	movf	??_setLEDDrive,w
  4346  032A  04B6               	iorwf	setLEDDrive@val,f
  4347                           
  4348                           ;APDS9960.c: 178:     if( !wireWriteDataByte(0x8F, val) ) {
  4349  032B  0836               	movf	setLEDDrive@val,w
  4350  032C  00FB               	movwf	??_setLEDDrive
  4351  032D  087B               	movf	??_setLEDDrive,w
  4352  032E  00F1               	movwf	wireWriteDataByte@val
  4353  032F  308F               	movlw	143
  4354  0330  3184  244C         	fcall	_wireWriteDataByte
  4355  0332  0008               	return
  4356  0333                     __end_of_setLEDDrive:	
  4357                           
  4358                           	psect	text8
  4359  03C8                     __ptext8:	
  4360 ;; *************** function _setGestureWaitTime *****************
  4361 ;; Defined at:
  4362 ;;		line 360 in file "APDS9960.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  time            1    wreg     unsigned char 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  time            1   12[COMMON] unsigned char 
  4367 ;;  val             1   13[COMMON] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      _Bool 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;Total ram usage:        3 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    6
  4384 ;; This function calls:
  4385 ;;		_wireReadDataByte
  4386 ;;		_wireWriteDataByte
  4387 ;; This function is called by:
  4388 ;;		_initialize
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _setGestureWaitTime
  4394  03C8                     _setGestureWaitTime:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  4398                           ;setGestureWaitTime@time stored from wreg
  4399  03C8  00FC               	movwf	setGestureWaitTime@time
  4400                           
  4401                           ;APDS9960.c: 360: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 361: {;APDS9960.c: 
      +                          362:     uint8_t val;;APDS9960.c: 365:     val = wireReadDataByte(0xA3);
  4402  03C9  30A3               	movlw	163
  4403  03CA  3184  2410  3183   	fcall	_wireReadDataByte
  4404  03CD  00FB               	movwf	??_setGestureWaitTime
  4405  03CE  087B               	movf	??_setGestureWaitTime,w
  4406  03CF  00FD               	movwf	setGestureWaitTime@val
  4407                           
  4408                           ;APDS9960.c: 368:     time &= 0b00000111;
  4409  03D0  3007               	movlw	7
  4410  03D1  00FB               	movwf	??_setGestureWaitTime
  4411  03D2  087B               	movf	??_setGestureWaitTime,w
  4412  03D3  05FC               	andwf	setGestureWaitTime@time,f
  4413                           
  4414                           ;APDS9960.c: 369:     val &= 0b11111000;
  4415  03D4  30F8               	movlw	248
  4416  03D5  00FB               	movwf	??_setGestureWaitTime
  4417  03D6  087B               	movf	??_setGestureWaitTime,w
  4418  03D7  05FD               	andwf	setGestureWaitTime@val,f
  4419                           
  4420                           ;APDS9960.c: 370:     val |= time;
  4421  03D8  087C               	movf	setGestureWaitTime@time,w
  4422  03D9  00FB               	movwf	??_setGestureWaitTime
  4423  03DA  087B               	movf	??_setGestureWaitTime,w
  4424  03DB  04FD               	iorwf	setGestureWaitTime@val,f
  4425                           
  4426                           ;APDS9960.c: 373:     if( !wireWriteDataByte(0xA3, val) ) {
  4427  03DC  087D               	movf	setGestureWaitTime@val,w
  4428  03DD  00FB               	movwf	??_setGestureWaitTime
  4429  03DE  087B               	movf	??_setGestureWaitTime,w
  4430  03DF  00F1               	movwf	wireWriteDataByte@val
  4431  03E0  30A3               	movlw	163
  4432  03E1  3184  244C  3183   	fcall	_wireWriteDataByte
  4433  03E4  0871               	movf	?_wireWriteDataByte,w
  4434  03E5  0472               	iorwf	?_wireWriteDataByte+1,w
  4435  03E6  1D03               	btfss	3,2
  4436  03E7  2BEA               	goto	l2942
  4437                           
  4438                           ;APDS9960.c: 374:         return 0;
  4439  03E8  3000               	movlw	0
  4440  03E9  0008               	return
  4441  03EA                     l2942:	
  4442                           
  4443                           ;APDS9960.c: 377:     return 1;
  4444  03EA  3001               	movlw	1
  4445  03EB  0008               	return
  4446  03EC                     __end_of_setGestureWaitTime:	
  4447                           
  4448                           	psect	text9
  4449  0224                     __ptext9:	
  4450 ;; *************** function _setGestureLEDDrive *****************
  4451 ;; Defined at:
  4452 ;;		line 337 in file "APDS9960.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  drive           1    wreg     unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  drive           1    1[BANK0 ] unsigned char 
  4457 ;;  val             1    0[BANK0 ] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      _Bool 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        4 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    6
  4474 ;; This function calls:
  4475 ;;		_wireReadDataByte
  4476 ;;		_wireWriteDataByte
  4477 ;; This function is called by:
  4478 ;;		_initialize
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _setGestureLEDDrive
  4484  0224                     _setGestureLEDDrive:	
  4485                           
  4486                           ;incstack = 0
  4487                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4488                           ;setGestureLEDDrive@drive stored from wreg
  4489  0224  0020               	movlb	0	; select bank0
  4490  0225  00B7               	movwf	setGestureLEDDrive@drive
  4491                           
  4492                           ;APDS9960.c: 337: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 338: {;APDS9960.c:
      +                           339:     uint8_t val;;APDS9960.c: 342:     val = wireReadDataByte(0xA3);
  4493  0226  30A3               	movlw	163
  4494  0227  3184  2410  3182   	fcall	_wireReadDataByte
  4495  022A  00FB               	movwf	??_setGestureLEDDrive
  4496  022B  087B               	movf	??_setGestureLEDDrive,w
  4497  022C  0020               	movlb	0	; select bank0
  4498  022D  00B6               	movwf	setGestureLEDDrive@val
  4499                           
  4500                           ;APDS9960.c: 346:     drive &= 0b00000011;
  4501  022E  3003               	movlw	3
  4502  022F  00FB               	movwf	??_setGestureLEDDrive
  4503  0230  087B               	movf	??_setGestureLEDDrive,w
  4504  0231  05B7               	andwf	setGestureLEDDrive@drive,f
  4505                           
  4506                           ;APDS9960.c: 347:     drive = drive << 3;
  4507  0232  0837               	movf	setGestureLEDDrive@drive,w
  4508  0233  00FB               	movwf	??_setGestureLEDDrive
  4509  0234  3002               	movlw	2
  4510  0235                     u1925:	
  4511  0235  35FB               	lslf	??_setGestureLEDDrive,f
  4512  0236  3EFF               	addlw	-1
  4513  0237  1D03               	skipz
  4514  0238  2A35               	goto	u1925
  4515  0239  357B               	lslf	??_setGestureLEDDrive,w
  4516  023A  00FC               	movwf	??_setGestureLEDDrive+1
  4517  023B  087C               	movf	??_setGestureLEDDrive+1,w
  4518  023C  00B7               	movwf	setGestureLEDDrive@drive
  4519                           
  4520                           ;APDS9960.c: 348:     val &= 0b11100111;
  4521  023D  30E7               	movlw	231
  4522  023E  00FB               	movwf	??_setGestureLEDDrive
  4523  023F  087B               	movf	??_setGestureLEDDrive,w
  4524  0240  05B6               	andwf	setGestureLEDDrive@val,f
  4525                           
  4526                           ;APDS9960.c: 349:     val |= drive;
  4527  0241  0837               	movf	setGestureLEDDrive@drive,w
  4528  0242  00FB               	movwf	??_setGestureLEDDrive
  4529  0243  087B               	movf	??_setGestureLEDDrive,w
  4530  0244  04B6               	iorwf	setGestureLEDDrive@val,f
  4531                           
  4532                           ;APDS9960.c: 352:     if( !wireWriteDataByte(0xA3, val) ) {
  4533  0245  0836               	movf	setGestureLEDDrive@val,w
  4534  0246  00FB               	movwf	??_setGestureLEDDrive
  4535  0247  087B               	movf	??_setGestureLEDDrive,w
  4536  0248  00F1               	movwf	wireWriteDataByte@val
  4537  0249  30A3               	movlw	163
  4538  024A  3184  244C  3182   	fcall	_wireWriteDataByte
  4539  024D  0871               	movf	?_wireWriteDataByte,w
  4540  024E  0472               	iorwf	?_wireWriteDataByte+1,w
  4541  024F  1D03               	btfss	3,2
  4542  0250  2A53               	goto	l2924
  4543                           
  4544                           ;APDS9960.c: 353:         return 0;
  4545  0251  3000               	movlw	0
  4546  0252  0008               	return
  4547  0253                     l2924:	
  4548                           
  4549                           ;APDS9960.c: 356:     return 1;
  4550  0253  3001               	movlw	1
  4551  0254  0008               	return
  4552  0255                     __end_of_setGestureLEDDrive:	
  4553                           
  4554                           	psect	text10
  4555  0255                     __ptext10:	
  4556 ;; *************** function _setGestureGain *****************
  4557 ;; Defined at:
  4558 ;;		line 314 in file "APDS9960.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  gain            1    wreg     unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  gain            1    1[BANK0 ] unsigned char 
  4563 ;;  val             1    0[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      _Bool 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;Total ram usage:        4 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    6
  4580 ;; This function calls:
  4581 ;;		_wireReadDataByte
  4582 ;;		_wireWriteDataByte
  4583 ;; This function is called by:
  4584 ;;		_initialize
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _setGestureGain
  4590  0255                     _setGestureGain:	
  4591                           
  4592                           ;incstack = 0
  4593                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  4594                           ;setGestureGain@gain stored from wreg
  4595  0255  0020               	movlb	0	; select bank0
  4596  0256  00B7               	movwf	setGestureGain@gain
  4597                           
  4598                           ;APDS9960.c: 314: _Bool setGestureGain(uint8_t gain);APDS9960.c: 315: {;APDS9960.c: 316:
      +                               uint8_t val;;APDS9960.c: 319:     val = wireReadDataByte(0xA3);
  4599  0257  30A3               	movlw	163
  4600  0258  3184  2410  3182   	fcall	_wireReadDataByte
  4601  025B  00FB               	movwf	??_setGestureGain
  4602  025C  087B               	movf	??_setGestureGain,w
  4603  025D  0020               	movlb	0	; select bank0
  4604  025E  00B6               	movwf	setGestureGain@val
  4605                           
  4606                           ;APDS9960.c: 323:     gain &= 0b00000011;
  4607  025F  3003               	movlw	3
  4608  0260  00FB               	movwf	??_setGestureGain
  4609  0261  087B               	movf	??_setGestureGain,w
  4610  0262  05B7               	andwf	setGestureGain@gain,f
  4611                           
  4612                           ;APDS9960.c: 324:     gain = gain << 5;
  4613  0263  0837               	movf	setGestureGain@gain,w
  4614  0264  00FB               	movwf	??_setGestureGain
  4615  0265  3004               	movlw	4
  4616  0266                     u1905:	
  4617  0266  35FB               	lslf	??_setGestureGain,f
  4618  0267  3EFF               	addlw	-1
  4619  0268  1D03               	skipz
  4620  0269  2A66               	goto	u1905
  4621  026A  357B               	lslf	??_setGestureGain,w
  4622  026B  00FC               	movwf	??_setGestureGain+1
  4623  026C  087C               	movf	??_setGestureGain+1,w
  4624  026D  00B7               	movwf	setGestureGain@gain
  4625                           
  4626                           ;APDS9960.c: 325:     val &= 0b10011111;
  4627  026E  309F               	movlw	159
  4628  026F  00FB               	movwf	??_setGestureGain
  4629  0270  087B               	movf	??_setGestureGain,w
  4630  0271  05B6               	andwf	setGestureGain@val,f
  4631                           
  4632                           ;APDS9960.c: 326:     val |= gain;
  4633  0272  0837               	movf	setGestureGain@gain,w
  4634  0273  00FB               	movwf	??_setGestureGain
  4635  0274  087B               	movf	??_setGestureGain,w
  4636  0275  04B6               	iorwf	setGestureGain@val,f
  4637                           
  4638                           ;APDS9960.c: 329:     if( !wireWriteDataByte(0xA3, val) ) {
  4639  0276  0836               	movf	setGestureGain@val,w
  4640  0277  00FB               	movwf	??_setGestureGain
  4641  0278  087B               	movf	??_setGestureGain,w
  4642  0279  00F1               	movwf	wireWriteDataByte@val
  4643  027A  30A3               	movlw	163
  4644  027B  3184  244C  3182   	fcall	_wireWriteDataByte
  4645  027E  0871               	movf	?_wireWriteDataByte,w
  4646  027F  0472               	iorwf	?_wireWriteDataByte+1,w
  4647  0280  1D03               	btfss	3,2
  4648  0281  2A84               	goto	l2906
  4649                           
  4650                           ;APDS9960.c: 330:         return 0;
  4651  0282  3000               	movlw	0
  4652  0283  0008               	return
  4653  0284                     l2906:	
  4654                           
  4655                           ;APDS9960.c: 333:     return 1;
  4656  0284  3001               	movlw	1
  4657  0285  0008               	return
  4658  0286                     __end_of_setGestureGain:	
  4659                           
  4660                           	psect	text11
  4661  049A                     __ptext11:	
  4662 ;; *************** function _setGestureExitThresh *****************
  4663 ;; Defined at:
  4664 ;;		line 304 in file "APDS9960.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  threshold       1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  threshold       1    6[COMMON] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      _Bool 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    6
  4685 ;; This function calls:
  4686 ;;		_wireWriteDataByte
  4687 ;; This function is called by:
  4688 ;;		_initialize
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _setGestureExitThresh
  4694  049A                     _setGestureExitThresh:	
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  4698                           ;setGestureExitThresh@threshold stored from wreg
  4699  049A  00F6               	movwf	setGestureExitThresh@threshold
  4700                           
  4701                           ;APDS9960.c: 304: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 305: {;APDS9
      +                          960.c: 306:     if( !wireWriteDataByte(0xA1, threshold) ) {
  4702  049B  0876               	movf	setGestureExitThresh@threshold,w
  4703  049C  00F5               	movwf	??_setGestureExitThresh
  4704  049D  0875               	movf	??_setGestureExitThresh,w
  4705  049E  00F1               	movwf	wireWriteDataByte@val
  4706  049F  30A1               	movlw	161
  4707  04A0  3184  244C  3184   	fcall	_wireWriteDataByte
  4708  04A3  0871               	movf	?_wireWriteDataByte,w
  4709  04A4  0472               	iorwf	?_wireWriteDataByte+1,w
  4710  04A5  1D03               	btfss	3,2
  4711  04A6  2CA9               	goto	l2888
  4712                           
  4713                           ;APDS9960.c: 307:         return 0;
  4714  04A7  3000               	movlw	0
  4715  04A8  0008               	return
  4716  04A9                     l2888:	
  4717                           
  4718                           ;APDS9960.c: 310:     return 1;
  4719  04A9  3001               	movlw	1
  4720  04AA  0008               	return
  4721  04AB                     __end_of_setGestureExitThresh:	
  4722                           
  4723                           	psect	text12
  4724  04AB                     __ptext12:	
  4725 ;; *************** function _setGestureEnterThresh *****************
  4726 ;; Defined at:
  4727 ;;		line 294 in file "APDS9960.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  threshold       1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  threshold       1    6[COMMON] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      _Bool 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, pclath, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    6
  4748 ;; This function calls:
  4749 ;;		_wireWriteDataByte
  4750 ;; This function is called by:
  4751 ;;		_initialize
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _setGestureEnterThresh
  4757  04AB                     _setGestureEnterThresh:	
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  4761                           ;setGestureEnterThresh@threshold stored from wreg
  4762  04AB  00F6               	movwf	setGestureEnterThresh@threshold
  4763                           
  4764                           ;APDS9960.c: 294: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 295: {;APDS
      +                          9960.c: 296:     if( !wireWriteDataByte(0xA0, threshold) ) {
  4765  04AC  0876               	movf	setGestureEnterThresh@threshold,w
  4766  04AD  00F5               	movwf	??_setGestureEnterThresh
  4767  04AE  0875               	movf	??_setGestureEnterThresh,w
  4768  04AF  00F1               	movwf	wireWriteDataByte@val
  4769  04B0  30A0               	movlw	160
  4770  04B1  3184  244C  3184   	fcall	_wireWriteDataByte
  4771  04B4  0871               	movf	?_wireWriteDataByte,w
  4772  04B5  0472               	iorwf	?_wireWriteDataByte+1,w
  4773  04B6  1D03               	btfss	3,2
  4774  04B7  2CBA               	goto	l2878
  4775                           
  4776                           ;APDS9960.c: 297:         return 0;
  4777  04B8  3000               	movlw	0
  4778  04B9  0008               	return
  4779  04BA                     l2878:	
  4780                           
  4781                           ;APDS9960.c: 300:     return 1;
  4782  04BA  3001               	movlw	1
  4783  04BB  0008               	return
  4784  04BC                     __end_of_setGestureEnterThresh:	
  4785                           
  4786                           	psect	text13
  4787  0430                     __ptext13:	
  4788 ;; *************** function _setAmbientLightGain *****************
  4789 ;; Defined at:
  4790 ;;		line 207 in file "APDS9960.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  drive           1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  drive           1   12[COMMON] unsigned char 
  4795 ;;  val             1   13[COMMON] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      _Bool 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, pclath, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;Total ram usage:        3 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    6
  4812 ;; This function calls:
  4813 ;;		_wireReadDataByte
  4814 ;;		_wireWriteDataByte
  4815 ;; This function is called by:
  4816 ;;		_initialize
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _setAmbientLightGain
  4822  0430                     _setAmbientLightGain:	
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  4826                           ;setAmbientLightGain@drive stored from wreg
  4827  0430  00FC               	movwf	setAmbientLightGain@drive
  4828                           
  4829                           ;APDS9960.c: 207: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 208: {;APDS9960.c
      +                          : 209:     uint8_t val;;APDS9960.c: 212:     val= wireReadDataByte(0x8F);
  4830  0431  308F               	movlw	143
  4831  0432  3184  2410  3184   	fcall	_wireReadDataByte
  4832  0435  00FB               	movwf	??_setAmbientLightGain
  4833  0436  087B               	movf	??_setAmbientLightGain,w
  4834  0437  00FD               	movwf	setAmbientLightGain@val
  4835                           
  4836                           ;APDS9960.c: 215:     drive &= 0b00000011;
  4837  0438  3003               	movlw	3
  4838  0439  00FB               	movwf	??_setAmbientLightGain
  4839  043A  087B               	movf	??_setAmbientLightGain,w
  4840  043B  05FC               	andwf	setAmbientLightGain@drive,f
  4841                           
  4842                           ;APDS9960.c: 216:     val &= 0b11111100;
  4843  043C  30FC               	movlw	252
  4844  043D  00FB               	movwf	??_setAmbientLightGain
  4845  043E  087B               	movf	??_setAmbientLightGain,w
  4846  043F  05FD               	andwf	setAmbientLightGain@val,f
  4847                           
  4848                           ;APDS9960.c: 217:     val |= drive;
  4849  0440  087C               	movf	setAmbientLightGain@drive,w
  4850  0441  00FB               	movwf	??_setAmbientLightGain
  4851  0442  087B               	movf	??_setAmbientLightGain,w
  4852  0443  04FD               	iorwf	setAmbientLightGain@val,f
  4853                           
  4854                           ;APDS9960.c: 220:     if( !wireWriteDataByte(0x8F, val) ) {
  4855  0444  087D               	movf	setAmbientLightGain@val,w
  4856  0445  00FB               	movwf	??_setAmbientLightGain
  4857  0446  087B               	movf	??_setAmbientLightGain,w
  4858  0447  00F1               	movwf	wireWriteDataByte@val
  4859  0448  308F               	movlw	143
  4860  0449  3184  244C         	fcall	_wireWriteDataByte
  4861  044B  0008               	return
  4862  044C                     __end_of_setAmbientLightGain:	
  4863                           
  4864                           	psect	text14
  4865  0528                     __ptext14:	
  4866 ;; *************** function _InitI2C *****************
  4867 ;; Defined at:
  4868 ;;		line 15 in file "i2c.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		None
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    4
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_initialize
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _InitI2C
  4898  0528                     _InitI2C:	
  4899                           
  4900                           ;i2c.c: 22:  SSP1STATbits.SMP = 1;
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _InitI2C: []
  4904  0528  0024               	movlb	4	; select bank4
  4905  0529  1794               	bsf	20,7	;volatile
  4906  052A  0008               	return
  4907  052B                     __end_of_InitI2C:	
  4908                           
  4909                           	psect	text15
  4910  013B                     __ptext15:	
  4911 ;; *************** function _enableGestureSensor *****************
  4912 ;; Defined at:
  4913 ;;		line 403 in file "APDS9960.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  interrupts      1    wreg     _Bool 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  interrupts      1    5[BANK0 ] _Bool 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      _Bool 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:        2 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    9
  4934 ;; This function calls:
  4935 ;;		_enablePower
  4936 ;;		_resetGestureParameters
  4937 ;;		_setGestureIntEnable
  4938 ;;		_setGestureMode
  4939 ;;		_setLEDBoost
  4940 ;;		_setMode
  4941 ;;		_wireWriteDataByte
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function _enableGestureSensor
  4949  013B                     _enableGestureSensor:	
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  4953                           ;enableGestureSensor@interrupts stored from wreg
  4954  013B  0020               	movlb	0	; select bank0
  4955  013C  00BB               	movwf	enableGestureSensor@interrupts
  4956                           
  4957                           ;APDS9960.c: 403: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 404: {;APDS9
      +                          960.c: 412:     resetGestureParameters();
  4958  013D  3184  2463  3181   	fcall	_resetGestureParameters
  4959                           
  4960                           ;APDS9960.c: 413:     if( !wireWriteDataByte(0x83, 0xFF) ) {
  4961  0140  30FF               	movlw	255
  4962  0141  0020               	movlb	0	; select bank0
  4963  0142  00BA               	movwf	??_enableGestureSensor
  4964  0143  083A               	movf	??_enableGestureSensor,w
  4965  0144  00F1               	movwf	wireWriteDataByte@val
  4966  0145  3083               	movlw	131
  4967  0146  3184  244C  3181   	fcall	_wireWriteDataByte
  4968  0149  0871               	movf	?_wireWriteDataByte,w
  4969  014A  0472               	iorwf	?_wireWriteDataByte+1,w
  4970  014B  1903               	btfsc	3,2
  4971  014C  2950               	goto	l3166
  4972  014D  2952               	goto	l3170
  4973  014E                     l3184:	
  4974                           
  4975                           ;APDS9960.c: 423:         if( !setGestureIntEnable(1) ) {
  4976  014E  3001               	movlw	1
  4977  014F  296B               	goto	L1
  4978  0150                     l3166:	
  4979                           
  4980                           ;APDS9960.c: 414:         return 0;
  4981  0150  3000               	movlw	0
  4982  0151  0008               	return
  4983  0152                     l3170:	
  4984                           
  4985                           ;APDS9960.c: 416:     if( !wireWriteDataByte(0x8E, 0x89) ) {
  4986  0152  3089               	movlw	137
  4987  0153  0020               	movlb	0	; select bank0
  4988  0154  00BA               	movwf	??_enableGestureSensor
  4989  0155  083A               	movf	??_enableGestureSensor,w
  4990  0156  00F1               	movwf	wireWriteDataByte@val
  4991  0157  308E               	movlw	142
  4992  0158  3184  244C  3181   	fcall	_wireWriteDataByte
  4993  015B  0871               	movf	?_wireWriteDataByte,w
  4994  015C  0472               	iorwf	?_wireWriteDataByte+1,w
  4995  015D  1903               	btfsc	3,2
  4996  015E  2950               	goto	l3166
  4997                           
  4998                           ;APDS9960.c: 419:     if( !setLEDBoost(3) ) {
  4999  015F  3003               	movlw	3
  5000  0160  3182  2286  3181   	fcall	_setLEDBoost
  5001  0163  3A00               	xorlw	0
  5002  0164  1903               	btfsc	3,2
  5003  0165  2950               	goto	l3166
  5004                           
  5005                           ;APDS9960.c: 422:     if( interrupts ) {
  5006  0166  0020               	movlb	0	; select bank0
  5007  0167  083B               	movf	enableGestureSensor@interrupts,w
  5008  0168  1D03               	btfss	3,2
  5009  0169  294E               	goto	l3184
  5010                           
  5011                           ;APDS9960.c: 427:         if( !setGestureIntEnable(0) ) {
  5012  016A  3000               	movlw	0
  5013  016B                     L1:	
  5014  016B  3183  2333  3181   	fcall	_setGestureIntEnable
  5015  016E  3A00               	xorlw	0
  5016  016F  1903               	btfsc	3,2
  5017  0170  2950               	goto	l3166
  5018                           
  5019                           ;APDS9960.c: 431:     if( !setGestureMode(1) ) {
  5020  0171  3001               	movlw	1
  5021  0172  3183  23EC  3181   	fcall	_setGestureMode
  5022  0175  3A00               	xorlw	0
  5023  0176  1903               	btfsc	3,2
  5024  0177  2950               	goto	l3166
  5025                           
  5026                           ;APDS9960.c: 434:     if( !enablePower() ){
  5027  0178  3184  24CB  3181   	fcall	_enablePower
  5028  017B  3A00               	xorlw	0
  5029  017C  1903               	btfsc	3,2
  5030  017D  2950               	goto	l3166
  5031                           
  5032                           ;APDS9960.c: 437:     if( !setMode(3, 1) ) {
  5033  017E  01FD               	clrf	setMode@enable
  5034  017F  0AFD               	incf	setMode@enable,f
  5035  0180  3003               	movlw	3
  5036  0181  3181  219B  3181   	fcall	_setMode
  5037  0184  3A00               	xorlw	0
  5038  0185  1903               	btfsc	3,2
  5039  0186  2950               	goto	l3166
  5040                           
  5041                           ;APDS9960.c: 440:     if( !setMode(2, 1) ) {
  5042  0187  01FD               	clrf	setMode@enable
  5043  0188  0AFD               	incf	setMode@enable,f
  5044  0189  3002               	movlw	2
  5045  018A  3181  219B  3181   	fcall	_setMode
  5046  018D  3A00               	xorlw	0
  5047  018E  1903               	btfsc	3,2
  5048  018F  2950               	goto	l3166
  5049                           
  5050                           ;APDS9960.c: 443:     if( !setMode(6, 1) ) {
  5051  0190  01FD               	clrf	setMode@enable
  5052  0191  0AFD               	incf	setMode@enable,f
  5053  0192  3006               	movlw	6
  5054  0193  3181  219B  3181   	fcall	_setMode
  5055  0196  3A00               	xorlw	0
  5056  0197  1903               	btfsc	3,2
  5057  0198  2950               	goto	l3166
  5058                           
  5059                           ;APDS9960.c: 447:     return 1;
  5060  0199  3001               	movlw	1
  5061  019A  0008               	return
  5062  019B                     __end_of_enableGestureSensor:	
  5063                           
  5064                           	psect	text16
  5065  0286                     __ptext16:	
  5066 ;; *************** function _setLEDBoost *****************
  5067 ;; Defined at:
  5068 ;;		line 478 in file "APDS9960.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  boost           1    wreg     unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  boost           1    1[BANK0 ] unsigned char 
  5073 ;;  val             1    0[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      _Bool 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, pclath, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;Total ram usage:        4 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    6
  5090 ;; This function calls:
  5091 ;;		_wireReadDataByte
  5092 ;;		_wireWriteDataByte
  5093 ;; This function is called by:
  5094 ;;		_enableGestureSensor
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           
  5099                           ;psect for function _setLEDBoost
  5100  0286                     _setLEDBoost:	
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  5104                           ;setLEDBoost@boost stored from wreg
  5105  0286  0020               	movlb	0	; select bank0
  5106  0287  00B7               	movwf	setLEDBoost@boost
  5107                           
  5108                           ;APDS9960.c: 478: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 479: {;APDS9960.c: 480:  
      +                             uint8_t val;;APDS9960.c: 483:     val=wireReadDataByte(0x90);
  5109  0288  3090               	movlw	144
  5110  0289  3184  2410  3182   	fcall	_wireReadDataByte
  5111  028C  00FB               	movwf	??_setLEDBoost
  5112  028D  087B               	movf	??_setLEDBoost,w
  5113  028E  0020               	movlb	0	; select bank0
  5114  028F  00B6               	movwf	setLEDBoost@val
  5115                           
  5116                           ;APDS9960.c: 486:     boost &= 0b00000011;
  5117  0290  3003               	movlw	3
  5118  0291  00FB               	movwf	??_setLEDBoost
  5119  0292  087B               	movf	??_setLEDBoost,w
  5120  0293  05B7               	andwf	setLEDBoost@boost,f
  5121                           
  5122                           ;APDS9960.c: 487:     boost = boost << 4;
  5123  0294  0837               	movf	setLEDBoost@boost,w
  5124  0295  00FB               	movwf	??_setLEDBoost
  5125  0296  3003               	movlw	3
  5126  0297                     u1965:	
  5127  0297  35FB               	lslf	??_setLEDBoost,f
  5128  0298  3EFF               	addlw	-1
  5129  0299  1D03               	skipz
  5130  029A  2A97               	goto	u1965
  5131  029B  357B               	lslf	??_setLEDBoost,w
  5132  029C  00FC               	movwf	??_setLEDBoost+1
  5133  029D  087C               	movf	??_setLEDBoost+1,w
  5134  029E  00B7               	movwf	setLEDBoost@boost
  5135                           
  5136                           ;APDS9960.c: 488:     val &= 0b11001111;
  5137  029F  30CF               	movlw	207
  5138  02A0  00FB               	movwf	??_setLEDBoost
  5139  02A1  087B               	movf	??_setLEDBoost,w
  5140  02A2  05B6               	andwf	setLEDBoost@val,f
  5141                           
  5142                           ;APDS9960.c: 489:     val |= boost;
  5143  02A3  0837               	movf	setLEDBoost@boost,w
  5144  02A4  00FB               	movwf	??_setLEDBoost
  5145  02A5  087B               	movf	??_setLEDBoost,w
  5146  02A6  04B6               	iorwf	setLEDBoost@val,f
  5147                           
  5148                           ;APDS9960.c: 492:     if( !wireWriteDataByte(0x90, val) ) {
  5149  02A7  0836               	movf	setLEDBoost@val,w
  5150  02A8  00FB               	movwf	??_setLEDBoost
  5151  02A9  087B               	movf	??_setLEDBoost,w
  5152  02AA  00F1               	movwf	wireWriteDataByte@val
  5153  02AB  3090               	movlw	144
  5154  02AC  3184  244C  3182   	fcall	_wireWriteDataByte
  5155  02AF  0871               	movf	?_wireWriteDataByte,w
  5156  02B0  0472               	iorwf	?_wireWriteDataByte+1,w
  5157  02B1  1D03               	btfss	3,2
  5158  02B2  2AB5               	goto	l2980
  5159                           
  5160                           ;APDS9960.c: 493:         return 0;
  5161  02B3  3000               	movlw	0
  5162  02B4  0008               	return
  5163  02B5                     l2980:	
  5164                           
  5165                           ;APDS9960.c: 496:     return 1;
  5166  02B5  3001               	movlw	1
  5167  02B6  0008               	return
  5168  02B7                     __end_of_setLEDBoost:	
  5169                           
  5170                           	psect	text17
  5171  03EC                     __ptext17:	
  5172 ;; *************** function _setGestureMode *****************
  5173 ;; Defined at:
  5174 ;;		line 500 in file "APDS9960.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  mode            1    wreg     unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  mode            1   12[COMMON] unsigned char 
  5179 ;;  val             1   13[COMMON] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      _Bool 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;Total ram usage:        3 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    6
  5196 ;; This function calls:
  5197 ;;		_wireReadDataByte
  5198 ;;		_wireWriteDataByte
  5199 ;; This function is called by:
  5200 ;;		_enableGestureSensor
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _setGestureMode
  5206  03EC                     _setGestureMode:	
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  5210                           ;setGestureMode@mode stored from wreg
  5211  03EC  00FC               	movwf	setGestureMode@mode
  5212                           
  5213                           ;APDS9960.c: 500: _Bool setGestureMode(uint8_t mode);APDS9960.c: 501: {;APDS9960.c: 502:
      +                               uint8_t val;;APDS9960.c: 505:     val = wireReadDataByte(0xAB);
  5214  03ED  30AB               	movlw	171
  5215  03EE  3184  2410  3183   	fcall	_wireReadDataByte
  5216  03F1  00FB               	movwf	??_setGestureMode
  5217  03F2  087B               	movf	??_setGestureMode,w
  5218  03F3  00FD               	movwf	setGestureMode@val
  5219                           
  5220                           ;APDS9960.c: 508:     mode &= 0b00000001;
  5221  03F4  3001               	movlw	1
  5222  03F5  00FB               	movwf	??_setGestureMode
  5223  03F6  087B               	movf	??_setGestureMode,w
  5224  03F7  05FC               	andwf	setGestureMode@mode,f
  5225                           
  5226                           ;APDS9960.c: 509:     val &= 0b11111110;
  5227  03F8  30FE               	movlw	254
  5228  03F9  00FB               	movwf	??_setGestureMode
  5229  03FA  087B               	movf	??_setGestureMode,w
  5230  03FB  05FD               	andwf	setGestureMode@val,f
  5231                           
  5232                           ;APDS9960.c: 510:     val |= mode;
  5233  03FC  087C               	movf	setGestureMode@mode,w
  5234  03FD  00FB               	movwf	??_setGestureMode
  5235  03FE  087B               	movf	??_setGestureMode,w
  5236  03FF  04FD               	iorwf	setGestureMode@val,f
  5237                           
  5238                           ;APDS9960.c: 513:     if( !wireWriteDataByte(0xAB, val) ) {
  5239  0400  087D               	movf	setGestureMode@val,w
  5240  0401  00FB               	movwf	??_setGestureMode
  5241  0402  087B               	movf	??_setGestureMode,w
  5242  0403  00F1               	movwf	wireWriteDataByte@val
  5243  0404  30AB               	movlw	171
  5244  0405  3184  244C  3183   	fcall	_wireWriteDataByte
  5245  0408  0871               	movf	?_wireWriteDataByte,w
  5246  0409  0472               	iorwf	?_wireWriteDataByte+1,w
  5247  040A  1D03               	btfss	3,2
  5248  040B  2C0E               	goto	l2998
  5249                           
  5250                           ;APDS9960.c: 514:         return 0;
  5251  040C  3000               	movlw	0
  5252  040D  0008               	return
  5253  040E                     l2998:	
  5254                           
  5255                           ;APDS9960.c: 517:     return 1;
  5256  040E  3001               	movlw	1
  5257  040F  0008               	return
  5258  0410                     __end_of_setGestureMode:	
  5259                           
  5260                           	psect	text18
  5261  0333                     __ptext18:	
  5262 ;; *************** function _setGestureIntEnable *****************
  5263 ;; Defined at:
  5264 ;;		line 381 in file "APDS9960.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  enable          1    wreg     unsigned char 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  enable          1   13[COMMON] unsigned char 
  5269 ;;  val             1   12[COMMON] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      _Bool 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;Total ram usage:        3 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    6
  5286 ;; This function calls:
  5287 ;;		_wireReadDataByte
  5288 ;;		_wireWriteDataByte
  5289 ;; This function is called by:
  5290 ;;		_initialize
  5291 ;;		_enableGestureSensor
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _setGestureIntEnable
  5297  0333                     _setGestureIntEnable:	
  5298                           
  5299                           ;incstack = 0
  5300                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  5301                           ;setGestureIntEnable@enable stored from wreg
  5302  0333  00FD               	movwf	setGestureIntEnable@enable
  5303                           
  5304                           ;APDS9960.c: 381: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 382: {;APDS9960.
      +                          c: 383:     uint8_t val;;APDS9960.c: 386:     val = wireReadDataByte(0xAB);
  5305  0334  30AB               	movlw	171
  5306  0335  3184  2410  3183   	fcall	_wireReadDataByte
  5307  0338  00FB               	movwf	??_setGestureIntEnable
  5308  0339  087B               	movf	??_setGestureIntEnable,w
  5309  033A  00FC               	movwf	setGestureIntEnable@val
  5310                           
  5311                           ;APDS9960.c: 389:     enable &= 0b00000001;
  5312  033B  3001               	movlw	1
  5313  033C  00FB               	movwf	??_setGestureIntEnable
  5314  033D  087B               	movf	??_setGestureIntEnable,w
  5315  033E  05FD               	andwf	setGestureIntEnable@enable,f
  5316                           
  5317                           ;APDS9960.c: 390:     enable = enable << 1;
  5318  033F  357D               	lslf	setGestureIntEnable@enable,w
  5319  0340  00FB               	movwf	??_setGestureIntEnable
  5320  0341  087B               	movf	??_setGestureIntEnable,w
  5321  0342  00FD               	movwf	setGestureIntEnable@enable
  5322                           
  5323                           ;APDS9960.c: 391:     val &= 0b11111101;
  5324  0343  30FD               	movlw	253
  5325  0344  00FB               	movwf	??_setGestureIntEnable
  5326  0345  087B               	movf	??_setGestureIntEnable,w
  5327  0346  05FC               	andwf	setGestureIntEnable@val,f
  5328                           
  5329                           ;APDS9960.c: 392:     val |= enable;
  5330  0347  087D               	movf	setGestureIntEnable@enable,w
  5331  0348  00FB               	movwf	??_setGestureIntEnable
  5332  0349  087B               	movf	??_setGestureIntEnable,w
  5333  034A  04FC               	iorwf	setGestureIntEnable@val,f
  5334                           
  5335                           ;APDS9960.c: 395:     if( !wireWriteDataByte(0xAB, val) ) {
  5336  034B  087C               	movf	setGestureIntEnable@val,w
  5337  034C  00FB               	movwf	??_setGestureIntEnable
  5338  034D  087B               	movf	??_setGestureIntEnable,w
  5339  034E  00F1               	movwf	wireWriteDataByte@val
  5340  034F  30AB               	movlw	171
  5341  0350  3184  244C  3183   	fcall	_wireWriteDataByte
  5342  0353  0871               	movf	?_wireWriteDataByte,w
  5343  0354  0472               	iorwf	?_wireWriteDataByte+1,w
  5344  0355  1D03               	btfss	3,2
  5345  0356  2B59               	goto	l2960
  5346                           
  5347                           ;APDS9960.c: 396:         return 0;
  5348  0357  3000               	movlw	0
  5349  0358  0008               	return
  5350  0359                     l2960:	
  5351                           
  5352                           ;APDS9960.c: 399:     return 1;
  5353  0359  3001               	movlw	1
  5354  035A  0008               	return
  5355  035B                     __end_of_setGestureIntEnable:	
  5356                           
  5357                           	psect	text19
  5358  0463                     __ptext19:	
  5359 ;; *************** function _resetGestureParameters *****************
  5360 ;; Defined at:
  5361 ;;		line 451 in file "APDS9960.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		status,2
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    4
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_enableGestureSensor
  5386 ;;		_readGesture
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _resetGestureParameters
  5392  0463                     _resetGestureParameters:	
  5393                           
  5394                           ;APDS9960.c: 454:     gesture_data_.index = 0;
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _resetGestureParameters: [status,2]
  5398  0463  0021               	movlb	1	; select bank1
  5399  0464  01E0               	clrf	(_gesture_data_^(0+128)+64)
  5400                           
  5401                           ;APDS9960.c: 455:     gesture_data_.total_gestures = 0;
  5402  0465  01E1               	clrf	(_gesture_data_^(0+128)+65)
  5403                           
  5404                           ;APDS9960.c: 457:     gesture_ud_delta_ = 0;
  5405  0466  0020               	movlb	0	; select bank0
  5406  0467  01AE               	clrf	_gesture_ud_delta_
  5407  0468  01AF               	clrf	_gesture_ud_delta_+1
  5408                           
  5409                           ;APDS9960.c: 458:     gesture_lr_delta_ = 0;
  5410  0469  01AC               	clrf	_gesture_lr_delta_
  5411  046A  01AD               	clrf	_gesture_lr_delta_+1
  5412                           
  5413                           ;APDS9960.c: 460:     gesture_ud_count_ = 0;
  5414  046B  01AA               	clrf	_gesture_ud_count_
  5415  046C  01AB               	clrf	_gesture_ud_count_+1
  5416                           
  5417                           ;APDS9960.c: 461:     gesture_lr_count_ = 0;
  5418  046D  01A8               	clrf	_gesture_lr_count_
  5419  046E  01A9               	clrf	_gesture_lr_count_+1
  5420                           
  5421                           ;APDS9960.c: 463:     gesture_near_count_ = 0;
  5422  046F  01A6               	clrf	_gesture_near_count_
  5423  0470  01A7               	clrf	_gesture_near_count_+1
  5424                           
  5425                           ;APDS9960.c: 464:     gesture_far_count_ = 0;
  5426  0471  01A4               	clrf	_gesture_far_count_
  5427  0472  01A5               	clrf	_gesture_far_count_+1
  5428                           
  5429                           ;APDS9960.c: 466:     gesture_state_ = 0;
  5430  0473  01A2               	clrf	_gesture_state_
  5431  0474  01A3               	clrf	_gesture_state_+1
  5432                           
  5433                           ;APDS9960.c: 467:     gesture_motion_ = DIR_NONE;
  5434  0475  01A0               	clrf	_gesture_motion_
  5435  0476  01A1               	clrf	_gesture_motion_+1
  5436  0477  0008               	return
  5437  0478                     __end_of_resetGestureParameters:	
  5438                           
  5439                           	psect	text20
  5440  04CB                     __ptext20:	
  5441 ;; *************** function _enablePower *****************
  5442 ;; Defined at:
  5443 ;;		line 521 in file "APDS9960.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      _Bool 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0, pclath, cstack
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    8
  5464 ;; This function calls:
  5465 ;;		_setMode
  5466 ;; This function is called by:
  5467 ;;		_enableGestureSensor
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _enablePower
  5473  04CB                     _enablePower:	
  5474                           
  5475                           ;APDS9960.c: 523:     if( !setMode(0, 1) ) {
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  5479  04CB  01FD               	clrf	setMode@enable
  5480  04CC  0AFD               	incf	setMode@enable,f
  5481  04CD  3000               	movlw	0
  5482  04CE  3181  219B  3184   	fcall	_setMode
  5483  04D1  3A00               	xorlw	0
  5484  04D2  1D03               	skipz
  5485  04D3  2CD6               	goto	l3008
  5486                           
  5487                           ;APDS9960.c: 524:         return 0;
  5488  04D4  3000               	movlw	0
  5489  04D5  0008               	return
  5490  04D6                     l3008:	
  5491                           
  5492                           ;APDS9960.c: 527:     return 1;
  5493  04D6  3001               	movlw	1
  5494  04D7  0008               	return
  5495  04D8                     __end_of_enablePower:	
  5496                           
  5497                           	psect	text21
  5498  019B                     __ptext21:	
  5499 ;; *************** function _setMode *****************
  5500 ;; Defined at:
  5501 ;;		line 118 in file "APDS9960.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  mode            1    wreg     unsigned char 
  5504 ;;  enable          1   13[COMMON] unsigned char 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  mode            1    3[BANK0 ] unsigned char 
  5507 ;;  reg_val         1    2[BANK0 ] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      _Bool 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0, pclath, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5517 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;Total ram usage:        5 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    7
  5524 ;; This function calls:
  5525 ;;		_getMode
  5526 ;;		_wireWriteDataByte
  5527 ;; This function is called by:
  5528 ;;		_initialize
  5529 ;;		_enableGestureSensor
  5530 ;;		_enablePower
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           
  5535                           ;psect for function _setMode
  5536  019B                     _setMode:	
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  5540                           ;setMode@mode stored from wreg
  5541  019B  0020               	movlb	0	; select bank0
  5542  019C  00B9               	movwf	setMode@mode
  5543                           
  5544                           ;APDS9960.c: 118: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 119: {;APDS996
      +                          0.c: 120:     uint8_t reg_val;;APDS9960.c: 123:     reg_val = getMode();
  5545  019D  3184  24FA  3181   	fcall	_getMode
  5546  01A0  0020               	movlb	0	; select bank0
  5547  01A1  00B6               	movwf	??_setMode
  5548  01A2  0836               	movf	??_setMode,w
  5549  01A3  00B8               	movwf	setMode@reg_val
  5550                           
  5551                           ;APDS9960.c: 124:     if( reg_val == 0xFF ) {
  5552  01A4  0A38               	incf	setMode@reg_val,w
  5553  01A5  1D03               	btfss	3,2
  5554  01A6  29A9               	goto	l2688
  5555  01A7                     l2684:	
  5556                           
  5557                           ;APDS9960.c: 125:         return 0;
  5558  01A7  3000               	movlw	0
  5559  01A8  0008               	return
  5560  01A9                     l2688:	
  5561                           
  5562                           ;APDS9960.c: 129:     enable = enable & 0x01;
  5563  01A9  087D               	movf	setMode@enable,w
  5564  01AA  3901               	andlw	1
  5565  01AB  00B6               	movwf	??_setMode
  5566  01AC  0836               	movf	??_setMode,w
  5567  01AD  00FD               	movwf	setMode@enable
  5568                           
  5569                           ;APDS9960.c: 130:     if( mode >= 0 && mode <= 6 ) {
  5570  01AE  3007               	movlw	7
  5571  01AF  0239               	subwf	setMode@mode,w
  5572  01B0  1803               	skipnc
  5573  01B1  29CE               	goto	l2698
  5574                           
  5575                           ;APDS9960.c: 131:         if (enable) {
  5576  01B2  087D               	movf	setMode@enable,w
  5577  01B3  1903               	btfsc	3,2
  5578  01B4  29C1               	goto	l2696
  5579                           
  5580                           ;APDS9960.c: 132:             reg_val |= (1 << mode);
  5581  01B5  3001               	movlw	1
  5582  01B6  00B6               	movwf	??_setMode
  5583  01B7  0A39               	incf	setMode@mode,w
  5584  01B8  29BA               	goto	u1744
  5585  01B9                     u1745:	
  5586  01B9  35B6               	lslf	??_setMode,f
  5587  01BA                     u1744:	
  5588  01BA  0B89               	decfsz	9,f
  5589  01BB  29B9               	goto	u1745
  5590  01BC  0836               	movf	??_setMode,w
  5591  01BD  00B7               	movwf	??_setMode+1
  5592  01BE  0837               	movf	??_setMode+1,w
  5593  01BF  04B8               	iorwf	setMode@reg_val,f
  5594                           
  5595                           ;APDS9960.c: 133:         } else {
  5596  01C0  29DB               	goto	l2706
  5597  01C1                     l2696:	
  5598                           
  5599                           ;APDS9960.c: 134:             reg_val &= ~(1 << mode);
  5600  01C1  3001               	movlw	1
  5601  01C2  00B6               	movwf	??_setMode
  5602  01C3  0A39               	incf	setMode@mode,w
  5603  01C4  29C6               	goto	u1754
  5604  01C5                     u1755:	
  5605  01C5  35B6               	lslf	??_setMode,f
  5606  01C6                     u1754:	
  5607  01C6  0B89               	decfsz	9,f
  5608  01C7  29C5               	goto	u1755
  5609  01C8  0836               	movf	??_setMode,w
  5610  01C9  3AFF               	xorlw	255
  5611  01CA  00B7               	movwf	??_setMode+1
  5612  01CB  0837               	movf	??_setMode+1,w
  5613  01CC  05B8               	andwf	setMode@reg_val,f
  5614  01CD  29DB               	goto	l2706
  5615  01CE                     l2698:	
  5616  01CE  3007               	movlw	7
  5617  01CF  0639               	xorwf	setMode@mode,w
  5618  01D0  1D03               	btfss	3,2
  5619  01D1  29DB               	goto	l2706
  5620                           
  5621                           ;APDS9960.c: 137:         if (enable) {
  5622  01D2  087D               	movf	setMode@enable,w
  5623  01D3  1903               	btfsc	3,2
  5624  01D4  29DA               	goto	l2704
  5625                           
  5626                           ;APDS9960.c: 138:             reg_val = 0x7F;
  5627  01D5  307F               	movlw	127
  5628  01D6  00B6               	movwf	??_setMode
  5629  01D7  0836               	movf	??_setMode,w
  5630  01D8  00B8               	movwf	setMode@reg_val
  5631                           
  5632                           ;APDS9960.c: 139:         } else {
  5633  01D9  29DB               	goto	l2706
  5634  01DA                     l2704:	
  5635                           
  5636                           ;APDS9960.c: 140:             reg_val = 0x00;
  5637  01DA  01B8               	clrf	setMode@reg_val
  5638  01DB                     l2706:	
  5639                           
  5640                           ;APDS9960.c: 145:     if( !wireWriteDataByte(0x80, reg_val) ) {
  5641  01DB  0838               	movf	setMode@reg_val,w
  5642  01DC  00B6               	movwf	??_setMode
  5643  01DD  0836               	movf	??_setMode,w
  5644  01DE  00F1               	movwf	wireWriteDataByte@val
  5645  01DF  3080               	movlw	128
  5646  01E0  3184  244C  3181   	fcall	_wireWriteDataByte
  5647  01E3  0871               	movf	?_wireWriteDataByte,w
  5648  01E4  0472               	iorwf	?_wireWriteDataByte+1,w
  5649  01E5  1903               	btfsc	3,2
  5650  01E6  29A7               	goto	l2684
  5651                           
  5652                           ;APDS9960.c: 149:     return 1;
  5653  01E7  3001               	movlw	1
  5654  01E8  0008               	return
  5655  01E9                     __end_of_setMode:	
  5656                           
  5657                           	psect	text22
  5658  044C                     __ptext22:	
  5659 ;; *************** function _wireWriteDataByte *****************
  5660 ;; Defined at:
  5661 ;;		line 866 in file "APDS9960.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  reg             1    wreg     unsigned char 
  5664 ;;  val             1    1[COMMON] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  reg             1    4[COMMON] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2    1[COMMON] int 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        4 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    5
  5683 ;; This function calls:
  5684 ;;		_I2C_Start
  5685 ;;		_I2C_Stop
  5686 ;;		_I2C_Write_Byte
  5687 ;; This function is called by:
  5688 ;;		_initialize
  5689 ;;		_setMode
  5690 ;;		_setLEDDrive
  5691 ;;		_setProximityGain
  5692 ;;		_setAmbientLightGain
  5693 ;;		_setProxIntLowThresh
  5694 ;;		_setProxIntHighThresh
  5695 ;;		_setLightIntLowThreshold
  5696 ;;		_setLightIntHighThreshold
  5697 ;;		_setGestureEnterThresh
  5698 ;;		_setGestureExitThresh
  5699 ;;		_setGestureGain
  5700 ;;		_setGestureLEDDrive
  5701 ;;		_setGestureWaitTime
  5702 ;;		_setGestureIntEnable
  5703 ;;		_enableGestureSensor
  5704 ;;		_setLEDBoost
  5705 ;;		_setGestureMode
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _wireWriteDataByte
  5711  044C                     _wireWriteDataByte:	
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  5715                           ;wireWriteDataByte@reg stored from wreg
  5716  044C  00F4               	movwf	wireWriteDataByte@reg
  5717                           
  5718                           ;APDS9960.c: 866: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 867: {;APDS9960.c: 869:     I2C_Start();
  5719  044D  3185  252E  3184   	fcall	_I2C_Start
  5720                           
  5721                           ;APDS9960.c: 870:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5722  0450  3072               	movlw	114
  5723  0451  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5724                           
  5725                           ;APDS9960.c: 871:     I2C_Write_Byte(reg);
  5726  0454  0874               	movf	wireWriteDataByte@reg,w
  5727  0455  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5728                           
  5729                           ;APDS9960.c: 872:     I2C_Write_Byte(val);
  5730  0458  0871               	movf	wireWriteDataByte@val,w
  5731  0459  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5732                           
  5733                           ;APDS9960.c: 873:     I2C_Stop();
  5734  045C  3185  252B         	fcall	_I2C_Stop
  5735                           
  5736                           ;APDS9960.c: 875:     return 1;
  5737  045E  3001               	movlw	1
  5738  045F  00F1               	movwf	?_wireWriteDataByte
  5739  0460  3000               	movlw	0
  5740  0461  00F2               	movwf	?_wireWriteDataByte+1
  5741  0462  0008               	return
  5742  0463                     __end_of_wireWriteDataByte:	
  5743                           
  5744                           	psect	text23
  5745  04FA                     __ptext23:	
  5746 ;; *************** function _getMode *****************
  5747 ;; Defined at:
  5748 ;;		line 153 in file "APDS9960.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  enable_value    1   12[COMMON] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      unsigned char 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, pclath, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;Total ram usage:        2 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    6
  5769 ;; This function calls:
  5770 ;;		_wireReadDataByte
  5771 ;; This function is called by:
  5772 ;;		_setMode
  5773 ;;		_readGesture
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _getMode
  5779  04FA                     _getMode:	
  5780                           
  5781                           ;APDS9960.c: 155:     uint8_t enable_value;;APDS9960.c: 158:     enable_value = wireRead
      +                          DataByte(0x80);
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  5785  04FA  3080               	movlw	128
  5786  04FB  3184  2410         	fcall	_wireReadDataByte
  5787  04FD  00FB               	movwf	??_getMode
  5788  04FE  087B               	movf	??_getMode,w
  5789  04FF  00FC               	movwf	getMode@enable_value
  5790                           
  5791                           ;APDS9960.c: 160:     return enable_value;
  5792  0500  087C               	movf	getMode@enable_value,w
  5793  0501  0008               	return
  5794  0502                     __end_of_getMode:	
  5795                           
  5796                           	psect	text24
  5797  0410                     __ptext24:	
  5798 ;; *************** function _wireReadDataByte *****************
  5799 ;; Defined at:
  5800 ;;		line 879 in file "APDS9960.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  reg             1    wreg     unsigned char 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  reg             1    9[COMMON] unsigned char 
  5805 ;;  val             1   10[COMMON] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      unsigned char 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;Total ram usage:        3 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    5
  5822 ;; This function calls:
  5823 ;;		_I2C_ReStart
  5824 ;;		_I2C_Read_Byte
  5825 ;;		_I2C_Send_NACK
  5826 ;;		_I2C_Start
  5827 ;;		_I2C_Stop
  5828 ;;		_I2C_Write_Byte
  5829 ;; This function is called by:
  5830 ;;		_initialize
  5831 ;;		_getMode
  5832 ;;		_setLEDDrive
  5833 ;;		_setProximityGain
  5834 ;;		_setAmbientLightGain
  5835 ;;		_setGestureGain
  5836 ;;		_setGestureLEDDrive
  5837 ;;		_setGestureWaitTime
  5838 ;;		_setGestureIntEnable
  5839 ;;		_setLEDBoost
  5840 ;;		_setGestureMode
  5841 ;;		_isGestureAvailable
  5842 ;;		_readGesture
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function _wireReadDataByte
  5848  0410                     _wireReadDataByte:	
  5849                           
  5850                           ;incstack = 0
  5851                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  5852                           ;wireReadDataByte@reg stored from wreg
  5853  0410  00F9               	movwf	wireReadDataByte@reg
  5854                           
  5855                           ;APDS9960.c: 879:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 880: {;
      +                          APDS9960.c: 882:     unsigned char val;;APDS9960.c: 884:     I2C_Start();
  5856  0411  3185  252E  3184   	fcall	_I2C_Start
  5857                           
  5858                           ;APDS9960.c: 885:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5859  0414  3072               	movlw	114
  5860  0415  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5861                           
  5862                           ;APDS9960.c: 886:     I2C_Write_Byte(reg);
  5863  0418  0879               	movf	wireReadDataByte@reg,w
  5864  0419  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5865                           
  5866                           ;APDS9960.c: 887:     I2C_ReStart();
  5867  041C  3185  2531  3184   	fcall	_I2C_ReStart
  5868                           
  5869                           ;APDS9960.c: 888:     I2C_Write_Byte((0x39 << 1) | 0x01);
  5870  041F  3073               	movlw	115
  5871  0420  3184  24BC  3184   	fcall	_I2C_Write_Byte
  5872                           
  5873                           ;APDS9960.c: 889:     val=I2C_Read_Byte();
  5874  0423  3182  22B7  3184   	fcall	_I2C_Read_Byte
  5875  0426  00F8               	movwf	??_wireReadDataByte
  5876  0427  0878               	movf	??_wireReadDataByte,w
  5877  0428  00FA               	movwf	wireReadDataByte@val
  5878                           
  5879                           ;APDS9960.c: 890:     I2C_Send_NACK();
  5880  0429  3185  251C  3184   	fcall	_I2C_Send_NACK
  5881                           
  5882                           ;APDS9960.c: 891:     I2C_Stop();
  5883  042C  3185  252B         	fcall	_I2C_Stop
  5884                           
  5885                           ;APDS9960.c: 893:     return (val);
  5886  042E  087A               	movf	wireReadDataByte@val,w
  5887  042F  0008               	return
  5888  0430                     __end_of_wireReadDataByte:	
  5889                           
  5890                           	psect	text25
  5891  04BC                     __ptext25:	
  5892 ;; *************** function _I2C_Write_Byte *****************
  5893 ;; Defined at:
  5894 ;;		line 71 in file "i2c.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  Byte            1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  Byte            1    0[COMMON] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;Total ram usage:        1 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    4
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_wireWriteDataByte
  5919 ;;		_wireReadDataByte
  5920 ;;		_wireReadDataBlock
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _I2C_Write_Byte
  5926  04BC                     _I2C_Write_Byte:	
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in _I2C_Write_Byte: [wreg+status,2]
  5930                           ;I2C_Write_Byte@Byte stored from wreg
  5931  04BC  00F0               	movwf	I2C_Write_Byte@Byte
  5932                           
  5933                           ;i2c.c: 71: void I2C_Write_Byte(unsigned char Byte);i2c.c: 72: {;i2c.c: 74:  b_i2c_error
      +                          _flag = 0;
  5934  04BD  0020               	movlb	0	; select bank0
  5935  04BE  01B4               	clrf	_b_i2c_error_flag
  5936                           
  5937                           ;i2c.c: 75:  SSP1BUF = Byte;
  5938  04BF  0870               	movf	I2C_Write_Byte@Byte,w
  5939  04C0  0024               	movlb	4	; select bank4
  5940  04C1  0091               	movwf	17	;volatile
  5941                           
  5942                           ;i2c.c: 79:  if (SSP1CON2bits.ACKSTAT == 1) {
  5943  04C2  1F16               	btfss	22,6	;volatile
  5944  04C3  0008               	return
  5945                           
  5946                           ;i2c.c: 81:   SSP1CON2bits.PEN = 1;
  5947  04C4  1516               	bsf	22,2	;volatile
  5948  04C5                     l792:	
  5949                           ;i2c.c: 82:   while (SSP1CON2bits.PEN == 1);
  5950                           
  5951  04C5  1916               	btfsc	22,2	;volatile
  5952  04C6  2CC5               	goto	l792
  5953                           
  5954                           ;i2c.c: 85:   b_i2c_error_flag = 1;
  5955  04C7  0020               	movlb	0	; select bank0
  5956  04C8  01B4               	clrf	_b_i2c_error_flag
  5957  04C9  0AB4               	incf	_b_i2c_error_flag,f
  5958                           
  5959                           ;i2c.c: 86:   return;
  5960  04CA  0008               	return
  5961  04CB                     __end_of_I2C_Write_Byte:	
  5962                           
  5963                           	psect	text26
  5964  052B                     __ptext26:	
  5965 ;; *************** function _I2C_Stop *****************
  5966 ;; Defined at:
  5967 ;;		line 48 in file "i2c.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		None
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_wireWriteDataByte
  5992 ;;		_wireReadDataByte
  5993 ;;		_wireReadDataBlock
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _I2C_Stop
  5999  052B                     _I2C_Stop:	
  6000                           
  6001                           ;i2c.c: 50:  SSP1CON2bits.PEN=1;
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _I2C_Stop: []
  6005  052B  0024               	movlb	4	; select bank4
  6006  052C  1516               	bsf	22,2	;volatile
  6007  052D  0008               	return
  6008  052E                     __end_of_I2C_Stop:	
  6009                           
  6010                           	psect	text27
  6011  052E                     __ptext27:	
  6012 ;; *************** function _I2C_Start *****************
  6013 ;; Defined at:
  6014 ;;		line 34 in file "i2c.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		None
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    4
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_wireWriteDataByte
  6039 ;;		_wireReadDataByte
  6040 ;;		_wireReadDataBlock
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _I2C_Start
  6046  052E                     _I2C_Start:	
  6047                           
  6048                           ;i2c.c: 36:  SSP1CON2bits.SEN = 1;
  6049                           
  6050                           ;incstack = 0
  6051                           ; Regs used in _I2C_Start: []
  6052  052E  0024               	movlb	4	; select bank4
  6053  052F  1416               	bsf	22,0	;volatile
  6054  0530  0008               	return
  6055  0531                     __end_of_I2C_Start:	
  6056                           
  6057                           	psect	text28
  6058  051C                     __ptext28:	
  6059 ;; *************** function _I2C_Send_NACK *****************
  6060 ;; Defined at:
  6061 ;;		line 63 in file "i2c.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		None
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    4
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_wireReadDataByte
  6086 ;;		_wireReadDataBlock
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _I2C_Send_NACK
  6092  051C                     _I2C_Send_NACK:	
  6093                           
  6094                           ;i2c.c: 65:  SSP1CON2bits.ACKDT=1;
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _I2C_Send_NACK: []
  6098  051C  0024               	movlb	4	; select bank4
  6099  051D  1696               	bsf	22,5	;volatile
  6100                           
  6101                           ;i2c.c: 66:    SSP1CON2bits.ACKEN=1;
  6102  051E  1616               	bsf	22,4	;volatile
  6103  051F  0008               	return
  6104  0520                     __end_of_I2C_Send_NACK:	
  6105                           
  6106                           	psect	text29
  6107  02B7                     __ptext29:	
  6108 ;; *************** function _I2C_Read_Byte *****************
  6109 ;; Defined at:
  6110 ;;		line 92 in file "i2c.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  count           4    4[COMMON] unsigned long 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      unsigned char 
  6117 ;; Registers used:
  6118 ;;		wreg
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        8 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    4
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_wireReadDataByte
  6135 ;;		_wireReadDataBlock
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _I2C_Read_Byte
  6141  02B7                     _I2C_Read_Byte:	
  6142                           
  6143                           ;i2c.c: 94:   SSP1CON2bits.RCEN=1;
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _I2C_Read_Byte: [wreg]
  6147  02B7  0024               	movlb	4	; select bank4
  6148  02B8  1596               	bsf	22,3	;volatile
  6149                           
  6150                           ;i2c.c: 97:  unsigned long count = 10000L;
  6151  02B9  3000               	movlw	0
  6152  02BA  00F7               	movwf	I2C_Read_Byte@count+3
  6153  02BB  3000               	movlw	0
  6154  02BC  00F6               	movwf	I2C_Read_Byte@count+2
  6155  02BD  3027               	movlw	39
  6156  02BE  00F5               	movwf	I2C_Read_Byte@count+1
  6157  02BF  3010               	movlw	16
  6158  02C0  00F4               	movwf	I2C_Read_Byte@count
  6159  02C1                     l798:	
  6160                           ;i2c.c: 110:  }
  6161                           
  6162                           ;i2c.c: 98:  while (SSP1STATbits.BF == 0) {
  6163                           
  6164                           
  6165                           ;i2c.c: 98:  while (SSP1STATbits.BF == 0) {
  6166  02C1  1814               	btfsc	20,0	;volatile
  6167  02C2  2ADF               	goto	l2630
  6168                           
  6169                           ;i2c.c: 101:   if (--count == 0) {
  6170  02C3  3001               	movlw	1
  6171  02C4  00F0               	movwf	??_I2C_Read_Byte
  6172  02C5  3000               	movlw	0
  6173  02C6  00F1               	movwf	??_I2C_Read_Byte+1
  6174  02C7  3000               	movlw	0
  6175  02C8  00F2               	movwf	??_I2C_Read_Byte+2
  6176  02C9  3000               	movlw	0
  6177  02CA  00F3               	movwf	??_I2C_Read_Byte+3
  6178  02CB  0870               	movf	??_I2C_Read_Byte,w
  6179  02CC  02F4               	subwf	I2C_Read_Byte@count,f
  6180  02CD  0871               	movf	??_I2C_Read_Byte+1,w
  6181  02CE  3BF5               	subwfb	I2C_Read_Byte@count+1,f
  6182  02CF  0872               	movf	??_I2C_Read_Byte+2,w
  6183  02D0  3BF6               	subwfb	I2C_Read_Byte@count+2,f
  6184  02D1  0873               	movf	??_I2C_Read_Byte+3,w
  6185  02D2  3BF7               	subwfb	I2C_Read_Byte@count+3,f
  6186  02D3  0877               	movf	I2C_Read_Byte@count+3,w
  6187  02D4  0476               	iorwf	I2C_Read_Byte@count+2,w
  6188  02D5  0475               	iorwf	I2C_Read_Byte@count+1,w
  6189  02D6  0474               	iorwf	I2C_Read_Byte@count,w
  6190  02D7  1D03               	skipz
  6191  02D8  2AC1               	goto	l798
  6192                           
  6193                           ;i2c.c: 103:    SSP1CON2bits.PEN = 1;
  6194  02D9  1516               	bsf	22,2	;volatile
  6195                           
  6196                           ;i2c.c: 107:    b_i2c_error_flag = 1;
  6197  02DA  0020               	movlb	0	; select bank0
  6198  02DB  01B4               	clrf	_b_i2c_error_flag
  6199  02DC  0AB4               	incf	_b_i2c_error_flag,f
  6200                           
  6201                           ;i2c.c: 108:    return 0;
  6202  02DD  3000               	movlw	0
  6203  02DE  0008               	return
  6204  02DF                     l2630:	
  6205                           
  6206                           ;i2c.c: 112:   return SSP1BUF;
  6207  02DF  0811               	movf	17,w	;volatile
  6208  02E0  0008               	return
  6209  02E1                     __end_of_I2C_Read_Byte:	
  6210                           
  6211                           	psect	text30
  6212  0531                     __ptext30:	
  6213 ;; *************** function _I2C_ReStart *****************
  6214 ;; Defined at:
  6215 ;;		line 41 in file "i2c.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		None
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    4
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_wireReadDataByte
  6240 ;;		_wireReadDataBlock
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function _I2C_ReStart
  6246  0531                     _I2C_ReStart:	
  6247                           
  6248                           ;i2c.c: 43:  SSP1CON2bits.RSEN = 1;
  6249                           
  6250                           ;incstack = 0
  6251                           ; Regs used in _I2C_ReStart: []
  6252  0531  0024               	movlb	4	; select bank4
  6253  0532  1496               	bsf	22,1	;volatile
  6254  0533  0008               	return
  6255  0534                     __end_of_I2C_ReStart:	
  6256                           
  6257                           	psect	text31
  6258  04E5                     __ptext31:	
  6259 ;; *************** function _SYSTEM_Initialize *****************
  6260 ;; Defined at:
  6261 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;		None
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;Total ram usage:        0 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    6
  6282 ;; This function calls:
  6283 ;;		_OSCILLATOR_Initialize
  6284 ;;		_PIN_MANAGER_Initialize
  6285 ;;		_PMD_Initialize
  6286 ;;		_WDT_Initialize
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _SYSTEM_Initialize
  6294  04E5                     _SYSTEM_Initialize:	
  6295                           
  6296                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6300  04E5  3185  2502  3184   	fcall	_PMD_Initialize
  6301                           
  6302                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6303  04E8  3181  21E9  3184   	fcall	_PIN_MANAGER_Initialize
  6304                           
  6305                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6306  04EB  3184  24F1  3184   	fcall	_OSCILLATOR_Initialize
  6307                           
  6308                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6309  04EE  3185  2520         	fcall	_WDT_Initialize
  6310  04F0  0008               	return
  6311  04F1                     __end_of_SYSTEM_Initialize:	
  6312                           
  6313                           	psect	text32
  6314  0520                     __ptext32:	
  6315 ;; *************** function _WDT_Initialize *****************
  6316 ;; Defined at:
  6317 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;Total ram usage:        0 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    4
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_SYSTEM_Initialize
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _WDT_Initialize
  6347  0520                     _WDT_Initialize:	
  6348                           
  6349                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _WDT_Initialize: [wreg]
  6353  0520  3016               	movlw	22
  6354  0521  0021               	movlb	1	; select bank1
  6355  0522  0097               	movwf	23	;volatile
  6356  0523  0008               	return
  6357  0524                     __end_of_WDT_Initialize:	
  6358                           
  6359                           	psect	text33
  6360  0502                     __ptext33:	
  6361 ;; *************** function _PMD_Initialize *****************
  6362 ;; Defined at:
  6363 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		status,2
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    4
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_SYSTEM_Initialize
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _PMD_Initialize
  6393  0502                     _PMD_Initialize:	
  6394                           
  6395                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _PMD_Initialize: [status,2]
  6399  0502  0032               	movlb	18	; select bank18
  6400  0503  0191               	clrf	17	;volatile
  6401                           
  6402                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  6403  0504  0192               	clrf	18	;volatile
  6404                           
  6405                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  6406  0505  0193               	clrf	19	;volatile
  6407                           
  6408                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  6409  0506  0194               	clrf	20	;volatile
  6410                           
  6411                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  6412  0507  0195               	clrf	21	;volatile
  6413                           
  6414                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  6415  0508  0196               	clrf	22	;volatile
  6416  0509  0008               	return
  6417  050A                     __end_of_PMD_Initialize:	
  6418                           
  6419                           	psect	text34
  6420  01E9                     __ptext34:	
  6421 ;; *************** function _PIN_MANAGER_Initialize *****************
  6422 ;; Defined at:
  6423 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0, pclath, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    5
  6444 ;; This function calls:
  6445 ;;		_IOCAF4_SetInterruptHandler
  6446 ;; This function is called by:
  6447 ;;		_SYSTEM_Initialize
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _PIN_MANAGER_Initialize
  6453  01E9                     _PIN_MANAGER_Initialize:	
  6454                           
  6455                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6456                           
  6457                           ;incstack = 0
  6458                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6459  01E9  0022               	movlb	2	; select bank2
  6460  01EA  018C               	clrf	12	;volatile
  6461                           
  6462                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6463  01EB  018D               	clrf	13	;volatile
  6464                           
  6465                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6466  01EC  018E               	clrf	14	;volatile
  6467                           
  6468                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  6469  01ED  3011               	movlw	17
  6470  01EE  0021               	movlb	1	; select bank1
  6471  01EF  008C               	movwf	12	;volatile
  6472                           
  6473                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  6474  01F0  30F0               	movlw	240
  6475  01F1  008D               	movwf	13	;volatile
  6476                           
  6477                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  6478  01F2  30DF               	movlw	223
  6479  01F3  008E               	movwf	14	;volatile
  6480                           
  6481                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xFC;
  6482  01F4  30FC               	movlw	252
  6483  01F5  0023               	movlb	3	; select bank3
  6484  01F6  008E               	movwf	14	;volatile
  6485                           
  6486                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF0;
  6487  01F7  30F0               	movlw	240
  6488  01F8  008D               	movwf	13	;volatile
  6489                           
  6490                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x27;
  6491  01F9  3027               	movlw	39
  6492  01FA  008C               	movwf	12	;volatile
  6493                           
  6494                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  6495  01FB  0024               	movlb	4	; select bank4
  6496  01FC  018D               	clrf	13	;volatile
  6497                           
  6498                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  6499  01FD  018C               	clrf	12	;volatile
  6500                           
  6501                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x03;
  6502  01FE  3003               	movlw	3
  6503  01FF  008E               	movwf	14	;volatile
  6504                           
  6505                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  6506  0200  0025               	movlb	5	; select bank5
  6507  0201  018C               	clrf	12	;volatile
  6508                           
  6509                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  6510  0202  018D               	clrf	13	;volatile
  6511                           
  6512                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  6513  0203  018E               	clrf	14	;volatile
  6514                           
  6515                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  6516  0204  3037               	movlw	55
  6517  0205  0026               	movlb	6	; select bank6
  6518  0206  008C               	movwf	12	;volatile
  6519                           
  6520                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  6521  0207  30F0               	movlw	240
  6522  0208  008D               	movwf	13	;volatile
  6523                           
  6524                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  6525  0209  30FF               	movlw	255
  6526  020A  008E               	movwf	14	;volatile
  6527                           
  6528                           ;mcc_generated_files/pin_manager.c: 106:     IOCAFbits.IOCAF4 = 0;
  6529  020B  0027               	movlb	7	; select bank7
  6530  020C  1213               	bcf	19,4	;volatile
  6531                           
  6532                           ;mcc_generated_files/pin_manager.c: 108:     IOCANbits.IOCAN4 = 1;
  6533  020D  1612               	bsf	18,4	;volatile
  6534                           
  6535                           ;mcc_generated_files/pin_manager.c: 110:     IOCAPbits.IOCAP4 = 0;
  6536  020E  1211               	bcf	17,4	;volatile
  6537                           
  6538                           ;mcc_generated_files/pin_manager.c: 115:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  6539  020F  3034               	movlw	low _IOCAF4_DefaultInterruptHandler
  6540  0210  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  6541  0211  3005               	movlw	high _IOCAF4_DefaultInterruptHandler
  6542  0212  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  6543  0213  3185  2510         	fcall	_IOCAF4_SetInterruptHandler
  6544                           
  6545                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6546  0215  0021               	movlb	1	; select bank1
  6547  0216  1610               	bsf	16,4	;volatile
  6548                           
  6549                           ;mcc_generated_files/pin_manager.c: 121:     RC0PPS = 0x18;
  6550  0217  3018               	movlw	24
  6551  0218  003D               	movlb	29	; select bank29
  6552  0219  00A0               	movwf	32	;volatile
  6553                           
  6554                           ;mcc_generated_files/pin_manager.c: 122:     SSP1CLKPPS = 0x10;
  6555  021A  3010               	movlw	16
  6556  021B  003C               	movlb	28	; select bank28
  6557  021C  00A0               	movwf	32	;volatile
  6558                           
  6559                           ;mcc_generated_files/pin_manager.c: 123:     RC1PPS = 0x19;
  6560  021D  3019               	movlw	25
  6561  021E  003D               	movlb	29	; select bank29
  6562  021F  00A1               	movwf	33	;volatile
  6563                           
  6564                           ;mcc_generated_files/pin_manager.c: 124:     SSP1DATPPS = 0x11;
  6565  0220  3011               	movlw	17
  6566  0221  003C               	movlb	28	; select bank28
  6567  0222  00A1               	movwf	33	;volatile
  6568  0223  0008               	return
  6569  0224                     __end_of_PIN_MANAGER_Initialize:	
  6570                           
  6571                           	psect	text35
  6572  0510                     __ptext35:	
  6573 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  6574 ;; Defined at:
  6575 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  6578 ;;		 -> GestureInterruptHandler(1), IOCAF4_DefaultInterruptHandler(1), 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		wreg
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;Total ram usage:        2 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    4
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_PIN_MANAGER_Initialize
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function _IOCAF4_SetInterruptHandler
  6607  0510                     _IOCAF4_SetInterruptHandler:	
  6608                           
  6609                           ;mcc_generated_files/pin_manager.c: 155:     IOCAF4_InterruptHandler = InterruptHandler;
  6610                           
  6611                           ;incstack = 0
  6612                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  6613  0510  0871               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  6614  0511  0020               	movlb	0	; select bank0
  6615  0512  00BD               	movwf	_IOCAF4_InterruptHandler+1
  6616  0513  0870               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  6617  0514  00BC               	movwf	_IOCAF4_InterruptHandler
  6618  0515  0008               	return
  6619  0516                     __end_of_IOCAF4_SetInterruptHandler:	
  6620                           
  6621                           	psect	text36
  6622  04F1                     __ptext36:	
  6623 ;; *************** function _OSCILLATOR_Initialize *****************
  6624 ;; Defined at:
  6625 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    4
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_SYSTEM_Initialize
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function _OSCILLATOR_Initialize
  6655  04F1                     _OSCILLATOR_Initialize:	
  6656                           
  6657                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  6658                           
  6659                           ;incstack = 0
  6660                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6661  04F1  3062               	movlw	98
  6662  04F2  0032               	movlb	18	; select bank18
  6663  04F3  0099               	movwf	25	;volatile
  6664                           
  6665                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6666  04F4  019B               	clrf	27	;volatile
  6667                           
  6668                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6669  04F5  019D               	clrf	29	;volatile
  6670                           
  6671                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
  6672  04F6  3003               	movlw	3
  6673  04F7  009F               	movwf	31	;volatile
  6674                           
  6675                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  6676  04F8  019E               	clrf	30	;volatile
  6677  04F9  0008               	return
  6678  04FA                     __end_of_OSCILLATOR_Initialize:	
  6679                           
  6680                           	psect	intentry
  6681  0004                     __pintentry:	
  6682 ;; *************** function _INTERRUPT_InterruptManager *****************
  6683 ;; Defined at:
  6684 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    3
  6705 ;; This function calls:
  6706 ;;		_PIN_MANAGER_IOC
  6707 ;; This function is called by:
  6708 ;;		Interrupt level 1
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712  0004                     _INTERRUPT_InterruptManager:	
  6713                           
  6714                           ;incstack = 0
  6715  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6716                           
  6717                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6718  0005  3180               	pagesel	$
  6719                           
  6720                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6721  0006  0021               	movlb	1	; select bank1
  6722  0007  1E10               	btfss	16,4	;volatile
  6723  0008  2810               	goto	i1l21
  6724  0009  0020               	movlb	0	; select bank0
  6725  000A  1E10               	btfss	16,4	;volatile
  6726  000B  2810               	goto	i1l21
  6727                           
  6728                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6729  000C  3185  2516  3180   	fcall	_PIN_MANAGER_IOC
  6730                           
  6731                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6732  000F  281C               	goto	i1l29
  6733  0010                     i1l21:	
  6734                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6735                           
  6736  0010  1F0B               	btfss	11,6	;volatile
  6737  0011  281C               	goto	i1l29
  6738                           
  6739                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  6740  0012  0021               	movlb	1	; select bank1
  6741  0013  1991               	btfsc	17,3	;volatile
  6742                           
  6743                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  6744  0014  0020               	movlb	0	; select bank0
  6745  0015  1991               	btfsc	17,3	;volatile
  6746  0016  281C               	goto	i1l29
  6747                           
  6748                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
  6749  0017  0021               	movlb	1	; select bank1
  6750  0018  1D11               	btfss	17,2	;volatile
  6751  0019  281C               	goto	i1l29
  6752                           
  6753                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
  6754  001A  0020               	movlb	0	; select bank0
  6755  001B  0811               	movf	17,w	;volatile
  6756  001C                     i1l29:	
  6757                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6758                           
  6759  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6760  001D  0009               	retfie
  6761  001E                     __end_of_INTERRUPT_InterruptManager:	
  6762                           
  6763                           	psect	text38
  6764  0516                     __ptext38:	
  6765 ;; *************** function _PIN_MANAGER_IOC *****************
  6766 ;; Defined at:
  6767 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    2
  6788 ;; This function calls:
  6789 ;;		_IOCAF4_ISR
  6790 ;; This function is called by:
  6791 ;;		_INTERRUPT_InterruptManager
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function _PIN_MANAGER_IOC
  6797  0516                     _PIN_MANAGER_IOC:	
  6798                           
  6799                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCAFbits.IOCAF4 == 1)
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6803  0516  0027               	movlb	7	; select bank7
  6804  0517  1E13               	btfss	19,4	;volatile
  6805  0518  0008               	return
  6806                           
  6807                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCAF4_ISR();
  6808  0519  3184  24D8         	fcall	_IOCAF4_ISR
  6809  051B  0008               	return
  6810  051C                     __end_of_PIN_MANAGER_IOC:	
  6811                           
  6812                           	psect	text39
  6813  04D8                     __ptext39:	
  6814 ;; *************** function _IOCAF4_ISR *****************
  6815 ;; Defined at:
  6816 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0, pclath, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;Total ram usage:        0 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    1
  6837 ;; This function calls:
  6838 ;;		Absolute function
  6839 ;;		_GestureInterruptHandler
  6840 ;;		_IOCAF4_DefaultInterruptHandler
  6841 ;; This function is called by:
  6842 ;;		_PIN_MANAGER_IOC
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function _IOCAF4_ISR
  6848  04D8                     _IOCAF4_ISR:	
  6849                           
  6850                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCAF4_InterruptHandler)
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6854  04D8  0020               	movlb	0	; select bank0
  6855  04D9  083C               	movf	_IOCAF4_InterruptHandler,w
  6856  04DA  043D               	iorwf	_IOCAF4_InterruptHandler+1,w
  6857  04DB  1903               	btfsc	3,2
  6858  04DC  2CE2               	goto	i1l2772
  6859                           
  6860                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCAF4_InterruptHandler();
  6861  04DD  083D               	movf	_IOCAF4_InterruptHandler+1,w
  6862  04DE  008A               	movwf	10
  6863  04DF  083C               	movf	_IOCAF4_InterruptHandler,w
  6864  04E0  000A               	callw
  6865  04E1  3184               	pagesel	$
  6866  04E2                     i1l2772:	
  6867                           
  6868                           ;mcc_generated_files/pin_manager.c: 148:     IOCAFbits.IOCAF4 = 0;
  6869  04E2  0027               	movlb	7	; select bank7
  6870  04E3  1213               	bcf	19,4	;volatile
  6871  04E4  0008               	return
  6872  04E5                     __end_of_IOCAF4_ISR:	
  6873                           
  6874                           	psect	text40
  6875  0524                     __ptext40:	
  6876 ;; *************** function _GestureInterruptHandler *****************
  6877 ;; Defined at:
  6878 ;;		line 54 in file "main.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		None
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;;		_IOCAF4_ISR
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _GestureInterruptHandler
  6908  0524                     _GestureInterruptHandler:	
  6909                           
  6910                           ;main.c: 55:     handleGestureFlag = 1;
  6911                           
  6912                           ;incstack = 0
  6913                           ; Regs used in _GestureInterruptHandler: []
  6914  0524  0020               	movlb	0	; select bank0
  6915  0525  01B5               	clrf	_handleGestureFlag
  6916  0526  0AB5               	incf	_handleGestureFlag,f
  6917  0527  0008               	return
  6918  0528                     __end_of_GestureInterruptHandler:	
  6919                           
  6920                           	psect	text41
  6921  0534                     __ptext41:	
  6922 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  6923 ;; Defined at:
  6924 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		None
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_PIN_MANAGER_Initialize
  6948 ;;		_IOCAF4_ISR
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _IOCAF4_DefaultInterruptHandler
  6954  0534                     _IOCAF4_DefaultInterruptHandler:	
  6955                           
  6956                           ;incstack = 0
  6957                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  6958  0534  0008               	return
  6959  0535                     __end_of_IOCAF4_DefaultInterruptHandler:	
  6960  007E                     btemp	set	126	;btemp
  6961  007E                     int$flags	set	126
  6962  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         90
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      30
    BANK1            80      0      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), Absolute function(), IOCAF4_DefaultInterruptHandler(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _initialize->_setAmbientLightGain
    _initialize->_setGestureIntEnable
    _initialize->_setGestureWaitTime
    _initialize->_setMode
    _setProximityGain->_wireReadDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireReadDataByte
    _setGestureWaitTime->_wireReadDataByte
    _setGestureLEDDrive->_wireReadDataByte
    _setGestureGain->_wireReadDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireReadDataByte
    _enableGestureSensor->_setGestureIntEnable
    _enableGestureSensor->_setGestureMode
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireReadDataByte
    _setGestureMode->_wireReadDataByte
    _setGestureIntEnable->_wireReadDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Read_Byte
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_enableGestureSensor
    _main->_initialize
    _initialize->_setMode
    _enableGestureSensor->_setMode
    _enablePower->_setMode

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   63400
         _IOCAF4_SetInterruptHandler
                  _SYSTEM_Initialize
                _enableGestureSensor
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   44364
                                              4 BANK0      2     2      0
                            _InitI2C
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   18688
                                              4 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    2963
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    3499
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    3499
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    2802
                                              1 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     113
                                             11 COMMON     2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0      90
                                              8 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
            _GestureInterruptHandler *
     _IOCAF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _GestureInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF4_SetInterruptHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
             _I2C_Read_Byte
             _I2C_Send_NACK
             _I2C_Start
             _I2C_Stop
             _I2C_Write_Byte
         _wireWriteDataByte
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _initialize
     _InitI2C
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireReadDataByte
       _I2C_ReStart
       _I2C_Read_Byte
       _I2C_Send_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF4_ISR
       Absolute function(Fake) *
       _GestureInterruptHandler *
       _IOCAF4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      1E       5       37.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      70      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 06 16:39:30 2019

                     ?_setGestureExitThresh 0070                          __size_of_I2C_Start 0003  
                               __CFG_CP$OFF 0000                                 __CFG_LVP$ON 0000  
                                       l792 04C5                                         l798 02C1  
                              __CFG_CPD$OFF 0000                        __size_of_I2C_ReStart 0003  
                   __size_of_PMD_Initialize 0008                          I2C_Write_Byte@Byte 0070  
                                       wreg 0009                                        l3008 04D6  
                                      l3034 0046                                        l3038 0048  
                                      l3170 0152                                        l2630 02DF  
                                      l3166 0150                                        l2704 01DA  
                                      l3184 014E                                        l2706 01DB  
                                      l3274 0371                                        l3276 037A  
                                      l2906 0284                                        l2842 0396  
                                      l2818 0487                                        l2684 01A7  
                                      l2924 0253                                        l2828 0498  
                                      l2942 03EA                                        l2862 03BA  
                                      l2838 0394                                        l2696 01C1  
                                      l2688 01A9                                        l2960 0359  
                                      l2698 01CE                                        l2858 03B8  
                                      l2980 02B5                                        l2878 04BA  
                                      l2888 04A9                                        l2998 040E  
                                      _LATA 010C                                        _LATB 010D  
                                      _LATC 010E                                        u1805 031B  
                                      u1815 02F2                                        u1744 01BA  
                                      u1745 01B9                                        u1905 0266  
                                      u1754 01C6                                        u1755 01C5  
                                      u1925 0235                                        _PMD0 0911  
                                      i1l21 0010                                        u1965 0297  
                                      _PMD1 0912                                        _PMD2 0913  
                                      _PMD3 0914                                        _PMD4 0915  
                                      _PMD5 0916                                        i1l29 001C  
                                      _WPUA 020C                                        _WPUB 020D  
                                      _WPUC 020E                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 035B  
                                      fsr0h 0005                                        indf0 0000  
                                      fsr0l 0004                                        btemp 007E  
                     ??_setGestureIntEnable 007B                            __end_of_I2C_Stop 052E  
                             __CFG_BOREN$ON 0000                               __CFG_BORV$LOW 0000  
                                      start 001E                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                             __end_of_InitI2C 052B  
            __size_of_OSCILLATOR_Initialize 0009                         __size_of_IOCAF4_ISR 000D  
             __end_of_OSCILLATOR_Initialize 04FA                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                              __CFG_DEBUG$OFF 0000  
                              ?_setLEDBoost 0070                                ?_setLEDDrive 0070  
                            _setGestureGain 0255                                       _OSCEN 091D  
                            _setGestureMode 03EC                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 0489                             __end_of_getMode 0502  
                   __end_of_PIN_MANAGER_IOC 051C                      __size_of_I2C_Read_Byte 002A  
                            _WDT_Initialize 0520                            _b_i2c_error_flag 0034  
              __end_of_setProxIntHighThresh 049A                             __end_of_setMode 01E9  
                         __end_of_I2C_Start 0531                                       pclath 000A  
              __size_of_setAmbientLightGain 001C                      __size_of_I2C_Send_NACK 0004  
                                     status 0003                                       wtemp0 007E  
                  ?_setLightIntLowThreshold 0075                  __end_of_setGestureLEDDrive 0255  
                     setGestureWaitTime@val 007D                               _gesture_data_ 00A0  
                           __initialization 0020                      ??_setGestureExitThresh 0075  
                              __end_of_main 0380                           _handleGestureFlag 0035  
               ?_INTERRUPT_InterruptManager 0070                      __end_of_setGestureGain 0286  
                 __size_of_setProximityGain 0029                      __end_of_setGestureMode 0410  
                                    ??_main 007E                     _IOCAF4_InterruptHandler 003C  
         __size_of_setLightIntHighThreshold 0024                      __end_of_WDT_Initialize 0524  
                 ?_setLightIntHighThreshold 0075           setLightIntHighThreshold@threshold 0075  
                      __size_of_enablePower 000D                                      _ANSELA 018C  
                                    _ANSELB 018D                                      _ANSELC 018E  
                        __CFG_RSTOSC$HFINT1 0000                setProxIntLowThresh@threshold 0076  
                                    _RC0PPS 0EA0                                      _RC1PPS 0EA1  
                                    _ODCONA 028C                                      _ODCONB 028D  
                                    _ODCONC 028E                                      i1l2772 04E2  
                          _wireReadDataByte 0410                                      _OSCFRQ 091F  
                   ?_resetGestureParameters 0070                                      _WDTCON 0097  
                                 ??_InitI2C 0070                           _gesture_lr_delta_ 002C  
                            __CFG_PWRTE$OFF 0000               setProxIntHighThresh@threshold 0076  
                         _gesture_lr_count_ 0028                         wireReadDataByte@reg 0079  
                       wireReadDataByte@val 007A                           _gesture_ud_delta_ 002E  
                             _I2C_Read_Byte 02B7                           _gesture_ud_count_ 002A  
                __end_of_setGestureWaitTime 03EC                              __CFG_STVREN$ON 0000  
                           ?_setGestureGain 0070                               _I2C_Send_NACK 051C  
                                 ??_getMode 007B                             ?_setGestureMode 0070  
                   ??_setGestureEnterThresh 0075                              _PMD_Initialize 0502  
                                 ?_I2C_Stop 0070                                   ??_setMode 0036  
                           ?_WDT_Initialize 0070                    ?_GestureInterruptHandler 0070  
IOCAF4_SetInterruptHandler@InterruptHandler 0070                            ?_PIN_MANAGER_IOC 0070  
                              ??_IOCAF4_ISR 0070              __end_of_resetGestureParameters 0478  
                         _SYSTEM_Initialize 04E5                     __end_of__initialization 002F  
                        ?_SYSTEM_Initialize 0070                      setGestureWaitTime@time 007C  
                            ?_I2C_Read_Byte 0070                              __pcstackCOMMON 0070  
                       ??_SYSTEM_Initialize 0072      __end_of_IOCAF4_DefaultInterruptHandler 0535  
   __size_of_IOCAF4_DefaultInterruptHandler 0001              _IOCAF4_DefaultInterruptHandler 0534  
                      _setProxIntHighThresh 0489                              _gesture_state_ 0022  
                            ?_I2C_Send_NACK 0070                      __end_of_PMD_Initialize 050A  
                        __end_of_IOCAF4_ISR 04E5                                  ??_I2C_Stop 0070  
                        _gesture_far_count_ 0024                        __size_of_setLEDBoost 0031  
                      __size_of_setLEDDrive 0029                   __end_of_SYSTEM_Initialize 04F1  
                                __pbssBANK0 0020                                  __pbssBANK1 00A0  
                      wireWriteDataByte@reg 0074                        wireWriteDataByte@val 0071  
                       getMode@enable_value 007C                                  __pmaintext 035B  
                   setGestureLEDDrive@drive 0037                             __CFG_PPS1WAY$ON 0000  
              __size_of_enableGestureSensor 0060                                  __pintentry 0004  
                     ?_setProxIntHighThresh 0070                     __size_of_I2C_Write_Byte 000F  
                             ??_I2C_ReStart 0070                            _setProximityGain 02E1  
                               setMode@mode 0039                             ?_PMD_Initialize 0070  
                       _setAmbientLightGain 0430             __end_of_GestureInterruptHandler 0528  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                                   _OSCTUNE 091E                                     _SSP1ADD 0212  
                                   _SLRCONA 030C                                     _SLRCONB 030D  
                                   _SLRCONC 030E                                     _SSP1BUF 0211  
                                   _SSP1MSK 0213                 __end_of_setGestureIntEnable 035B  
                      ?_setAmbientLightGain 0070                          _i2c1_driver_i2cISR 0030  
                                   _InitI2C 0528                                   _I2C_Start 052E  
                           ??_I2C_Read_Byte 0070                               setMode@enable 007D  
                           ??_I2C_Send_NACK 0070                    __end_of_wireReadDataByte 0430  
                                _initialize 0033                                     _getMode 04FA  
          __size_of_setLightIntLowThreshold 0024                          _setGestureLEDDrive 0224  
                                   __ptext1 0033                                     __ptext2 02E1  
                                   __ptext3 0478                                     __ptext4 0489  
                                   __ptext5 0380                                     __ptext6 03A4  
                                   __ptext7 030A                                     __ptext8 03C8  
                                   __ptext9 0224                       _OSCILLATOR_Initialize 04F1  
                                   _setMode 019B                    ??_PIN_MANAGER_Initialize 0072  
                                 _IOCAFbits 0393                         __end_of_I2C_ReStart 0534  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                       ?_setGestureLEDDrive 0070                  __size_of_SYSTEM_Initialize 000C  
                                   clrloop0 050B                        end_of_initialization 002F  
                     ??_setAmbientLightGain 007B                __size_of_setProxIntLowThresh 0011  
                                ?_I2C_Start 0070               enableGestureSensor@interrupts 003B  
             setGestureExitThresh@threshold 0076                        ??_setGestureLEDDrive 007B  
                              initialize@id 003B                            ??_setGestureGain 007B  
                    ??_setProxIntHighThresh 0075                            ??_setGestureMode 007B  
             __size_of_setGestureExitThresh 0011                            ??_WDT_Initialize 0070  
                         _wireWriteDataByte 044C                               ??_enablePower 007E  
                        ?_wireWriteDataByte 0071             setLightIntHighThreshold@val_low 0078  
            __size_of_setGestureEnterThresh 0011               __end_of_setGestureEnterThresh 04BC  
                        _setGestureWaitTime 03C8                ??_IOCAF4_SetInterruptHandler 0072  
                         __size_of_I2C_Stop 0003                         ??_wireWriteDataByte 0074  
                          __CFG_FEXTOSC$OFF 0000                         ?_setGestureWaitTime 0070  
                     setProximityGain@drive 0037            __size_of_GestureInterruptHandler 0004  
                 __end_of_wireWriteDataByte 0463                              _I2C_Write_Byte 04BC  
                      ??_setGestureWaitTime 007B                                 ?_initialize 0070  
                               _I2C_ReStart 0531         __size_of_IOCAF4_SetInterruptHandler 0006  
                    ?_OSCILLATOR_Initialize 0070                    _setLightIntHighThreshold 03A4  
                           _gesture_motion_ 0020                         start_initialization 0020  
                        setGestureGain@gain 0037             __size_of_PIN_MANAGER_Initialize 003B  
          setLightIntHighThreshold@val_high 0079                         _enableGestureSensor 013B  
                       __end_of_enablePower 04D8                    __end_of_setProximityGain 030A  
                               ??_I2C_Start 0070                    __size_of_PIN_MANAGER_IOC 0006  
                          __CFG_LPBOREN$OFF 0000                      __end_of_I2C_Write_Byte 04CB  
                          ??_PMD_Initialize 0070             setLightIntLowThreshold@val_high 0079  
                      ?_enableGestureSensor 0070                          setGestureMode@mode 007C  
                   _setLightIntLowThreshold 0380                   setGestureIntEnable@enable 007D  
                  setAmbientLightGain@drive 007C                               ??_setLEDBoost 007B  
                             ??_setLEDDrive 007B                      setGestureIntEnable@val 007C  
                                 ___latbits 0002                               __pcstackBANK0 0036  
                       __size_of_initialize 0108                                    ?_InitI2C 0070  
                                 __pnvBANK0 003C                      _PIN_MANAGER_Initialize 01E9  
                           ?_I2C_Write_Byte 0070                       ??_enableGestureSensor 003A  
                __size_of_wireWriteDataByte 0017                 _i2c1_driver_busCollisionISR 0032  
                       _setProxIntLowThresh 0478                ??_INTERRUPT_InterruptManager 0070  
                                  ?_getMode 0070                          I2C_Read_Byte@count 0074  
                         ?_wireReadDataByte 0070                                 _enablePower 04CB  
                        ??_wireReadDataByte 0078                                    _I2C_Stop 052B  
                  ??_resetGestureParameters 0070                                    ?_setMode 007D  
        __end_of_IOCAF4_SetInterruptHandler 0516                  _IOCAF4_SetInterruptHandler 0510  
                       __end_of_setLEDBoost 02B7                         __end_of_setLEDDrive 0333  
                      ?_setProxIntLowThresh 0070                                    _LATAbits 010C  
                                  _LATCbits 010E                                   clear_ram0 050A  
                                  _PIE0bits 0090                                    _PIE1bits 0091  
              __size_of_setGestureIntEnable 0028                     _GestureInterruptHandler 0524  
                       _gesture_near_count_ 0026         __size_of_INTERRUPT_InterruptManager 001A  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
                     __end_of_I2C_Read_Byte 02E1                   ??_setLightIntLowThreshold 0077  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
                            setLEDBoost@val 0036                                    _SSP1STAT 0214  
                         ??_PIN_MANAGER_IOC 0070                       __end_of_I2C_Send_NACK 0520  
                            setLEDDrive@val 0036                 __end_of_setAmbientLightGain 044C  
              __end_of_setGestureExitThresh 04AB                       ??_setProxIntLowThresh 0075  
                         setGestureGain@val 0036                            __size_of_InitI2C 0003  
                ??_setLightIntHighThreshold 0077                 __size_of_setGestureLEDDrive 0031  
                            setMode@reg_val 0038              setLightIntLowThreshold@val_low 0078  
                         setGestureMode@val 007D                     ??_OSCILLATOR_Initialize 0070  
             __size_of_setProxIntHighThresh 0011                                ??_initialize 003A  
                              ?_I2C_ReStart 0070            setLightIntLowThreshold@threshold 0075  
                          __size_of_getMode 0008                                 _setLEDBoost 0286  
                               _setLEDDrive 030A             __size_of_resetGestureParameters 0015  
           __end_of_setLightIntLowThreshold 03A4                       setGestureLEDDrive@val 0036  
                          __size_of_setMode 004E                                    __ptext10 0255  
                                  __ptext11 049A                                    __ptext20 04CB  
                                  __ptext12 04AB                                    __ptext21 019B  
                                  __ptext13 0430                                    __ptext30 0531  
                                  __ptext22 044C                                    __ptext14 0528  
                                  __ptext31 04E5                                    __ptext23 04FA  
                                  __ptext15 013B                                    __ptext40 0524  
                                  __ptext32 0520                                    __ptext24 0410  
                                  __ptext16 0286                                    __ptext41 0534  
                                  __ptext33 0502                                    __ptext25 04BC  
                                  __ptext17 03EC                                    __ptext34 01E9  
                                  __ptext26 052B                                    __ptext18 0333  
                                  __ptext35 0510                                    __ptext27 052E  
                                  __ptext19 0463                                    __ptext36 04F1  
                                  __ptext28 051C                                    __ptext29 02B7  
                                  __ptext38 0516                                    __ptext39 04D8  
                     _setGestureEnterThresh 04AB                                _SSP1CON1bits 0215  
                              _SSP1CON2bits 0216              setGestureEnterThresh@threshold 0076  
                                _IOCAF4_ISR 04D8                   ??_GestureInterruptHandler 0070  
                             __size_of_main 0025                           ?_setProximityGain 0070  
                        __end_of_initialize 013B                          ??_setProximityGain 007B  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 001E  
                _INTERRUPT_InterruptManager 0004                                _SSP1STATbits 0214  
                       setProximityGain@val 0036                 __size_of_setGestureWaitTime 0024  
                   __size_of_setGestureGain 0031                                  _INTCONbits 000B  
                   __size_of_setGestureMode 0024                      setAmbientLightGain@val 007D  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                   ?_PIN_MANAGER_Initialize 0070                            ??_I2C_Write_Byte 0070  
                         __CFG_CLKOUTEN$OFF 0000                      _resetGestureParameters 0463  
                      _setGestureExitThresh 049A                                  _SSP1DATPPS 0E21  
                              ?_enablePower 0070                                  _SSP1CLKPPS 0E20  
                       _setGestureIntEnable 0333                            setLEDBoost@boost 0037  
                    ?_setGestureEnterThresh 0070                 ?_IOCAF4_SetInterruptHandler 0070  
                               ?_IOCAF4_ISR 0070              __end_of_PIN_MANAGER_Initialize 0224  
                 __size_of_wireReadDataByte 0020            ??_IOCAF4_DefaultInterruptHandler 0070  
           ?_IOCAF4_DefaultInterruptHandler 0070                            setLEDDrive@drive 0037  
                           _PIN_MANAGER_IOC 0516                 __end_of_enableGestureSensor 019B  
                      ?_setGestureIntEnable 0070            __end_of_setLightIntHighThreshold 03C8  
