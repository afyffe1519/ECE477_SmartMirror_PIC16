

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 04 15:33:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F18345 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0097                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0113                     	;# 
   146  0114                     	;# 
   147  0115                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  0118                     	;# 
   151  0119                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  020E                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0216                     	;# 
   197  0216                     	;# 
   198  0217                     	;# 
   199  0217                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021D                     	;# 
   206  021E                     	;# 
   207  021F                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028E                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0294                     	;# 
   216  0295                     	;# 
   217  0295                     	;# 
   218  0296                     	;# 
   219  0297                     	;# 
   220  0298                     	;# 
   221  029F                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  0311                     	;# 
   226  0311                     	;# 
   227  0312                     	;# 
   228  0313                     	;# 
   229  0314                     	;# 
   230  0315                     	;# 
   231  0315                     	;# 
   232  0316                     	;# 
   233  0317                     	;# 
   234  0318                     	;# 
   235  038C                     	;# 
   236  038D                     	;# 
   237  038E                     	;# 
   238  0391                     	;# 
   239  0392                     	;# 
   240  0393                     	;# 
   241  0394                     	;# 
   242  0395                     	;# 
   243  0396                     	;# 
   244  0397                     	;# 
   245  0398                     	;# 
   246  0399                     	;# 
   247  039A                     	;# 
   248  039C                     	;# 
   249  039D                     	;# 
   250  039E                     	;# 
   251  039F                     	;# 
   252  0411                     	;# 
   253  0411                     	;# 
   254  0412                     	;# 
   255  0413                     	;# 
   256  0414                     	;# 
   257  0415                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  0418                     	;# 
   262  0419                     	;# 
   263  041A                     	;# 
   264  041B                     	;# 
   265  041C                     	;# 
   266  041D                     	;# 
   267  041E                     	;# 
   268  041F                     	;# 
   269  0498                     	;# 
   270  0498                     	;# 
   271  0499                     	;# 
   272  049A                     	;# 
   273  049B                     	;# 
   274  049B                     	;# 
   275  049C                     	;# 
   276  049D                     	;# 
   277  049E                     	;# 
   278  049F                     	;# 
   279  0617                     	;# 
   280  0618                     	;# 
   281  0619                     	;# 
   282  0619                     	;# 
   283  061A                     	;# 
   284  061B                     	;# 
   285  061C                     	;# 
   286  061C                     	;# 
   287  061F                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0696                     	;# 
   294  0697                     	;# 
   295  0698                     	;# 
   296  0699                     	;# 
   297  0711                     	;# 
   298  0712                     	;# 
   299  0713                     	;# 
   300  0714                     	;# 
   301  0715                     	;# 
   302  0716                     	;# 
   303  0717                     	;# 
   304  0718                     	;# 
   305  0719                     	;# 
   306  0891                     	;# 
   307  0891                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0891                     	;# 
   311  0891                     	;# 
   312  0892                     	;# 
   313  0892                     	;# 
   314  0892                     	;# 
   315  0893                     	;# 
   316  0893                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0894                     	;# 
   322  0894                     	;# 
   323  0894                     	;# 
   324  0895                     	;# 
   325  0895                     	;# 
   326  0895                     	;# 
   327  0896                     	;# 
   328  0896                     	;# 
   329  0896                     	;# 
   330  089B                     	;# 
   331  0911                     	;# 
   332  0912                     	;# 
   333  0913                     	;# 
   334  0914                     	;# 
   335  0915                     	;# 
   336  0916                     	;# 
   337  0918                     	;# 
   338  0919                     	;# 
   339  091A                     	;# 
   340  091B                     	;# 
   341  091C                     	;# 
   342  091D                     	;# 
   343  091E                     	;# 
   344  091F                     	;# 
   345  0E0F                     	;# 
   346  0E10                     	;# 
   347  0E11                     	;# 
   348  0E12                     	;# 
   349  0E13                     	;# 
   350  0E14                     	;# 
   351  0E15                     	;# 
   352  0E16                     	;# 
   353  0E17                     	;# 
   354  0E18                     	;# 
   355  0E19                     	;# 
   356  0E1A                     	;# 
   357  0E1B                     	;# 
   358  0E1C                     	;# 
   359  0E1D                     	;# 
   360  0E1E                     	;# 
   361  0E1F                     	;# 
   362  0E20                     	;# 
   363  0E21                     	;# 
   364  0E22                     	;# 
   365  0E24                     	;# 
   366  0E25                     	;# 
   367  0E28                     	;# 
   368  0E29                     	;# 
   369  0E2A                     	;# 
   370  0E2B                     	;# 
   371  0E2C                     	;# 
   372  0E2D                     	;# 
   373  0E2E                     	;# 
   374  0E2F                     	;# 
   375  0E90                     	;# 
   376  0E91                     	;# 
   377  0E92                     	;# 
   378  0E94                     	;# 
   379  0E95                     	;# 
   380  0E9C                     	;# 
   381  0E9D                     	;# 
   382  0E9E                     	;# 
   383  0E9F                     	;# 
   384  0EA0                     	;# 
   385  0EA1                     	;# 
   386  0EA2                     	;# 
   387  0EA3                     	;# 
   388  0EA4                     	;# 
   389  0EA5                     	;# 
   390  0EA6                     	;# 
   391  0EA7                     	;# 
   392  0F0F                     	;# 
   393  0F10                     	;# 
   394  0F11                     	;# 
   395  0F12                     	;# 
   396  0F13                     	;# 
   397  0F14                     	;# 
   398  0F15                     	;# 
   399  0F16                     	;# 
   400  0F17                     	;# 
   401  0F18                     	;# 
   402  0F19                     	;# 
   403  0F1A                     	;# 
   404  0F1B                     	;# 
   405  0F1C                     	;# 
   406  0F1D                     	;# 
   407  0F1E                     	;# 
   408  0F1F                     	;# 
   409  0F20                     	;# 
   410  0F21                     	;# 
   411  0F22                     	;# 
   412  0F23                     	;# 
   413  0F24                     	;# 
   414  0F25                     	;# 
   415  0F26                     	;# 
   416  0F27                     	;# 
   417  0F28                     	;# 
   418  0F29                     	;# 
   419  0F2A                     	;# 
   420  0F2B                     	;# 
   421  0F2C                     	;# 
   422  0F2D                     	;# 
   423  0F2E                     	;# 
   424  0F2F                     	;# 
   425  0F30                     	;# 
   426  0F31                     	;# 
   427  0F32                     	;# 
   428  0F33                     	;# 
   429  0F34                     	;# 
   430  0F35                     	;# 
   431  0F36                     	;# 
   432  0F37                     	;# 
   433  0FE4                     	;# 
   434  0FE5                     	;# 
   435  0FE6                     	;# 
   436  0FE7                     	;# 
   437  0FE8                     	;# 
   438  0FE9                     	;# 
   439  0FEA                     	;# 
   440  0FEB                     	;# 
   441  0FED                     	;# 
   442  0FEE                     	;# 
   443  0FEF                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  008C                     	;# 
   479  008D                     	;# 
   480  008E                     	;# 
   481  0090                     	;# 
   482  0091                     	;# 
   483  0092                     	;# 
   484  0093                     	;# 
   485  0094                     	;# 
   486  0097                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010D                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  018C                     	;# 
   506  018D                     	;# 
   507  018E                     	;# 
   508  0197                     	;# 
   509  0199                     	;# 
   510  0199                     	;# 
   511  0199                     	;# 
   512  019A                     	;# 
   513  019A                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019C                     	;# 
   521  019C                     	;# 
   522  019C                     	;# 
   523  019D                     	;# 
   524  019D                     	;# 
   525  019D                     	;# 
   526  019E                     	;# 
   527  019E                     	;# 
   528  019E                     	;# 
   529  019F                     	;# 
   530  019F                     	;# 
   531  019F                     	;# 
   532  019F                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020D                     	;# 
   536  020E                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0216                     	;# 
   550  0216                     	;# 
   551  0217                     	;# 
   552  0217                     	;# 
   553  0219                     	;# 
   554  021A                     	;# 
   555  021B                     	;# 
   556  021C                     	;# 
   557  021D                     	;# 
   558  021D                     	;# 
   559  021E                     	;# 
   560  021F                     	;# 
   561  028C                     	;# 
   562  028D                     	;# 
   563  028E                     	;# 
   564  0291                     	;# 
   565  0291                     	;# 
   566  0292                     	;# 
   567  0293                     	;# 
   568  0294                     	;# 
   569  0295                     	;# 
   570  0295                     	;# 
   571  0296                     	;# 
   572  0297                     	;# 
   573  0298                     	;# 
   574  029F                     	;# 
   575  030C                     	;# 
   576  030D                     	;# 
   577  030E                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0314                     	;# 
   583  0315                     	;# 
   584  0315                     	;# 
   585  0316                     	;# 
   586  0317                     	;# 
   587  0318                     	;# 
   588  038C                     	;# 
   589  038D                     	;# 
   590  038E                     	;# 
   591  0391                     	;# 
   592  0392                     	;# 
   593  0393                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  0397                     	;# 
   598  0398                     	;# 
   599  0399                     	;# 
   600  039A                     	;# 
   601  039C                     	;# 
   602  039D                     	;# 
   603  039E                     	;# 
   604  039F                     	;# 
   605  0411                     	;# 
   606  0411                     	;# 
   607  0412                     	;# 
   608  0413                     	;# 
   609  0414                     	;# 
   610  0415                     	;# 
   611  0416                     	;# 
   612  0417                     	;# 
   613  0418                     	;# 
   614  0418                     	;# 
   615  0419                     	;# 
   616  041A                     	;# 
   617  041B                     	;# 
   618  041C                     	;# 
   619  041D                     	;# 
   620  041E                     	;# 
   621  041F                     	;# 
   622  0498                     	;# 
   623  0498                     	;# 
   624  0499                     	;# 
   625  049A                     	;# 
   626  049B                     	;# 
   627  049B                     	;# 
   628  049C                     	;# 
   629  049D                     	;# 
   630  049E                     	;# 
   631  049F                     	;# 
   632  0617                     	;# 
   633  0618                     	;# 
   634  0619                     	;# 
   635  0619                     	;# 
   636  061A                     	;# 
   637  061B                     	;# 
   638  061C                     	;# 
   639  061C                     	;# 
   640  061F                     	;# 
   641  0691                     	;# 
   642  0692                     	;# 
   643  0693                     	;# 
   644  0694                     	;# 
   645  0695                     	;# 
   646  0696                     	;# 
   647  0697                     	;# 
   648  0698                     	;# 
   649  0699                     	;# 
   650  0711                     	;# 
   651  0712                     	;# 
   652  0713                     	;# 
   653  0714                     	;# 
   654  0715                     	;# 
   655  0716                     	;# 
   656  0717                     	;# 
   657  0718                     	;# 
   658  0719                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0891                     	;# 
   662  0891                     	;# 
   663  0891                     	;# 
   664  0891                     	;# 
   665  0892                     	;# 
   666  0892                     	;# 
   667  0892                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0893                     	;# 
   671  0893                     	;# 
   672  0893                     	;# 
   673  0893                     	;# 
   674  0894                     	;# 
   675  0894                     	;# 
   676  0894                     	;# 
   677  0895                     	;# 
   678  0895                     	;# 
   679  0895                     	;# 
   680  0896                     	;# 
   681  0896                     	;# 
   682  0896                     	;# 
   683  089B                     	;# 
   684  0911                     	;# 
   685  0912                     	;# 
   686  0913                     	;# 
   687  0914                     	;# 
   688  0915                     	;# 
   689  0916                     	;# 
   690  0918                     	;# 
   691  0919                     	;# 
   692  091A                     	;# 
   693  091B                     	;# 
   694  091C                     	;# 
   695  091D                     	;# 
   696  091E                     	;# 
   697  091F                     	;# 
   698  0E0F                     	;# 
   699  0E10                     	;# 
   700  0E11                     	;# 
   701  0E12                     	;# 
   702  0E13                     	;# 
   703  0E14                     	;# 
   704  0E15                     	;# 
   705  0E16                     	;# 
   706  0E17                     	;# 
   707  0E18                     	;# 
   708  0E19                     	;# 
   709  0E1A                     	;# 
   710  0E1B                     	;# 
   711  0E1C                     	;# 
   712  0E1D                     	;# 
   713  0E1E                     	;# 
   714  0E1F                     	;# 
   715  0E20                     	;# 
   716  0E21                     	;# 
   717  0E22                     	;# 
   718  0E24                     	;# 
   719  0E25                     	;# 
   720  0E28                     	;# 
   721  0E29                     	;# 
   722  0E2A                     	;# 
   723  0E2B                     	;# 
   724  0E2C                     	;# 
   725  0E2D                     	;# 
   726  0E2E                     	;# 
   727  0E2F                     	;# 
   728  0E90                     	;# 
   729  0E91                     	;# 
   730  0E92                     	;# 
   731  0E94                     	;# 
   732  0E95                     	;# 
   733  0E9C                     	;# 
   734  0E9D                     	;# 
   735  0E9E                     	;# 
   736  0E9F                     	;# 
   737  0EA0                     	;# 
   738  0EA1                     	;# 
   739  0EA2                     	;# 
   740  0EA3                     	;# 
   741  0EA4                     	;# 
   742  0EA5                     	;# 
   743  0EA6                     	;# 
   744  0EA7                     	;# 
   745  0F0F                     	;# 
   746  0F10                     	;# 
   747  0F11                     	;# 
   748  0F12                     	;# 
   749  0F13                     	;# 
   750  0F14                     	;# 
   751  0F15                     	;# 
   752  0F16                     	;# 
   753  0F17                     	;# 
   754  0F18                     	;# 
   755  0F19                     	;# 
   756  0F1A                     	;# 
   757  0F1B                     	;# 
   758  0F1C                     	;# 
   759  0F1D                     	;# 
   760  0F1E                     	;# 
   761  0F1F                     	;# 
   762  0F20                     	;# 
   763  0F21                     	;# 
   764  0F22                     	;# 
   765  0F23                     	;# 
   766  0F24                     	;# 
   767  0F25                     	;# 
   768  0F26                     	;# 
   769  0F27                     	;# 
   770  0F28                     	;# 
   771  0F29                     	;# 
   772  0F2A                     	;# 
   773  0F2B                     	;# 
   774  0F2C                     	;# 
   775  0F2D                     	;# 
   776  0F2E                     	;# 
   777  0F2F                     	;# 
   778  0F30                     	;# 
   779  0F31                     	;# 
   780  0F32                     	;# 
   781  0F33                     	;# 
   782  0F34                     	;# 
   783  0F35                     	;# 
   784  0F36                     	;# 
   785  0F37                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0008                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000D                     	;# 
   811  000E                     	;# 
   812  0010                     	;# 
   813  0011                     	;# 
   814  0012                     	;# 
   815  0013                     	;# 
   816  0014                     	;# 
   817  0015                     	;# 
   818  0015                     	;# 
   819  0016                     	;# 
   820  0016                     	;# 
   821  0017                     	;# 
   822  0018                     	;# 
   823  0019                     	;# 
   824  0019                     	;# 
   825  001A                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  001D                     	;# 
   829  001E                     	;# 
   830  001F                     	;# 
   831  008C                     	;# 
   832  008D                     	;# 
   833  008E                     	;# 
   834  0090                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0094                     	;# 
   839  0097                     	;# 
   840  009B                     	;# 
   841  009B                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  009F                     	;# 
   846  010C                     	;# 
   847  010D                     	;# 
   848  010E                     	;# 
   849  0111                     	;# 
   850  0112                     	;# 
   851  0113                     	;# 
   852  0114                     	;# 
   853  0115                     	;# 
   854  0116                     	;# 
   855  0117                     	;# 
   856  0118                     	;# 
   857  0119                     	;# 
   858  018C                     	;# 
   859  018D                     	;# 
   860  018E                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019E                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  020C                     	;# 
   888  020D                     	;# 
   889  020E                     	;# 
   890  0211                     	;# 
   891  0211                     	;# 
   892  0212                     	;# 
   893  0212                     	;# 
   894  0213                     	;# 
   895  0213                     	;# 
   896  0214                     	;# 
   897  0214                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0216                     	;# 
   903  0216                     	;# 
   904  0217                     	;# 
   905  0217                     	;# 
   906  0219                     	;# 
   907  021A                     	;# 
   908  021B                     	;# 
   909  021C                     	;# 
   910  021D                     	;# 
   911  021D                     	;# 
   912  021E                     	;# 
   913  021F                     	;# 
   914  028C                     	;# 
   915  028D                     	;# 
   916  028E                     	;# 
   917  0291                     	;# 
   918  0291                     	;# 
   919  0292                     	;# 
   920  0293                     	;# 
   921  0294                     	;# 
   922  0295                     	;# 
   923  0295                     	;# 
   924  0296                     	;# 
   925  0297                     	;# 
   926  0298                     	;# 
   927  029F                     	;# 
   928  030C                     	;# 
   929  030D                     	;# 
   930  030E                     	;# 
   931  0311                     	;# 
   932  0311                     	;# 
   933  0312                     	;# 
   934  0313                     	;# 
   935  0314                     	;# 
   936  0315                     	;# 
   937  0315                     	;# 
   938  0316                     	;# 
   939  0317                     	;# 
   940  0318                     	;# 
   941  038C                     	;# 
   942  038D                     	;# 
   943  038E                     	;# 
   944  0391                     	;# 
   945  0392                     	;# 
   946  0393                     	;# 
   947  0394                     	;# 
   948  0395                     	;# 
   949  0396                     	;# 
   950  0397                     	;# 
   951  0398                     	;# 
   952  0399                     	;# 
   953  039A                     	;# 
   954  039C                     	;# 
   955  039D                     	;# 
   956  039E                     	;# 
   957  039F                     	;# 
   958  0411                     	;# 
   959  0411                     	;# 
   960  0412                     	;# 
   961  0413                     	;# 
   962  0414                     	;# 
   963  0415                     	;# 
   964  0416                     	;# 
   965  0417                     	;# 
   966  0418                     	;# 
   967  0418                     	;# 
   968  0419                     	;# 
   969  041A                     	;# 
   970  041B                     	;# 
   971  041C                     	;# 
   972  041D                     	;# 
   973  041E                     	;# 
   974  041F                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0617                     	;# 
   986  0618                     	;# 
   987  0619                     	;# 
   988  0619                     	;# 
   989  061A                     	;# 
   990  061B                     	;# 
   991  061C                     	;# 
   992  061C                     	;# 
   993  061F                     	;# 
   994  0691                     	;# 
   995  0692                     	;# 
   996  0693                     	;# 
   997  0694                     	;# 
   998  0695                     	;# 
   999  0696                     	;# 
  1000  0697                     	;# 
  1001  0698                     	;# 
  1002  0699                     	;# 
  1003  0711                     	;# 
  1004  0712                     	;# 
  1005  0713                     	;# 
  1006  0714                     	;# 
  1007  0715                     	;# 
  1008  0716                     	;# 
  1009  0717                     	;# 
  1010  0718                     	;# 
  1011  0719                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0891                     	;# 
  1017  0891                     	;# 
  1018  0892                     	;# 
  1019  0892                     	;# 
  1020  0892                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0893                     	;# 
  1026  0893                     	;# 
  1027  0894                     	;# 
  1028  0894                     	;# 
  1029  0894                     	;# 
  1030  0895                     	;# 
  1031  0895                     	;# 
  1032  0895                     	;# 
  1033  0896                     	;# 
  1034  0896                     	;# 
  1035  0896                     	;# 
  1036  089B                     	;# 
  1037  0911                     	;# 
  1038  0912                     	;# 
  1039  0913                     	;# 
  1040  0914                     	;# 
  1041  0915                     	;# 
  1042  0916                     	;# 
  1043  0918                     	;# 
  1044  0919                     	;# 
  1045  091A                     	;# 
  1046  091B                     	;# 
  1047  091C                     	;# 
  1048  091D                     	;# 
  1049  091E                     	;# 
  1050  091F                     	;# 
  1051  0E0F                     	;# 
  1052  0E10                     	;# 
  1053  0E11                     	;# 
  1054  0E12                     	;# 
  1055  0E13                     	;# 
  1056  0E14                     	;# 
  1057  0E15                     	;# 
  1058  0E16                     	;# 
  1059  0E17                     	;# 
  1060  0E18                     	;# 
  1061  0E19                     	;# 
  1062  0E1A                     	;# 
  1063  0E1B                     	;# 
  1064  0E1C                     	;# 
  1065  0E1D                     	;# 
  1066  0E1E                     	;# 
  1067  0E1F                     	;# 
  1068  0E20                     	;# 
  1069  0E21                     	;# 
  1070  0E22                     	;# 
  1071  0E24                     	;# 
  1072  0E25                     	;# 
  1073  0E28                     	;# 
  1074  0E29                     	;# 
  1075  0E2A                     	;# 
  1076  0E2B                     	;# 
  1077  0E2C                     	;# 
  1078  0E2D                     	;# 
  1079  0E2E                     	;# 
  1080  0E2F                     	;# 
  1081  0E90                     	;# 
  1082  0E91                     	;# 
  1083  0E92                     	;# 
  1084  0E94                     	;# 
  1085  0E95                     	;# 
  1086  0E9C                     	;# 
  1087  0E9D                     	;# 
  1088  0E9E                     	;# 
  1089  0E9F                     	;# 
  1090  0EA0                     	;# 
  1091  0EA1                     	;# 
  1092  0EA2                     	;# 
  1093  0EA3                     	;# 
  1094  0EA4                     	;# 
  1095  0EA5                     	;# 
  1096  0EA6                     	;# 
  1097  0EA7                     	;# 
  1098  0F0F                     	;# 
  1099  0F10                     	;# 
  1100  0F11                     	;# 
  1101  0F12                     	;# 
  1102  0F13                     	;# 
  1103  0F14                     	;# 
  1104  0F15                     	;# 
  1105  0F16                     	;# 
  1106  0F17                     	;# 
  1107  0F18                     	;# 
  1108  0F19                     	;# 
  1109  0F1A                     	;# 
  1110  0F1B                     	;# 
  1111  0F1C                     	;# 
  1112  0F1D                     	;# 
  1113  0F1E                     	;# 
  1114  0F1F                     	;# 
  1115  0F20                     	;# 
  1116  0F21                     	;# 
  1117  0F22                     	;# 
  1118  0F23                     	;# 
  1119  0F24                     	;# 
  1120  0F25                     	;# 
  1121  0F26                     	;# 
  1122  0F27                     	;# 
  1123  0F28                     	;# 
  1124  0F29                     	;# 
  1125  0F2A                     	;# 
  1126  0F2B                     	;# 
  1127  0F2C                     	;# 
  1128  0F2D                     	;# 
  1129  0F2E                     	;# 
  1130  0F2F                     	;# 
  1131  0F30                     	;# 
  1132  0F31                     	;# 
  1133  0F32                     	;# 
  1134  0F33                     	;# 
  1135  0F34                     	;# 
  1136  0F35                     	;# 
  1137  0F36                     	;# 
  1138  0F37                     	;# 
  1139  0FE4                     	;# 
  1140  0FE5                     	;# 
  1141  0FE6                     	;# 
  1142  0FE7                     	;# 
  1143  0FE8                     	;# 
  1144  0FE9                     	;# 
  1145  0FEA                     	;# 
  1146  0FEB                     	;# 
  1147  0FED                     	;# 
  1148  0FEE                     	;# 
  1149  0FEF                     	;# 
  1150  0000                     	;# 
  1151  0001                     	;# 
  1152  0002                     	;# 
  1153  0003                     	;# 
  1154  0004                     	;# 
  1155  0005                     	;# 
  1156  0006                     	;# 
  1157  0007                     	;# 
  1158  0008                     	;# 
  1159  0009                     	;# 
  1160  000A                     	;# 
  1161  000B                     	;# 
  1162  000C                     	;# 
  1163  000D                     	;# 
  1164  000E                     	;# 
  1165  0010                     	;# 
  1166  0011                     	;# 
  1167  0012                     	;# 
  1168  0013                     	;# 
  1169  0014                     	;# 
  1170  0015                     	;# 
  1171  0015                     	;# 
  1172  0016                     	;# 
  1173  0016                     	;# 
  1174  0017                     	;# 
  1175  0018                     	;# 
  1176  0019                     	;# 
  1177  0019                     	;# 
  1178  001A                     	;# 
  1179  001B                     	;# 
  1180  001C                     	;# 
  1181  001D                     	;# 
  1182  001E                     	;# 
  1183  001F                     	;# 
  1184  008C                     	;# 
  1185  008D                     	;# 
  1186  008E                     	;# 
  1187  0090                     	;# 
  1188  0091                     	;# 
  1189  0092                     	;# 
  1190  0093                     	;# 
  1191  0094                     	;# 
  1192  0097                     	;# 
  1193  009B                     	;# 
  1194  009B                     	;# 
  1195  009C                     	;# 
  1196  009D                     	;# 
  1197  009E                     	;# 
  1198  009F                     	;# 
  1199  010C                     	;# 
  1200  010D                     	;# 
  1201  010E                     	;# 
  1202  0111                     	;# 
  1203  0112                     	;# 
  1204  0113                     	;# 
  1205  0114                     	;# 
  1206  0115                     	;# 
  1207  0116                     	;# 
  1208  0117                     	;# 
  1209  0118                     	;# 
  1210  0119                     	;# 
  1211  018C                     	;# 
  1212  018D                     	;# 
  1213  018E                     	;# 
  1214  0197                     	;# 
  1215  0199                     	;# 
  1216  0199                     	;# 
  1217  0199                     	;# 
  1218  019A                     	;# 
  1219  019A                     	;# 
  1220  019A                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019B                     	;# 
  1225  019B                     	;# 
  1226  019C                     	;# 
  1227  019C                     	;# 
  1228  019C                     	;# 
  1229  019D                     	;# 
  1230  019D                     	;# 
  1231  019D                     	;# 
  1232  019E                     	;# 
  1233  019E                     	;# 
  1234  019E                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  019F                     	;# 
  1239  019F                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0213                     	;# 
  1249  0214                     	;# 
  1250  0214                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0215                     	;# 
  1254  0215                     	;# 
  1255  0216                     	;# 
  1256  0216                     	;# 
  1257  0217                     	;# 
  1258  0217                     	;# 
  1259  0219                     	;# 
  1260  021A                     	;# 
  1261  021B                     	;# 
  1262  021C                     	;# 
  1263  021D                     	;# 
  1264  021D                     	;# 
  1265  021E                     	;# 
  1266  021F                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028E                     	;# 
  1270  0291                     	;# 
  1271  0291                     	;# 
  1272  0292                     	;# 
  1273  0293                     	;# 
  1274  0294                     	;# 
  1275  0295                     	;# 
  1276  0295                     	;# 
  1277  0296                     	;# 
  1278  0297                     	;# 
  1279  0298                     	;# 
  1280  029F                     	;# 
  1281  030C                     	;# 
  1282  030D                     	;# 
  1283  030E                     	;# 
  1284  0311                     	;# 
  1285  0311                     	;# 
  1286  0312                     	;# 
  1287  0313                     	;# 
  1288  0314                     	;# 
  1289  0315                     	;# 
  1290  0315                     	;# 
  1291  0316                     	;# 
  1292  0317                     	;# 
  1293  0318                     	;# 
  1294  038C                     	;# 
  1295  038D                     	;# 
  1296  038E                     	;# 
  1297  0391                     	;# 
  1298  0392                     	;# 
  1299  0393                     	;# 
  1300  0394                     	;# 
  1301  0395                     	;# 
  1302  0396                     	;# 
  1303  0397                     	;# 
  1304  0398                     	;# 
  1305  0399                     	;# 
  1306  039A                     	;# 
  1307  039C                     	;# 
  1308  039D                     	;# 
  1309  039E                     	;# 
  1310  039F                     	;# 
  1311  0411                     	;# 
  1312  0411                     	;# 
  1313  0412                     	;# 
  1314  0413                     	;# 
  1315  0414                     	;# 
  1316  0415                     	;# 
  1317  0416                     	;# 
  1318  0417                     	;# 
  1319  0418                     	;# 
  1320  0418                     	;# 
  1321  0419                     	;# 
  1322  041A                     	;# 
  1323  041B                     	;# 
  1324  041C                     	;# 
  1325  041D                     	;# 
  1326  041E                     	;# 
  1327  041F                     	;# 
  1328  0498                     	;# 
  1329  0498                     	;# 
  1330  0499                     	;# 
  1331  049A                     	;# 
  1332  049B                     	;# 
  1333  049B                     	;# 
  1334  049C                     	;# 
  1335  049D                     	;# 
  1336  049E                     	;# 
  1337  049F                     	;# 
  1338  0617                     	;# 
  1339  0618                     	;# 
  1340  0619                     	;# 
  1341  0619                     	;# 
  1342  061A                     	;# 
  1343  061B                     	;# 
  1344  061C                     	;# 
  1345  061C                     	;# 
  1346  061F                     	;# 
  1347  0691                     	;# 
  1348  0692                     	;# 
  1349  0693                     	;# 
  1350  0694                     	;# 
  1351  0695                     	;# 
  1352  0696                     	;# 
  1353  0697                     	;# 
  1354  0698                     	;# 
  1355  0699                     	;# 
  1356  0711                     	;# 
  1357  0712                     	;# 
  1358  0713                     	;# 
  1359  0714                     	;# 
  1360  0715                     	;# 
  1361  0716                     	;# 
  1362  0717                     	;# 
  1363  0718                     	;# 
  1364  0719                     	;# 
  1365  0891                     	;# 
  1366  0891                     	;# 
  1367  0891                     	;# 
  1368  0891                     	;# 
  1369  0891                     	;# 
  1370  0891                     	;# 
  1371  0892                     	;# 
  1372  0892                     	;# 
  1373  0892                     	;# 
  1374  0893                     	;# 
  1375  0893                     	;# 
  1376  0893                     	;# 
  1377  0893                     	;# 
  1378  0893                     	;# 
  1379  0893                     	;# 
  1380  0894                     	;# 
  1381  0894                     	;# 
  1382  0894                     	;# 
  1383  0895                     	;# 
  1384  0895                     	;# 
  1385  0895                     	;# 
  1386  0896                     	;# 
  1387  0896                     	;# 
  1388  0896                     	;# 
  1389  089B                     	;# 
  1390  0911                     	;# 
  1391  0912                     	;# 
  1392  0913                     	;# 
  1393  0914                     	;# 
  1394  0915                     	;# 
  1395  0916                     	;# 
  1396  0918                     	;# 
  1397  0919                     	;# 
  1398  091A                     	;# 
  1399  091B                     	;# 
  1400  091C                     	;# 
  1401  091D                     	;# 
  1402  091E                     	;# 
  1403  091F                     	;# 
  1404  0E0F                     	;# 
  1405  0E10                     	;# 
  1406  0E11                     	;# 
  1407  0E12                     	;# 
  1408  0E13                     	;# 
  1409  0E14                     	;# 
  1410  0E15                     	;# 
  1411  0E16                     	;# 
  1412  0E17                     	;# 
  1413  0E18                     	;# 
  1414  0E19                     	;# 
  1415  0E1A                     	;# 
  1416  0E1B                     	;# 
  1417  0E1C                     	;# 
  1418  0E1D                     	;# 
  1419  0E1E                     	;# 
  1420  0E1F                     	;# 
  1421  0E20                     	;# 
  1422  0E21                     	;# 
  1423  0E22                     	;# 
  1424  0E24                     	;# 
  1425  0E25                     	;# 
  1426  0E28                     	;# 
  1427  0E29                     	;# 
  1428  0E2A                     	;# 
  1429  0E2B                     	;# 
  1430  0E2C                     	;# 
  1431  0E2D                     	;# 
  1432  0E2E                     	;# 
  1433  0E2F                     	;# 
  1434  0E90                     	;# 
  1435  0E91                     	;# 
  1436  0E92                     	;# 
  1437  0E94                     	;# 
  1438  0E95                     	;# 
  1439  0E9C                     	;# 
  1440  0E9D                     	;# 
  1441  0E9E                     	;# 
  1442  0E9F                     	;# 
  1443  0EA0                     	;# 
  1444  0EA1                     	;# 
  1445  0EA2                     	;# 
  1446  0EA3                     	;# 
  1447  0EA4                     	;# 
  1448  0EA5                     	;# 
  1449  0EA6                     	;# 
  1450  0EA7                     	;# 
  1451  0F0F                     	;# 
  1452  0F10                     	;# 
  1453  0F11                     	;# 
  1454  0F12                     	;# 
  1455  0F13                     	;# 
  1456  0F14                     	;# 
  1457  0F15                     	;# 
  1458  0F16                     	;# 
  1459  0F17                     	;# 
  1460  0F18                     	;# 
  1461  0F19                     	;# 
  1462  0F1A                     	;# 
  1463  0F1B                     	;# 
  1464  0F1C                     	;# 
  1465  0F1D                     	;# 
  1466  0F1E                     	;# 
  1467  0F1F                     	;# 
  1468  0F20                     	;# 
  1469  0F21                     	;# 
  1470  0F22                     	;# 
  1471  0F23                     	;# 
  1472  0F24                     	;# 
  1473  0F25                     	;# 
  1474  0F26                     	;# 
  1475  0F27                     	;# 
  1476  0F28                     	;# 
  1477  0F29                     	;# 
  1478  0F2A                     	;# 
  1479  0F2B                     	;# 
  1480  0F2C                     	;# 
  1481  0F2D                     	;# 
  1482  0F2E                     	;# 
  1483  0F2F                     	;# 
  1484  0F30                     	;# 
  1485  0F31                     	;# 
  1486  0F32                     	;# 
  1487  0F33                     	;# 
  1488  0F34                     	;# 
  1489  0F35                     	;# 
  1490  0F36                     	;# 
  1491  0F37                     	;# 
  1492  0FE4                     	;# 
  1493  0FE5                     	;# 
  1494  0FE6                     	;# 
  1495  0FE7                     	;# 
  1496  0FE8                     	;# 
  1497  0FE9                     	;# 
  1498  0FEA                     	;# 
  1499  0FEB                     	;# 
  1500  0FED                     	;# 
  1501  0FEE                     	;# 
  1502  0FEF                     	;# 
  1503  0000                     	;# 
  1504  0001                     	;# 
  1505  0002                     	;# 
  1506  0003                     	;# 
  1507  0004                     	;# 
  1508  0005                     	;# 
  1509  0006                     	;# 
  1510  0007                     	;# 
  1511  0008                     	;# 
  1512  0009                     	;# 
  1513  000A                     	;# 
  1514  000B                     	;# 
  1515  000C                     	;# 
  1516  000D                     	;# 
  1517  000E                     	;# 
  1518  0010                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0015                     	;# 
  1525  0016                     	;# 
  1526  0016                     	;# 
  1527  0017                     	;# 
  1528  0018                     	;# 
  1529  0019                     	;# 
  1530  0019                     	;# 
  1531  001A                     	;# 
  1532  001B                     	;# 
  1533  001C                     	;# 
  1534  001D                     	;# 
  1535  001E                     	;# 
  1536  001F                     	;# 
  1537  008C                     	;# 
  1538  008D                     	;# 
  1539  008E                     	;# 
  1540  0090                     	;# 
  1541  0091                     	;# 
  1542  0092                     	;# 
  1543  0093                     	;# 
  1544  0094                     	;# 
  1545  0097                     	;# 
  1546  009B                     	;# 
  1547  009B                     	;# 
  1548  009C                     	;# 
  1549  009D                     	;# 
  1550  009E                     	;# 
  1551  009F                     	;# 
  1552  010C                     	;# 
  1553  010D                     	;# 
  1554  010E                     	;# 
  1555  0111                     	;# 
  1556  0112                     	;# 
  1557  0113                     	;# 
  1558  0114                     	;# 
  1559  0115                     	;# 
  1560  0116                     	;# 
  1561  0117                     	;# 
  1562  0118                     	;# 
  1563  0119                     	;# 
  1564  018C                     	;# 
  1565  018D                     	;# 
  1566  018E                     	;# 
  1567  0197                     	;# 
  1568  0199                     	;# 
  1569  0199                     	;# 
  1570  0199                     	;# 
  1571  019A                     	;# 
  1572  019A                     	;# 
  1573  019A                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019C                     	;# 
  1580  019C                     	;# 
  1581  019C                     	;# 
  1582  019D                     	;# 
  1583  019D                     	;# 
  1584  019D                     	;# 
  1585  019E                     	;# 
  1586  019E                     	;# 
  1587  019E                     	;# 
  1588  019F                     	;# 
  1589  019F                     	;# 
  1590  019F                     	;# 
  1591  019F                     	;# 
  1592  019F                     	;# 
  1593  020C                     	;# 
  1594  020D                     	;# 
  1595  020E                     	;# 
  1596  0211                     	;# 
  1597  0211                     	;# 
  1598  0212                     	;# 
  1599  0212                     	;# 
  1600  0213                     	;# 
  1601  0213                     	;# 
  1602  0214                     	;# 
  1603  0214                     	;# 
  1604  0215                     	;# 
  1605  0215                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0216                     	;# 
  1609  0216                     	;# 
  1610  0217                     	;# 
  1611  0217                     	;# 
  1612  0219                     	;# 
  1613  021A                     	;# 
  1614  021B                     	;# 
  1615  021C                     	;# 
  1616  021D                     	;# 
  1617  021D                     	;# 
  1618  021E                     	;# 
  1619  021F                     	;# 
  1620  028C                     	;# 
  1621  028D                     	;# 
  1622  028E                     	;# 
  1623  0291                     	;# 
  1624  0291                     	;# 
  1625  0292                     	;# 
  1626  0293                     	;# 
  1627  0294                     	;# 
  1628  0295                     	;# 
  1629  0295                     	;# 
  1630  0296                     	;# 
  1631  0297                     	;# 
  1632  0298                     	;# 
  1633  029F                     	;# 
  1634  030C                     	;# 
  1635  030D                     	;# 
  1636  030E                     	;# 
  1637  0311                     	;# 
  1638  0311                     	;# 
  1639  0312                     	;# 
  1640  0313                     	;# 
  1641  0314                     	;# 
  1642  0315                     	;# 
  1643  0315                     	;# 
  1644  0316                     	;# 
  1645  0317                     	;# 
  1646  0318                     	;# 
  1647  038C                     	;# 
  1648  038D                     	;# 
  1649  038E                     	;# 
  1650  0391                     	;# 
  1651  0392                     	;# 
  1652  0393                     	;# 
  1653  0394                     	;# 
  1654  0395                     	;# 
  1655  0396                     	;# 
  1656  0397                     	;# 
  1657  0398                     	;# 
  1658  0399                     	;# 
  1659  039A                     	;# 
  1660  039C                     	;# 
  1661  039D                     	;# 
  1662  039E                     	;# 
  1663  039F                     	;# 
  1664  0411                     	;# 
  1665  0411                     	;# 
  1666  0412                     	;# 
  1667  0413                     	;# 
  1668  0414                     	;# 
  1669  0415                     	;# 
  1670  0416                     	;# 
  1671  0417                     	;# 
  1672  0418                     	;# 
  1673  0418                     	;# 
  1674  0419                     	;# 
  1675  041A                     	;# 
  1676  041B                     	;# 
  1677  041C                     	;# 
  1678  041D                     	;# 
  1679  041E                     	;# 
  1680  041F                     	;# 
  1681  0498                     	;# 
  1682  0498                     	;# 
  1683  0499                     	;# 
  1684  049A                     	;# 
  1685  049B                     	;# 
  1686  049B                     	;# 
  1687  049C                     	;# 
  1688  049D                     	;# 
  1689  049E                     	;# 
  1690  049F                     	;# 
  1691  0617                     	;# 
  1692  0618                     	;# 
  1693  0619                     	;# 
  1694  0619                     	;# 
  1695  061A                     	;# 
  1696  061B                     	;# 
  1697  061C                     	;# 
  1698  061C                     	;# 
  1699  061F                     	;# 
  1700  0691                     	;# 
  1701  0692                     	;# 
  1702  0693                     	;# 
  1703  0694                     	;# 
  1704  0695                     	;# 
  1705  0696                     	;# 
  1706  0697                     	;# 
  1707  0698                     	;# 
  1708  0699                     	;# 
  1709  0711                     	;# 
  1710  0712                     	;# 
  1711  0713                     	;# 
  1712  0714                     	;# 
  1713  0715                     	;# 
  1714  0716                     	;# 
  1715  0717                     	;# 
  1716  0718                     	;# 
  1717  0719                     	;# 
  1718  0891                     	;# 
  1719  0891                     	;# 
  1720  0891                     	;# 
  1721  0891                     	;# 
  1722  0891                     	;# 
  1723  0891                     	;# 
  1724  0892                     	;# 
  1725  0892                     	;# 
  1726  0892                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0893                     	;# 
  1730  0893                     	;# 
  1731  0893                     	;# 
  1732  0893                     	;# 
  1733  0894                     	;# 
  1734  0894                     	;# 
  1735  0894                     	;# 
  1736  0895                     	;# 
  1737  0895                     	;# 
  1738  0895                     	;# 
  1739  0896                     	;# 
  1740  0896                     	;# 
  1741  0896                     	;# 
  1742  089B                     	;# 
  1743  0911                     	;# 
  1744  0912                     	;# 
  1745  0913                     	;# 
  1746  0914                     	;# 
  1747  0915                     	;# 
  1748  0916                     	;# 
  1749  0918                     	;# 
  1750  0919                     	;# 
  1751  091A                     	;# 
  1752  091B                     	;# 
  1753  091C                     	;# 
  1754  091D                     	;# 
  1755  091E                     	;# 
  1756  091F                     	;# 
  1757  0E0F                     	;# 
  1758  0E10                     	;# 
  1759  0E11                     	;# 
  1760  0E12                     	;# 
  1761  0E13                     	;# 
  1762  0E14                     	;# 
  1763  0E15                     	;# 
  1764  0E16                     	;# 
  1765  0E17                     	;# 
  1766  0E18                     	;# 
  1767  0E19                     	;# 
  1768  0E1A                     	;# 
  1769  0E1B                     	;# 
  1770  0E1C                     	;# 
  1771  0E1D                     	;# 
  1772  0E1E                     	;# 
  1773  0E1F                     	;# 
  1774  0E20                     	;# 
  1775  0E21                     	;# 
  1776  0E22                     	;# 
  1777  0E24                     	;# 
  1778  0E25                     	;# 
  1779  0E28                     	;# 
  1780  0E29                     	;# 
  1781  0E2A                     	;# 
  1782  0E2B                     	;# 
  1783  0E2C                     	;# 
  1784  0E2D                     	;# 
  1785  0E2E                     	;# 
  1786  0E2F                     	;# 
  1787  0E90                     	;# 
  1788  0E91                     	;# 
  1789  0E92                     	;# 
  1790  0E94                     	;# 
  1791  0E95                     	;# 
  1792  0E9C                     	;# 
  1793  0E9D                     	;# 
  1794  0E9E                     	;# 
  1795  0E9F                     	;# 
  1796  0EA0                     	;# 
  1797  0EA1                     	;# 
  1798  0EA2                     	;# 
  1799  0EA3                     	;# 
  1800  0EA4                     	;# 
  1801  0EA5                     	;# 
  1802  0EA6                     	;# 
  1803  0EA7                     	;# 
  1804  0F0F                     	;# 
  1805  0F10                     	;# 
  1806  0F11                     	;# 
  1807  0F12                     	;# 
  1808  0F13                     	;# 
  1809  0F14                     	;# 
  1810  0F15                     	;# 
  1811  0F16                     	;# 
  1812  0F17                     	;# 
  1813  0F18                     	;# 
  1814  0F19                     	;# 
  1815  0F1A                     	;# 
  1816  0F1B                     	;# 
  1817  0F1C                     	;# 
  1818  0F1D                     	;# 
  1819  0F1E                     	;# 
  1820  0F1F                     	;# 
  1821  0F20                     	;# 
  1822  0F21                     	;# 
  1823  0F22                     	;# 
  1824  0F23                     	;# 
  1825  0F24                     	;# 
  1826  0F25                     	;# 
  1827  0F26                     	;# 
  1828  0F27                     	;# 
  1829  0F28                     	;# 
  1830  0F29                     	;# 
  1831  0F2A                     	;# 
  1832  0F2B                     	;# 
  1833  0F2C                     	;# 
  1834  0F2D                     	;# 
  1835  0F2E                     	;# 
  1836  0F2F                     	;# 
  1837  0F30                     	;# 
  1838  0F31                     	;# 
  1839  0F32                     	;# 
  1840  0F33                     	;# 
  1841  0F34                     	;# 
  1842  0F35                     	;# 
  1843  0F36                     	;# 
  1844  0F37                     	;# 
  1845  0FE4                     	;# 
  1846  0FE5                     	;# 
  1847  0FE6                     	;# 
  1848  0FE7                     	;# 
  1849  0FE8                     	;# 
  1850  0FE9                     	;# 
  1851  0FEA                     	;# 
  1852  0FEB                     	;# 
  1853  0FED                     	;# 
  1854  0FEE                     	;# 
  1855  0FEF                     	;# 
  1856  0000                     	;# 
  1857  0001                     	;# 
  1858  0002                     	;# 
  1859  0003                     	;# 
  1860  0004                     	;# 
  1861  0005                     	;# 
  1862  0006                     	;# 
  1863  0007                     	;# 
  1864  0008                     	;# 
  1865  0009                     	;# 
  1866  000A                     	;# 
  1867  000B                     	;# 
  1868  000C                     	;# 
  1869  000D                     	;# 
  1870  000E                     	;# 
  1871  0010                     	;# 
  1872  0011                     	;# 
  1873  0012                     	;# 
  1874  0013                     	;# 
  1875  0014                     	;# 
  1876  0015                     	;# 
  1877  0015                     	;# 
  1878  0016                     	;# 
  1879  0016                     	;# 
  1880  0017                     	;# 
  1881  0018                     	;# 
  1882  0019                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  001D                     	;# 
  1888  001E                     	;# 
  1889  001F                     	;# 
  1890  008C                     	;# 
  1891  008D                     	;# 
  1892  008E                     	;# 
  1893  0090                     	;# 
  1894  0091                     	;# 
  1895  0092                     	;# 
  1896  0093                     	;# 
  1897  0094                     	;# 
  1898  0097                     	;# 
  1899  009B                     	;# 
  1900  009B                     	;# 
  1901  009C                     	;# 
  1902  009D                     	;# 
  1903  009E                     	;# 
  1904  009F                     	;# 
  1905  010C                     	;# 
  1906  010D                     	;# 
  1907  010E                     	;# 
  1908  0111                     	;# 
  1909  0112                     	;# 
  1910  0113                     	;# 
  1911  0114                     	;# 
  1912  0115                     	;# 
  1913  0116                     	;# 
  1914  0117                     	;# 
  1915  0118                     	;# 
  1916  0119                     	;# 
  1917  018C                     	;# 
  1918  018D                     	;# 
  1919  018E                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  0199                     	;# 
  1923  0199                     	;# 
  1924  019A                     	;# 
  1925  019A                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019C                     	;# 
  1933  019C                     	;# 
  1934  019C                     	;# 
  1935  019D                     	;# 
  1936  019D                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019E                     	;# 
  1940  019E                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  020C                     	;# 
  1947  020D                     	;# 
  1948  020E                     	;# 
  1949  0211                     	;# 
  1950  0211                     	;# 
  1951  0212                     	;# 
  1952  0212                     	;# 
  1953  0213                     	;# 
  1954  0213                     	;# 
  1955  0214                     	;# 
  1956  0214                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0216                     	;# 
  1962  0216                     	;# 
  1963  0217                     	;# 
  1964  0217                     	;# 
  1965  0219                     	;# 
  1966  021A                     	;# 
  1967  021B                     	;# 
  1968  021C                     	;# 
  1969  021D                     	;# 
  1970  021D                     	;# 
  1971  021E                     	;# 
  1972  021F                     	;# 
  1973  028C                     	;# 
  1974  028D                     	;# 
  1975  028E                     	;# 
  1976  0291                     	;# 
  1977  0291                     	;# 
  1978  0292                     	;# 
  1979  0293                     	;# 
  1980  0294                     	;# 
  1981  0295                     	;# 
  1982  0295                     	;# 
  1983  0296                     	;# 
  1984  0297                     	;# 
  1985  0298                     	;# 
  1986  029F                     	;# 
  1987  030C                     	;# 
  1988  030D                     	;# 
  1989  030E                     	;# 
  1990  0311                     	;# 
  1991  0311                     	;# 
  1992  0312                     	;# 
  1993  0313                     	;# 
  1994  0314                     	;# 
  1995  0315                     	;# 
  1996  0315                     	;# 
  1997  0316                     	;# 
  1998  0317                     	;# 
  1999  0318                     	;# 
  2000  038C                     	;# 
  2001  038D                     	;# 
  2002  038E                     	;# 
  2003  0391                     	;# 
  2004  0392                     	;# 
  2005  0393                     	;# 
  2006  0394                     	;# 
  2007  0395                     	;# 
  2008  0396                     	;# 
  2009  0397                     	;# 
  2010  0398                     	;# 
  2011  0399                     	;# 
  2012  039A                     	;# 
  2013  039C                     	;# 
  2014  039D                     	;# 
  2015  039E                     	;# 
  2016  039F                     	;# 
  2017  0411                     	;# 
  2018  0411                     	;# 
  2019  0412                     	;# 
  2020  0413                     	;# 
  2021  0414                     	;# 
  2022  0415                     	;# 
  2023  0416                     	;# 
  2024  0417                     	;# 
  2025  0418                     	;# 
  2026  0418                     	;# 
  2027  0419                     	;# 
  2028  041A                     	;# 
  2029  041B                     	;# 
  2030  041C                     	;# 
  2031  041D                     	;# 
  2032  041E                     	;# 
  2033  041F                     	;# 
  2034  0498                     	;# 
  2035  0498                     	;# 
  2036  0499                     	;# 
  2037  049A                     	;# 
  2038  049B                     	;# 
  2039  049B                     	;# 
  2040  049C                     	;# 
  2041  049D                     	;# 
  2042  049E                     	;# 
  2043  049F                     	;# 
  2044  0617                     	;# 
  2045  0618                     	;# 
  2046  0619                     	;# 
  2047  0619                     	;# 
  2048  061A                     	;# 
  2049  061B                     	;# 
  2050  061C                     	;# 
  2051  061C                     	;# 
  2052  061F                     	;# 
  2053  0691                     	;# 
  2054  0692                     	;# 
  2055  0693                     	;# 
  2056  0694                     	;# 
  2057  0695                     	;# 
  2058  0696                     	;# 
  2059  0697                     	;# 
  2060  0698                     	;# 
  2061  0699                     	;# 
  2062  0711                     	;# 
  2063  0712                     	;# 
  2064  0713                     	;# 
  2065  0714                     	;# 
  2066  0715                     	;# 
  2067  0716                     	;# 
  2068  0717                     	;# 
  2069  0718                     	;# 
  2070  0719                     	;# 
  2071  0891                     	;# 
  2072  0891                     	;# 
  2073  0891                     	;# 
  2074  0891                     	;# 
  2075  0891                     	;# 
  2076  0891                     	;# 
  2077  0892                     	;# 
  2078  0892                     	;# 
  2079  0892                     	;# 
  2080  0893                     	;# 
  2081  0893                     	;# 
  2082  0893                     	;# 
  2083  0893                     	;# 
  2084  0893                     	;# 
  2085  0893                     	;# 
  2086  0894                     	;# 
  2087  0894                     	;# 
  2088  0894                     	;# 
  2089  0895                     	;# 
  2090  0895                     	;# 
  2091  0895                     	;# 
  2092  0896                     	;# 
  2093  0896                     	;# 
  2094  0896                     	;# 
  2095  089B                     	;# 
  2096  0911                     	;# 
  2097  0912                     	;# 
  2098  0913                     	;# 
  2099  0914                     	;# 
  2100  0915                     	;# 
  2101  0916                     	;# 
  2102  0918                     	;# 
  2103  0919                     	;# 
  2104  091A                     	;# 
  2105  091B                     	;# 
  2106  091C                     	;# 
  2107  091D                     	;# 
  2108  091E                     	;# 
  2109  091F                     	;# 
  2110  0E0F                     	;# 
  2111  0E10                     	;# 
  2112  0E11                     	;# 
  2113  0E12                     	;# 
  2114  0E13                     	;# 
  2115  0E14                     	;# 
  2116  0E15                     	;# 
  2117  0E16                     	;# 
  2118  0E17                     	;# 
  2119  0E18                     	;# 
  2120  0E19                     	;# 
  2121  0E1A                     	;# 
  2122  0E1B                     	;# 
  2123  0E1C                     	;# 
  2124  0E1D                     	;# 
  2125  0E1E                     	;# 
  2126  0E1F                     	;# 
  2127  0E20                     	;# 
  2128  0E21                     	;# 
  2129  0E22                     	;# 
  2130  0E24                     	;# 
  2131  0E25                     	;# 
  2132  0E28                     	;# 
  2133  0E29                     	;# 
  2134  0E2A                     	;# 
  2135  0E2B                     	;# 
  2136  0E2C                     	;# 
  2137  0E2D                     	;# 
  2138  0E2E                     	;# 
  2139  0E2F                     	;# 
  2140  0E90                     	;# 
  2141  0E91                     	;# 
  2142  0E92                     	;# 
  2143  0E94                     	;# 
  2144  0E95                     	;# 
  2145  0E9C                     	;# 
  2146  0E9D                     	;# 
  2147  0E9E                     	;# 
  2148  0E9F                     	;# 
  2149  0EA0                     	;# 
  2150  0EA1                     	;# 
  2151  0EA2                     	;# 
  2152  0EA3                     	;# 
  2153  0EA4                     	;# 
  2154  0EA5                     	;# 
  2155  0EA6                     	;# 
  2156  0EA7                     	;# 
  2157  0F0F                     	;# 
  2158  0F10                     	;# 
  2159  0F11                     	;# 
  2160  0F12                     	;# 
  2161  0F13                     	;# 
  2162  0F14                     	;# 
  2163  0F15                     	;# 
  2164  0F16                     	;# 
  2165  0F17                     	;# 
  2166  0F18                     	;# 
  2167  0F19                     	;# 
  2168  0F1A                     	;# 
  2169  0F1B                     	;# 
  2170  0F1C                     	;# 
  2171  0F1D                     	;# 
  2172  0F1E                     	;# 
  2173  0F1F                     	;# 
  2174  0F20                     	;# 
  2175  0F21                     	;# 
  2176  0F22                     	;# 
  2177  0F23                     	;# 
  2178  0F24                     	;# 
  2179  0F25                     	;# 
  2180  0F26                     	;# 
  2181  0F27                     	;# 
  2182  0F28                     	;# 
  2183  0F29                     	;# 
  2184  0F2A                     	;# 
  2185  0F2B                     	;# 
  2186  0F2C                     	;# 
  2187  0F2D                     	;# 
  2188  0F2E                     	;# 
  2189  0F2F                     	;# 
  2190  0F30                     	;# 
  2191  0F31                     	;# 
  2192  0F32                     	;# 
  2193  0F33                     	;# 
  2194  0F34                     	;# 
  2195  0F35                     	;# 
  2196  0F36                     	;# 
  2197  0F37                     	;# 
  2198  0FE4                     	;# 
  2199  0FE5                     	;# 
  2200  0FE6                     	;# 
  2201  0FE7                     	;# 
  2202  0FE8                     	;# 
  2203  0FE9                     	;# 
  2204  0FEA                     	;# 
  2205  0FEB                     	;# 
  2206  0FED                     	;# 
  2207  0FEE                     	;# 
  2208  0FEF                     	;# 
  2209  0000                     	;# 
  2210  0001                     	;# 
  2211  0002                     	;# 
  2212  0003                     	;# 
  2213  0004                     	;# 
  2214  0005                     	;# 
  2215  0006                     	;# 
  2216  0007                     	;# 
  2217  0008                     	;# 
  2218  0009                     	;# 
  2219  000A                     	;# 
  2220  000B                     	;# 
  2221  000C                     	;# 
  2222  000D                     	;# 
  2223  000E                     	;# 
  2224  0010                     	;# 
  2225  0011                     	;# 
  2226  0012                     	;# 
  2227  0013                     	;# 
  2228  0014                     	;# 
  2229  0015                     	;# 
  2230  0015                     	;# 
  2231  0016                     	;# 
  2232  0016                     	;# 
  2233  0017                     	;# 
  2234  0018                     	;# 
  2235  0019                     	;# 
  2236  0019                     	;# 
  2237  001A                     	;# 
  2238  001B                     	;# 
  2239  001C                     	;# 
  2240  001D                     	;# 
  2241  001E                     	;# 
  2242  001F                     	;# 
  2243  008C                     	;# 
  2244  008D                     	;# 
  2245  008E                     	;# 
  2246  0090                     	;# 
  2247  0091                     	;# 
  2248  0092                     	;# 
  2249  0093                     	;# 
  2250  0094                     	;# 
  2251  0097                     	;# 
  2252  009B                     	;# 
  2253  009B                     	;# 
  2254  009C                     	;# 
  2255  009D                     	;# 
  2256  009E                     	;# 
  2257  009F                     	;# 
  2258  010C                     	;# 
  2259  010D                     	;# 
  2260  010E                     	;# 
  2261  0111                     	;# 
  2262  0112                     	;# 
  2263  0113                     	;# 
  2264  0114                     	;# 
  2265  0115                     	;# 
  2266  0116                     	;# 
  2267  0117                     	;# 
  2268  0118                     	;# 
  2269  0119                     	;# 
  2270  018C                     	;# 
  2271  018D                     	;# 
  2272  018E                     	;# 
  2273  0197                     	;# 
  2274  0199                     	;# 
  2275  0199                     	;# 
  2276  0199                     	;# 
  2277  019A                     	;# 
  2278  019A                     	;# 
  2279  019A                     	;# 
  2280  019B                     	;# 
  2281  019B                     	;# 
  2282  019B                     	;# 
  2283  019B                     	;# 
  2284  019B                     	;# 
  2285  019C                     	;# 
  2286  019C                     	;# 
  2287  019C                     	;# 
  2288  019D                     	;# 
  2289  019D                     	;# 
  2290  019D                     	;# 
  2291  019E                     	;# 
  2292  019E                     	;# 
  2293  019E                     	;# 
  2294  019F                     	;# 
  2295  019F                     	;# 
  2296  019F                     	;# 
  2297  019F                     	;# 
  2298  019F                     	;# 
  2299  020C                     	;# 
  2300  020D                     	;# 
  2301  020E                     	;# 
  2302  0211                     	;# 
  2303  0211                     	;# 
  2304  0212                     	;# 
  2305  0212                     	;# 
  2306  0213                     	;# 
  2307  0213                     	;# 
  2308  0214                     	;# 
  2309  0214                     	;# 
  2310  0215                     	;# 
  2311  0215                     	;# 
  2312  0215                     	;# 
  2313  0215                     	;# 
  2314  0216                     	;# 
  2315  0216                     	;# 
  2316  0217                     	;# 
  2317  0217                     	;# 
  2318  0219                     	;# 
  2319  021A                     	;# 
  2320  021B                     	;# 
  2321  021C                     	;# 
  2322  021D                     	;# 
  2323  021D                     	;# 
  2324  021E                     	;# 
  2325  021F                     	;# 
  2326  028C                     	;# 
  2327  028D                     	;# 
  2328  028E                     	;# 
  2329  0291                     	;# 
  2330  0291                     	;# 
  2331  0292                     	;# 
  2332  0293                     	;# 
  2333  0294                     	;# 
  2334  0295                     	;# 
  2335  0295                     	;# 
  2336  0296                     	;# 
  2337  0297                     	;# 
  2338  0298                     	;# 
  2339  029F                     	;# 
  2340  030C                     	;# 
  2341  030D                     	;# 
  2342  030E                     	;# 
  2343  0311                     	;# 
  2344  0311                     	;# 
  2345  0312                     	;# 
  2346  0313                     	;# 
  2347  0314                     	;# 
  2348  0315                     	;# 
  2349  0315                     	;# 
  2350  0316                     	;# 
  2351  0317                     	;# 
  2352  0318                     	;# 
  2353  038C                     	;# 
  2354  038D                     	;# 
  2355  038E                     	;# 
  2356  0391                     	;# 
  2357  0392                     	;# 
  2358  0393                     	;# 
  2359  0394                     	;# 
  2360  0395                     	;# 
  2361  0396                     	;# 
  2362  0397                     	;# 
  2363  0398                     	;# 
  2364  0399                     	;# 
  2365  039A                     	;# 
  2366  039C                     	;# 
  2367  039D                     	;# 
  2368  039E                     	;# 
  2369  039F                     	;# 
  2370  0411                     	;# 
  2371  0411                     	;# 
  2372  0412                     	;# 
  2373  0413                     	;# 
  2374  0414                     	;# 
  2375  0415                     	;# 
  2376  0416                     	;# 
  2377  0417                     	;# 
  2378  0418                     	;# 
  2379  0418                     	;# 
  2380  0419                     	;# 
  2381  041A                     	;# 
  2382  041B                     	;# 
  2383  041C                     	;# 
  2384  041D                     	;# 
  2385  041E                     	;# 
  2386  041F                     	;# 
  2387  0498                     	;# 
  2388  0498                     	;# 
  2389  0499                     	;# 
  2390  049A                     	;# 
  2391  049B                     	;# 
  2392  049B                     	;# 
  2393  049C                     	;# 
  2394  049D                     	;# 
  2395  049E                     	;# 
  2396  049F                     	;# 
  2397  0617                     	;# 
  2398  0618                     	;# 
  2399  0619                     	;# 
  2400  0619                     	;# 
  2401  061A                     	;# 
  2402  061B                     	;# 
  2403  061C                     	;# 
  2404  061C                     	;# 
  2405  061F                     	;# 
  2406  0691                     	;# 
  2407  0692                     	;# 
  2408  0693                     	;# 
  2409  0694                     	;# 
  2410  0695                     	;# 
  2411  0696                     	;# 
  2412  0697                     	;# 
  2413  0698                     	;# 
  2414  0699                     	;# 
  2415  0711                     	;# 
  2416  0712                     	;# 
  2417  0713                     	;# 
  2418  0714                     	;# 
  2419  0715                     	;# 
  2420  0716                     	;# 
  2421  0717                     	;# 
  2422  0718                     	;# 
  2423  0719                     	;# 
  2424  0891                     	;# 
  2425  0891                     	;# 
  2426  0891                     	;# 
  2427  0891                     	;# 
  2428  0891                     	;# 
  2429  0891                     	;# 
  2430  0892                     	;# 
  2431  0892                     	;# 
  2432  0892                     	;# 
  2433  0893                     	;# 
  2434  0893                     	;# 
  2435  0893                     	;# 
  2436  0893                     	;# 
  2437  0893                     	;# 
  2438  0893                     	;# 
  2439  0894                     	;# 
  2440  0894                     	;# 
  2441  0894                     	;# 
  2442  0895                     	;# 
  2443  0895                     	;# 
  2444  0895                     	;# 
  2445  0896                     	;# 
  2446  0896                     	;# 
  2447  0896                     	;# 
  2448  089B                     	;# 
  2449  0911                     	;# 
  2450  0912                     	;# 
  2451  0913                     	;# 
  2452  0914                     	;# 
  2453  0915                     	;# 
  2454  0916                     	;# 
  2455  0918                     	;# 
  2456  0919                     	;# 
  2457  091A                     	;# 
  2458  091B                     	;# 
  2459  091C                     	;# 
  2460  091D                     	;# 
  2461  091E                     	;# 
  2462  091F                     	;# 
  2463  0E0F                     	;# 
  2464  0E10                     	;# 
  2465  0E11                     	;# 
  2466  0E12                     	;# 
  2467  0E13                     	;# 
  2468  0E14                     	;# 
  2469  0E15                     	;# 
  2470  0E16                     	;# 
  2471  0E17                     	;# 
  2472  0E18                     	;# 
  2473  0E19                     	;# 
  2474  0E1A                     	;# 
  2475  0E1B                     	;# 
  2476  0E1C                     	;# 
  2477  0E1D                     	;# 
  2478  0E1E                     	;# 
  2479  0E1F                     	;# 
  2480  0E20                     	;# 
  2481  0E21                     	;# 
  2482  0E22                     	;# 
  2483  0E24                     	;# 
  2484  0E25                     	;# 
  2485  0E28                     	;# 
  2486  0E29                     	;# 
  2487  0E2A                     	;# 
  2488  0E2B                     	;# 
  2489  0E2C                     	;# 
  2490  0E2D                     	;# 
  2491  0E2E                     	;# 
  2492  0E2F                     	;# 
  2493  0E90                     	;# 
  2494  0E91                     	;# 
  2495  0E92                     	;# 
  2496  0E94                     	;# 
  2497  0E95                     	;# 
  2498  0E9C                     	;# 
  2499  0E9D                     	;# 
  2500  0E9E                     	;# 
  2501  0E9F                     	;# 
  2502  0EA0                     	;# 
  2503  0EA1                     	;# 
  2504  0EA2                     	;# 
  2505  0EA3                     	;# 
  2506  0EA4                     	;# 
  2507  0EA5                     	;# 
  2508  0EA6                     	;# 
  2509  0EA7                     	;# 
  2510  0F0F                     	;# 
  2511  0F10                     	;# 
  2512  0F11                     	;# 
  2513  0F12                     	;# 
  2514  0F13                     	;# 
  2515  0F14                     	;# 
  2516  0F15                     	;# 
  2517  0F16                     	;# 
  2518  0F17                     	;# 
  2519  0F18                     	;# 
  2520  0F19                     	;# 
  2521  0F1A                     	;# 
  2522  0F1B                     	;# 
  2523  0F1C                     	;# 
  2524  0F1D                     	;# 
  2525  0F1E                     	;# 
  2526  0F1F                     	;# 
  2527  0F20                     	;# 
  2528  0F21                     	;# 
  2529  0F22                     	;# 
  2530  0F23                     	;# 
  2531  0F24                     	;# 
  2532  0F25                     	;# 
  2533  0F26                     	;# 
  2534  0F27                     	;# 
  2535  0F28                     	;# 
  2536  0F29                     	;# 
  2537  0F2A                     	;# 
  2538  0F2B                     	;# 
  2539  0F2C                     	;# 
  2540  0F2D                     	;# 
  2541  0F2E                     	;# 
  2542  0F2F                     	;# 
  2543  0F30                     	;# 
  2544  0F31                     	;# 
  2545  0F32                     	;# 
  2546  0F33                     	;# 
  2547  0F34                     	;# 
  2548  0F35                     	;# 
  2549  0F36                     	;# 
  2550  0F37                     	;# 
  2551  0FE4                     	;# 
  2552  0FE5                     	;# 
  2553  0FE6                     	;# 
  2554  0FE7                     	;# 
  2555  0FE8                     	;# 
  2556  0FE9                     	;# 
  2557  0FEA                     	;# 
  2558  0FEB                     	;# 
  2559  0FED                     	;# 
  2560  0FEE                     	;# 
  2561  0FEF                     	;# 
  2562  0000                     	;# 
  2563  0001                     	;# 
  2564  0002                     	;# 
  2565  0003                     	;# 
  2566  0004                     	;# 
  2567  0005                     	;# 
  2568  0006                     	;# 
  2569  0007                     	;# 
  2570  0008                     	;# 
  2571  0009                     	;# 
  2572  000A                     	;# 
  2573  000B                     	;# 
  2574  000C                     	;# 
  2575  000D                     	;# 
  2576  000E                     	;# 
  2577  0010                     	;# 
  2578  0011                     	;# 
  2579  0012                     	;# 
  2580  0013                     	;# 
  2581  0014                     	;# 
  2582  0015                     	;# 
  2583  0015                     	;# 
  2584  0016                     	;# 
  2585  0016                     	;# 
  2586  0017                     	;# 
  2587  0018                     	;# 
  2588  0019                     	;# 
  2589  0019                     	;# 
  2590  001A                     	;# 
  2591  001B                     	;# 
  2592  001C                     	;# 
  2593  001D                     	;# 
  2594  001E                     	;# 
  2595  001F                     	;# 
  2596  008C                     	;# 
  2597  008D                     	;# 
  2598  008E                     	;# 
  2599  0090                     	;# 
  2600  0091                     	;# 
  2601  0092                     	;# 
  2602  0093                     	;# 
  2603  0094                     	;# 
  2604  0097                     	;# 
  2605  009B                     	;# 
  2606  009B                     	;# 
  2607  009C                     	;# 
  2608  009D                     	;# 
  2609  009E                     	;# 
  2610  009F                     	;# 
  2611  010C                     	;# 
  2612  010D                     	;# 
  2613  010E                     	;# 
  2614  0111                     	;# 
  2615  0112                     	;# 
  2616  0113                     	;# 
  2617  0114                     	;# 
  2618  0115                     	;# 
  2619  0116                     	;# 
  2620  0117                     	;# 
  2621  0118                     	;# 
  2622  0119                     	;# 
  2623  018C                     	;# 
  2624  018D                     	;# 
  2625  018E                     	;# 
  2626  0197                     	;# 
  2627  0199                     	;# 
  2628  0199                     	;# 
  2629  0199                     	;# 
  2630  019A                     	;# 
  2631  019A                     	;# 
  2632  019A                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019B                     	;# 
  2636  019B                     	;# 
  2637  019B                     	;# 
  2638  019C                     	;# 
  2639  019C                     	;# 
  2640  019C                     	;# 
  2641  019D                     	;# 
  2642  019D                     	;# 
  2643  019D                     	;# 
  2644  019E                     	;# 
  2645  019E                     	;# 
  2646  019E                     	;# 
  2647  019F                     	;# 
  2648  019F                     	;# 
  2649  019F                     	;# 
  2650  019F                     	;# 
  2651  019F                     	;# 
  2652  020C                     	;# 
  2653  020D                     	;# 
  2654  020E                     	;# 
  2655  0211                     	;# 
  2656  0211                     	;# 
  2657  0212                     	;# 
  2658  0212                     	;# 
  2659  0213                     	;# 
  2660  0213                     	;# 
  2661  0214                     	;# 
  2662  0214                     	;# 
  2663  0215                     	;# 
  2664  0215                     	;# 
  2665  0215                     	;# 
  2666  0215                     	;# 
  2667  0216                     	;# 
  2668  0216                     	;# 
  2669  0217                     	;# 
  2670  0217                     	;# 
  2671  0219                     	;# 
  2672  021A                     	;# 
  2673  021B                     	;# 
  2674  021C                     	;# 
  2675  021D                     	;# 
  2676  021D                     	;# 
  2677  021E                     	;# 
  2678  021F                     	;# 
  2679  028C                     	;# 
  2680  028D                     	;# 
  2681  028E                     	;# 
  2682  0291                     	;# 
  2683  0291                     	;# 
  2684  0292                     	;# 
  2685  0293                     	;# 
  2686  0294                     	;# 
  2687  0295                     	;# 
  2688  0295                     	;# 
  2689  0296                     	;# 
  2690  0297                     	;# 
  2691  0298                     	;# 
  2692  029F                     	;# 
  2693  030C                     	;# 
  2694  030D                     	;# 
  2695  030E                     	;# 
  2696  0311                     	;# 
  2697  0311                     	;# 
  2698  0312                     	;# 
  2699  0313                     	;# 
  2700  0314                     	;# 
  2701  0315                     	;# 
  2702  0315                     	;# 
  2703  0316                     	;# 
  2704  0317                     	;# 
  2705  0318                     	;# 
  2706  038C                     	;# 
  2707  038D                     	;# 
  2708  038E                     	;# 
  2709  0391                     	;# 
  2710  0392                     	;# 
  2711  0393                     	;# 
  2712  0394                     	;# 
  2713  0395                     	;# 
  2714  0396                     	;# 
  2715  0397                     	;# 
  2716  0398                     	;# 
  2717  0399                     	;# 
  2718  039A                     	;# 
  2719  039C                     	;# 
  2720  039D                     	;# 
  2721  039E                     	;# 
  2722  039F                     	;# 
  2723  0411                     	;# 
  2724  0411                     	;# 
  2725  0412                     	;# 
  2726  0413                     	;# 
  2727  0414                     	;# 
  2728  0415                     	;# 
  2729  0416                     	;# 
  2730  0417                     	;# 
  2731  0418                     	;# 
  2732  0418                     	;# 
  2733  0419                     	;# 
  2734  041A                     	;# 
  2735  041B                     	;# 
  2736  041C                     	;# 
  2737  041D                     	;# 
  2738  041E                     	;# 
  2739  041F                     	;# 
  2740  0498                     	;# 
  2741  0498                     	;# 
  2742  0499                     	;# 
  2743  049A                     	;# 
  2744  049B                     	;# 
  2745  049B                     	;# 
  2746  049C                     	;# 
  2747  049D                     	;# 
  2748  049E                     	;# 
  2749  049F                     	;# 
  2750  0617                     	;# 
  2751  0618                     	;# 
  2752  0619                     	;# 
  2753  0619                     	;# 
  2754  061A                     	;# 
  2755  061B                     	;# 
  2756  061C                     	;# 
  2757  061C                     	;# 
  2758  061F                     	;# 
  2759  0691                     	;# 
  2760  0692                     	;# 
  2761  0693                     	;# 
  2762  0694                     	;# 
  2763  0695                     	;# 
  2764  0696                     	;# 
  2765  0697                     	;# 
  2766  0698                     	;# 
  2767  0699                     	;# 
  2768  0711                     	;# 
  2769  0712                     	;# 
  2770  0713                     	;# 
  2771  0714                     	;# 
  2772  0715                     	;# 
  2773  0716                     	;# 
  2774  0717                     	;# 
  2775  0718                     	;# 
  2776  0719                     	;# 
  2777  0891                     	;# 
  2778  0891                     	;# 
  2779  0891                     	;# 
  2780  0891                     	;# 
  2781  0891                     	;# 
  2782  0891                     	;# 
  2783  0892                     	;# 
  2784  0892                     	;# 
  2785  0892                     	;# 
  2786  0893                     	;# 
  2787  0893                     	;# 
  2788  0893                     	;# 
  2789  0893                     	;# 
  2790  0893                     	;# 
  2791  0893                     	;# 
  2792  0894                     	;# 
  2793  0894                     	;# 
  2794  0894                     	;# 
  2795  0895                     	;# 
  2796  0895                     	;# 
  2797  0895                     	;# 
  2798  0896                     	;# 
  2799  0896                     	;# 
  2800  0896                     	;# 
  2801  089B                     	;# 
  2802  0911                     	;# 
  2803  0912                     	;# 
  2804  0913                     	;# 
  2805  0914                     	;# 
  2806  0915                     	;# 
  2807  0916                     	;# 
  2808  0918                     	;# 
  2809  0919                     	;# 
  2810  091A                     	;# 
  2811  091B                     	;# 
  2812  091C                     	;# 
  2813  091D                     	;# 
  2814  091E                     	;# 
  2815  091F                     	;# 
  2816  0E0F                     	;# 
  2817  0E10                     	;# 
  2818  0E11                     	;# 
  2819  0E12                     	;# 
  2820  0E13                     	;# 
  2821  0E14                     	;# 
  2822  0E15                     	;# 
  2823  0E16                     	;# 
  2824  0E17                     	;# 
  2825  0E18                     	;# 
  2826  0E19                     	;# 
  2827  0E1A                     	;# 
  2828  0E1B                     	;# 
  2829  0E1C                     	;# 
  2830  0E1D                     	;# 
  2831  0E1E                     	;# 
  2832  0E1F                     	;# 
  2833  0E20                     	;# 
  2834  0E21                     	;# 
  2835  0E22                     	;# 
  2836  0E24                     	;# 
  2837  0E25                     	;# 
  2838  0E28                     	;# 
  2839  0E29                     	;# 
  2840  0E2A                     	;# 
  2841  0E2B                     	;# 
  2842  0E2C                     	;# 
  2843  0E2D                     	;# 
  2844  0E2E                     	;# 
  2845  0E2F                     	;# 
  2846  0E90                     	;# 
  2847  0E91                     	;# 
  2848  0E92                     	;# 
  2849  0E94                     	;# 
  2850  0E95                     	;# 
  2851  0E9C                     	;# 
  2852  0E9D                     	;# 
  2853  0E9E                     	;# 
  2854  0E9F                     	;# 
  2855  0EA0                     	;# 
  2856  0EA1                     	;# 
  2857  0EA2                     	;# 
  2858  0EA3                     	;# 
  2859  0EA4                     	;# 
  2860  0EA5                     	;# 
  2861  0EA6                     	;# 
  2862  0EA7                     	;# 
  2863  0F0F                     	;# 
  2864  0F10                     	;# 
  2865  0F11                     	;# 
  2866  0F12                     	;# 
  2867  0F13                     	;# 
  2868  0F14                     	;# 
  2869  0F15                     	;# 
  2870  0F16                     	;# 
  2871  0F17                     	;# 
  2872  0F18                     	;# 
  2873  0F19                     	;# 
  2874  0F1A                     	;# 
  2875  0F1B                     	;# 
  2876  0F1C                     	;# 
  2877  0F1D                     	;# 
  2878  0F1E                     	;# 
  2879  0F1F                     	;# 
  2880  0F20                     	;# 
  2881  0F21                     	;# 
  2882  0F22                     	;# 
  2883  0F23                     	;# 
  2884  0F24                     	;# 
  2885  0F25                     	;# 
  2886  0F26                     	;# 
  2887  0F27                     	;# 
  2888  0F28                     	;# 
  2889  0F29                     	;# 
  2890  0F2A                     	;# 
  2891  0F2B                     	;# 
  2892  0F2C                     	;# 
  2893  0F2D                     	;# 
  2894  0F2E                     	;# 
  2895  0F2F                     	;# 
  2896  0F30                     	;# 
  2897  0F31                     	;# 
  2898  0F32                     	;# 
  2899  0F33                     	;# 
  2900  0F34                     	;# 
  2901  0F35                     	;# 
  2902  0F36                     	;# 
  2903  0F37                     	;# 
  2904  0FE4                     	;# 
  2905  0FE5                     	;# 
  2906  0FE6                     	;# 
  2907  0FE7                     	;# 
  2908  0FE8                     	;# 
  2909  0FE9                     	;# 
  2910  0FEA                     	;# 
  2911  0FEB                     	;# 
  2912  0FED                     	;# 
  2913  0FEE                     	;# 
  2914  0FEF                     	;# 
  2915                           
  2916                           	psect	nvBANK0
  2917  003A                     __pnvBANK0:	
  2918  003A                     _IOCAF4_InterruptHandler:	
  2919  003A                     	ds	2
  2920  003C                     _i2c1_driver_i2cISR:	
  2921  003C                     	ds	2
  2922  0011                     _PIR1bits	set	17
  2923  000B                     _INTCONbits	set	11
  2924  0010                     _PIR0bits	set	16
  2925  008E                     _TRISC	set	142
  2926  008D                     _TRISB	set	141
  2927  008C                     _TRISA	set	140
  2928  0097                     _WDTCON	set	151
  2929  0091                     _PIE1bits	set	145
  2930  0090                     _PIE0bits	set	144
  2931  010E                     _LATCbits	set	270
  2932  010C                     _LATAbits	set	268
  2933  010E                     _LATC	set	270
  2934  010D                     _LATB	set	269
  2935  010C                     _LATA	set	268
  2936  018C                     _ANSELA	set	396
  2937  018D                     _ANSELB	set	397
  2938  018E                     _ANSELC	set	398
  2939  0214                     _SSPSTATbits	set	532
  2940  0211                     _SSPBUF	set	529
  2941  0214                     _SSP1STATbits	set	532
  2942  0213                     _SSP1MSK	set	531
  2943  0211                     _SSP1BUF	set	529
  2944  0216                     _SSP1CON2bits	set	534
  2945  0212                     _SSP1ADD	set	530
  2946  0216                     _SSP1CON2	set	534
  2947  0215                     _SSP1CON1	set	533
  2948  0214                     _SSP1STAT	set	532
  2949  0215                     _SSP1CON1bits	set	533
  2950  020E                     _WPUC	set	526
  2951  020C                     _WPUA	set	524
  2952  020D                     _WPUB	set	525
  2953  028E                     _ODCONC	set	654
  2954  028D                     _ODCONB	set	653
  2955  028C                     _ODCONA	set	652
  2956  030E                     _SLRCONC	set	782
  2957  030D                     _SLRCONB	set	781
  2958  030C                     _SLRCONA	set	780
  2959  0391                     _IOCAPbits	set	913
  2960  0392                     _IOCANbits	set	914
  2961  0393                     _IOCAFbits	set	915
  2962  0916                     _PMD5	set	2326
  2963  0915                     _PMD4	set	2325
  2964  0914                     _PMD3	set	2324
  2965  0913                     _PMD2	set	2323
  2966  0912                     _PMD1	set	2322
  2967  0911                     _PMD0	set	2321
  2968  091E                     _OSCTUNE	set	2334
  2969  091F                     _OSCFRQ	set	2335
  2970  091D                     _OSCEN	set	2333
  2971  091B                     _OSCCON3	set	2331
  2972  0919                     _OSCCON1	set	2329
  2973  0E21                     _SSP1DATPPS	set	3617
  2974  0E20                     _SSP1CLKPPS	set	3616
  2975  0EA1                     _RC1PPS	set	3745
  2976  0EA0                     _RC0PPS	set	3744
  2977                           
  2978                           ; #config settings
  2979  0000                     
  2980                           	psect	cinit
  2981  0027                     start_initialization:	
  2982  0027                     __initialization:	
  2983                           
  2984                           ; Clear objects allocated to BANK0
  2985  0027  3020               	movlw	low __pbssBANK0
  2986  0028  0084               	movwf	4
  2987  0029  3000               	movlw	high __pbssBANK0
  2988  002A  0085               	movwf	5
  2989  002B  3014               	movlw	20
  2990  002C  3185  251A  3180   	fcall	clear_ram0
  2991                           
  2992                           ; Clear objects allocated to BANK1
  2993  002F  30A0               	movlw	low __pbssBANK1
  2994  0030  0084               	movwf	4
  2995  0031  3000               	movlw	high __pbssBANK1
  2996  0032  0085               	movwf	5
  2997  0033  3044               	movlw	68
  2998  0034  3185  251A         	fcall	clear_ram0
  2999  0036                     end_of_initialization:	
  3000                           ;End of C runtime variable initialization code
  3001                           
  3002  0036                     __end_of__initialization:	
  3003  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3004  0037  0020               	movlb	0
  3005  0038  3182  2AEA         	ljmp	_main	;jump to C main() function
  3006                           
  3007                           	psect	bssBANK0
  3008  0020                     __pbssBANK0:	
  3009  0020                     _gesture_motion_:	
  3010  0020                     	ds	2
  3011  0022                     _gesture_state_:	
  3012  0022                     	ds	2
  3013  0024                     _gesture_far_count_:	
  3014  0024                     	ds	2
  3015  0026                     _gesture_near_count_:	
  3016  0026                     	ds	2
  3017  0028                     _gesture_lr_count_:	
  3018  0028                     	ds	2
  3019  002A                     _gesture_ud_count_:	
  3020  002A                     	ds	2
  3021  002C                     _gesture_lr_delta_:	
  3022  002C                     	ds	2
  3023  002E                     _gesture_ud_delta_:	
  3024  002E                     	ds	2
  3025  0030                     _i2c1_driver_busCollisionISR:	
  3026  0030                     	ds	2
  3027  0032                     _b_i2c_error_flag:	
  3028  0032                     	ds	1
  3029  0033                     _handleGestureFlag:	
  3030  0033                     	ds	1
  3031                           
  3032                           	psect	bssBANK1
  3033  00A0                     __pbssBANK1:	
  3034  00A0                     _gesture_data_:	
  3035  00A0                     	ds	68
  3036                           
  3037                           	psect	clrtext
  3038  051A                     clear_ram0:	
  3039                           ;	Called with FSR0 containing the base address, and
  3040                           ;	WREG with the size to clear
  3041                           
  3042  051A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3043  051B                     clrloop0:	
  3044  051B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3045  051C  3101               	addfsr 0,1
  3046  051D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3047  051E  2D1B               	goto	clrloop0	;have we reached the end yet?
  3048  051F  3400               	retlw	0	;all done for this memory range, return
  3049                           
  3050                           	psect	cstackCOMMON
  3051  0070                     __pcstackCOMMON:	
  3052  0070                     ?_PIN_MANAGER_IOC:	
  3053  0070                     ??_PIN_MANAGER_IOC:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  0070                     ?_PMD_Initialize:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059  0070                     ??_PMD_Initialize:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0070                     ?_PIN_MANAGER_Initialize:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0070                     ?_OSCILLATOR_Initialize:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068  0070                     ??_OSCILLATOR_Initialize:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0070                     ?_WDT_Initialize:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  0070                     ??_WDT_Initialize:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0070                     ?_IOCAF4_SetInterruptHandler:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0070                     ?_IOCAF4_DefaultInterruptHandler:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0070                     ??_IOCAF4_DefaultInterruptHandler:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  0070                     ?_IOCAF4_ISR:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0070                     ??_IOCAF4_ISR:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0070                     ?_initialize:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  0070                     ?_enableGestureSensor:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  0070                     ?_InitI2C:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  0070                     ??_InitI2C:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  0070                     ?_wireReadDataByte:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  0070                     ?_setLEDDrive:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  0070                     ?_setProximityGain:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  0070                     ?_setAmbientLightGain:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  0070                     ?_setProxIntLowThresh:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  0070                     ?_setProxIntHighThresh:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  0070                     ?_setGestureEnterThresh:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  0070                     ?_setGestureExitThresh:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  0070                     ?_setGestureGain:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  0070                     ?_setGestureLEDDrive:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  0070                     ?_setGestureWaitTime:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  0070                     ?_setGestureIntEnable:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  0070                     ?_getMode:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0070                     ?_resetGestureParameters:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0070                     ??_resetGestureParameters:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0070                     ?_setLEDBoost:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0070                     ?_setGestureMode:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0070                     ?_enablePower:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0070                     ?_I2C_Start:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0070                     ??_I2C_Start:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0070                     ?_I2C_Write_Byte:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0070                     ??_I2C_Write_Byte:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0070                     ?_I2C_ReStart:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0070                     ??_I2C_ReStart:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0070                     ?_I2C_Read_Byte:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0070                     ??_I2C_Read_Byte:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0070                     ?_I2C_Send_NACK:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0070                     ??_I2C_Send_NACK:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0070                     ?_I2C_Stop:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0070                     ??_I2C_Stop:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0070                     ?_INTERRUPT_InterruptManager:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0070                     ??_INTERRUPT_InterruptManager:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0070                     ?_SYSTEM_Initialize:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0070                     ?_i2c1_driver_setI2cISR:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0070                     ?_GestureInterruptHandler:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0070                     ??_GestureInterruptHandler:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0070                     ?_I2CDriverHandler:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0070                     ??_I2CDriverHandler:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218  0070                     ?_main:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221  0070                     I2C_Write_Byte@Byte:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224  0070                     IOCAF4_SetInterruptHandler@InterruptHandler:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0070                     i2c1_driver_setI2cISR@handler:	
  3228                           ; 2 bytes @ 0x0
  3229                           
  3230                           
  3231                           ; 2 bytes @ 0x0
  3232  0070                     	ds	1
  3233  0071                     ?_wireWriteDataByte:	
  3234  0071                     wireWriteDataByte@val:	
  3235                           ; 2 bytes @ 0x1
  3236                           
  3237                           
  3238                           ; 1 bytes @ 0x1
  3239  0071                     	ds	1
  3240  0072                     ??_PIN_MANAGER_Initialize:	
  3241  0072                     ??_IOCAF4_SetInterruptHandler:	
  3242                           ; 1 bytes @ 0x2
  3243                           
  3244  0072                     ??_SYSTEM_Initialize:	
  3245                           ; 1 bytes @ 0x2
  3246                           
  3247  0072                     ??_i2c1_driver_setI2cISR:	
  3248                           ; 1 bytes @ 0x2
  3249                           
  3250                           
  3251                           ; 1 bytes @ 0x2
  3252  0072                     	ds	2
  3253  0074                     ??_wireWriteDataByte:	
  3254  0074                     wireWriteDataByte@reg:	
  3255                           ; 1 bytes @ 0x4
  3256                           
  3257  0074                     I2C_Read_Byte@count:	
  3258                           ; 1 bytes @ 0x4
  3259                           
  3260                           
  3261                           ; 4 bytes @ 0x4
  3262  0074                     	ds	1
  3263  0075                     ??_setProxIntLowThresh:	
  3264  0075                     ??_setProxIntHighThresh:	
  3265                           ; 1 bytes @ 0x5
  3266                           
  3267  0075                     ?_setLightIntLowThreshold:	
  3268                           ; 1 bytes @ 0x5
  3269                           
  3270  0075                     ?_setLightIntHighThreshold:	
  3271                           ; 1 bytes @ 0x5
  3272                           
  3273  0075                     ??_setGestureEnterThresh:	
  3274                           ; 1 bytes @ 0x5
  3275                           
  3276  0075                     ??_setGestureExitThresh:	
  3277                           ; 1 bytes @ 0x5
  3278                           
  3279  0075                     setLightIntLowThreshold@threshold:	
  3280                           ; 1 bytes @ 0x5
  3281                           
  3282  0075                     setLightIntHighThreshold@threshold:	
  3283                           ; 2 bytes @ 0x5
  3284                           
  3285                           
  3286                           ; 2 bytes @ 0x5
  3287  0075                     	ds	1
  3288  0076                     setProxIntLowThresh@threshold:	
  3289  0076                     setProxIntHighThresh@threshold:	
  3290                           ; 1 bytes @ 0x6
  3291                           
  3292  0076                     setGestureEnterThresh@threshold:	
  3293                           ; 1 bytes @ 0x6
  3294                           
  3295  0076                     setGestureExitThresh@threshold:	
  3296                           ; 1 bytes @ 0x6
  3297                           
  3298                           
  3299                           ; 1 bytes @ 0x6
  3300  0076                     	ds	1
  3301  0077                     ??_setLightIntLowThreshold:	
  3302  0077                     ??_setLightIntHighThreshold:	
  3303                           ; 1 bytes @ 0x7
  3304                           
  3305                           
  3306                           ; 1 bytes @ 0x7
  3307  0077                     	ds	1
  3308  0078                     ??_wireReadDataByte:	
  3309  0078                     setLightIntLowThreshold@val_low:	
  3310                           ; 1 bytes @ 0x8
  3311                           
  3312  0078                     setLightIntHighThreshold@val_low:	
  3313                           ; 1 bytes @ 0x8
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0x8
  3317  0078                     	ds	1
  3318  0079                     setLightIntLowThreshold@val_high:	
  3319  0079                     setLightIntHighThreshold@val_high:	
  3320                           ; 1 bytes @ 0x9
  3321                           
  3322  0079                     wireReadDataByte@reg:	
  3323                           ; 1 bytes @ 0x9
  3324                           
  3325                           
  3326                           ; 1 bytes @ 0x9
  3327  0079                     	ds	1
  3328  007A                     wireReadDataByte@val:	
  3329                           
  3330                           ; 1 bytes @ 0xA
  3331  007A                     	ds	1
  3332  007B                     ??_setLEDDrive:	
  3333  007B                     ??_setProximityGain:	
  3334                           ; 1 bytes @ 0xB
  3335                           
  3336  007B                     ??_setAmbientLightGain:	
  3337                           ; 1 bytes @ 0xB
  3338                           
  3339  007B                     ??_setGestureGain:	
  3340                           ; 1 bytes @ 0xB
  3341                           
  3342  007B                     ??_setGestureLEDDrive:	
  3343                           ; 1 bytes @ 0xB
  3344                           
  3345  007B                     ??_setGestureWaitTime:	
  3346                           ; 1 bytes @ 0xB
  3347                           
  3348  007B                     ??_setGestureIntEnable:	
  3349                           ; 1 bytes @ 0xB
  3350                           
  3351  007B                     ??_getMode:	
  3352                           ; 1 bytes @ 0xB
  3353                           
  3354  007B                     ??_setLEDBoost:	
  3355                           ; 1 bytes @ 0xB
  3356                           
  3357  007B                     ??_setGestureMode:	
  3358                           ; 1 bytes @ 0xB
  3359                           
  3360                           
  3361                           ; 1 bytes @ 0xB
  3362  007B                     	ds	1
  3363  007C                     getMode@enable_value:	
  3364  007C                     setAmbientLightGain@drive:	
  3365                           ; 1 bytes @ 0xC
  3366                           
  3367  007C                     setGestureWaitTime@time:	
  3368                           ; 1 bytes @ 0xC
  3369                           
  3370  007C                     setGestureIntEnable@val:	
  3371                           ; 1 bytes @ 0xC
  3372                           
  3373  007C                     setGestureMode@mode:	
  3374                           ; 1 bytes @ 0xC
  3375                           
  3376                           
  3377                           ; 1 bytes @ 0xC
  3378  007C                     	ds	1
  3379  007D                     ?_setMode:	
  3380  007D                     setMode@enable:	
  3381                           ; 1 bytes @ 0xD
  3382                           
  3383  007D                     setAmbientLightGain@val:	
  3384                           ; 1 bytes @ 0xD
  3385                           
  3386  007D                     setGestureWaitTime@val:	
  3387                           ; 1 bytes @ 0xD
  3388                           
  3389  007D                     setGestureIntEnable@enable:	
  3390                           ; 1 bytes @ 0xD
  3391                           
  3392  007D                     setGestureMode@val:	
  3393                           ; 1 bytes @ 0xD
  3394                           
  3395                           
  3396                           ; 1 bytes @ 0xD
  3397  007D                     	ds	1
  3398  007E                     ??_enablePower:	
  3399  007E                     ??_main:	
  3400                           ; 1 bytes @ 0xE
  3401                           
  3402                           
  3403                           	psect	cstackBANK0
  3404  0034                     __pcstackBANK0:	
  3405                           ; 1 bytes @ 0xE
  3406                           
  3407  0034                     ??_setMode:	
  3408  0034                     setLEDDrive@val:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0034                     setProximityGain@val:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0034                     setGestureGain@val:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0034                     setGestureLEDDrive@val:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0034                     setLEDBoost@val:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423                           
  3424                           ; 1 bytes @ 0x0
  3425  0034                     	ds	1
  3426  0035                     setLEDDrive@drive:	
  3427  0035                     setProximityGain@drive:	
  3428                           ; 1 bytes @ 0x1
  3429                           
  3430  0035                     setGestureGain@gain:	
  3431                           ; 1 bytes @ 0x1
  3432                           
  3433  0035                     setGestureLEDDrive@drive:	
  3434                           ; 1 bytes @ 0x1
  3435                           
  3436  0035                     setLEDBoost@boost:	
  3437                           ; 1 bytes @ 0x1
  3438                           
  3439                           
  3440                           ; 1 bytes @ 0x1
  3441  0035                     	ds	1
  3442  0036                     setMode@reg_val:	
  3443                           
  3444                           ; 1 bytes @ 0x2
  3445  0036                     	ds	1
  3446  0037                     setMode@mode:	
  3447                           
  3448                           ; 1 bytes @ 0x3
  3449  0037                     	ds	1
  3450  0038                     ??_initialize:	
  3451  0038                     ??_enableGestureSensor:	
  3452                           ; 1 bytes @ 0x4
  3453                           
  3454                           
  3455                           ; 1 bytes @ 0x4
  3456  0038                     	ds	1
  3457  0039                     initialize@id:	
  3458  0039                     enableGestureSensor@interrupts:	
  3459                           ; 1 bytes @ 0x5
  3460                           
  3461                           
  3462                           ; 1 bytes @ 0x5
  3463  0039                     	ds	1
  3464                           
  3465                           	psect	maintext
  3466  02EA                     __pmaintext:	
  3467 ;;
  3468 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3469 ;;
  3470 ;; *************** function _main *****************
  3471 ;; Defined at:
  3472 ;;		line 60 in file "main.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0, pclath, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : B1F/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels required when called:   10
  3492 ;; This function calls:
  3493 ;;		_IOCAF4_SetInterruptHandler
  3494 ;;		_SYSTEM_Initialize
  3495 ;;		_enableGestureSensor
  3496 ;;		_i2c1_driver_setI2cISR
  3497 ;;		_initialize
  3498 ;; This function is called by:
  3499 ;;		Startup code after reset
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _main
  3505  02EA                     _main:	
  3506                           
  3507                           ;main.c: 63:     SYSTEM_Initialize();
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3511  02EA  3184  24F5  3182   	fcall	_SYSTEM_Initialize
  3512                           
  3513                           ;main.c: 69:     (INTCONbits.GIE = 1);
  3514  02ED  178B               	bsf	11,7	;volatile
  3515                           
  3516                           ;main.c: 72:     (INTCONbits.PEIE = 1);
  3517  02EE  170B               	bsf	11,6	;volatile
  3518                           
  3519                           ;main.c: 74:     IOCAF4_SetInterruptHandler(GestureInterruptHandler);
  3520  02EF  303A               	movlw	low _GestureInterruptHandler
  3521  02F0  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  3522  02F1  3005               	movlw	high _GestureInterruptHandler
  3523  02F2  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  3524  02F3  3185  2526  3182   	fcall	_IOCAF4_SetInterruptHandler
  3525                           
  3526                           ;main.c: 75:     i2c1_driver_setI2cISR(I2CDriverHandler);
  3527  02F6  3049               	movlw	low _I2CDriverHandler
  3528  02F7  00F0               	movwf	i2c1_driver_setI2cISR@handler
  3529  02F8  3005               	movlw	high _I2CDriverHandler
  3530  02F9  00F1               	movwf	i2c1_driver_setI2cISR@handler+1
  3531  02FA  3185  2520  3182   	fcall	_i2c1_driver_setI2cISR
  3532                           
  3533                           ;main.c: 86:     if(initialize()){
  3534  02FD  3180  203A  3182   	fcall	_initialize
  3535  0300  3A00               	xorlw	0
  3536  0301  1903               	skipnz
  3537  0302  2B05               	goto	l3273
  3538                           
  3539                           ;main.c: 87:         do { LATAbits.LATA2 = 1; } while(0);
  3540  0303  0022               	movlb	2	; select bank2
  3541  0304  150C               	bsf	12,2	;volatile
  3542  0305                     l3273:	
  3543                           
  3544                           ;main.c: 90:     if(enableGestureSensor(1)){
  3545  0305  3001               	movlw	1
  3546  0306  3181  2142  3182   	fcall	_enableGestureSensor
  3547  0309  3A00               	xorlw	0
  3548  030A  1903               	skipnz
  3549  030B  2B0E               	goto	l3275
  3550                           
  3551                           ;main.c: 91:         do { LATAbits.LATA1 = 1; } while(0);
  3552  030C  0022               	movlb	2	; select bank2
  3553  030D  148C               	bsf	12,1	;volatile
  3554  030E                     l3275:	
  3555                           
  3556                           ;main.c: 95:     {;main.c: 96:         if(handleGestureFlag){
  3557  030E  0020               	movlb	0	; select bank0
  3558  030F  0833               	movf	_handleGestureFlag,w
  3559  0310  1903               	btfsc	3,2
  3560  0311  2B0E               	goto	l3275
  3561                           
  3562                           ;main.c: 98:             handleGestureFlag = 0;
  3563  0312  01B3               	clrf	_handleGestureFlag
  3564  0313  2B0E               	goto	l3275
  3565  0314                     __end_of_main:	
  3566                           
  3567                           	psect	text1
  3568  003A                     __ptext1:	
  3569 ;; *************** function _initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 18 in file "APDS9960.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  id              1    5[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      _Bool 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;Total ram usage:        2 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    8
  3592 ;; This function calls:
  3593 ;;		_InitI2C
  3594 ;;		_setAmbientLightGain
  3595 ;;		_setGestureEnterThresh
  3596 ;;		_setGestureExitThresh
  3597 ;;		_setGestureGain
  3598 ;;		_setGestureIntEnable
  3599 ;;		_setGestureLEDDrive
  3600 ;;		_setGestureWaitTime
  3601 ;;		_setLEDDrive
  3602 ;;		_setLightIntHighThreshold
  3603 ;;		_setLightIntLowThreshold
  3604 ;;		_setMode
  3605 ;;		_setProxIntHighThresh
  3606 ;;		_setProxIntLowThresh
  3607 ;;		_setProximityGain
  3608 ;;		_wireReadDataByte
  3609 ;;		_wireWriteDataByte
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _initialize
  3617  003A                     _initialize:	
  3618                           
  3619                           ;APDS9960.c: 23:     InitI2C();
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  3623  003A  3185  2547  3180   	fcall	_InitI2C
  3624                           
  3625                           ;APDS9960.c: 27:     id = wireReadDataByte(0x92);
  3626  003D  3092               	movlw	146
  3627  003E  3184  241E  3180   	fcall	_wireReadDataByte
  3628  0041  0020               	movlb	0	; select bank0
  3629  0042  00B8               	movwf	??_initialize
  3630  0043  0838               	movf	??_initialize,w
  3631  0044  00B9               	movwf	initialize@id
  3632                           
  3633                           ;APDS9960.c: 30:     if( !(id == 0xAB ||id == 0x9C ) )
  3634  0045  30AB               	movlw	171
  3635  0046  0639               	xorwf	initialize@id,w
  3636  0047  1903               	btfsc	3,2
  3637  0048  284F               	goto	l3041
  3638  0049  309C               	movlw	156
  3639  004A  0639               	xorwf	initialize@id,w
  3640  004B  1903               	btfsc	3,2
  3641  004C  284F               	goto	l3041
  3642  004D                     l3037:	
  3643                           
  3644                           ;APDS9960.c: 31:     {;APDS9960.c: 32:      return 0;
  3645  004D  3000               	movlw	0
  3646  004E  0008               	return
  3647  004F                     l3041:	
  3648                           
  3649                           ;APDS9960.c: 35:     setMode(7, 0);
  3650  004F  01FD               	clrf	setMode@enable
  3651  0050  3007               	movlw	7
  3652  0051  3181  21A2  3180   	fcall	_setMode
  3653                           
  3654                           ;APDS9960.c: 37:     wireWriteDataByte(0x81, 219);
  3655  0054  30DB               	movlw	219
  3656  0055  0020               	movlb	0	; select bank0
  3657  0056  00B8               	movwf	??_initialize
  3658  0057  0838               	movf	??_initialize,w
  3659  0058  00F1               	movwf	wireWriteDataByte@val
  3660  0059  3081               	movlw	129
  3661  005A  3184  245A  3180   	fcall	_wireWriteDataByte
  3662                           
  3663                           ;APDS9960.c: 38:     wireWriteDataByte(0x83, 246);
  3664  005D  30F6               	movlw	246
  3665  005E  0020               	movlb	0	; select bank0
  3666  005F  00B8               	movwf	??_initialize
  3667  0060  0838               	movf	??_initialize,w
  3668  0061  00F1               	movwf	wireWriteDataByte@val
  3669  0062  3083               	movlw	131
  3670  0063  3184  245A  3180   	fcall	_wireWriteDataByte
  3671                           
  3672                           ;APDS9960.c: 39:     wireWriteDataByte(0x8E, 0x87);
  3673  0066  3087               	movlw	135
  3674  0067  0020               	movlb	0	; select bank0
  3675  0068  00B8               	movwf	??_initialize
  3676  0069  0838               	movf	??_initialize,w
  3677  006A  00F1               	movwf	wireWriteDataByte@val
  3678  006B  308E               	movlw	142
  3679  006C  3184  245A  3180   	fcall	_wireWriteDataByte
  3680                           
  3681                           ;APDS9960.c: 40:     wireWriteDataByte(0x9D, 0) ;
  3682  006F  01F1               	clrf	wireWriteDataByte@val
  3683  0070  309D               	movlw	157
  3684  0071  3184  245A  3180   	fcall	_wireWriteDataByte
  3685                           
  3686                           ;APDS9960.c: 41:     wireWriteDataByte(0x9E, 0) ;
  3687  0074  01F1               	clrf	wireWriteDataByte@val
  3688  0075  309E               	movlw	158
  3689  0076  3184  245A  3180   	fcall	_wireWriteDataByte
  3690                           
  3691                           ;APDS9960.c: 42:     wireWriteDataByte(0x8D, 0x60) ;
  3692  0079  3060               	movlw	96
  3693  007A  0020               	movlb	0	; select bank0
  3694  007B  00B8               	movwf	??_initialize
  3695  007C  0838               	movf	??_initialize,w
  3696  007D  00F1               	movwf	wireWriteDataByte@val
  3697  007E  308D               	movlw	141
  3698  007F  3184  245A  3180   	fcall	_wireWriteDataByte
  3699                           
  3700                           ;APDS9960.c: 43:     setLEDDrive(0);
  3701  0082  3000               	movlw	0
  3702  0083  3183  233D  3180   	fcall	_setLEDDrive
  3703                           
  3704                           ;APDS9960.c: 44:     setProximityGain(2);
  3705  0086  3002               	movlw	2
  3706  0087  3183  2314  3180   	fcall	_setProximityGain
  3707                           
  3708                           ;APDS9960.c: 45:     setAmbientLightGain(1);
  3709  008A  3001               	movlw	1
  3710  008B  3184  243E  3180   	fcall	_setAmbientLightGain
  3711                           
  3712                           ;APDS9960.c: 46:     if( !setProxIntLowThresh(0) ) {
  3713  008E  3000               	movlw	0
  3714  008F  3184  2486  3180   	fcall	_setProxIntLowThresh
  3715  0092  3A00               	xorlw	0
  3716  0093  1903               	btfsc	3,2
  3717  0094  284D               	goto	l3037
  3718                           
  3719                           ;APDS9960.c: 50:     if( !setProxIntHighThresh(50) ) {
  3720  0095  3032               	movlw	50
  3721  0096  3184  2497  3180   	fcall	_setProxIntHighThresh
  3722  0099  3A00               	xorlw	0
  3723  009A  1903               	btfsc	3,2
  3724  009B  284D               	goto	l3037
  3725                           
  3726                           ;APDS9960.c: 55:     if( !setLightIntLowThreshold(0xFFFF) ) {
  3727  009C  30FF               	movlw	255
  3728  009D  00F5               	movwf	setLightIntLowThreshold@threshold
  3729  009E  30FF               	movlw	255
  3730  009F  00F6               	movwf	setLightIntLowThreshold@threshold+1
  3731  00A0  3183  238E  3180   	fcall	_setLightIntLowThreshold
  3732  00A3  3A00               	xorlw	0
  3733  00A4  1903               	btfsc	3,2
  3734  00A5  284D               	goto	l3037
  3735                           
  3736                           ;APDS9960.c: 58:     if( !setLightIntHighThreshold(0) ) {
  3737  00A6  3000               	movlw	0
  3738  00A7  00F5               	movwf	setLightIntHighThreshold@threshold
  3739  00A8  00F6               	movwf	setLightIntHighThreshold@threshold+1
  3740  00A9  3183  23B2  3180   	fcall	_setLightIntHighThreshold
  3741  00AC  3A00               	xorlw	0
  3742  00AD  1903               	btfsc	3,2
  3743  00AE  284D               	goto	l3037
  3744                           
  3745                           ;APDS9960.c: 62:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  3746  00AF  3011               	movlw	17
  3747  00B0  0020               	movlb	0	; select bank0
  3748  00B1  00B8               	movwf	??_initialize
  3749  00B2  0838               	movf	??_initialize,w
  3750  00B3  00F1               	movwf	wireWriteDataByte@val
  3751  00B4  308C               	movlw	140
  3752  00B5  3184  245A  3180   	fcall	_wireWriteDataByte
  3753  00B8  0871               	movf	?_wireWriteDataByte,w
  3754  00B9  0472               	iorwf	?_wireWriteDataByte+1,w
  3755  00BA  1903               	btfsc	3,2
  3756  00BB  284D               	goto	l3037
  3757                           
  3758                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x90, 0x01) ) {
  3759  00BC  01F1               	clrf	wireWriteDataByte@val
  3760  00BD  0AF1               	incf	wireWriteDataByte@val,f
  3761  00BE  3090               	movlw	144
  3762  00BF  3184  245A  3180   	fcall	_wireWriteDataByte
  3763  00C2  0871               	movf	?_wireWriteDataByte,w
  3764  00C3  0472               	iorwf	?_wireWriteDataByte+1,w
  3765  00C4  1903               	btfsc	3,2
  3766  00C5  284D               	goto	l3037
  3767                           
  3768                           ;APDS9960.c: 69:     if( !wireWriteDataByte(0x9F, 0) ) {
  3769  00C6  01F1               	clrf	wireWriteDataByte@val
  3770  00C7  309F               	movlw	159
  3771  00C8  3184  245A  3180   	fcall	_wireWriteDataByte
  3772  00CB  0871               	movf	?_wireWriteDataByte,w
  3773  00CC  0472               	iorwf	?_wireWriteDataByte+1,w
  3774  00CD  1903               	btfsc	3,2
  3775  00CE  284D               	goto	l3037
  3776                           
  3777                           ;APDS9960.c: 73:     if( !setGestureEnterThresh(40) ) {
  3778  00CF  3028               	movlw	40
  3779  00D0  3184  24B9  3180   	fcall	_setGestureEnterThresh
  3780  00D3  3A00               	xorlw	0
  3781  00D4  1903               	btfsc	3,2
  3782  00D5  284D               	goto	l3037
  3783                           
  3784                           ;APDS9960.c: 77:     if( !setGestureExitThresh(30) ) {
  3785  00D6  301E               	movlw	30
  3786  00D7  3184  24A8  3180   	fcall	_setGestureExitThresh
  3787  00DA  3A00               	xorlw	0
  3788  00DB  1903               	btfsc	3,2
  3789  00DC  284D               	goto	l3037
  3790                           
  3791                           ;APDS9960.c: 80:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  3792  00DD  3040               	movlw	64
  3793  00DE  0020               	movlb	0	; select bank0
  3794  00DF  00B8               	movwf	??_initialize
  3795  00E0  0838               	movf	??_initialize,w
  3796  00E1  00F1               	movwf	wireWriteDataByte@val
  3797  00E2  30A2               	movlw	162
  3798  00E3  3184  245A  3180   	fcall	_wireWriteDataByte
  3799  00E6  0871               	movf	?_wireWriteDataByte,w
  3800  00E7  0472               	iorwf	?_wireWriteDataByte+1,w
  3801  00E8  1903               	btfsc	3,2
  3802  00E9  284D               	goto	l3037
  3803                           
  3804                           ;APDS9960.c: 83:     if( !setGestureGain(2) ) {
  3805  00EA  3002               	movlw	2
  3806  00EB  3182  225C  3180   	fcall	_setGestureGain
  3807  00EE  3A00               	xorlw	0
  3808  00EF  1903               	btfsc	3,2
  3809  00F0  284D               	goto	l3037
  3810                           
  3811                           ;APDS9960.c: 86:     if( !setGestureLEDDrive(0) ) {
  3812  00F1  3000               	movlw	0
  3813  00F2  3182  222B  3180   	fcall	_setGestureLEDDrive
  3814  00F5  3A00               	xorlw	0
  3815  00F6  1903               	btfsc	3,2
  3816  00F7  284D               	goto	l3037
  3817                           
  3818                           ;APDS9960.c: 89:     if( !setGestureWaitTime(1) ) {
  3819  00F8  3001               	movlw	1
  3820  00F9  3183  23D6  3180   	fcall	_setGestureWaitTime
  3821  00FC  3A00               	xorlw	0
  3822  00FD  1903               	btfsc	3,2
  3823  00FE  284D               	goto	l3037
  3824                           
  3825                           ;APDS9960.c: 92:     if( !wireWriteDataByte(0xA4, 0) ) {
  3826  00FF  01F1               	clrf	wireWriteDataByte@val
  3827  0100  30A4               	movlw	164
  3828  0101  3184  245A  3180   	fcall	_wireWriteDataByte
  3829  0104  0871               	movf	?_wireWriteDataByte,w
  3830  0105  0472               	iorwf	?_wireWriteDataByte+1,w
  3831  0106  1903               	btfsc	3,2
  3832  0107  284D               	goto	l3037
  3833                           
  3834                           ;APDS9960.c: 95:     if( !wireWriteDataByte(0xA5, 0) ) {
  3835  0108  01F1               	clrf	wireWriteDataByte@val
  3836  0109  30A5               	movlw	165
  3837  010A  3184  245A  3180   	fcall	_wireWriteDataByte
  3838  010D  0871               	movf	?_wireWriteDataByte,w
  3839  010E  0472               	iorwf	?_wireWriteDataByte+1,w
  3840  010F  1903               	btfsc	3,2
  3841  0110  284D               	goto	l3037
  3842                           
  3843                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA7, 0) ) {
  3844  0111  01F1               	clrf	wireWriteDataByte@val
  3845  0112  30A7               	movlw	167
  3846  0113  3184  245A  3180   	fcall	_wireWriteDataByte
  3847  0116  0871               	movf	?_wireWriteDataByte,w
  3848  0117  0472               	iorwf	?_wireWriteDataByte+1,w
  3849  0118  1903               	btfsc	3,2
  3850  0119  284D               	goto	l3037
  3851                           
  3852                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA9, 0) ) {
  3853  011A  01F1               	clrf	wireWriteDataByte@val
  3854  011B  30A9               	movlw	169
  3855  011C  3184  245A  3180   	fcall	_wireWriteDataByte
  3856  011F  0871               	movf	?_wireWriteDataByte,w
  3857  0120  0472               	iorwf	?_wireWriteDataByte+1,w
  3858  0121  1903               	btfsc	3,2
  3859  0122  284D               	goto	l3037
  3860                           
  3861                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  3862  0123  30C9               	movlw	201
  3863  0124  0020               	movlb	0	; select bank0
  3864  0125  00B8               	movwf	??_initialize
  3865  0126  0838               	movf	??_initialize,w
  3866  0127  00F1               	movwf	wireWriteDataByte@val
  3867  0128  30A6               	movlw	166
  3868  0129  3184  245A  3180   	fcall	_wireWriteDataByte
  3869  012C  0871               	movf	?_wireWriteDataByte,w
  3870  012D  0472               	iorwf	?_wireWriteDataByte+1,w
  3871  012E  1903               	btfsc	3,2
  3872  012F  284D               	goto	l3037
  3873                           
  3874                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xAA, 0) ) {
  3875  0130  01F1               	clrf	wireWriteDataByte@val
  3876  0131  30AA               	movlw	170
  3877  0132  3184  245A  3180   	fcall	_wireWriteDataByte
  3878  0135  0871               	movf	?_wireWriteDataByte,w
  3879  0136  0472               	iorwf	?_wireWriteDataByte+1,w
  3880  0137  1903               	btfsc	3,2
  3881  0138  284D               	goto	l3037
  3882                           
  3883                           ;APDS9960.c: 110:     if( !setGestureIntEnable(0) ) {
  3884  0139  3000               	movlw	0
  3885  013A  3183  2366  3180   	fcall	_setGestureIntEnable
  3886  013D  3A00               	xorlw	0
  3887  013E  1903               	btfsc	3,2
  3888  013F  284D               	goto	l3037
  3889                           
  3890                           ;APDS9960.c: 114:     return 1;
  3891  0140  3001               	movlw	1
  3892  0141  0008               	return
  3893  0142                     __end_of_initialize:	
  3894                           
  3895                           	psect	text2
  3896  0314                     __ptext2:	
  3897 ;; *************** function _setProximityGain *****************
  3898 ;; Defined at:
  3899 ;;		line 186 in file "APDS9960.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  drive           1    wreg     unsigned char 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  drive           1    1[BANK0 ] unsigned char 
  3904 ;;  val             1    0[BANK0 ] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      _Bool 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;Total ram usage:        4 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    6
  3921 ;; This function calls:
  3922 ;;		_wireReadDataByte
  3923 ;;		_wireWriteDataByte
  3924 ;; This function is called by:
  3925 ;;		_initialize
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function _setProximityGain
  3931  0314                     _setProximityGain:	
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  3935                           ;setProximityGain@drive stored from wreg
  3936  0314  0020               	movlb	0	; select bank0
  3937  0315  00B5               	movwf	setProximityGain@drive
  3938                           
  3939                           ;APDS9960.c: 186: _Bool setProximityGain(uint8_t drive);APDS9960.c: 187: {;APDS9960.c: 1
      +                          88:     uint8_t val;;APDS9960.c: 191:     val=wireReadDataByte(0x8F);
  3940  0316  308F               	movlw	143
  3941  0317  3184  241E  3183   	fcall	_wireReadDataByte
  3942  031A  00FB               	movwf	??_setProximityGain
  3943  031B  087B               	movf	??_setProximityGain,w
  3944  031C  0020               	movlb	0	; select bank0
  3945  031D  00B4               	movwf	setProximityGain@val
  3946                           
  3947                           ;APDS9960.c: 193:     drive &= 0b00000011;
  3948  031E  3003               	movlw	3
  3949  031F  00FB               	movwf	??_setProximityGain
  3950  0320  087B               	movf	??_setProximityGain,w
  3951  0321  05B5               	andwf	setProximityGain@drive,f
  3952                           
  3953                           ;APDS9960.c: 194:     drive = drive << 2;
  3954  0322  0835               	movf	setProximityGain@drive,w
  3955  0323  00FB               	movwf	??_setProximityGain
  3956  0324  3001               	movlw	1
  3957  0325                     u1855:	
  3958  0325  35FB               	lslf	??_setProximityGain,f
  3959  0326  3EFF               	addlw	-1
  3960  0327  1D03               	skipz
  3961  0328  2B25               	goto	u1855
  3962  0329  357B               	lslf	??_setProximityGain,w
  3963  032A  00FC               	movwf	??_setProximityGain+1
  3964  032B  087C               	movf	??_setProximityGain+1,w
  3965  032C  00B5               	movwf	setProximityGain@drive
  3966                           
  3967                           ;APDS9960.c: 195:     val &= 0b11110011;
  3968  032D  30F3               	movlw	243
  3969  032E  00FB               	movwf	??_setProximityGain
  3970  032F  087B               	movf	??_setProximityGain,w
  3971  0330  05B4               	andwf	setProximityGain@val,f
  3972                           
  3973                           ;APDS9960.c: 196:     val |= drive;
  3974  0331  0835               	movf	setProximityGain@drive,w
  3975  0332  00FB               	movwf	??_setProximityGain
  3976  0333  087B               	movf	??_setProximityGain,w
  3977  0334  04B4               	iorwf	setProximityGain@val,f
  3978                           
  3979                           ;APDS9960.c: 199:     if( !wireWriteDataByte(0x8F, val) ) {
  3980  0335  0834               	movf	setProximityGain@val,w
  3981  0336  00FB               	movwf	??_setProximityGain
  3982  0337  087B               	movf	??_setProximityGain,w
  3983  0338  00F1               	movwf	wireWriteDataByte@val
  3984  0339  308F               	movlw	143
  3985  033A  3184  245A         	fcall	_wireWriteDataByte
  3986  033C  0008               	return
  3987  033D                     __end_of_setProximityGain:	
  3988                           
  3989                           	psect	text3
  3990  0486                     __ptext3:	
  3991 ;; *************** function _setProxIntLowThresh *****************
  3992 ;; Defined at:
  3993 ;;		line 228 in file "APDS9960.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  threshold       1    wreg     unsigned char 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  threshold       1    6[COMMON] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      _Bool 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, pclath, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    6
  4014 ;; This function calls:
  4015 ;;		_wireWriteDataByte
  4016 ;; This function is called by:
  4017 ;;		_initialize
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function _setProxIntLowThresh
  4023  0486                     _setProxIntLowThresh:	
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  4027                           ;setProxIntLowThresh@threshold stored from wreg
  4028  0486  00F6               	movwf	setProxIntLowThresh@threshold
  4029                           
  4030                           ;APDS9960.c: 228: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 229: {;APDS99
      +                          60.c: 230:     if( !wireWriteDataByte(0x89, threshold) ) {
  4031  0487  0876               	movf	setProxIntLowThresh@threshold,w
  4032  0488  00F5               	movwf	??_setProxIntLowThresh
  4033  0489  0875               	movf	??_setProxIntLowThresh,w
  4034  048A  00F1               	movwf	wireWriteDataByte@val
  4035  048B  3089               	movlw	137
  4036  048C  3184  245A  3184   	fcall	_wireWriteDataByte
  4037  048F  0871               	movf	?_wireWriteDataByte,w
  4038  0490  0472               	iorwf	?_wireWriteDataByte+1,w
  4039  0491  1D03               	btfss	3,2
  4040  0492  2C95               	goto	l2819
  4041                           
  4042                           ;APDS9960.c: 231:         return 0;
  4043  0493  3000               	movlw	0
  4044  0494  0008               	return
  4045  0495                     l2819:	
  4046                           
  4047                           ;APDS9960.c: 234:     return 1;
  4048  0495  3001               	movlw	1
  4049  0496  0008               	return
  4050  0497                     __end_of_setProxIntLowThresh:	
  4051                           
  4052                           	psect	text4
  4053  0497                     __ptext4:	
  4054 ;; *************** function _setProxIntHighThresh *****************
  4055 ;; Defined at:
  4056 ;;		line 238 in file "APDS9960.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  threshold       1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  threshold       1    6[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      _Bool 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    6
  4077 ;; This function calls:
  4078 ;;		_wireWriteDataByte
  4079 ;; This function is called by:
  4080 ;;		_initialize
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _setProxIntHighThresh
  4086  0497                     _setProxIntHighThresh:	
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  4090                           ;setProxIntHighThresh@threshold stored from wreg
  4091  0497  00F6               	movwf	setProxIntHighThresh@threshold
  4092                           
  4093                           ;APDS9960.c: 238: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 239: {;APDS9
      +                          960.c: 240:     if( !wireWriteDataByte(0x8B, threshold) ) {
  4094  0498  0876               	movf	setProxIntHighThresh@threshold,w
  4095  0499  00F5               	movwf	??_setProxIntHighThresh
  4096  049A  0875               	movf	??_setProxIntHighThresh,w
  4097  049B  00F1               	movwf	wireWriteDataByte@val
  4098  049C  308B               	movlw	139
  4099  049D  3184  245A  3184   	fcall	_wireWriteDataByte
  4100  04A0  0871               	movf	?_wireWriteDataByte,w
  4101  04A1  0472               	iorwf	?_wireWriteDataByte+1,w
  4102  04A2  1D03               	btfss	3,2
  4103  04A3  2CA6               	goto	l2829
  4104                           
  4105                           ;APDS9960.c: 241:         return 0;
  4106  04A4  3000               	movlw	0
  4107  04A5  0008               	return
  4108  04A6                     l2829:	
  4109                           
  4110                           ;APDS9960.c: 244:     return 1;
  4111  04A6  3001               	movlw	1
  4112  04A7  0008               	return
  4113  04A8                     __end_of_setProxIntHighThresh:	
  4114                           
  4115                           	psect	text5
  4116  038E                     __ptext5:	
  4117 ;; *************** function _setLightIntLowThreshold *****************
  4118 ;; Defined at:
  4119 ;;		line 248 in file "APDS9960.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  threshold       2    5[COMMON] unsigned short 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  val_high        1    9[COMMON] unsigned char 
  4124 ;;  val_low         1    8[COMMON] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      _Bool 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0, pclath, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;Total ram usage:        5 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    6
  4141 ;; This function calls:
  4142 ;;		_wireWriteDataByte
  4143 ;; This function is called by:
  4144 ;;		_initialize
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _setLightIntLowThreshold
  4150  038E                     _setLightIntLowThreshold:	
  4151                           
  4152                           ;APDS9960.c: 248: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 249: {;A
      +                          PDS9960.c: 250:     uint8_t val_low;;APDS9960.c: 251:     uint8_t val_high;;APDS9960.c: 
      +                          254:     val_low = threshold & 0x00FF;
  4153                           
  4154                           ;incstack = 0
  4155                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  4156  038E  0875               	movf	setLightIntLowThreshold@threshold,w
  4157  038F  00F7               	movwf	??_setLightIntLowThreshold
  4158  0390  0877               	movf	??_setLightIntLowThreshold,w
  4159  0391  00F8               	movwf	setLightIntLowThreshold@val_low
  4160                           
  4161                           ;APDS9960.c: 255:     val_high = (threshold & 0xFF00) >> 8;
  4162  0392  0876               	movf	setLightIntLowThreshold@threshold+1,w
  4163  0393  00F7               	movwf	??_setLightIntLowThreshold
  4164  0394  0877               	movf	??_setLightIntLowThreshold,w
  4165  0395  00F9               	movwf	setLightIntLowThreshold@val_high
  4166                           
  4167                           ;APDS9960.c: 258:     if( !wireWriteDataByte(0x84, val_low) ) {
  4168  0396  0878               	movf	setLightIntLowThreshold@val_low,w
  4169  0397  00F7               	movwf	??_setLightIntLowThreshold
  4170  0398  0877               	movf	??_setLightIntLowThreshold,w
  4171  0399  00F1               	movwf	wireWriteDataByte@val
  4172  039A  3084               	movlw	132
  4173  039B  3184  245A  3183   	fcall	_wireWriteDataByte
  4174  039E  0871               	movf	?_wireWriteDataByte,w
  4175  039F  0472               	iorwf	?_wireWriteDataByte+1,w
  4176  03A0  1D03               	btfss	3,2
  4177  03A1  2BA4               	goto	l2843
  4178  03A2                     l2839:	
  4179                           
  4180                           ;APDS9960.c: 259:         return 0;
  4181  03A2  3000               	movlw	0
  4182  03A3  0008               	return
  4183  03A4                     l2843:	
  4184                           
  4185                           ;APDS9960.c: 263:     if( !wireWriteDataByte(0x85, val_high) ) {
  4186  03A4  0879               	movf	setLightIntLowThreshold@val_high,w
  4187  03A5  00F7               	movwf	??_setLightIntLowThreshold
  4188  03A6  0877               	movf	??_setLightIntLowThreshold,w
  4189  03A7  00F1               	movwf	wireWriteDataByte@val
  4190  03A8  3085               	movlw	133
  4191  03A9  3184  245A  3183   	fcall	_wireWriteDataByte
  4192  03AC  0871               	movf	?_wireWriteDataByte,w
  4193  03AD  0472               	iorwf	?_wireWriteDataByte+1,w
  4194  03AE  1903               	btfsc	3,2
  4195  03AF  2BA2               	goto	l2839
  4196                           
  4197                           ;APDS9960.c: 267:     return 1;
  4198  03B0  3001               	movlw	1
  4199  03B1  0008               	return
  4200  03B2                     __end_of_setLightIntLowThreshold:	
  4201                           
  4202                           	psect	text6
  4203  03B2                     __ptext6:	
  4204 ;; *************** function _setLightIntHighThreshold *****************
  4205 ;; Defined at:
  4206 ;;		line 271 in file "APDS9960.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  threshold       2    5[COMMON] unsigned short 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  val_high        1    9[COMMON] unsigned char 
  4211 ;;  val_low         1    8[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      _Bool 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        5 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    6
  4228 ;; This function calls:
  4229 ;;		_wireWriteDataByte
  4230 ;; This function is called by:
  4231 ;;		_initialize
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _setLightIntHighThreshold
  4237  03B2                     _setLightIntHighThreshold:	
  4238                           
  4239                           ;APDS9960.c: 271: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 272: {;
      +                          APDS9960.c: 273:     uint8_t val_low;;APDS9960.c: 274:     uint8_t val_high;;APDS9960.c:
      +                           277:     val_low = threshold & 0x00FF;
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  4243  03B2  0875               	movf	setLightIntHighThreshold@threshold,w
  4244  03B3  00F7               	movwf	??_setLightIntHighThreshold
  4245  03B4  0877               	movf	??_setLightIntHighThreshold,w
  4246  03B5  00F8               	movwf	setLightIntHighThreshold@val_low
  4247                           
  4248                           ;APDS9960.c: 278:     val_high = (threshold & 0xFF00) >> 8;
  4249  03B6  0876               	movf	setLightIntHighThreshold@threshold+1,w
  4250  03B7  00F7               	movwf	??_setLightIntHighThreshold
  4251  03B8  0877               	movf	??_setLightIntHighThreshold,w
  4252  03B9  00F9               	movwf	setLightIntHighThreshold@val_high
  4253                           
  4254                           ;APDS9960.c: 281:     if( !wireWriteDataByte(0x86, val_low) ) {
  4255  03BA  0878               	movf	setLightIntHighThreshold@val_low,w
  4256  03BB  00F7               	movwf	??_setLightIntHighThreshold
  4257  03BC  0877               	movf	??_setLightIntHighThreshold,w
  4258  03BD  00F1               	movwf	wireWriteDataByte@val
  4259  03BE  3086               	movlw	134
  4260  03BF  3184  245A  3183   	fcall	_wireWriteDataByte
  4261  03C2  0871               	movf	?_wireWriteDataByte,w
  4262  03C3  0472               	iorwf	?_wireWriteDataByte+1,w
  4263  03C4  1D03               	btfss	3,2
  4264  03C5  2BC8               	goto	l2863
  4265  03C6                     l2859:	
  4266                           
  4267                           ;APDS9960.c: 282:         return 0;
  4268  03C6  3000               	movlw	0
  4269  03C7  0008               	return
  4270  03C8                     l2863:	
  4271                           
  4272                           ;APDS9960.c: 286:     if( !wireWriteDataByte(0x87, val_high) ) {
  4273  03C8  0879               	movf	setLightIntHighThreshold@val_high,w
  4274  03C9  00F7               	movwf	??_setLightIntHighThreshold
  4275  03CA  0877               	movf	??_setLightIntHighThreshold,w
  4276  03CB  00F1               	movwf	wireWriteDataByte@val
  4277  03CC  3087               	movlw	135
  4278  03CD  3184  245A  3183   	fcall	_wireWriteDataByte
  4279  03D0  0871               	movf	?_wireWriteDataByte,w
  4280  03D1  0472               	iorwf	?_wireWriteDataByte+1,w
  4281  03D2  1903               	btfsc	3,2
  4282  03D3  2BC6               	goto	l2859
  4283                           
  4284                           ;APDS9960.c: 290:     return 1;
  4285  03D4  3001               	movlw	1
  4286  03D5  0008               	return
  4287  03D6                     __end_of_setLightIntHighThreshold:	
  4288                           
  4289                           	psect	text7
  4290  033D                     __ptext7:	
  4291 ;; *************** function _setLEDDrive *****************
  4292 ;; Defined at:
  4293 ;;		line 164 in file "APDS9960.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  drive           1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  drive           1    1[BANK0 ] unsigned char 
  4298 ;;  val             1    0[BANK0 ] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      _Bool 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, pclath, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;Total ram usage:        4 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    6
  4315 ;; This function calls:
  4316 ;;		_wireReadDataByte
  4317 ;;		_wireWriteDataByte
  4318 ;; This function is called by:
  4319 ;;		_initialize
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _setLEDDrive
  4325  033D                     _setLEDDrive:	
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4329                           ;setLEDDrive@drive stored from wreg
  4330  033D  0020               	movlb	0	; select bank0
  4331  033E  00B5               	movwf	setLEDDrive@drive
  4332                           
  4333                           ;APDS9960.c: 164: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 165: {;APDS9960.c: 166:  
      +                             uint8_t val;;APDS9960.c: 169:     val=wireReadDataByte(0x8F);
  4334  033F  308F               	movlw	143
  4335  0340  3184  241E  3183   	fcall	_wireReadDataByte
  4336  0343  00FB               	movwf	??_setLEDDrive
  4337  0344  087B               	movf	??_setLEDDrive,w
  4338  0345  0020               	movlb	0	; select bank0
  4339  0346  00B4               	movwf	setLEDDrive@val
  4340                           
  4341                           ;APDS9960.c: 172:     drive &= 0b00000011;
  4342  0347  3003               	movlw	3
  4343  0348  00FB               	movwf	??_setLEDDrive
  4344  0349  087B               	movf	??_setLEDDrive,w
  4345  034A  05B5               	andwf	setLEDDrive@drive,f
  4346                           
  4347                           ;APDS9960.c: 173:     drive = drive << 6;
  4348  034B  0835               	movf	setLEDDrive@drive,w
  4349  034C  00FB               	movwf	??_setLEDDrive
  4350  034D  3005               	movlw	5
  4351  034E                     u1845:	
  4352  034E  35FB               	lslf	??_setLEDDrive,f
  4353  034F  3EFF               	addlw	-1
  4354  0350  1D03               	skipz
  4355  0351  2B4E               	goto	u1845
  4356  0352  357B               	lslf	??_setLEDDrive,w
  4357  0353  00FC               	movwf	??_setLEDDrive+1
  4358  0354  087C               	movf	??_setLEDDrive+1,w
  4359  0355  00B5               	movwf	setLEDDrive@drive
  4360                           
  4361                           ;APDS9960.c: 174:     val &= 0b00111111;
  4362  0356  303F               	movlw	63
  4363  0357  00FB               	movwf	??_setLEDDrive
  4364  0358  087B               	movf	??_setLEDDrive,w
  4365  0359  05B4               	andwf	setLEDDrive@val,f
  4366                           
  4367                           ;APDS9960.c: 175:     val |= drive;
  4368  035A  0835               	movf	setLEDDrive@drive,w
  4369  035B  00FB               	movwf	??_setLEDDrive
  4370  035C  087B               	movf	??_setLEDDrive,w
  4371  035D  04B4               	iorwf	setLEDDrive@val,f
  4372                           
  4373                           ;APDS9960.c: 178:     if( !wireWriteDataByte(0x8F, val) ) {
  4374  035E  0834               	movf	setLEDDrive@val,w
  4375  035F  00FB               	movwf	??_setLEDDrive
  4376  0360  087B               	movf	??_setLEDDrive,w
  4377  0361  00F1               	movwf	wireWriteDataByte@val
  4378  0362  308F               	movlw	143
  4379  0363  3184  245A         	fcall	_wireWriteDataByte
  4380  0365  0008               	return
  4381  0366                     __end_of_setLEDDrive:	
  4382                           
  4383                           	psect	text8
  4384  03D6                     __ptext8:	
  4385 ;; *************** function _setGestureWaitTime *****************
  4386 ;; Defined at:
  4387 ;;		line 360 in file "APDS9960.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  time            1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  time            1   12[COMMON] unsigned char 
  4392 ;;  val             1   13[COMMON] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      _Bool 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, pclath, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        3 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    6
  4409 ;; This function calls:
  4410 ;;		_wireReadDataByte
  4411 ;;		_wireWriteDataByte
  4412 ;; This function is called by:
  4413 ;;		_initialize
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function _setGestureWaitTime
  4419  03D6                     _setGestureWaitTime:	
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  4423                           ;setGestureWaitTime@time stored from wreg
  4424  03D6  00FC               	movwf	setGestureWaitTime@time
  4425                           
  4426                           ;APDS9960.c: 360: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 361: {;APDS9960.c: 
      +                          362:     uint8_t val;;APDS9960.c: 365:     val = wireReadDataByte(0xA3);
  4427  03D7  30A3               	movlw	163
  4428  03D8  3184  241E  3183   	fcall	_wireReadDataByte
  4429  03DB  00FB               	movwf	??_setGestureWaitTime
  4430  03DC  087B               	movf	??_setGestureWaitTime,w
  4431  03DD  00FD               	movwf	setGestureWaitTime@val
  4432                           
  4433                           ;APDS9960.c: 368:     time &= 0b00000111;
  4434  03DE  3007               	movlw	7
  4435  03DF  00FB               	movwf	??_setGestureWaitTime
  4436  03E0  087B               	movf	??_setGestureWaitTime,w
  4437  03E1  05FC               	andwf	setGestureWaitTime@time,f
  4438                           
  4439                           ;APDS9960.c: 369:     val &= 0b11111000;
  4440  03E2  30F8               	movlw	248
  4441  03E3  00FB               	movwf	??_setGestureWaitTime
  4442  03E4  087B               	movf	??_setGestureWaitTime,w
  4443  03E5  05FD               	andwf	setGestureWaitTime@val,f
  4444                           
  4445                           ;APDS9960.c: 370:     val |= time;
  4446  03E6  087C               	movf	setGestureWaitTime@time,w
  4447  03E7  00FB               	movwf	??_setGestureWaitTime
  4448  03E8  087B               	movf	??_setGestureWaitTime,w
  4449  03E9  04FD               	iorwf	setGestureWaitTime@val,f
  4450                           
  4451                           ;APDS9960.c: 373:     if( !wireWriteDataByte(0xA3, val) ) {
  4452  03EA  087D               	movf	setGestureWaitTime@val,w
  4453  03EB  00FB               	movwf	??_setGestureWaitTime
  4454  03EC  087B               	movf	??_setGestureWaitTime,w
  4455  03ED  00F1               	movwf	wireWriteDataByte@val
  4456  03EE  30A3               	movlw	163
  4457  03EF  3184  245A  3183   	fcall	_wireWriteDataByte
  4458  03F2  0871               	movf	?_wireWriteDataByte,w
  4459  03F3  0472               	iorwf	?_wireWriteDataByte+1,w
  4460  03F4  1D03               	btfss	3,2
  4461  03F5  2BF8               	goto	l2943
  4462                           
  4463                           ;APDS9960.c: 374:         return 0;
  4464  03F6  3000               	movlw	0
  4465  03F7  0008               	return
  4466  03F8                     l2943:	
  4467                           
  4468                           ;APDS9960.c: 377:     return 1;
  4469  03F8  3001               	movlw	1
  4470  03F9  0008               	return
  4471  03FA                     __end_of_setGestureWaitTime:	
  4472                           
  4473                           	psect	text9
  4474  022B                     __ptext9:	
  4475 ;; *************** function _setGestureLEDDrive *****************
  4476 ;; Defined at:
  4477 ;;		line 337 in file "APDS9960.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  drive           1    wreg     unsigned char 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  drive           1    1[BANK0 ] unsigned char 
  4482 ;;  val             1    0[BANK0 ] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      _Bool 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;Total ram usage:        4 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    6
  4499 ;; This function calls:
  4500 ;;		_wireReadDataByte
  4501 ;;		_wireWriteDataByte
  4502 ;; This function is called by:
  4503 ;;		_initialize
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function _setGestureLEDDrive
  4509  022B                     _setGestureLEDDrive:	
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4513                           ;setGestureLEDDrive@drive stored from wreg
  4514  022B  0020               	movlb	0	; select bank0
  4515  022C  00B5               	movwf	setGestureLEDDrive@drive
  4516                           
  4517                           ;APDS9960.c: 337: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 338: {;APDS9960.c:
      +                           339:     uint8_t val;;APDS9960.c: 342:     val = wireReadDataByte(0xA3);
  4518  022D  30A3               	movlw	163
  4519  022E  3184  241E  3182   	fcall	_wireReadDataByte
  4520  0231  00FB               	movwf	??_setGestureLEDDrive
  4521  0232  087B               	movf	??_setGestureLEDDrive,w
  4522  0233  0020               	movlb	0	; select bank0
  4523  0234  00B4               	movwf	setGestureLEDDrive@val
  4524                           
  4525                           ;APDS9960.c: 346:     drive &= 0b00000011;
  4526  0235  3003               	movlw	3
  4527  0236  00FB               	movwf	??_setGestureLEDDrive
  4528  0237  087B               	movf	??_setGestureLEDDrive,w
  4529  0238  05B5               	andwf	setGestureLEDDrive@drive,f
  4530                           
  4531                           ;APDS9960.c: 347:     drive = drive << 3;
  4532  0239  0835               	movf	setGestureLEDDrive@drive,w
  4533  023A  00FB               	movwf	??_setGestureLEDDrive
  4534  023B  3002               	movlw	2
  4535  023C                     u1965:	
  4536  023C  35FB               	lslf	??_setGestureLEDDrive,f
  4537  023D  3EFF               	addlw	-1
  4538  023E  1D03               	skipz
  4539  023F  2A3C               	goto	u1965
  4540  0240  357B               	lslf	??_setGestureLEDDrive,w
  4541  0241  00FC               	movwf	??_setGestureLEDDrive+1
  4542  0242  087C               	movf	??_setGestureLEDDrive+1,w
  4543  0243  00B5               	movwf	setGestureLEDDrive@drive
  4544                           
  4545                           ;APDS9960.c: 348:     val &= 0b11100111;
  4546  0244  30E7               	movlw	231
  4547  0245  00FB               	movwf	??_setGestureLEDDrive
  4548  0246  087B               	movf	??_setGestureLEDDrive,w
  4549  0247  05B4               	andwf	setGestureLEDDrive@val,f
  4550                           
  4551                           ;APDS9960.c: 349:     val |= drive;
  4552  0248  0835               	movf	setGestureLEDDrive@drive,w
  4553  0249  00FB               	movwf	??_setGestureLEDDrive
  4554  024A  087B               	movf	??_setGestureLEDDrive,w
  4555  024B  04B4               	iorwf	setGestureLEDDrive@val,f
  4556                           
  4557                           ;APDS9960.c: 352:     if( !wireWriteDataByte(0xA3, val) ) {
  4558  024C  0834               	movf	setGestureLEDDrive@val,w
  4559  024D  00FB               	movwf	??_setGestureLEDDrive
  4560  024E  087B               	movf	??_setGestureLEDDrive,w
  4561  024F  00F1               	movwf	wireWriteDataByte@val
  4562  0250  30A3               	movlw	163
  4563  0251  3184  245A  3182   	fcall	_wireWriteDataByte
  4564  0254  0871               	movf	?_wireWriteDataByte,w
  4565  0255  0472               	iorwf	?_wireWriteDataByte+1,w
  4566  0256  1D03               	btfss	3,2
  4567  0257  2A5A               	goto	l2925
  4568                           
  4569                           ;APDS9960.c: 353:         return 0;
  4570  0258  3000               	movlw	0
  4571  0259  0008               	return
  4572  025A                     l2925:	
  4573                           
  4574                           ;APDS9960.c: 356:     return 1;
  4575  025A  3001               	movlw	1
  4576  025B  0008               	return
  4577  025C                     __end_of_setGestureLEDDrive:	
  4578                           
  4579                           	psect	text10
  4580  025C                     __ptext10:	
  4581 ;; *************** function _setGestureGain *****************
  4582 ;; Defined at:
  4583 ;;		line 314 in file "APDS9960.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  gain            1    wreg     unsigned char 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  gain            1    1[BANK0 ] unsigned char 
  4588 ;;  val             1    0[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      _Bool 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;Total ram usage:        4 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    6
  4605 ;; This function calls:
  4606 ;;		_wireReadDataByte
  4607 ;;		_wireWriteDataByte
  4608 ;; This function is called by:
  4609 ;;		_initialize
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _setGestureGain
  4615  025C                     _setGestureGain:	
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  4619                           ;setGestureGain@gain stored from wreg
  4620  025C  0020               	movlb	0	; select bank0
  4621  025D  00B5               	movwf	setGestureGain@gain
  4622                           
  4623                           ;APDS9960.c: 314: _Bool setGestureGain(uint8_t gain);APDS9960.c: 315: {;APDS9960.c: 316:
      +                               uint8_t val;;APDS9960.c: 319:     val = wireReadDataByte(0xA3);
  4624  025E  30A3               	movlw	163
  4625  025F  3184  241E  3182   	fcall	_wireReadDataByte
  4626  0262  00FB               	movwf	??_setGestureGain
  4627  0263  087B               	movf	??_setGestureGain,w
  4628  0264  0020               	movlb	0	; select bank0
  4629  0265  00B4               	movwf	setGestureGain@val
  4630                           
  4631                           ;APDS9960.c: 323:     gain &= 0b00000011;
  4632  0266  3003               	movlw	3
  4633  0267  00FB               	movwf	??_setGestureGain
  4634  0268  087B               	movf	??_setGestureGain,w
  4635  0269  05B5               	andwf	setGestureGain@gain,f
  4636                           
  4637                           ;APDS9960.c: 324:     gain = gain << 5;
  4638  026A  0835               	movf	setGestureGain@gain,w
  4639  026B  00FB               	movwf	??_setGestureGain
  4640  026C  3004               	movlw	4
  4641  026D                     u1945:	
  4642  026D  35FB               	lslf	??_setGestureGain,f
  4643  026E  3EFF               	addlw	-1
  4644  026F  1D03               	skipz
  4645  0270  2A6D               	goto	u1945
  4646  0271  357B               	lslf	??_setGestureGain,w
  4647  0272  00FC               	movwf	??_setGestureGain+1
  4648  0273  087C               	movf	??_setGestureGain+1,w
  4649  0274  00B5               	movwf	setGestureGain@gain
  4650                           
  4651                           ;APDS9960.c: 325:     val &= 0b10011111;
  4652  0275  309F               	movlw	159
  4653  0276  00FB               	movwf	??_setGestureGain
  4654  0277  087B               	movf	??_setGestureGain,w
  4655  0278  05B4               	andwf	setGestureGain@val,f
  4656                           
  4657                           ;APDS9960.c: 326:     val |= gain;
  4658  0279  0835               	movf	setGestureGain@gain,w
  4659  027A  00FB               	movwf	??_setGestureGain
  4660  027B  087B               	movf	??_setGestureGain,w
  4661  027C  04B4               	iorwf	setGestureGain@val,f
  4662                           
  4663                           ;APDS9960.c: 329:     if( !wireWriteDataByte(0xA3, val) ) {
  4664  027D  0834               	movf	setGestureGain@val,w
  4665  027E  00FB               	movwf	??_setGestureGain
  4666  027F  087B               	movf	??_setGestureGain,w
  4667  0280  00F1               	movwf	wireWriteDataByte@val
  4668  0281  30A3               	movlw	163
  4669  0282  3184  245A  3182   	fcall	_wireWriteDataByte
  4670  0285  0871               	movf	?_wireWriteDataByte,w
  4671  0286  0472               	iorwf	?_wireWriteDataByte+1,w
  4672  0287  1D03               	btfss	3,2
  4673  0288  2A8B               	goto	l2907
  4674                           
  4675                           ;APDS9960.c: 330:         return 0;
  4676  0289  3000               	movlw	0
  4677  028A  0008               	return
  4678  028B                     l2907:	
  4679                           
  4680                           ;APDS9960.c: 333:     return 1;
  4681  028B  3001               	movlw	1
  4682  028C  0008               	return
  4683  028D                     __end_of_setGestureGain:	
  4684                           
  4685                           	psect	text11
  4686  04A8                     __ptext11:	
  4687 ;; *************** function _setGestureExitThresh *****************
  4688 ;; Defined at:
  4689 ;;		line 304 in file "APDS9960.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  threshold       1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  threshold       1    6[COMMON] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      _Bool 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0, pclath, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;Total ram usage:        2 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    6
  4710 ;; This function calls:
  4711 ;;		_wireWriteDataByte
  4712 ;; This function is called by:
  4713 ;;		_initialize
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           
  4718                           ;psect for function _setGestureExitThresh
  4719  04A8                     _setGestureExitThresh:	
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  4723                           ;setGestureExitThresh@threshold stored from wreg
  4724  04A8  00F6               	movwf	setGestureExitThresh@threshold
  4725                           
  4726                           ;APDS9960.c: 304: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 305: {;APDS9
      +                          960.c: 306:     if( !wireWriteDataByte(0xA1, threshold) ) {
  4727  04A9  0876               	movf	setGestureExitThresh@threshold,w
  4728  04AA  00F5               	movwf	??_setGestureExitThresh
  4729  04AB  0875               	movf	??_setGestureExitThresh,w
  4730  04AC  00F1               	movwf	wireWriteDataByte@val
  4731  04AD  30A1               	movlw	161
  4732  04AE  3184  245A  3184   	fcall	_wireWriteDataByte
  4733  04B1  0871               	movf	?_wireWriteDataByte,w
  4734  04B2  0472               	iorwf	?_wireWriteDataByte+1,w
  4735  04B3  1D03               	btfss	3,2
  4736  04B4  2CB7               	goto	l2889
  4737                           
  4738                           ;APDS9960.c: 307:         return 0;
  4739  04B5  3000               	movlw	0
  4740  04B6  0008               	return
  4741  04B7                     l2889:	
  4742                           
  4743                           ;APDS9960.c: 310:     return 1;
  4744  04B7  3001               	movlw	1
  4745  04B8  0008               	return
  4746  04B9                     __end_of_setGestureExitThresh:	
  4747                           
  4748                           	psect	text12
  4749  04B9                     __ptext12:	
  4750 ;; *************** function _setGestureEnterThresh *****************
  4751 ;; Defined at:
  4752 ;;		line 294 in file "APDS9960.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  threshold       1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  threshold       1    6[COMMON] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      _Bool 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    6
  4773 ;; This function calls:
  4774 ;;		_wireWriteDataByte
  4775 ;; This function is called by:
  4776 ;;		_initialize
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _setGestureEnterThresh
  4782  04B9                     _setGestureEnterThresh:	
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  4786                           ;setGestureEnterThresh@threshold stored from wreg
  4787  04B9  00F6               	movwf	setGestureEnterThresh@threshold
  4788                           
  4789                           ;APDS9960.c: 294: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 295: {;APDS
      +                          9960.c: 296:     if( !wireWriteDataByte(0xA0, threshold) ) {
  4790  04BA  0876               	movf	setGestureEnterThresh@threshold,w
  4791  04BB  00F5               	movwf	??_setGestureEnterThresh
  4792  04BC  0875               	movf	??_setGestureEnterThresh,w
  4793  04BD  00F1               	movwf	wireWriteDataByte@val
  4794  04BE  30A0               	movlw	160
  4795  04BF  3184  245A  3184   	fcall	_wireWriteDataByte
  4796  04C2  0871               	movf	?_wireWriteDataByte,w
  4797  04C3  0472               	iorwf	?_wireWriteDataByte+1,w
  4798  04C4  1D03               	btfss	3,2
  4799  04C5  2CC8               	goto	l2879
  4800                           
  4801                           ;APDS9960.c: 297:         return 0;
  4802  04C6  3000               	movlw	0
  4803  04C7  0008               	return
  4804  04C8                     l2879:	
  4805                           
  4806                           ;APDS9960.c: 300:     return 1;
  4807  04C8  3001               	movlw	1
  4808  04C9  0008               	return
  4809  04CA                     __end_of_setGestureEnterThresh:	
  4810                           
  4811                           	psect	text13
  4812  043E                     __ptext13:	
  4813 ;; *************** function _setAmbientLightGain *****************
  4814 ;; Defined at:
  4815 ;;		line 207 in file "APDS9960.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  drive           1    wreg     unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  drive           1   12[COMMON] unsigned char 
  4820 ;;  val             1   13[COMMON] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      _Bool 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, pclath, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;Total ram usage:        3 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    6
  4837 ;; This function calls:
  4838 ;;		_wireReadDataByte
  4839 ;;		_wireWriteDataByte
  4840 ;; This function is called by:
  4841 ;;		_initialize
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _setAmbientLightGain
  4847  043E                     _setAmbientLightGain:	
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  4851                           ;setAmbientLightGain@drive stored from wreg
  4852  043E  00FC               	movwf	setAmbientLightGain@drive
  4853                           
  4854                           ;APDS9960.c: 207: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 208: {;APDS9960.c
      +                          : 209:     uint8_t val;;APDS9960.c: 212:     val= wireReadDataByte(0x8F);
  4855  043F  308F               	movlw	143
  4856  0440  3184  241E  3184   	fcall	_wireReadDataByte
  4857  0443  00FB               	movwf	??_setAmbientLightGain
  4858  0444  087B               	movf	??_setAmbientLightGain,w
  4859  0445  00FD               	movwf	setAmbientLightGain@val
  4860                           
  4861                           ;APDS9960.c: 215:     drive &= 0b00000011;
  4862  0446  3003               	movlw	3
  4863  0447  00FB               	movwf	??_setAmbientLightGain
  4864  0448  087B               	movf	??_setAmbientLightGain,w
  4865  0449  05FC               	andwf	setAmbientLightGain@drive,f
  4866                           
  4867                           ;APDS9960.c: 216:     val &= 0b11111100;
  4868  044A  30FC               	movlw	252
  4869  044B  00FB               	movwf	??_setAmbientLightGain
  4870  044C  087B               	movf	??_setAmbientLightGain,w
  4871  044D  05FD               	andwf	setAmbientLightGain@val,f
  4872                           
  4873                           ;APDS9960.c: 217:     val |= drive;
  4874  044E  087C               	movf	setAmbientLightGain@drive,w
  4875  044F  00FB               	movwf	??_setAmbientLightGain
  4876  0450  087B               	movf	??_setAmbientLightGain,w
  4877  0451  04FD               	iorwf	setAmbientLightGain@val,f
  4878                           
  4879                           ;APDS9960.c: 220:     if( !wireWriteDataByte(0x8F, val) ) {
  4880  0452  087D               	movf	setAmbientLightGain@val,w
  4881  0453  00FB               	movwf	??_setAmbientLightGain
  4882  0454  087B               	movf	??_setAmbientLightGain,w
  4883  0455  00F1               	movwf	wireWriteDataByte@val
  4884  0456  308F               	movlw	143
  4885  0457  3184  245A         	fcall	_wireWriteDataByte
  4886  0459  0008               	return
  4887  045A                     __end_of_setAmbientLightGain:	
  4888                           
  4889                           	psect	text14
  4890  0547                     __ptext14:	
  4891 ;; *************** function _InitI2C *****************
  4892 ;; Defined at:
  4893 ;;		line 15 in file "i2c.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		None
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;Total ram usage:        0 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    4
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_initialize
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function _InitI2C
  4923  0547                     _InitI2C:	
  4924                           
  4925                           ;incstack = 0
  4926                           ; Regs used in _InitI2C: []
  4927  0547  0008               	return
  4928  0548                     __end_of_InitI2C:	
  4929                           
  4930                           	psect	text15
  4931  0520                     __ptext15:	
  4932 ;; *************** function _i2c1_driver_setI2cISR *****************
  4933 ;; Defined at:
  4934 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  handler         2    0[COMMON] PTR FTN()void 
  4937 ;;		 -> I2CDriverHandler(1), 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;Total ram usage:        2 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    4
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _i2c1_driver_setI2cISR
  4965  0520                     _i2c1_driver_setI2cISR:	
  4966                           
  4967                           ;mcc_generated_files/i2c1_driver.c: 263:     i2c1_driver_i2cISR = handler;
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
  4971  0520  0871               	movf	i2c1_driver_setI2cISR@handler+1,w
  4972  0521  0020               	movlb	0	; select bank0
  4973  0522  00BD               	movwf	_i2c1_driver_i2cISR+1
  4974  0523  0870               	movf	i2c1_driver_setI2cISR@handler,w
  4975  0524  00BC               	movwf	_i2c1_driver_i2cISR
  4976  0525  0008               	return
  4977  0526                     __end_of_i2c1_driver_setI2cISR:	
  4978                           
  4979                           	psect	text16
  4980  0142                     __ptext16:	
  4981 ;; *************** function _enableGestureSensor *****************
  4982 ;; Defined at:
  4983 ;;		line 403 in file "APDS9960.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  interrupts      1    wreg     _Bool 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  interrupts      1    5[BANK0 ] _Bool 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      _Bool 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        2 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    9
  5004 ;; This function calls:
  5005 ;;		_enablePower
  5006 ;;		_resetGestureParameters
  5007 ;;		_setGestureIntEnable
  5008 ;;		_setGestureMode
  5009 ;;		_setLEDBoost
  5010 ;;		_setMode
  5011 ;;		_wireWriteDataByte
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _enableGestureSensor
  5019  0142                     _enableGestureSensor:	
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  5023                           ;enableGestureSensor@interrupts stored from wreg
  5024  0142  0020               	movlb	0	; select bank0
  5025  0143  00B9               	movwf	enableGestureSensor@interrupts
  5026                           
  5027                           ;APDS9960.c: 403: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 404: {;APDS9
      +                          960.c: 412:     resetGestureParameters();
  5028  0144  3184  2471  3181   	fcall	_resetGestureParameters
  5029                           
  5030                           ;APDS9960.c: 413:     if( !wireWriteDataByte(0x83, 0xFF) ) {
  5031  0147  30FF               	movlw	255
  5032  0148  0020               	movlb	0	; select bank0
  5033  0149  00B8               	movwf	??_enableGestureSensor
  5034  014A  0838               	movf	??_enableGestureSensor,w
  5035  014B  00F1               	movwf	wireWriteDataByte@val
  5036  014C  3083               	movlw	131
  5037  014D  3184  245A  3181   	fcall	_wireWriteDataByte
  5038  0150  0871               	movf	?_wireWriteDataByte,w
  5039  0151  0472               	iorwf	?_wireWriteDataByte+1,w
  5040  0152  1903               	btfsc	3,2
  5041  0153  2957               	goto	l3169
  5042  0154  2959               	goto	l3173
  5043  0155                     l3187:	
  5044                           
  5045                           ;APDS9960.c: 423:         if( !setGestureIntEnable(1) ) {
  5046  0155  3001               	movlw	1
  5047  0156  2972               	goto	L1
  5048  0157                     l3169:	
  5049                           
  5050                           ;APDS9960.c: 414:         return 0;
  5051  0157  3000               	movlw	0
  5052  0158  0008               	return
  5053  0159                     l3173:	
  5054                           
  5055                           ;APDS9960.c: 416:     if( !wireWriteDataByte(0x8E, 0x89) ) {
  5056  0159  3089               	movlw	137
  5057  015A  0020               	movlb	0	; select bank0
  5058  015B  00B8               	movwf	??_enableGestureSensor
  5059  015C  0838               	movf	??_enableGestureSensor,w
  5060  015D  00F1               	movwf	wireWriteDataByte@val
  5061  015E  308E               	movlw	142
  5062  015F  3184  245A  3181   	fcall	_wireWriteDataByte
  5063  0162  0871               	movf	?_wireWriteDataByte,w
  5064  0163  0472               	iorwf	?_wireWriteDataByte+1,w
  5065  0164  1903               	btfsc	3,2
  5066  0165  2957               	goto	l3169
  5067                           
  5068                           ;APDS9960.c: 419:     if( !setLEDBoost(3) ) {
  5069  0166  3003               	movlw	3
  5070  0167  3182  228D  3181   	fcall	_setLEDBoost
  5071  016A  3A00               	xorlw	0
  5072  016B  1903               	btfsc	3,2
  5073  016C  2957               	goto	l3169
  5074                           
  5075                           ;APDS9960.c: 422:     if( interrupts ) {
  5076  016D  0020               	movlb	0	; select bank0
  5077  016E  0839               	movf	enableGestureSensor@interrupts,w
  5078  016F  1D03               	btfss	3,2
  5079  0170  2955               	goto	l3187
  5080                           
  5081                           ;APDS9960.c: 427:         if( !setGestureIntEnable(0) ) {
  5082  0171  3000               	movlw	0
  5083  0172                     L1:	
  5084  0172  3183  2366  3181   	fcall	_setGestureIntEnable
  5085  0175  3A00               	xorlw	0
  5086  0176  1903               	btfsc	3,2
  5087  0177  2957               	goto	l3169
  5088                           
  5089                           ;APDS9960.c: 431:     if( !setGestureMode(1) ) {
  5090  0178  3001               	movlw	1
  5091  0179  3183  23FA  3181   	fcall	_setGestureMode
  5092  017C  3A00               	xorlw	0
  5093  017D  1903               	btfsc	3,2
  5094  017E  2957               	goto	l3169
  5095                           
  5096                           ;APDS9960.c: 434:     if( !enablePower() ){
  5097  017F  3184  24DB  3181   	fcall	_enablePower
  5098  0182  3A00               	xorlw	0
  5099  0183  1903               	btfsc	3,2
  5100  0184  2957               	goto	l3169
  5101                           
  5102                           ;APDS9960.c: 437:     if( !setMode(3, 1) ) {
  5103  0185  01FD               	clrf	setMode@enable
  5104  0186  0AFD               	incf	setMode@enable,f
  5105  0187  3003               	movlw	3
  5106  0188  3181  21A2  3181   	fcall	_setMode
  5107  018B  3A00               	xorlw	0
  5108  018C  1903               	btfsc	3,2
  5109  018D  2957               	goto	l3169
  5110                           
  5111                           ;APDS9960.c: 440:     if( !setMode(2, 1) ) {
  5112  018E  01FD               	clrf	setMode@enable
  5113  018F  0AFD               	incf	setMode@enable,f
  5114  0190  3002               	movlw	2
  5115  0191  3181  21A2  3181   	fcall	_setMode
  5116  0194  3A00               	xorlw	0
  5117  0195  1903               	btfsc	3,2
  5118  0196  2957               	goto	l3169
  5119                           
  5120                           ;APDS9960.c: 443:     if( !setMode(6, 1) ) {
  5121  0197  01FD               	clrf	setMode@enable
  5122  0198  0AFD               	incf	setMode@enable,f
  5123  0199  3006               	movlw	6
  5124  019A  3181  21A2  3181   	fcall	_setMode
  5125  019D  3A00               	xorlw	0
  5126  019E  1903               	btfsc	3,2
  5127  019F  2957               	goto	l3169
  5128                           
  5129                           ;APDS9960.c: 447:     return 1;
  5130  01A0  3001               	movlw	1
  5131  01A1  0008               	return
  5132  01A2                     __end_of_enableGestureSensor:	
  5133                           
  5134                           	psect	text17
  5135  028D                     __ptext17:	
  5136 ;; *************** function _setLEDBoost *****************
  5137 ;; Defined at:
  5138 ;;		line 478 in file "APDS9960.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  boost           1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  boost           1    1[BANK0 ] unsigned char 
  5143 ;;  val             1    0[BANK0 ] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      _Bool 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, pclath, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;Total ram usage:        4 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    6
  5160 ;; This function calls:
  5161 ;;		_wireReadDataByte
  5162 ;;		_wireWriteDataByte
  5163 ;; This function is called by:
  5164 ;;		_enableGestureSensor
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function _setLEDBoost
  5170  028D                     _setLEDBoost:	
  5171                           
  5172                           ;incstack = 0
  5173                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  5174                           ;setLEDBoost@boost stored from wreg
  5175  028D  0020               	movlb	0	; select bank0
  5176  028E  00B5               	movwf	setLEDBoost@boost
  5177                           
  5178                           ;APDS9960.c: 478: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 479: {;APDS9960.c: 480:  
      +                             uint8_t val;;APDS9960.c: 483:     val=wireReadDataByte(0x90);
  5179  028F  3090               	movlw	144
  5180  0290  3184  241E  3182   	fcall	_wireReadDataByte
  5181  0293  00FB               	movwf	??_setLEDBoost
  5182  0294  087B               	movf	??_setLEDBoost,w
  5183  0295  0020               	movlb	0	; select bank0
  5184  0296  00B4               	movwf	setLEDBoost@val
  5185                           
  5186                           ;APDS9960.c: 486:     boost &= 0b00000011;
  5187  0297  3003               	movlw	3
  5188  0298  00FB               	movwf	??_setLEDBoost
  5189  0299  087B               	movf	??_setLEDBoost,w
  5190  029A  05B5               	andwf	setLEDBoost@boost,f
  5191                           
  5192                           ;APDS9960.c: 487:     boost = boost << 4;
  5193  029B  0835               	movf	setLEDBoost@boost,w
  5194  029C  00FB               	movwf	??_setLEDBoost
  5195  029D  3003               	movlw	3
  5196  029E                     u2005:	
  5197  029E  35FB               	lslf	??_setLEDBoost,f
  5198  029F  3EFF               	addlw	-1
  5199  02A0  1D03               	skipz
  5200  02A1  2A9E               	goto	u2005
  5201  02A2  357B               	lslf	??_setLEDBoost,w
  5202  02A3  00FC               	movwf	??_setLEDBoost+1
  5203  02A4  087C               	movf	??_setLEDBoost+1,w
  5204  02A5  00B5               	movwf	setLEDBoost@boost
  5205                           
  5206                           ;APDS9960.c: 488:     val &= 0b11001111;
  5207  02A6  30CF               	movlw	207
  5208  02A7  00FB               	movwf	??_setLEDBoost
  5209  02A8  087B               	movf	??_setLEDBoost,w
  5210  02A9  05B4               	andwf	setLEDBoost@val,f
  5211                           
  5212                           ;APDS9960.c: 489:     val |= boost;
  5213  02AA  0835               	movf	setLEDBoost@boost,w
  5214  02AB  00FB               	movwf	??_setLEDBoost
  5215  02AC  087B               	movf	??_setLEDBoost,w
  5216  02AD  04B4               	iorwf	setLEDBoost@val,f
  5217                           
  5218                           ;APDS9960.c: 492:     if( !wireWriteDataByte(0x90, val) ) {
  5219  02AE  0834               	movf	setLEDBoost@val,w
  5220  02AF  00FB               	movwf	??_setLEDBoost
  5221  02B0  087B               	movf	??_setLEDBoost,w
  5222  02B1  00F1               	movwf	wireWriteDataByte@val
  5223  02B2  3090               	movlw	144
  5224  02B3  3184  245A  3182   	fcall	_wireWriteDataByte
  5225  02B6  0871               	movf	?_wireWriteDataByte,w
  5226  02B7  0472               	iorwf	?_wireWriteDataByte+1,w
  5227  02B8  1D03               	btfss	3,2
  5228  02B9  2ABC               	goto	l2981
  5229                           
  5230                           ;APDS9960.c: 493:         return 0;
  5231  02BA  3000               	movlw	0
  5232  02BB  0008               	return
  5233  02BC                     l2981:	
  5234                           
  5235                           ;APDS9960.c: 496:     return 1;
  5236  02BC  3001               	movlw	1
  5237  02BD  0008               	return
  5238  02BE                     __end_of_setLEDBoost:	
  5239                           
  5240                           	psect	text18
  5241  03FA                     __ptext18:	
  5242 ;; *************** function _setGestureMode *****************
  5243 ;; Defined at:
  5244 ;;		line 500 in file "APDS9960.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  mode            1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  mode            1   12[COMMON] unsigned char 
  5249 ;;  val             1   13[COMMON] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      _Bool 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, pclath, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;Total ram usage:        3 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    6
  5266 ;; This function calls:
  5267 ;;		_wireReadDataByte
  5268 ;;		_wireWriteDataByte
  5269 ;; This function is called by:
  5270 ;;		_enableGestureSensor
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _setGestureMode
  5276  03FA                     _setGestureMode:	
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  5280                           ;setGestureMode@mode stored from wreg
  5281  03FA  00FC               	movwf	setGestureMode@mode
  5282                           
  5283                           ;APDS9960.c: 500: _Bool setGestureMode(uint8_t mode);APDS9960.c: 501: {;APDS9960.c: 502:
      +                               uint8_t val;;APDS9960.c: 505:     val = wireReadDataByte(0xAB);
  5284  03FB  30AB               	movlw	171
  5285  03FC  3184  241E  3183   	fcall	_wireReadDataByte
  5286  03FF  00FB               	movwf	??_setGestureMode
  5287  0400  087B               	movf	??_setGestureMode,w
  5288  0401  00FD               	movwf	setGestureMode@val
  5289                           
  5290                           ;APDS9960.c: 508:     mode &= 0b00000001;
  5291  0402  3001               	movlw	1
  5292  0403  00FB               	movwf	??_setGestureMode
  5293  0404  087B               	movf	??_setGestureMode,w
  5294  0405  05FC               	andwf	setGestureMode@mode,f
  5295                           
  5296                           ;APDS9960.c: 509:     val &= 0b11111110;
  5297  0406  30FE               	movlw	254
  5298  0407  00FB               	movwf	??_setGestureMode
  5299  0408  087B               	movf	??_setGestureMode,w
  5300  0409  05FD               	andwf	setGestureMode@val,f
  5301                           
  5302                           ;APDS9960.c: 510:     val |= mode;
  5303  040A  087C               	movf	setGestureMode@mode,w
  5304  040B  00FB               	movwf	??_setGestureMode
  5305  040C  087B               	movf	??_setGestureMode,w
  5306  040D  04FD               	iorwf	setGestureMode@val,f
  5307                           
  5308                           ;APDS9960.c: 513:     if( !wireWriteDataByte(0xAB, val) ) {
  5309  040E  087D               	movf	setGestureMode@val,w
  5310  040F  00FB               	movwf	??_setGestureMode
  5311  0410  087B               	movf	??_setGestureMode,w
  5312  0411  00F1               	movwf	wireWriteDataByte@val
  5313  0412  30AB               	movlw	171
  5314  0413  3184  245A  3183   	fcall	_wireWriteDataByte
  5315  0416  0871               	movf	?_wireWriteDataByte,w
  5316  0417  0472               	iorwf	?_wireWriteDataByte+1,w
  5317  0418  1D03               	btfss	3,2
  5318  0419  2C1C               	goto	l2999
  5319                           
  5320                           ;APDS9960.c: 514:         return 0;
  5321  041A  3000               	movlw	0
  5322  041B  0008               	return
  5323  041C                     l2999:	
  5324                           
  5325                           ;APDS9960.c: 517:     return 1;
  5326  041C  3001               	movlw	1
  5327  041D  0008               	return
  5328  041E                     __end_of_setGestureMode:	
  5329                           
  5330                           	psect	text19
  5331  0366                     __ptext19:	
  5332 ;; *************** function _setGestureIntEnable *****************
  5333 ;; Defined at:
  5334 ;;		line 381 in file "APDS9960.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  enable          1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  enable          1   13[COMMON] unsigned char 
  5339 ;;  val             1   12[COMMON] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      _Bool 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0, pclath, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;Total ram usage:        3 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    6
  5356 ;; This function calls:
  5357 ;;		_wireReadDataByte
  5358 ;;		_wireWriteDataByte
  5359 ;; This function is called by:
  5360 ;;		_initialize
  5361 ;;		_enableGestureSensor
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           
  5366                           ;psect for function _setGestureIntEnable
  5367  0366                     _setGestureIntEnable:	
  5368                           
  5369                           ;incstack = 0
  5370                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  5371                           ;setGestureIntEnable@enable stored from wreg
  5372  0366  00FD               	movwf	setGestureIntEnable@enable
  5373                           
  5374                           ;APDS9960.c: 381: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 382: {;APDS9960.
      +                          c: 383:     uint8_t val;;APDS9960.c: 386:     val = wireReadDataByte(0xAB);
  5375  0367  30AB               	movlw	171
  5376  0368  3184  241E  3183   	fcall	_wireReadDataByte
  5377  036B  00FB               	movwf	??_setGestureIntEnable
  5378  036C  087B               	movf	??_setGestureIntEnable,w
  5379  036D  00FC               	movwf	setGestureIntEnable@val
  5380                           
  5381                           ;APDS9960.c: 389:     enable &= 0b00000001;
  5382  036E  3001               	movlw	1
  5383  036F  00FB               	movwf	??_setGestureIntEnable
  5384  0370  087B               	movf	??_setGestureIntEnable,w
  5385  0371  05FD               	andwf	setGestureIntEnable@enable,f
  5386                           
  5387                           ;APDS9960.c: 390:     enable = enable << 1;
  5388  0372  357D               	lslf	setGestureIntEnable@enable,w
  5389  0373  00FB               	movwf	??_setGestureIntEnable
  5390  0374  087B               	movf	??_setGestureIntEnable,w
  5391  0375  00FD               	movwf	setGestureIntEnable@enable
  5392                           
  5393                           ;APDS9960.c: 391:     val &= 0b11111101;
  5394  0376  30FD               	movlw	253
  5395  0377  00FB               	movwf	??_setGestureIntEnable
  5396  0378  087B               	movf	??_setGestureIntEnable,w
  5397  0379  05FC               	andwf	setGestureIntEnable@val,f
  5398                           
  5399                           ;APDS9960.c: 392:     val |= enable;
  5400  037A  087D               	movf	setGestureIntEnable@enable,w
  5401  037B  00FB               	movwf	??_setGestureIntEnable
  5402  037C  087B               	movf	??_setGestureIntEnable,w
  5403  037D  04FC               	iorwf	setGestureIntEnable@val,f
  5404                           
  5405                           ;APDS9960.c: 395:     if( !wireWriteDataByte(0xAB, val) ) {
  5406  037E  087C               	movf	setGestureIntEnable@val,w
  5407  037F  00FB               	movwf	??_setGestureIntEnable
  5408  0380  087B               	movf	??_setGestureIntEnable,w
  5409  0381  00F1               	movwf	wireWriteDataByte@val
  5410  0382  30AB               	movlw	171
  5411  0383  3184  245A  3183   	fcall	_wireWriteDataByte
  5412  0386  0871               	movf	?_wireWriteDataByte,w
  5413  0387  0472               	iorwf	?_wireWriteDataByte+1,w
  5414  0388  1D03               	btfss	3,2
  5415  0389  2B8C               	goto	l2961
  5416                           
  5417                           ;APDS9960.c: 396:         return 0;
  5418  038A  3000               	movlw	0
  5419  038B  0008               	return
  5420  038C                     l2961:	
  5421                           
  5422                           ;APDS9960.c: 399:     return 1;
  5423  038C  3001               	movlw	1
  5424  038D  0008               	return
  5425  038E                     __end_of_setGestureIntEnable:	
  5426                           
  5427                           	psect	text20
  5428  0471                     __ptext20:	
  5429 ;; *************** function _resetGestureParameters *****************
  5430 ;; Defined at:
  5431 ;;		line 451 in file "APDS9960.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		status,2
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    4
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_enableGestureSensor
  5456 ;;		_readGesture
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function _resetGestureParameters
  5462  0471                     _resetGestureParameters:	
  5463                           
  5464                           ;APDS9960.c: 454:     gesture_data_.index = 0;
  5465                           
  5466                           ;incstack = 0
  5467                           ; Regs used in _resetGestureParameters: [status,2]
  5468  0471  0021               	movlb	1	; select bank1
  5469  0472  01E0               	clrf	(_gesture_data_^(0+128)+64)
  5470                           
  5471                           ;APDS9960.c: 455:     gesture_data_.total_gestures = 0;
  5472  0473  01E1               	clrf	(_gesture_data_^(0+128)+65)
  5473                           
  5474                           ;APDS9960.c: 457:     gesture_ud_delta_ = 0;
  5475  0474  0020               	movlb	0	; select bank0
  5476  0475  01AE               	clrf	_gesture_ud_delta_
  5477  0476  01AF               	clrf	_gesture_ud_delta_+1
  5478                           
  5479                           ;APDS9960.c: 458:     gesture_lr_delta_ = 0;
  5480  0477  01AC               	clrf	_gesture_lr_delta_
  5481  0478  01AD               	clrf	_gesture_lr_delta_+1
  5482                           
  5483                           ;APDS9960.c: 460:     gesture_ud_count_ = 0;
  5484  0479  01AA               	clrf	_gesture_ud_count_
  5485  047A  01AB               	clrf	_gesture_ud_count_+1
  5486                           
  5487                           ;APDS9960.c: 461:     gesture_lr_count_ = 0;
  5488  047B  01A8               	clrf	_gesture_lr_count_
  5489  047C  01A9               	clrf	_gesture_lr_count_+1
  5490                           
  5491                           ;APDS9960.c: 463:     gesture_near_count_ = 0;
  5492  047D  01A6               	clrf	_gesture_near_count_
  5493  047E  01A7               	clrf	_gesture_near_count_+1
  5494                           
  5495                           ;APDS9960.c: 464:     gesture_far_count_ = 0;
  5496  047F  01A4               	clrf	_gesture_far_count_
  5497  0480  01A5               	clrf	_gesture_far_count_+1
  5498                           
  5499                           ;APDS9960.c: 466:     gesture_state_ = 0;
  5500  0481  01A2               	clrf	_gesture_state_
  5501  0482  01A3               	clrf	_gesture_state_+1
  5502                           
  5503                           ;APDS9960.c: 467:     gesture_motion_ = DIR_NONE;
  5504  0483  01A0               	clrf	_gesture_motion_
  5505  0484  01A1               	clrf	_gesture_motion_+1
  5506  0485  0008               	return
  5507  0486                     __end_of_resetGestureParameters:	
  5508                           
  5509                           	psect	text21
  5510  04DB                     __ptext21:	
  5511 ;; *************** function _enablePower *****************
  5512 ;; Defined at:
  5513 ;;		line 521 in file "APDS9960.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      _Bool 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0, pclath, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    8
  5534 ;; This function calls:
  5535 ;;		_setMode
  5536 ;; This function is called by:
  5537 ;;		_enableGestureSensor
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _enablePower
  5543  04DB                     _enablePower:	
  5544                           
  5545                           ;APDS9960.c: 523:     if( !setMode(0, 1) ) {
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  5549  04DB  01FD               	clrf	setMode@enable
  5550  04DC  0AFD               	incf	setMode@enable,f
  5551  04DD  3000               	movlw	0
  5552  04DE  3181  21A2  3184   	fcall	_setMode
  5553  04E1  3A00               	xorlw	0
  5554  04E2  1D03               	skipz
  5555  04E3  2CE6               	goto	l3009
  5556                           
  5557                           ;APDS9960.c: 524:         return 0;
  5558  04E4  3000               	movlw	0
  5559  04E5  0008               	return
  5560  04E6                     l3009:	
  5561                           
  5562                           ;APDS9960.c: 527:     return 1;
  5563  04E6  3001               	movlw	1
  5564  04E7  0008               	return
  5565  04E8                     __end_of_enablePower:	
  5566                           
  5567                           	psect	text22
  5568  01A2                     __ptext22:	
  5569 ;; *************** function _setMode *****************
  5570 ;; Defined at:
  5571 ;;		line 118 in file "APDS9960.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  mode            1    wreg     unsigned char 
  5574 ;;  enable          1   13[COMMON] unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  mode            1    3[BANK0 ] unsigned char 
  5577 ;;  reg_val         1    2[BANK0 ] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      _Bool 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, pclath, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;Total ram usage:        5 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    7
  5594 ;; This function calls:
  5595 ;;		_getMode
  5596 ;;		_wireWriteDataByte
  5597 ;; This function is called by:
  5598 ;;		_initialize
  5599 ;;		_enableGestureSensor
  5600 ;;		_enablePower
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           
  5605                           ;psect for function _setMode
  5606  01A2                     _setMode:	
  5607                           
  5608                           ;incstack = 0
  5609                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  5610                           ;setMode@mode stored from wreg
  5611  01A2  0020               	movlb	0	; select bank0
  5612  01A3  00B7               	movwf	setMode@mode
  5613                           
  5614                           ;APDS9960.c: 118: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 119: {;APDS996
      +                          0.c: 120:     uint8_t reg_val;;APDS9960.c: 123:     reg_val = getMode();
  5615  01A4  3185  250A  3181   	fcall	_getMode
  5616  01A7  0020               	movlb	0	; select bank0
  5617  01A8  00B4               	movwf	??_setMode
  5618  01A9  0834               	movf	??_setMode,w
  5619  01AA  00B6               	movwf	setMode@reg_val
  5620                           
  5621                           ;APDS9960.c: 124:     if( reg_val == 0xFF ) {
  5622  01AB  0A36               	incf	setMode@reg_val,w
  5623  01AC  1D03               	btfss	3,2
  5624  01AD  29B0               	goto	l2691
  5625  01AE                     l2687:	
  5626                           
  5627                           ;APDS9960.c: 125:         return 0;
  5628  01AE  3000               	movlw	0
  5629  01AF  0008               	return
  5630  01B0                     l2691:	
  5631                           
  5632                           ;APDS9960.c: 129:     enable = enable & 0x01;
  5633  01B0  087D               	movf	setMode@enable,w
  5634  01B1  3901               	andlw	1
  5635  01B2  00B4               	movwf	??_setMode
  5636  01B3  0834               	movf	??_setMode,w
  5637  01B4  00FD               	movwf	setMode@enable
  5638                           
  5639                           ;APDS9960.c: 130:     if( mode >= 0 && mode <= 6 ) {
  5640  01B5  3007               	movlw	7
  5641  01B6  0237               	subwf	setMode@mode,w
  5642  01B7  1803               	skipnc
  5643  01B8  29D5               	goto	l2701
  5644                           
  5645                           ;APDS9960.c: 131:         if (enable) {
  5646  01B9  087D               	movf	setMode@enable,w
  5647  01BA  1903               	btfsc	3,2
  5648  01BB  29C8               	goto	l2699
  5649                           
  5650                           ;APDS9960.c: 132:             reg_val |= (1 << mode);
  5651  01BC  3001               	movlw	1
  5652  01BD  00B4               	movwf	??_setMode
  5653  01BE  0A37               	incf	setMode@mode,w
  5654  01BF  29C1               	goto	u1784
  5655  01C0                     u1785:	
  5656  01C0  35B4               	lslf	??_setMode,f
  5657  01C1                     u1784:	
  5658  01C1  0B89               	decfsz	9,f
  5659  01C2  29C0               	goto	u1785
  5660  01C3  0834               	movf	??_setMode,w
  5661  01C4  00B5               	movwf	??_setMode+1
  5662  01C5  0835               	movf	??_setMode+1,w
  5663  01C6  04B6               	iorwf	setMode@reg_val,f
  5664                           
  5665                           ;APDS9960.c: 133:         } else {
  5666  01C7  29E2               	goto	l2709
  5667  01C8                     l2699:	
  5668                           
  5669                           ;APDS9960.c: 134:             reg_val &= ~(1 << mode);
  5670  01C8  3001               	movlw	1
  5671  01C9  00B4               	movwf	??_setMode
  5672  01CA  0A37               	incf	setMode@mode,w
  5673  01CB  29CD               	goto	u1794
  5674  01CC                     u1795:	
  5675  01CC  35B4               	lslf	??_setMode,f
  5676  01CD                     u1794:	
  5677  01CD  0B89               	decfsz	9,f
  5678  01CE  29CC               	goto	u1795
  5679  01CF  0834               	movf	??_setMode,w
  5680  01D0  3AFF               	xorlw	255
  5681  01D1  00B5               	movwf	??_setMode+1
  5682  01D2  0835               	movf	??_setMode+1,w
  5683  01D3  05B6               	andwf	setMode@reg_val,f
  5684  01D4  29E2               	goto	l2709
  5685  01D5                     l2701:	
  5686  01D5  3007               	movlw	7
  5687  01D6  0637               	xorwf	setMode@mode,w
  5688  01D7  1D03               	btfss	3,2
  5689  01D8  29E2               	goto	l2709
  5690                           
  5691                           ;APDS9960.c: 137:         if (enable) {
  5692  01D9  087D               	movf	setMode@enable,w
  5693  01DA  1903               	btfsc	3,2
  5694  01DB  29E1               	goto	l2707
  5695                           
  5696                           ;APDS9960.c: 138:             reg_val = 0x7F;
  5697  01DC  307F               	movlw	127
  5698  01DD  00B4               	movwf	??_setMode
  5699  01DE  0834               	movf	??_setMode,w
  5700  01DF  00B6               	movwf	setMode@reg_val
  5701                           
  5702                           ;APDS9960.c: 139:         } else {
  5703  01E0  29E2               	goto	l2709
  5704  01E1                     l2707:	
  5705                           
  5706                           ;APDS9960.c: 140:             reg_val = 0x00;
  5707  01E1  01B6               	clrf	setMode@reg_val
  5708  01E2                     l2709:	
  5709                           
  5710                           ;APDS9960.c: 145:     if( !wireWriteDataByte(0x80, reg_val) ) {
  5711  01E2  0836               	movf	setMode@reg_val,w
  5712  01E3  00B4               	movwf	??_setMode
  5713  01E4  0834               	movf	??_setMode,w
  5714  01E5  00F1               	movwf	wireWriteDataByte@val
  5715  01E6  3080               	movlw	128
  5716  01E7  3184  245A  3181   	fcall	_wireWriteDataByte
  5717  01EA  0871               	movf	?_wireWriteDataByte,w
  5718  01EB  0472               	iorwf	?_wireWriteDataByte+1,w
  5719  01EC  1903               	btfsc	3,2
  5720  01ED  29AE               	goto	l2687
  5721                           
  5722                           ;APDS9960.c: 149:     return 1;
  5723  01EE  3001               	movlw	1
  5724  01EF  0008               	return
  5725  01F0                     __end_of_setMode:	
  5726                           
  5727                           	psect	text23
  5728  045A                     __ptext23:	
  5729 ;; *************** function _wireWriteDataByte *****************
  5730 ;; Defined at:
  5731 ;;		line 866 in file "APDS9960.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  reg             1    wreg     unsigned char 
  5734 ;;  val             1    1[COMMON] unsigned char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  reg             1    4[COMMON] unsigned char 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  2    1[COMMON] int 
  5739 ;; Registers used:
  5740 ;;		wreg, status,2, status,0, pclath, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5750 ;;Total ram usage:        4 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    5
  5753 ;; This function calls:
  5754 ;;		_I2C_Start
  5755 ;;		_I2C_Stop
  5756 ;;		_I2C_Write_Byte
  5757 ;; This function is called by:
  5758 ;;		_initialize
  5759 ;;		_setMode
  5760 ;;		_setLEDDrive
  5761 ;;		_setProximityGain
  5762 ;;		_setAmbientLightGain
  5763 ;;		_setProxIntLowThresh
  5764 ;;		_setProxIntHighThresh
  5765 ;;		_setLightIntLowThreshold
  5766 ;;		_setLightIntHighThreshold
  5767 ;;		_setGestureEnterThresh
  5768 ;;		_setGestureExitThresh
  5769 ;;		_setGestureGain
  5770 ;;		_setGestureLEDDrive
  5771 ;;		_setGestureWaitTime
  5772 ;;		_setGestureIntEnable
  5773 ;;		_enableGestureSensor
  5774 ;;		_setLEDBoost
  5775 ;;		_setGestureMode
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _wireWriteDataByte
  5781  045A                     _wireWriteDataByte:	
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  5785                           ;wireWriteDataByte@reg stored from wreg
  5786  045A  00F4               	movwf	wireWriteDataByte@reg
  5787                           
  5788                           ;APDS9960.c: 866: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 867: {;APDS9960.c: 869:     I2C_Start();
  5789  045B  3185  2541  3184   	fcall	_I2C_Start
  5790                           
  5791                           ;APDS9960.c: 870:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5792  045E  3072               	movlw	114
  5793  045F  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5794                           
  5795                           ;APDS9960.c: 871:     I2C_Write_Byte(reg);
  5796  0462  0874               	movf	wireWriteDataByte@reg,w
  5797  0463  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5798                           
  5799                           ;APDS9960.c: 872:     I2C_Write_Byte(val);
  5800  0466  0871               	movf	wireWriteDataByte@val,w
  5801  0467  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5802                           
  5803                           ;APDS9960.c: 873:     I2C_Stop();
  5804  046A  3185  253E         	fcall	_I2C_Stop
  5805                           
  5806                           ;APDS9960.c: 875:     return 1;
  5807  046C  3001               	movlw	1
  5808  046D  00F1               	movwf	?_wireWriteDataByte
  5809  046E  3000               	movlw	0
  5810  046F  00F2               	movwf	?_wireWriteDataByte+1
  5811  0470  0008               	return
  5812  0471                     __end_of_wireWriteDataByte:	
  5813                           
  5814                           	psect	text24
  5815  050A                     __ptext24:	
  5816 ;; *************** function _getMode *****************
  5817 ;; Defined at:
  5818 ;;		line 153 in file "APDS9960.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  enable_value    1   12[COMMON] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      unsigned char 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, pclath, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;Total ram usage:        2 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    6
  5839 ;; This function calls:
  5840 ;;		_wireReadDataByte
  5841 ;; This function is called by:
  5842 ;;		_setMode
  5843 ;;		_readGesture
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _getMode
  5849  050A                     _getMode:	
  5850                           
  5851                           ;APDS9960.c: 155:     uint8_t enable_value;;APDS9960.c: 158:     enable_value = wireRead
      +                          DataByte(0x80);
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  5855  050A  3080               	movlw	128
  5856  050B  3184  241E         	fcall	_wireReadDataByte
  5857  050D  00FB               	movwf	??_getMode
  5858  050E  087B               	movf	??_getMode,w
  5859  050F  00FC               	movwf	getMode@enable_value
  5860                           
  5861                           ;APDS9960.c: 160:     return enable_value;
  5862  0510  087C               	movf	getMode@enable_value,w
  5863  0511  0008               	return
  5864  0512                     __end_of_getMode:	
  5865                           
  5866                           	psect	text25
  5867  041E                     __ptext25:	
  5868 ;; *************** function _wireReadDataByte *****************
  5869 ;; Defined at:
  5870 ;;		line 879 in file "APDS9960.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  reg             1    wreg     unsigned char 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  reg             1    9[COMMON] unsigned char 
  5875 ;;  val             1   10[COMMON] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      unsigned char 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, pclath, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;Total ram usage:        3 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    5
  5892 ;; This function calls:
  5893 ;;		_I2C_ReStart
  5894 ;;		_I2C_Read_Byte
  5895 ;;		_I2C_Send_NACK
  5896 ;;		_I2C_Start
  5897 ;;		_I2C_Stop
  5898 ;;		_I2C_Write_Byte
  5899 ;; This function is called by:
  5900 ;;		_initialize
  5901 ;;		_getMode
  5902 ;;		_setLEDDrive
  5903 ;;		_setProximityGain
  5904 ;;		_setAmbientLightGain
  5905 ;;		_setGestureGain
  5906 ;;		_setGestureLEDDrive
  5907 ;;		_setGestureWaitTime
  5908 ;;		_setGestureIntEnable
  5909 ;;		_setLEDBoost
  5910 ;;		_setGestureMode
  5911 ;;		_isGestureAvailable
  5912 ;;		_readGesture
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           
  5917                           ;psect for function _wireReadDataByte
  5918  041E                     _wireReadDataByte:	
  5919                           
  5920                           ;incstack = 0
  5921                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  5922                           ;wireReadDataByte@reg stored from wreg
  5923  041E  00F9               	movwf	wireReadDataByte@reg
  5924                           
  5925                           ;APDS9960.c: 879:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 880: {;
      +                          APDS9960.c: 882:     unsigned char val;;APDS9960.c: 884:     I2C_Start();
  5926  041F  3185  2541  3184   	fcall	_I2C_Start
  5927                           
  5928                           ;APDS9960.c: 885:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  5929  0422  3072               	movlw	114
  5930  0423  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5931                           
  5932                           ;APDS9960.c: 886:     I2C_Write_Byte(reg);
  5933  0426  0879               	movf	wireReadDataByte@reg,w
  5934  0427  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5935                           
  5936                           ;APDS9960.c: 887:     I2C_ReStart();
  5937  042A  3185  2544  3184   	fcall	_I2C_ReStart
  5938                           
  5939                           ;APDS9960.c: 888:     I2C_Write_Byte((0x39 << 1) | 0x01);
  5940  042D  3073               	movlw	115
  5941  042E  3184  24CA  3184   	fcall	_I2C_Write_Byte
  5942                           
  5943                           ;APDS9960.c: 889:     val=I2C_Read_Byte();
  5944  0431  3182  22BE  3184   	fcall	_I2C_Read_Byte
  5945  0434  00F8               	movwf	??_wireReadDataByte
  5946  0435  0878               	movf	??_wireReadDataByte,w
  5947  0436  00FA               	movwf	wireReadDataByte@val
  5948                           
  5949                           ;APDS9960.c: 890:     I2C_Send_NACK();
  5950  0437  3185  2532  3184   	fcall	_I2C_Send_NACK
  5951                           
  5952                           ;APDS9960.c: 891:     I2C_Stop();
  5953  043A  3185  253E         	fcall	_I2C_Stop
  5954                           
  5955                           ;APDS9960.c: 893:     return (val);
  5956  043C  087A               	movf	wireReadDataByte@val,w
  5957  043D  0008               	return
  5958  043E                     __end_of_wireReadDataByte:	
  5959                           
  5960                           	psect	text26
  5961  04CA                     __ptext26:	
  5962 ;; *************** function _I2C_Write_Byte *****************
  5963 ;; Defined at:
  5964 ;;		line 70 in file "i2c.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  Byte            1    wreg     unsigned char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  Byte            1    0[COMMON] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        1 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    4
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_wireWriteDataByte
  5989 ;;		_wireReadDataByte
  5990 ;;		_wireReadDataBlock
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _I2C_Write_Byte
  5996  04CA                     _I2C_Write_Byte:	
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in _I2C_Write_Byte: [wreg+status,2]
  6000                           ;I2C_Write_Byte@Byte stored from wreg
  6001  04CA  00F0               	movwf	I2C_Write_Byte@Byte
  6002                           
  6003                           ;i2c.c: 70: void I2C_Write_Byte(unsigned char Byte);i2c.c: 71: {;i2c.c: 73:  b_i2c_error
      +                          _flag = 0;
  6004  04CB  0020               	movlb	0	; select bank0
  6005  04CC  01B2               	clrf	_b_i2c_error_flag
  6006                           
  6007                           ;i2c.c: 74:  SSPBUF = Byte;
  6008  04CD  0870               	movf	I2C_Write_Byte@Byte,w
  6009  04CE  0024               	movlb	4	; select bank4
  6010  04CF  0091               	movwf	17	;volatile
  6011  04D0                     l796:	
  6012                           ;i2c.c: 75:  while (SSPSTATbits.R_nW == 1);
  6013                           
  6014  04D0  1914               	btfsc	20,2	;volatile
  6015  04D1  2CD0               	goto	l796
  6016                           
  6017                           ;i2c.c: 78:  if (SSP1CON2bits.ACKSTAT == 1) {
  6018  04D2  1F16               	btfss	22,6	;volatile
  6019  04D3  0008               	return
  6020                           
  6021                           ;i2c.c: 80:   SSP1CON2bits.PEN = 1;
  6022  04D4  1516               	bsf	22,2	;volatile
  6023  04D5                     l800:	
  6024                           ;i2c.c: 81:   while (SSP1CON2bits.PEN == 1);
  6025                           
  6026  04D5  1916               	btfsc	22,2	;volatile
  6027  04D6  2CD5               	goto	l800
  6028                           
  6029                           ;i2c.c: 84:   b_i2c_error_flag = 1;
  6030  04D7  0020               	movlb	0	; select bank0
  6031  04D8  01B2               	clrf	_b_i2c_error_flag
  6032  04D9  0AB2               	incf	_b_i2c_error_flag,f
  6033                           
  6034                           ;i2c.c: 85:   return;
  6035  04DA  0008               	return
  6036  04DB                     __end_of_I2C_Write_Byte:	
  6037                           
  6038                           	psect	text27
  6039  053E                     __ptext27:	
  6040 ;; *************** function _I2C_Stop *****************
  6041 ;; Defined at:
  6042 ;;		line 47 in file "i2c.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		None
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    4
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_wireWriteDataByte
  6067 ;;		_wireReadDataByte
  6068 ;;		_wireReadDataBlock
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _I2C_Stop
  6074  053E                     _I2C_Stop:	
  6075                           
  6076                           ;i2c.c: 49:  SSP1CON2bits.PEN=1;
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _I2C_Stop: []
  6080  053E  0024               	movlb	4	; select bank4
  6081  053F  1516               	bsf	22,2	;volatile
  6082  0540  0008               	return
  6083  0541                     __end_of_I2C_Stop:	
  6084                           
  6085                           	psect	text28
  6086  0541                     __ptext28:	
  6087 ;; *************** function _I2C_Start *****************
  6088 ;; Defined at:
  6089 ;;		line 33 in file "i2c.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		None
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    4
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_wireWriteDataByte
  6114 ;;		_wireReadDataByte
  6115 ;;		_wireReadDataBlock
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           
  6120                           ;psect for function _I2C_Start
  6121  0541                     _I2C_Start:	
  6122                           
  6123                           ;i2c.c: 35:  SSP1CON2bits.SEN = 1;
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in _I2C_Start: []
  6127  0541  0024               	movlb	4	; select bank4
  6128  0542  1416               	bsf	22,0	;volatile
  6129  0543  0008               	return
  6130  0544                     __end_of_I2C_Start:	
  6131                           
  6132                           	psect	text29
  6133  0532                     __ptext29:	
  6134 ;; *************** function _I2C_Send_NACK *****************
  6135 ;; Defined at:
  6136 ;;		line 62 in file "i2c.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;		None
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;		None
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  1    wreg      void 
  6143 ;; Registers used:
  6144 ;;		None
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;Total ram usage:        0 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    4
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_wireReadDataByte
  6161 ;;		_wireReadDataBlock
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           
  6166                           ;psect for function _I2C_Send_NACK
  6167  0532                     _I2C_Send_NACK:	
  6168                           
  6169                           ;i2c.c: 64:  SSP1CON2bits.ACKDT=1;
  6170                           
  6171                           ;incstack = 0
  6172                           ; Regs used in _I2C_Send_NACK: []
  6173  0532  0024               	movlb	4	; select bank4
  6174  0533  1696               	bsf	22,5	;volatile
  6175                           
  6176                           ;i2c.c: 65:    SSP1CON2bits.ACKEN=1;
  6177  0534  1616               	bsf	22,4	;volatile
  6178  0535  0008               	return
  6179  0536                     __end_of_I2C_Send_NACK:	
  6180                           
  6181                           	psect	text30
  6182  02BE                     __ptext30:	
  6183 ;; *************** function _I2C_Read_Byte *****************
  6184 ;; Defined at:
  6185 ;;		line 91 in file "i2c.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  count           4    4[COMMON] unsigned long 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      unsigned char 
  6192 ;; Registers used:
  6193 ;;		wreg
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;Total ram usage:        8 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    4
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_wireReadDataByte
  6210 ;;		_wireReadDataBlock
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _I2C_Read_Byte
  6216  02BE                     _I2C_Read_Byte:	
  6217                           
  6218                           ;i2c.c: 93:   SSP1CON2bits.RCEN=1;
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in _I2C_Read_Byte: [wreg]
  6222  02BE  0024               	movlb	4	; select bank4
  6223  02BF  1596               	bsf	22,3	;volatile
  6224                           
  6225                           ;i2c.c: 96:  unsigned long count = 10000L;
  6226  02C0  3000               	movlw	0
  6227  02C1  00F7               	movwf	I2C_Read_Byte@count+3
  6228  02C2  3000               	movlw	0
  6229  02C3  00F6               	movwf	I2C_Read_Byte@count+2
  6230  02C4  3027               	movlw	39
  6231  02C5  00F5               	movwf	I2C_Read_Byte@count+1
  6232  02C6  3010               	movlw	16
  6233  02C7  00F4               	movwf	I2C_Read_Byte@count
  6234  02C8                     l806:	
  6235                           ;i2c.c: 109:  }
  6236                           
  6237                           ;i2c.c: 97:  while (SSP1STATbits.BF == 0) {
  6238                           
  6239                           
  6240                           ;i2c.c: 97:  while (SSP1STATbits.BF == 0) {
  6241  02C8  1814               	btfsc	20,0	;volatile
  6242  02C9  2AE8               	goto	l2633
  6243                           
  6244                           ;i2c.c: 100:   if (--count == 0) {
  6245  02CA  3001               	movlw	1
  6246  02CB  00F0               	movwf	??_I2C_Read_Byte
  6247  02CC  3000               	movlw	0
  6248  02CD  00F1               	movwf	??_I2C_Read_Byte+1
  6249  02CE  3000               	movlw	0
  6250  02CF  00F2               	movwf	??_I2C_Read_Byte+2
  6251  02D0  3000               	movlw	0
  6252  02D1  00F3               	movwf	??_I2C_Read_Byte+3
  6253  02D2  0870               	movf	??_I2C_Read_Byte,w
  6254  02D3  02F4               	subwf	I2C_Read_Byte@count,f
  6255  02D4  0871               	movf	??_I2C_Read_Byte+1,w
  6256  02D5  3BF5               	subwfb	I2C_Read_Byte@count+1,f
  6257  02D6  0872               	movf	??_I2C_Read_Byte+2,w
  6258  02D7  3BF6               	subwfb	I2C_Read_Byte@count+2,f
  6259  02D8  0873               	movf	??_I2C_Read_Byte+3,w
  6260  02D9  3BF7               	subwfb	I2C_Read_Byte@count+3,f
  6261  02DA  0877               	movf	I2C_Read_Byte@count+3,w
  6262  02DB  0476               	iorwf	I2C_Read_Byte@count+2,w
  6263  02DC  0475               	iorwf	I2C_Read_Byte@count+1,w
  6264  02DD  0474               	iorwf	I2C_Read_Byte@count,w
  6265  02DE  1D03               	skipz
  6266  02DF  2AC8               	goto	l806
  6267                           
  6268                           ;i2c.c: 102:    SSP1CON2bits.PEN = 1;
  6269  02E0  1516               	bsf	22,2	;volatile
  6270  02E1                     l809:	
  6271                           ;i2c.c: 103:    while (SSP1CON2bits.PEN == 1);
  6272                           
  6273  02E1  1916               	btfsc	22,2	;volatile
  6274  02E2  2AE1               	goto	l809
  6275                           
  6276                           ;i2c.c: 106:    b_i2c_error_flag = 1;
  6277  02E3  0020               	movlb	0	; select bank0
  6278  02E4  01B2               	clrf	_b_i2c_error_flag
  6279  02E5  0AB2               	incf	_b_i2c_error_flag,f
  6280                           
  6281                           ;i2c.c: 107:    return 0;
  6282  02E6  3000               	movlw	0
  6283  02E7  0008               	return
  6284  02E8                     l2633:	
  6285                           
  6286                           ;i2c.c: 111:   return SSPBUF;
  6287  02E8  0811               	movf	17,w	;volatile
  6288  02E9  0008               	return
  6289  02EA                     __end_of_I2C_Read_Byte:	
  6290                           
  6291                           	psect	text31
  6292  0544                     __ptext31:	
  6293 ;; *************** function _I2C_ReStart *****************
  6294 ;; Defined at:
  6295 ;;		line 40 in file "i2c.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		None
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    4
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_wireReadDataByte
  6320 ;;		_wireReadDataBlock
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _I2C_ReStart
  6326  0544                     _I2C_ReStart:	
  6327                           
  6328                           ;i2c.c: 42:  SSP1CON2bits.RSEN = 1;
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in _I2C_ReStart: []
  6332  0544  0024               	movlb	4	; select bank4
  6333  0545  1496               	bsf	22,1	;volatile
  6334  0546  0008               	return
  6335  0547                     __end_of_I2C_ReStart:	
  6336                           
  6337                           	psect	text32
  6338  04F5                     __ptext32:	
  6339 ;; *************** function _SYSTEM_Initialize *****************
  6340 ;; Defined at:
  6341 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, pclath, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    6
  6362 ;; This function calls:
  6363 ;;		_OSCILLATOR_Initialize
  6364 ;;		_PIN_MANAGER_Initialize
  6365 ;;		_PMD_Initialize
  6366 ;;		_WDT_Initialize
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _SYSTEM_Initialize
  6374  04F5                     _SYSTEM_Initialize:	
  6375                           
  6376                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6380  04F5  3185  2512  3184   	fcall	_PMD_Initialize
  6381                           
  6382                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6383  04F8  3181  21F0  3184   	fcall	_PIN_MANAGER_Initialize
  6384                           
  6385                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6386  04FB  3185  2501  3184   	fcall	_OSCILLATOR_Initialize
  6387                           
  6388                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  6389  04FE  3185  2536         	fcall	_WDT_Initialize
  6390  0500  0008               	return
  6391  0501                     __end_of_SYSTEM_Initialize:	
  6392                           
  6393                           	psect	text33
  6394  0536                     __ptext33:	
  6395 ;; *************** function _WDT_Initialize *****************
  6396 ;; Defined at:
  6397 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    4
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_SYSTEM_Initialize
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           
  6426                           ;psect for function _WDT_Initialize
  6427  0536                     _WDT_Initialize:	
  6428                           
  6429                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in _WDT_Initialize: [wreg]
  6433  0536  3016               	movlw	22
  6434  0537  0021               	movlb	1	; select bank1
  6435  0538  0097               	movwf	23	;volatile
  6436  0539  0008               	return
  6437  053A                     __end_of_WDT_Initialize:	
  6438                           
  6439                           	psect	text34
  6440  0512                     __ptext34:	
  6441 ;; *************** function _PMD_Initialize *****************
  6442 ;; Defined at:
  6443 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		status,2
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    4
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_SYSTEM_Initialize
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _PMD_Initialize
  6473  0512                     _PMD_Initialize:	
  6474                           
  6475                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _PMD_Initialize: [status,2]
  6479  0512  0032               	movlb	18	; select bank18
  6480  0513  0191               	clrf	17	;volatile
  6481                           
  6482                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  6483  0514  0192               	clrf	18	;volatile
  6484                           
  6485                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  6486  0515  0193               	clrf	19	;volatile
  6487                           
  6488                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  6489  0516  0194               	clrf	20	;volatile
  6490                           
  6491                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  6492  0517  0195               	clrf	21	;volatile
  6493                           
  6494                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  6495  0518  0196               	clrf	22	;volatile
  6496  0519  0008               	return
  6497  051A                     __end_of_PMD_Initialize:	
  6498                           
  6499                           	psect	text35
  6500  01F0                     __ptext35:	
  6501 ;; *************** function _PIN_MANAGER_Initialize *****************
  6502 ;; Defined at:
  6503 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0, pclath, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    5
  6524 ;; This function calls:
  6525 ;;		_IOCAF4_SetInterruptHandler
  6526 ;; This function is called by:
  6527 ;;		_SYSTEM_Initialize
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _PIN_MANAGER_Initialize
  6533  01F0                     _PIN_MANAGER_Initialize:	
  6534                           
  6535                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6539  01F0  0022               	movlb	2	; select bank2
  6540  01F1  018C               	clrf	12	;volatile
  6541                           
  6542                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6543  01F2  018D               	clrf	13	;volatile
  6544                           
  6545                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6546  01F3  018E               	clrf	14	;volatile
  6547                           
  6548                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  6549  01F4  3011               	movlw	17
  6550  01F5  0021               	movlb	1	; select bank1
  6551  01F6  008C               	movwf	12	;volatile
  6552                           
  6553                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  6554  01F7  30F0               	movlw	240
  6555  01F8  008D               	movwf	13	;volatile
  6556                           
  6557                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  6558  01F9  30DF               	movlw	223
  6559  01FA  008E               	movwf	14	;volatile
  6560                           
  6561                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xFC;
  6562  01FB  30FC               	movlw	252
  6563  01FC  0023               	movlb	3	; select bank3
  6564  01FD  008E               	movwf	14	;volatile
  6565                           
  6566                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF0;
  6567  01FE  30F0               	movlw	240
  6568  01FF  008D               	movwf	13	;volatile
  6569                           
  6570                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x27;
  6571  0200  3027               	movlw	39
  6572  0201  008C               	movwf	12	;volatile
  6573                           
  6574                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  6575  0202  0024               	movlb	4	; select bank4
  6576  0203  018D               	clrf	13	;volatile
  6577                           
  6578                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  6579  0204  018C               	clrf	12	;volatile
  6580                           
  6581                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x03;
  6582  0205  3003               	movlw	3
  6583  0206  008E               	movwf	14	;volatile
  6584                           
  6585                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  6586  0207  0025               	movlb	5	; select bank5
  6587  0208  018C               	clrf	12	;volatile
  6588                           
  6589                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  6590  0209  018D               	clrf	13	;volatile
  6591                           
  6592                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  6593  020A  018E               	clrf	14	;volatile
  6594                           
  6595                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  6596  020B  3037               	movlw	55
  6597  020C  0026               	movlb	6	; select bank6
  6598  020D  008C               	movwf	12	;volatile
  6599                           
  6600                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  6601  020E  30F0               	movlw	240
  6602  020F  008D               	movwf	13	;volatile
  6603                           
  6604                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  6605  0210  30FF               	movlw	255
  6606  0211  008E               	movwf	14	;volatile
  6607                           
  6608                           ;mcc_generated_files/pin_manager.c: 106:     IOCAFbits.IOCAF4 = 0;
  6609  0212  0027               	movlb	7	; select bank7
  6610  0213  1213               	bcf	19,4	;volatile
  6611                           
  6612                           ;mcc_generated_files/pin_manager.c: 108:     IOCANbits.IOCAN4 = 1;
  6613  0214  1612               	bsf	18,4	;volatile
  6614                           
  6615                           ;mcc_generated_files/pin_manager.c: 110:     IOCAPbits.IOCAP4 = 0;
  6616  0215  1211               	bcf	17,4	;volatile
  6617                           
  6618                           ;mcc_generated_files/pin_manager.c: 115:     IOCAF4_SetInterruptHandler(IOCAF4_DefaultIn
      +                          terruptHandler);
  6619  0216  3048               	movlw	low _IOCAF4_DefaultInterruptHandler
  6620  0217  00F0               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler
  6621  0218  3005               	movlw	high _IOCAF4_DefaultInterruptHandler
  6622  0219  00F1               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler+1
  6623  021A  3185  2526         	fcall	_IOCAF4_SetInterruptHandler
  6624                           
  6625                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6626  021C  0021               	movlb	1	; select bank1
  6627  021D  1610               	bsf	16,4	;volatile
  6628                           
  6629                           ;mcc_generated_files/pin_manager.c: 121:     RC0PPS = 0x18;
  6630  021E  3018               	movlw	24
  6631  021F  003D               	movlb	29	; select bank29
  6632  0220  00A0               	movwf	32	;volatile
  6633                           
  6634                           ;mcc_generated_files/pin_manager.c: 122:     SSP1CLKPPS = 0x10;
  6635  0221  3010               	movlw	16
  6636  0222  003C               	movlb	28	; select bank28
  6637  0223  00A0               	movwf	32	;volatile
  6638                           
  6639                           ;mcc_generated_files/pin_manager.c: 123:     RC1PPS = 0x19;
  6640  0224  3019               	movlw	25
  6641  0225  003D               	movlb	29	; select bank29
  6642  0226  00A1               	movwf	33	;volatile
  6643                           
  6644                           ;mcc_generated_files/pin_manager.c: 124:     SSP1DATPPS = 0x11;
  6645  0227  3011               	movlw	17
  6646  0228  003C               	movlb	28	; select bank28
  6647  0229  00A1               	movwf	33	;volatile
  6648  022A  0008               	return
  6649  022B                     __end_of_PIN_MANAGER_Initialize:	
  6650                           
  6651                           	psect	text36
  6652  0526                     __ptext36:	
  6653 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  6654 ;; Defined at:
  6655 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  6658 ;;		 -> GestureInterruptHandler(1), IOCAF4_DefaultInterruptHandler(1), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;Total ram usage:        2 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    4
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_PIN_MANAGER_Initialize
  6681 ;;		_main
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _IOCAF4_SetInterruptHandler
  6687  0526                     _IOCAF4_SetInterruptHandler:	
  6688                           
  6689                           ;mcc_generated_files/pin_manager.c: 155:     IOCAF4_InterruptHandler = InterruptHandler;
  6690                           
  6691                           ;incstack = 0
  6692                           ; Regs used in _IOCAF4_SetInterruptHandler: [wreg]
  6693  0526  0871               	movf	IOCAF4_SetInterruptHandler@InterruptHandler+1,w
  6694  0527  0020               	movlb	0	; select bank0
  6695  0528  00BB               	movwf	_IOCAF4_InterruptHandler+1
  6696  0529  0870               	movf	IOCAF4_SetInterruptHandler@InterruptHandler,w
  6697  052A  00BA               	movwf	_IOCAF4_InterruptHandler
  6698  052B  0008               	return
  6699  052C                     __end_of_IOCAF4_SetInterruptHandler:	
  6700                           
  6701                           	psect	text37
  6702  0501                     __ptext37:	
  6703 ;; *************** function _OSCILLATOR_Initialize *****************
  6704 ;; Defined at:
  6705 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    4
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_SYSTEM_Initialize
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _OSCILLATOR_Initialize
  6735  0501                     _OSCILLATOR_Initialize:	
  6736                           
  6737                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6741  0501  3062               	movlw	98
  6742  0502  0032               	movlb	18	; select bank18
  6743  0503  0099               	movwf	25	;volatile
  6744                           
  6745                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  6746  0504  019B               	clrf	27	;volatile
  6747                           
  6748                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  6749  0505  019D               	clrf	29	;volatile
  6750                           
  6751                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
  6752  0506  3003               	movlw	3
  6753  0507  009F               	movwf	31	;volatile
  6754                           
  6755                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  6756  0508  019E               	clrf	30	;volatile
  6757  0509  0008               	return
  6758  050A                     __end_of_OSCILLATOR_Initialize:	
  6759                           
  6760                           	psect	intentry
  6761  0004                     __pintentry:	
  6762 ;; *************** function _INTERRUPT_InterruptManager *****************
  6763 ;; Defined at:
  6764 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    3
  6785 ;; This function calls:
  6786 ;;		Absolute function
  6787 ;;		_I2CDriverHandler
  6788 ;;		_PIN_MANAGER_IOC
  6789 ;; This function is called by:
  6790 ;;		Interrupt level 1
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794  0004                     _INTERRUPT_InterruptManager:	
  6795                           
  6796                           ;incstack = 0
  6797  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6798                           
  6799                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6800  0005  3180               	pagesel	$
  6801                           
  6802                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  6803  0006  0021               	movlb	1	; select bank1
  6804  0007  1E10               	btfss	16,4	;volatile
  6805  0008  2810               	goto	i1l21
  6806  0009  0020               	movlb	0	; select bank0
  6807  000A  1E10               	btfss	16,4	;volatile
  6808  000B  2810               	goto	i1l21
  6809                           
  6810                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  6811  000C  3185  252C  3180   	fcall	_PIN_MANAGER_IOC
  6812                           
  6813                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6814  000F  2823               	goto	i1l29
  6815  0010                     i1l21:	
  6816                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6817                           
  6818  0010  1F0B               	btfss	11,6	;volatile
  6819  0011  2823               	goto	i1l29
  6820                           
  6821                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  6822  0012  0021               	movlb	1	; select bank1
  6823  0013  1D91               	btfss	17,3	;volatile
  6824  0014  281E               	goto	i1l24
  6825  0015  0020               	movlb	0	; select bank0
  6826  0016  1D91               	btfss	17,3	;volatile
  6827  0017  281E               	goto	i1l24
  6828                           
  6829                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  6830  0018  083D               	movf	_i2c1_driver_i2cISR+1,w
  6831  0019  008A               	movwf	10
  6832  001A  083C               	movf	_i2c1_driver_i2cISR,w
  6833  001B  000A               	callw
  6834  001C  3180               	pagesel	$
  6835                           
  6836                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6837  001D  2823               	goto	i1l29
  6838  001E                     i1l24:	
  6839                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
  6840                           
  6841  001E  0021               	movlb	1	; select bank1
  6842  001F  1D11               	btfss	17,2	;volatile
  6843  0020  2823               	goto	i1l29
  6844                           
  6845                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
  6846  0021  0020               	movlb	0	; select bank0
  6847  0022  0811               	movf	17,w	;volatile
  6848  0023                     i1l29:	
  6849                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  6850                           
  6851  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6852  0024  0009               	retfie
  6853  0025                     __end_of_INTERRUPT_InterruptManager:	
  6854                           
  6855                           	psect	text39
  6856  052C                     __ptext39:	
  6857 ;; *************** function _PIN_MANAGER_IOC *****************
  6858 ;; Defined at:
  6859 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    2
  6880 ;; This function calls:
  6881 ;;		_IOCAF4_ISR
  6882 ;; This function is called by:
  6883 ;;		_INTERRUPT_InterruptManager
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           
  6888                           ;psect for function _PIN_MANAGER_IOC
  6889  052C                     _PIN_MANAGER_IOC:	
  6890                           
  6891                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCAFbits.IOCAF4 == 1)
  6892                           
  6893                           ;incstack = 0
  6894                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  6895  052C  0027               	movlb	7	; select bank7
  6896  052D  1E13               	btfss	19,4	;volatile
  6897  052E  0008               	return
  6898                           
  6899                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCAF4_ISR();
  6900  052F  3184  24E8         	fcall	_IOCAF4_ISR
  6901  0531  0008               	return
  6902  0532                     __end_of_PIN_MANAGER_IOC:	
  6903                           
  6904                           	psect	text40
  6905  04E8                     __ptext40:	
  6906 ;; *************** function _IOCAF4_ISR *****************
  6907 ;; Defined at:
  6908 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0, pclath, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    1
  6929 ;; This function calls:
  6930 ;;		Absolute function
  6931 ;;		_GestureInterruptHandler
  6932 ;;		_IOCAF4_DefaultInterruptHandler
  6933 ;; This function is called by:
  6934 ;;		_PIN_MANAGER_IOC
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           
  6939                           ;psect for function _IOCAF4_ISR
  6940  04E8                     _IOCAF4_ISR:	
  6941                           
  6942                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCAF4_InterruptHandler)
  6943                           
  6944                           ;incstack = 0
  6945                           ; Regs used in _IOCAF4_ISR: [wreg+status,2+status,0+pclath+cstack]
  6946  04E8  0020               	movlb	0	; select bank0
  6947  04E9  083A               	movf	_IOCAF4_InterruptHandler,w
  6948  04EA  043B               	iorwf	_IOCAF4_InterruptHandler+1,w
  6949  04EB  1903               	btfsc	3,2
  6950  04EC  2CF2               	goto	i1l2775
  6951                           
  6952                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCAF4_InterruptHandler();
  6953  04ED  083B               	movf	_IOCAF4_InterruptHandler+1,w
  6954  04EE  008A               	movwf	10
  6955  04EF  083A               	movf	_IOCAF4_InterruptHandler,w
  6956  04F0  000A               	callw
  6957  04F1  3184               	pagesel	$
  6958  04F2                     i1l2775:	
  6959                           
  6960                           ;mcc_generated_files/pin_manager.c: 148:     IOCAFbits.IOCAF4 = 0;
  6961  04F2  0027               	movlb	7	; select bank7
  6962  04F3  1213               	bcf	19,4	;volatile
  6963  04F4  0008               	return
  6964  04F5                     __end_of_IOCAF4_ISR:	
  6965                           
  6966                           	psect	text41
  6967  053A                     __ptext41:	
  6968 ;; *************** function _GestureInterruptHandler *****************
  6969 ;; Defined at:
  6970 ;;		line 54 in file "main.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		None
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_main
  6994 ;;		_IOCAF4_ISR
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           
  6999                           ;psect for function _GestureInterruptHandler
  7000  053A                     _GestureInterruptHandler:	
  7001                           
  7002                           ;main.c: 55:     handleGestureFlag = 1;
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _GestureInterruptHandler: []
  7006  053A  0020               	movlb	0	; select bank0
  7007  053B  01B3               	clrf	_handleGestureFlag
  7008  053C  0AB3               	incf	_handleGestureFlag,f
  7009  053D  0008               	return
  7010  053E                     __end_of_GestureInterruptHandler:	
  7011                           
  7012                           	psect	text42
  7013  0548                     __ptext42:	
  7014 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  7015 ;; Defined at:
  7016 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		None
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		_PIN_MANAGER_Initialize
  7040 ;;		_IOCAF4_ISR
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function _IOCAF4_DefaultInterruptHandler
  7046  0548                     _IOCAF4_DefaultInterruptHandler:	
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _IOCAF4_DefaultInterruptHandler: []
  7050  0548  0008               	return
  7051  0549                     __end_of_IOCAF4_DefaultInterruptHandler:	
  7052                           
  7053                           	psect	text43
  7054  0549                     __ptext43:	
  7055 ;; *************** function _I2CDriverHandler *****************
  7056 ;; Defined at:
  7057 ;;		line 57 in file "main.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		None
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_main
  7081 ;;		_INTERRUPT_InterruptManager
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           
  7086                           ;psect for function _I2CDriverHandler
  7087  0549                     _I2CDriverHandler:	
  7088                           
  7089                           ;incstack = 0
  7090                           ; Regs used in _I2CDriverHandler: []
  7091  0549  0008               	return
  7092  054A                     __end_of_I2CDriverHandler:	
  7093  007E                     btemp	set	126	;btemp
  7094  007E                     int$flags	set	126
  7095  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         88
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      30
    BANK1            80      0      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2CDriverHandler(), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), Absolute function(), IOCAF4_DefaultInterruptHandler(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> I2CDriverHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _initialize->_setAmbientLightGain
    _initialize->_setGestureIntEnable
    _initialize->_setGestureWaitTime
    _initialize->_setMode
    _setProximityGain->_wireReadDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireReadDataByte
    _setGestureWaitTime->_wireReadDataByte
    _setGestureLEDDrive->_wireReadDataByte
    _setGestureGain->_wireReadDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireReadDataByte
    _enableGestureSensor->_setGestureIntEnable
    _enableGestureSensor->_setGestureMode
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireReadDataByte
    _setGestureMode->_wireReadDataByte
    _setGestureIntEnable->_wireReadDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Read_Byte
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_enableGestureSensor
    _main->_initialize
    _initialize->_setMode
    _enableGestureSensor->_setMode
    _enablePower->_setMode

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   63498
         _IOCAF4_SetInterruptHandler
                  _SYSTEM_Initialize
                _enableGestureSensor
              _i2c1_driver_setI2cISR
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   44364
                                              4 BANK0      2     2      0
                            _InitI2C
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    2968
                                              5 COMMON     5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    2824
                                              5 COMMON     2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_setI2cISR                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   18688
                                              4 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    2963
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    2940
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    2963
                                             11 COMMON     3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    3499
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    3499
                                             13 COMMON     1     0      1
                                              0 BANK0      4     4      0
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    2802
                                              1 COMMON     4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     113
                                             11 COMMON     2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0      90
                                              8 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF4_SetInterruptHandler                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                   _I2CDriverHandler *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF4_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
            _GestureInterruptHandler *
     _IOCAF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _GestureInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2CDriverHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCAF4_SetInterruptHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF4_SetInterruptHandler
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
             _I2C_Read_Byte
             _I2C_Send_NACK
             _I2C_Start
             _I2C_Stop
             _I2C_Write_Byte
         _wireWriteDataByte
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _i2c1_driver_setI2cISR
   _initialize
     _InitI2C
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
           _I2C_Read_Byte
           _I2C_Send_NACK
           _I2C_Start
           _I2C_Stop
           _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
       _wireWriteDataByte
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _wireReadDataByte
       _I2C_ReStart
       _I2C_Read_Byte
       _I2C_Send_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     _wireWriteDataByte
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2CDriverHandler *
   _PIN_MANAGER_IOC *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _GestureInterruptHandler *
       _IOCAF4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      1E       5       37.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      70      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 04 15:33:03 2019

                     ?_setGestureExitThresh 0070                          __size_of_I2C_Start 0003  
                               __CFG_CP$OFF 0000                                 _SSPSTATbits 0214  
                               __CFG_LVP$ON 0000                                         l800 04D5  
                                       l806 02C8                                         l809 02E1  
                                       l796 04D0                                __CFG_CPD$OFF 0000  
                      __size_of_I2C_ReStart 0003                     __size_of_PMD_Initialize 0008  
                        I2C_Write_Byte@Byte 0070                                         wreg 0009  
                                      l3009 04E6                                        l3041 004F  
                                      l3037 004D                                        l2701 01D5  
                                      l3173 0159                                        l2633 02E8  
                                      l3169 0157                                        l3273 0305  
                                      l2707 01E1                                        l3187 0155  
                                      l3275 030E                                        l2709 01E2  
                                      l2691 01B0                                        l2907 028B  
                                      l2843 03A4                                        l2819 0495  
                                      l2925 025A                                        l2829 04A6  
                                      l2687 01AE                                        l2943 03F8  
                                      l2863 03C8                                        l2839 03A2  
                                      l2961 038C                                        l2699 01C8  
                                      l2859 03C6                                        l2981 02BC  
                                      l2879 04C8                                        l2889 04B7  
                                      l2999 041C                                        u2005 029E  
                                      _LATA 010C                                        _LATB 010D  
                                      _LATC 010E                                        u1845 034E  
                                      u1855 0325                                        u1784 01C1  
                                      u1785 01C0                                        u1945 026D  
                                      u1794 01CD                                        u1795 01CC  
                                      _PMD0 0911                                        i1l21 0010  
                                      u1965 023C                                        _PMD1 0912  
                                      _PMD2 0913                                        _PMD3 0914  
                                      i1l24 001E                                        _PMD4 0915  
                                      _PMD5 0916                                        i1l29 0023  
                                      _WPUA 020C                                        _WPUB 020D  
                                      _WPUC 020E                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 02EA  
                                      fsr0h 0005                                        indf0 0000  
                                      fsr0l 0004                                        btemp 007E  
                     ??_setGestureIntEnable 007B                            __end_of_I2C_Stop 0541  
                             __CFG_BOREN$ON 0000                               __CFG_BORV$LOW 0000  
                                      start 0025                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                             __end_of_InitI2C 0548  
            __size_of_OSCILLATOR_Initialize 0009                         __size_of_IOCAF4_ISR 000D  
             __end_of_OSCILLATOR_Initialize 050A                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000                              __CFG_DEBUG$OFF 0000  
                              ?_setLEDBoost 0070                                ?_setLEDDrive 0070  
                            _setGestureGain 025C                                       _OSCEN 091D  
                            _setGestureMode 03FA                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 0497                             __end_of_getMode 0512  
                   __end_of_PIN_MANAGER_IOC 0532                      __size_of_I2C_Read_Byte 002C  
                            _WDT_Initialize 0536                            _b_i2c_error_flag 0032  
              __end_of_setProxIntHighThresh 04A8                             __end_of_setMode 01F0  
                         __end_of_I2C_Start 0544                                       pclath 000A  
              __size_of_setAmbientLightGain 001C                      __size_of_I2C_Send_NACK 0004  
                                     status 0003                                       wtemp0 007E  
                  ?_setLightIntLowThreshold 0075                  __end_of_setGestureLEDDrive 025C  
                     setGestureWaitTime@val 007D                               _gesture_data_ 00A0  
                           __initialization 0027                      ??_setGestureExitThresh 0075  
                              __end_of_main 0314                           _handleGestureFlag 0033  
               ?_INTERRUPT_InterruptManager 0070                      __end_of_setGestureGain 028D  
                 __size_of_setProximityGain 0029                      __end_of_setGestureMode 041E  
                                    ??_main 007E                     _IOCAF4_InterruptHandler 003A  
         __size_of_setLightIntHighThreshold 0024                      __end_of_WDT_Initialize 053A  
                 ?_setLightIntHighThreshold 0075           setLightIntHighThreshold@threshold 0075  
                      __size_of_enablePower 000D                            _I2CDriverHandler 0549  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
              setProxIntLowThresh@threshold 0076                                      _RC0PPS 0EA0  
                                    _RC1PPS 0EA1                                      _ODCONA 028C  
                                    _ODCONB 028D                                      _ODCONC 028E  
                                    i1l2775 04F2                            _wireReadDataByte 041E  
                                    _OSCFRQ 091F                     ?_resetGestureParameters 0070  
                                    _WDTCON 0097                                      _SSPBUF 0211  
                                 ??_InitI2C 0070                           _gesture_lr_delta_ 002C  
                            __CFG_PWRTE$OFF 0000               setProxIntHighThresh@threshold 0076  
                         _gesture_lr_count_ 0028                         wireReadDataByte@reg 0079  
                       wireReadDataByte@val 007A                           _gesture_ud_delta_ 002E  
                             _I2C_Read_Byte 02BE                           _gesture_ud_count_ 002A  
                __end_of_setGestureWaitTime 03FA                              __CFG_STVREN$ON 0000  
              i2c1_driver_setI2cISR@handler 0070                             ?_setGestureGain 0070  
                             _I2C_Send_NACK 0532                                   ??_getMode 007B  
                           ?_setGestureMode 0070                     ??_setGestureEnterThresh 0075  
                            _PMD_Initialize 0512                                   ?_I2C_Stop 0070  
                                 ??_setMode 0034                             ?_WDT_Initialize 0070  
                     _i2c1_driver_setI2cISR 0520                    ?_GestureInterruptHandler 0070  
IOCAF4_SetInterruptHandler@InterruptHandler 0070                            ?_PIN_MANAGER_IOC 0070  
                              ??_IOCAF4_ISR 0070              __end_of_resetGestureParameters 0486  
                         _SYSTEM_Initialize 04F5                     __end_of__initialization 0036  
                        ?_SYSTEM_Initialize 0070                      setGestureWaitTime@time 007C  
                            ?_I2C_Read_Byte 0070                              __pcstackCOMMON 0070  
                       ??_SYSTEM_Initialize 0072      __end_of_IOCAF4_DefaultInterruptHandler 0549  
   __size_of_IOCAF4_DefaultInterruptHandler 0001              _IOCAF4_DefaultInterruptHandler 0548  
                      _setProxIntHighThresh 0497                              _gesture_state_ 0022  
                            ?_I2C_Send_NACK 0070                      __end_of_PMD_Initialize 051A  
                        __end_of_IOCAF4_ISR 04F5                                  ??_I2C_Stop 0070  
                        _gesture_far_count_ 0024                        __size_of_setLEDBoost 0031  
                      __size_of_setLEDDrive 0029                   __end_of_SYSTEM_Initialize 0501  
                                __pbssBANK0 0020                                  __pbssBANK1 00A0  
                      wireWriteDataByte@reg 0074                        wireWriteDataByte@val 0071  
                       getMode@enable_value 007C                                  __pmaintext 02EA  
                   setGestureLEDDrive@drive 0035                             __CFG_PPS1WAY$ON 0000  
              __size_of_enableGestureSensor 0060                                  __pintentry 0004  
                     ?_setProxIntHighThresh 0070                     __size_of_I2C_Write_Byte 0011  
                             ??_I2C_ReStart 0070                            _setProximityGain 0314  
                               setMode@mode 0037                             ?_PMD_Initialize 0070  
                       _setAmbientLightGain 043E             __end_of_GestureInterruptHandler 053E  
                    ?_i2c1_driver_setI2cISR 0070                                     _OSCCON1 0919  
                                   _OSCCON3 091B                                     _OSCTUNE 091E  
                                   _SSP1ADD 0212                                     _SLRCONA 030C  
                                   _SLRCONB 030D                                     _SLRCONC 030E  
                                   _SSP1BUF 0211                                     _SSP1MSK 0213  
               __end_of_setGestureIntEnable 038E                        ?_setAmbientLightGain 0070  
                        _i2c1_driver_i2cISR 003C                                     _InitI2C 0547  
                                 _I2C_Start 0541                             ??_I2C_Read_Byte 0070  
                             setMode@enable 007D                    __end_of_I2CDriverHandler 054A  
                           ??_I2C_Send_NACK 0070                    __end_of_wireReadDataByte 043E  
                                _initialize 003A                                     _getMode 050A  
          __size_of_setLightIntLowThreshold 0024                          _setGestureLEDDrive 022B  
                                   __ptext1 003A                                     __ptext2 0314  
                                   __ptext3 0486                                     __ptext4 0497  
                                   __ptext5 038E                                     __ptext6 03B2  
                                   __ptext7 033D                                     __ptext8 03D6  
                                   __ptext9 022B                       _OSCILLATOR_Initialize 0501  
                                   _setMode 01A2                    ??_PIN_MANAGER_Initialize 0072  
                                 _IOCAFbits 0393                         __end_of_I2C_ReStart 0547  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                       ?_setGestureLEDDrive 0070                  __size_of_SYSTEM_Initialize 000C  
                                   clrloop0 051B                        end_of_initialization 0036  
                     ??_setAmbientLightGain 007B                __size_of_setProxIntLowThresh 0011  
                                ?_I2C_Start 0070               enableGestureSensor@interrupts 0039  
             setGestureExitThresh@threshold 0076                        ??_setGestureLEDDrive 007B  
                              initialize@id 0039                            ??_setGestureGain 007B  
                    ??_setProxIntHighThresh 0075                            ??_setGestureMode 007B  
             __size_of_setGestureExitThresh 0011                            ??_WDT_Initialize 0070  
                         _wireWriteDataByte 045A                               ??_enablePower 007E  
                        ?_wireWriteDataByte 0071             setLightIntHighThreshold@val_low 0078  
            __size_of_setGestureEnterThresh 0011               __end_of_setGestureEnterThresh 04CA  
                        _setGestureWaitTime 03D6                ??_IOCAF4_SetInterruptHandler 0072  
                         __size_of_I2C_Stop 0003                         ??_wireWriteDataByte 0074  
                          __CFG_FEXTOSC$OFF 0000                         ?_setGestureWaitTime 0070  
                     setProximityGain@drive 0035            __size_of_GestureInterruptHandler 0004  
                 __end_of_wireWriteDataByte 0471                              _I2C_Write_Byte 04CA  
                      ??_setGestureWaitTime 007B                                 ?_initialize 0070  
                               _I2C_ReStart 0544         __size_of_IOCAF4_SetInterruptHandler 0006  
                    ?_OSCILLATOR_Initialize 0070                    _setLightIntHighThreshold 03B2  
                           _gesture_motion_ 0020                         start_initialization 0027  
                        setGestureGain@gain 0035             __size_of_PIN_MANAGER_Initialize 003B  
          setLightIntHighThreshold@val_high 0079                         _enableGestureSensor 0142  
                       __end_of_enablePower 04E8                    __end_of_setProximityGain 033D  
                               ??_I2C_Start 0070                    __size_of_PIN_MANAGER_IOC 0006  
                          __CFG_LPBOREN$OFF 0000                      __end_of_I2C_Write_Byte 04DB  
                          ??_PMD_Initialize 0070             setLightIntLowThreshold@val_high 0079  
                      ?_enableGestureSensor 0070                          setGestureMode@mode 007C  
                   _setLightIntLowThreshold 038E                   setGestureIntEnable@enable 007D  
                  setAmbientLightGain@drive 007C                     ??_i2c1_driver_setI2cISR 0072  
                             ??_setLEDBoost 007B                               ??_setLEDDrive 007B  
                    setGestureIntEnable@val 007C                                   ___latbits 0002  
                             __pcstackBANK0 0034                         __size_of_initialize 0108  
                                  ?_InitI2C 0070                                   __pnvBANK0 003A  
                    _PIN_MANAGER_Initialize 01F0                             ?_I2C_Write_Byte 0070  
                     ??_enableGestureSensor 0038                           ?_I2CDriverHandler 0070  
                __size_of_wireWriteDataByte 0017                 _i2c1_driver_busCollisionISR 0030  
                       _setProxIntLowThresh 0486                          ??_I2CDriverHandler 0070  
              ??_INTERRUPT_InterruptManager 0070                                    ?_getMode 0070  
                        I2C_Read_Byte@count 0074                           ?_wireReadDataByte 0070  
                               _enablePower 04DB                          ??_wireReadDataByte 0078  
                                  _I2C_Stop 053E                    ??_resetGestureParameters 0070  
                                  ?_setMode 007D          __end_of_IOCAF4_SetInterruptHandler 052C  
                _IOCAF4_SetInterruptHandler 0526                         __end_of_setLEDBoost 02BE  
                       __end_of_setLEDDrive 0366                        ?_setProxIntLowThresh 0070  
                                  _LATAbits 010C                                    _LATCbits 010E  
                                 clear_ram0 051A                                    _PIE0bits 0090  
                                  _PIE1bits 0091                __size_of_setGestureIntEnable 0028  
                   _GestureInterruptHandler 053A                         _gesture_near_count_ 0026  
       __size_of_INTERRUPT_InterruptManager 0021                                    _PIR0bits 0010  
                                  _PIR1bits 0011                       __end_of_I2C_Read_Byte 02EA  
                 ??_setLightIntLowThreshold 0077                                    _SSP1CON1 0215  
                                  _SSP1CON2 0216                              setLEDBoost@val 0034  
                                  _SSP1STAT 0214                           ??_PIN_MANAGER_IOC 0070  
                     __end_of_I2C_Send_NACK 0536                              setLEDDrive@val 0034  
               __end_of_setAmbientLightGain 045A                __end_of_setGestureExitThresh 04B9  
                     ??_setProxIntLowThresh 0075                           setGestureGain@val 0034  
                          __size_of_InitI2C 0001                  ??_setLightIntHighThreshold 0077  
               __size_of_setGestureLEDDrive 0031                              setMode@reg_val 0036  
            setLightIntLowThreshold@val_low 0078                           setGestureMode@val 007D  
                   ??_OSCILLATOR_Initialize 0070               __size_of_setProxIntHighThresh 0011  
                              ??_initialize 0038                                ?_I2C_ReStart 0070  
          setLightIntLowThreshold@threshold 0075                            __size_of_getMode 0008  
                               _setLEDBoost 028D                                 _setLEDDrive 033D  
           __size_of_resetGestureParameters 0015             __end_of_setLightIntLowThreshold 03B2  
                     setGestureLEDDrive@val 0034                            __size_of_setMode 004E  
                                  __ptext10 025C                                    __ptext11 04A8  
                                  __ptext20 0471                                    __ptext12 04B9  
                                  __ptext21 04DB                                    __ptext13 043E  
                                  __ptext30 02BE                                    __ptext22 01A2  
                                  __ptext14 0547                                    __ptext31 0544  
                                  __ptext23 045A                                    __ptext15 0520  
                                  __ptext40 04E8                                    __ptext32 04F5  
                                  __ptext24 050A                                    __ptext16 0142  
                                  __ptext41 053A                                    __ptext33 0536  
                                  __ptext25 041E                                    __ptext17 028D  
                                  __ptext42 0548                                    __ptext34 0512  
                                  __ptext26 04CA                                    __ptext18 03FA  
                                  __ptext43 0549                                    __ptext35 01F0  
                                  __ptext27 053E                                    __ptext19 0366  
                                  __ptext36 0526                                    __ptext28 0541  
                                  __ptext37 0501                                    __ptext29 0532  
                                  __ptext39 052C                       _setGestureEnterThresh 04B9  
                              _SSP1CON1bits 0215                                _SSP1CON2bits 0216  
            setGestureEnterThresh@threshold 0076                                  _IOCAF4_ISR 04E8  
                 ??_GestureInterruptHandler 0070                               __size_of_main 002A  
                         ?_setProximityGain 0070                          __end_of_initialize 0142  
                        ??_setProximityGain 007B                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0025                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                         setProximityGain@val 0034  
               __size_of_setGestureWaitTime 0024              __size_of_i2c1_driver_setI2cISR 0006  
             __end_of_i2c1_driver_setI2cISR 0526                     __size_of_setGestureGain 0031  
                                _INTCONbits 000B                     __size_of_setGestureMode 0024  
                    setAmbientLightGain@val 007D                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                     ?_PIN_MANAGER_Initialize 0070  
                          ??_I2C_Write_Byte 0070                           __CFG_CLKOUTEN$OFF 0000  
                    _resetGestureParameters 0471                        _setGestureExitThresh 04A8  
                                _SSP1DATPPS 0E21                                ?_enablePower 0070  
                                _SSP1CLKPPS 0E20                         _setGestureIntEnable 0366  
                          setLEDBoost@boost 0035                      ?_setGestureEnterThresh 0070  
               ?_IOCAF4_SetInterruptHandler 0070                   __size_of_I2CDriverHandler 0001  
                               ?_IOCAF4_ISR 0070              __end_of_PIN_MANAGER_Initialize 022B  
                 __size_of_wireReadDataByte 0020            ??_IOCAF4_DefaultInterruptHandler 0070  
           ?_IOCAF4_DefaultInterruptHandler 0070                            setLEDDrive@drive 0035  
                           _PIN_MANAGER_IOC 052C                 __end_of_enableGestureSensor 01A2  
                      ?_setGestureIntEnable 0070            __end_of_setLightIntHighThreshold 03D6  
