

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 01 19:11:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2
    92                           	psect	intentry,global,class=CODE,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text68,local,class=CODE,merge=1,delta=2
    98                           	psect	text69,local,class=CODE,merge=1,delta=2
    99                           	psect	text70,local,class=CODE,merge=1,delta=2
   100                           	psect	text71,local,class=CODE,merge=1,delta=2
   101                           	psect	text72,local,class=CODE,merge=1,delta=2
   102                           	psect	text73,local,class=CODE,merge=1,delta=2
   103                           	psect	text74,local,class=CODE,merge=1,delta=2
   104                           	psect	text75,local,class=CODE,merge=1,delta=2
   105                           	psect	text76,local,class=CODE,merge=1,delta=2
   106                           	psect	text77,local,class=CODE,merge=1,delta=2
   107                           	psect	text78,local,class=CODE,merge=1,delta=2
   108                           	psect	text79,local,class=CODE,merge=1,delta=2
   109                           	psect	text80,local,class=CODE,merge=1,delta=2
   110                           	psect	text81,local,class=CODE,merge=1,delta=2
   111                           	psect	text82,local,class=CODE,merge=1,delta=2
   112                           	psect	text83,local,class=CODE,merge=1,delta=2
   113                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text91,local,class=CODE,merge=1,delta=2
   121                           	psect	text92,local,class=CODE,merge=1,delta=2
   122                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text96,local,class=CODE,merge=1,delta=2
   126                           	psect	text97,local,class=CODE,merge=1,delta=2
   127                           	psect	text98,local,class=CODE,merge=1,delta=2
   128                           	dabs	1,0x7E,2
   129  0000                     
   130                           ; Version 2.05
   131                           ; Generated 20/12/2018 GMT
   132                           ; 
   133                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC16F18345 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0097                     	;# 
   207  009B                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  018E                     	;# 
   228  0197                     	;# 
   229  0199                     	;# 
   230  0199                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019A                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019C                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019D                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  019E                     	;# 
   248  019E                     	;# 
   249  019F                     	;# 
   250  019F                     	;# 
   251  019F                     	;# 
   252  019F                     	;# 
   253  019F                     	;# 
   254  020C                     	;# 
   255  020D                     	;# 
   256  020E                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0219                     	;# 
   274  021A                     	;# 
   275  021B                     	;# 
   276  021C                     	;# 
   277  021D                     	;# 
   278  021D                     	;# 
   279  021E                     	;# 
   280  021F                     	;# 
   281  028C                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0295                     	;# 
   290  0295                     	;# 
   291  0296                     	;# 
   292  0297                     	;# 
   293  0298                     	;# 
   294  029F                     	;# 
   295  030C                     	;# 
   296  030D                     	;# 
   297  030E                     	;# 
   298  0311                     	;# 
   299  0311                     	;# 
   300  0312                     	;# 
   301  0313                     	;# 
   302  0314                     	;# 
   303  0315                     	;# 
   304  0315                     	;# 
   305  0316                     	;# 
   306  0317                     	;# 
   307  0318                     	;# 
   308  038C                     	;# 
   309  038D                     	;# 
   310  038E                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  0393                     	;# 
   314  0394                     	;# 
   315  0395                     	;# 
   316  0396                     	;# 
   317  0397                     	;# 
   318  0398                     	;# 
   319  0399                     	;# 
   320  039A                     	;# 
   321  039C                     	;# 
   322  039D                     	;# 
   323  039E                     	;# 
   324  039F                     	;# 
   325  0411                     	;# 
   326  0411                     	;# 
   327  0412                     	;# 
   328  0413                     	;# 
   329  0414                     	;# 
   330  0415                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  0418                     	;# 
   334  0418                     	;# 
   335  0419                     	;# 
   336  041A                     	;# 
   337  041B                     	;# 
   338  041C                     	;# 
   339  041D                     	;# 
   340  041E                     	;# 
   341  041F                     	;# 
   342  0498                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  049E                     	;# 
   351  049F                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  0619                     	;# 
   356  061A                     	;# 
   357  061B                     	;# 
   358  061C                     	;# 
   359  061C                     	;# 
   360  061F                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0696                     	;# 
   367  0697                     	;# 
   368  0698                     	;# 
   369  0699                     	;# 
   370  0711                     	;# 
   371  0712                     	;# 
   372  0713                     	;# 
   373  0714                     	;# 
   374  0715                     	;# 
   375  0716                     	;# 
   376  0717                     	;# 
   377  0718                     	;# 
   378  0719                     	;# 
   379  0891                     	;# 
   380  0891                     	;# 
   381  0891                     	;# 
   382  0891                     	;# 
   383  0891                     	;# 
   384  0891                     	;# 
   385  0892                     	;# 
   386  0892                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0893                     	;# 
   391  0893                     	;# 
   392  0893                     	;# 
   393  0893                     	;# 
   394  0894                     	;# 
   395  0894                     	;# 
   396  0894                     	;# 
   397  0895                     	;# 
   398  0895                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0896                     	;# 
   402  0896                     	;# 
   403  089B                     	;# 
   404  0911                     	;# 
   405  0912                     	;# 
   406  0913                     	;# 
   407  0914                     	;# 
   408  0915                     	;# 
   409  0916                     	;# 
   410  0918                     	;# 
   411  0919                     	;# 
   412  091A                     	;# 
   413  091B                     	;# 
   414  091C                     	;# 
   415  091D                     	;# 
   416  091E                     	;# 
   417  091F                     	;# 
   418  0E0F                     	;# 
   419  0E10                     	;# 
   420  0E11                     	;# 
   421  0E12                     	;# 
   422  0E13                     	;# 
   423  0E14                     	;# 
   424  0E15                     	;# 
   425  0E16                     	;# 
   426  0E17                     	;# 
   427  0E18                     	;# 
   428  0E19                     	;# 
   429  0E1A                     	;# 
   430  0E1B                     	;# 
   431  0E1C                     	;# 
   432  0E1D                     	;# 
   433  0E1E                     	;# 
   434  0E1F                     	;# 
   435  0E20                     	;# 
   436  0E21                     	;# 
   437  0E22                     	;# 
   438  0E24                     	;# 
   439  0E25                     	;# 
   440  0E28                     	;# 
   441  0E29                     	;# 
   442  0E2A                     	;# 
   443  0E2B                     	;# 
   444  0E2C                     	;# 
   445  0E2D                     	;# 
   446  0E2E                     	;# 
   447  0E2F                     	;# 
   448  0E90                     	;# 
   449  0E91                     	;# 
   450  0E92                     	;# 
   451  0E94                     	;# 
   452  0E95                     	;# 
   453  0E9C                     	;# 
   454  0E9D                     	;# 
   455  0E9E                     	;# 
   456  0E9F                     	;# 
   457  0EA0                     	;# 
   458  0EA1                     	;# 
   459  0EA2                     	;# 
   460  0EA3                     	;# 
   461  0EA4                     	;# 
   462  0EA5                     	;# 
   463  0EA6                     	;# 
   464  0EA7                     	;# 
   465  0F0F                     	;# 
   466  0F10                     	;# 
   467  0F11                     	;# 
   468  0F12                     	;# 
   469  0F13                     	;# 
   470  0F14                     	;# 
   471  0F15                     	;# 
   472  0F16                     	;# 
   473  0F17                     	;# 
   474  0F18                     	;# 
   475  0F19                     	;# 
   476  0F1A                     	;# 
   477  0F1B                     	;# 
   478  0F1C                     	;# 
   479  0F1D                     	;# 
   480  0F1E                     	;# 
   481  0F1F                     	;# 
   482  0F20                     	;# 
   483  0F21                     	;# 
   484  0F22                     	;# 
   485  0F23                     	;# 
   486  0F24                     	;# 
   487  0F25                     	;# 
   488  0F26                     	;# 
   489  0F27                     	;# 
   490  0F28                     	;# 
   491  0F29                     	;# 
   492  0F2A                     	;# 
   493  0F2B                     	;# 
   494  0F2C                     	;# 
   495  0F2D                     	;# 
   496  0F2E                     	;# 
   497  0F2F                     	;# 
   498  0F30                     	;# 
   499  0F31                     	;# 
   500  0F32                     	;# 
   501  0F33                     	;# 
   502  0F34                     	;# 
   503  0F35                     	;# 
   504  0F36                     	;# 
   505  0F37                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  0010                     	;# 
   533  0011                     	;# 
   534  0012                     	;# 
   535  0013                     	;# 
   536  0014                     	;# 
   537  0015                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  001D                     	;# 
   549  001E                     	;# 
   550  001F                     	;# 
   551  008C                     	;# 
   552  008D                     	;# 
   553  008E                     	;# 
   554  0090                     	;# 
   555  0091                     	;# 
   556  0092                     	;# 
   557  0093                     	;# 
   558  0094                     	;# 
   559  0097                     	;# 
   560  009B                     	;# 
   561  009B                     	;# 
   562  009C                     	;# 
   563  009D                     	;# 
   564  009E                     	;# 
   565  009F                     	;# 
   566  010C                     	;# 
   567  010D                     	;# 
   568  010E                     	;# 
   569  0111                     	;# 
   570  0112                     	;# 
   571  0113                     	;# 
   572  0114                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0197                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  020D                     	;# 
   609  020E                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  0219                     	;# 
   627  021A                     	;# 
   628  021B                     	;# 
   629  021C                     	;# 
   630  021D                     	;# 
   631  021D                     	;# 
   632  021E                     	;# 
   633  021F                     	;# 
   634  028C                     	;# 
   635  028D                     	;# 
   636  028E                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0295                     	;# 
   643  0295                     	;# 
   644  0296                     	;# 
   645  0297                     	;# 
   646  0298                     	;# 
   647  029F                     	;# 
   648  030C                     	;# 
   649  030D                     	;# 
   650  030E                     	;# 
   651  0311                     	;# 
   652  0311                     	;# 
   653  0312                     	;# 
   654  0313                     	;# 
   655  0314                     	;# 
   656  0315                     	;# 
   657  0315                     	;# 
   658  0316                     	;# 
   659  0317                     	;# 
   660  0318                     	;# 
   661  038C                     	;# 
   662  038D                     	;# 
   663  038E                     	;# 
   664  0391                     	;# 
   665  0392                     	;# 
   666  0393                     	;# 
   667  0394                     	;# 
   668  0395                     	;# 
   669  0396                     	;# 
   670  0397                     	;# 
   671  0398                     	;# 
   672  0399                     	;# 
   673  039A                     	;# 
   674  039C                     	;# 
   675  039D                     	;# 
   676  039E                     	;# 
   677  039F                     	;# 
   678  0411                     	;# 
   679  0411                     	;# 
   680  0412                     	;# 
   681  0413                     	;# 
   682  0414                     	;# 
   683  0415                     	;# 
   684  0416                     	;# 
   685  0417                     	;# 
   686  0418                     	;# 
   687  0418                     	;# 
   688  0419                     	;# 
   689  041A                     	;# 
   690  041B                     	;# 
   691  041C                     	;# 
   692  041D                     	;# 
   693  041E                     	;# 
   694  041F                     	;# 
   695  0498                     	;# 
   696  0498                     	;# 
   697  0499                     	;# 
   698  049A                     	;# 
   699  049B                     	;# 
   700  049B                     	;# 
   701  049C                     	;# 
   702  049D                     	;# 
   703  049E                     	;# 
   704  049F                     	;# 
   705  0617                     	;# 
   706  0618                     	;# 
   707  0619                     	;# 
   708  0619                     	;# 
   709  061A                     	;# 
   710  061B                     	;# 
   711  061C                     	;# 
   712  061C                     	;# 
   713  061F                     	;# 
   714  0691                     	;# 
   715  0692                     	;# 
   716  0693                     	;# 
   717  0694                     	;# 
   718  0695                     	;# 
   719  0696                     	;# 
   720  0697                     	;# 
   721  0698                     	;# 
   722  0699                     	;# 
   723  0711                     	;# 
   724  0712                     	;# 
   725  0713                     	;# 
   726  0714                     	;# 
   727  0715                     	;# 
   728  0716                     	;# 
   729  0717                     	;# 
   730  0718                     	;# 
   731  0719                     	;# 
   732  0891                     	;# 
   733  0891                     	;# 
   734  0891                     	;# 
   735  0891                     	;# 
   736  0891                     	;# 
   737  0891                     	;# 
   738  0892                     	;# 
   739  0892                     	;# 
   740  0892                     	;# 
   741  0893                     	;# 
   742  0893                     	;# 
   743  0893                     	;# 
   744  0893                     	;# 
   745  0893                     	;# 
   746  0893                     	;# 
   747  0894                     	;# 
   748  0894                     	;# 
   749  0894                     	;# 
   750  0895                     	;# 
   751  0895                     	;# 
   752  0895                     	;# 
   753  0896                     	;# 
   754  0896                     	;# 
   755  0896                     	;# 
   756  089B                     	;# 
   757  0911                     	;# 
   758  0912                     	;# 
   759  0913                     	;# 
   760  0914                     	;# 
   761  0915                     	;# 
   762  0916                     	;# 
   763  0918                     	;# 
   764  0919                     	;# 
   765  091A                     	;# 
   766  091B                     	;# 
   767  091C                     	;# 
   768  091D                     	;# 
   769  091E                     	;# 
   770  091F                     	;# 
   771  0E0F                     	;# 
   772  0E10                     	;# 
   773  0E11                     	;# 
   774  0E12                     	;# 
   775  0E13                     	;# 
   776  0E14                     	;# 
   777  0E15                     	;# 
   778  0E16                     	;# 
   779  0E17                     	;# 
   780  0E18                     	;# 
   781  0E19                     	;# 
   782  0E1A                     	;# 
   783  0E1B                     	;# 
   784  0E1C                     	;# 
   785  0E1D                     	;# 
   786  0E1E                     	;# 
   787  0E1F                     	;# 
   788  0E20                     	;# 
   789  0E21                     	;# 
   790  0E22                     	;# 
   791  0E24                     	;# 
   792  0E25                     	;# 
   793  0E28                     	;# 
   794  0E29                     	;# 
   795  0E2A                     	;# 
   796  0E2B                     	;# 
   797  0E2C                     	;# 
   798  0E2D                     	;# 
   799  0E2E                     	;# 
   800  0E2F                     	;# 
   801  0E90                     	;# 
   802  0E91                     	;# 
   803  0E92                     	;# 
   804  0E94                     	;# 
   805  0E95                     	;# 
   806  0E9C                     	;# 
   807  0E9D                     	;# 
   808  0E9E                     	;# 
   809  0E9F                     	;# 
   810  0EA0                     	;# 
   811  0EA1                     	;# 
   812  0EA2                     	;# 
   813  0EA3                     	;# 
   814  0EA4                     	;# 
   815  0EA5                     	;# 
   816  0EA6                     	;# 
   817  0EA7                     	;# 
   818  0F0F                     	;# 
   819  0F10                     	;# 
   820  0F11                     	;# 
   821  0F12                     	;# 
   822  0F13                     	;# 
   823  0F14                     	;# 
   824  0F15                     	;# 
   825  0F16                     	;# 
   826  0F17                     	;# 
   827  0F18                     	;# 
   828  0F19                     	;# 
   829  0F1A                     	;# 
   830  0F1B                     	;# 
   831  0F1C                     	;# 
   832  0F1D                     	;# 
   833  0F1E                     	;# 
   834  0F1F                     	;# 
   835  0F20                     	;# 
   836  0F21                     	;# 
   837  0F22                     	;# 
   838  0F23                     	;# 
   839  0F24                     	;# 
   840  0F25                     	;# 
   841  0F26                     	;# 
   842  0F27                     	;# 
   843  0F28                     	;# 
   844  0F29                     	;# 
   845  0F2A                     	;# 
   846  0F2B                     	;# 
   847  0F2C                     	;# 
   848  0F2D                     	;# 
   849  0F2E                     	;# 
   850  0F2F                     	;# 
   851  0F30                     	;# 
   852  0F31                     	;# 
   853  0F32                     	;# 
   854  0F33                     	;# 
   855  0F34                     	;# 
   856  0F35                     	;# 
   857  0F36                     	;# 
   858  0F37                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  0010                     	;# 
   886  0011                     	;# 
   887  0012                     	;# 
   888  0013                     	;# 
   889  0014                     	;# 
   890  0015                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  0090                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0097                     	;# 
   913  009B                     	;# 
   914  009B                     	;# 
   915  009C                     	;# 
   916  009D                     	;# 
   917  009E                     	;# 
   918  009F                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  010E                     	;# 
   922  0111                     	;# 
   923  0112                     	;# 
   924  0113                     	;# 
   925  0114                     	;# 
   926  0115                     	;# 
   927  0116                     	;# 
   928  0117                     	;# 
   929  0118                     	;# 
   930  0119                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  018E                     	;# 
   934  0197                     	;# 
   935  0199                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  020E                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0219                     	;# 
   980  021A                     	;# 
   981  021B                     	;# 
   982  021C                     	;# 
   983  021D                     	;# 
   984  021D                     	;# 
   985  021E                     	;# 
   986  021F                     	;# 
   987  028C                     	;# 
   988  028D                     	;# 
   989  028E                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0294                     	;# 
   995  0295                     	;# 
   996  0295                     	;# 
   997  0296                     	;# 
   998  0297                     	;# 
   999  0298                     	;# 
  1000  029F                     	;# 
  1001  030C                     	;# 
  1002  030D                     	;# 
  1003  030E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0314                     	;# 
  1009  0315                     	;# 
  1010  0315                     	;# 
  1011  0316                     	;# 
  1012  0317                     	;# 
  1013  0318                     	;# 
  1014  038C                     	;# 
  1015  038D                     	;# 
  1016  038E                     	;# 
  1017  0391                     	;# 
  1018  0392                     	;# 
  1019  0393                     	;# 
  1020  0394                     	;# 
  1021  0395                     	;# 
  1022  0396                     	;# 
  1023  0397                     	;# 
  1024  0398                     	;# 
  1025  0399                     	;# 
  1026  039A                     	;# 
  1027  039C                     	;# 
  1028  039D                     	;# 
  1029  039E                     	;# 
  1030  039F                     	;# 
  1031  0411                     	;# 
  1032  0411                     	;# 
  1033  0412                     	;# 
  1034  0413                     	;# 
  1035  0414                     	;# 
  1036  0415                     	;# 
  1037  0416                     	;# 
  1038  0417                     	;# 
  1039  0418                     	;# 
  1040  0418                     	;# 
  1041  0419                     	;# 
  1042  041A                     	;# 
  1043  041B                     	;# 
  1044  041C                     	;# 
  1045  041D                     	;# 
  1046  041E                     	;# 
  1047  041F                     	;# 
  1048  0498                     	;# 
  1049  0498                     	;# 
  1050  0499                     	;# 
  1051  049A                     	;# 
  1052  049B                     	;# 
  1053  049B                     	;# 
  1054  049C                     	;# 
  1055  049D                     	;# 
  1056  049E                     	;# 
  1057  049F                     	;# 
  1058  0617                     	;# 
  1059  0618                     	;# 
  1060  0619                     	;# 
  1061  0619                     	;# 
  1062  061A                     	;# 
  1063  061B                     	;# 
  1064  061C                     	;# 
  1065  061C                     	;# 
  1066  061F                     	;# 
  1067  0691                     	;# 
  1068  0692                     	;# 
  1069  0693                     	;# 
  1070  0694                     	;# 
  1071  0695                     	;# 
  1072  0696                     	;# 
  1073  0697                     	;# 
  1074  0698                     	;# 
  1075  0699                     	;# 
  1076  0711                     	;# 
  1077  0712                     	;# 
  1078  0713                     	;# 
  1079  0714                     	;# 
  1080  0715                     	;# 
  1081  0716                     	;# 
  1082  0717                     	;# 
  1083  0718                     	;# 
  1084  0719                     	;# 
  1085  0891                     	;# 
  1086  0891                     	;# 
  1087  0891                     	;# 
  1088  0891                     	;# 
  1089  0891                     	;# 
  1090  0891                     	;# 
  1091  0892                     	;# 
  1092  0892                     	;# 
  1093  0892                     	;# 
  1094  0893                     	;# 
  1095  0893                     	;# 
  1096  0893                     	;# 
  1097  0893                     	;# 
  1098  0893                     	;# 
  1099  0893                     	;# 
  1100  0894                     	;# 
  1101  0894                     	;# 
  1102  0894                     	;# 
  1103  0895                     	;# 
  1104  0895                     	;# 
  1105  0895                     	;# 
  1106  0896                     	;# 
  1107  0896                     	;# 
  1108  0896                     	;# 
  1109  089B                     	;# 
  1110  0911                     	;# 
  1111  0912                     	;# 
  1112  0913                     	;# 
  1113  0914                     	;# 
  1114  0915                     	;# 
  1115  0916                     	;# 
  1116  0918                     	;# 
  1117  0919                     	;# 
  1118  091A                     	;# 
  1119  091B                     	;# 
  1120  091C                     	;# 
  1121  091D                     	;# 
  1122  091E                     	;# 
  1123  091F                     	;# 
  1124  0E0F                     	;# 
  1125  0E10                     	;# 
  1126  0E11                     	;# 
  1127  0E12                     	;# 
  1128  0E13                     	;# 
  1129  0E14                     	;# 
  1130  0E15                     	;# 
  1131  0E16                     	;# 
  1132  0E17                     	;# 
  1133  0E18                     	;# 
  1134  0E19                     	;# 
  1135  0E1A                     	;# 
  1136  0E1B                     	;# 
  1137  0E1C                     	;# 
  1138  0E1D                     	;# 
  1139  0E1E                     	;# 
  1140  0E1F                     	;# 
  1141  0E20                     	;# 
  1142  0E21                     	;# 
  1143  0E22                     	;# 
  1144  0E24                     	;# 
  1145  0E25                     	;# 
  1146  0E28                     	;# 
  1147  0E29                     	;# 
  1148  0E2A                     	;# 
  1149  0E2B                     	;# 
  1150  0E2C                     	;# 
  1151  0E2D                     	;# 
  1152  0E2E                     	;# 
  1153  0E2F                     	;# 
  1154  0E90                     	;# 
  1155  0E91                     	;# 
  1156  0E92                     	;# 
  1157  0E94                     	;# 
  1158  0E95                     	;# 
  1159  0E9C                     	;# 
  1160  0E9D                     	;# 
  1161  0E9E                     	;# 
  1162  0E9F                     	;# 
  1163  0EA0                     	;# 
  1164  0EA1                     	;# 
  1165  0EA2                     	;# 
  1166  0EA3                     	;# 
  1167  0EA4                     	;# 
  1168  0EA5                     	;# 
  1169  0EA6                     	;# 
  1170  0EA7                     	;# 
  1171  0F0F                     	;# 
  1172  0F10                     	;# 
  1173  0F11                     	;# 
  1174  0F12                     	;# 
  1175  0F13                     	;# 
  1176  0F14                     	;# 
  1177  0F15                     	;# 
  1178  0F16                     	;# 
  1179  0F17                     	;# 
  1180  0F18                     	;# 
  1181  0F19                     	;# 
  1182  0F1A                     	;# 
  1183  0F1B                     	;# 
  1184  0F1C                     	;# 
  1185  0F1D                     	;# 
  1186  0F1E                     	;# 
  1187  0F1F                     	;# 
  1188  0F20                     	;# 
  1189  0F21                     	;# 
  1190  0F22                     	;# 
  1191  0F23                     	;# 
  1192  0F24                     	;# 
  1193  0F25                     	;# 
  1194  0F26                     	;# 
  1195  0F27                     	;# 
  1196  0F28                     	;# 
  1197  0F29                     	;# 
  1198  0F2A                     	;# 
  1199  0F2B                     	;# 
  1200  0F2C                     	;# 
  1201  0F2D                     	;# 
  1202  0F2E                     	;# 
  1203  0F2F                     	;# 
  1204  0F30                     	;# 
  1205  0F31                     	;# 
  1206  0F32                     	;# 
  1207  0F33                     	;# 
  1208  0F34                     	;# 
  1209  0F35                     	;# 
  1210  0F36                     	;# 
  1211  0F37                     	;# 
  1212  0FE4                     	;# 
  1213  0FE5                     	;# 
  1214  0FE6                     	;# 
  1215  0FE7                     	;# 
  1216  0FE8                     	;# 
  1217  0FE9                     	;# 
  1218  0FEA                     	;# 
  1219  0FEB                     	;# 
  1220  0FED                     	;# 
  1221  0FEE                     	;# 
  1222  0FEF                     	;# 
  1223  0000                     	;# 
  1224  0001                     	;# 
  1225  0002                     	;# 
  1226  0003                     	;# 
  1227  0004                     	;# 
  1228  0005                     	;# 
  1229  0006                     	;# 
  1230  0007                     	;# 
  1231  0008                     	;# 
  1232  0009                     	;# 
  1233  000A                     	;# 
  1234  000B                     	;# 
  1235  000C                     	;# 
  1236  000D                     	;# 
  1237  000E                     	;# 
  1238  0010                     	;# 
  1239  0011                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0014                     	;# 
  1243  0015                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001B                     	;# 
  1253  001C                     	;# 
  1254  001D                     	;# 
  1255  001E                     	;# 
  1256  001F                     	;# 
  1257  008C                     	;# 
  1258  008D                     	;# 
  1259  008E                     	;# 
  1260  0090                     	;# 
  1261  0091                     	;# 
  1262  0092                     	;# 
  1263  0093                     	;# 
  1264  0094                     	;# 
  1265  0097                     	;# 
  1266  009B                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  009F                     	;# 
  1272  010C                     	;# 
  1273  010D                     	;# 
  1274  010E                     	;# 
  1275  0111                     	;# 
  1276  0112                     	;# 
  1277  0113                     	;# 
  1278  0114                     	;# 
  1279  0115                     	;# 
  1280  0116                     	;# 
  1281  0117                     	;# 
  1282  0118                     	;# 
  1283  0119                     	;# 
  1284  018C                     	;# 
  1285  018D                     	;# 
  1286  018E                     	;# 
  1287  0197                     	;# 
  1288  0199                     	;# 
  1289  0199                     	;# 
  1290  0199                     	;# 
  1291  019A                     	;# 
  1292  019A                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019C                     	;# 
  1302  019D                     	;# 
  1303  019D                     	;# 
  1304  019D                     	;# 
  1305  019E                     	;# 
  1306  019E                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  019F                     	;# 
  1312  019F                     	;# 
  1313  020C                     	;# 
  1314  020D                     	;# 
  1315  020E                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0216                     	;# 
  1329  0216                     	;# 
  1330  0217                     	;# 
  1331  0217                     	;# 
  1332  0219                     	;# 
  1333  021A                     	;# 
  1334  021B                     	;# 
  1335  021C                     	;# 
  1336  021D                     	;# 
  1337  021D                     	;# 
  1338  021E                     	;# 
  1339  021F                     	;# 
  1340  028C                     	;# 
  1341  028D                     	;# 
  1342  028E                     	;# 
  1343  0291                     	;# 
  1344  0291                     	;# 
  1345  0292                     	;# 
  1346  0293                     	;# 
  1347  0294                     	;# 
  1348  0295                     	;# 
  1349  0295                     	;# 
  1350  0296                     	;# 
  1351  0297                     	;# 
  1352  0298                     	;# 
  1353  029F                     	;# 
  1354  030C                     	;# 
  1355  030D                     	;# 
  1356  030E                     	;# 
  1357  0311                     	;# 
  1358  0311                     	;# 
  1359  0312                     	;# 
  1360  0313                     	;# 
  1361  0314                     	;# 
  1362  0315                     	;# 
  1363  0315                     	;# 
  1364  0316                     	;# 
  1365  0317                     	;# 
  1366  0318                     	;# 
  1367  038C                     	;# 
  1368  038D                     	;# 
  1369  038E                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0397                     	;# 
  1377  0398                     	;# 
  1378  0399                     	;# 
  1379  039A                     	;# 
  1380  039C                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  0411                     	;# 
  1385  0411                     	;# 
  1386  0412                     	;# 
  1387  0413                     	;# 
  1388  0414                     	;# 
  1389  0415                     	;# 
  1390  0416                     	;# 
  1391  0417                     	;# 
  1392  0418                     	;# 
  1393  0418                     	;# 
  1394  0419                     	;# 
  1395  041A                     	;# 
  1396  041B                     	;# 
  1397  041C                     	;# 
  1398  041D                     	;# 
  1399  041E                     	;# 
  1400  041F                     	;# 
  1401  0498                     	;# 
  1402  0498                     	;# 
  1403  0499                     	;# 
  1404  049A                     	;# 
  1405  049B                     	;# 
  1406  049B                     	;# 
  1407  049C                     	;# 
  1408  049D                     	;# 
  1409  049E                     	;# 
  1410  049F                     	;# 
  1411  0617                     	;# 
  1412  0618                     	;# 
  1413  0619                     	;# 
  1414  0619                     	;# 
  1415  061A                     	;# 
  1416  061B                     	;# 
  1417  061C                     	;# 
  1418  061C                     	;# 
  1419  061F                     	;# 
  1420  0691                     	;# 
  1421  0692                     	;# 
  1422  0693                     	;# 
  1423  0694                     	;# 
  1424  0695                     	;# 
  1425  0696                     	;# 
  1426  0697                     	;# 
  1427  0698                     	;# 
  1428  0699                     	;# 
  1429  0711                     	;# 
  1430  0712                     	;# 
  1431  0713                     	;# 
  1432  0714                     	;# 
  1433  0715                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  0891                     	;# 
  1439  0891                     	;# 
  1440  0891                     	;# 
  1441  0891                     	;# 
  1442  0891                     	;# 
  1443  0891                     	;# 
  1444  0892                     	;# 
  1445  0892                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0893                     	;# 
  1449  0893                     	;# 
  1450  0893                     	;# 
  1451  0893                     	;# 
  1452  0893                     	;# 
  1453  0894                     	;# 
  1454  0894                     	;# 
  1455  0894                     	;# 
  1456  0895                     	;# 
  1457  0895                     	;# 
  1458  0895                     	;# 
  1459  0896                     	;# 
  1460  0896                     	;# 
  1461  0896                     	;# 
  1462  089B                     	;# 
  1463  0911                     	;# 
  1464  0912                     	;# 
  1465  0913                     	;# 
  1466  0914                     	;# 
  1467  0915                     	;# 
  1468  0916                     	;# 
  1469  0918                     	;# 
  1470  0919                     	;# 
  1471  091A                     	;# 
  1472  091B                     	;# 
  1473  091C                     	;# 
  1474  091D                     	;# 
  1475  091E                     	;# 
  1476  091F                     	;# 
  1477  0E0F                     	;# 
  1478  0E10                     	;# 
  1479  0E11                     	;# 
  1480  0E12                     	;# 
  1481  0E13                     	;# 
  1482  0E14                     	;# 
  1483  0E15                     	;# 
  1484  0E16                     	;# 
  1485  0E17                     	;# 
  1486  0E18                     	;# 
  1487  0E19                     	;# 
  1488  0E1A                     	;# 
  1489  0E1B                     	;# 
  1490  0E1C                     	;# 
  1491  0E1D                     	;# 
  1492  0E1E                     	;# 
  1493  0E1F                     	;# 
  1494  0E20                     	;# 
  1495  0E21                     	;# 
  1496  0E22                     	;# 
  1497  0E24                     	;# 
  1498  0E25                     	;# 
  1499  0E28                     	;# 
  1500  0E29                     	;# 
  1501  0E2A                     	;# 
  1502  0E2B                     	;# 
  1503  0E2C                     	;# 
  1504  0E2D                     	;# 
  1505  0E2E                     	;# 
  1506  0E2F                     	;# 
  1507  0E90                     	;# 
  1508  0E91                     	;# 
  1509  0E92                     	;# 
  1510  0E94                     	;# 
  1511  0E95                     	;# 
  1512  0E9C                     	;# 
  1513  0E9D                     	;# 
  1514  0E9E                     	;# 
  1515  0E9F                     	;# 
  1516  0EA0                     	;# 
  1517  0EA1                     	;# 
  1518  0EA2                     	;# 
  1519  0EA3                     	;# 
  1520  0EA4                     	;# 
  1521  0EA5                     	;# 
  1522  0EA6                     	;# 
  1523  0EA7                     	;# 
  1524  0F0F                     	;# 
  1525  0F10                     	;# 
  1526  0F11                     	;# 
  1527  0F12                     	;# 
  1528  0F13                     	;# 
  1529  0F14                     	;# 
  1530  0F15                     	;# 
  1531  0F16                     	;# 
  1532  0F17                     	;# 
  1533  0F18                     	;# 
  1534  0F19                     	;# 
  1535  0F1A                     	;# 
  1536  0F1B                     	;# 
  1537  0F1C                     	;# 
  1538  0F1D                     	;# 
  1539  0F1E                     	;# 
  1540  0F1F                     	;# 
  1541  0F20                     	;# 
  1542  0F21                     	;# 
  1543  0F22                     	;# 
  1544  0F23                     	;# 
  1545  0F24                     	;# 
  1546  0F25                     	;# 
  1547  0F26                     	;# 
  1548  0F27                     	;# 
  1549  0F28                     	;# 
  1550  0F29                     	;# 
  1551  0F2A                     	;# 
  1552  0F2B                     	;# 
  1553  0F2C                     	;# 
  1554  0F2D                     	;# 
  1555  0F2E                     	;# 
  1556  0F2F                     	;# 
  1557  0F30                     	;# 
  1558  0F31                     	;# 
  1559  0F32                     	;# 
  1560  0F33                     	;# 
  1561  0F34                     	;# 
  1562  0F35                     	;# 
  1563  0F36                     	;# 
  1564  0F37                     	;# 
  1565  0FE4                     	;# 
  1566  0FE5                     	;# 
  1567  0FE6                     	;# 
  1568  0FE7                     	;# 
  1569  0FE8                     	;# 
  1570  0FE9                     	;# 
  1571  0FEA                     	;# 
  1572  0FEB                     	;# 
  1573  0FED                     	;# 
  1574  0FEE                     	;# 
  1575  0FEF                     	;# 
  1576  0000                     	;# 
  1577  0001                     	;# 
  1578  0002                     	;# 
  1579  0003                     	;# 
  1580  0004                     	;# 
  1581  0005                     	;# 
  1582  0006                     	;# 
  1583  0007                     	;# 
  1584  0008                     	;# 
  1585  0009                     	;# 
  1586  000A                     	;# 
  1587  000B                     	;# 
  1588  000C                     	;# 
  1589  000D                     	;# 
  1590  000E                     	;# 
  1591  0010                     	;# 
  1592  0011                     	;# 
  1593  0012                     	;# 
  1594  0013                     	;# 
  1595  0014                     	;# 
  1596  0015                     	;# 
  1597  0015                     	;# 
  1598  0016                     	;# 
  1599  0016                     	;# 
  1600  0017                     	;# 
  1601  0018                     	;# 
  1602  0019                     	;# 
  1603  0019                     	;# 
  1604  001A                     	;# 
  1605  001B                     	;# 
  1606  001C                     	;# 
  1607  001D                     	;# 
  1608  001E                     	;# 
  1609  001F                     	;# 
  1610  008C                     	;# 
  1611  008D                     	;# 
  1612  008E                     	;# 
  1613  0090                     	;# 
  1614  0091                     	;# 
  1615  0092                     	;# 
  1616  0093                     	;# 
  1617  0094                     	;# 
  1618  0097                     	;# 
  1619  009B                     	;# 
  1620  009B                     	;# 
  1621  009C                     	;# 
  1622  009D                     	;# 
  1623  009E                     	;# 
  1624  009F                     	;# 
  1625  010C                     	;# 
  1626  010D                     	;# 
  1627  010E                     	;# 
  1628  0111                     	;# 
  1629  0112                     	;# 
  1630  0113                     	;# 
  1631  0114                     	;# 
  1632  0115                     	;# 
  1633  0116                     	;# 
  1634  0117                     	;# 
  1635  0118                     	;# 
  1636  0119                     	;# 
  1637  018C                     	;# 
  1638  018D                     	;# 
  1639  018E                     	;# 
  1640  0197                     	;# 
  1641  0199                     	;# 
  1642  0199                     	;# 
  1643  0199                     	;# 
  1644  019A                     	;# 
  1645  019A                     	;# 
  1646  019A                     	;# 
  1647  019B                     	;# 
  1648  019B                     	;# 
  1649  019B                     	;# 
  1650  019B                     	;# 
  1651  019B                     	;# 
  1652  019C                     	;# 
  1653  019C                     	;# 
  1654  019C                     	;# 
  1655  019D                     	;# 
  1656  019D                     	;# 
  1657  019D                     	;# 
  1658  019E                     	;# 
  1659  019E                     	;# 
  1660  019E                     	;# 
  1661  019F                     	;# 
  1662  019F                     	;# 
  1663  019F                     	;# 
  1664  019F                     	;# 
  1665  019F                     	;# 
  1666  020C                     	;# 
  1667  020D                     	;# 
  1668  020E                     	;# 
  1669  0211                     	;# 
  1670  0211                     	;# 
  1671  0212                     	;# 
  1672  0212                     	;# 
  1673  0213                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0216                     	;# 
  1682  0216                     	;# 
  1683  0217                     	;# 
  1684  0217                     	;# 
  1685  0219                     	;# 
  1686  021A                     	;# 
  1687  021B                     	;# 
  1688  021C                     	;# 
  1689  021D                     	;# 
  1690  021D                     	;# 
  1691  021E                     	;# 
  1692  021F                     	;# 
  1693  028C                     	;# 
  1694  028D                     	;# 
  1695  028E                     	;# 
  1696  0291                     	;# 
  1697  0291                     	;# 
  1698  0292                     	;# 
  1699  0293                     	;# 
  1700  0294                     	;# 
  1701  0295                     	;# 
  1702  0295                     	;# 
  1703  0296                     	;# 
  1704  0297                     	;# 
  1705  0298                     	;# 
  1706  029F                     	;# 
  1707  030C                     	;# 
  1708  030D                     	;# 
  1709  030E                     	;# 
  1710  0311                     	;# 
  1711  0311                     	;# 
  1712  0312                     	;# 
  1713  0313                     	;# 
  1714  0314                     	;# 
  1715  0315                     	;# 
  1716  0315                     	;# 
  1717  0316                     	;# 
  1718  0317                     	;# 
  1719  0318                     	;# 
  1720  038C                     	;# 
  1721  038D                     	;# 
  1722  038E                     	;# 
  1723  0391                     	;# 
  1724  0392                     	;# 
  1725  0393                     	;# 
  1726  0394                     	;# 
  1727  0395                     	;# 
  1728  0396                     	;# 
  1729  0397                     	;# 
  1730  0398                     	;# 
  1731  0399                     	;# 
  1732  039A                     	;# 
  1733  039C                     	;# 
  1734  039D                     	;# 
  1735  039E                     	;# 
  1736  039F                     	;# 
  1737  0411                     	;# 
  1738  0411                     	;# 
  1739  0412                     	;# 
  1740  0413                     	;# 
  1741  0414                     	;# 
  1742  0415                     	;# 
  1743  0416                     	;# 
  1744  0417                     	;# 
  1745  0418                     	;# 
  1746  0418                     	;# 
  1747  0419                     	;# 
  1748  041A                     	;# 
  1749  041B                     	;# 
  1750  041C                     	;# 
  1751  041D                     	;# 
  1752  041E                     	;# 
  1753  041F                     	;# 
  1754  0498                     	;# 
  1755  0498                     	;# 
  1756  0499                     	;# 
  1757  049A                     	;# 
  1758  049B                     	;# 
  1759  049B                     	;# 
  1760  049C                     	;# 
  1761  049D                     	;# 
  1762  049E                     	;# 
  1763  049F                     	;# 
  1764  0617                     	;# 
  1765  0618                     	;# 
  1766  0619                     	;# 
  1767  0619                     	;# 
  1768  061A                     	;# 
  1769  061B                     	;# 
  1770  061C                     	;# 
  1771  061C                     	;# 
  1772  061F                     	;# 
  1773  0691                     	;# 
  1774  0692                     	;# 
  1775  0693                     	;# 
  1776  0694                     	;# 
  1777  0695                     	;# 
  1778  0696                     	;# 
  1779  0697                     	;# 
  1780  0698                     	;# 
  1781  0699                     	;# 
  1782  0711                     	;# 
  1783  0712                     	;# 
  1784  0713                     	;# 
  1785  0714                     	;# 
  1786  0715                     	;# 
  1787  0716                     	;# 
  1788  0717                     	;# 
  1789  0718                     	;# 
  1790  0719                     	;# 
  1791  0891                     	;# 
  1792  0891                     	;# 
  1793  0891                     	;# 
  1794  0891                     	;# 
  1795  0891                     	;# 
  1796  0891                     	;# 
  1797  0892                     	;# 
  1798  0892                     	;# 
  1799  0892                     	;# 
  1800  0893                     	;# 
  1801  0893                     	;# 
  1802  0893                     	;# 
  1803  0893                     	;# 
  1804  0893                     	;# 
  1805  0893                     	;# 
  1806  0894                     	;# 
  1807  0894                     	;# 
  1808  0894                     	;# 
  1809  0895                     	;# 
  1810  0895                     	;# 
  1811  0895                     	;# 
  1812  0896                     	;# 
  1813  0896                     	;# 
  1814  0896                     	;# 
  1815  089B                     	;# 
  1816  0911                     	;# 
  1817  0912                     	;# 
  1818  0913                     	;# 
  1819  0914                     	;# 
  1820  0915                     	;# 
  1821  0916                     	;# 
  1822  0918                     	;# 
  1823  0919                     	;# 
  1824  091A                     	;# 
  1825  091B                     	;# 
  1826  091C                     	;# 
  1827  091D                     	;# 
  1828  091E                     	;# 
  1829  091F                     	;# 
  1830  0E0F                     	;# 
  1831  0E10                     	;# 
  1832  0E11                     	;# 
  1833  0E12                     	;# 
  1834  0E13                     	;# 
  1835  0E14                     	;# 
  1836  0E15                     	;# 
  1837  0E16                     	;# 
  1838  0E17                     	;# 
  1839  0E18                     	;# 
  1840  0E19                     	;# 
  1841  0E1A                     	;# 
  1842  0E1B                     	;# 
  1843  0E1C                     	;# 
  1844  0E1D                     	;# 
  1845  0E1E                     	;# 
  1846  0E1F                     	;# 
  1847  0E20                     	;# 
  1848  0E21                     	;# 
  1849  0E22                     	;# 
  1850  0E24                     	;# 
  1851  0E25                     	;# 
  1852  0E28                     	;# 
  1853  0E29                     	;# 
  1854  0E2A                     	;# 
  1855  0E2B                     	;# 
  1856  0E2C                     	;# 
  1857  0E2D                     	;# 
  1858  0E2E                     	;# 
  1859  0E2F                     	;# 
  1860  0E90                     	;# 
  1861  0E91                     	;# 
  1862  0E92                     	;# 
  1863  0E94                     	;# 
  1864  0E95                     	;# 
  1865  0E9C                     	;# 
  1866  0E9D                     	;# 
  1867  0E9E                     	;# 
  1868  0E9F                     	;# 
  1869  0EA0                     	;# 
  1870  0EA1                     	;# 
  1871  0EA2                     	;# 
  1872  0EA3                     	;# 
  1873  0EA4                     	;# 
  1874  0EA5                     	;# 
  1875  0EA6                     	;# 
  1876  0EA7                     	;# 
  1877  0F0F                     	;# 
  1878  0F10                     	;# 
  1879  0F11                     	;# 
  1880  0F12                     	;# 
  1881  0F13                     	;# 
  1882  0F14                     	;# 
  1883  0F15                     	;# 
  1884  0F16                     	;# 
  1885  0F17                     	;# 
  1886  0F18                     	;# 
  1887  0F19                     	;# 
  1888  0F1A                     	;# 
  1889  0F1B                     	;# 
  1890  0F1C                     	;# 
  1891  0F1D                     	;# 
  1892  0F1E                     	;# 
  1893  0F1F                     	;# 
  1894  0F20                     	;# 
  1895  0F21                     	;# 
  1896  0F22                     	;# 
  1897  0F23                     	;# 
  1898  0F24                     	;# 
  1899  0F25                     	;# 
  1900  0F26                     	;# 
  1901  0F27                     	;# 
  1902  0F28                     	;# 
  1903  0F29                     	;# 
  1904  0F2A                     	;# 
  1905  0F2B                     	;# 
  1906  0F2C                     	;# 
  1907  0F2D                     	;# 
  1908  0F2E                     	;# 
  1909  0F2F                     	;# 
  1910  0F30                     	;# 
  1911  0F31                     	;# 
  1912  0F32                     	;# 
  1913  0F33                     	;# 
  1914  0F34                     	;# 
  1915  0F35                     	;# 
  1916  0F36                     	;# 
  1917  0F37                     	;# 
  1918  0FE4                     	;# 
  1919  0FE5                     	;# 
  1920  0FE6                     	;# 
  1921  0FE7                     	;# 
  1922  0FE8                     	;# 
  1923  0FE9                     	;# 
  1924  0FEA                     	;# 
  1925  0FEB                     	;# 
  1926  0FED                     	;# 
  1927  0FEE                     	;# 
  1928  0FEF                     	;# 
  1929  0000                     	;# 
  1930  0001                     	;# 
  1931  0002                     	;# 
  1932  0003                     	;# 
  1933  0004                     	;# 
  1934  0005                     	;# 
  1935  0006                     	;# 
  1936  0007                     	;# 
  1937  0008                     	;# 
  1938  0009                     	;# 
  1939  000A                     	;# 
  1940  000B                     	;# 
  1941  000C                     	;# 
  1942  000D                     	;# 
  1943  000E                     	;# 
  1944  0010                     	;# 
  1945  0011                     	;# 
  1946  0012                     	;# 
  1947  0013                     	;# 
  1948  0014                     	;# 
  1949  0015                     	;# 
  1950  0015                     	;# 
  1951  0016                     	;# 
  1952  0016                     	;# 
  1953  0017                     	;# 
  1954  0018                     	;# 
  1955  0019                     	;# 
  1956  0019                     	;# 
  1957  001A                     	;# 
  1958  001B                     	;# 
  1959  001C                     	;# 
  1960  001D                     	;# 
  1961  001E                     	;# 
  1962  001F                     	;# 
  1963  008C                     	;# 
  1964  008D                     	;# 
  1965  008E                     	;# 
  1966  0090                     	;# 
  1967  0091                     	;# 
  1968  0092                     	;# 
  1969  0093                     	;# 
  1970  0094                     	;# 
  1971  0097                     	;# 
  1972  009B                     	;# 
  1973  009B                     	;# 
  1974  009C                     	;# 
  1975  009D                     	;# 
  1976  009E                     	;# 
  1977  009F                     	;# 
  1978  010C                     	;# 
  1979  010D                     	;# 
  1980  010E                     	;# 
  1981  0111                     	;# 
  1982  0112                     	;# 
  1983  0113                     	;# 
  1984  0114                     	;# 
  1985  0115                     	;# 
  1986  0116                     	;# 
  1987  0117                     	;# 
  1988  0118                     	;# 
  1989  0119                     	;# 
  1990  018C                     	;# 
  1991  018D                     	;# 
  1992  018E                     	;# 
  1993  0197                     	;# 
  1994  0199                     	;# 
  1995  0199                     	;# 
  1996  0199                     	;# 
  1997  019A                     	;# 
  1998  019A                     	;# 
  1999  019A                     	;# 
  2000  019B                     	;# 
  2001  019B                     	;# 
  2002  019B                     	;# 
  2003  019B                     	;# 
  2004  019B                     	;# 
  2005  019C                     	;# 
  2006  019C                     	;# 
  2007  019C                     	;# 
  2008  019D                     	;# 
  2009  019D                     	;# 
  2010  019D                     	;# 
  2011  019E                     	;# 
  2012  019E                     	;# 
  2013  019E                     	;# 
  2014  019F                     	;# 
  2015  019F                     	;# 
  2016  019F                     	;# 
  2017  019F                     	;# 
  2018  019F                     	;# 
  2019  020C                     	;# 
  2020  020D                     	;# 
  2021  020E                     	;# 
  2022  0211                     	;# 
  2023  0211                     	;# 
  2024  0212                     	;# 
  2025  0212                     	;# 
  2026  0213                     	;# 
  2027  0213                     	;# 
  2028  0214                     	;# 
  2029  0214                     	;# 
  2030  0215                     	;# 
  2031  0215                     	;# 
  2032  0215                     	;# 
  2033  0215                     	;# 
  2034  0216                     	;# 
  2035  0216                     	;# 
  2036  0217                     	;# 
  2037  0217                     	;# 
  2038  0219                     	;# 
  2039  021A                     	;# 
  2040  021B                     	;# 
  2041  021C                     	;# 
  2042  021D                     	;# 
  2043  021D                     	;# 
  2044  021E                     	;# 
  2045  021F                     	;# 
  2046  028C                     	;# 
  2047  028D                     	;# 
  2048  028E                     	;# 
  2049  0291                     	;# 
  2050  0291                     	;# 
  2051  0292                     	;# 
  2052  0293                     	;# 
  2053  0294                     	;# 
  2054  0295                     	;# 
  2055  0295                     	;# 
  2056  0296                     	;# 
  2057  0297                     	;# 
  2058  0298                     	;# 
  2059  029F                     	;# 
  2060  030C                     	;# 
  2061  030D                     	;# 
  2062  030E                     	;# 
  2063  0311                     	;# 
  2064  0311                     	;# 
  2065  0312                     	;# 
  2066  0313                     	;# 
  2067  0314                     	;# 
  2068  0315                     	;# 
  2069  0315                     	;# 
  2070  0316                     	;# 
  2071  0317                     	;# 
  2072  0318                     	;# 
  2073  038C                     	;# 
  2074  038D                     	;# 
  2075  038E                     	;# 
  2076  0391                     	;# 
  2077  0392                     	;# 
  2078  0393                     	;# 
  2079  0394                     	;# 
  2080  0395                     	;# 
  2081  0396                     	;# 
  2082  0397                     	;# 
  2083  0398                     	;# 
  2084  0399                     	;# 
  2085  039A                     	;# 
  2086  039C                     	;# 
  2087  039D                     	;# 
  2088  039E                     	;# 
  2089  039F                     	;# 
  2090  0411                     	;# 
  2091  0411                     	;# 
  2092  0412                     	;# 
  2093  0413                     	;# 
  2094  0414                     	;# 
  2095  0415                     	;# 
  2096  0416                     	;# 
  2097  0417                     	;# 
  2098  0418                     	;# 
  2099  0418                     	;# 
  2100  0419                     	;# 
  2101  041A                     	;# 
  2102  041B                     	;# 
  2103  041C                     	;# 
  2104  041D                     	;# 
  2105  041E                     	;# 
  2106  041F                     	;# 
  2107  0498                     	;# 
  2108  0498                     	;# 
  2109  0499                     	;# 
  2110  049A                     	;# 
  2111  049B                     	;# 
  2112  049B                     	;# 
  2113  049C                     	;# 
  2114  049D                     	;# 
  2115  049E                     	;# 
  2116  049F                     	;# 
  2117  0617                     	;# 
  2118  0618                     	;# 
  2119  0619                     	;# 
  2120  0619                     	;# 
  2121  061A                     	;# 
  2122  061B                     	;# 
  2123  061C                     	;# 
  2124  061C                     	;# 
  2125  061F                     	;# 
  2126  0691                     	;# 
  2127  0692                     	;# 
  2128  0693                     	;# 
  2129  0694                     	;# 
  2130  0695                     	;# 
  2131  0696                     	;# 
  2132  0697                     	;# 
  2133  0698                     	;# 
  2134  0699                     	;# 
  2135  0711                     	;# 
  2136  0712                     	;# 
  2137  0713                     	;# 
  2138  0714                     	;# 
  2139  0715                     	;# 
  2140  0716                     	;# 
  2141  0717                     	;# 
  2142  0718                     	;# 
  2143  0719                     	;# 
  2144  0891                     	;# 
  2145  0891                     	;# 
  2146  0891                     	;# 
  2147  0891                     	;# 
  2148  0891                     	;# 
  2149  0891                     	;# 
  2150  0892                     	;# 
  2151  0892                     	;# 
  2152  0892                     	;# 
  2153  0893                     	;# 
  2154  0893                     	;# 
  2155  0893                     	;# 
  2156  0893                     	;# 
  2157  0893                     	;# 
  2158  0893                     	;# 
  2159  0894                     	;# 
  2160  0894                     	;# 
  2161  0894                     	;# 
  2162  0895                     	;# 
  2163  0895                     	;# 
  2164  0895                     	;# 
  2165  0896                     	;# 
  2166  0896                     	;# 
  2167  0896                     	;# 
  2168  089B                     	;# 
  2169  0911                     	;# 
  2170  0912                     	;# 
  2171  0913                     	;# 
  2172  0914                     	;# 
  2173  0915                     	;# 
  2174  0916                     	;# 
  2175  0918                     	;# 
  2176  0919                     	;# 
  2177  091A                     	;# 
  2178  091B                     	;# 
  2179  091C                     	;# 
  2180  091D                     	;# 
  2181  091E                     	;# 
  2182  091F                     	;# 
  2183  0E0F                     	;# 
  2184  0E10                     	;# 
  2185  0E11                     	;# 
  2186  0E12                     	;# 
  2187  0E13                     	;# 
  2188  0E14                     	;# 
  2189  0E15                     	;# 
  2190  0E16                     	;# 
  2191  0E17                     	;# 
  2192  0E18                     	;# 
  2193  0E19                     	;# 
  2194  0E1A                     	;# 
  2195  0E1B                     	;# 
  2196  0E1C                     	;# 
  2197  0E1D                     	;# 
  2198  0E1E                     	;# 
  2199  0E1F                     	;# 
  2200  0E20                     	;# 
  2201  0E21                     	;# 
  2202  0E22                     	;# 
  2203  0E24                     	;# 
  2204  0E25                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E2F                     	;# 
  2213  0E90                     	;# 
  2214  0E91                     	;# 
  2215  0E92                     	;# 
  2216  0E94                     	;# 
  2217  0E95                     	;# 
  2218  0E9C                     	;# 
  2219  0E9D                     	;# 
  2220  0E9E                     	;# 
  2221  0E9F                     	;# 
  2222  0EA0                     	;# 
  2223  0EA1                     	;# 
  2224  0EA2                     	;# 
  2225  0EA3                     	;# 
  2226  0EA4                     	;# 
  2227  0EA5                     	;# 
  2228  0EA6                     	;# 
  2229  0EA7                     	;# 
  2230  0F0F                     	;# 
  2231  0F10                     	;# 
  2232  0F11                     	;# 
  2233  0F12                     	;# 
  2234  0F13                     	;# 
  2235  0F14                     	;# 
  2236  0F15                     	;# 
  2237  0F16                     	;# 
  2238  0F17                     	;# 
  2239  0F18                     	;# 
  2240  0F19                     	;# 
  2241  0F1A                     	;# 
  2242  0F1B                     	;# 
  2243  0F1C                     	;# 
  2244  0F1D                     	;# 
  2245  0F1E                     	;# 
  2246  0F1F                     	;# 
  2247  0F20                     	;# 
  2248  0F21                     	;# 
  2249  0F22                     	;# 
  2250  0F23                     	;# 
  2251  0F24                     	;# 
  2252  0F25                     	;# 
  2253  0F26                     	;# 
  2254  0F27                     	;# 
  2255  0F28                     	;# 
  2256  0F29                     	;# 
  2257  0F2A                     	;# 
  2258  0F2B                     	;# 
  2259  0F2C                     	;# 
  2260  0F2D                     	;# 
  2261  0F2E                     	;# 
  2262  0F2F                     	;# 
  2263  0F30                     	;# 
  2264  0F31                     	;# 
  2265  0F32                     	;# 
  2266  0F33                     	;# 
  2267  0F34                     	;# 
  2268  0F35                     	;# 
  2269  0F36                     	;# 
  2270  0F37                     	;# 
  2271  0FE4                     	;# 
  2272  0FE5                     	;# 
  2273  0FE6                     	;# 
  2274  0FE7                     	;# 
  2275  0FE8                     	;# 
  2276  0FE9                     	;# 
  2277  0FEA                     	;# 
  2278  0FEB                     	;# 
  2279  0FED                     	;# 
  2280  0FEE                     	;# 
  2281  0FEF                     	;# 
  2282  0000                     	;# 
  2283  0001                     	;# 
  2284  0002                     	;# 
  2285  0003                     	;# 
  2286  0004                     	;# 
  2287  0005                     	;# 
  2288  0006                     	;# 
  2289  0007                     	;# 
  2290  0008                     	;# 
  2291  0009                     	;# 
  2292  000A                     	;# 
  2293  000B                     	;# 
  2294  000C                     	;# 
  2295  000D                     	;# 
  2296  000E                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0015                     	;# 
  2304  0016                     	;# 
  2305  0016                     	;# 
  2306  0017                     	;# 
  2307  0018                     	;# 
  2308  0019                     	;# 
  2309  0019                     	;# 
  2310  001A                     	;# 
  2311  001B                     	;# 
  2312  001C                     	;# 
  2313  001D                     	;# 
  2314  001E                     	;# 
  2315  001F                     	;# 
  2316  008C                     	;# 
  2317  008D                     	;# 
  2318  008E                     	;# 
  2319  0090                     	;# 
  2320  0091                     	;# 
  2321  0092                     	;# 
  2322  0093                     	;# 
  2323  0094                     	;# 
  2324  0097                     	;# 
  2325  009B                     	;# 
  2326  009B                     	;# 
  2327  009C                     	;# 
  2328  009D                     	;# 
  2329  009E                     	;# 
  2330  009F                     	;# 
  2331  010C                     	;# 
  2332  010D                     	;# 
  2333  010E                     	;# 
  2334  0111                     	;# 
  2335  0112                     	;# 
  2336  0113                     	;# 
  2337  0114                     	;# 
  2338  0115                     	;# 
  2339  0116                     	;# 
  2340  0117                     	;# 
  2341  0118                     	;# 
  2342  0119                     	;# 
  2343  018C                     	;# 
  2344  018D                     	;# 
  2345  018E                     	;# 
  2346  0197                     	;# 
  2347  0199                     	;# 
  2348  0199                     	;# 
  2349  0199                     	;# 
  2350  019A                     	;# 
  2351  019A                     	;# 
  2352  019A                     	;# 
  2353  019B                     	;# 
  2354  019B                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019C                     	;# 
  2359  019C                     	;# 
  2360  019C                     	;# 
  2361  019D                     	;# 
  2362  019D                     	;# 
  2363  019D                     	;# 
  2364  019E                     	;# 
  2365  019E                     	;# 
  2366  019E                     	;# 
  2367  019F                     	;# 
  2368  019F                     	;# 
  2369  019F                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  020C                     	;# 
  2373  020D                     	;# 
  2374  020E                     	;# 
  2375  0211                     	;# 
  2376  0211                     	;# 
  2377  0212                     	;# 
  2378  0212                     	;# 
  2379  0213                     	;# 
  2380  0213                     	;# 
  2381  0214                     	;# 
  2382  0214                     	;# 
  2383  0215                     	;# 
  2384  0215                     	;# 
  2385  0215                     	;# 
  2386  0215                     	;# 
  2387  0216                     	;# 
  2388  0216                     	;# 
  2389  0217                     	;# 
  2390  0217                     	;# 
  2391  0219                     	;# 
  2392  021A                     	;# 
  2393  021B                     	;# 
  2394  021C                     	;# 
  2395  021D                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028D                     	;# 
  2401  028E                     	;# 
  2402  0291                     	;# 
  2403  0291                     	;# 
  2404  0292                     	;# 
  2405  0293                     	;# 
  2406  0294                     	;# 
  2407  0295                     	;# 
  2408  0295                     	;# 
  2409  0296                     	;# 
  2410  0297                     	;# 
  2411  0298                     	;# 
  2412  029F                     	;# 
  2413  030C                     	;# 
  2414  030D                     	;# 
  2415  030E                     	;# 
  2416  0311                     	;# 
  2417  0311                     	;# 
  2418  0312                     	;# 
  2419  0313                     	;# 
  2420  0314                     	;# 
  2421  0315                     	;# 
  2422  0315                     	;# 
  2423  0316                     	;# 
  2424  0317                     	;# 
  2425  0318                     	;# 
  2426  038C                     	;# 
  2427  038D                     	;# 
  2428  038E                     	;# 
  2429  0391                     	;# 
  2430  0392                     	;# 
  2431  0393                     	;# 
  2432  0394                     	;# 
  2433  0395                     	;# 
  2434  0396                     	;# 
  2435  0397                     	;# 
  2436  0398                     	;# 
  2437  0399                     	;# 
  2438  039A                     	;# 
  2439  039C                     	;# 
  2440  039D                     	;# 
  2441  039E                     	;# 
  2442  039F                     	;# 
  2443  0411                     	;# 
  2444  0411                     	;# 
  2445  0412                     	;# 
  2446  0413                     	;# 
  2447  0414                     	;# 
  2448  0415                     	;# 
  2449  0416                     	;# 
  2450  0417                     	;# 
  2451  0418                     	;# 
  2452  0418                     	;# 
  2453  0419                     	;# 
  2454  041A                     	;# 
  2455  041B                     	;# 
  2456  041C                     	;# 
  2457  041D                     	;# 
  2458  041E                     	;# 
  2459  041F                     	;# 
  2460  0498                     	;# 
  2461  0498                     	;# 
  2462  0499                     	;# 
  2463  049A                     	;# 
  2464  049B                     	;# 
  2465  049B                     	;# 
  2466  049C                     	;# 
  2467  049D                     	;# 
  2468  049E                     	;# 
  2469  049F                     	;# 
  2470  0617                     	;# 
  2471  0618                     	;# 
  2472  0619                     	;# 
  2473  0619                     	;# 
  2474  061A                     	;# 
  2475  061B                     	;# 
  2476  061C                     	;# 
  2477  061C                     	;# 
  2478  061F                     	;# 
  2479  0691                     	;# 
  2480  0692                     	;# 
  2481  0693                     	;# 
  2482  0694                     	;# 
  2483  0695                     	;# 
  2484  0696                     	;# 
  2485  0697                     	;# 
  2486  0698                     	;# 
  2487  0699                     	;# 
  2488  0711                     	;# 
  2489  0712                     	;# 
  2490  0713                     	;# 
  2491  0714                     	;# 
  2492  0715                     	;# 
  2493  0716                     	;# 
  2494  0717                     	;# 
  2495  0718                     	;# 
  2496  0719                     	;# 
  2497  0891                     	;# 
  2498  0891                     	;# 
  2499  0891                     	;# 
  2500  0891                     	;# 
  2501  0891                     	;# 
  2502  0891                     	;# 
  2503  0892                     	;# 
  2504  0892                     	;# 
  2505  0892                     	;# 
  2506  0893                     	;# 
  2507  0893                     	;# 
  2508  0893                     	;# 
  2509  0893                     	;# 
  2510  0893                     	;# 
  2511  0893                     	;# 
  2512  0894                     	;# 
  2513  0894                     	;# 
  2514  0894                     	;# 
  2515  0895                     	;# 
  2516  0895                     	;# 
  2517  0895                     	;# 
  2518  0896                     	;# 
  2519  0896                     	;# 
  2520  0896                     	;# 
  2521  089B                     	;# 
  2522  0911                     	;# 
  2523  0912                     	;# 
  2524  0913                     	;# 
  2525  0914                     	;# 
  2526  0915                     	;# 
  2527  0916                     	;# 
  2528  0918                     	;# 
  2529  0919                     	;# 
  2530  091A                     	;# 
  2531  091B                     	;# 
  2532  091C                     	;# 
  2533  091D                     	;# 
  2534  091E                     	;# 
  2535  091F                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E24                     	;# 
  2557  0E25                     	;# 
  2558  0E28                     	;# 
  2559  0E29                     	;# 
  2560  0E2A                     	;# 
  2561  0E2B                     	;# 
  2562  0E2C                     	;# 
  2563  0E2D                     	;# 
  2564  0E2E                     	;# 
  2565  0E2F                     	;# 
  2566  0E90                     	;# 
  2567  0E91                     	;# 
  2568  0E92                     	;# 
  2569  0E94                     	;# 
  2570  0E95                     	;# 
  2571  0E9C                     	;# 
  2572  0E9D                     	;# 
  2573  0E9E                     	;# 
  2574  0E9F                     	;# 
  2575  0EA0                     	;# 
  2576  0EA1                     	;# 
  2577  0EA2                     	;# 
  2578  0EA3                     	;# 
  2579  0EA4                     	;# 
  2580  0EA5                     	;# 
  2581  0EA6                     	;# 
  2582  0EA7                     	;# 
  2583  0F0F                     	;# 
  2584  0F10                     	;# 
  2585  0F11                     	;# 
  2586  0F12                     	;# 
  2587  0F13                     	;# 
  2588  0F14                     	;# 
  2589  0F15                     	;# 
  2590  0F16                     	;# 
  2591  0F17                     	;# 
  2592  0F18                     	;# 
  2593  0F19                     	;# 
  2594  0F1A                     	;# 
  2595  0F1B                     	;# 
  2596  0F1C                     	;# 
  2597  0F1D                     	;# 
  2598  0F1E                     	;# 
  2599  0F1F                     	;# 
  2600  0F20                     	;# 
  2601  0F21                     	;# 
  2602  0F22                     	;# 
  2603  0F23                     	;# 
  2604  0F24                     	;# 
  2605  0F25                     	;# 
  2606  0F26                     	;# 
  2607  0F27                     	;# 
  2608  0F28                     	;# 
  2609  0F29                     	;# 
  2610  0F2A                     	;# 
  2611  0F2B                     	;# 
  2612  0F2C                     	;# 
  2613  0F2D                     	;# 
  2614  0F2E                     	;# 
  2615  0F2F                     	;# 
  2616  0F30                     	;# 
  2617  0F31                     	;# 
  2618  0F32                     	;# 
  2619  0F33                     	;# 
  2620  0F34                     	;# 
  2621  0F35                     	;# 
  2622  0F36                     	;# 
  2623  0F37                     	;# 
  2624  0FE4                     	;# 
  2625  0FE5                     	;# 
  2626  0FE6                     	;# 
  2627  0FE7                     	;# 
  2628  0FE8                     	;# 
  2629  0FE9                     	;# 
  2630  0FEA                     	;# 
  2631  0FEB                     	;# 
  2632  0FED                     	;# 
  2633  0FEE                     	;# 
  2634  0FEF                     	;# 
  2635  0000                     	;# 
  2636  0001                     	;# 
  2637  0002                     	;# 
  2638  0003                     	;# 
  2639  0004                     	;# 
  2640  0005                     	;# 
  2641  0006                     	;# 
  2642  0007                     	;# 
  2643  0008                     	;# 
  2644  0009                     	;# 
  2645  000A                     	;# 
  2646  000B                     	;# 
  2647  000C                     	;# 
  2648  000D                     	;# 
  2649  000E                     	;# 
  2650  0010                     	;# 
  2651  0011                     	;# 
  2652  0012                     	;# 
  2653  0013                     	;# 
  2654  0014                     	;# 
  2655  0015                     	;# 
  2656  0015                     	;# 
  2657  0016                     	;# 
  2658  0016                     	;# 
  2659  0017                     	;# 
  2660  0018                     	;# 
  2661  0019                     	;# 
  2662  0019                     	;# 
  2663  001A                     	;# 
  2664  001B                     	;# 
  2665  001C                     	;# 
  2666  001D                     	;# 
  2667  001E                     	;# 
  2668  001F                     	;# 
  2669  008C                     	;# 
  2670  008D                     	;# 
  2671  008E                     	;# 
  2672  0090                     	;# 
  2673  0091                     	;# 
  2674  0092                     	;# 
  2675  0093                     	;# 
  2676  0094                     	;# 
  2677  0097                     	;# 
  2678  009B                     	;# 
  2679  009B                     	;# 
  2680  009C                     	;# 
  2681  009D                     	;# 
  2682  009E                     	;# 
  2683  009F                     	;# 
  2684  010C                     	;# 
  2685  010D                     	;# 
  2686  010E                     	;# 
  2687  0111                     	;# 
  2688  0112                     	;# 
  2689  0113                     	;# 
  2690  0114                     	;# 
  2691  0115                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0118                     	;# 
  2695  0119                     	;# 
  2696  018C                     	;# 
  2697  018D                     	;# 
  2698  018E                     	;# 
  2699  0197                     	;# 
  2700  0199                     	;# 
  2701  0199                     	;# 
  2702  0199                     	;# 
  2703  019A                     	;# 
  2704  019A                     	;# 
  2705  019A                     	;# 
  2706  019B                     	;# 
  2707  019B                     	;# 
  2708  019B                     	;# 
  2709  019B                     	;# 
  2710  019B                     	;# 
  2711  019C                     	;# 
  2712  019C                     	;# 
  2713  019C                     	;# 
  2714  019D                     	;# 
  2715  019D                     	;# 
  2716  019D                     	;# 
  2717  019E                     	;# 
  2718  019E                     	;# 
  2719  019E                     	;# 
  2720  019F                     	;# 
  2721  019F                     	;# 
  2722  019F                     	;# 
  2723  019F                     	;# 
  2724  019F                     	;# 
  2725  020C                     	;# 
  2726  020D                     	;# 
  2727  020E                     	;# 
  2728  0211                     	;# 
  2729  0211                     	;# 
  2730  0212                     	;# 
  2731  0212                     	;# 
  2732  0213                     	;# 
  2733  0213                     	;# 
  2734  0214                     	;# 
  2735  0214                     	;# 
  2736  0215                     	;# 
  2737  0215                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0216                     	;# 
  2741  0216                     	;# 
  2742  0217                     	;# 
  2743  0217                     	;# 
  2744  0219                     	;# 
  2745  021A                     	;# 
  2746  021B                     	;# 
  2747  021C                     	;# 
  2748  021D                     	;# 
  2749  021D                     	;# 
  2750  021E                     	;# 
  2751  021F                     	;# 
  2752  028C                     	;# 
  2753  028D                     	;# 
  2754  028E                     	;# 
  2755  0291                     	;# 
  2756  0291                     	;# 
  2757  0292                     	;# 
  2758  0293                     	;# 
  2759  0294                     	;# 
  2760  0295                     	;# 
  2761  0295                     	;# 
  2762  0296                     	;# 
  2763  0297                     	;# 
  2764  0298                     	;# 
  2765  029F                     	;# 
  2766  030C                     	;# 
  2767  030D                     	;# 
  2768  030E                     	;# 
  2769  0311                     	;# 
  2770  0311                     	;# 
  2771  0312                     	;# 
  2772  0313                     	;# 
  2773  0314                     	;# 
  2774  0315                     	;# 
  2775  0315                     	;# 
  2776  0316                     	;# 
  2777  0317                     	;# 
  2778  0318                     	;# 
  2779  038C                     	;# 
  2780  038D                     	;# 
  2781  038E                     	;# 
  2782  0391                     	;# 
  2783  0392                     	;# 
  2784  0393                     	;# 
  2785  0394                     	;# 
  2786  0395                     	;# 
  2787  0396                     	;# 
  2788  0397                     	;# 
  2789  0398                     	;# 
  2790  0399                     	;# 
  2791  039A                     	;# 
  2792  039C                     	;# 
  2793  039D                     	;# 
  2794  039E                     	;# 
  2795  039F                     	;# 
  2796  0411                     	;# 
  2797  0411                     	;# 
  2798  0412                     	;# 
  2799  0413                     	;# 
  2800  0414                     	;# 
  2801  0415                     	;# 
  2802  0416                     	;# 
  2803  0417                     	;# 
  2804  0418                     	;# 
  2805  0418                     	;# 
  2806  0419                     	;# 
  2807  041A                     	;# 
  2808  041B                     	;# 
  2809  041C                     	;# 
  2810  041D                     	;# 
  2811  041E                     	;# 
  2812  041F                     	;# 
  2813  0498                     	;# 
  2814  0498                     	;# 
  2815  0499                     	;# 
  2816  049A                     	;# 
  2817  049B                     	;# 
  2818  049B                     	;# 
  2819  049C                     	;# 
  2820  049D                     	;# 
  2821  049E                     	;# 
  2822  049F                     	;# 
  2823  0617                     	;# 
  2824  0618                     	;# 
  2825  0619                     	;# 
  2826  0619                     	;# 
  2827  061A                     	;# 
  2828  061B                     	;# 
  2829  061C                     	;# 
  2830  061C                     	;# 
  2831  061F                     	;# 
  2832  0691                     	;# 
  2833  0692                     	;# 
  2834  0693                     	;# 
  2835  0694                     	;# 
  2836  0695                     	;# 
  2837  0696                     	;# 
  2838  0697                     	;# 
  2839  0698                     	;# 
  2840  0699                     	;# 
  2841  0711                     	;# 
  2842  0712                     	;# 
  2843  0713                     	;# 
  2844  0714                     	;# 
  2845  0715                     	;# 
  2846  0716                     	;# 
  2847  0717                     	;# 
  2848  0718                     	;# 
  2849  0719                     	;# 
  2850  0891                     	;# 
  2851  0891                     	;# 
  2852  0891                     	;# 
  2853  0891                     	;# 
  2854  0891                     	;# 
  2855  0891                     	;# 
  2856  0892                     	;# 
  2857  0892                     	;# 
  2858  0892                     	;# 
  2859  0893                     	;# 
  2860  0893                     	;# 
  2861  0893                     	;# 
  2862  0893                     	;# 
  2863  0893                     	;# 
  2864  0893                     	;# 
  2865  0894                     	;# 
  2866  0894                     	;# 
  2867  0894                     	;# 
  2868  0895                     	;# 
  2869  0895                     	;# 
  2870  0895                     	;# 
  2871  0896                     	;# 
  2872  0896                     	;# 
  2873  0896                     	;# 
  2874  089B                     	;# 
  2875  0911                     	;# 
  2876  0912                     	;# 
  2877  0913                     	;# 
  2878  0914                     	;# 
  2879  0915                     	;# 
  2880  0916                     	;# 
  2881  0918                     	;# 
  2882  0919                     	;# 
  2883  091A                     	;# 
  2884  091B                     	;# 
  2885  091C                     	;# 
  2886  091D                     	;# 
  2887  091E                     	;# 
  2888  091F                     	;# 
  2889  0E0F                     	;# 
  2890  0E10                     	;# 
  2891  0E11                     	;# 
  2892  0E12                     	;# 
  2893  0E13                     	;# 
  2894  0E14                     	;# 
  2895  0E15                     	;# 
  2896  0E16                     	;# 
  2897  0E17                     	;# 
  2898  0E18                     	;# 
  2899  0E19                     	;# 
  2900  0E1A                     	;# 
  2901  0E1B                     	;# 
  2902  0E1C                     	;# 
  2903  0E1D                     	;# 
  2904  0E1E                     	;# 
  2905  0E1F                     	;# 
  2906  0E20                     	;# 
  2907  0E21                     	;# 
  2908  0E22                     	;# 
  2909  0E24                     	;# 
  2910  0E25                     	;# 
  2911  0E28                     	;# 
  2912  0E29                     	;# 
  2913  0E2A                     	;# 
  2914  0E2B                     	;# 
  2915  0E2C                     	;# 
  2916  0E2D                     	;# 
  2917  0E2E                     	;# 
  2918  0E2F                     	;# 
  2919  0E90                     	;# 
  2920  0E91                     	;# 
  2921  0E92                     	;# 
  2922  0E94                     	;# 
  2923  0E95                     	;# 
  2924  0E9C                     	;# 
  2925  0E9D                     	;# 
  2926  0E9E                     	;# 
  2927  0E9F                     	;# 
  2928  0EA0                     	;# 
  2929  0EA1                     	;# 
  2930  0EA2                     	;# 
  2931  0EA3                     	;# 
  2932  0EA4                     	;# 
  2933  0EA5                     	;# 
  2934  0EA6                     	;# 
  2935  0EA7                     	;# 
  2936  0F0F                     	;# 
  2937  0F10                     	;# 
  2938  0F11                     	;# 
  2939  0F12                     	;# 
  2940  0F13                     	;# 
  2941  0F14                     	;# 
  2942  0F15                     	;# 
  2943  0F16                     	;# 
  2944  0F17                     	;# 
  2945  0F18                     	;# 
  2946  0F19                     	;# 
  2947  0F1A                     	;# 
  2948  0F1B                     	;# 
  2949  0F1C                     	;# 
  2950  0F1D                     	;# 
  2951  0F1E                     	;# 
  2952  0F1F                     	;# 
  2953  0F20                     	;# 
  2954  0F21                     	;# 
  2955  0F22                     	;# 
  2956  0F23                     	;# 
  2957  0F24                     	;# 
  2958  0F25                     	;# 
  2959  0F26                     	;# 
  2960  0F27                     	;# 
  2961  0F28                     	;# 
  2962  0F29                     	;# 
  2963  0F2A                     	;# 
  2964  0F2B                     	;# 
  2965  0F2C                     	;# 
  2966  0F2D                     	;# 
  2967  0F2E                     	;# 
  2968  0F2F                     	;# 
  2969  0F30                     	;# 
  2970  0F31                     	;# 
  2971  0F32                     	;# 
  2972  0F33                     	;# 
  2973  0F34                     	;# 
  2974  0F35                     	;# 
  2975  0F36                     	;# 
  2976  0F37                     	;# 
  2977  0FE4                     	;# 
  2978  0FE5                     	;# 
  2979  0FE6                     	;# 
  2980  0FE7                     	;# 
  2981  0FE8                     	;# 
  2982  0FE9                     	;# 
  2983  0FEA                     	;# 
  2984  0FEB                     	;# 
  2985  0FED                     	;# 
  2986  0FEE                     	;# 
  2987  0FEF                     	;# 
  2988  0000                     	;# 
  2989  0001                     	;# 
  2990  0002                     	;# 
  2991  0003                     	;# 
  2992  0004                     	;# 
  2993  0005                     	;# 
  2994  0006                     	;# 
  2995  0007                     	;# 
  2996  0008                     	;# 
  2997  0009                     	;# 
  2998  000A                     	;# 
  2999  000B                     	;# 
  3000  000C                     	;# 
  3001  000D                     	;# 
  3002  000E                     	;# 
  3003  0010                     	;# 
  3004  0011                     	;# 
  3005  0012                     	;# 
  3006  0013                     	;# 
  3007  0014                     	;# 
  3008  0015                     	;# 
  3009  0015                     	;# 
  3010  0016                     	;# 
  3011  0016                     	;# 
  3012  0017                     	;# 
  3013  0018                     	;# 
  3014  0019                     	;# 
  3015  0019                     	;# 
  3016  001A                     	;# 
  3017  001B                     	;# 
  3018  001C                     	;# 
  3019  001D                     	;# 
  3020  001E                     	;# 
  3021  001F                     	;# 
  3022  008C                     	;# 
  3023  008D                     	;# 
  3024  008E                     	;# 
  3025  0090                     	;# 
  3026  0091                     	;# 
  3027  0092                     	;# 
  3028  0093                     	;# 
  3029  0094                     	;# 
  3030  0097                     	;# 
  3031  009B                     	;# 
  3032  009B                     	;# 
  3033  009C                     	;# 
  3034  009D                     	;# 
  3035  009E                     	;# 
  3036  009F                     	;# 
  3037  010C                     	;# 
  3038  010D                     	;# 
  3039  010E                     	;# 
  3040  0111                     	;# 
  3041  0112                     	;# 
  3042  0113                     	;# 
  3043  0114                     	;# 
  3044  0115                     	;# 
  3045  0116                     	;# 
  3046  0117                     	;# 
  3047  0118                     	;# 
  3048  0119                     	;# 
  3049  018C                     	;# 
  3050  018D                     	;# 
  3051  018E                     	;# 
  3052  0197                     	;# 
  3053  0199                     	;# 
  3054  0199                     	;# 
  3055  0199                     	;# 
  3056  019A                     	;# 
  3057  019A                     	;# 
  3058  019A                     	;# 
  3059  019B                     	;# 
  3060  019B                     	;# 
  3061  019B                     	;# 
  3062  019B                     	;# 
  3063  019B                     	;# 
  3064  019C                     	;# 
  3065  019C                     	;# 
  3066  019C                     	;# 
  3067  019D                     	;# 
  3068  019D                     	;# 
  3069  019D                     	;# 
  3070  019E                     	;# 
  3071  019E                     	;# 
  3072  019E                     	;# 
  3073  019F                     	;# 
  3074  019F                     	;# 
  3075  019F                     	;# 
  3076  019F                     	;# 
  3077  019F                     	;# 
  3078  020C                     	;# 
  3079  020D                     	;# 
  3080  020E                     	;# 
  3081  0211                     	;# 
  3082  0211                     	;# 
  3083  0212                     	;# 
  3084  0212                     	;# 
  3085  0213                     	;# 
  3086  0213                     	;# 
  3087  0214                     	;# 
  3088  0214                     	;# 
  3089  0215                     	;# 
  3090  0215                     	;# 
  3091  0215                     	;# 
  3092  0215                     	;# 
  3093  0216                     	;# 
  3094  0216                     	;# 
  3095  0217                     	;# 
  3096  0217                     	;# 
  3097  0219                     	;# 
  3098  021A                     	;# 
  3099  021B                     	;# 
  3100  021C                     	;# 
  3101  021D                     	;# 
  3102  021D                     	;# 
  3103  021E                     	;# 
  3104  021F                     	;# 
  3105  028C                     	;# 
  3106  028D                     	;# 
  3107  028E                     	;# 
  3108  0291                     	;# 
  3109  0291                     	;# 
  3110  0292                     	;# 
  3111  0293                     	;# 
  3112  0294                     	;# 
  3113  0295                     	;# 
  3114  0295                     	;# 
  3115  0296                     	;# 
  3116  0297                     	;# 
  3117  0298                     	;# 
  3118  029F                     	;# 
  3119  030C                     	;# 
  3120  030D                     	;# 
  3121  030E                     	;# 
  3122  0311                     	;# 
  3123  0311                     	;# 
  3124  0312                     	;# 
  3125  0313                     	;# 
  3126  0314                     	;# 
  3127  0315                     	;# 
  3128  0315                     	;# 
  3129  0316                     	;# 
  3130  0317                     	;# 
  3131  0318                     	;# 
  3132  038C                     	;# 
  3133  038D                     	;# 
  3134  038E                     	;# 
  3135  0391                     	;# 
  3136  0392                     	;# 
  3137  0393                     	;# 
  3138  0394                     	;# 
  3139  0395                     	;# 
  3140  0396                     	;# 
  3141  0397                     	;# 
  3142  0398                     	;# 
  3143  0399                     	;# 
  3144  039A                     	;# 
  3145  039C                     	;# 
  3146  039D                     	;# 
  3147  039E                     	;# 
  3148  039F                     	;# 
  3149  0411                     	;# 
  3150  0411                     	;# 
  3151  0412                     	;# 
  3152  0413                     	;# 
  3153  0414                     	;# 
  3154  0415                     	;# 
  3155  0416                     	;# 
  3156  0417                     	;# 
  3157  0418                     	;# 
  3158  0418                     	;# 
  3159  0419                     	;# 
  3160  041A                     	;# 
  3161  041B                     	;# 
  3162  041C                     	;# 
  3163  041D                     	;# 
  3164  041E                     	;# 
  3165  041F                     	;# 
  3166  0498                     	;# 
  3167  0498                     	;# 
  3168  0499                     	;# 
  3169  049A                     	;# 
  3170  049B                     	;# 
  3171  049B                     	;# 
  3172  049C                     	;# 
  3173  049D                     	;# 
  3174  049E                     	;# 
  3175  049F                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  0619                     	;# 
  3180  061A                     	;# 
  3181  061B                     	;# 
  3182  061C                     	;# 
  3183  061C                     	;# 
  3184  061F                     	;# 
  3185  0691                     	;# 
  3186  0692                     	;# 
  3187  0693                     	;# 
  3188  0694                     	;# 
  3189  0695                     	;# 
  3190  0696                     	;# 
  3191  0697                     	;# 
  3192  0698                     	;# 
  3193  0699                     	;# 
  3194  0711                     	;# 
  3195  0712                     	;# 
  3196  0713                     	;# 
  3197  0714                     	;# 
  3198  0715                     	;# 
  3199  0716                     	;# 
  3200  0717                     	;# 
  3201  0718                     	;# 
  3202  0719                     	;# 
  3203  0891                     	;# 
  3204  0891                     	;# 
  3205  0891                     	;# 
  3206  0891                     	;# 
  3207  0891                     	;# 
  3208  0891                     	;# 
  3209  0892                     	;# 
  3210  0892                     	;# 
  3211  0892                     	;# 
  3212  0893                     	;# 
  3213  0893                     	;# 
  3214  0893                     	;# 
  3215  0893                     	;# 
  3216  0893                     	;# 
  3217  0893                     	;# 
  3218  0894                     	;# 
  3219  0894                     	;# 
  3220  0894                     	;# 
  3221  0895                     	;# 
  3222  0895                     	;# 
  3223  0895                     	;# 
  3224  0896                     	;# 
  3225  0896                     	;# 
  3226  0896                     	;# 
  3227  089B                     	;# 
  3228  0911                     	;# 
  3229  0912                     	;# 
  3230  0913                     	;# 
  3231  0914                     	;# 
  3232  0915                     	;# 
  3233  0916                     	;# 
  3234  0918                     	;# 
  3235  0919                     	;# 
  3236  091A                     	;# 
  3237  091B                     	;# 
  3238  091C                     	;# 
  3239  091D                     	;# 
  3240  091E                     	;# 
  3241  091F                     	;# 
  3242  0E0F                     	;# 
  3243  0E10                     	;# 
  3244  0E11                     	;# 
  3245  0E12                     	;# 
  3246  0E13                     	;# 
  3247  0E14                     	;# 
  3248  0E15                     	;# 
  3249  0E16                     	;# 
  3250  0E17                     	;# 
  3251  0E18                     	;# 
  3252  0E19                     	;# 
  3253  0E1A                     	;# 
  3254  0E1B                     	;# 
  3255  0E1C                     	;# 
  3256  0E1D                     	;# 
  3257  0E1E                     	;# 
  3258  0E1F                     	;# 
  3259  0E20                     	;# 
  3260  0E21                     	;# 
  3261  0E22                     	;# 
  3262  0E24                     	;# 
  3263  0E25                     	;# 
  3264  0E28                     	;# 
  3265  0E29                     	;# 
  3266  0E2A                     	;# 
  3267  0E2B                     	;# 
  3268  0E2C                     	;# 
  3269  0E2D                     	;# 
  3270  0E2E                     	;# 
  3271  0E2F                     	;# 
  3272  0E90                     	;# 
  3273  0E91                     	;# 
  3274  0E92                     	;# 
  3275  0E94                     	;# 
  3276  0E95                     	;# 
  3277  0E9C                     	;# 
  3278  0E9D                     	;# 
  3279  0E9E                     	;# 
  3280  0E9F                     	;# 
  3281  0EA0                     	;# 
  3282  0EA1                     	;# 
  3283  0EA2                     	;# 
  3284  0EA3                     	;# 
  3285  0EA4                     	;# 
  3286  0EA5                     	;# 
  3287  0EA6                     	;# 
  3288  0EA7                     	;# 
  3289  0F0F                     	;# 
  3290  0F10                     	;# 
  3291  0F11                     	;# 
  3292  0F12                     	;# 
  3293  0F13                     	;# 
  3294  0F14                     	;# 
  3295  0F15                     	;# 
  3296  0F16                     	;# 
  3297  0F17                     	;# 
  3298  0F18                     	;# 
  3299  0F19                     	;# 
  3300  0F1A                     	;# 
  3301  0F1B                     	;# 
  3302  0F1C                     	;# 
  3303  0F1D                     	;# 
  3304  0F1E                     	;# 
  3305  0F1F                     	;# 
  3306  0F20                     	;# 
  3307  0F21                     	;# 
  3308  0F22                     	;# 
  3309  0F23                     	;# 
  3310  0F24                     	;# 
  3311  0F25                     	;# 
  3312  0F26                     	;# 
  3313  0F27                     	;# 
  3314  0F28                     	;# 
  3315  0F29                     	;# 
  3316  0F2A                     	;# 
  3317  0F2B                     	;# 
  3318  0F2C                     	;# 
  3319  0F2D                     	;# 
  3320  0F2E                     	;# 
  3321  0F2F                     	;# 
  3322  0F30                     	;# 
  3323  0F31                     	;# 
  3324  0F32                     	;# 
  3325  0F33                     	;# 
  3326  0F34                     	;# 
  3327  0F35                     	;# 
  3328  0F36                     	;# 
  3329  0F37                     	;# 
  3330  0FE4                     	;# 
  3331  0FE5                     	;# 
  3332  0FE6                     	;# 
  3333  0FE7                     	;# 
  3334  0FE8                     	;# 
  3335  0FE9                     	;# 
  3336  0FEA                     	;# 
  3337  0FEB                     	;# 
  3338  0FED                     	;# 
  3339  0FEE                     	;# 
  3340  0FEF                     	;# 
  3341  0000                     	;# 
  3342  0001                     	;# 
  3343  0002                     	;# 
  3344  0003                     	;# 
  3345  0004                     	;# 
  3346  0005                     	;# 
  3347  0006                     	;# 
  3348  0007                     	;# 
  3349  0008                     	;# 
  3350  0009                     	;# 
  3351  000A                     	;# 
  3352  000B                     	;# 
  3353  000C                     	;# 
  3354  000D                     	;# 
  3355  000E                     	;# 
  3356  0010                     	;# 
  3357  0011                     	;# 
  3358  0012                     	;# 
  3359  0013                     	;# 
  3360  0014                     	;# 
  3361  0015                     	;# 
  3362  0015                     	;# 
  3363  0016                     	;# 
  3364  0016                     	;# 
  3365  0017                     	;# 
  3366  0018                     	;# 
  3367  0019                     	;# 
  3368  0019                     	;# 
  3369  001A                     	;# 
  3370  001B                     	;# 
  3371  001C                     	;# 
  3372  001D                     	;# 
  3373  001E                     	;# 
  3374  001F                     	;# 
  3375  008C                     	;# 
  3376  008D                     	;# 
  3377  008E                     	;# 
  3378  0090                     	;# 
  3379  0091                     	;# 
  3380  0092                     	;# 
  3381  0093                     	;# 
  3382  0094                     	;# 
  3383  0097                     	;# 
  3384  009B                     	;# 
  3385  009B                     	;# 
  3386  009C                     	;# 
  3387  009D                     	;# 
  3388  009E                     	;# 
  3389  009F                     	;# 
  3390  010C                     	;# 
  3391  010D                     	;# 
  3392  010E                     	;# 
  3393  0111                     	;# 
  3394  0112                     	;# 
  3395  0113                     	;# 
  3396  0114                     	;# 
  3397  0115                     	;# 
  3398  0116                     	;# 
  3399  0117                     	;# 
  3400  0118                     	;# 
  3401  0119                     	;# 
  3402  018C                     	;# 
  3403  018D                     	;# 
  3404  018E                     	;# 
  3405  0197                     	;# 
  3406  0199                     	;# 
  3407  0199                     	;# 
  3408  0199                     	;# 
  3409  019A                     	;# 
  3410  019A                     	;# 
  3411  019A                     	;# 
  3412  019B                     	;# 
  3413  019B                     	;# 
  3414  019B                     	;# 
  3415  019B                     	;# 
  3416  019B                     	;# 
  3417  019C                     	;# 
  3418  019C                     	;# 
  3419  019C                     	;# 
  3420  019D                     	;# 
  3421  019D                     	;# 
  3422  019D                     	;# 
  3423  019E                     	;# 
  3424  019E                     	;# 
  3425  019E                     	;# 
  3426  019F                     	;# 
  3427  019F                     	;# 
  3428  019F                     	;# 
  3429  019F                     	;# 
  3430  019F                     	;# 
  3431  020C                     	;# 
  3432  020D                     	;# 
  3433  020E                     	;# 
  3434  0211                     	;# 
  3435  0211                     	;# 
  3436  0212                     	;# 
  3437  0212                     	;# 
  3438  0213                     	;# 
  3439  0213                     	;# 
  3440  0214                     	;# 
  3441  0214                     	;# 
  3442  0215                     	;# 
  3443  0215                     	;# 
  3444  0215                     	;# 
  3445  0215                     	;# 
  3446  0216                     	;# 
  3447  0216                     	;# 
  3448  0217                     	;# 
  3449  0217                     	;# 
  3450  0219                     	;# 
  3451  021A                     	;# 
  3452  021B                     	;# 
  3453  021C                     	;# 
  3454  021D                     	;# 
  3455  021D                     	;# 
  3456  021E                     	;# 
  3457  021F                     	;# 
  3458  028C                     	;# 
  3459  028D                     	;# 
  3460  028E                     	;# 
  3461  0291                     	;# 
  3462  0291                     	;# 
  3463  0292                     	;# 
  3464  0293                     	;# 
  3465  0294                     	;# 
  3466  0295                     	;# 
  3467  0295                     	;# 
  3468  0296                     	;# 
  3469  0297                     	;# 
  3470  0298                     	;# 
  3471  029F                     	;# 
  3472  030C                     	;# 
  3473  030D                     	;# 
  3474  030E                     	;# 
  3475  0311                     	;# 
  3476  0311                     	;# 
  3477  0312                     	;# 
  3478  0313                     	;# 
  3479  0314                     	;# 
  3480  0315                     	;# 
  3481  0315                     	;# 
  3482  0316                     	;# 
  3483  0317                     	;# 
  3484  0318                     	;# 
  3485  038C                     	;# 
  3486  038D                     	;# 
  3487  038E                     	;# 
  3488  0391                     	;# 
  3489  0392                     	;# 
  3490  0393                     	;# 
  3491  0394                     	;# 
  3492  0395                     	;# 
  3493  0396                     	;# 
  3494  0397                     	;# 
  3495  0398                     	;# 
  3496  0399                     	;# 
  3497  039A                     	;# 
  3498  039C                     	;# 
  3499  039D                     	;# 
  3500  039E                     	;# 
  3501  039F                     	;# 
  3502  0411                     	;# 
  3503  0411                     	;# 
  3504  0412                     	;# 
  3505  0413                     	;# 
  3506  0414                     	;# 
  3507  0415                     	;# 
  3508  0416                     	;# 
  3509  0417                     	;# 
  3510  0418                     	;# 
  3511  0418                     	;# 
  3512  0419                     	;# 
  3513  041A                     	;# 
  3514  041B                     	;# 
  3515  041C                     	;# 
  3516  041D                     	;# 
  3517  041E                     	;# 
  3518  041F                     	;# 
  3519  0498                     	;# 
  3520  0498                     	;# 
  3521  0499                     	;# 
  3522  049A                     	;# 
  3523  049B                     	;# 
  3524  049B                     	;# 
  3525  049C                     	;# 
  3526  049D                     	;# 
  3527  049E                     	;# 
  3528  049F                     	;# 
  3529  0617                     	;# 
  3530  0618                     	;# 
  3531  0619                     	;# 
  3532  0619                     	;# 
  3533  061A                     	;# 
  3534  061B                     	;# 
  3535  061C                     	;# 
  3536  061C                     	;# 
  3537  061F                     	;# 
  3538  0691                     	;# 
  3539  0692                     	;# 
  3540  0693                     	;# 
  3541  0694                     	;# 
  3542  0695                     	;# 
  3543  0696                     	;# 
  3544  0697                     	;# 
  3545  0698                     	;# 
  3546  0699                     	;# 
  3547  0711                     	;# 
  3548  0712                     	;# 
  3549  0713                     	;# 
  3550  0714                     	;# 
  3551  0715                     	;# 
  3552  0716                     	;# 
  3553  0717                     	;# 
  3554  0718                     	;# 
  3555  0719                     	;# 
  3556  0891                     	;# 
  3557  0891                     	;# 
  3558  0891                     	;# 
  3559  0891                     	;# 
  3560  0891                     	;# 
  3561  0891                     	;# 
  3562  0892                     	;# 
  3563  0892                     	;# 
  3564  0892                     	;# 
  3565  0893                     	;# 
  3566  0893                     	;# 
  3567  0893                     	;# 
  3568  0893                     	;# 
  3569  0893                     	;# 
  3570  0893                     	;# 
  3571  0894                     	;# 
  3572  0894                     	;# 
  3573  0894                     	;# 
  3574  0895                     	;# 
  3575  0895                     	;# 
  3576  0895                     	;# 
  3577  0896                     	;# 
  3578  0896                     	;# 
  3579  0896                     	;# 
  3580  089B                     	;# 
  3581  0911                     	;# 
  3582  0912                     	;# 
  3583  0913                     	;# 
  3584  0914                     	;# 
  3585  0915                     	;# 
  3586  0916                     	;# 
  3587  0918                     	;# 
  3588  0919                     	;# 
  3589  091A                     	;# 
  3590  091B                     	;# 
  3591  091C                     	;# 
  3592  091D                     	;# 
  3593  091E                     	;# 
  3594  091F                     	;# 
  3595  0E0F                     	;# 
  3596  0E10                     	;# 
  3597  0E11                     	;# 
  3598  0E12                     	;# 
  3599  0E13                     	;# 
  3600  0E14                     	;# 
  3601  0E15                     	;# 
  3602  0E16                     	;# 
  3603  0E17                     	;# 
  3604  0E18                     	;# 
  3605  0E19                     	;# 
  3606  0E1A                     	;# 
  3607  0E1B                     	;# 
  3608  0E1C                     	;# 
  3609  0E1D                     	;# 
  3610  0E1E                     	;# 
  3611  0E1F                     	;# 
  3612  0E20                     	;# 
  3613  0E21                     	;# 
  3614  0E22                     	;# 
  3615  0E24                     	;# 
  3616  0E25                     	;# 
  3617  0E28                     	;# 
  3618  0E29                     	;# 
  3619  0E2A                     	;# 
  3620  0E2B                     	;# 
  3621  0E2C                     	;# 
  3622  0E2D                     	;# 
  3623  0E2E                     	;# 
  3624  0E2F                     	;# 
  3625  0E90                     	;# 
  3626  0E91                     	;# 
  3627  0E92                     	;# 
  3628  0E94                     	;# 
  3629  0E95                     	;# 
  3630  0E9C                     	;# 
  3631  0E9D                     	;# 
  3632  0E9E                     	;# 
  3633  0E9F                     	;# 
  3634  0EA0                     	;# 
  3635  0EA1                     	;# 
  3636  0EA2                     	;# 
  3637  0EA3                     	;# 
  3638  0EA4                     	;# 
  3639  0EA5                     	;# 
  3640  0EA6                     	;# 
  3641  0EA7                     	;# 
  3642  0F0F                     	;# 
  3643  0F10                     	;# 
  3644  0F11                     	;# 
  3645  0F12                     	;# 
  3646  0F13                     	;# 
  3647  0F14                     	;# 
  3648  0F15                     	;# 
  3649  0F16                     	;# 
  3650  0F17                     	;# 
  3651  0F18                     	;# 
  3652  0F19                     	;# 
  3653  0F1A                     	;# 
  3654  0F1B                     	;# 
  3655  0F1C                     	;# 
  3656  0F1D                     	;# 
  3657  0F1E                     	;# 
  3658  0F1F                     	;# 
  3659  0F20                     	;# 
  3660  0F21                     	;# 
  3661  0F22                     	;# 
  3662  0F23                     	;# 
  3663  0F24                     	;# 
  3664  0F25                     	;# 
  3665  0F26                     	;# 
  3666  0F27                     	;# 
  3667  0F28                     	;# 
  3668  0F29                     	;# 
  3669  0F2A                     	;# 
  3670  0F2B                     	;# 
  3671  0F2C                     	;# 
  3672  0F2D                     	;# 
  3673  0F2E                     	;# 
  3674  0F2F                     	;# 
  3675  0F30                     	;# 
  3676  0F31                     	;# 
  3677  0F32                     	;# 
  3678  0F33                     	;# 
  3679  0F34                     	;# 
  3680  0F35                     	;# 
  3681  0F36                     	;# 
  3682  0F37                     	;# 
  3683  0FE4                     	;# 
  3684  0FE5                     	;# 
  3685  0FE6                     	;# 
  3686  0FE7                     	;# 
  3687  0FE8                     	;# 
  3688  0FE9                     	;# 
  3689  0FEA                     	;# 
  3690  0FEB                     	;# 
  3691  0FED                     	;# 
  3692  0FEE                     	;# 
  3693  0FEF                     	;# 
  3694  0000                     	;# 
  3695  0001                     	;# 
  3696  0002                     	;# 
  3697  0003                     	;# 
  3698  0004                     	;# 
  3699  0005                     	;# 
  3700  0006                     	;# 
  3701  0007                     	;# 
  3702  0008                     	;# 
  3703  0009                     	;# 
  3704  000A                     	;# 
  3705  000B                     	;# 
  3706  000C                     	;# 
  3707  000D                     	;# 
  3708  000E                     	;# 
  3709  0010                     	;# 
  3710  0011                     	;# 
  3711  0012                     	;# 
  3712  0013                     	;# 
  3713  0014                     	;# 
  3714  0015                     	;# 
  3715  0015                     	;# 
  3716  0016                     	;# 
  3717  0016                     	;# 
  3718  0017                     	;# 
  3719  0018                     	;# 
  3720  0019                     	;# 
  3721  0019                     	;# 
  3722  001A                     	;# 
  3723  001B                     	;# 
  3724  001C                     	;# 
  3725  001D                     	;# 
  3726  001E                     	;# 
  3727  001F                     	;# 
  3728  008C                     	;# 
  3729  008D                     	;# 
  3730  008E                     	;# 
  3731  0090                     	;# 
  3732  0091                     	;# 
  3733  0092                     	;# 
  3734  0093                     	;# 
  3735  0094                     	;# 
  3736  0097                     	;# 
  3737  009B                     	;# 
  3738  009B                     	;# 
  3739  009C                     	;# 
  3740  009D                     	;# 
  3741  009E                     	;# 
  3742  009F                     	;# 
  3743  010C                     	;# 
  3744  010D                     	;# 
  3745  010E                     	;# 
  3746  0111                     	;# 
  3747  0112                     	;# 
  3748  0113                     	;# 
  3749  0114                     	;# 
  3750  0115                     	;# 
  3751  0116                     	;# 
  3752  0117                     	;# 
  3753  0118                     	;# 
  3754  0119                     	;# 
  3755  018C                     	;# 
  3756  018D                     	;# 
  3757  018E                     	;# 
  3758  0197                     	;# 
  3759  0199                     	;# 
  3760  0199                     	;# 
  3761  0199                     	;# 
  3762  019A                     	;# 
  3763  019A                     	;# 
  3764  019A                     	;# 
  3765  019B                     	;# 
  3766  019B                     	;# 
  3767  019B                     	;# 
  3768  019B                     	;# 
  3769  019B                     	;# 
  3770  019C                     	;# 
  3771  019C                     	;# 
  3772  019C                     	;# 
  3773  019D                     	;# 
  3774  019D                     	;# 
  3775  019D                     	;# 
  3776  019E                     	;# 
  3777  019E                     	;# 
  3778  019E                     	;# 
  3779  019F                     	;# 
  3780  019F                     	;# 
  3781  019F                     	;# 
  3782  019F                     	;# 
  3783  019F                     	;# 
  3784  020C                     	;# 
  3785  020D                     	;# 
  3786  020E                     	;# 
  3787  0211                     	;# 
  3788  0211                     	;# 
  3789  0212                     	;# 
  3790  0212                     	;# 
  3791  0213                     	;# 
  3792  0213                     	;# 
  3793  0214                     	;# 
  3794  0214                     	;# 
  3795  0215                     	;# 
  3796  0215                     	;# 
  3797  0215                     	;# 
  3798  0215                     	;# 
  3799  0216                     	;# 
  3800  0216                     	;# 
  3801  0217                     	;# 
  3802  0217                     	;# 
  3803  0219                     	;# 
  3804  021A                     	;# 
  3805  021B                     	;# 
  3806  021C                     	;# 
  3807  021D                     	;# 
  3808  021D                     	;# 
  3809  021E                     	;# 
  3810  021F                     	;# 
  3811  028C                     	;# 
  3812  028D                     	;# 
  3813  028E                     	;# 
  3814  0291                     	;# 
  3815  0291                     	;# 
  3816  0292                     	;# 
  3817  0293                     	;# 
  3818  0294                     	;# 
  3819  0295                     	;# 
  3820  0295                     	;# 
  3821  0296                     	;# 
  3822  0297                     	;# 
  3823  0298                     	;# 
  3824  029F                     	;# 
  3825  030C                     	;# 
  3826  030D                     	;# 
  3827  030E                     	;# 
  3828  0311                     	;# 
  3829  0311                     	;# 
  3830  0312                     	;# 
  3831  0313                     	;# 
  3832  0314                     	;# 
  3833  0315                     	;# 
  3834  0315                     	;# 
  3835  0316                     	;# 
  3836  0317                     	;# 
  3837  0318                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  0393                     	;# 
  3844  0394                     	;# 
  3845  0395                     	;# 
  3846  0396                     	;# 
  3847  0397                     	;# 
  3848  0398                     	;# 
  3849  0399                     	;# 
  3850  039A                     	;# 
  3851  039C                     	;# 
  3852  039D                     	;# 
  3853  039E                     	;# 
  3854  039F                     	;# 
  3855  0411                     	;# 
  3856  0411                     	;# 
  3857  0412                     	;# 
  3858  0413                     	;# 
  3859  0414                     	;# 
  3860  0415                     	;# 
  3861  0416                     	;# 
  3862  0417                     	;# 
  3863  0418                     	;# 
  3864  0418                     	;# 
  3865  0419                     	;# 
  3866  041A                     	;# 
  3867  041B                     	;# 
  3868  041C                     	;# 
  3869  041D                     	;# 
  3870  041E                     	;# 
  3871  041F                     	;# 
  3872  0498                     	;# 
  3873  0498                     	;# 
  3874  0499                     	;# 
  3875  049A                     	;# 
  3876  049B                     	;# 
  3877  049B                     	;# 
  3878  049C                     	;# 
  3879  049D                     	;# 
  3880  049E                     	;# 
  3881  049F                     	;# 
  3882  0617                     	;# 
  3883  0618                     	;# 
  3884  0619                     	;# 
  3885  0619                     	;# 
  3886  061A                     	;# 
  3887  061B                     	;# 
  3888  061C                     	;# 
  3889  061C                     	;# 
  3890  061F                     	;# 
  3891  0691                     	;# 
  3892  0692                     	;# 
  3893  0693                     	;# 
  3894  0694                     	;# 
  3895  0695                     	;# 
  3896  0696                     	;# 
  3897  0697                     	;# 
  3898  0698                     	;# 
  3899  0699                     	;# 
  3900  0711                     	;# 
  3901  0712                     	;# 
  3902  0713                     	;# 
  3903  0714                     	;# 
  3904  0715                     	;# 
  3905  0716                     	;# 
  3906  0717                     	;# 
  3907  0718                     	;# 
  3908  0719                     	;# 
  3909  0891                     	;# 
  3910  0891                     	;# 
  3911  0891                     	;# 
  3912  0891                     	;# 
  3913  0891                     	;# 
  3914  0891                     	;# 
  3915  0892                     	;# 
  3916  0892                     	;# 
  3917  0892                     	;# 
  3918  0893                     	;# 
  3919  0893                     	;# 
  3920  0893                     	;# 
  3921  0893                     	;# 
  3922  0893                     	;# 
  3923  0893                     	;# 
  3924  0894                     	;# 
  3925  0894                     	;# 
  3926  0894                     	;# 
  3927  0895                     	;# 
  3928  0895                     	;# 
  3929  0895                     	;# 
  3930  0896                     	;# 
  3931  0896                     	;# 
  3932  0896                     	;# 
  3933  089B                     	;# 
  3934  0911                     	;# 
  3935  0912                     	;# 
  3936  0913                     	;# 
  3937  0914                     	;# 
  3938  0915                     	;# 
  3939  0916                     	;# 
  3940  0918                     	;# 
  3941  0919                     	;# 
  3942  091A                     	;# 
  3943  091B                     	;# 
  3944  091C                     	;# 
  3945  091D                     	;# 
  3946  091E                     	;# 
  3947  091F                     	;# 
  3948  0E0F                     	;# 
  3949  0E10                     	;# 
  3950  0E11                     	;# 
  3951  0E12                     	;# 
  3952  0E13                     	;# 
  3953  0E14                     	;# 
  3954  0E15                     	;# 
  3955  0E16                     	;# 
  3956  0E17                     	;# 
  3957  0E18                     	;# 
  3958  0E19                     	;# 
  3959  0E1A                     	;# 
  3960  0E1B                     	;# 
  3961  0E1C                     	;# 
  3962  0E1D                     	;# 
  3963  0E1E                     	;# 
  3964  0E1F                     	;# 
  3965  0E20                     	;# 
  3966  0E21                     	;# 
  3967  0E22                     	;# 
  3968  0E24                     	;# 
  3969  0E25                     	;# 
  3970  0E28                     	;# 
  3971  0E29                     	;# 
  3972  0E2A                     	;# 
  3973  0E2B                     	;# 
  3974  0E2C                     	;# 
  3975  0E2D                     	;# 
  3976  0E2E                     	;# 
  3977  0E2F                     	;# 
  3978  0E90                     	;# 
  3979  0E91                     	;# 
  3980  0E92                     	;# 
  3981  0E94                     	;# 
  3982  0E95                     	;# 
  3983  0E9C                     	;# 
  3984  0E9D                     	;# 
  3985  0E9E                     	;# 
  3986  0E9F                     	;# 
  3987  0EA0                     	;# 
  3988  0EA1                     	;# 
  3989  0EA2                     	;# 
  3990  0EA3                     	;# 
  3991  0EA4                     	;# 
  3992  0EA5                     	;# 
  3993  0EA6                     	;# 
  3994  0EA7                     	;# 
  3995  0F0F                     	;# 
  3996  0F10                     	;# 
  3997  0F11                     	;# 
  3998  0F12                     	;# 
  3999  0F13                     	;# 
  4000  0F14                     	;# 
  4001  0F15                     	;# 
  4002  0F16                     	;# 
  4003  0F17                     	;# 
  4004  0F18                     	;# 
  4005  0F19                     	;# 
  4006  0F1A                     	;# 
  4007  0F1B                     	;# 
  4008  0F1C                     	;# 
  4009  0F1D                     	;# 
  4010  0F1E                     	;# 
  4011  0F1F                     	;# 
  4012  0F20                     	;# 
  4013  0F21                     	;# 
  4014  0F22                     	;# 
  4015  0F23                     	;# 
  4016  0F24                     	;# 
  4017  0F25                     	;# 
  4018  0F26                     	;# 
  4019  0F27                     	;# 
  4020  0F28                     	;# 
  4021  0F29                     	;# 
  4022  0F2A                     	;# 
  4023  0F2B                     	;# 
  4024  0F2C                     	;# 
  4025  0F2D                     	;# 
  4026  0F2E                     	;# 
  4027  0F2F                     	;# 
  4028  0F30                     	;# 
  4029  0F31                     	;# 
  4030  0F32                     	;# 
  4031  0F33                     	;# 
  4032  0F34                     	;# 
  4033  0F35                     	;# 
  4034  0F36                     	;# 
  4035  0F37                     	;# 
  4036  0FE4                     	;# 
  4037  0FE5                     	;# 
  4038  0FE6                     	;# 
  4039  0FE7                     	;# 
  4040  0FE8                     	;# 
  4041  0FE9                     	;# 
  4042  0FEA                     	;# 
  4043  0FEB                     	;# 
  4044  0FED                     	;# 
  4045  0FEE                     	;# 
  4046  0FEF                     	;# 
  4047  0000                     	;# 
  4048  0001                     	;# 
  4049  0002                     	;# 
  4050  0003                     	;# 
  4051  0004                     	;# 
  4052  0005                     	;# 
  4053  0006                     	;# 
  4054  0007                     	;# 
  4055  0008                     	;# 
  4056  0009                     	;# 
  4057  000A                     	;# 
  4058  000B                     	;# 
  4059  000C                     	;# 
  4060  000D                     	;# 
  4061  000E                     	;# 
  4062  0010                     	;# 
  4063  0011                     	;# 
  4064  0012                     	;# 
  4065  0013                     	;# 
  4066  0014                     	;# 
  4067  0015                     	;# 
  4068  0015                     	;# 
  4069  0016                     	;# 
  4070  0016                     	;# 
  4071  0017                     	;# 
  4072  0018                     	;# 
  4073  0019                     	;# 
  4074  0019                     	;# 
  4075  001A                     	;# 
  4076  001B                     	;# 
  4077  001C                     	;# 
  4078  001D                     	;# 
  4079  001E                     	;# 
  4080  001F                     	;# 
  4081  008C                     	;# 
  4082  008D                     	;# 
  4083  008E                     	;# 
  4084  0090                     	;# 
  4085  0091                     	;# 
  4086  0092                     	;# 
  4087  0093                     	;# 
  4088  0094                     	;# 
  4089  0097                     	;# 
  4090  009B                     	;# 
  4091  009B                     	;# 
  4092  009C                     	;# 
  4093  009D                     	;# 
  4094  009E                     	;# 
  4095  009F                     	;# 
  4096  010C                     	;# 
  4097  010D                     	;# 
  4098  010E                     	;# 
  4099  0111                     	;# 
  4100  0112                     	;# 
  4101  0113                     	;# 
  4102  0114                     	;# 
  4103  0115                     	;# 
  4104  0116                     	;# 
  4105  0117                     	;# 
  4106  0118                     	;# 
  4107  0119                     	;# 
  4108  018C                     	;# 
  4109  018D                     	;# 
  4110  018E                     	;# 
  4111  0197                     	;# 
  4112  0199                     	;# 
  4113  0199                     	;# 
  4114  0199                     	;# 
  4115  019A                     	;# 
  4116  019A                     	;# 
  4117  019A                     	;# 
  4118  019B                     	;# 
  4119  019B                     	;# 
  4120  019B                     	;# 
  4121  019B                     	;# 
  4122  019B                     	;# 
  4123  019C                     	;# 
  4124  019C                     	;# 
  4125  019C                     	;# 
  4126  019D                     	;# 
  4127  019D                     	;# 
  4128  019D                     	;# 
  4129  019E                     	;# 
  4130  019E                     	;# 
  4131  019E                     	;# 
  4132  019F                     	;# 
  4133  019F                     	;# 
  4134  019F                     	;# 
  4135  019F                     	;# 
  4136  019F                     	;# 
  4137  020C                     	;# 
  4138  020D                     	;# 
  4139  020E                     	;# 
  4140  0211                     	;# 
  4141  0211                     	;# 
  4142  0212                     	;# 
  4143  0212                     	;# 
  4144  0213                     	;# 
  4145  0213                     	;# 
  4146  0214                     	;# 
  4147  0214                     	;# 
  4148  0215                     	;# 
  4149  0215                     	;# 
  4150  0215                     	;# 
  4151  0215                     	;# 
  4152  0216                     	;# 
  4153  0216                     	;# 
  4154  0217                     	;# 
  4155  0217                     	;# 
  4156  0219                     	;# 
  4157  021A                     	;# 
  4158  021B                     	;# 
  4159  021C                     	;# 
  4160  021D                     	;# 
  4161  021D                     	;# 
  4162  021E                     	;# 
  4163  021F                     	;# 
  4164  028C                     	;# 
  4165  028D                     	;# 
  4166  028E                     	;# 
  4167  0291                     	;# 
  4168  0291                     	;# 
  4169  0292                     	;# 
  4170  0293                     	;# 
  4171  0294                     	;# 
  4172  0295                     	;# 
  4173  0295                     	;# 
  4174  0296                     	;# 
  4175  0297                     	;# 
  4176  0298                     	;# 
  4177  029F                     	;# 
  4178  030C                     	;# 
  4179  030D                     	;# 
  4180  030E                     	;# 
  4181  0311                     	;# 
  4182  0311                     	;# 
  4183  0312                     	;# 
  4184  0313                     	;# 
  4185  0314                     	;# 
  4186  0315                     	;# 
  4187  0315                     	;# 
  4188  0316                     	;# 
  4189  0317                     	;# 
  4190  0318                     	;# 
  4191  038C                     	;# 
  4192  038D                     	;# 
  4193  038E                     	;# 
  4194  0391                     	;# 
  4195  0392                     	;# 
  4196  0393                     	;# 
  4197  0394                     	;# 
  4198  0395                     	;# 
  4199  0396                     	;# 
  4200  0397                     	;# 
  4201  0398                     	;# 
  4202  0399                     	;# 
  4203  039A                     	;# 
  4204  039C                     	;# 
  4205  039D                     	;# 
  4206  039E                     	;# 
  4207  039F                     	;# 
  4208  0411                     	;# 
  4209  0411                     	;# 
  4210  0412                     	;# 
  4211  0413                     	;# 
  4212  0414                     	;# 
  4213  0415                     	;# 
  4214  0416                     	;# 
  4215  0417                     	;# 
  4216  0418                     	;# 
  4217  0418                     	;# 
  4218  0419                     	;# 
  4219  041A                     	;# 
  4220  041B                     	;# 
  4221  041C                     	;# 
  4222  041D                     	;# 
  4223  041E                     	;# 
  4224  041F                     	;# 
  4225  0498                     	;# 
  4226  0498                     	;# 
  4227  0499                     	;# 
  4228  049A                     	;# 
  4229  049B                     	;# 
  4230  049B                     	;# 
  4231  049C                     	;# 
  4232  049D                     	;# 
  4233  049E                     	;# 
  4234  049F                     	;# 
  4235  0617                     	;# 
  4236  0618                     	;# 
  4237  0619                     	;# 
  4238  0619                     	;# 
  4239  061A                     	;# 
  4240  061B                     	;# 
  4241  061C                     	;# 
  4242  061C                     	;# 
  4243  061F                     	;# 
  4244  0691                     	;# 
  4245  0692                     	;# 
  4246  0693                     	;# 
  4247  0694                     	;# 
  4248  0695                     	;# 
  4249  0696                     	;# 
  4250  0697                     	;# 
  4251  0698                     	;# 
  4252  0699                     	;# 
  4253  0711                     	;# 
  4254  0712                     	;# 
  4255  0713                     	;# 
  4256  0714                     	;# 
  4257  0715                     	;# 
  4258  0716                     	;# 
  4259  0717                     	;# 
  4260  0718                     	;# 
  4261  0719                     	;# 
  4262  0891                     	;# 
  4263  0891                     	;# 
  4264  0891                     	;# 
  4265  0891                     	;# 
  4266  0891                     	;# 
  4267  0891                     	;# 
  4268  0892                     	;# 
  4269  0892                     	;# 
  4270  0892                     	;# 
  4271  0893                     	;# 
  4272  0893                     	;# 
  4273  0893                     	;# 
  4274  0893                     	;# 
  4275  0893                     	;# 
  4276  0893                     	;# 
  4277  0894                     	;# 
  4278  0894                     	;# 
  4279  0894                     	;# 
  4280  0895                     	;# 
  4281  0895                     	;# 
  4282  0895                     	;# 
  4283  0896                     	;# 
  4284  0896                     	;# 
  4285  0896                     	;# 
  4286  089B                     	;# 
  4287  0911                     	;# 
  4288  0912                     	;# 
  4289  0913                     	;# 
  4290  0914                     	;# 
  4291  0915                     	;# 
  4292  0916                     	;# 
  4293  0918                     	;# 
  4294  0919                     	;# 
  4295  091A                     	;# 
  4296  091B                     	;# 
  4297  091C                     	;# 
  4298  091D                     	;# 
  4299  091E                     	;# 
  4300  091F                     	;# 
  4301  0E0F                     	;# 
  4302  0E10                     	;# 
  4303  0E11                     	;# 
  4304  0E12                     	;# 
  4305  0E13                     	;# 
  4306  0E14                     	;# 
  4307  0E15                     	;# 
  4308  0E16                     	;# 
  4309  0E17                     	;# 
  4310  0E18                     	;# 
  4311  0E19                     	;# 
  4312  0E1A                     	;# 
  4313  0E1B                     	;# 
  4314  0E1C                     	;# 
  4315  0E1D                     	;# 
  4316  0E1E                     	;# 
  4317  0E1F                     	;# 
  4318  0E20                     	;# 
  4319  0E21                     	;# 
  4320  0E22                     	;# 
  4321  0E24                     	;# 
  4322  0E25                     	;# 
  4323  0E28                     	;# 
  4324  0E29                     	;# 
  4325  0E2A                     	;# 
  4326  0E2B                     	;# 
  4327  0E2C                     	;# 
  4328  0E2D                     	;# 
  4329  0E2E                     	;# 
  4330  0E2F                     	;# 
  4331  0E90                     	;# 
  4332  0E91                     	;# 
  4333  0E92                     	;# 
  4334  0E94                     	;# 
  4335  0E95                     	;# 
  4336  0E9C                     	;# 
  4337  0E9D                     	;# 
  4338  0E9E                     	;# 
  4339  0E9F                     	;# 
  4340  0EA0                     	;# 
  4341  0EA1                     	;# 
  4342  0EA2                     	;# 
  4343  0EA3                     	;# 
  4344  0EA4                     	;# 
  4345  0EA5                     	;# 
  4346  0EA6                     	;# 
  4347  0EA7                     	;# 
  4348  0F0F                     	;# 
  4349  0F10                     	;# 
  4350  0F11                     	;# 
  4351  0F12                     	;# 
  4352  0F13                     	;# 
  4353  0F14                     	;# 
  4354  0F15                     	;# 
  4355  0F16                     	;# 
  4356  0F17                     	;# 
  4357  0F18                     	;# 
  4358  0F19                     	;# 
  4359  0F1A                     	;# 
  4360  0F1B                     	;# 
  4361  0F1C                     	;# 
  4362  0F1D                     	;# 
  4363  0F1E                     	;# 
  4364  0F1F                     	;# 
  4365  0F20                     	;# 
  4366  0F21                     	;# 
  4367  0F22                     	;# 
  4368  0F23                     	;# 
  4369  0F24                     	;# 
  4370  0F25                     	;# 
  4371  0F26                     	;# 
  4372  0F27                     	;# 
  4373  0F28                     	;# 
  4374  0F29                     	;# 
  4375  0F2A                     	;# 
  4376  0F2B                     	;# 
  4377  0F2C                     	;# 
  4378  0F2D                     	;# 
  4379  0F2E                     	;# 
  4380  0F2F                     	;# 
  4381  0F30                     	;# 
  4382  0F31                     	;# 
  4383  0F32                     	;# 
  4384  0F33                     	;# 
  4385  0F34                     	;# 
  4386  0F35                     	;# 
  4387  0F36                     	;# 
  4388  0F37                     	;# 
  4389  0FE4                     	;# 
  4390  0FE5                     	;# 
  4391  0FE6                     	;# 
  4392  0FE7                     	;# 
  4393  0FE8                     	;# 
  4394  0FE9                     	;# 
  4395  0FEA                     	;# 
  4396  0FEB                     	;# 
  4397  0FED                     	;# 
  4398  0FEE                     	;# 
  4399  0FEF                     	;# 
  4400  0000                     	;# 
  4401  0001                     	;# 
  4402  0002                     	;# 
  4403  0003                     	;# 
  4404  0004                     	;# 
  4405  0005                     	;# 
  4406  0006                     	;# 
  4407  0007                     	;# 
  4408  0008                     	;# 
  4409  0009                     	;# 
  4410  000A                     	;# 
  4411  000B                     	;# 
  4412  000C                     	;# 
  4413  000D                     	;# 
  4414  000E                     	;# 
  4415  0010                     	;# 
  4416  0011                     	;# 
  4417  0012                     	;# 
  4418  0013                     	;# 
  4419  0014                     	;# 
  4420  0015                     	;# 
  4421  0015                     	;# 
  4422  0016                     	;# 
  4423  0016                     	;# 
  4424  0017                     	;# 
  4425  0018                     	;# 
  4426  0019                     	;# 
  4427  0019                     	;# 
  4428  001A                     	;# 
  4429  001B                     	;# 
  4430  001C                     	;# 
  4431  001D                     	;# 
  4432  001E                     	;# 
  4433  001F                     	;# 
  4434  008C                     	;# 
  4435  008D                     	;# 
  4436  008E                     	;# 
  4437  0090                     	;# 
  4438  0091                     	;# 
  4439  0092                     	;# 
  4440  0093                     	;# 
  4441  0094                     	;# 
  4442  0097                     	;# 
  4443  009B                     	;# 
  4444  009B                     	;# 
  4445  009C                     	;# 
  4446  009D                     	;# 
  4447  009E                     	;# 
  4448  009F                     	;# 
  4449  010C                     	;# 
  4450  010D                     	;# 
  4451  010E                     	;# 
  4452  0111                     	;# 
  4453  0112                     	;# 
  4454  0113                     	;# 
  4455  0114                     	;# 
  4456  0115                     	;# 
  4457  0116                     	;# 
  4458  0117                     	;# 
  4459  0118                     	;# 
  4460  0119                     	;# 
  4461  018C                     	;# 
  4462  018D                     	;# 
  4463  018E                     	;# 
  4464  0197                     	;# 
  4465  0199                     	;# 
  4466  0199                     	;# 
  4467  0199                     	;# 
  4468  019A                     	;# 
  4469  019A                     	;# 
  4470  019A                     	;# 
  4471  019B                     	;# 
  4472  019B                     	;# 
  4473  019B                     	;# 
  4474  019B                     	;# 
  4475  019B                     	;# 
  4476  019C                     	;# 
  4477  019C                     	;# 
  4478  019C                     	;# 
  4479  019D                     	;# 
  4480  019D                     	;# 
  4481  019D                     	;# 
  4482  019E                     	;# 
  4483  019E                     	;# 
  4484  019E                     	;# 
  4485  019F                     	;# 
  4486  019F                     	;# 
  4487  019F                     	;# 
  4488  019F                     	;# 
  4489  019F                     	;# 
  4490  020C                     	;# 
  4491  020D                     	;# 
  4492  020E                     	;# 
  4493  0211                     	;# 
  4494  0211                     	;# 
  4495  0212                     	;# 
  4496  0212                     	;# 
  4497  0213                     	;# 
  4498  0213                     	;# 
  4499  0214                     	;# 
  4500  0214                     	;# 
  4501  0215                     	;# 
  4502  0215                     	;# 
  4503  0215                     	;# 
  4504  0215                     	;# 
  4505  0216                     	;# 
  4506  0216                     	;# 
  4507  0217                     	;# 
  4508  0217                     	;# 
  4509  0219                     	;# 
  4510  021A                     	;# 
  4511  021B                     	;# 
  4512  021C                     	;# 
  4513  021D                     	;# 
  4514  021D                     	;# 
  4515  021E                     	;# 
  4516  021F                     	;# 
  4517  028C                     	;# 
  4518  028D                     	;# 
  4519  028E                     	;# 
  4520  0291                     	;# 
  4521  0291                     	;# 
  4522  0292                     	;# 
  4523  0293                     	;# 
  4524  0294                     	;# 
  4525  0295                     	;# 
  4526  0295                     	;# 
  4527  0296                     	;# 
  4528  0297                     	;# 
  4529  0298                     	;# 
  4530  029F                     	;# 
  4531  030C                     	;# 
  4532  030D                     	;# 
  4533  030E                     	;# 
  4534  0311                     	;# 
  4535  0311                     	;# 
  4536  0312                     	;# 
  4537  0313                     	;# 
  4538  0314                     	;# 
  4539  0315                     	;# 
  4540  0315                     	;# 
  4541  0316                     	;# 
  4542  0317                     	;# 
  4543  0318                     	;# 
  4544  038C                     	;# 
  4545  038D                     	;# 
  4546  038E                     	;# 
  4547  0391                     	;# 
  4548  0392                     	;# 
  4549  0393                     	;# 
  4550  0394                     	;# 
  4551  0395                     	;# 
  4552  0396                     	;# 
  4553  0397                     	;# 
  4554  0398                     	;# 
  4555  0399                     	;# 
  4556  039A                     	;# 
  4557  039C                     	;# 
  4558  039D                     	;# 
  4559  039E                     	;# 
  4560  039F                     	;# 
  4561  0411                     	;# 
  4562  0411                     	;# 
  4563  0412                     	;# 
  4564  0413                     	;# 
  4565  0414                     	;# 
  4566  0415                     	;# 
  4567  0416                     	;# 
  4568  0417                     	;# 
  4569  0418                     	;# 
  4570  0418                     	;# 
  4571  0419                     	;# 
  4572  041A                     	;# 
  4573  041B                     	;# 
  4574  041C                     	;# 
  4575  041D                     	;# 
  4576  041E                     	;# 
  4577  041F                     	;# 
  4578  0498                     	;# 
  4579  0498                     	;# 
  4580  0499                     	;# 
  4581  049A                     	;# 
  4582  049B                     	;# 
  4583  049B                     	;# 
  4584  049C                     	;# 
  4585  049D                     	;# 
  4586  049E                     	;# 
  4587  049F                     	;# 
  4588  0617                     	;# 
  4589  0618                     	;# 
  4590  0619                     	;# 
  4591  0619                     	;# 
  4592  061A                     	;# 
  4593  061B                     	;# 
  4594  061C                     	;# 
  4595  061C                     	;# 
  4596  061F                     	;# 
  4597  0691                     	;# 
  4598  0692                     	;# 
  4599  0693                     	;# 
  4600  0694                     	;# 
  4601  0695                     	;# 
  4602  0696                     	;# 
  4603  0697                     	;# 
  4604  0698                     	;# 
  4605  0699                     	;# 
  4606  0711                     	;# 
  4607  0712                     	;# 
  4608  0713                     	;# 
  4609  0714                     	;# 
  4610  0715                     	;# 
  4611  0716                     	;# 
  4612  0717                     	;# 
  4613  0718                     	;# 
  4614  0719                     	;# 
  4615  0891                     	;# 
  4616  0891                     	;# 
  4617  0891                     	;# 
  4618  0891                     	;# 
  4619  0891                     	;# 
  4620  0891                     	;# 
  4621  0892                     	;# 
  4622  0892                     	;# 
  4623  0892                     	;# 
  4624  0893                     	;# 
  4625  0893                     	;# 
  4626  0893                     	;# 
  4627  0893                     	;# 
  4628  0893                     	;# 
  4629  0893                     	;# 
  4630  0894                     	;# 
  4631  0894                     	;# 
  4632  0894                     	;# 
  4633  0895                     	;# 
  4634  0895                     	;# 
  4635  0895                     	;# 
  4636  0896                     	;# 
  4637  0896                     	;# 
  4638  0896                     	;# 
  4639  089B                     	;# 
  4640  0911                     	;# 
  4641  0912                     	;# 
  4642  0913                     	;# 
  4643  0914                     	;# 
  4644  0915                     	;# 
  4645  0916                     	;# 
  4646  0918                     	;# 
  4647  0919                     	;# 
  4648  091A                     	;# 
  4649  091B                     	;# 
  4650  091C                     	;# 
  4651  091D                     	;# 
  4652  091E                     	;# 
  4653  091F                     	;# 
  4654  0E0F                     	;# 
  4655  0E10                     	;# 
  4656  0E11                     	;# 
  4657  0E12                     	;# 
  4658  0E13                     	;# 
  4659  0E14                     	;# 
  4660  0E15                     	;# 
  4661  0E16                     	;# 
  4662  0E17                     	;# 
  4663  0E18                     	;# 
  4664  0E19                     	;# 
  4665  0E1A                     	;# 
  4666  0E1B                     	;# 
  4667  0E1C                     	;# 
  4668  0E1D                     	;# 
  4669  0E1E                     	;# 
  4670  0E1F                     	;# 
  4671  0E20                     	;# 
  4672  0E21                     	;# 
  4673  0E22                     	;# 
  4674  0E24                     	;# 
  4675  0E25                     	;# 
  4676  0E28                     	;# 
  4677  0E29                     	;# 
  4678  0E2A                     	;# 
  4679  0E2B                     	;# 
  4680  0E2C                     	;# 
  4681  0E2D                     	;# 
  4682  0E2E                     	;# 
  4683  0E2F                     	;# 
  4684  0E90                     	;# 
  4685  0E91                     	;# 
  4686  0E92                     	;# 
  4687  0E94                     	;# 
  4688  0E95                     	;# 
  4689  0E9C                     	;# 
  4690  0E9D                     	;# 
  4691  0E9E                     	;# 
  4692  0E9F                     	;# 
  4693  0EA0                     	;# 
  4694  0EA1                     	;# 
  4695  0EA2                     	;# 
  4696  0EA3                     	;# 
  4697  0EA4                     	;# 
  4698  0EA5                     	;# 
  4699  0EA6                     	;# 
  4700  0EA7                     	;# 
  4701  0F0F                     	;# 
  4702  0F10                     	;# 
  4703  0F11                     	;# 
  4704  0F12                     	;# 
  4705  0F13                     	;# 
  4706  0F14                     	;# 
  4707  0F15                     	;# 
  4708  0F16                     	;# 
  4709  0F17                     	;# 
  4710  0F18                     	;# 
  4711  0F19                     	;# 
  4712  0F1A                     	;# 
  4713  0F1B                     	;# 
  4714  0F1C                     	;# 
  4715  0F1D                     	;# 
  4716  0F1E                     	;# 
  4717  0F1F                     	;# 
  4718  0F20                     	;# 
  4719  0F21                     	;# 
  4720  0F22                     	;# 
  4721  0F23                     	;# 
  4722  0F24                     	;# 
  4723  0F25                     	;# 
  4724  0F26                     	;# 
  4725  0F27                     	;# 
  4726  0F28                     	;# 
  4727  0F29                     	;# 
  4728  0F2A                     	;# 
  4729  0F2B                     	;# 
  4730  0F2C                     	;# 
  4731  0F2D                     	;# 
  4732  0F2E                     	;# 
  4733  0F2F                     	;# 
  4734  0F30                     	;# 
  4735  0F31                     	;# 
  4736  0F32                     	;# 
  4737  0F33                     	;# 
  4738  0F34                     	;# 
  4739  0F35                     	;# 
  4740  0F36                     	;# 
  4741  0F37                     	;# 
  4742  0FE4                     	;# 
  4743  0FE5                     	;# 
  4744  0FE6                     	;# 
  4745  0FE7                     	;# 
  4746  0FE8                     	;# 
  4747  0FE9                     	;# 
  4748  0FEA                     	;# 
  4749  0FEB                     	;# 
  4750  0FED                     	;# 
  4751  0FEE                     	;# 
  4752  0FEF                     	;# 
  4753                           
  4754                           	psect	idataBANK0
  4755  07FF                     __pidataBANK0:	
  4756                           
  4757                           ;initializer for _start
  4758  07FF  3401               	retlw	1
  4759                           
  4760                           	psect	idataBANK2
  4761  0A4C                     __pidataBANK2:	
  4762                           
  4763                           ;initializer for _names
  4764  0A4C  343D               	retlw	low (STR_1| (0+32768))
  4765  0A4D  3490               	retlw	high (STR_1| (0+32768))
  4766  0A4E  3430               	retlw	low (STR_2| (0+32768))
  4767  0A4F  3490               	retlw	high (STR_2| (0+32768))
  4768  0A50  3420               	retlw	low (STR_3| (0+32768))
  4769  0A51  3490               	retlw	high (STR_3| (0+32768))
  4770  0A52  3449               	retlw	low (STR_4| (0+32768))
  4771  0A53  3490               	retlw	high (STR_4| (0+32768))
  4772                           
  4773                           	psect	stringtext1
  4774  1000                     __pstringtext1:	
  4775  1000                     _fsmStateTable:	
  4776  1000  34DD               	retlw	low _do_I2C_IDLE
  4777  1001  3409               	retlw	high _do_I2C_IDLE
  4778  1002  3424               	retlw	low _do_I2C_SEND_ADR_READ
  4779  1003  340A               	retlw	high _do_I2C_SEND_ADR_READ
  4780  1004  3407               	retlw	low _do_I2C_SEND_ADR_WRITE
  4781  1005  340A               	retlw	high _do_I2C_SEND_ADR_WRITE
  4782  1006  3462               	retlw	low _do_I2C_TX
  4783  1007  340F               	retlw	high _do_I2C_TX
  4784  1008  34D2               	retlw	low _do_I2C_RX
  4785  1009  340E               	retlw	high _do_I2C_RX
  4786  100A  34E8               	retlw	low _do_I2C_RCEN
  4787  100B  3409               	retlw	high _do_I2C_RCEN
  4788  100C  3489               	retlw	low _do_I2C_TX_EMPTY
  4789  100D  340D               	retlw	high _do_I2C_TX_EMPTY
  4790  100E  34B0               	retlw	low _do_I2C_SEND_RESTART_READ
  4791  100F  3409               	retlw	high _do_I2C_SEND_RESTART_READ
  4792  1010  34B4               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4793  1011  3409               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4794  1012  34B8               	retlw	low _do_I2C_SEND_RESTART
  4795  1013  3409               	retlw	high _do_I2C_SEND_RESTART
  4796  1014  34BC               	retlw	low _do_I2C_SEND_STOP
  4797  1015  3409               	retlw	high _do_I2C_SEND_STOP
  4798  1016  34C0               	retlw	low _do_I2C_DO_ACK
  4799  1017  3409               	retlw	high _do_I2C_DO_ACK
  4800  1018  34C4               	retlw	low _do_I2C_DO_NACK_STOP
  4801  1019  3409               	retlw	high _do_I2C_DO_NACK_STOP
  4802  101A  34C8               	retlw	low _do_I2C_DO_NACK_RESTART
  4803  101B  3409               	retlw	high _do_I2C_DO_NACK_RESTART
  4804  101C  3400               	retlw	low _do_I2C_RESET
  4805  101D  340A               	retlw	high _do_I2C_RESET
  4806  101E  3403               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4807  101F  340D               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4808  1020                     __end_of_fsmStateTable:	
  4809                           
  4810                           	psect	nvBANK1
  4811  00E4                     __pnvBANK1:	
  4812  00E4                     _IOCCF1_InterruptHandler:	
  4813  00E4                     	ds	2
  4814  001F                     _T2CONbits	set	31
  4815  001F                     _T2CON	set	31
  4816  001D                     _TMR2	set	29
  4817  001E                     _PR2	set	30
  4818  0011                     _PIR1bits	set	17
  4819  000B                     _INTCONbits	set	11
  4820  0010                     _PIR0bits	set	16
  4821  009D                     _ADCON0bits	set	157
  4822  009C                     _ADRESH	set	156
  4823  009B                     _ADRESL	set	155
  4824  009F                     _ADACT	set	159
  4825  009E                     _ADCON1	set	158
  4826  009D                     _ADCON0	set	157
  4827  008E                     _TRISC	set	142
  4828  008D                     _TRISB	set	141
  4829  008C                     _TRISA	set	140
  4830  0097                     _WDTCON	set	151
  4831  0091                     _PIE1bits	set	145
  4832  0090                     _PIE0bits	set	144
  4833  010E                     _LATCbits	set	270
  4834  010E                     _LATC	set	270
  4835  010D                     _LATB	set	269
  4836  010C                     _LATA	set	268
  4837  018C                     _ANSELA	set	396
  4838  018D                     _ANSELB	set	397
  4839  018E                     _ANSELC	set	398
  4840  021C                     _SSP2STATbits	set	540
  4841  0219                     _SSP2BUF	set	537
  4842  021D                     _SSP2CON1bits	set	541
  4843  021A                     _SSP2ADD	set	538
  4844  021D                     _SSP2CON1	set	541
  4845  021C                     _SSP2STAT	set	540
  4846  0214                     _SSP1STATbits	set	532
  4847  0213                     _SSP1MSK	set	531
  4848  0211                     _SSP1BUF	set	529
  4849  0216                     _SSP1CON2bits	set	534
  4850  0212                     _SSP1ADD	set	530
  4851  0216                     _SSP1CON2	set	534
  4852  0215                     _SSP1CON1	set	533
  4853  0214                     _SSP1STAT	set	532
  4854  0215                     _SSP1CON1bits	set	533
  4855  020E                     _WPUC	set	526
  4856  020C                     _WPUA	set	524
  4857  020D                     _WPUB	set	525
  4858  0293                     _CCP1CONbits	set	659
  4859  029F                     _CCPTMRSbits	set	671
  4860  0291                     _CCPR1L	set	657
  4861  0292                     _CCPR1H	set	658
  4862  0293                     _CCP1CON	set	659
  4863  028E                     _ODCONC	set	654
  4864  028D                     _ODCONB	set	653
  4865  028C                     _ODCONA	set	652
  4866  030E                     _SLRCONC	set	782
  4867  030D                     _SLRCONB	set	781
  4868  030C                     _SLRCONA	set	780
  4869  0397                     _IOCCPbits	set	919
  4870  0398                     _IOCCNbits	set	920
  4871  0399                     _IOCCFbits	set	921
  4872  0916                     _PMD5	set	2326
  4873  0915                     _PMD4	set	2325
  4874  0914                     _PMD3	set	2324
  4875  0913                     _PMD2	set	2323
  4876  0912                     _PMD1	set	2322
  4877  0911                     _PMD0	set	2321
  4878  091E                     _OSCTUNE	set	2334
  4879  091F                     _OSCFRQ	set	2335
  4880  091D                     _OSCEN	set	2333
  4881  091B                     _OSCCON3	set	2331
  4882  0919                     _OSCCON1	set	2329
  4883  0E1D                     _SSP2CLKPPS	set	3613
  4884  0E21                     _SSP1DATPPS	set	3617
  4885  0E20                     _SSP1CLKPPS	set	3616
  4886  0E1E                     _SSP2DATPPS	set	3614
  4887  0EA7                     _RC7PPS	set	3751
  4888  0EA2                     _RC2PPS	set	3746
  4889  0E9D                     _RB5PPS	set	3741
  4890  0E9F                     _RB7PPS	set	3743
  4891  0E9E                     _RB6PPS	set	3742
  4892                           
  4893                           	psect	stringtext2
  4894  1020                     __pstringtext2:	
  4895  1020                     STR_3:	
  4896  1020  3441               	retlw	65	;'A'
  4897  1021  346C               	retlw	108	;'l'
  4898  1022  3465               	retlw	101	;'e'
  4899  1023  3478               	retlw	120	;'x'
  4900  1024  3461               	retlw	97	;'a'
  4901  1025  346E               	retlw	110	;'n'
  4902  1026  3464               	retlw	100	;'d'
  4903  1027  3472               	retlw	114	;'r'
  4904  1028  3461               	retlw	97	;'a'
  4905  1029  3420               	retlw	32	;' '
  4906  102A  3446               	retlw	70	;'F'
  4907  102B  3479               	retlw	121	;'y'
  4908  102C  3466               	retlw	102	;'f'
  4909  102D  3466               	retlw	102	;'f'
  4910  102E  3465               	retlw	101	;'e'
  4911  102F  3400               	retlw	0
  4912                           
  4913                           	psect	stringtext3
  4914  1030                     __pstringtext3:	
  4915  1030                     STR_2:	
  4916  1030  344E               	retlw	78	;'N'
  4917  1031  346F               	retlw	111	;'o'
  4918  1032  3465               	retlw	101	;'e'
  4919  1033  346C               	retlw	108	;'l'
  4920  1034  346C               	retlw	108	;'l'
  4921  1035  3465               	retlw	101	;'e'
  4922  1036  3420               	retlw	32	;' '
  4923  1037  3443               	retlw	67	;'C'
  4924  1038  3472               	retlw	114	;'r'
  4925  1039  3461               	retlw	97	;'a'
  4926  103A  346E               	retlw	110	;'n'
  4927  103B  3465               	retlw	101	;'e'
  4928  103C  3400               	retlw	0
  4929                           
  4930                           	psect	stringtext4
  4931  103D                     __pstringtext4:	
  4932  103D                     STR_1:	
  4933  103D  344A               	retlw	74	;'J'
  4934  103E  3475               	retlw	117	;'u'
  4935  103F  3473               	retlw	115	;'s'
  4936  1040  3474               	retlw	116	;'t'
  4937  1041  3469               	retlw	105	;'i'
  4938  1042  346E               	retlw	110	;'n'
  4939  1043  3420               	retlw	32	;' '
  4940  1044  3443               	retlw	67	;'C'
  4941  1045  3468               	retlw	104	;'h'
  4942  1046  3461               	retlw	97	;'a'
  4943  1047  346E               	retlw	110	;'n'
  4944  1048  3400               	retlw	0
  4945                           
  4946                           	psect	stringtext5
  4947  1049                     __pstringtext5:	
  4948  1049                     STR_4:	
  4949  1049  344A               	retlw	74	;'J'
  4950  104A  3465               	retlw	101	;'e'
  4951  104B  3466               	retlw	102	;'f'
  4952  104C  3466               	retlw	102	;'f'
  4953  104D  3420               	retlw	32	;' '
  4954  104E  3447               	retlw	71	;'G'
  4955  104F  3465               	retlw	101	;'e'
  4956  1050  3469               	retlw	105	;'i'
  4957  1051  3473               	retlw	115	;'s'
  4958  1052  3473               	retlw	115	;'s'
  4959  1053  3400               	retlw	0
  4960                           
  4961                           	psect	stringtext6
  4962  1054                     __pstringtext6:	
  4963  1054                     STR_5:	
  4964  1054  3472               	retlw	114	;'r'
  4965  1055  3465               	retlw	101	;'e'
  4966  1056  3473               	retlw	115	;'s'
  4967  1057  3465               	retlw	101	;'e'
  4968  1058  3474               	retlw	116	;'t'
  4969  1059  3400               	retlw	0
  4970                           
  4971                           	psect	stringtext7
  4972  0000                     __pstringtext7:	
  4973  1020                     
  4974                           ; #config settings
  4975  0000                     
  4976                           	psect	cinit
  4977  002D                     start_initialization:	
  4978  002D                     __initialization:	
  4979                           
  4980                           ; Initialize objects allocated to BANK0
  4981  002D  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  4982  0030  00EF               	movwf	__pdataBANK0& (0+127)
  4983                           
  4984                           ; Initialize objects allocated to BANK2
  4985  0031  304C               	movlw	low __pidataBANK2
  4986  0032  0084               	movwf	4
  4987  0033  308A               	movlw	(high __pidataBANK2)| (0+128)
  4988  0034  0085               	movwf	5
  4989  0035  3060               	movlw	low __pdataBANK2
  4990  0036  0086               	movwf	6
  4991  0037  3001               	movlw	high __pdataBANK2
  4992  0038  0087               	movwf	7
  4993  0039  3008               	movlw	8
  4994  003A  3189  21FA  3180   	fcall	init_ram
  4995                           
  4996                           ; Clear objects allocated to COMMON
  4997  003D  01F6               	clrf	__pbssCOMMON& (0+127)
  4998  003E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4999  003F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5000  0040  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5001  0041  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  5002                           
  5003                           ; Clear objects allocated to BANK0
  5004  0042  305C               	movlw	low __pbssBANK0
  5005  0043  0084               	movwf	4
  5006  0044  3000               	movlw	high __pbssBANK0
  5007  0045  0085               	movwf	5
  5008  0046  3013               	movlw	19
  5009  0047  3189  21F4  3180   	fcall	clear_ram0
  5010                           
  5011                           ; Clear objects allocated to BANK1
  5012  004A  0021               	movlb	1	; select bank1
  5013  004B  01E0               	clrf	__pbssBANK1& (0+127)
  5014  004C  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  5015  004D  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  5016  004E  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  5017                           
  5018                           ; Clear objects allocated to BANK2
  5019  004F  0022               	movlb	2	; select bank2
  5020  0050  01E8               	clrf	__pbssBANK2& (0+127)
  5021  0051  01E9               	clrf	(__pbssBANK2+1)& (0+127)
  5022                           
  5023                           ; Clear objects allocated to BANK3
  5024  0052  30A0               	movlw	low __pbssBANK3
  5025  0053  0084               	movwf	4
  5026  0054  3001               	movlw	high __pbssBANK3
  5027  0055  0085               	movwf	5
  5028  0056  301D               	movlw	29
  5029  0057  3189  21F4  3180   	fcall	clear_ram0
  5030                           
  5031                           ; Clear objects allocated to BANK4
  5032  005A  3020               	movlw	low __pbssBANK4
  5033  005B  0084               	movwf	4
  5034  005C  3002               	movlw	high __pbssBANK4
  5035  005D  0085               	movwf	5
  5036  005E  3044               	movlw	68
  5037  005F  3189  21F4         	fcall	clear_ram0
  5038  0061                     end_of_initialization:	
  5039                           ;End of C runtime variable initialization code
  5040                           
  5041  0061                     __end_of__initialization:	
  5042  0061  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5043  0062  0020               	movlb	0
  5044  0063  318D  2D59         	ljmp	_main	;jump to C main() function
  5045                           
  5046                           	psect	bssCOMMON
  5047  0076                     __pbssCOMMON:	
  5048  0076                     _b_i2c_error_flag:	
  5049  0076                     	ds	1
  5050  0077                     _handleGestureFlag:	
  5051  0077                     	ds	1
  5052  0078                     _state:	
  5053  0078                     	ds	1
  5054  0079                     _adcResult:	
  5055  0079                     	ds	1
  5056  007A                     _button:	
  5057  007A                     	ds	1
  5058                           
  5059                           	psect	bssBANK0
  5060  005C                     __pbssBANK0:	
  5061  005C                     _name:	
  5062  005C                     	ds	2
  5063  005E                     _gesture_state_:	
  5064  005E                     	ds	2
  5065  0060                     _gesture_near_count_:	
  5066  0060                     	ds	2
  5067  0062                     _gesture_lr_count_:	
  5068  0062                     	ds	2
  5069  0064                     _gesture_ud_count_:	
  5070  0064                     	ds	2
  5071  0066                     _gesture_lr_delta_:	
  5072  0066                     	ds	2
  5073  0068                     _gesture_ud_delta_:	
  5074  0068                     	ds	2
  5075  006A                     _i2c1_driver_i2cISR:	
  5076  006A                     	ds	2
  5077  006C                     _i2c1_driver_busCollisionISR:	
  5078  006C                     	ds	2
  5079  006E                     _printed:	
  5080  006E                     	ds	1
  5081                           
  5082                           	psect	dataBANK0
  5083  006F                     __pdataBANK0:	
  5084  006F                     _start:	
  5085  006F                     	ds	1
  5086                           
  5087                           	psect	bssBANK1
  5088  00E0                     __pbssBANK1:	
  5089  00E0                     _adcResult2:	
  5090  00E0                     	ds	2
  5091  00E2                     _gesture_far_count_:	
  5092  00E2                     	ds	2
  5093                           
  5094                           	psect	bssBANK2
  5095  0168                     __pbssBANK2:	
  5096  0168                     _gesture_motion_:	
  5097  0168                     	ds	2
  5098                           
  5099                           	psect	dataBANK2
  5100  0160                     __pdataBANK2:	
  5101  0160                     _names:	
  5102  0160                     	ds	8
  5103                           
  5104                           	psect	bssBANK3
  5105  01A0                     __pbssBANK3:	
  5106  01A0                     _i2c_status:	
  5107  01A0                     	ds	29
  5108                           
  5109                           	psect	bssBANK4
  5110  0220                     __pbssBANK4:	
  5111  0220                     _gesture_data_:	
  5112  0220                     	ds	68
  5113                           
  5114                           	psect	inittext
  5115  09FA                     init_ram:	
  5116  09FA  00FE               	movwf	126
  5117  09FB                     initloop:	
  5118  09FB  0012               	moviw fsr0++
  5119  09FC  001E               	movwi fsr1++
  5120  09FD  0BFE               	decfsz	126,f
  5121  09FE  29FB               	goto	initloop
  5122  09FF  3400               	retlw	0
  5123                           
  5124                           	psect	clrtext
  5125  09F4                     clear_ram0:	
  5126                           ;	Called with FSR0 containing the base address, and
  5127                           ;	WREG with the size to clear
  5128                           
  5129  09F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5130  09F5                     clrloop0:	
  5131  09F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5132  09F6  3101               	addfsr 0,1
  5133  09F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5134  09F8  29F5               	goto	clrloop0	;have we reached the end yet?
  5135  09F9  3400               	retlw	0	;all done for this memory range, return
  5136                           
  5137                           	psect	cstackBANK2
  5138  0120                     __pcstackBANK2:	
  5139  0120                     readGesture@fifo_data:	
  5140                           
  5141                           ; 64 bytes @ 0x0
  5142  0120                     	ds	64
  5143                           
  5144                           	psect	cstackBANK1
  5145  00A0                     __pcstackBANK1:	
  5146  00A0                     readGesture@fifo_data2:	
  5147                           
  5148                           ; 64 bytes @ 0x0
  5149  00A0                     	ds	64
  5150                           
  5151                           	psect	cstackCOMMON
  5152  0070                     __pcstackCOMMON:	
  5153  0070                     ?_i2c1_driver_open:	
  5154  0070                     ?_i2c1_driver_isNACK:	
  5155                           ; 1 bit 
  5156                           
  5157  0070                     ?_i2c1_driver_isBufferFull:	
  5158                           ; 1 bit 
  5159                           
  5160  0070                     ?_returnStop:	
  5161                           ; 1 bit 
  5162                           
  5163  0070                     ?_returnReset:	
  5164                           ; 1 bytes @ 0x0
  5165                           
  5166  0070                     ?_mssp1_clearIRQ:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     ??_mssp1_clearIRQ:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     ?_i2c_busCollisionISR:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175  0070                     ??_i2c_busCollisionISR:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     ?_i2c_ISR:	
  5179                           ; 1 bytes @ 0x0
  5180                           
  5181  0070                     ?_i2c1_driver_start:	
  5182                           ; 1 bytes @ 0x0
  5183                           
  5184  0070                     ?_i2c1_driver_resetBus:	
  5185                           ; 1 bytes @ 0x0
  5186                           
  5187  0070                     ??_i2c1_driver_resetBus:	
  5188                           ; 1 bytes @ 0x0
  5189                           
  5190  0070                     ?_i2c1_driver_restart:	
  5191                           ; 1 bytes @ 0x0
  5192                           
  5193  0070                     ?_i2c1_driver_stop:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196  0070                     ?_i2c1_driver_TXData:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199  0070                     ?_i2c1_driver_startRX:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0070                     ?_i2c1_driver_sendACK:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0070                     ??_i2c1_driver_sendACK:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0070                     ?_i2c1_driver_sendNACK:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211  0070                     ??_i2c1_driver_isNACK:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0070                     ?_i2c1_driver_getRXData:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0070                     ?_mssp1_setIRQ:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0070                     ??_mssp1_setIRQ:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0070                     ?_i2c1_driver_clearBusCollision:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0070                     ??_i2c1_driver_clearBusCollision:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0070                     ?_PIN_MANAGER_IOC:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0070                     ??_PIN_MANAGER_IOC:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0070                     ?_PMD_Initialize:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0070                     ?_PIN_MANAGER_Initialize:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0070                     ?_OSCILLATOR_Initialize:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0070                     ?_WDT_Initialize:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0070                     ?_SPI2_Initialize:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0070                     ?_PWM1_Initialize:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0070                     ?_ADC_Initialize:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0070                     ?_TMR2_Initialize:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0070                     ?_IOCCF1_DefaultInterruptHandler:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0070                     ??_IOCCF1_DefaultInterruptHandler:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0070                     ?_IOCCF1_ISR:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268  0070                     ??_IOCCF1_ISR:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271  0070                     ?_initialize:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274  0070                     ?_enableGestureSensor:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277  0070                     ?_isGestureAvailable:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280  0070                     ?_handleGesture:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0070                     ?_PWM_Output_Enable:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0070                     ?_PWM_Output_Disable:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289  0070                     ?_wireReadDataByte:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292  0070                     ?_setLEDDrive:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295  0070                     ?_setProximityGain:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298  0070                     ?_setAmbientLightGain:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301  0070                     ?_setProxIntLowThresh:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0070                     ?_setProxIntHighThresh:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0070                     ?_setGestureEnterThresh:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0070                     ?_setGestureExitThresh:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0070                     ?_setGestureGain:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ?_setGestureLEDDrive:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ?_setGestureWaitTime:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ?_setGestureIntEnable:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ?_getMode:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ?_resetGestureParameters:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ?_setLEDBoost:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_setGestureMode:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ?_enablePower:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ?_processGestureData:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ?_decodeGesture:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ?_I2C_Start:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_I2C_Write_Byte:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ?_I2C_ReStart:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_I2C_Read_Byte:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ?_I2C_Send_NACK:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0070                     ?_I2C_Stop:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0070                     ?_do_I2C_RESET:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0070                     ??_do_I2C_RESET:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0070                     ?_do_I2C_IDLE:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0070                     ??_do_I2C_IDLE:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0070                     ?_do_I2C_SEND_RESTART_READ:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0070                     ??_do_I2C_SEND_RESTART_READ:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     ?_do_I2C_SEND_RESTART:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     ??_do_I2C_SEND_RESTART:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0070                     ?_do_I2C_SEND_STOP:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0070                     ??_do_I2C_SEND_STOP:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0070                     ?_do_I2C_SEND_ADR_READ:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0070                     ??_do_I2C_SEND_ADR_READ:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409  0070                     ??_do_I2C_SEND_ADR_WRITE:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412  0070                     ?_do_I2C_RCEN:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415  0070                     ??_do_I2C_RCEN:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418  0070                     ?_do_I2C_DO_ACK:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0070                     ??_do_I2C_DO_ACK:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424  0070                     ?_do_I2C_DO_NACK_STOP:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427  0070                     ??_do_I2C_DO_NACK_STOP:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430  0070                     ?_do_I2C_DO_NACK_RESTART:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433  0070                     ??_do_I2C_DO_NACK_RESTART:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442  0070                     ?_do_I2C_TX:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445  0070                     ??_do_I2C_TX:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448  0070                     ?_do_I2C_RX:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451  0070                     ??_do_I2C_RX:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454  0070                     ?_do_I2C_TX_EMPTY:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457  0070                     ??_do_I2C_TX_EMPTY:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460  0070                     ?_INTERRUPT_InterruptManager:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463  0070                     ?_SYSTEM_Initialize:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466  0070                     ?_SPI2_Exchange8bit:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469  0070                     ?_main:	
  5470                           ; 1 bytes @ 0x0
  5471                           
  5472  0070                     ?_SPI_Write:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475  0070                     ?i1_i2c1_driver_restart:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478  0070                     ??i1_i2c1_driver_restart:	
  5479                           ; 1 bytes @ 0x0
  5480                           
  5481  0070                     ?i1_i2c1_driver_stop:	
  5482                           ; 1 bytes @ 0x0
  5483                           
  5484  0070                     ??i1_i2c1_driver_stop:	
  5485                           ; 1 bytes @ 0x0
  5486                           
  5487  0070                     ?i1_i2c1_driver_startRX:	
  5488                           ; 1 bytes @ 0x0
  5489                           
  5490  0070                     ??i1_i2c1_driver_startRX:	
  5491                           ; 1 bytes @ 0x0
  5492                           
  5493  0070                     ?i1_i2c1_driver_getRXData:	
  5494                           ; 1 bytes @ 0x0
  5495                           
  5496  0070                     ??i1_i2c1_driver_getRXData:	
  5497                           ; 1 bytes @ 0x0
  5498                           
  5499  0070                     ?i1_i2c1_driver_TXData:	
  5500                           ; 1 bytes @ 0x0
  5501                           
  5502  0070                     ??i1_i2c1_driver_TXData:	
  5503                           ; 1 bytes @ 0x0
  5504                           
  5505  0070                     ?i1_i2c1_driver_sendNACK:	
  5506                           ; 1 bytes @ 0x0
  5507                           
  5508  0070                     ??i1_i2c1_driver_sendNACK:	
  5509                           ; 1 bytes @ 0x0
  5510                           
  5511  0070                     returnStop@p:	
  5512                           ; 1 bytes @ 0x0
  5513                           
  5514  0070                     returnReset@p:	
  5515                           ; 1 bytes @ 0x0
  5516                           
  5517  0070                     i1i2c1_driver_TXData@d:	
  5518                           ; 1 bytes @ 0x0
  5519                           
  5520                           
  5521                           ; 1 bytes @ 0x0
  5522  0070                     	ds	1
  5523  0071                     ??_returnStop:	
  5524  0071                     ??_returnReset:	
  5525                           ; 1 bytes @ 0x1
  5526                           
  5527                           
  5528                           ; 1 bytes @ 0x1
  5529  0071                     	ds	2
  5530  0073                     ??_i2c_ISR:	
  5531                           
  5532                           ; 1 bytes @ 0x3
  5533  0073                     	ds	3
  5534  0076                     ??_INTERRUPT_InterruptManager:	
  5535                           
  5536                           	psect	cstackBANK0
  5537  0020                     __pcstackBANK0:	
  5538                           ; 1 bytes @ 0x6
  5539                           
  5540  0020                     ??_i2c1_driver_open:	
  5541  0020                     ??_i2c1_driver_start:	
  5542                           ; 1 bytes @ 0x0
  5543                           
  5544  0020                     ??_i2c1_driver_restart:	
  5545                           ; 1 bytes @ 0x0
  5546                           
  5547  0020                     ??_i2c1_driver_stop:	
  5548                           ; 1 bytes @ 0x0
  5549                           
  5550  0020                     ??_i2c1_driver_TXData:	
  5551                           ; 1 bytes @ 0x0
  5552                           
  5553  0020                     ??_i2c1_driver_startRX:	
  5554                           ; 1 bytes @ 0x0
  5555                           
  5556  0020                     ??_i2c1_driver_sendNACK:	
  5557                           ; 1 bytes @ 0x0
  5558                           
  5559  0020                     ??_i2c1_driver_getRXData:	
  5560                           ; 1 bytes @ 0x0
  5561                           
  5562  0020                     ??_PMD_Initialize:	
  5563                           ; 1 bytes @ 0x0
  5564                           
  5565  0020                     ??_OSCILLATOR_Initialize:	
  5566                           ; 1 bytes @ 0x0
  5567                           
  5568  0020                     ??_WDT_Initialize:	
  5569                           ; 1 bytes @ 0x0
  5570                           
  5571  0020                     ??_SPI2_Initialize:	
  5572                           ; 1 bytes @ 0x0
  5573                           
  5574  0020                     ??_PWM1_Initialize:	
  5575                           ; 1 bytes @ 0x0
  5576                           
  5577  0020                     ??_ADC_Initialize:	
  5578                           ; 1 bytes @ 0x0
  5579                           
  5580  0020                     ??_TMR2_Initialize:	
  5581                           ; 1 bytes @ 0x0
  5582                           
  5583  0020                     ?_IOCCF1_SetInterruptHandler:	
  5584                           ; 1 bytes @ 0x0
  5585                           
  5586  0020                     ??_PWM_Output_Enable:	
  5587                           ; 1 bytes @ 0x0
  5588                           
  5589  0020                     ??_PWM_Output_Disable:	
  5590                           ; 1 bytes @ 0x0
  5591                           
  5592  0020                     ??_resetGestureParameters:	
  5593                           ; 1 bytes @ 0x0
  5594                           
  5595  0020                     ??_decodeGesture:	
  5596                           ; 1 bytes @ 0x0
  5597                           
  5598  0020                     ??_I2C_Start:	
  5599                           ; 1 bytes @ 0x0
  5600                           
  5601  0020                     ??_I2C_ReStart:	
  5602                           ; 1 bytes @ 0x0
  5603                           
  5604  0020                     ??_I2C_Send_NACK:	
  5605                           ; 1 bytes @ 0x0
  5606                           
  5607  0020                     ??_I2C_Stop:	
  5608                           ; 1 bytes @ 0x0
  5609                           
  5610  0020                     ??_i2c1_driver_isBufferFull:	
  5611                           ; 1 bytes @ 0x0
  5612                           
  5613  0020                     ??_SPI2_Exchange8bit:	
  5614                           ; 1 bytes @ 0x0
  5615                           
  5616  0020                     ?_strlen:	
  5617                           ; 1 bytes @ 0x0
  5618                           
  5619  0020                     ?___wmul:	
  5620                           ; 2 bytes @ 0x0
  5621                           
  5622  0020                     i2c1_driver_TXData@d:	
  5623                           ; 2 bytes @ 0x0
  5624                           
  5625  0020                     SPI2_Exchange8bit@data:	
  5626                           ; 1 bytes @ 0x0
  5627                           
  5628  0020                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  5629                           ; 1 bytes @ 0x0
  5630                           
  5631  0020                     ___wmul@multiplier:	
  5632                           ; 2 bytes @ 0x0
  5633                           
  5634  0020                     strlen@s:	
  5635                           ; 2 bytes @ 0x0
  5636                           
  5637                           
  5638                           ; 2 bytes @ 0x0
  5639  0020                     	ds	1
  5640  0021                     ??_I2C_Write_Byte:	
  5641  0021                     ??_I2C_Read_Byte:	
  5642                           ; 1 bytes @ 0x1
  5643                           
  5644  0021                     ??_SPI_Write:	
  5645                           ; 1 bytes @ 0x1
  5646                           
  5647                           
  5648                           ; 1 bytes @ 0x1
  5649  0021                     	ds	1
  5650  0022                     ??_PIN_MANAGER_Initialize:	
  5651  0022                     ??_IOCCF1_SetInterruptHandler:	
  5652                           ; 1 bytes @ 0x2
  5653                           
  5654  0022                     ??_strlen:	
  5655                           ; 1 bytes @ 0x2
  5656                           
  5657  0022                     ??_SYSTEM_Initialize:	
  5658                           ; 1 bytes @ 0x2
  5659                           
  5660  0022                     SPI_Write@incoming:	
  5661                           ; 1 bytes @ 0x2
  5662                           
  5663  0022                     _decodeGesture$1406:	
  5664                           ; 1 bytes @ 0x2
  5665                           
  5666  0022                     ___wmul@multiplicand:	
  5667                           ; 2 bytes @ 0x2
  5668                           
  5669                           
  5670                           ; 2 bytes @ 0x2
  5671  0022                     	ds	1
  5672  0023                     I2C_Write_Byte@Byte:	
  5673  0023                     strlen@a:	
  5674                           ; 1 bytes @ 0x3
  5675                           
  5676                           
  5677                           ; 2 bytes @ 0x3
  5678  0023                     	ds	1
  5679  0024                     ??___wmul:	
  5680  0024                     _decodeGesture$1407:	
  5681                           ; 1 bytes @ 0x4
  5682                           
  5683  0024                     I2C_Write_Byte@count:	
  5684                           ; 2 bytes @ 0x4
  5685                           
  5686  0024                     ___wmul@product:	
  5687                           ; 2 bytes @ 0x4
  5688                           
  5689                           
  5690                           ; 2 bytes @ 0x4
  5691  0024                     	ds	1
  5692  0025                     ?_Display_Name:	
  5693  0025                     Display_Name@string1:	
  5694                           ; 1 bytes @ 0x5
  5695                           
  5696                           
  5697                           ; 2 bytes @ 0x5
  5698  0025                     	ds	1
  5699  0026                     ??_wireReadDataByte:	
  5700  0026                     ?_wireWriteDataByte:	
  5701                           ; 1 bytes @ 0x6
  5702                           
  5703  0026                     ?_wireReadDataBlock:	
  5704                           ; 2 bytes @ 0x6
  5705                           
  5706  0026                     ?___awdiv:	
  5707                           ; 2 bytes @ 0x6
  5708                           
  5709  0026                     wireWriteDataByte@val:	
  5710                           ; 2 bytes @ 0x6
  5711                           
  5712  0026                     _decodeGesture$1408:	
  5713                           ; 1 bytes @ 0x6
  5714                           
  5715  0026                     wireReadDataBlock@val:	
  5716                           ; 2 bytes @ 0x6
  5717                           
  5718  0026                     ___awdiv@divisor:	
  5719                           ; 2 bytes @ 0x6
  5720                           
  5721                           
  5722                           ; 2 bytes @ 0x6
  5723  0026                     	ds	1
  5724  0027                     ??_Display_Name:	
  5725  0027                     wireReadDataByte@reg:	
  5726                           ; 1 bytes @ 0x7
  5727                           
  5728                           
  5729                           ; 1 bytes @ 0x7
  5730  0027                     	ds	1
  5731  0028                     wireReadDataByte@val:	
  5732  0028                     Display_Name@length:	
  5733                           ; 1 bytes @ 0x8
  5734                           
  5735  0028                     _decodeGesture$1409:	
  5736                           ; 2 bytes @ 0x8
  5737                           
  5738  0028                     wireReadDataBlock@len:	
  5739                           ; 2 bytes @ 0x8
  5740                           
  5741  0028                     ___awdiv@dividend:	
  5742                           ; 2 bytes @ 0x8
  5743                           
  5744                           
  5745                           ; 2 bytes @ 0x8
  5746  0028                     	ds	1
  5747  0029                     ??_isGestureAvailable:	
  5748  0029                     ??_wireWriteDataByte:	
  5749                           ; 1 bytes @ 0x9
  5750                           
  5751  0029                     ??_getMode:	
  5752                           ; 1 bytes @ 0x9
  5753                           
  5754  0029                     wireWriteDataByte@reg:	
  5755                           ; 1 bytes @ 0x9
  5756                           
  5757                           
  5758                           ; 1 bytes @ 0x9
  5759  0029                     	ds	1
  5760  002A                     ??_setLEDDrive:	
  5761  002A                     ??_setProximityGain:	
  5762                           ; 1 bytes @ 0xA
  5763                           
  5764  002A                     ??_setAmbientLightGain:	
  5765                           ; 1 bytes @ 0xA
  5766                           
  5767  002A                     ??_setProxIntLowThresh:	
  5768                           ; 1 bytes @ 0xA
  5769                           
  5770  002A                     ??_setProxIntHighThresh:	
  5771                           ; 1 bytes @ 0xA
  5772                           
  5773  002A                     ?_setLightIntLowThreshold:	
  5774                           ; 1 bytes @ 0xA
  5775                           
  5776  002A                     ?_setLightIntHighThreshold:	
  5777                           ; 1 bytes @ 0xA
  5778                           
  5779  002A                     ??_setGestureEnterThresh:	
  5780                           ; 1 bytes @ 0xA
  5781                           
  5782  002A                     ??_setGestureExitThresh:	
  5783                           ; 1 bytes @ 0xA
  5784                           
  5785  002A                     ??_setGestureGain:	
  5786                           ; 1 bytes @ 0xA
  5787                           
  5788  002A                     ??_setGestureLEDDrive:	
  5789                           ; 1 bytes @ 0xA
  5790                           
  5791  002A                     ??_setGestureWaitTime:	
  5792                           ; 1 bytes @ 0xA
  5793                           
  5794  002A                     ??_setGestureIntEnable:	
  5795                           ; 1 bytes @ 0xA
  5796                           
  5797  002A                     ??_setLEDBoost:	
  5798                           ; 1 bytes @ 0xA
  5799                           
  5800  002A                     ??_setGestureMode:	
  5801                           ; 1 bytes @ 0xA
  5802                           
  5803  002A                     ??_wireReadDataBlock:	
  5804                           ; 1 bytes @ 0xA
  5805                           
  5806  002A                     ??___awdiv:	
  5807                           ; 1 bytes @ 0xA
  5808                           
  5809  002A                     getMode@enable_value:	
  5810                           ; 1 bytes @ 0xA
  5811                           
  5812  002A                     isGestureAvailable@val:	
  5813                           ; 1 bytes @ 0xA
  5814                           
  5815  002A                     Display_Name@i:	
  5816                           ; 1 bytes @ 0xA
  5817                           
  5818  002A                     setLightIntLowThreshold@threshold:	
  5819                           ; 2 bytes @ 0xA
  5820                           
  5821  002A                     setLightIntHighThreshold@threshold:	
  5822                           ; 2 bytes @ 0xA
  5823                           
  5824  002A                     _decodeGesture$1410:	
  5825                           ; 2 bytes @ 0xA
  5826                           
  5827                           
  5828                           ; 2 bytes @ 0xA
  5829  002A                     	ds	1
  5830  002B                     ?_setMode:	
  5831  002B                     setMode@enable:	
  5832                           ; 1 bytes @ 0xB
  5833                           
  5834  002B                     setAmbientLightGain@drive:	
  5835                           ; 1 bytes @ 0xB
  5836                           
  5837  002B                     setProxIntLowThresh@threshold:	
  5838                           ; 1 bytes @ 0xB
  5839                           
  5840  002B                     setProxIntHighThresh@threshold:	
  5841                           ; 1 bytes @ 0xB
  5842                           
  5843  002B                     setGestureEnterThresh@threshold:	
  5844                           ; 1 bytes @ 0xB
  5845                           
  5846  002B                     setGestureExitThresh@threshold:	
  5847                           ; 1 bytes @ 0xB
  5848                           
  5849  002B                     setGestureWaitTime@time:	
  5850                           ; 1 bytes @ 0xB
  5851                           
  5852  002B                     setGestureIntEnable@val:	
  5853                           ; 1 bytes @ 0xB
  5854                           
  5855  002B                     setGestureMode@mode:	
  5856                           ; 1 bytes @ 0xB
  5857                           
  5858  002B                     ___awdiv@counter:	
  5859                           ; 1 bytes @ 0xB
  5860                           
  5861                           
  5862                           ; 1 bytes @ 0xB
  5863  002B                     	ds	1
  5864  002C                     ??_setMode:	
  5865  002C                     ??_setLightIntLowThreshold:	
  5866                           ; 1 bytes @ 0xC
  5867                           
  5868  002C                     ??_setLightIntHighThreshold:	
  5869                           ; 1 bytes @ 0xC
  5870                           
  5871  002C                     setLEDDrive@val:	
  5872                           ; 1 bytes @ 0xC
  5873                           
  5874  002C                     setProximityGain@val:	
  5875                           ; 1 bytes @ 0xC
  5876                           
  5877  002C                     setAmbientLightGain@val:	
  5878                           ; 1 bytes @ 0xC
  5879                           
  5880  002C                     setGestureGain@val:	
  5881                           ; 1 bytes @ 0xC
  5882                           
  5883  002C                     setGestureLEDDrive@val:	
  5884                           ; 1 bytes @ 0xC
  5885                           
  5886  002C                     setGestureWaitTime@val:	
  5887                           ; 1 bytes @ 0xC
  5888                           
  5889  002C                     setGestureIntEnable@enable:	
  5890                           ; 1 bytes @ 0xC
  5891                           
  5892  002C                     setLEDBoost@val:	
  5893                           ; 1 bytes @ 0xC
  5894                           
  5895  002C                     setGestureMode@val:	
  5896                           ; 1 bytes @ 0xC
  5897                           
  5898  002C                     ___awdiv@sign:	
  5899                           ; 1 bytes @ 0xC
  5900                           
  5901  002C                     _decodeGesture$1411:	
  5902                           ; 1 bytes @ 0xC
  5903                           
  5904                           
  5905                           ; 2 bytes @ 0xC
  5906  002C                     	ds	1
  5907  002D                     setLEDDrive@drive:	
  5908  002D                     setProximityGain@drive:	
  5909                           ; 1 bytes @ 0xD
  5910                           
  5911  002D                     setLightIntLowThreshold@val_low:	
  5912                           ; 1 bytes @ 0xD
  5913                           
  5914  002D                     setLightIntHighThreshold@val_low:	
  5915                           ; 1 bytes @ 0xD
  5916                           
  5917  002D                     setGestureGain@gain:	
  5918                           ; 1 bytes @ 0xD
  5919                           
  5920  002D                     setGestureLEDDrive@drive:	
  5921                           ; 1 bytes @ 0xD
  5922                           
  5923  002D                     setLEDBoost@boost:	
  5924                           ; 1 bytes @ 0xD
  5925                           
  5926  002D                     ___awdiv@quotient:	
  5927                           ; 1 bytes @ 0xD
  5928                           
  5929                           
  5930                           ; 2 bytes @ 0xD
  5931  002D                     	ds	1
  5932  002E                     setMode@reg_val:	
  5933  002E                     setLightIntLowThreshold@val_high:	
  5934                           ; 1 bytes @ 0xE
  5935                           
  5936  002E                     setLightIntHighThreshold@val_high:	
  5937                           ; 1 bytes @ 0xE
  5938                           
  5939  002E                     _decodeGesture$1412:	
  5940                           ; 1 bytes @ 0xE
  5941                           
  5942                           
  5943                           ; 2 bytes @ 0xE
  5944  002E                     	ds	1
  5945  002F                     ??_processGestureData:	
  5946  002F                     setMode@mode:	
  5947                           ; 1 bytes @ 0xF
  5948                           
  5949  002F                     wireReadDataBlock@reg:	
  5950                           ; 1 bytes @ 0xF
  5951                           
  5952                           
  5953                           ; 1 bytes @ 0xF
  5954  002F                     	ds	1
  5955  0030                     ??_initialize:	
  5956  0030                     ??_enableGestureSensor:	
  5957                           ; 1 bytes @ 0x10
  5958                           
  5959  0030                     ??_enablePower:	
  5960                           ; 1 bytes @ 0x10
  5961                           
  5962  0030                     wireReadDataBlock@j:	
  5963                           ; 1 bytes @ 0x10
  5964                           
  5965  0030                     _decodeGesture$1413:	
  5966                           ; 1 bytes @ 0x10
  5967                           
  5968                           
  5969                           ; 2 bytes @ 0x10
  5970  0030                     	ds	1
  5971  0031                     initialize@id:	
  5972  0031                     enableGestureSensor@interrupts:	
  5973                           ; 1 bytes @ 0x11
  5974                           
  5975  0031                     processGestureData@ud_ratio_first:	
  5976                           ; 1 bytes @ 0x11
  5977                           
  5978                           
  5979                           ; 2 bytes @ 0x11
  5980  0031                     	ds	2
  5981  0033                     processGestureData@lr_ratio_first:	
  5982                           
  5983                           ; 2 bytes @ 0x13
  5984  0033                     	ds	2
  5985  0035                     processGestureData@ud_ratio_last:	
  5986                           
  5987                           ; 2 bytes @ 0x15
  5988  0035                     	ds	2
  5989  0037                     processGestureData@lr_ratio_last:	
  5990                           
  5991                           ; 2 bytes @ 0x17
  5992  0037                     	ds	2
  5993  0039                     _processGestureData$1401:	
  5994                           
  5995                           ; 2 bytes @ 0x19
  5996  0039                     	ds	2
  5997  003B                     _processGestureData$1402:	
  5998                           
  5999                           ; 2 bytes @ 0x1B
  6000  003B                     	ds	2
  6001  003D                     _processGestureData$1403:	
  6002                           
  6003                           ; 2 bytes @ 0x1D
  6004  003D                     	ds	2
  6005  003F                     _processGestureData$1404:	
  6006                           
  6007                           ; 2 bytes @ 0x1F
  6008  003F                     	ds	2
  6009  0041                     processGestureData@u_last:	
  6010                           
  6011                           ; 1 bytes @ 0x21
  6012  0041                     	ds	1
  6013  0042                     processGestureData@d_last:	
  6014                           
  6015                           ; 1 bytes @ 0x22
  6016  0042                     	ds	1
  6017  0043                     processGestureData@l_last:	
  6018                           
  6019                           ; 1 bytes @ 0x23
  6020  0043                     	ds	1
  6021  0044                     processGestureData@r_last:	
  6022                           
  6023                           ; 1 bytes @ 0x24
  6024  0044                     	ds	1
  6025  0045                     processGestureData@u_first:	
  6026                           
  6027                           ; 1 bytes @ 0x25
  6028  0045                     	ds	1
  6029  0046                     processGestureData@d_first:	
  6030                           
  6031                           ; 1 bytes @ 0x26
  6032  0046                     	ds	1
  6033  0047                     processGestureData@l_first:	
  6034                           
  6035                           ; 1 bytes @ 0x27
  6036  0047                     	ds	1
  6037  0048                     processGestureData@r_first:	
  6038                           
  6039                           ; 1 bytes @ 0x28
  6040  0048                     	ds	1
  6041  0049                     processGestureData@ud_delta:	
  6042                           
  6043                           ; 2 bytes @ 0x29
  6044  0049                     	ds	2
  6045  004B                     processGestureData@lr_delta:	
  6046                           
  6047                           ; 2 bytes @ 0x2B
  6048  004B                     	ds	2
  6049  004D                     processGestureData@i:	
  6050                           
  6051                           ; 2 bytes @ 0x2D
  6052  004D                     	ds	2
  6053  004F                     ?_readGesture:	
  6054                           
  6055                           ; 2 bytes @ 0x2F
  6056  004F                     	ds	2
  6057  0051                     ??_readGesture:	
  6058                           
  6059                           ; 1 bytes @ 0x31
  6060  0051                     	ds	2
  6061  0053                     readGesture@motion:	
  6062                           
  6063                           ; 2 bytes @ 0x33
  6064  0053                     	ds	2
  6065  0055                     readGesture@gstatus:	
  6066                           
  6067                           ; 1 bytes @ 0x35
  6068  0055                     	ds	1
  6069  0056                     readGesture@bytes_read:	
  6070                           
  6071                           ; 2 bytes @ 0x36
  6072  0056                     	ds	2
  6073  0058                     readGesture@fifo_level:	
  6074                           
  6075                           ; 1 bytes @ 0x38
  6076  0058                     	ds	1
  6077  0059                     readGesture@i:	
  6078                           
  6079                           ; 2 bytes @ 0x39
  6080  0059                     	ds	2
  6081  005B                     ??_handleGesture:	
  6082                           
  6083                           ; 1 bytes @ 0x3B
  6084  005B                     	ds	1
  6085  005C                     ??_main:	
  6086                           
  6087                           	psect	maintext
  6088  0D59                     __pmaintext:	
  6089                           ; 1 bytes @ 0x3C
  6090 ;;
  6091 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6092 ;;
  6093 ;; *************** function _main *****************
  6094 ;; Defined at:
  6095 ;;		line 105 in file "main.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  count           2    0        unsigned int 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : B1F/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;Total ram usage:        2 bytes
  6114 ;; Hardware stack levels required when called:   12
  6115 ;; This function calls:
  6116 ;;		_Display_Name
  6117 ;;		_SYSTEM_Initialize
  6118 ;;		_enableGestureSensor
  6119 ;;		_handleGesture
  6120 ;;		_initialize
  6121 ;;		_isGestureAvailable
  6122 ;; This function is called by:
  6123 ;;		Startup code after reset
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _main
  6129  0D59                     _main:	
  6130                           
  6131                           ;main.c: 108:     SYSTEM_Initialize();
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6135  0D59  318B  2312  318D   	fcall	_SYSTEM_Initialize
  6136                           
  6137                           ;main.c: 114:     (INTCONbits.GIE = 1);
  6138  0D5C  178B               	bsf	11,7	;volatile
  6139                           
  6140                           ;main.c: 117:     (INTCONbits.PEIE = 1);
  6141  0D5D  170B               	bsf	11,6	;volatile
  6142                           
  6143                           ;main.c: 123:     if(initialize()){
  6144  0D5E  3184  24C4  318D   	fcall	_initialize
  6145                           
  6146                           ;main.c: 126:     if(enableGestureSensor(0)){
  6147  0D61  3000               	movlw	0
  6148  0D62  3187  2736  318D   	fcall	_enableGestureSensor
  6149                           
  6150                           ;main.c: 128:     Display_Name("reset");
  6151  0D65  3054               	movlw	low (STR_5| (0+32768))
  6152  0D66  0020               	movlb	0	; select bank0
  6153  0D67  00A5               	movwf	Display_Name@string1
  6154  0D68  3090               	movlw	high (STR_5| (0+32768))
  6155  0D69  00A6               	movwf	Display_Name@string1+1
  6156  0D6A  318E  2691  318D   	fcall	_Display_Name
  6157  0D6D                     l6943:	
  6158                           
  6159                           ;main.c: 131:     {;main.c: 133:         if(start == 1) {
  6160  0D6D  0020               	movlb	0	; select bank0
  6161  0D6E  036F               	decf	_start,w
  6162  0D6F  1D03               	btfss	3,2
  6163  0D70  2D7F               	goto	l6949
  6164                           
  6165                           ;main.c: 134:             Display_Name(names[name]);
  6166  0D71  355C               	lslf	_name,w
  6167  0D72  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  6168  0D73  0086               	movwf	6
  6169  0D74  3001               	movlw	1	; select bank2/3
  6170  0D75  0087               	movwf	7
  6171  0D76  3F40               	moviw [0]fsr1
  6172  0D77  00A5               	movwf	Display_Name@string1
  6173  0D78  3F41               	moviw [1]fsr1
  6174  0D79  00A6               	movwf	Display_Name@string1+1
  6175  0D7A  318E  2691  318D   	fcall	_Display_Name
  6176                           
  6177                           ;main.c: 135:             start = 0;
  6178  0D7D  0020               	movlb	0	; select bank0
  6179  0D7E  01EF               	clrf	_start
  6180  0D7F                     l6949:	
  6181                           
  6182                           ;main.c: 137:         if(isGestureAvailable()){
  6183  0D7F  318A  22B1  318D   	fcall	_isGestureAvailable
  6184  0D82  3A00               	xorlw	0
  6185  0D83  1903               	skipnz
  6186  0D84  2D6D               	goto	l6943
  6187                           
  6188                           ;main.c: 138:             handleGesture();
  6189  0D85  3186  26CD  318D   	fcall	_handleGesture
  6190  0D88  2D6D               	goto	l6943
  6191  0D89                     __end_of_main:	
  6192                           
  6193                           	psect	text1
  6194  04C4                     __ptext1:	
  6195 ;; *************** function _initialize *****************
  6196 ;; Defined at:
  6197 ;;		line 20 in file "APDS9960.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  id              1   17[BANK0 ] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      _Bool 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0, pclath, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;Total ram usage:        2 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:   10
  6218 ;; This function calls:
  6219 ;;		_i2c1_driver_open
  6220 ;;		_setAmbientLightGain
  6221 ;;		_setGestureEnterThresh
  6222 ;;		_setGestureExitThresh
  6223 ;;		_setGestureGain
  6224 ;;		_setGestureIntEnable
  6225 ;;		_setGestureLEDDrive
  6226 ;;		_setGestureWaitTime
  6227 ;;		_setLEDDrive
  6228 ;;		_setLightIntHighThreshold
  6229 ;;		_setLightIntLowThreshold
  6230 ;;		_setMode
  6231 ;;		_setProxIntHighThresh
  6232 ;;		_setProxIntLowThresh
  6233 ;;		_setProximityGain
  6234 ;;		_wireReadDataByte
  6235 ;;		_wireWriteDataByte
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _initialize
  6243  04C4                     _initialize:	
  6244                           
  6245                           ;APDS9960.c: 25:     i2c1_driver_open();
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  6249  04C4  318A  2266  3184   	fcall	_i2c1_driver_open
  6250                           
  6251                           ;APDS9960.c: 31:     id = wireReadDataByte(0x92);
  6252  04C7  3092               	movlw	146
  6253  04C8  318B  23CB  3184   	fcall	_wireReadDataByte
  6254  04CB  0020               	movlb	0	; select bank0
  6255  04CC  00B0               	movwf	??_initialize
  6256  04CD  0830               	movf	??_initialize,w
  6257  04CE  00B1               	movwf	initialize@id
  6258                           
  6259                           ;APDS9960.c: 33:     if( !(id == 0xAB ||id == 0x9C ) )
  6260  04CF  30AB               	movlw	171
  6261  04D0  0631               	xorwf	initialize@id,w
  6262  04D1  1903               	btfsc	3,2
  6263  04D2  2CD9               	goto	l6631
  6264  04D3  309C               	movlw	156
  6265  04D4  0631               	xorwf	initialize@id,w
  6266  04D5  1903               	btfsc	3,2
  6267  04D6  2CD9               	goto	l6631
  6268  04D7                     l6627:	
  6269                           
  6270                           ;APDS9960.c: 34:     {;APDS9960.c: 35:      return 0;
  6271  04D7  3000               	movlw	0
  6272  04D8  0008               	return
  6273  04D9                     l6631:	
  6274                           
  6275                           ;APDS9960.c: 39:     setMode(7, 0);
  6276  04D9  01AB               	clrf	setMode@enable
  6277  04DA  3007               	movlw	7
  6278  04DB  318F  27B1  3184   	fcall	_setMode
  6279                           
  6280                           ;APDS9960.c: 41:     wireWriteDataByte(0x81, 219);
  6281  04DE  30DB               	movlw	219
  6282  04DF  0020               	movlb	0	; select bank0
  6283  04E0  00B0               	movwf	??_initialize
  6284  04E1  0830               	movf	??_initialize,w
  6285  04E2  00A6               	movwf	wireWriteDataByte@val
  6286  04E3  3081               	movlw	129
  6287  04E4  318B  235A  3184   	fcall	_wireWriteDataByte
  6288                           
  6289                           ;APDS9960.c: 42:     wireWriteDataByte(0x83, 246);
  6290  04E7  30F6               	movlw	246
  6291  04E8  0020               	movlb	0	; select bank0
  6292  04E9  00B0               	movwf	??_initialize
  6293  04EA  0830               	movf	??_initialize,w
  6294  04EB  00A6               	movwf	wireWriteDataByte@val
  6295  04EC  3083               	movlw	131
  6296  04ED  318B  235A  3184   	fcall	_wireWriteDataByte
  6297                           
  6298                           ;APDS9960.c: 43:     wireWriteDataByte(0x8E, 0x87);
  6299  04F0  3087               	movlw	135
  6300  04F1  0020               	movlb	0	; select bank0
  6301  04F2  00B0               	movwf	??_initialize
  6302  04F3  0830               	movf	??_initialize,w
  6303  04F4  00A6               	movwf	wireWriteDataByte@val
  6304  04F5  308E               	movlw	142
  6305  04F6  318B  235A  3184   	fcall	_wireWriteDataByte
  6306                           
  6307                           ;APDS9960.c: 44:     wireWriteDataByte(0x9D, 0) ;
  6308  04F9  0020               	movlb	0	; select bank0
  6309  04FA  01A6               	clrf	wireWriteDataByte@val
  6310  04FB  309D               	movlw	157
  6311  04FC  318B  235A  3184   	fcall	_wireWriteDataByte
  6312                           
  6313                           ;APDS9960.c: 45:     wireWriteDataByte(0x9E, 0) ;
  6314  04FF  0020               	movlb	0	; select bank0
  6315  0500  01A6               	clrf	wireWriteDataByte@val
  6316  0501  309E               	movlw	158
  6317  0502  318B  235A  3184   	fcall	_wireWriteDataByte
  6318                           
  6319                           ;APDS9960.c: 46:     wireWriteDataByte(0x8D, 0x60) ;
  6320  0505  3060               	movlw	96
  6321  0506  0020               	movlb	0	; select bank0
  6322  0507  00B0               	movwf	??_initialize
  6323  0508  0830               	movf	??_initialize,w
  6324  0509  00A6               	movwf	wireWriteDataByte@val
  6325  050A  308D               	movlw	141
  6326  050B  318B  235A  3184   	fcall	_wireWriteDataByte
  6327                           
  6328                           ;APDS9960.c: 47:     setLEDDrive(0);
  6329  050E  3000               	movlw	0
  6330  050F  318C  24B1  3184   	fcall	_setLEDDrive
  6331                           
  6332                           ;APDS9960.c: 48:     setProximityGain(2);
  6333  0512  3002               	movlw	2
  6334  0513  318C  24DA  3184   	fcall	_setProximityGain
  6335                           
  6336                           ;APDS9960.c: 49:     setAmbientLightGain(1);
  6337  0516  3001               	movlw	1
  6338  0517  318B  23AD  3184   	fcall	_setAmbientLightGain
  6339                           
  6340                           ;APDS9960.c: 51:     if( !setProxIntLowThresh(0) ) {
  6341  051A  3000               	movlw	0
  6342  051B  3187  27EC  3184   	fcall	_setProxIntLowThresh
  6343  051E  3A00               	xorlw	0
  6344  051F  1903               	btfsc	3,2
  6345  0520  2CD7               	goto	l6627
  6346                           
  6347                           ;APDS9960.c: 54:     if( !setProxIntHighThresh(50) ) {
  6348  0521  3032               	movlw	50
  6349  0522  318A  22EA  3184   	fcall	_setProxIntHighThresh
  6350  0525  3A00               	xorlw	0
  6351  0526  1903               	btfsc	3,2
  6352  0527  2CD7               	goto	l6627
  6353                           
  6354                           ;APDS9960.c: 59:     if( !setLightIntLowThreshold(0xFFFF) ) {
  6355  0528  30FF               	movlw	255
  6356  0529  0020               	movlb	0	; select bank0
  6357  052A  00AA               	movwf	setLightIntLowThreshold@threshold
  6358  052B  30FF               	movlw	255
  6359  052C  00AB               	movwf	setLightIntLowThreshold@threshold+1
  6360  052D  318C  248A  3184   	fcall	_setLightIntLowThreshold
  6361  0530  3A00               	xorlw	0
  6362  0531  1903               	btfsc	3,2
  6363  0532  2CD7               	goto	l6627
  6364                           
  6365                           ;APDS9960.c: 62:     if( !setLightIntHighThreshold(0) ) {
  6366  0533  3000               	movlw	0
  6367  0534  0020               	movlb	0	; select bank0
  6368  0535  00AA               	movwf	setLightIntHighThreshold@threshold
  6369  0536  00AB               	movwf	setLightIntHighThreshold@threshold+1
  6370  0537  318C  2463  3184   	fcall	_setLightIntHighThreshold
  6371  053A  3A00               	xorlw	0
  6372  053B  1903               	btfsc	3,2
  6373  053C  2CD7               	goto	l6627
  6374                           
  6375                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  6376  053D  3011               	movlw	17
  6377  053E  0020               	movlb	0	; select bank0
  6378  053F  00B0               	movwf	??_initialize
  6379  0540  0830               	movf	??_initialize,w
  6380  0541  00A6               	movwf	wireWriteDataByte@val
  6381  0542  308C               	movlw	140
  6382  0543  318B  235A  3184   	fcall	_wireWriteDataByte
  6383  0546  0020               	movlb	0	; select bank0
  6384  0547  0826               	movf	?_wireWriteDataByte,w
  6385  0548  0427               	iorwf	?_wireWriteDataByte+1,w
  6386  0549  1903               	btfsc	3,2
  6387  054A  2CD7               	goto	l6627
  6388                           
  6389                           ;APDS9960.c: 71:     if( !wireWriteDataByte(0x90, 0x01) ) {
  6390  054B  01A6               	clrf	wireWriteDataByte@val
  6391  054C  0AA6               	incf	wireWriteDataByte@val,f
  6392  054D  3090               	movlw	144
  6393  054E  318B  235A  3184   	fcall	_wireWriteDataByte
  6394  0551  0020               	movlb	0	; select bank0
  6395  0552  0826               	movf	?_wireWriteDataByte,w
  6396  0553  0427               	iorwf	?_wireWriteDataByte+1,w
  6397  0554  1903               	btfsc	3,2
  6398  0555  2CD7               	goto	l6627
  6399                           
  6400                           ;APDS9960.c: 74:     if( !wireWriteDataByte(0x9F, 0) ) {
  6401  0556  01A6               	clrf	wireWriteDataByte@val
  6402  0557  309F               	movlw	159
  6403  0558  318B  235A  3184   	fcall	_wireWriteDataByte
  6404  055B  0020               	movlb	0	; select bank0
  6405  055C  0826               	movf	?_wireWriteDataByte,w
  6406  055D  0427               	iorwf	?_wireWriteDataByte+1,w
  6407  055E  1903               	btfsc	3,2
  6408  055F  2CD7               	goto	l6627
  6409                           
  6410                           ;APDS9960.c: 78:     if( !setGestureEnterThresh(40) ) {
  6411  0560  3028               	movlw	40
  6412  0561  318A  22C4  3184   	fcall	_setGestureEnterThresh
  6413  0564  3A00               	xorlw	0
  6414  0565  1903               	btfsc	3,2
  6415  0566  2CD7               	goto	l6627
  6416                           
  6417                           ;APDS9960.c: 82:     if( !setGestureExitThresh(30) ) {
  6418  0567  301E               	movlw	30
  6419  0568  318A  22D7  3184   	fcall	_setGestureExitThresh
  6420  056B  3A00               	xorlw	0
  6421  056C  1903               	btfsc	3,2
  6422  056D  2CD7               	goto	l6627
  6423                           
  6424                           ;APDS9960.c: 85:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  6425  056E  3040               	movlw	64
  6426  056F  0020               	movlb	0	; select bank0
  6427  0570  00B0               	movwf	??_initialize
  6428  0571  0830               	movf	??_initialize,w
  6429  0572  00A6               	movwf	wireWriteDataByte@val
  6430  0573  30A2               	movlw	162
  6431  0574  318B  235A  3184   	fcall	_wireWriteDataByte
  6432  0577  0020               	movlb	0	; select bank0
  6433  0578  0826               	movf	?_wireWriteDataByte,w
  6434  0579  0427               	iorwf	?_wireWriteDataByte+1,w
  6435  057A  1903               	btfsc	3,2
  6436  057B  2CD7               	goto	l6627
  6437                           
  6438                           ;APDS9960.c: 88:     if( !setGestureGain(2) ) {
  6439  057C  3002               	movlw	2
  6440  057D  318D  25EC  3184   	fcall	_setGestureGain
  6441  0580  3A00               	xorlw	0
  6442  0581  1903               	btfsc	3,2
  6443  0582  2CD7               	goto	l6627
  6444                           
  6445                           ;APDS9960.c: 91:     if( !setGestureLEDDrive(0) ) {
  6446  0583  3000               	movlw	0
  6447  0584  318E  261E  3184   	fcall	_setGestureLEDDrive
  6448  0587  3A00               	xorlw	0
  6449  0588  1903               	btfsc	3,2
  6450  0589  2CD7               	goto	l6627
  6451                           
  6452                           ;APDS9960.c: 95:     if( !setGestureWaitTime(1) ) {
  6453  058A  3001               	movlw	1
  6454  058B  318C  243C  3184   	fcall	_setGestureWaitTime
  6455  058E  3A00               	xorlw	0
  6456  058F  1903               	btfsc	3,2
  6457  0590  2CD7               	goto	l6627
  6458                           
  6459                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA4, 0) ) {
  6460  0591  0020               	movlb	0	; select bank0
  6461  0592  01A6               	clrf	wireWriteDataByte@val
  6462  0593  30A4               	movlw	164
  6463  0594  318B  235A  3184   	fcall	_wireWriteDataByte
  6464  0597  0020               	movlb	0	; select bank0
  6465  0598  0826               	movf	?_wireWriteDataByte,w
  6466  0599  0427               	iorwf	?_wireWriteDataByte+1,w
  6467  059A  1903               	btfsc	3,2
  6468  059B  2CD7               	goto	l6627
  6469                           
  6470                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA5, 0) ) {
  6471  059C  01A6               	clrf	wireWriteDataByte@val
  6472  059D  30A5               	movlw	165
  6473  059E  318B  235A  3184   	fcall	_wireWriteDataByte
  6474  05A1  0020               	movlb	0	; select bank0
  6475  05A2  0826               	movf	?_wireWriteDataByte,w
  6476  05A3  0427               	iorwf	?_wireWriteDataByte+1,w
  6477  05A4  1903               	btfsc	3,2
  6478  05A5  2CD7               	goto	l6627
  6479                           
  6480                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA7, 0) ) {
  6481  05A6  01A6               	clrf	wireWriteDataByte@val
  6482  05A7  30A7               	movlw	167
  6483  05A8  318B  235A  3184   	fcall	_wireWriteDataByte
  6484  05AB  0020               	movlb	0	; select bank0
  6485  05AC  0826               	movf	?_wireWriteDataByte,w
  6486  05AD  0427               	iorwf	?_wireWriteDataByte+1,w
  6487  05AE  1903               	btfsc	3,2
  6488  05AF  2CD7               	goto	l6627
  6489                           
  6490                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xA9, 0) ) {
  6491  05B0  01A6               	clrf	wireWriteDataByte@val
  6492  05B1  30A9               	movlw	169
  6493  05B2  318B  235A  3184   	fcall	_wireWriteDataByte
  6494  05B5  0020               	movlb	0	; select bank0
  6495  05B6  0826               	movf	?_wireWriteDataByte,w
  6496  05B7  0427               	iorwf	?_wireWriteDataByte+1,w
  6497  05B8  1903               	btfsc	3,2
  6498  05B9  2CD7               	goto	l6627
  6499                           
  6500                           ;APDS9960.c: 110:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  6501  05BA  30C9               	movlw	201
  6502  05BB  00B0               	movwf	??_initialize
  6503  05BC  0830               	movf	??_initialize,w
  6504  05BD  00A6               	movwf	wireWriteDataByte@val
  6505  05BE  30A6               	movlw	166
  6506  05BF  318B  235A  3184   	fcall	_wireWriteDataByte
  6507  05C2  0020               	movlb	0	; select bank0
  6508  05C3  0826               	movf	?_wireWriteDataByte,w
  6509  05C4  0427               	iorwf	?_wireWriteDataByte+1,w
  6510  05C5  1903               	btfsc	3,2
  6511  05C6  2CD7               	goto	l6627
  6512                           
  6513                           ;APDS9960.c: 113:     if( !wireWriteDataByte(0xAA, 0) ) {
  6514  05C7  01A6               	clrf	wireWriteDataByte@val
  6515  05C8  30AA               	movlw	170
  6516  05C9  318B  235A  3184   	fcall	_wireWriteDataByte
  6517  05CC  0020               	movlb	0	; select bank0
  6518  05CD  0826               	movf	?_wireWriteDataByte,w
  6519  05CE  0427               	iorwf	?_wireWriteDataByte+1,w
  6520  05CF  1903               	btfsc	3,2
  6521  05D0  2CD7               	goto	l6627
  6522                           
  6523                           ;APDS9960.c: 116:     if( !setGestureIntEnable(0) ) {
  6524  05D1  3000               	movlw	0
  6525  05D2  318D  252E  3184   	fcall	_setGestureIntEnable
  6526  05D5  3A00               	xorlw	0
  6527  05D6  1903               	btfsc	3,2
  6528  05D7  2CD7               	goto	l6627
  6529                           
  6530                           ;APDS9960.c: 120:     return 1;
  6531  05D8  3001               	movlw	1
  6532  05D9  0008               	return
  6533  05DA                     __end_of_initialize:	
  6534                           
  6535                           	psect	text2
  6536  0CDA                     __ptext2:	
  6537 ;; *************** function _setProximityGain *****************
  6538 ;; Defined at:
  6539 ;;		line 192 in file "APDS9960.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  drive           1    wreg     unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  drive           1   13[BANK0 ] unsigned char 
  6544 ;;  val             1   12[BANK0 ] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      _Bool 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0, pclath, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;Total ram usage:        4 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    8
  6561 ;; This function calls:
  6562 ;;		_wireReadDataByte
  6563 ;;		_wireWriteDataByte
  6564 ;; This function is called by:
  6565 ;;		_initialize
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function _setProximityGain
  6571  0CDA                     _setProximityGain:	
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  6575                           ;setProximityGain@drive stored from wreg
  6576  0CDA  0020               	movlb	0	; select bank0
  6577  0CDB  00AD               	movwf	setProximityGain@drive
  6578                           
  6579                           ;APDS9960.c: 192: _Bool setProximityGain(uint8_t drive);APDS9960.c: 193: {;APDS9960.c: 1
      +                          94:     uint8_t val;;APDS9960.c: 197:     val=wireReadDataByte(0x8F);
  6580  0CDC  308F               	movlw	143
  6581  0CDD  318B  23CB  318C   	fcall	_wireReadDataByte
  6582  0CE0  0020               	movlb	0	; select bank0
  6583  0CE1  00AA               	movwf	??_setProximityGain
  6584  0CE2  082A               	movf	??_setProximityGain,w
  6585  0CE3  00AC               	movwf	setProximityGain@val
  6586                           
  6587                           ;APDS9960.c: 199:     drive &= 0b00000011;
  6588  0CE4  3003               	movlw	3
  6589  0CE5  00AA               	movwf	??_setProximityGain
  6590  0CE6  082A               	movf	??_setProximityGain,w
  6591  0CE7  05AD               	andwf	setProximityGain@drive,f
  6592                           
  6593                           ;APDS9960.c: 200:     drive = drive << 2;
  6594  0CE8  082D               	movf	setProximityGain@drive,w
  6595  0CE9  00AA               	movwf	??_setProximityGain
  6596  0CEA  3001               	movlw	1
  6597  0CEB                     u5275:	
  6598  0CEB  35AA               	lslf	??_setProximityGain,f
  6599  0CEC  3EFF               	addlw	-1
  6600  0CED  1D03               	skipz
  6601  0CEE  2CEB               	goto	u5275
  6602  0CEF  352A               	lslf	??_setProximityGain,w
  6603  0CF0  00AB               	movwf	??_setProximityGain+1
  6604  0CF1  082B               	movf	??_setProximityGain+1,w
  6605  0CF2  00AD               	movwf	setProximityGain@drive
  6606                           
  6607                           ;APDS9960.c: 201:     val &= 0b11110011;
  6608  0CF3  30F3               	movlw	243
  6609  0CF4  00AA               	movwf	??_setProximityGain
  6610  0CF5  082A               	movf	??_setProximityGain,w
  6611  0CF6  05AC               	andwf	setProximityGain@val,f
  6612                           
  6613                           ;APDS9960.c: 202:     val |= drive;
  6614  0CF7  082D               	movf	setProximityGain@drive,w
  6615  0CF8  00AA               	movwf	??_setProximityGain
  6616  0CF9  082A               	movf	??_setProximityGain,w
  6617  0CFA  04AC               	iorwf	setProximityGain@val,f
  6618                           
  6619                           ;APDS9960.c: 205:     if( !wireWriteDataByte(0x8F, val) ) {
  6620  0CFB  082C               	movf	setProximityGain@val,w
  6621  0CFC  00AA               	movwf	??_setProximityGain
  6622  0CFD  082A               	movf	??_setProximityGain,w
  6623  0CFE  00A6               	movwf	wireWriteDataByte@val
  6624  0CFF  308F               	movlw	143
  6625  0D00  318B  235A         	fcall	_wireWriteDataByte
  6626  0D02  0008               	return
  6627  0D03                     __end_of_setProximityGain:	
  6628                           
  6629                           	psect	text3
  6630  07EC                     __ptext3:	
  6631 ;; *************** function _setProxIntLowThresh *****************
  6632 ;; Defined at:
  6633 ;;		line 234 in file "APDS9960.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  threshold       1    wreg     unsigned char 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  threshold       1   11[BANK0 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      _Bool 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:        2 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    8
  6654 ;; This function calls:
  6655 ;;		_wireWriteDataByte
  6656 ;; This function is called by:
  6657 ;;		_initialize
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _setProxIntLowThresh
  6663  07EC                     _setProxIntLowThresh:	
  6664                           
  6665                           ;incstack = 0
  6666                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  6667                           ;setProxIntLowThresh@threshold stored from wreg
  6668  07EC  0020               	movlb	0	; select bank0
  6669  07ED  00AB               	movwf	setProxIntLowThresh@threshold
  6670                           
  6671                           ;APDS9960.c: 234: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 235: {;APDS99
      +                          60.c: 236:     if( !wireWriteDataByte(0x89, threshold) ) {
  6672  07EE  082B               	movf	setProxIntLowThresh@threshold,w
  6673  07EF  00AA               	movwf	??_setProxIntLowThresh
  6674  07F0  082A               	movf	??_setProxIntLowThresh,w
  6675  07F1  00A6               	movwf	wireWriteDataByte@val
  6676  07F2  3089               	movlw	137
  6677  07F3  318B  235A  3187   	fcall	_wireWriteDataByte
  6678  07F6  0020               	movlb	0	; select bank0
  6679  07F7  0826               	movf	?_wireWriteDataByte,w
  6680  07F8  0427               	iorwf	?_wireWriteDataByte+1,w
  6681  07F9  1D03               	btfss	3,2
  6682  07FA  2FFD               	goto	l6389
  6683                           
  6684                           ;APDS9960.c: 237:         return 0;
  6685  07FB  3000               	movlw	0
  6686  07FC  0008               	return
  6687  07FD                     l6389:	
  6688                           
  6689                           ;APDS9960.c: 240:     return 1;
  6690  07FD  3001               	movlw	1
  6691  07FE  0008               	return
  6692  07FF                     __end_of_setProxIntLowThresh:	
  6693                           
  6694                           	psect	text4
  6695  0AEA                     __ptext4:	
  6696 ;; *************** function _setProxIntHighThresh *****************
  6697 ;; Defined at:
  6698 ;;		line 244 in file "APDS9960.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  threshold       1    wreg     unsigned char 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;  threshold       1   11[BANK0 ] unsigned char 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      _Bool 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0, pclath, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;Total ram usage:        2 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    8
  6719 ;; This function calls:
  6720 ;;		_wireWriteDataByte
  6721 ;; This function is called by:
  6722 ;;		_initialize
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           
  6727                           ;psect for function _setProxIntHighThresh
  6728  0AEA                     _setProxIntHighThresh:	
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  6732                           ;setProxIntHighThresh@threshold stored from wreg
  6733  0AEA  0020               	movlb	0	; select bank0
  6734  0AEB  00AB               	movwf	setProxIntHighThresh@threshold
  6735                           
  6736                           ;APDS9960.c: 244: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 245: {;APDS9
      +                          960.c: 246:     if( !wireWriteDataByte(0x8B, threshold) ) {
  6737  0AEC  082B               	movf	setProxIntHighThresh@threshold,w
  6738  0AED  00AA               	movwf	??_setProxIntHighThresh
  6739  0AEE  082A               	movf	??_setProxIntHighThresh,w
  6740  0AEF  00A6               	movwf	wireWriteDataByte@val
  6741  0AF0  308B               	movlw	139
  6742  0AF1  318B  235A  318A   	fcall	_wireWriteDataByte
  6743  0AF4  0020               	movlb	0	; select bank0
  6744  0AF5  0826               	movf	?_wireWriteDataByte,w
  6745  0AF6  0427               	iorwf	?_wireWriteDataByte+1,w
  6746  0AF7  1D03               	btfss	3,2
  6747  0AF8  2AFB               	goto	l6399
  6748                           
  6749                           ;APDS9960.c: 247:         return 0;
  6750  0AF9  3000               	movlw	0
  6751  0AFA  0008               	return
  6752  0AFB                     l6399:	
  6753                           
  6754                           ;APDS9960.c: 250:     return 1;
  6755  0AFB  3001               	movlw	1
  6756  0AFC  0008               	return
  6757  0AFD                     __end_of_setProxIntHighThresh:	
  6758                           
  6759                           	psect	text5
  6760  0C8A                     __ptext5:	
  6761 ;; *************** function _setLightIntLowThreshold *****************
  6762 ;; Defined at:
  6763 ;;		line 254 in file "APDS9960.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  threshold       2   10[BANK0 ] unsigned short 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  val_high        1   14[BANK0 ] unsigned char 
  6768 ;;  val_low         1   13[BANK0 ] unsigned char 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      _Bool 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;Total ram usage:        5 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    8
  6785 ;; This function calls:
  6786 ;;		_wireWriteDataByte
  6787 ;; This function is called by:
  6788 ;;		_initialize
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           
  6793                           ;psect for function _setLightIntLowThreshold
  6794  0C8A                     _setLightIntLowThreshold:	
  6795                           
  6796                           ;APDS9960.c: 254: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 255: {;A
      +                          PDS9960.c: 256:     uint8_t val_low;;APDS9960.c: 257:     uint8_t val_high;;APDS9960.c: 
      +                          260:     val_low = threshold & 0x00FF;
  6797                           
  6798                           ;incstack = 0
  6799                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  6800  0C8A  0020               	movlb	0	; select bank0
  6801  0C8B  082A               	movf	setLightIntLowThreshold@threshold,w
  6802  0C8C  00AC               	movwf	??_setLightIntLowThreshold
  6803  0C8D  082C               	movf	??_setLightIntLowThreshold,w
  6804  0C8E  00AD               	movwf	setLightIntLowThreshold@val_low
  6805                           
  6806                           ;APDS9960.c: 261:     val_high = (threshold & 0xFF00) >> 8;
  6807  0C8F  082B               	movf	setLightIntLowThreshold@threshold+1,w
  6808  0C90  00AC               	movwf	??_setLightIntLowThreshold
  6809  0C91  082C               	movf	??_setLightIntLowThreshold,w
  6810  0C92  00AE               	movwf	setLightIntLowThreshold@val_high
  6811                           
  6812                           ;APDS9960.c: 264:     if( !wireWriteDataByte(0x84, val_low) ) {
  6813  0C93  082D               	movf	setLightIntLowThreshold@val_low,w
  6814  0C94  00AC               	movwf	??_setLightIntLowThreshold
  6815  0C95  082C               	movf	??_setLightIntLowThreshold,w
  6816  0C96  00A6               	movwf	wireWriteDataByte@val
  6817  0C97  3084               	movlw	132
  6818  0C98  318B  235A  318C   	fcall	_wireWriteDataByte
  6819  0C9B  0020               	movlb	0	; select bank0
  6820  0C9C  0826               	movf	?_wireWriteDataByte,w
  6821  0C9D  0427               	iorwf	?_wireWriteDataByte+1,w
  6822  0C9E  1D03               	btfss	3,2
  6823  0C9F  2CA2               	goto	l6413
  6824  0CA0                     l6409:	
  6825                           
  6826                           ;APDS9960.c: 265:         return 0;
  6827  0CA0  3000               	movlw	0
  6828  0CA1  0008               	return
  6829  0CA2                     l6413:	
  6830                           
  6831                           ;APDS9960.c: 269:     if( !wireWriteDataByte(0x85, val_high) ) {
  6832  0CA2  082E               	movf	setLightIntLowThreshold@val_high,w
  6833  0CA3  00AC               	movwf	??_setLightIntLowThreshold
  6834  0CA4  082C               	movf	??_setLightIntLowThreshold,w
  6835  0CA5  00A6               	movwf	wireWriteDataByte@val
  6836  0CA6  3085               	movlw	133
  6837  0CA7  318B  235A  318C   	fcall	_wireWriteDataByte
  6838  0CAA  0020               	movlb	0	; select bank0
  6839  0CAB  0826               	movf	?_wireWriteDataByte,w
  6840  0CAC  0427               	iorwf	?_wireWriteDataByte+1,w
  6841  0CAD  1903               	btfsc	3,2
  6842  0CAE  2CA0               	goto	l6409
  6843                           
  6844                           ;APDS9960.c: 273:     return 1;
  6845  0CAF  3001               	movlw	1
  6846  0CB0  0008               	return
  6847  0CB1                     __end_of_setLightIntLowThreshold:	
  6848                           
  6849                           	psect	text6
  6850  0C63                     __ptext6:	
  6851 ;; *************** function _setLightIntHighThreshold *****************
  6852 ;; Defined at:
  6853 ;;		line 277 in file "APDS9960.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  threshold       2   10[BANK0 ] unsigned short 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  val_high        1   14[BANK0 ] unsigned char 
  6858 ;;  val_low         1   13[BANK0 ] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      _Bool 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0, pclath, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;Total ram usage:        5 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    8
  6875 ;; This function calls:
  6876 ;;		_wireWriteDataByte
  6877 ;; This function is called by:
  6878 ;;		_initialize
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           
  6883                           ;psect for function _setLightIntHighThreshold
  6884  0C63                     _setLightIntHighThreshold:	
  6885                           
  6886                           ;APDS9960.c: 277: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 278: {;
      +                          APDS9960.c: 279:     uint8_t val_low;;APDS9960.c: 280:     uint8_t val_high;;APDS9960.c:
      +                           283:     val_low = threshold & 0x00FF;
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  6890  0C63  0020               	movlb	0	; select bank0
  6891  0C64  082A               	movf	setLightIntHighThreshold@threshold,w
  6892  0C65  00AC               	movwf	??_setLightIntHighThreshold
  6893  0C66  082C               	movf	??_setLightIntHighThreshold,w
  6894  0C67  00AD               	movwf	setLightIntHighThreshold@val_low
  6895                           
  6896                           ;APDS9960.c: 284:     val_high = (threshold & 0xFF00) >> 8;
  6897  0C68  082B               	movf	setLightIntHighThreshold@threshold+1,w
  6898  0C69  00AC               	movwf	??_setLightIntHighThreshold
  6899  0C6A  082C               	movf	??_setLightIntHighThreshold,w
  6900  0C6B  00AE               	movwf	setLightIntHighThreshold@val_high
  6901                           
  6902                           ;APDS9960.c: 287:     if( !wireWriteDataByte(0x86, val_low) ) {
  6903  0C6C  082D               	movf	setLightIntHighThreshold@val_low,w
  6904  0C6D  00AC               	movwf	??_setLightIntHighThreshold
  6905  0C6E  082C               	movf	??_setLightIntHighThreshold,w
  6906  0C6F  00A6               	movwf	wireWriteDataByte@val
  6907  0C70  3086               	movlw	134
  6908  0C71  318B  235A  318C   	fcall	_wireWriteDataByte
  6909  0C74  0020               	movlb	0	; select bank0
  6910  0C75  0826               	movf	?_wireWriteDataByte,w
  6911  0C76  0427               	iorwf	?_wireWriteDataByte+1,w
  6912  0C77  1D03               	btfss	3,2
  6913  0C78  2C7B               	goto	l6433
  6914  0C79                     l6429:	
  6915                           
  6916                           ;APDS9960.c: 288:         return 0;
  6917  0C79  3000               	movlw	0
  6918  0C7A  0008               	return
  6919  0C7B                     l6433:	
  6920                           
  6921                           ;APDS9960.c: 292:     if( !wireWriteDataByte(0x87, val_high) ) {
  6922  0C7B  082E               	movf	setLightIntHighThreshold@val_high,w
  6923  0C7C  00AC               	movwf	??_setLightIntHighThreshold
  6924  0C7D  082C               	movf	??_setLightIntHighThreshold,w
  6925  0C7E  00A6               	movwf	wireWriteDataByte@val
  6926  0C7F  3087               	movlw	135
  6927  0C80  318B  235A  318C   	fcall	_wireWriteDataByte
  6928  0C83  0020               	movlb	0	; select bank0
  6929  0C84  0826               	movf	?_wireWriteDataByte,w
  6930  0C85  0427               	iorwf	?_wireWriteDataByte+1,w
  6931  0C86  1903               	btfsc	3,2
  6932  0C87  2C79               	goto	l6429
  6933                           
  6934                           ;APDS9960.c: 296:     return 1;
  6935  0C88  3001               	movlw	1
  6936  0C89  0008               	return
  6937  0C8A                     __end_of_setLightIntHighThreshold:	
  6938                           
  6939                           	psect	text7
  6940  0CB1                     __ptext7:	
  6941 ;; *************** function _setLEDDrive *****************
  6942 ;; Defined at:
  6943 ;;		line 170 in file "APDS9960.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  drive           1    wreg     unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  drive           1   13[BANK0 ] unsigned char 
  6948 ;;  val             1   12[BANK0 ] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      _Bool 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, pclath, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    8
  6965 ;; This function calls:
  6966 ;;		_wireReadDataByte
  6967 ;;		_wireWriteDataByte
  6968 ;; This function is called by:
  6969 ;;		_initialize
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _setLEDDrive
  6975  0CB1                     _setLEDDrive:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  6979                           ;setLEDDrive@drive stored from wreg
  6980  0CB1  0020               	movlb	0	; select bank0
  6981  0CB2  00AD               	movwf	setLEDDrive@drive
  6982                           
  6983                           ;APDS9960.c: 170: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 171: {;APDS9960.c: 172:  
      +                             uint8_t val;;APDS9960.c: 175:     val=wireReadDataByte(0x8F);
  6984  0CB3  308F               	movlw	143
  6985  0CB4  318B  23CB  318C   	fcall	_wireReadDataByte
  6986  0CB7  0020               	movlb	0	; select bank0
  6987  0CB8  00AA               	movwf	??_setLEDDrive
  6988  0CB9  082A               	movf	??_setLEDDrive,w
  6989  0CBA  00AC               	movwf	setLEDDrive@val
  6990                           
  6991                           ;APDS9960.c: 178:     drive &= 0b00000011;
  6992  0CBB  3003               	movlw	3
  6993  0CBC  00AA               	movwf	??_setLEDDrive
  6994  0CBD  082A               	movf	??_setLEDDrive,w
  6995  0CBE  05AD               	andwf	setLEDDrive@drive,f
  6996                           
  6997                           ;APDS9960.c: 179:     drive = drive << 6;
  6998  0CBF  082D               	movf	setLEDDrive@drive,w
  6999  0CC0  00AA               	movwf	??_setLEDDrive
  7000  0CC1  3005               	movlw	5
  7001  0CC2                     u5265:	
  7002  0CC2  35AA               	lslf	??_setLEDDrive,f
  7003  0CC3  3EFF               	addlw	-1
  7004  0CC4  1D03               	skipz
  7005  0CC5  2CC2               	goto	u5265
  7006  0CC6  352A               	lslf	??_setLEDDrive,w
  7007  0CC7  00AB               	movwf	??_setLEDDrive+1
  7008  0CC8  082B               	movf	??_setLEDDrive+1,w
  7009  0CC9  00AD               	movwf	setLEDDrive@drive
  7010                           
  7011                           ;APDS9960.c: 180:     val &= 0b00111111;
  7012  0CCA  303F               	movlw	63
  7013  0CCB  00AA               	movwf	??_setLEDDrive
  7014  0CCC  082A               	movf	??_setLEDDrive,w
  7015  0CCD  05AC               	andwf	setLEDDrive@val,f
  7016                           
  7017                           ;APDS9960.c: 181:     val |= drive;
  7018  0CCE  082D               	movf	setLEDDrive@drive,w
  7019  0CCF  00AA               	movwf	??_setLEDDrive
  7020  0CD0  082A               	movf	??_setLEDDrive,w
  7021  0CD1  04AC               	iorwf	setLEDDrive@val,f
  7022                           
  7023                           ;APDS9960.c: 184:     if( !wireWriteDataByte(0x8F, val) ) {
  7024  0CD2  082C               	movf	setLEDDrive@val,w
  7025  0CD3  00AA               	movwf	??_setLEDDrive
  7026  0CD4  082A               	movf	??_setLEDDrive,w
  7027  0CD5  00A6               	movwf	wireWriteDataByte@val
  7028  0CD6  308F               	movlw	143
  7029  0CD7  318B  235A         	fcall	_wireWriteDataByte
  7030  0CD9  0008               	return
  7031  0CDA                     __end_of_setLEDDrive:	
  7032                           
  7033                           	psect	text8
  7034  0C3C                     __ptext8:	
  7035 ;; *************** function _setGestureWaitTime *****************
  7036 ;; Defined at:
  7037 ;;		line 366 in file "APDS9960.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  time            1    wreg     unsigned char 
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;  time            1   11[BANK0 ] unsigned char 
  7042 ;;  val             1   12[BANK0 ] unsigned char 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      _Bool 
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, status,0, pclath, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;Total ram usage:        3 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    8
  7059 ;; This function calls:
  7060 ;;		_wireReadDataByte
  7061 ;;		_wireWriteDataByte
  7062 ;; This function is called by:
  7063 ;;		_initialize
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _setGestureWaitTime
  7069  0C3C                     _setGestureWaitTime:	
  7070                           
  7071                           ;incstack = 0
  7072                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  7073                           ;setGestureWaitTime@time stored from wreg
  7074  0C3C  0020               	movlb	0	; select bank0
  7075  0C3D  00AB               	movwf	setGestureWaitTime@time
  7076                           
  7077                           ;APDS9960.c: 366: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 367: {;APDS9960.c: 
      +                          368:     uint8_t val;;APDS9960.c: 371:     val = wireReadDataByte(0xA3);
  7078  0C3E  30A3               	movlw	163
  7079  0C3F  318B  23CB  318C   	fcall	_wireReadDataByte
  7080  0C42  0020               	movlb	0	; select bank0
  7081  0C43  00AA               	movwf	??_setGestureWaitTime
  7082  0C44  082A               	movf	??_setGestureWaitTime,w
  7083  0C45  00AC               	movwf	setGestureWaitTime@val
  7084                           
  7085                           ;APDS9960.c: 374:     time &= 0b00000111;
  7086  0C46  3007               	movlw	7
  7087  0C47  00AA               	movwf	??_setGestureWaitTime
  7088  0C48  082A               	movf	??_setGestureWaitTime,w
  7089  0C49  05AB               	andwf	setGestureWaitTime@time,f
  7090                           
  7091                           ;APDS9960.c: 375:     val &= 0b11111000;
  7092  0C4A  30F8               	movlw	248
  7093  0C4B  00AA               	movwf	??_setGestureWaitTime
  7094  0C4C  082A               	movf	??_setGestureWaitTime,w
  7095  0C4D  05AC               	andwf	setGestureWaitTime@val,f
  7096                           
  7097                           ;APDS9960.c: 376:     val |= time;
  7098  0C4E  082B               	movf	setGestureWaitTime@time,w
  7099  0C4F  00AA               	movwf	??_setGestureWaitTime
  7100  0C50  082A               	movf	??_setGestureWaitTime,w
  7101  0C51  04AC               	iorwf	setGestureWaitTime@val,f
  7102                           
  7103                           ;APDS9960.c: 379:     if( !wireWriteDataByte(0xA3, val) ) {
  7104  0C52  082C               	movf	setGestureWaitTime@val,w
  7105  0C53  00AA               	movwf	??_setGestureWaitTime
  7106  0C54  082A               	movf	??_setGestureWaitTime,w
  7107  0C55  00A6               	movwf	wireWriteDataByte@val
  7108  0C56  30A3               	movlw	163
  7109  0C57  318B  235A  318C   	fcall	_wireWriteDataByte
  7110  0C5A  0020               	movlb	0	; select bank0
  7111  0C5B  0826               	movf	?_wireWriteDataByte,w
  7112  0C5C  0427               	iorwf	?_wireWriteDataByte+1,w
  7113  0C5D  1D03               	btfss	3,2
  7114  0C5E  2C61               	goto	l6513
  7115                           
  7116                           ;APDS9960.c: 380:         return 0;
  7117  0C5F  3000               	movlw	0
  7118  0C60  0008               	return
  7119  0C61                     l6513:	
  7120                           
  7121                           ;APDS9960.c: 383:     return 1;
  7122  0C61  3001               	movlw	1
  7123  0C62  0008               	return
  7124  0C63                     __end_of_setGestureWaitTime:	
  7125                           
  7126                           	psect	text9
  7127  0E1E                     __ptext9:	
  7128 ;; *************** function _setGestureLEDDrive *****************
  7129 ;; Defined at:
  7130 ;;		line 343 in file "APDS9960.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  drive           1    wreg     unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  drive           1   13[BANK0 ] unsigned char 
  7135 ;;  val             1   12[BANK0 ] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      _Bool 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;Total ram usage:        4 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    8
  7152 ;; This function calls:
  7153 ;;		_wireReadDataByte
  7154 ;;		_wireWriteDataByte
  7155 ;; This function is called by:
  7156 ;;		_initialize
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function _setGestureLEDDrive
  7162  0E1E                     _setGestureLEDDrive:	
  7163                           
  7164                           ;incstack = 0
  7165                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  7166                           ;setGestureLEDDrive@drive stored from wreg
  7167  0E1E  0020               	movlb	0	; select bank0
  7168  0E1F  00AD               	movwf	setGestureLEDDrive@drive
  7169                           
  7170                           ;APDS9960.c: 343: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 344: {;APDS9960.c:
      +                           345:     uint8_t val;;APDS9960.c: 348:     val = wireReadDataByte(0xA3);
  7171  0E20  30A3               	movlw	163
  7172  0E21  318B  23CB  318E   	fcall	_wireReadDataByte
  7173  0E24  0020               	movlb	0	; select bank0
  7174  0E25  00AA               	movwf	??_setGestureLEDDrive
  7175  0E26  082A               	movf	??_setGestureLEDDrive,w
  7176  0E27  00AC               	movwf	setGestureLEDDrive@val
  7177                           
  7178                           ;APDS9960.c: 352:     drive &= 0b00000011;
  7179  0E28  3003               	movlw	3
  7180  0E29  00AA               	movwf	??_setGestureLEDDrive
  7181  0E2A  082A               	movf	??_setGestureLEDDrive,w
  7182  0E2B  05AD               	andwf	setGestureLEDDrive@drive,f
  7183                           
  7184                           ;APDS9960.c: 353:     drive = drive << 3;
  7185  0E2C  082D               	movf	setGestureLEDDrive@drive,w
  7186  0E2D  00AA               	movwf	??_setGestureLEDDrive
  7187  0E2E  3002               	movlw	2
  7188  0E2F                     u5385:	
  7189  0E2F  35AA               	lslf	??_setGestureLEDDrive,f
  7190  0E30  3EFF               	addlw	-1
  7191  0E31  1D03               	skipz
  7192  0E32  2E2F               	goto	u5385
  7193  0E33  352A               	lslf	??_setGestureLEDDrive,w
  7194  0E34  00AB               	movwf	??_setGestureLEDDrive+1
  7195  0E35  082B               	movf	??_setGestureLEDDrive+1,w
  7196  0E36  00AD               	movwf	setGestureLEDDrive@drive
  7197                           
  7198                           ;APDS9960.c: 354:     val &= 0b11100111;
  7199  0E37  30E7               	movlw	231
  7200  0E38  00AA               	movwf	??_setGestureLEDDrive
  7201  0E39  082A               	movf	??_setGestureLEDDrive,w
  7202  0E3A  05AC               	andwf	setGestureLEDDrive@val,f
  7203                           
  7204                           ;APDS9960.c: 355:     val |= drive;
  7205  0E3B  082D               	movf	setGestureLEDDrive@drive,w
  7206  0E3C  00AA               	movwf	??_setGestureLEDDrive
  7207  0E3D  082A               	movf	??_setGestureLEDDrive,w
  7208  0E3E  04AC               	iorwf	setGestureLEDDrive@val,f
  7209                           
  7210                           ;APDS9960.c: 358:     if( !wireWriteDataByte(0xA3, val) ) {
  7211  0E3F  082C               	movf	setGestureLEDDrive@val,w
  7212  0E40  00AA               	movwf	??_setGestureLEDDrive
  7213  0E41  082A               	movf	??_setGestureLEDDrive,w
  7214  0E42  00A6               	movwf	wireWriteDataByte@val
  7215  0E43  30A3               	movlw	163
  7216  0E44  318B  235A  318E   	fcall	_wireWriteDataByte
  7217  0E47  0020               	movlb	0	; select bank0
  7218  0E48  0826               	movf	?_wireWriteDataByte,w
  7219  0E49  0427               	iorwf	?_wireWriteDataByte+1,w
  7220  0E4A  1D03               	btfss	3,2
  7221  0E4B  2E4E               	goto	l6495
  7222                           
  7223                           ;APDS9960.c: 359:         return 0;
  7224  0E4C  3000               	movlw	0
  7225  0E4D  0008               	return
  7226  0E4E                     l6495:	
  7227                           
  7228                           ;APDS9960.c: 362:     return 1;
  7229  0E4E  3001               	movlw	1
  7230  0E4F  0008               	return
  7231  0E50                     __end_of_setGestureLEDDrive:	
  7232                           
  7233                           	psect	text10
  7234  0DEC                     __ptext10:	
  7235 ;; *************** function _setGestureGain *****************
  7236 ;; Defined at:
  7237 ;;		line 320 in file "APDS9960.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  gain            1    wreg     unsigned char 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  gain            1   13[BANK0 ] unsigned char 
  7242 ;;  val             1   12[BANK0 ] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      _Bool 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0, pclath, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;Total ram usage:        4 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:    8
  7259 ;; This function calls:
  7260 ;;		_wireReadDataByte
  7261 ;;		_wireWriteDataByte
  7262 ;; This function is called by:
  7263 ;;		_initialize
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function _setGestureGain
  7269  0DEC                     _setGestureGain:	
  7270                           
  7271                           ;incstack = 0
  7272                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  7273                           ;setGestureGain@gain stored from wreg
  7274  0DEC  0020               	movlb	0	; select bank0
  7275  0DED  00AD               	movwf	setGestureGain@gain
  7276                           
  7277                           ;APDS9960.c: 320: _Bool setGestureGain(uint8_t gain);APDS9960.c: 321: {;APDS9960.c: 322:
      +                               uint8_t val;;APDS9960.c: 325:     val = wireReadDataByte(0xA3);
  7278  0DEE  30A3               	movlw	163
  7279  0DEF  318B  23CB  318D   	fcall	_wireReadDataByte
  7280  0DF2  0020               	movlb	0	; select bank0
  7281  0DF3  00AA               	movwf	??_setGestureGain
  7282  0DF4  082A               	movf	??_setGestureGain,w
  7283  0DF5  00AC               	movwf	setGestureGain@val
  7284                           
  7285                           ;APDS9960.c: 329:     gain &= 0b00000011;
  7286  0DF6  3003               	movlw	3
  7287  0DF7  00AA               	movwf	??_setGestureGain
  7288  0DF8  082A               	movf	??_setGestureGain,w
  7289  0DF9  05AD               	andwf	setGestureGain@gain,f
  7290                           
  7291                           ;APDS9960.c: 330:     gain = gain << 5;
  7292  0DFA  082D               	movf	setGestureGain@gain,w
  7293  0DFB  00AA               	movwf	??_setGestureGain
  7294  0DFC  3004               	movlw	4
  7295  0DFD                     u5365:	
  7296  0DFD  35AA               	lslf	??_setGestureGain,f
  7297  0DFE  3EFF               	addlw	-1
  7298  0DFF  1D03               	skipz
  7299  0E00  2DFD               	goto	u5365
  7300  0E01  352A               	lslf	??_setGestureGain,w
  7301  0E02  00AB               	movwf	??_setGestureGain+1
  7302  0E03  082B               	movf	??_setGestureGain+1,w
  7303  0E04  00AD               	movwf	setGestureGain@gain
  7304                           
  7305                           ;APDS9960.c: 331:     val &= 0b10011111;
  7306  0E05  309F               	movlw	159
  7307  0E06  00AA               	movwf	??_setGestureGain
  7308  0E07  082A               	movf	??_setGestureGain,w
  7309  0E08  05AC               	andwf	setGestureGain@val,f
  7310                           
  7311                           ;APDS9960.c: 332:     val |= gain;
  7312  0E09  082D               	movf	setGestureGain@gain,w
  7313  0E0A  00AA               	movwf	??_setGestureGain
  7314  0E0B  082A               	movf	??_setGestureGain,w
  7315  0E0C  04AC               	iorwf	setGestureGain@val,f
  7316                           
  7317                           ;APDS9960.c: 335:     if( !wireWriteDataByte(0xA3, val) ) {
  7318  0E0D  082C               	movf	setGestureGain@val,w
  7319  0E0E  00AA               	movwf	??_setGestureGain
  7320  0E0F  082A               	movf	??_setGestureGain,w
  7321  0E10  00A6               	movwf	wireWriteDataByte@val
  7322  0E11  30A3               	movlw	163
  7323  0E12  318B  235A  318D   	fcall	_wireWriteDataByte
  7324  0E15  0020               	movlb	0	; select bank0
  7325  0E16  0826               	movf	?_wireWriteDataByte,w
  7326  0E17  0427               	iorwf	?_wireWriteDataByte+1,w
  7327  0E18  1D03               	btfss	3,2
  7328  0E19  2E1C               	goto	l6477
  7329                           
  7330                           ;APDS9960.c: 336:         return 0;
  7331  0E1A  3000               	movlw	0
  7332  0E1B  0008               	return
  7333  0E1C                     l6477:	
  7334                           
  7335                           ;APDS9960.c: 339:     return 1;
  7336  0E1C  3001               	movlw	1
  7337  0E1D  0008               	return
  7338  0E1E                     __end_of_setGestureGain:	
  7339                           
  7340                           	psect	text11
  7341  0AD7                     __ptext11:	
  7342 ;; *************** function _setGestureExitThresh *****************
  7343 ;; Defined at:
  7344 ;;		line 310 in file "APDS9960.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  threshold       1    wreg     unsigned char 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  threshold       1   11[BANK0 ] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      _Bool 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, pclath, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    8
  7365 ;; This function calls:
  7366 ;;		_wireWriteDataByte
  7367 ;; This function is called by:
  7368 ;;		_initialize
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function _setGestureExitThresh
  7374  0AD7                     _setGestureExitThresh:	
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  7378                           ;setGestureExitThresh@threshold stored from wreg
  7379  0AD7  0020               	movlb	0	; select bank0
  7380  0AD8  00AB               	movwf	setGestureExitThresh@threshold
  7381                           
  7382                           ;APDS9960.c: 310: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 311: {;APDS9
      +                          960.c: 312:     if( !wireWriteDataByte(0xA1, threshold) ) {
  7383  0AD9  082B               	movf	setGestureExitThresh@threshold,w
  7384  0ADA  00AA               	movwf	??_setGestureExitThresh
  7385  0ADB  082A               	movf	??_setGestureExitThresh,w
  7386  0ADC  00A6               	movwf	wireWriteDataByte@val
  7387  0ADD  30A1               	movlw	161
  7388  0ADE  318B  235A  318A   	fcall	_wireWriteDataByte
  7389  0AE1  0020               	movlb	0	; select bank0
  7390  0AE2  0826               	movf	?_wireWriteDataByte,w
  7391  0AE3  0427               	iorwf	?_wireWriteDataByte+1,w
  7392  0AE4  1D03               	btfss	3,2
  7393  0AE5  2AE8               	goto	l6459
  7394                           
  7395                           ;APDS9960.c: 313:         return 0;
  7396  0AE6  3000               	movlw	0
  7397  0AE7  0008               	return
  7398  0AE8                     l6459:	
  7399                           
  7400                           ;APDS9960.c: 316:     return 1;
  7401  0AE8  3001               	movlw	1
  7402  0AE9  0008               	return
  7403  0AEA                     __end_of_setGestureExitThresh:	
  7404                           
  7405                           	psect	text12
  7406  0AC4                     __ptext12:	
  7407 ;; *************** function _setGestureEnterThresh *****************
  7408 ;; Defined at:
  7409 ;;		line 300 in file "APDS9960.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  threshold       1    wreg     unsigned char 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  threshold       1   11[BANK0 ] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      _Bool 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, pclath, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        2 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    8
  7430 ;; This function calls:
  7431 ;;		_wireWriteDataByte
  7432 ;; This function is called by:
  7433 ;;		_initialize
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           
  7438                           ;psect for function _setGestureEnterThresh
  7439  0AC4                     _setGestureEnterThresh:	
  7440                           
  7441                           ;incstack = 0
  7442                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  7443                           ;setGestureEnterThresh@threshold stored from wreg
  7444  0AC4  0020               	movlb	0	; select bank0
  7445  0AC5  00AB               	movwf	setGestureEnterThresh@threshold
  7446                           
  7447                           ;APDS9960.c: 300: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 301: {;APDS
      +                          9960.c: 302:     if( !wireWriteDataByte(0xA0, threshold) ) {
  7448  0AC6  082B               	movf	setGestureEnterThresh@threshold,w
  7449  0AC7  00AA               	movwf	??_setGestureEnterThresh
  7450  0AC8  082A               	movf	??_setGestureEnterThresh,w
  7451  0AC9  00A6               	movwf	wireWriteDataByte@val
  7452  0ACA  30A0               	movlw	160
  7453  0ACB  318B  235A  318A   	fcall	_wireWriteDataByte
  7454  0ACE  0020               	movlb	0	; select bank0
  7455  0ACF  0826               	movf	?_wireWriteDataByte,w
  7456  0AD0  0427               	iorwf	?_wireWriteDataByte+1,w
  7457  0AD1  1D03               	btfss	3,2
  7458  0AD2  2AD5               	goto	l6449
  7459                           
  7460                           ;APDS9960.c: 303:         return 0;
  7461  0AD3  3000               	movlw	0
  7462  0AD4  0008               	return
  7463  0AD5                     l6449:	
  7464                           
  7465                           ;APDS9960.c: 306:     return 1;
  7466  0AD5  3001               	movlw	1
  7467  0AD6  0008               	return
  7468  0AD7                     __end_of_setGestureEnterThresh:	
  7469                           
  7470                           	psect	text13
  7471  0BAD                     __ptext13:	
  7472 ;; *************** function _setAmbientLightGain *****************
  7473 ;; Defined at:
  7474 ;;		line 213 in file "APDS9960.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  drive           1    wreg     unsigned char 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  drive           1   11[BANK0 ] unsigned char 
  7479 ;;  val             1   12[BANK0 ] unsigned char 
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  1    wreg      _Bool 
  7482 ;; Registers used:
  7483 ;;		wreg, status,2, status,0, pclath, cstack
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;Total ram usage:        3 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; Hardware stack levels required when called:    8
  7496 ;; This function calls:
  7497 ;;		_wireReadDataByte
  7498 ;;		_wireWriteDataByte
  7499 ;; This function is called by:
  7500 ;;		_initialize
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           
  7505                           ;psect for function _setAmbientLightGain
  7506  0BAD                     _setAmbientLightGain:	
  7507                           
  7508                           ;incstack = 0
  7509                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  7510                           ;setAmbientLightGain@drive stored from wreg
  7511  0BAD  0020               	movlb	0	; select bank0
  7512  0BAE  00AB               	movwf	setAmbientLightGain@drive
  7513                           
  7514                           ;APDS9960.c: 213: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 214: {;APDS9960.c
      +                          : 215:     uint8_t val;;APDS9960.c: 218:     val= wireReadDataByte(0x8F);
  7515  0BAF  308F               	movlw	143
  7516  0BB0  318B  23CB  318B   	fcall	_wireReadDataByte
  7517  0BB3  0020               	movlb	0	; select bank0
  7518  0BB4  00AA               	movwf	??_setAmbientLightGain
  7519  0BB5  082A               	movf	??_setAmbientLightGain,w
  7520  0BB6  00AC               	movwf	setAmbientLightGain@val
  7521                           
  7522                           ;APDS9960.c: 221:     drive &= 0b00000011;
  7523  0BB7  3003               	movlw	3
  7524  0BB8  00AA               	movwf	??_setAmbientLightGain
  7525  0BB9  082A               	movf	??_setAmbientLightGain,w
  7526  0BBA  05AB               	andwf	setAmbientLightGain@drive,f
  7527                           
  7528                           ;APDS9960.c: 222:     val &= 0b11111100;
  7529  0BBB  30FC               	movlw	252
  7530  0BBC  00AA               	movwf	??_setAmbientLightGain
  7531  0BBD  082A               	movf	??_setAmbientLightGain,w
  7532  0BBE  05AC               	andwf	setAmbientLightGain@val,f
  7533                           
  7534                           ;APDS9960.c: 223:     val |= drive;
  7535  0BBF  082B               	movf	setAmbientLightGain@drive,w
  7536  0BC0  00AA               	movwf	??_setAmbientLightGain
  7537  0BC1  082A               	movf	??_setAmbientLightGain,w
  7538  0BC2  04AC               	iorwf	setAmbientLightGain@val,f
  7539                           
  7540                           ;APDS9960.c: 226:     if( !wireWriteDataByte(0x8F, val) ) {
  7541  0BC3  082C               	movf	setAmbientLightGain@val,w
  7542  0BC4  00AA               	movwf	??_setAmbientLightGain
  7543  0BC5  082A               	movf	??_setAmbientLightGain,w
  7544  0BC6  00A6               	movwf	wireWriteDataByte@val
  7545  0BC7  308F               	movlw	143
  7546  0BC8  318B  235A         	fcall	_wireWriteDataByte
  7547  0BCA  0008               	return
  7548  0BCB                     __end_of_setAmbientLightGain:	
  7549                           
  7550                           	psect	text14
  7551  0A66                     __ptext14:	
  7552 ;; *************** function _i2c1_driver_open *****************
  7553 ;; Defined at:
  7554 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;		None               void
  7561 ;; Registers used:
  7562 ;;		wreg, status,2
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    5
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_initialize
  7579 ;;		_i2c_open
  7580 ;;		_InitI2C
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function _i2c1_driver_open
  7586  0A66                     _i2c1_driver_open:	
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7590  0A66  0024               	movlb	4	; select bank4
  7591  0A67  1A95               	btfsc	21,5	;volatile
  7592  0A68  0008               	return
  7593  0A69  0194               	clrf	20	;volatile
  7594  0A6A  3028               	movlw	40
  7595  0A6B  0095               	movwf	21	;volatile
  7596  0A6C  0196               	clrf	22	;volatile
  7597  0A6D  3003               	movlw	3
  7598  0A6E  0092               	movwf	18	;volatile
  7599  0A6F  0008               	return
  7600  0A70                     __end_of_i2c1_driver_open:	
  7601                           
  7602                           	psect	text15
  7603  06CD                     __ptext15:	
  7604 ;; *************** function _handleGesture *****************
  7605 ;; Defined at:
  7606 ;;		line 146 in file "main.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;Total ram usage:        1 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:   10
  7627 ;; This function calls:
  7628 ;;		_Display_Name
  7629 ;;		_PWM_Output_Disable
  7630 ;;		_PWM_Output_Enable
  7631 ;;		_readGesture
  7632 ;; This function is called by:
  7633 ;;		_main
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function _handleGesture
  7639  06CD                     _handleGesture:	
  7640                           
  7641                           ;main.c: 148:     PWM_Output_Enable();
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _handleGesture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7645  06CD  3189  21D4  3186   	fcall	_PWM_Output_Enable
  7646                           
  7647                           ;main.c: 149:     _delay((unsigned long)((200)*(500000/4000.0)));
  7648  06D0  3021               	movlw	33
  7649  06D1  0020               	movlb	0	; select bank0
  7650  06D2  00DB               	movwf	??_handleGesture
  7651  06D3  3076               	movlw	118
  7652  06D4                     u5957:	
  7653  06D4  0B89               	decfsz	9,f
  7654  06D5  2ED4               	goto	u5957
  7655  06D6  0BDB               	decfsz	??_handleGesture,f
  7656  06D7  2ED4               	goto	u5957
  7657  06D8  0000               	nop
  7658                           
  7659                           ;main.c: 150:     PWM_Output_Disable();
  7660  06D9  3189  21A5  3186   	fcall	_PWM_Output_Disable
  7661                           
  7662                           ;main.c: 152:     switch(readGesture()){
  7663  06DC  2F16               	goto	l6849
  7664  06DD                     l6827:	
  7665                           
  7666                           ;main.c: 160:             printed = 0;
  7667  06DD  01EE               	clrf	_printed
  7668                           
  7669                           ;main.c: 163:             name++;
  7670  06DE  3001               	movlw	1
  7671  06DF  07DC               	addwf	_name,f
  7672  06E0  3000               	movlw	0
  7673  06E1  3DDD               	addwfc	_name+1,f
  7674                           
  7675                           ;main.c: 164:             if(name > 3) {
  7676  06E2  085D               	movf	_name+1,w
  7677  06E3  3A80               	xorlw	128
  7678  06E4  00DB               	movwf	??_handleGesture
  7679  06E5  3080               	movlw	128
  7680  06E6  025B               	subwf	??_handleGesture,w
  7681  06E7  1D03               	skipz
  7682  06E8  2EEB               	goto	u5825
  7683  06E9  3004               	movlw	4
  7684  06EA  025C               	subwf	_name,w
  7685  06EB                     u5825:	
  7686  06EB  1C03               	skipc
  7687  06EC  2EF0               	goto	l6835
  7688                           
  7689                           ;main.c: 165:                 name = 0;
  7690  06ED  0020               	movlb	0	; select bank0
  7691  06EE  01DC               	clrf	_name
  7692  06EF  01DD               	clrf	_name+1
  7693  06F0                     l6835:	
  7694                           
  7695                           ;main.c: 167:             Display_Name(names[name]);
  7696  06F0  0020               	movlb	0	; select bank0
  7697  06F1  355C               	lslf	_name,w
  7698  06F2  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  7699  06F3  0086               	movwf	6
  7700  06F4  3001               	movlw	1	; select bank2/3
  7701  06F5  0087               	movwf	7
  7702  06F6  3F40               	moviw [0]fsr1
  7703  06F7  00A5               	movwf	Display_Name@string1
  7704  06F8  3F41               	moviw [1]fsr1
  7705  06F9  00A6               	movwf	Display_Name@string1+1
  7706  06FA  318E  2691  3186   	fcall	_Display_Name
  7707                           
  7708                           ;main.c: 176:             break;
  7709  06FD  2F33               	goto	l6851
  7710  06FE                     l6837:	
  7711                           
  7712                           ;main.c: 178:             printed = 0;
  7713  06FE  01EE               	clrf	_printed
  7714                           
  7715                           ;main.c: 179:             --name;
  7716  06FF  30FF               	movlw	255
  7717  0700  07DC               	addwf	_name,f
  7718  0701  30FF               	movlw	255
  7719  0702  3DDD               	addwfc	_name+1,f
  7720                           
  7721                           ;main.c: 180:             if(name < 0) {
  7722  0703  1FDD               	btfss	_name+1,7
  7723  0704  2F09               	goto	l6845
  7724                           
  7725                           ;main.c: 181:                 name = 3;
  7726  0705  3003               	movlw	3
  7727  0706  00DC               	movwf	_name
  7728  0707  3000               	movlw	0
  7729  0708  00DD               	movwf	_name+1
  7730  0709                     l6845:	
  7731                           
  7732                           ;main.c: 183:             Display_Name(names[name]);
  7733  0709  355C               	lslf	_name,w
  7734  070A  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  7735  070B  0086               	movwf	6
  7736  070C  3001               	movlw	1	; select bank2/3
  7737  070D  0087               	movwf	7
  7738  070E  3F40               	moviw [0]fsr1
  7739  070F  00A5               	movwf	Display_Name@string1
  7740  0710  3F41               	moviw [1]fsr1
  7741  0711  00A6               	movwf	Display_Name@string1+1
  7742  0712  318E  2691  3186   	fcall	_Display_Name
  7743                           
  7744                           ;main.c: 192:             break;
  7745  0715  2F33               	goto	l6851
  7746  0716                     l6849:	
  7747  0716  3185  25DA  3186   	fcall	_readGesture
  7748                           
  7749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7750                           ; Switch size 1, requested type "simple"
  7751                           ; Number of cases is 1, Range of values is 0 to 0
  7752                           ; switch strategies available:
  7753                           ; Name         Instructions Cycles
  7754                           ; simple_byte            4     3 (average)
  7755                           ; direct_byte            8     6 (fixed)
  7756                           ; jumptable            260     6 (fixed)
  7757                           ;	Chosen strategy is simple_byte
  7758  0719  0020               	movlb	0	; select bank0
  7759  071A  0850               	movf	?_readGesture+1,w
  7760  071B  3A00               	xorlw	0	; case 0
  7761  071C  1903               	skipnz
  7762  071D  2F1F               	goto	l7131
  7763  071E  2F33               	goto	l6851
  7764  071F                     l7131:	
  7765                           
  7766                           ; Switch size 1, requested type "simple"
  7767                           ; Number of cases is 6, Range of values is 1 to 6
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte           19    10 (average)
  7771                           ; direct_byte           21     9 (fixed)
  7772                           ; jumptable            263     9 (fixed)
  7773                           ;	Chosen strategy is simple_byte
  7774  071F  084F               	movf	?_readGesture,w
  7775  0720  3A01               	xorlw	1	; case 1
  7776  0721  1903               	skipnz
  7777  0722  2EDD               	goto	l6827
  7778  0723  3A03               	xorlw	3	; case 2
  7779  0724  1903               	skipnz
  7780  0725  2EFE               	goto	l6837
  7781  0726  3A01               	xorlw	1	; case 3
  7782  0727  1903               	skipnz
  7783  0728  2F33               	goto	l6851
  7784  0729  3A07               	xorlw	7	; case 4
  7785  072A  1903               	skipnz
  7786  072B  2F33               	goto	l6851
  7787  072C  3A01               	xorlw	1	; case 5
  7788  072D  1903               	skipnz
  7789  072E  2F33               	goto	l6851
  7790  072F  3A03               	xorlw	3	; case 6
  7791  0730  1903               	skipnz
  7792  0731  2F33               	goto	l6851
  7793  0732  2F33               	goto	l6851
  7794  0733                     l6851:	
  7795                           
  7796                           ;main.c: 203:     printed = 0;
  7797  0733  0020               	movlb	0	; select bank0
  7798  0734  01EE               	clrf	_printed
  7799  0735  0008               	return
  7800  0736                     __end_of_handleGesture:	
  7801                           
  7802                           	psect	text16
  7803  05DA                     __ptext16:	
  7804 ;; *************** function _readGesture *****************
  7805 ;; Defined at:
  7806 ;;		line 556 in file "APDS9960.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  fifo_data      64    0[BANK2 ] unsigned char [64]
  7811 ;;  fifo_data2     64    0[BANK1 ] unsigned char [64]
  7812 ;;  i               2   57[BANK0 ] int 
  7813 ;;  bytes_read      2   54[BANK0 ] int 
  7814 ;;  motion          2   51[BANK0 ] int 
  7815 ;;  fifo_level      1   56[BANK0 ] unsigned char 
  7816 ;;  gstatus         1   53[BANK0 ] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  2   47[BANK0 ] int 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Locals:         0       8      64      64       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Totals:         0      12      64      64       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;Total ram usage:      140 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    9
  7833 ;; This function calls:
  7834 ;;		_decodeGesture
  7835 ;;		_getMode
  7836 ;;		_isGestureAvailable
  7837 ;;		_processGestureData
  7838 ;;		_resetGestureParameters
  7839 ;;		_wireReadDataBlock
  7840 ;;		_wireReadDataByte
  7841 ;; This function is called by:
  7842 ;;		_handleGesture
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           
  7847                           ;psect for function _readGesture
  7848  05DA                     _readGesture:	
  7849                           
  7850                           ;APDS9960.c: 559:     int bytes_read = 0;
  7851                           
  7852                           ;incstack = 0
  7853                           ; Regs used in _readGesture: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7854  05DA  0020               	movlb	0	; select bank0
  7855  05DB  01D6               	clrf	readGesture@bytes_read
  7856  05DC  01D7               	clrf	readGesture@bytes_read+1
  7857                           
  7858                           ;APDS9960.c: 560:     uint8_t fifo_data[64];;APDS9960.c: 561:     uint8_t fifo_data2[64]
      +                          ;;APDS9960.c: 562:     uint8_t gstatus;;APDS9960.c: 563:     int motion;;APDS9960.c: 564
      +                          :     int i;;APDS9960.c: 567:     if( !isGestureAvailable() || !(getMode() & 0b01000001)
      +                           ) {
  7859  05DD  318A  22B1  3185   	fcall	_isGestureAvailable
  7860  05E0  3A00               	xorlw	0
  7861  05E1  1903               	skipnz
  7862  05E2  2DE9               	goto	l6291
  7863  05E3  318A  225D  3185   	fcall	_getMode
  7864  05E6  3941               	andlw	65
  7865  05E7  1D03               	btfss	3,2
  7866  05E8  2E9E               	goto	l6295
  7867  05E9                     l6291:	
  7868                           
  7869                           ;APDS9960.c: 568:         return DIR_NONE;
  7870  05E9  0020               	movlb	0	; select bank0
  7871  05EA  01CF               	clrf	?_readGesture
  7872  05EB  01D0               	clrf	?_readGesture+1
  7873  05EC  0008               	return
  7874  05ED                     l6301:	
  7875                           ;APDS9960.c: 569:     }
  7876                           
  7877                           
  7878                           ;APDS9960.c: 584:         {;APDS9960.c: 586:          fifo_level= wireReadDataByte(0xAE)
      +                          ;
  7879  05ED  30AE               	movlw	174
  7880  05EE  318B  23CB  3185   	fcall	_wireReadDataByte
  7881  05F1  0020               	movlb	0	; select bank0
  7882  05F2  00D1               	movwf	??_readGesture
  7883  05F3  0851               	movf	??_readGesture,w
  7884  05F4  00D8               	movwf	readGesture@fifo_level
  7885                           
  7886                           ;APDS9960.c: 590:             if( fifo_level > 0) {
  7887  05F5  0858               	movf	readGesture@fifo_level,w
  7888  05F6  1903               	btfsc	3,2
  7889  05F7  2E9E               	goto	l6295
  7890                           
  7891                           ;APDS9960.c: 592:               if(fifo_level < 17)
  7892  05F8  3011               	movlw	17
  7893  05F9  0258               	subwf	readGesture@fifo_level,w
  7894  05FA  1803               	skipnc
  7895  05FB  2E00               	goto	l6309
  7896                           
  7897                           ;APDS9960.c: 593:               {;APDS9960.c: 594:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  7898  05FC  3020               	movlw	low readGesture@fifo_data
  7899  05FD  00A6               	movwf	wireReadDataBlock@val
  7900  05FE  3001               	movlw	high readGesture@fifo_data
  7901  05FF  2E03               	goto	L1
  7902  0600                     l6309:	
  7903                           ;APDS9960.c: 597:               } else
  7904                           
  7905                           
  7906                           ;APDS9960.c: 598:               {;APDS9960.c: 599:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  7907  0600  30A0               	movlw	low readGesture@fifo_data2
  7908  0601  00A6               	movwf	wireReadDataBlock@val
  7909  0602  3000               	movlw	high readGesture@fifo_data2
  7910  0603                     L1:	
  7911  0603  00A7               	movwf	wireReadDataBlock@val+1
  7912  0604  0858               	movf	readGesture@fifo_level,w
  7913  0605  00D1               	movwf	??_readGesture
  7914  0606  01D2               	clrf	??_readGesture+1
  7915  0607  35D1               	lslf	??_readGesture,f
  7916  0608  0DD2               	rlf	??_readGesture+1,f
  7917  0609  35D1               	lslf	??_readGesture,f
  7918  060A  0DD2               	rlf	??_readGesture+1,f
  7919  060B  0851               	movf	??_readGesture,w
  7920  060C  00A8               	movwf	wireReadDataBlock@len
  7921  060D  0852               	movf	??_readGesture+1,w
  7922  060E  00A9               	movwf	wireReadDataBlock@len+1
  7923  060F  30FC               	movlw	252
  7924  0610  318F  2718  3185   	fcall	_wireReadDataBlock
  7925  0613  0020               	movlb	0	; select bank0
  7926  0614  0827               	movf	?_wireReadDataBlock+1,w
  7927  0615  00D7               	movwf	readGesture@bytes_read+1
  7928  0616  0826               	movf	?_wireReadDataBlock,w
  7929  0617  00D6               	movwf	readGesture@bytes_read
  7930                           
  7931                           ;APDS9960.c: 605:                 if( bytes_read == -1 )
  7932  0618  0A56               	incf	readGesture@bytes_read,w
  7933  0619  1D03               	skipz
  7934  061A  2E23               	goto	l6317
  7935  061B  0A57               	incf	readGesture@bytes_read+1,w
  7936  061C  1D03               	btfss	3,2
  7937  061D  2E23               	goto	l6317
  7938                           
  7939                           ;APDS9960.c: 606:                 {;APDS9960.c: 607:                     return 0xFF;
  7940  061E  30FF               	movlw	255
  7941  061F  00CF               	movwf	?_readGesture
  7942  0620  3000               	movlw	0
  7943  0621  00D0               	movwf	?_readGesture+1
  7944  0622  0008               	return
  7945  0623                     l6317:	
  7946                           
  7947                           ;APDS9960.c: 612:                 if( bytes_read >= 4 )
  7948  0623  0857               	movf	readGesture@bytes_read+1,w
  7949  0624  3A80               	xorlw	128
  7950  0625  00D1               	movwf	??_readGesture
  7951  0626  3080               	movlw	128
  7952  0627  0251               	subwf	??_readGesture,w
  7953  0628  1D03               	skipz
  7954  0629  2E2C               	goto	u5235
  7955  062A  3004               	movlw	4
  7956  062B  0256               	subwf	readGesture@bytes_read,w
  7957  062C                     u5235:	
  7958  062C  1C03               	skipc
  7959  062D  2E9E               	goto	l6295
  7960                           
  7961                           ;APDS9960.c: 613:                 {;APDS9960.c: 615:                     for( i = 0; i <
      +                           bytes_read; i += 4 ) {
  7962  062E  0020               	movlb	0	; select bank0
  7963  062F  01D9               	clrf	readGesture@i
  7964  0630  01DA               	clrf	readGesture@i+1
  7965  0631                     l6329:	
  7966  0631  085A               	movf	readGesture@i+1,w
  7967  0632  3A80               	xorlw	128
  7968  0633  00D1               	movwf	??_readGesture
  7969  0634  0857               	movf	readGesture@bytes_read+1,w
  7970  0635  3A80               	xorlw	128
  7971  0636  0251               	subwf	??_readGesture,w
  7972  0637  1D03               	skipz
  7973  0638  2E3B               	goto	u5245
  7974  0639  0856               	movf	readGesture@bytes_read,w
  7975  063A  0259               	subwf	readGesture@i,w
  7976  063B                     u5245:	
  7977  063B  1803               	btfsc	3,0
  7978  063C  2E92               	goto	l6331
  7979                           
  7980                           ;APDS9960.c: 616:                         gesture_data_.u_data[gesture_data_.index] = fi
      +                          fo_data[i + 0];
  7981  063D  0020               	movlb	0	; select bank0
  7982  063E  0859               	movf	readGesture@i,w
  7983  063F  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7984  0640  0086               	movwf	6
  7985  0641  3001               	movlw	1	; select bank2/3
  7986  0642  0087               	movwf	7
  7987  0643  0801               	movf	1,w
  7988  0644  00D1               	movwf	??_readGesture
  7989  0645  0024               	movlb	4	; select bank4
  7990  0646  0860               	movf	(_gesture_data_^(0+512)+64),w
  7991  0647  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7992  0648  0086               	movwf	6
  7993  0649  3002               	movlw	2	; select bank4/5
  7994  064A  0087               	movwf	7
  7995  064B  0020               	movlb	0	; select bank0
  7996  064C  0851               	movf	??_readGesture,w
  7997  064D  0081               	movwf	1
  7998                           
  7999                           ;APDS9960.c: 618:                         gesture_data_.d_data[gesture_data_.index] = fi
      +                          fo_data[i + 1];
  8000  064E  0859               	movf	readGesture@i,w
  8001  064F  3E01               	addlw	1
  8002  0650  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8003  0651  0086               	movwf	6
  8004  0652  3001               	movlw	1	; select bank2/3
  8005  0653  0087               	movwf	7
  8006  0654  0801               	movf	1,w
  8007  0655  00D1               	movwf	??_readGesture
  8008  0656  0024               	movlb	4	; select bank4
  8009  0657  0860               	movf	(_gesture_data_^(0+512)+64),w
  8010  0658  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8011  0659  0086               	movwf	6
  8012  065A  3002               	movlw	2	; select bank4/5
  8013  065B  0087               	movwf	7
  8014  065C  0020               	movlb	0	; select bank0
  8015  065D  0851               	movf	??_readGesture,w
  8016  065E  0081               	movwf	1
  8017                           
  8018                           ;APDS9960.c: 620:                         gesture_data_.l_data[gesture_data_.index] = fi
      +                          fo_data[i + 2];
  8019  065F  0859               	movf	readGesture@i,w
  8020  0660  3E02               	addlw	2
  8021  0661  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8022  0662  0086               	movwf	6
  8023  0663  3001               	movlw	1	; select bank2/3
  8024  0664  0087               	movwf	7
  8025  0665  0801               	movf	1,w
  8026  0666  00D1               	movwf	??_readGesture
  8027  0667  0024               	movlb	4	; select bank4
  8028  0668  0860               	movf	(_gesture_data_^(0+512)+64),w
  8029  0669  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8030  066A  0086               	movwf	6
  8031  066B  3002               	movlw	2	; select bank4/5
  8032  066C  0087               	movwf	7
  8033  066D  0020               	movlb	0	; select bank0
  8034  066E  0851               	movf	??_readGesture,w
  8035  066F  0081               	movwf	1
  8036                           
  8037                           ;APDS9960.c: 622:                         gesture_data_.r_data[gesture_data_.index] = fi
      +                          fo_data[i + 3];
  8038  0670  0859               	movf	readGesture@i,w
  8039  0671  3E03               	addlw	3
  8040  0672  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8041  0673  0086               	movwf	6
  8042  0674  3001               	movlw	1	; select bank2/3
  8043  0675  0087               	movwf	7
  8044  0676  0801               	movf	1,w
  8045  0677  00D1               	movwf	??_readGesture
  8046  0678  0024               	movlb	4	; select bank4
  8047  0679  0860               	movf	(_gesture_data_^(0+512)+64),w
  8048  067A  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8049  067B  0086               	movwf	6
  8050  067C  3002               	movlw	2	; select bank4/5
  8051  067D  0087               	movwf	7
  8052  067E  0020               	movlb	0	; select bank0
  8053  067F  0851               	movf	??_readGesture,w
  8054  0680  0081               	movwf	1
  8055                           
  8056                           ;APDS9960.c: 624:                         gesture_data_.index++;
  8057  0681  3001               	movlw	1
  8058  0682  00D1               	movwf	??_readGesture
  8059  0683  0851               	movf	??_readGesture,w
  8060  0684  0024               	movlb	4	; select bank4
  8061  0685  07E0               	addwf	(_gesture_data_^(0+512)+64),f
  8062                           
  8063                           ;APDS9960.c: 625:                         gesture_data_.total_gestures++;
  8064  0686  3001               	movlw	1
  8065  0687  0020               	movlb	0	; select bank0
  8066  0688  00D1               	movwf	??_readGesture
  8067  0689  0851               	movf	??_readGesture,w
  8068  068A  0024               	movlb	4	; select bank4
  8069  068B  07E1               	addwf	(_gesture_data_^(0+512)+65),f
  8070                           
  8071                           ;APDS9960.c: 626:                     }
  8072  068C  3004               	movlw	4
  8073  068D  0020               	movlb	0	; select bank0
  8074  068E  07D9               	addwf	readGesture@i,f
  8075  068F  3000               	movlw	0
  8076  0690  3DDA               	addwfc	readGesture@i+1,f
  8077  0691  2E31               	goto	l6329
  8078  0692                     l6331:	
  8079                           
  8080                           ;APDS9960.c: 629:                     if( processGestureData() )
  8081  0692  3180  2065  3185   	fcall	_processGestureData
  8082  0695  3A00               	xorlw	0
  8083  0696  1903               	skipnz
  8084  0697  2E9B               	goto	l6335
  8085                           
  8086                           ;APDS9960.c: 630:                     {;APDS9960.c: 632:                         if( dec
      +                          odeGesture() ) {
  8087  0698  3183  2334  3185   	fcall	_decodeGesture
  8088  069B                     l6335:	
  8089                           
  8090                           ;APDS9960.c: 638:                     gesture_data_.index = 0;
  8091  069B  0024               	movlb	4	; select bank4
  8092  069C  01E0               	clrf	(_gesture_data_^(0+512)+64)
  8093                           
  8094                           ;APDS9960.c: 639:                     gesture_data_.total_gestures = 0;
  8095  069D  01E1               	clrf	(_gesture_data_^(0+512)+65)
  8096  069E                     l6295:	
  8097                           
  8098                           ;APDS9960.c: 575:         _delay((unsigned long)((30)*(500000/4000.0)));
  8099  069E  3005               	movlw	5
  8100  069F  0020               	movlb	0	; select bank0
  8101  06A0  00D1               	movwf	??_readGesture
  8102  06A1  30DD               	movlw	221
  8103  06A2                     u5967:	
  8104  06A2  0B89               	decfsz	9,f
  8105  06A3  2EA2               	goto	u5967
  8106  06A4  0BD1               	decfsz	??_readGesture,f
  8107  06A5  2EA2               	goto	u5967
  8108  06A6  3200               	nop2
  8109                           
  8110                           ;APDS9960.c: 578:         gstatus = wireReadDataByte(0xAF);
  8111  06A7  30AF               	movlw	175
  8112  06A8  318B  23CB  3185   	fcall	_wireReadDataByte
  8113  06AB  0020               	movlb	0	; select bank0
  8114  06AC  00D1               	movwf	??_readGesture
  8115  06AD  0851               	movf	??_readGesture,w
  8116  06AE  00D5               	movwf	readGesture@gstatus
  8117                           
  8118                           ;APDS9960.c: 583:         if( (gstatus & 0b00000001) == 0b00000001 )
  8119  06AF  1855               	btfsc	readGesture@gstatus,0
  8120  06B0  2DED               	goto	l6301
  8121                           
  8122                           ;APDS9960.c: 645:             _delay((unsigned long)((30)*(500000/4000.0)));
  8123  06B1  3005               	movlw	5
  8124  06B2  0020               	movlb	0	; select bank0
  8125  06B3  00D1               	movwf	??_readGesture
  8126  06B4  30DD               	movlw	221
  8127  06B5                     u5977:	
  8128  06B5  0B89               	decfsz	9,f
  8129  06B6  2EB5               	goto	u5977
  8130  06B7  0BD1               	decfsz	??_readGesture,f
  8131  06B8  2EB5               	goto	u5977
  8132  06B9  3200               	nop2
  8133                           
  8134                           ;APDS9960.c: 646:             decodeGesture();
  8135  06BA  3183  2334  3185   	fcall	_decodeGesture
  8136                           
  8137                           ;APDS9960.c: 647:             motion = gesture_motion_;
  8138  06BD  0022               	movlb	2	; select bank2
  8139  06BE  0869               	movf	(_gesture_motion_+1)^(0+256),w
  8140  06BF  0020               	movlb	0	; select bank0
  8141  06C0  00D4               	movwf	readGesture@motion+1
  8142  06C1  0022               	movlb	2	; select bank2
  8143  06C2  0868               	movf	_gesture_motion_^(0+256),w
  8144  06C3  0020               	movlb	0	; select bank0
  8145  06C4  00D3               	movwf	readGesture@motion
  8146                           
  8147                           ;APDS9960.c: 649:             resetGestureParameters();
  8148  06C5  318B  232A         	fcall	_resetGestureParameters
  8149                           
  8150                           ;APDS9960.c: 651:             return motion;
  8151  06C7  0020               	movlb	0	; select bank0
  8152  06C8  0854               	movf	readGesture@motion+1,w
  8153  06C9  00D0               	movwf	?_readGesture+1
  8154  06CA  0853               	movf	readGesture@motion,w
  8155  06CB  00CF               	movwf	?_readGesture
  8156  06CC  0008               	return
  8157  06CD                     __end_of_readGesture:	
  8158                           
  8159                           	psect	text17
  8160  0F18                     __ptext17:	
  8161 ;; *************** function _wireReadDataBlock *****************
  8162 ;; Defined at:
  8163 ;;		line 847 in file "APDS9960.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  reg             1    wreg     unsigned char 
  8166 ;;  val             2    6[BANK0 ] PTR unsigned char 
  8167 ;;		 -> readGesture@fifo_data2(64), readGesture@fifo_data(64), 
  8168 ;;  len             2    8[BANK0 ] unsigned int 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  reg             1   15[BANK0 ] unsigned char 
  8171 ;;  j               1   16[BANK0 ] unsigned char 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  2    6[BANK0 ] int 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;Total ram usage:       11 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    7
  8188 ;; This function calls:
  8189 ;;		_I2C_ReStart
  8190 ;;		_I2C_Read_Byte
  8191 ;;		_I2C_Send_NACK
  8192 ;;		_I2C_Start
  8193 ;;		_I2C_Stop
  8194 ;;		_I2C_Write_Byte
  8195 ;; This function is called by:
  8196 ;;		_readGesture
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           
  8201                           ;psect for function _wireReadDataBlock
  8202  0F18                     _wireReadDataBlock:	
  8203                           
  8204                           ;incstack = 0
  8205                           ; Regs used in _wireReadDataBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8206                           ;wireReadDataBlock@reg stored from wreg
  8207  0F18  0020               	movlb	0	; select bank0
  8208  0F19  00AF               	movwf	wireReadDataBlock@reg
  8209                           
  8210                           ;APDS9960.c: 851:     I2C_Start();
  8211  0F1A  3189  219C  318F   	fcall	_I2C_Start
  8212                           
  8213                           ;APDS9960.c: 852:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  8214  0F1D  3072               	movlw	114
  8215  0F1E  318B  2375  318F   	fcall	_I2C_Write_Byte
  8216                           
  8217                           ;APDS9960.c: 854:     I2C_Write_Byte(reg);
  8218  0F21  0020               	movlb	0	; select bank0
  8219  0F22  082F               	movf	wireReadDataBlock@reg,w
  8220  0F23  318B  2375  318F   	fcall	_I2C_Write_Byte
  8221                           
  8222                           ;APDS9960.c: 856:     for(j= 0; j < len ; j++)
  8223  0F26  0020               	movlb	0	; select bank0
  8224  0F27  01B0               	clrf	wireReadDataBlock@j
  8225  0F28                     l5875:	
  8226  0F28  0830               	movf	wireReadDataBlock@j,w
  8227  0F29  00AA               	movwf	??_wireReadDataBlock
  8228  0F2A  01AB               	clrf	??_wireReadDataBlock+1
  8229  0F2B  0829               	movf	wireReadDataBlock@len+1,w
  8230  0F2C  022B               	subwf	??_wireReadDataBlock+1,w
  8231  0F2D  1D03               	skipz
  8232  0F2E  2F31               	goto	u4405
  8233  0F2F  0828               	movf	wireReadDataBlock@len,w
  8234  0F30  022A               	subwf	??_wireReadDataBlock,w
  8235  0F31                     u4405:	
  8236  0F31  1803               	btfsc	3,0
  8237  0F32  2F57               	goto	l5877
  8238                           
  8239                           ;APDS9960.c: 857:     {;APDS9960.c: 859:       I2C_ReStart();
  8240  0F33  3189  218D  318F   	fcall	_I2C_ReStart
  8241                           
  8242                           ;APDS9960.c: 860:       I2C_Write_Byte((0x39 << 1) | 0x01);
  8243  0F36  3073               	movlw	115
  8244  0F37  318B  2375  318F   	fcall	_I2C_Write_Byte
  8245                           
  8246                           ;APDS9960.c: 861:       val[j]=I2C_Read_Byte();
  8247  0F3A  318A  2270  318F   	fcall	_I2C_Read_Byte
  8248  0F3D  0020               	movlb	0	; select bank0
  8249  0F3E  00AA               	movwf	??_wireReadDataBlock
  8250  0F3F  0830               	movf	wireReadDataBlock@j,w
  8251  0F40  00AB               	movwf	??_wireReadDataBlock+1
  8252  0F41  01AC               	clrf	??_wireReadDataBlock+2
  8253  0F42  082B               	movf	??_wireReadDataBlock+1,w
  8254  0F43  0726               	addwf	wireReadDataBlock@val,w
  8255  0F44  00AD               	movwf	??_wireReadDataBlock+3
  8256  0F45  082C               	movf	??_wireReadDataBlock+2,w
  8257  0F46  3D27               	addwfc	wireReadDataBlock@val+1,w
  8258  0F47  00AE               	movwf	??_wireReadDataBlock+4
  8259  0F48  082D               	movf	??_wireReadDataBlock+3,w
  8260  0F49  0086               	movwf	6
  8261  0F4A  082E               	movf	??_wireReadDataBlock+4,w
  8262  0F4B  0087               	movwf	7
  8263  0F4C  082A               	movf	??_wireReadDataBlock,w
  8264  0F4D  0081               	movwf	1
  8265                           
  8266                           ;APDS9960.c: 862:       I2C_Send_NACK();
  8267  0F4E  3189  2196  318F   	fcall	_I2C_Send_NACK
  8268                           
  8269                           ;APDS9960.c: 864:     }
  8270  0F51  3001               	movlw	1
  8271  0F52  0020               	movlb	0	; select bank0
  8272  0F53  00AA               	movwf	??_wireReadDataBlock
  8273  0F54  082A               	movf	??_wireReadDataBlock,w
  8274  0F55  07B0               	addwf	wireReadDataBlock@j,f
  8275  0F56  2F28               	goto	l5875
  8276  0F57                     l5877:	
  8277                           
  8278                           ;APDS9960.c: 866:     I2C_Stop();
  8279  0F57  3189  21A2         	fcall	_I2C_Stop
  8280                           
  8281                           ;APDS9960.c: 867:     return (int)j;
  8282  0F59  0020               	movlb	0	; select bank0
  8283  0F5A  0830               	movf	wireReadDataBlock@j,w
  8284  0F5B  00AA               	movwf	??_wireReadDataBlock
  8285  0F5C  01AB               	clrf	??_wireReadDataBlock+1
  8286  0F5D  082A               	movf	??_wireReadDataBlock,w
  8287  0F5E  00A6               	movwf	?_wireReadDataBlock
  8288  0F5F  082B               	movf	??_wireReadDataBlock+1,w
  8289  0F60  00A7               	movwf	?_wireReadDataBlock+1
  8290  0F61  0008               	return
  8291  0F62                     __end_of_wireReadDataBlock:	
  8292                           
  8293                           	psect	text18
  8294  0065                     __ptext18:	
  8295 ;; *************** function _processGestureData *****************
  8296 ;; Defined at:
  8297 ;;		line 657 in file "APDS9960.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  i               2   45[BANK0 ] int 
  8302 ;;  lr_delta        2   43[BANK0 ] int 
  8303 ;;  ud_delta        2   41[BANK0 ] int 
  8304 ;;  lr_ratio_las    2   23[BANK0 ] int 
  8305 ;;  ud_ratio_las    2   21[BANK0 ] int 
  8306 ;;  lr_ratio_fir    2   19[BANK0 ] int 
  8307 ;;  ud_ratio_fir    2   17[BANK0 ] int 
  8308 ;;  r_first         1   40[BANK0 ] unsigned char 
  8309 ;;  l_first         1   39[BANK0 ] unsigned char 
  8310 ;;  d_first         1   38[BANK0 ] unsigned char 
  8311 ;;  u_first         1   37[BANK0 ] unsigned char 
  8312 ;;  r_last          1   36[BANK0 ] unsigned char 
  8313 ;;  l_last          1   35[BANK0 ] unsigned char 
  8314 ;;  d_last          1   34[BANK0 ] unsigned char 
  8315 ;;  u_last          1   33[BANK0 ] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      _Bool 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:       32 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    6
  8332 ;; This function calls:
  8333 ;;		___awdiv
  8334 ;;		___wmul
  8335 ;; This function is called by:
  8336 ;;		_readGesture
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _processGestureData
  8342  0065                     _processGestureData:	
  8343                           
  8344                           ;APDS9960.c: 659:     uint8_t u_first = 0;
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in _processGestureData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8348  0065  0020               	movlb	0	; select bank0
  8349  0066  01C5               	clrf	processGestureData@u_first
  8350                           
  8351                           ;APDS9960.c: 660:     uint8_t d_first = 0;
  8352  0067  01C6               	clrf	processGestureData@d_first
  8353                           
  8354                           ;APDS9960.c: 661:     uint8_t l_first = 0;
  8355  0068  01C7               	clrf	processGestureData@l_first
  8356                           
  8357                           ;APDS9960.c: 662:     uint8_t r_first = 0;
  8358  0069  01C8               	clrf	processGestureData@r_first
  8359                           
  8360                           ;APDS9960.c: 663:     uint8_t u_last = 0;
  8361  006A  01C1               	clrf	processGestureData@u_last
  8362                           
  8363                           ;APDS9960.c: 664:     uint8_t d_last = 0;
  8364  006B  01C2               	clrf	processGestureData@d_last
  8365                           
  8366                           ;APDS9960.c: 665:     uint8_t l_last = 0;
  8367  006C  01C3               	clrf	processGestureData@l_last
  8368                           
  8369                           ;APDS9960.c: 666:     uint8_t r_last = 0;
  8370  006D  01C4               	clrf	processGestureData@r_last
  8371                           
  8372                           ;APDS9960.c: 667:     int ud_ratio_first;;APDS9960.c: 668:     int lr_ratio_first;;APDS9
      +                          960.c: 669:     int ud_ratio_last;;APDS9960.c: 670:     int lr_ratio_last;;APDS9960.c: 6
      +                          71:     int ud_delta;;APDS9960.c: 672:     int lr_delta;;APDS9960.c: 673:     int i;;APD
      +                          S9960.c: 676:     if( gesture_data_.total_gestures <= 4 ) {
  8373  006E  3005               	movlw	5
  8374  006F  0024               	movlb	4	; select bank4
  8375  0070  0261               	subwf	(_gesture_data_^(0+512)+65),w
  8376  0071  1803               	skipnc
  8377  0072  2875               	goto	l5891
  8378  0073                     l5887:	
  8379                           
  8380                           ;APDS9960.c: 677:         return 0;
  8381  0073  3000               	movlw	0
  8382  0074  0008               	return
  8383  0075                     l5891:	
  8384                           
  8385                           ;APDS9960.c: 681:     if( (gesture_data_.total_gestures <= 32) && (gesture_data_.total_g
      +                          estures > 0) ) {
  8386  0075  3021               	movlw	33
  8387  0076  0261               	subwf	(_gesture_data_^(0+512)+65),w
  8388  0077  1803               	skipnc
  8389  0078  293F               	goto	l5941
  8390  0079  0861               	movf	(_gesture_data_^(0+512)+65),w
  8391  007A  1903               	btfsc	3,2
  8392  007B  293F               	goto	l5941
  8393                           
  8394                           ;APDS9960.c: 682: ;APDS9960.c: 685:         for( i = 0; i < gesture_data_.total_gestures
      +                          ; i++ ) {
  8395  007C  0020               	movlb	0	; select bank0
  8396  007D  01CD               	clrf	processGestureData@i
  8397  007E  01CE               	clrf	processGestureData@i+1
  8398  007F  2884               	goto	l971
  8399  0080                     l5907:	
  8400                           ;APDS9960.c: 695:                 break;
  8401                           
  8402                           
  8403                           ;APDS9960.c: 697:         }
  8404  0080  3001               	movlw	1
  8405  0081  07CD               	addwf	processGestureData@i,f
  8406  0082  3000               	movlw	0
  8407  0083  3DCE               	addwfc	processGestureData@i+1,f
  8408  0084                     l971:	
  8409  0084  084E               	movf	processGestureData@i+1,w
  8410  0085  3A80               	xorlw	128
  8411  0086  00AF               	movwf	??_processGestureData
  8412  0087  3080               	movlw	128
  8413  0088  022F               	subwf	??_processGestureData,w
  8414  0089  1D03               	skipz
  8415  008A  288F               	goto	u4485
  8416  008B  0024               	movlb	4	; select bank4
  8417  008C  0861               	movf	(_gesture_data_^(0+512)+65),w
  8418  008D  0020               	movlb	0	; select bank0
  8419  008E  024D               	subwf	processGestureData@i,w
  8420  008F                     u4485:	
  8421  008F  1803               	btfsc	3,0
  8422  0090  28DA               	goto	l5909
  8423                           
  8424                           ;APDS9960.c: 686:             if( (gesture_data_.u_data[i] > 10) &&
  8425  0091  0020               	movlb	0	; select bank0
  8426  0092  084D               	movf	processGestureData@i,w
  8427  0093  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8428  0094  0086               	movwf	6
  8429  0095  3002               	movlw	2	; select bank4/5
  8430  0096  0087               	movwf	7
  8431  0097  300B               	movlw	11
  8432  0098  0201               	subwf	1,w
  8433  0099  1C03               	skipc
  8434  009A  2880               	goto	l5907
  8435  009B  084D               	movf	processGestureData@i,w
  8436  009C  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8437  009D  0086               	movwf	6
  8438  009E  3002               	movlw	2	; select bank4/5
  8439  009F  0087               	movwf	7
  8440  00A0  300B               	movlw	11
  8441  00A1  0201               	subwf	1,w
  8442  00A2  1C03               	skipc
  8443  00A3  2880               	goto	l5907
  8444  00A4  084D               	movf	processGestureData@i,w
  8445  00A5  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8446  00A6  0086               	movwf	6
  8447  00A7  3002               	movlw	2	; select bank4/5
  8448  00A8  0087               	movwf	7
  8449  00A9  300B               	movlw	11
  8450  00AA  0201               	subwf	1,w
  8451  00AB  1C03               	skipc
  8452  00AC  2880               	goto	l5907
  8453  00AD  084D               	movf	processGestureData@i,w
  8454  00AE  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8455  00AF  0086               	movwf	6
  8456  00B0  3002               	movlw	2	; select bank4/5
  8457  00B1  0087               	movwf	7
  8458  00B2  300B               	movlw	11
  8459  00B3  0201               	subwf	1,w
  8460  00B4  1C03               	skipc
  8461  00B5  2880               	goto	l5907
  8462                           
  8463                           ;APDS9960.c: 689:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 691:   
      +                                        u_first = gesture_data_.u_data[i];
  8464  00B6  084D               	movf	processGestureData@i,w
  8465  00B7  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8466  00B8  0086               	movwf	6
  8467  00B9  3002               	movlw	2	; select bank4/5
  8468  00BA  0087               	movwf	7
  8469  00BB  0801               	movf	1,w
  8470  00BC  00AF               	movwf	??_processGestureData
  8471  00BD  082F               	movf	??_processGestureData,w
  8472  00BE  00C5               	movwf	processGestureData@u_first
  8473                           
  8474                           ;APDS9960.c: 692:                 d_first = gesture_data_.d_data[i];
  8475  00BF  084D               	movf	processGestureData@i,w
  8476  00C0  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8477  00C1  0086               	movwf	6
  8478  00C2  3002               	movlw	2	; select bank4/5
  8479  00C3  0087               	movwf	7
  8480  00C4  0801               	movf	1,w
  8481  00C5  00AF               	movwf	??_processGestureData
  8482  00C6  082F               	movf	??_processGestureData,w
  8483  00C7  00C6               	movwf	processGestureData@d_first
  8484                           
  8485                           ;APDS9960.c: 693:                 l_first = gesture_data_.l_data[i];
  8486  00C8  084D               	movf	processGestureData@i,w
  8487  00C9  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8488  00CA  0086               	movwf	6
  8489  00CB  3002               	movlw	2	; select bank4/5
  8490  00CC  0087               	movwf	7
  8491  00CD  0801               	movf	1,w
  8492  00CE  00AF               	movwf	??_processGestureData
  8493  00CF  082F               	movf	??_processGestureData,w
  8494  00D0  00C7               	movwf	processGestureData@l_first
  8495                           
  8496                           ;APDS9960.c: 694:                 r_first = gesture_data_.r_data[i];
  8497  00D1  084D               	movf	processGestureData@i,w
  8498  00D2  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8499  00D3  0086               	movwf	6
  8500  00D4  3002               	movlw	2	; select bank4/5
  8501  00D5  0087               	movwf	7
  8502  00D6  0801               	movf	1,w
  8503  00D7  00AF               	movwf	??_processGestureData
  8504  00D8  082F               	movf	??_processGestureData,w
  8505  00D9  00C8               	movwf	processGestureData@r_first
  8506  00DA                     l5909:	
  8507                           
  8508                           ;APDS9960.c: 700:         if( (u_first == 0) || (d_first == 0) || (l_first == 0) || (r_f
      +                          irst == 0) ) {
  8509  00DA  0020               	movlb	0	; select bank0
  8510  00DB  0845               	movf	processGestureData@u_first,w
  8511  00DC  1903               	btfsc	3,2
  8512  00DD  2873               	goto	l5887
  8513  00DE  0846               	movf	processGestureData@d_first,w
  8514  00DF  1903               	btfsc	3,2
  8515  00E0  2873               	goto	l5887
  8516  00E1  0847               	movf	processGestureData@l_first,w
  8517  00E2  1903               	btfsc	3,2
  8518  00E3  2873               	goto	l5887
  8519  00E4  0848               	movf	processGestureData@r_first,w
  8520  00E5  1903               	btfsc	3,2
  8521  00E6  2873               	goto	l5887
  8522                           
  8523                           ;APDS9960.c: 706:         for( i = gesture_data_.total_gestures - 1; i >= 0; i-- ) {
  8524  00E7  0024               	movlb	4	; select bank4
  8525  00E8  0861               	movf	(_gesture_data_^(0+512)+65),w
  8526  00E9  3EFF               	addlw	255
  8527  00EA  0020               	movlb	0	; select bank0
  8528  00EB  00CD               	movwf	processGestureData@i
  8529  00EC  30FF               	movlw	255
  8530  00ED  1803               	skipnc
  8531  00EE  3000               	movlw	0
  8532  00EF  00CE               	movwf	processGestureData@i+1
  8533                           
  8534                           ;APDS9960.c: 717:                 break;
  8535  00F0  28F5               	goto	l5923
  8536  00F1                     l5937:	
  8537                           
  8538                           ;APDS9960.c: 719:         }
  8539  00F1  30FF               	movlw	255
  8540  00F2  07CD               	addwf	processGestureData@i,f
  8541  00F3  30FF               	movlw	255
  8542  00F4  3DCE               	addwfc	processGestureData@i+1,f
  8543  00F5                     l5923:	
  8544  00F5  1BCE               	btfsc	processGestureData@i+1,7
  8545  00F6  293F               	goto	l5941
  8546                           
  8547                           ;APDS9960.c: 708:             if( (gesture_data_.u_data[i] > 10) &&
  8548  00F7  084D               	movf	processGestureData@i,w
  8549  00F8  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8550  00F9  0086               	movwf	6
  8551  00FA  3002               	movlw	2	; select bank4/5
  8552  00FB  0087               	movwf	7
  8553  00FC  300B               	movlw	11
  8554  00FD  0201               	subwf	1,w
  8555  00FE  1C03               	skipc
  8556  00FF  28F1               	goto	l5937
  8557  0100  084D               	movf	processGestureData@i,w
  8558  0101  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8559  0102  0086               	movwf	6
  8560  0103  3002               	movlw	2	; select bank4/5
  8561  0104  0087               	movwf	7
  8562  0105  300B               	movlw	11
  8563  0106  0201               	subwf	1,w
  8564  0107  1C03               	skipc
  8565  0108  28F1               	goto	l5937
  8566  0109  084D               	movf	processGestureData@i,w
  8567  010A  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8568  010B  0086               	movwf	6
  8569  010C  3002               	movlw	2	; select bank4/5
  8570  010D  0087               	movwf	7
  8571  010E  300B               	movlw	11
  8572  010F  0201               	subwf	1,w
  8573  0110  1C03               	skipc
  8574  0111  28F1               	goto	l5937
  8575  0112  084D               	movf	processGestureData@i,w
  8576  0113  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8577  0114  0086               	movwf	6
  8578  0115  3002               	movlw	2	; select bank4/5
  8579  0116  0087               	movwf	7
  8580  0117  300B               	movlw	11
  8581  0118  0201               	subwf	1,w
  8582  0119  1C03               	skipc
  8583  011A  28F1               	goto	l5937
  8584                           
  8585                           ;APDS9960.c: 711:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 713:   
      +                                        u_last = gesture_data_.u_data[i];
  8586  011B  084D               	movf	processGestureData@i,w
  8587  011C  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8588  011D  0086               	movwf	6
  8589  011E  3002               	movlw	2	; select bank4/5
  8590  011F  0087               	movwf	7
  8591  0120  0801               	movf	1,w
  8592  0121  00AF               	movwf	??_processGestureData
  8593  0122  082F               	movf	??_processGestureData,w
  8594  0123  00C1               	movwf	processGestureData@u_last
  8595                           
  8596                           ;APDS9960.c: 714:                 d_last = gesture_data_.d_data[i];
  8597  0124  084D               	movf	processGestureData@i,w
  8598  0125  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8599  0126  0086               	movwf	6
  8600  0127  3002               	movlw	2	; select bank4/5
  8601  0128  0087               	movwf	7
  8602  0129  0801               	movf	1,w
  8603  012A  00AF               	movwf	??_processGestureData
  8604  012B  082F               	movf	??_processGestureData,w
  8605  012C  00C2               	movwf	processGestureData@d_last
  8606                           
  8607                           ;APDS9960.c: 715:                 l_last = gesture_data_.l_data[i];
  8608  012D  084D               	movf	processGestureData@i,w
  8609  012E  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8610  012F  0086               	movwf	6
  8611  0130  3002               	movlw	2	; select bank4/5
  8612  0131  0087               	movwf	7
  8613  0132  0801               	movf	1,w
  8614  0133  00AF               	movwf	??_processGestureData
  8615  0134  082F               	movf	??_processGestureData,w
  8616  0135  00C3               	movwf	processGestureData@l_last
  8617                           
  8618                           ;APDS9960.c: 716:                 r_last = gesture_data_.r_data[i];
  8619  0136  084D               	movf	processGestureData@i,w
  8620  0137  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8621  0138  0086               	movwf	6
  8622  0139  3002               	movlw	2	; select bank4/5
  8623  013A  0087               	movwf	7
  8624  013B  0801               	movf	1,w
  8625  013C  00AF               	movwf	??_processGestureData
  8626  013D  082F               	movf	??_processGestureData,w
  8627  013E  00C4               	movwf	processGestureData@r_last
  8628  013F                     l5941:	
  8629                           
  8630                           ;APDS9960.c: 723:     ud_ratio_first = ((u_first - d_first) * 100) / (u_first + d_first)
      +                          ;
  8631  013F  0020               	movlb	0	; select bank0
  8632  0140  0845               	movf	processGestureData@u_first,w
  8633  0141  0746               	addwf	processGestureData@d_first,w
  8634  0142  00A6               	movwf	___awdiv@divisor
  8635  0143  01A7               	clrf	___awdiv@divisor+1
  8636  0144  0DA7               	rlf	___awdiv@divisor+1,f
  8637  0145  0846               	movf	processGestureData@d_first,w
  8638  0146  0245               	subwf	processGestureData@u_first,w
  8639  0147  00A0               	movwf	___wmul@multiplier
  8640  0148  01A1               	clrf	___wmul@multiplier+1
  8641  0149  1C03               	skipc
  8642  014A  03A1               	decf	___wmul@multiplier+1,f
  8643  014B  3064               	movlw	100
  8644  014C  00A2               	movwf	___wmul@multiplicand
  8645  014D  3000               	movlw	0
  8646  014E  00A3               	movwf	___wmul@multiplicand+1
  8647  014F  318B  2391  3180   	fcall	___wmul
  8648  0152  0020               	movlb	0	; select bank0
  8649  0153  0821               	movf	?___wmul+1,w
  8650  0154  00A9               	movwf	___awdiv@dividend+1
  8651  0155  0820               	movf	?___wmul,w
  8652  0156  00A8               	movwf	___awdiv@dividend
  8653  0157  3187  279A  3180   	fcall	___awdiv
  8654  015A  0020               	movlb	0	; select bank0
  8655  015B  0827               	movf	?___awdiv+1,w
  8656  015C  00B2               	movwf	processGestureData@ud_ratio_first+1
  8657  015D  0826               	movf	?___awdiv,w
  8658  015E  00B1               	movwf	processGestureData@ud_ratio_first
  8659                           
  8660                           ;APDS9960.c: 724:     lr_ratio_first = ((l_first - r_first) * 100) / (l_first + r_first)
      +                          ;
  8661  015F  0847               	movf	processGestureData@l_first,w
  8662  0160  0748               	addwf	processGestureData@r_first,w
  8663  0161  00A6               	movwf	___awdiv@divisor
  8664  0162  01A7               	clrf	___awdiv@divisor+1
  8665  0163  0DA7               	rlf	___awdiv@divisor+1,f
  8666  0164  0848               	movf	processGestureData@r_first,w
  8667  0165  0247               	subwf	processGestureData@l_first,w
  8668  0166  00A0               	movwf	___wmul@multiplier
  8669  0167  01A1               	clrf	___wmul@multiplier+1
  8670  0168  1C03               	skipc
  8671  0169  03A1               	decf	___wmul@multiplier+1,f
  8672  016A  3064               	movlw	100
  8673  016B  00A2               	movwf	___wmul@multiplicand
  8674  016C  3000               	movlw	0
  8675  016D  00A3               	movwf	___wmul@multiplicand+1
  8676  016E  318B  2391  3180   	fcall	___wmul
  8677  0171  0020               	movlb	0	; select bank0
  8678  0172  0821               	movf	?___wmul+1,w
  8679  0173  00A9               	movwf	___awdiv@dividend+1
  8680  0174  0820               	movf	?___wmul,w
  8681  0175  00A8               	movwf	___awdiv@dividend
  8682  0176  3187  279A  3180   	fcall	___awdiv
  8683  0179  0020               	movlb	0	; select bank0
  8684  017A  0827               	movf	?___awdiv+1,w
  8685  017B  00B4               	movwf	processGestureData@lr_ratio_first+1
  8686  017C  0826               	movf	?___awdiv,w
  8687  017D  00B3               	movwf	processGestureData@lr_ratio_first
  8688                           
  8689                           ;APDS9960.c: 725:     ud_ratio_last = ((u_last - d_last) * 100) / (u_last + d_last);
  8690  017E  0841               	movf	processGestureData@u_last,w
  8691  017F  0742               	addwf	processGestureData@d_last,w
  8692  0180  00A6               	movwf	___awdiv@divisor
  8693  0181  01A7               	clrf	___awdiv@divisor+1
  8694  0182  0DA7               	rlf	___awdiv@divisor+1,f
  8695  0183  0842               	movf	processGestureData@d_last,w
  8696  0184  0241               	subwf	processGestureData@u_last,w
  8697  0185  00A0               	movwf	___wmul@multiplier
  8698  0186  01A1               	clrf	___wmul@multiplier+1
  8699  0187  1C03               	skipc
  8700  0188  03A1               	decf	___wmul@multiplier+1,f
  8701  0189  3064               	movlw	100
  8702  018A  00A2               	movwf	___wmul@multiplicand
  8703  018B  3000               	movlw	0
  8704  018C  00A3               	movwf	___wmul@multiplicand+1
  8705  018D  318B  2391  3180   	fcall	___wmul
  8706  0190  0020               	movlb	0	; select bank0
  8707  0191  0821               	movf	?___wmul+1,w
  8708  0192  00A9               	movwf	___awdiv@dividend+1
  8709  0193  0820               	movf	?___wmul,w
  8710  0194  00A8               	movwf	___awdiv@dividend
  8711  0195  3187  279A  3180   	fcall	___awdiv
  8712  0198  0020               	movlb	0	; select bank0
  8713  0199  0827               	movf	?___awdiv+1,w
  8714  019A  00B6               	movwf	processGestureData@ud_ratio_last+1
  8715  019B  0826               	movf	?___awdiv,w
  8716  019C  00B5               	movwf	processGestureData@ud_ratio_last
  8717                           
  8718                           ;APDS9960.c: 726:     lr_ratio_last = ((l_last - r_last) * 100) / (l_last + r_last);
  8719  019D  0843               	movf	processGestureData@l_last,w
  8720  019E  0744               	addwf	processGestureData@r_last,w
  8721  019F  00A6               	movwf	___awdiv@divisor
  8722  01A0  01A7               	clrf	___awdiv@divisor+1
  8723  01A1  0DA7               	rlf	___awdiv@divisor+1,f
  8724  01A2  0844               	movf	processGestureData@r_last,w
  8725  01A3  0243               	subwf	processGestureData@l_last,w
  8726  01A4  00A0               	movwf	___wmul@multiplier
  8727  01A5  01A1               	clrf	___wmul@multiplier+1
  8728  01A6  1C03               	skipc
  8729  01A7  03A1               	decf	___wmul@multiplier+1,f
  8730  01A8  3064               	movlw	100
  8731  01A9  00A2               	movwf	___wmul@multiplicand
  8732  01AA  3000               	movlw	0
  8733  01AB  00A3               	movwf	___wmul@multiplicand+1
  8734  01AC  318B  2391  3180   	fcall	___wmul
  8735  01AF  0020               	movlb	0	; select bank0
  8736  01B0  0821               	movf	?___wmul+1,w
  8737  01B1  00A9               	movwf	___awdiv@dividend+1
  8738  01B2  0820               	movf	?___wmul,w
  8739  01B3  00A8               	movwf	___awdiv@dividend
  8740  01B4  3187  279A  3180   	fcall	___awdiv
  8741  01B7  0020               	movlb	0	; select bank0
  8742  01B8  0827               	movf	?___awdiv+1,w
  8743  01B9  00B8               	movwf	processGestureData@lr_ratio_last+1
  8744  01BA  0826               	movf	?___awdiv,w
  8745  01BB  00B7               	movwf	processGestureData@lr_ratio_last
  8746                           
  8747                           ;APDS9960.c: 729:     ud_delta = ud_ratio_last - ud_ratio_first;
  8748  01BC  0831               	movf	processGestureData@ud_ratio_first,w
  8749  01BD  0235               	subwf	processGestureData@ud_ratio_last,w
  8750  01BE  00C9               	movwf	processGestureData@ud_delta
  8751  01BF  0832               	movf	processGestureData@ud_ratio_first+1,w
  8752  01C0  3B36               	subwfb	processGestureData@ud_ratio_last+1,w
  8753  01C1  00CA               	movwf	processGestureData@ud_delta+1
  8754                           
  8755                           ;APDS9960.c: 730:     lr_delta = lr_ratio_last - lr_ratio_first;
  8756  01C2  0833               	movf	processGestureData@lr_ratio_first,w
  8757  01C3  0237               	subwf	processGestureData@lr_ratio_last,w
  8758  01C4  00CB               	movwf	processGestureData@lr_delta
  8759  01C5  0834               	movf	processGestureData@lr_ratio_first+1,w
  8760  01C6  3B38               	subwfb	processGestureData@lr_ratio_last+1,w
  8761  01C7  00CC               	movwf	processGestureData@lr_delta+1
  8762                           
  8763                           ;APDS9960.c: 733:     gesture_ud_delta_ += ud_delta;
  8764  01C8  0849               	movf	processGestureData@ud_delta,w
  8765  01C9  07E8               	addwf	_gesture_ud_delta_,f
  8766  01CA  084A               	movf	processGestureData@ud_delta+1,w
  8767  01CB  3DE9               	addwfc	_gesture_ud_delta_+1,f
  8768                           
  8769                           ;APDS9960.c: 734:     gesture_lr_delta_ += lr_delta;
  8770  01CC  084B               	movf	processGestureData@lr_delta,w
  8771  01CD  07E6               	addwf	_gesture_lr_delta_,f
  8772  01CE  084C               	movf	processGestureData@lr_delta+1,w
  8773  01CF  3DE7               	addwfc	_gesture_lr_delta_+1,f
  8774                           
  8775                           ;APDS9960.c: 737:     if( gesture_ud_delta_ >= 50 ) {
  8776  01D0  0869               	movf	_gesture_ud_delta_+1,w
  8777  01D1  3A80               	xorlw	128
  8778  01D2  00AF               	movwf	??_processGestureData
  8779  01D3  3080               	movlw	128
  8780  01D4  022F               	subwf	??_processGestureData,w
  8781  01D5  1D03               	skipz
  8782  01D6  29D9               	goto	u4585
  8783  01D7  3032               	movlw	50
  8784  01D8  0268               	subwf	_gesture_ud_delta_,w
  8785  01D9                     u4585:	
  8786  01D9  1C03               	skipc
  8787  01DA  29E0               	goto	l5955
  8788                           
  8789                           ;APDS9960.c: 738:         gesture_ud_count_ = 1;
  8790  01DB  3001               	movlw	1
  8791  01DC  0020               	movlb	0	; select bank0
  8792  01DD  00E4               	movwf	_gesture_ud_count_
  8793  01DE  3000               	movlw	0
  8794  01DF  29F0               	goto	L2
  8795  01E0                     l5955:	
  8796                           ;APDS9960.c: 739:     } else if( gesture_ud_delta_ <= -50 ) {
  8797                           
  8798  01E0  0020               	movlb	0	; select bank0
  8799  01E1  0869               	movf	_gesture_ud_delta_+1,w
  8800  01E2  3A80               	xorlw	128
  8801  01E3  00AF               	movwf	??_processGestureData
  8802  01E4  307F               	movlw	127
  8803  01E5  022F               	subwf	??_processGestureData,w
  8804  01E6  1D03               	skipz
  8805  01E7  29EA               	goto	u4595
  8806  01E8  30CF               	movlw	207
  8807  01E9  0268               	subwf	_gesture_ud_delta_,w
  8808  01EA                     u4595:	
  8809  01EA  1803               	skipnc
  8810  01EB  29F2               	goto	l5959
  8811                           
  8812                           ;APDS9960.c: 740:         gesture_ud_count_ = -1;
  8813  01EC  30FF               	movlw	255
  8814  01ED  0020               	movlb	0	; select bank0
  8815  01EE  00E4               	movwf	_gesture_ud_count_
  8816  01EF  30FF               	movlw	255
  8817  01F0                     L2:	
  8818  01F0  00E5               	movwf	_gesture_ud_count_+1
  8819                           
  8820                           ;APDS9960.c: 741:     } else {
  8821  01F1  29F5               	goto	l5961
  8822  01F2                     l5959:	
  8823                           
  8824                           ;APDS9960.c: 742:         gesture_ud_count_ = 0;
  8825  01F2  0020               	movlb	0	; select bank0
  8826  01F3  01E4               	clrf	_gesture_ud_count_
  8827  01F4  01E5               	clrf	_gesture_ud_count_+1
  8828  01F5                     l5961:	
  8829                           
  8830                           ;APDS9960.c: 746:     if( gesture_lr_delta_ >= 50 ) {
  8831  01F5  0867               	movf	_gesture_lr_delta_+1,w
  8832  01F6  3A80               	xorlw	128
  8833  01F7  00AF               	movwf	??_processGestureData
  8834  01F8  3080               	movlw	128
  8835  01F9  022F               	subwf	??_processGestureData,w
  8836  01FA  1D03               	skipz
  8837  01FB  29FE               	goto	u4605
  8838  01FC  3032               	movlw	50
  8839  01FD  0266               	subwf	_gesture_lr_delta_,w
  8840  01FE                     u4605:	
  8841  01FE  1C03               	skipc
  8842  01FF  2A05               	goto	l5965
  8843                           
  8844                           ;APDS9960.c: 747:         gesture_lr_count_ = 1;
  8845  0200  3001               	movlw	1
  8846  0201  0020               	movlb	0	; select bank0
  8847  0202  00E2               	movwf	_gesture_lr_count_
  8848  0203  3000               	movlw	0
  8849  0204  2A15               	goto	L3
  8850  0205                     l5965:	
  8851                           ;APDS9960.c: 748:     } else if( gesture_lr_delta_ <= -50 ) {
  8852                           
  8853  0205  0020               	movlb	0	; select bank0
  8854  0206  0867               	movf	_gesture_lr_delta_+1,w
  8855  0207  3A80               	xorlw	128
  8856  0208  00AF               	movwf	??_processGestureData
  8857  0209  307F               	movlw	127
  8858  020A  022F               	subwf	??_processGestureData,w
  8859  020B  1D03               	skipz
  8860  020C  2A0F               	goto	u4615
  8861  020D  30CF               	movlw	207
  8862  020E  0266               	subwf	_gesture_lr_delta_,w
  8863  020F                     u4615:	
  8864  020F  1803               	skipnc
  8865  0210  2A17               	goto	l5969
  8866                           
  8867                           ;APDS9960.c: 749:         gesture_lr_count_ = -1;
  8868  0211  30FF               	movlw	255
  8869  0212  0020               	movlb	0	; select bank0
  8870  0213  00E2               	movwf	_gesture_lr_count_
  8871  0214  30FF               	movlw	255
  8872  0215                     L3:	
  8873  0215  00E3               	movwf	_gesture_lr_count_+1
  8874                           
  8875                           ;APDS9960.c: 750:     } else {
  8876  0216  2A1A               	goto	l5971
  8877  0217                     l5969:	
  8878                           
  8879                           ;APDS9960.c: 751:         gesture_lr_count_ = 0;
  8880  0217  0020               	movlb	0	; select bank0
  8881  0218  01E2               	clrf	_gesture_lr_count_
  8882  0219  01E3               	clrf	_gesture_lr_count_+1
  8883  021A                     l5971:	
  8884                           
  8885                           ;APDS9960.c: 755:     if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 0) ) {
  8886  021A  0864               	movf	_gesture_ud_count_,w
  8887  021B  0465               	iorwf	_gesture_ud_count_+1,w
  8888  021C  1D03               	btfss	3,2
  8889  021D  2AC1               	goto	l6015
  8890  021E  0862               	movf	_gesture_lr_count_,w
  8891  021F  0463               	iorwf	_gesture_lr_count_+1,w
  8892  0220  1D03               	btfss	3,2
  8893  0221  2AC1               	goto	l6015
  8894                           
  8895                           ;APDS9960.c: 756:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  8896  0222  084A               	movf	processGestureData@ud_delta+1,w
  8897  0223  3A80               	xorlw	128
  8898  0224  00AF               	movwf	??_processGestureData
  8899  0225  3080               	movlw	128
  8900  0226  022F               	subwf	??_processGestureData,w
  8901  0227  1D03               	skipz
  8902  0228  2A2B               	goto	u4645
  8903  0229  3001               	movlw	1
  8904  022A  0249               	subwf	processGestureData@ud_delta,w
  8905  022B                     u4645:	
  8906  022B  1803               	skipnc
  8907  022C  2A3A               	goto	l5979
  8908  022D  0020               	movlb	0	; select bank0
  8909  022E  0949               	comf	processGestureData@ud_delta,w
  8910  022F  00AF               	movwf	??_processGestureData
  8911  0230  094A               	comf	processGestureData@ud_delta+1,w
  8912  0231  00B0               	movwf	??_processGestureData+1
  8913  0232  0AAF               	incf	??_processGestureData,f
  8914  0233  1903               	skipnz
  8915  0234  0AB0               	incf	??_processGestureData+1,f
  8916  0235  082F               	movf	??_processGestureData,w
  8917  0236  00B9               	movwf	_processGestureData$1401
  8918  0237  0830               	movf	??_processGestureData+1,w
  8919  0238  00BA               	movwf	_processGestureData$1401+1
  8920  0239  2A3F               	goto	l994
  8921  023A                     l5979:	
  8922  023A  0020               	movlb	0	; select bank0
  8923  023B  084A               	movf	processGestureData@ud_delta+1,w
  8924  023C  00BA               	movwf	_processGestureData$1401+1
  8925  023D  0849               	movf	processGestureData@ud_delta,w
  8926  023E  00B9               	movwf	_processGestureData$1401
  8927  023F                     l994:	
  8928  023F  083A               	movf	_processGestureData$1401+1,w
  8929  0240  3A80               	xorlw	128
  8930  0241  00AF               	movwf	??_processGestureData
  8931  0242  3080               	movlw	128
  8932  0243  022F               	subwf	??_processGestureData,w
  8933  0244  1D03               	skipz
  8934  0245  2A48               	goto	u4655
  8935  0246  3014               	movlw	20
  8936  0247  0239               	subwf	_processGestureData$1401,w
  8937  0248                     u4655:	
  8938  0248  1803               	skipnc
  8939  0249  2873               	goto	l5887
  8940  024A  0020               	movlb	0	; select bank0
  8941  024B  084C               	movf	processGestureData@lr_delta+1,w
  8942  024C  3A80               	xorlw	128
  8943  024D  00AF               	movwf	??_processGestureData
  8944  024E  3080               	movlw	128
  8945  024F  022F               	subwf	??_processGestureData,w
  8946  0250  1D03               	skipz
  8947  0251  2A54               	goto	u4665
  8948  0252  3001               	movlw	1
  8949  0253  024B               	subwf	processGestureData@lr_delta,w
  8950  0254                     u4665:	
  8951  0254  1803               	skipnc
  8952  0255  2A63               	goto	l5985
  8953  0256  0020               	movlb	0	; select bank0
  8954  0257  094B               	comf	processGestureData@lr_delta,w
  8955  0258  00AF               	movwf	??_processGestureData
  8956  0259  094C               	comf	processGestureData@lr_delta+1,w
  8957  025A  00B0               	movwf	??_processGestureData+1
  8958  025B  0AAF               	incf	??_processGestureData,f
  8959  025C  1903               	skipnz
  8960  025D  0AB0               	incf	??_processGestureData+1,f
  8961  025E  082F               	movf	??_processGestureData,w
  8962  025F  00BB               	movwf	_processGestureData$1402
  8963  0260  0830               	movf	??_processGestureData+1,w
  8964  0261  00BC               	movwf	_processGestureData$1402+1
  8965  0262  2A68               	goto	l998
  8966  0263                     l5985:	
  8967  0263  0020               	movlb	0	; select bank0
  8968  0264  084C               	movf	processGestureData@lr_delta+1,w
  8969  0265  00BC               	movwf	_processGestureData$1402+1
  8970  0266  084B               	movf	processGestureData@lr_delta,w
  8971  0267  00BB               	movwf	_processGestureData$1402
  8972  0268                     l998:	
  8973  0268  083C               	movf	_processGestureData$1402+1,w
  8974  0269  3A80               	xorlw	128
  8975  026A  00AF               	movwf	??_processGestureData
  8976  026B  3080               	movlw	128
  8977  026C  022F               	subwf	??_processGestureData,w
  8978  026D  1D03               	skipz
  8979  026E  2A71               	goto	u4675
  8980  026F  3014               	movlw	20
  8981  0270  023B               	subwf	_processGestureData$1402,w
  8982  0271                     u4675:	
  8983  0271  1803               	skipnc
  8984  0272  2873               	goto	l5887
  8985                           
  8986                           ;APDS9960.c: 757: ;APDS9960.c: 759:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  8987  0273  0020               	movlb	0	; select bank0
  8988  0274  0849               	movf	processGestureData@ud_delta,w
  8989  0275  044A               	iorwf	processGestureData@ud_delta+1,w
  8990  0276  1D03               	btfss	3,2
  8991  0277  2A81               	goto	l5993
  8992  0278  084B               	movf	processGestureData@lr_delta,w
  8993  0279  044C               	iorwf	processGestureData@lr_delta+1,w
  8994  027A  1D03               	btfss	3,2
  8995  027B  2A81               	goto	l5993
  8996                           
  8997                           ;APDS9960.c: 760:                 gesture_near_count_++;
  8998  027C  3001               	movlw	1
  8999  027D  07E0               	addwf	_gesture_near_count_,f
  9000  027E  3000               	movlw	0
  9001  027F  3DE1               	addwfc	_gesture_near_count_+1,f
  9002                           
  9003                           ;APDS9960.c: 761:             } else if( (ud_delta != 0) || (lr_delta != 0) ) {
  9004  0280  2A8E               	goto	l1000
  9005  0281                     l5993:	
  9006  0281  0849               	movf	processGestureData@ud_delta,w
  9007  0282  044A               	iorwf	processGestureData@ud_delta+1,w
  9008  0283  1D03               	btfss	3,2
  9009  0284  2A89               	goto	l5997
  9010  0285  084B               	movf	processGestureData@lr_delta,w
  9011  0286  044C               	iorwf	processGestureData@lr_delta+1,w
  9012  0287  1903               	btfsc	3,2
  9013  0288  2A8E               	goto	l1000
  9014  0289                     l5997:	
  9015                           
  9016                           ;APDS9960.c: 762:                 gesture_far_count_++;
  9017  0289  3001               	movlw	1
  9018  028A  0021               	movlb	1	; select bank1
  9019  028B  07E2               	addwf	_gesture_far_count_^(0+128),f
  9020  028C  3000               	movlw	0
  9021  028D  3DE3               	addwfc	(_gesture_far_count_+1)^(0+128),f
  9022  028E                     l1000:	
  9023                           
  9024                           ;APDS9960.c: 765:             if( (gesture_near_count_ >= 10) && (gesture_far_count_ >= 
      +                          2) ) {
  9025  028E  0020               	movlb	0	; select bank0
  9026  028F  0861               	movf	_gesture_near_count_+1,w
  9027  0290  3A80               	xorlw	128
  9028  0291  00AF               	movwf	??_processGestureData
  9029  0292  3080               	movlw	128
  9030  0293  022F               	subwf	??_processGestureData,w
  9031  0294  1D03               	skipz
  9032  0295  2A98               	goto	u4725
  9033  0296  300A               	movlw	10
  9034  0297  0260               	subwf	_gesture_near_count_,w
  9035  0298                     u4725:	
  9036  0298  1C03               	skipc
  9037  0299  2873               	goto	l5887
  9038  029A  0021               	movlb	1	; select bank1
  9039  029B  0863               	movf	(_gesture_far_count_+1)^(0+128),w
  9040  029C  3A80               	xorlw	128
  9041  029D  0020               	movlb	0	; select bank0
  9042  029E  00AF               	movwf	??_processGestureData
  9043  029F  3080               	movlw	128
  9044  02A0  022F               	subwf	??_processGestureData,w
  9045  02A1  1D03               	skipz
  9046  02A2  2AA6               	goto	u4735
  9047  02A3  3002               	movlw	2
  9048  02A4  0021               	movlb	1	; select bank1
  9049  02A5  0262               	subwf	_gesture_far_count_^(0+128),w
  9050  02A6                     u4735:	
  9051  02A6  1C03               	skipc
  9052  02A7  2873               	goto	l5887
  9053                           
  9054                           ;APDS9960.c: 766:                 if( (ud_delta == 0) && (lr_delta == 0) ) {
  9055  02A8  0020               	movlb	0	; select bank0
  9056  02A9  0849               	movf	processGestureData@ud_delta,w
  9057  02AA  044A               	iorwf	processGestureData@ud_delta+1,w
  9058  02AB  1D03               	btfss	3,2
  9059  02AC  2AB3               	goto	l6007
  9060  02AD  084B               	movf	processGestureData@lr_delta,w
  9061  02AE  044C               	iorwf	processGestureData@lr_delta+1,w
  9062  02AF  1D03               	btfss	3,2
  9063  02B0  2AB3               	goto	l6007
  9064                           
  9065                           ;APDS9960.c: 767:                     gesture_state_ = NEAR_STATE;
  9066  02B1  3001               	movlw	1
  9067  02B2  2ABC               	goto	L4
  9068  02B3                     l6007:	
  9069                           ;APDS9960.c: 768:                 } else if( (ud_delta != 0) && (lr_delta != 0) ) {
  9070                           
  9071  02B3  0849               	movf	processGestureData@ud_delta,w
  9072  02B4  044A               	iorwf	processGestureData@ud_delta+1,w
  9073  02B5  1903               	btfsc	3,2
  9074  02B6  2ABF               	goto	l1006
  9075  02B7  084B               	movf	processGestureData@lr_delta,w
  9076  02B8  044C               	iorwf	processGestureData@lr_delta+1,w
  9077  02B9  1903               	btfsc	3,2
  9078  02BA  2ABF               	goto	l1006
  9079                           
  9080                           ;APDS9960.c: 769:                     gesture_state_ = FAR_STATE;
  9081  02BB  3002               	movlw	2
  9082  02BC                     L4:	
  9083  02BC  00DE               	movwf	_gesture_state_
  9084  02BD  3000               	movlw	0
  9085  02BE  00DF               	movwf	_gesture_state_+1
  9086  02BF                     l1006:	
  9087                           
  9088                           ;APDS9960.c: 771:                 return 1;
  9089  02BF  3001               	movlw	1
  9090  02C0  0008               	return
  9091  02C1                     l6015:	
  9092                           
  9093                           ;APDS9960.c: 775:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  9094  02C1  084A               	movf	processGestureData@ud_delta+1,w
  9095  02C2  3A80               	xorlw	128
  9096  02C3  00AF               	movwf	??_processGestureData
  9097  02C4  3080               	movlw	128
  9098  02C5  022F               	subwf	??_processGestureData,w
  9099  02C6  1D03               	skipz
  9100  02C7  2ACA               	goto	u4785
  9101  02C8  3001               	movlw	1
  9102  02C9  0249               	subwf	processGestureData@ud_delta,w
  9103  02CA                     u4785:	
  9104  02CA  1803               	skipnc
  9105  02CB  2AD9               	goto	l6019
  9106  02CC  0020               	movlb	0	; select bank0
  9107  02CD  0949               	comf	processGestureData@ud_delta,w
  9108  02CE  00AF               	movwf	??_processGestureData
  9109  02CF  094A               	comf	processGestureData@ud_delta+1,w
  9110  02D0  00B0               	movwf	??_processGestureData+1
  9111  02D1  0AAF               	incf	??_processGestureData,f
  9112  02D2  1903               	skipnz
  9113  02D3  0AB0               	incf	??_processGestureData+1,f
  9114  02D4  082F               	movf	??_processGestureData,w
  9115  02D5  00BD               	movwf	_processGestureData$1403
  9116  02D6  0830               	movf	??_processGestureData+1,w
  9117  02D7  00BE               	movwf	_processGestureData$1403+1
  9118  02D8  2ADE               	goto	l1013
  9119  02D9                     l6019:	
  9120  02D9  0020               	movlb	0	; select bank0
  9121  02DA  084A               	movf	processGestureData@ud_delta+1,w
  9122  02DB  00BE               	movwf	_processGestureData$1403+1
  9123  02DC  0849               	movf	processGestureData@ud_delta,w
  9124  02DD  00BD               	movwf	_processGestureData$1403
  9125  02DE                     l1013:	
  9126  02DE  083E               	movf	_processGestureData$1403+1,w
  9127  02DF  3A80               	xorlw	128
  9128  02E0  00AF               	movwf	??_processGestureData
  9129  02E1  3080               	movlw	128
  9130  02E2  022F               	subwf	??_processGestureData,w
  9131  02E3  1D03               	skipz
  9132  02E4  2AE7               	goto	u4795
  9133  02E5  3014               	movlw	20
  9134  02E6  023D               	subwf	_processGestureData$1403,w
  9135  02E7                     u4795:	
  9136  02E7  1803               	skipnc
  9137  02E8  2873               	goto	l5887
  9138  02E9  0020               	movlb	0	; select bank0
  9139  02EA  084C               	movf	processGestureData@lr_delta+1,w
  9140  02EB  3A80               	xorlw	128
  9141  02EC  00AF               	movwf	??_processGestureData
  9142  02ED  3080               	movlw	128
  9143  02EE  022F               	subwf	??_processGestureData,w
  9144  02EF  1D03               	skipz
  9145  02F0  2AF3               	goto	u4805
  9146  02F1  3001               	movlw	1
  9147  02F2  024B               	subwf	processGestureData@lr_delta,w
  9148  02F3                     u4805:	
  9149  02F3  1803               	skipnc
  9150  02F4  2B02               	goto	l6025
  9151  02F5  0020               	movlb	0	; select bank0
  9152  02F6  094B               	comf	processGestureData@lr_delta,w
  9153  02F7  00AF               	movwf	??_processGestureData
  9154  02F8  094C               	comf	processGestureData@lr_delta+1,w
  9155  02F9  00B0               	movwf	??_processGestureData+1
  9156  02FA  0AAF               	incf	??_processGestureData,f
  9157  02FB  1903               	skipnz
  9158  02FC  0AB0               	incf	??_processGestureData+1,f
  9159  02FD  082F               	movf	??_processGestureData,w
  9160  02FE  00BF               	movwf	_processGestureData$1404
  9161  02FF  0830               	movf	??_processGestureData+1,w
  9162  0300  00C0               	movwf	_processGestureData$1404+1
  9163  0301  2B07               	goto	l1017
  9164  0302                     l6025:	
  9165  0302  0020               	movlb	0	; select bank0
  9166  0303  084C               	movf	processGestureData@lr_delta+1,w
  9167  0304  00C0               	movwf	_processGestureData$1404+1
  9168  0305  084B               	movf	processGestureData@lr_delta,w
  9169  0306  00BF               	movwf	_processGestureData$1404
  9170  0307                     l1017:	
  9171  0307  0840               	movf	_processGestureData$1404+1,w
  9172  0308  3A80               	xorlw	128
  9173  0309  00AF               	movwf	??_processGestureData
  9174  030A  3080               	movlw	128
  9175  030B  022F               	subwf	??_processGestureData,w
  9176  030C  1D03               	skipz
  9177  030D  2B10               	goto	u4815
  9178  030E  3014               	movlw	20
  9179  030F  023F               	subwf	_processGestureData$1404,w
  9180  0310                     u4815:	
  9181  0310  1803               	skipnc
  9182  0311  2873               	goto	l5887
  9183                           
  9184                           ;APDS9960.c: 776: ;APDS9960.c: 778:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  9185  0312  0020               	movlb	0	; select bank0
  9186  0313  0849               	movf	processGestureData@ud_delta,w
  9187  0314  044A               	iorwf	processGestureData@ud_delta+1,w
  9188  0315  1D03               	btfss	3,2
  9189  0316  2B1F               	goto	l1018
  9190  0317  084B               	movf	processGestureData@lr_delta,w
  9191  0318  044C               	iorwf	processGestureData@lr_delta+1,w
  9192  0319  1D03               	btfss	3,2
  9193  031A  2B1F               	goto	l1018
  9194                           
  9195                           ;APDS9960.c: 779:                 gesture_near_count_++;
  9196  031B  3001               	movlw	1
  9197  031C  07E0               	addwf	_gesture_near_count_,f
  9198  031D  3000               	movlw	0
  9199  031E  3DE1               	addwfc	_gesture_near_count_+1,f
  9200  031F                     l1018:	
  9201                           ;APDS9960.c: 780:             }
  9202                           
  9203                           
  9204                           ;APDS9960.c: 782:             if( gesture_near_count_ >= 10 ) {
  9205  031F  0861               	movf	_gesture_near_count_+1,w
  9206  0320  3A80               	xorlw	128
  9207  0321  00AF               	movwf	??_processGestureData
  9208  0322  3080               	movlw	128
  9209  0323  022F               	subwf	??_processGestureData,w
  9210  0324  1D03               	skipz
  9211  0325  2B28               	goto	u4845
  9212  0326  300A               	movlw	10
  9213  0327  0260               	subwf	_gesture_near_count_,w
  9214  0328                     u4845:	
  9215  0328  1C03               	skipc
  9216  0329  2873               	goto	l5887
  9217                           
  9218                           ;APDS9960.c: 783:                 gesture_ud_count_ = 0;
  9219  032A  0020               	movlb	0	; select bank0
  9220  032B  01E4               	clrf	_gesture_ud_count_
  9221  032C  01E5               	clrf	_gesture_ud_count_+1
  9222                           
  9223                           ;APDS9960.c: 784:                 gesture_lr_count_ = 0;
  9224  032D  01E2               	clrf	_gesture_lr_count_
  9225  032E  01E3               	clrf	_gesture_lr_count_+1
  9226                           
  9227                           ;APDS9960.c: 785:                 gesture_ud_delta_ = 0;
  9228  032F  01E8               	clrf	_gesture_ud_delta_
  9229  0330  01E9               	clrf	_gesture_ud_delta_+1
  9230                           
  9231                           ;APDS9960.c: 786:                 gesture_lr_delta_ = 0;
  9232  0331  01E6               	clrf	_gesture_lr_delta_
  9233  0332  01E7               	clrf	_gesture_lr_delta_+1
  9234  0333  2873               	goto	l5887
  9235  0334                     __end_of_processGestureData:	
  9236                           
  9237                           	psect	text19
  9238  0B91                     __ptext19:	
  9239 ;; *************** function ___wmul *****************
  9240 ;; Defined at:
  9241 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9244 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  product         2    4[BANK0 ] unsigned int 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  2    0[BANK0 ] unsigned int 
  9249 ;; Registers used:
  9250 ;;		wreg, status,2, status,0
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;Total ram usage:        6 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    5
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_processGestureData
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function ___wmul
  9272  0B91                     ___wmul:	
  9273                           
  9274                           ;incstack = 0
  9275                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9276  0B91  0020               	movlb	0	; select bank0
  9277  0B92  01A4               	clrf	___wmul@product
  9278  0B93  01A5               	clrf	___wmul@product+1
  9279  0B94                     l5727:	
  9280  0B94  1C20               	btfss	___wmul@multiplier,0
  9281  0B95  2B9A               	goto	l1397
  9282  0B96  0822               	movf	___wmul@multiplicand,w
  9283  0B97  07A4               	addwf	___wmul@product,f
  9284  0B98  0823               	movf	___wmul@multiplicand+1,w
  9285  0B99  3DA5               	addwfc	___wmul@product+1,f
  9286  0B9A                     l1397:	
  9287  0B9A  3001               	movlw	1
  9288  0B9B                     u4175:	
  9289  0B9B  35A2               	lslf	___wmul@multiplicand,f
  9290  0B9C  0DA3               	rlf	___wmul@multiplicand+1,f
  9291  0B9D  0B89               	decfsz	9,f
  9292  0B9E  2B9B               	goto	u4175
  9293  0B9F  3001               	movlw	1
  9294  0BA0                     u4185:	
  9295  0BA0  36A1               	lsrf	___wmul@multiplier+1,f
  9296  0BA1  0CA0               	rrf	___wmul@multiplier,f
  9297  0BA2  0B89               	decfsz	9,f
  9298  0BA3  2BA0               	goto	u4185
  9299  0BA4  0820               	movf	___wmul@multiplier,w
  9300  0BA5  0421               	iorwf	___wmul@multiplier+1,w
  9301  0BA6  1D03               	btfss	3,2
  9302  0BA7  2B94               	goto	l5727
  9303  0BA8  0825               	movf	___wmul@product+1,w
  9304  0BA9  00A1               	movwf	?___wmul+1
  9305  0BAA  0824               	movf	___wmul@product,w
  9306  0BAB  00A0               	movwf	?___wmul
  9307  0BAC  0008               	return
  9308  0BAD                     __end_of___wmul:	
  9309                           
  9310                           	psect	text20
  9311  079A                     __ptext20:	
  9312 ;; *************** function ___awdiv *****************
  9313 ;; Defined at:
  9314 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;  divisor         2    6[BANK0 ] int 
  9317 ;;  dividend        2    8[BANK0 ] int 
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;  quotient        2   13[BANK0 ] int 
  9320 ;;  sign            1   12[BANK0 ] unsigned char 
  9321 ;;  counter         1   11[BANK0 ] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  2    6[BANK0 ] int 
  9324 ;; Registers used:
  9325 ;;		wreg, status,2, status,0
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;Total ram usage:        9 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:    5
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_processGestureData
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           
  9346                           ;psect for function ___awdiv
  9347  079A                     ___awdiv:	
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9351  079A  0020               	movlb	0	; select bank0
  9352  079B  01AC               	clrf	___awdiv@sign
  9353  079C  1FA7               	btfss	___awdiv@divisor+1,7
  9354  079D  2FA5               	goto	l5747
  9355  079E  09A6               	comf	___awdiv@divisor,f
  9356  079F  09A7               	comf	___awdiv@divisor+1,f
  9357  07A0  0AA6               	incf	___awdiv@divisor,f
  9358  07A1  1903               	skipnz
  9359  07A2  0AA7               	incf	___awdiv@divisor+1,f
  9360  07A3  01AC               	clrf	___awdiv@sign
  9361  07A4  0AAC               	incf	___awdiv@sign,f
  9362  07A5                     l5747:	
  9363  07A5  1FA9               	btfss	___awdiv@dividend+1,7
  9364  07A6  2FB0               	goto	l5753
  9365  07A7  09A8               	comf	___awdiv@dividend,f
  9366  07A8  09A9               	comf	___awdiv@dividend+1,f
  9367  07A9  0AA8               	incf	___awdiv@dividend,f
  9368  07AA  1903               	skipnz
  9369  07AB  0AA9               	incf	___awdiv@dividend+1,f
  9370  07AC  3001               	movlw	1
  9371  07AD  00AA               	movwf	??___awdiv
  9372  07AE  082A               	movf	??___awdiv,w
  9373  07AF  06AC               	xorwf	___awdiv@sign,f
  9374  07B0                     l5753:	
  9375  07B0  01AD               	clrf	___awdiv@quotient
  9376  07B1  01AE               	clrf	___awdiv@quotient+1
  9377  07B2  0826               	movf	___awdiv@divisor,w
  9378  07B3  0427               	iorwf	___awdiv@divisor+1,w
  9379  07B4  1903               	btfsc	3,2
  9380  07B5  2FDF               	goto	l5775
  9381  07B6  01AB               	clrf	___awdiv@counter
  9382  07B7  0AAB               	incf	___awdiv@counter,f
  9383  07B8                     l5763:	
  9384  07B8  1BA7               	btfsc	___awdiv@divisor+1,7
  9385  07B9  2FC4               	goto	l5765
  9386  07BA  3001               	movlw	1
  9387  07BB                     u4235:	
  9388  07BB  35A6               	lslf	___awdiv@divisor,f
  9389  07BC  0DA7               	rlf	___awdiv@divisor+1,f
  9390  07BD  0B89               	decfsz	9,f
  9391  07BE  2FBB               	goto	u4235
  9392  07BF  3001               	movlw	1
  9393  07C0  00AA               	movwf	??___awdiv
  9394  07C1  082A               	movf	??___awdiv,w
  9395  07C2  07AB               	addwf	___awdiv@counter,f
  9396  07C3  2FB8               	goto	l5763
  9397  07C4                     l5765:	
  9398  07C4  3001               	movlw	1
  9399  07C5                     u4255:	
  9400  07C5  35AD               	lslf	___awdiv@quotient,f
  9401  07C6  0DAE               	rlf	___awdiv@quotient+1,f
  9402  07C7  0B89               	decfsz	9,f
  9403  07C8  2FC5               	goto	u4255
  9404  07C9  0827               	movf	___awdiv@divisor+1,w
  9405  07CA  0229               	subwf	___awdiv@dividend+1,w
  9406  07CB  1D03               	skipz
  9407  07CC  2FCF               	goto	u4265
  9408  07CD  0826               	movf	___awdiv@divisor,w
  9409  07CE  0228               	subwf	___awdiv@dividend,w
  9410  07CF                     u4265:	
  9411  07CF  1C03               	skipc
  9412  07D0  2FD6               	goto	l5771
  9413  07D1  0826               	movf	___awdiv@divisor,w
  9414  07D2  02A8               	subwf	___awdiv@dividend,f
  9415  07D3  0827               	movf	___awdiv@divisor+1,w
  9416  07D4  3BA9               	subwfb	___awdiv@dividend+1,f
  9417  07D5  142D               	bsf	___awdiv@quotient,0
  9418  07D6                     l5771:	
  9419  07D6  3001               	movlw	1
  9420  07D7                     u4275:	
  9421  07D7  36A7               	lsrf	___awdiv@divisor+1,f
  9422  07D8  0CA6               	rrf	___awdiv@divisor,f
  9423  07D9  0B89               	decfsz	9,f
  9424  07DA  2FD7               	goto	u4275
  9425  07DB  3001               	movlw	1
  9426  07DC  02AB               	subwf	___awdiv@counter,f
  9427  07DD  1D03               	btfss	3,2
  9428  07DE  2FC4               	goto	l5765
  9429  07DF                     l5775:	
  9430  07DF  082C               	movf	___awdiv@sign,w
  9431  07E0  1903               	btfsc	3,2
  9432  07E1  2FE7               	goto	l5779
  9433  07E2  09AD               	comf	___awdiv@quotient,f
  9434  07E3  09AE               	comf	___awdiv@quotient+1,f
  9435  07E4  0AAD               	incf	___awdiv@quotient,f
  9436  07E5  1903               	skipnz
  9437  07E6  0AAE               	incf	___awdiv@quotient+1,f
  9438  07E7                     l5779:	
  9439  07E7  082E               	movf	___awdiv@quotient+1,w
  9440  07E8  00A7               	movwf	?___awdiv+1
  9441  07E9  082D               	movf	___awdiv@quotient,w
  9442  07EA  00A6               	movwf	?___awdiv
  9443  07EB  0008               	return
  9444  07EC                     __end_of___awdiv:	
  9445                           
  9446                           	psect	text21
  9447  0AB1                     __ptext21:	
  9448 ;; *************** function _isGestureAvailable *****************
  9449 ;; Defined at:
  9450 ;;		line 537 in file "APDS9960.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  val             1   10[BANK0 ] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      _Bool 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0, pclath, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;Total ram usage:        2 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    8
  9471 ;; This function calls:
  9472 ;;		_wireReadDataByte
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;;		_readGesture
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _isGestureAvailable
  9481  0AB1                     _isGestureAvailable:	
  9482                           
  9483                           ;APDS9960.c: 539:     uint8_t val;;APDS9960.c: 542:     val=wireReadDataByte(0xAF);
  9484                           
  9485                           ;incstack = 0
  9486                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
  9487  0AB1  30AF               	movlw	175
  9488  0AB2  318B  23CB  318A   	fcall	_wireReadDataByte
  9489  0AB5  0020               	movlb	0	; select bank0
  9490  0AB6  00A9               	movwf	??_isGestureAvailable
  9491  0AB7  0829               	movf	??_isGestureAvailable,w
  9492  0AB8  00AA               	movwf	isGestureAvailable@val
  9493                           
  9494                           ;APDS9960.c: 545:     val &= 0b00000001;
  9495  0AB9  3001               	movlw	1
  9496  0ABA  00A9               	movwf	??_isGestureAvailable
  9497  0ABB  0829               	movf	??_isGestureAvailable,w
  9498  0ABC  05AA               	andwf	isGestureAvailable@val,f
  9499                           
  9500                           ;APDS9960.c: 548:     if( val == 1) {
  9501  0ABD  032A               	decf	isGestureAvailable@val,w
  9502  0ABE  1D03               	btfss	3,2
  9503  0ABF  2AC2               	goto	l5797
  9504                           
  9505                           ;APDS9960.c: 549:         return 1;
  9506  0AC0  3001               	movlw	1
  9507  0AC1  0008               	return
  9508  0AC2                     l5797:	
  9509                           
  9510                           ;APDS9960.c: 551:         return 0;
  9511  0AC2  3000               	movlw	0
  9512  0AC3  0008               	return
  9513  0AC4                     __end_of_isGestureAvailable:	
  9514                           
  9515                           	psect	text22
  9516  0334                     __ptext22:	
  9517 ;; *************** function _decodeGesture *****************
  9518 ;; Defined at:
  9519 ;;		line 795 in file "APDS9960.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;		None
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      _Bool 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2, status,0
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;Total ram usage:       18 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; Hardware stack levels required when called:    5
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_readGesture
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           
  9548                           ;psect for function _decodeGesture
  9549  0334                     _decodeGesture:	
  9550                           
  9551                           ;APDS9960.c: 798:     if( gesture_state_ == NEAR_STATE ) {
  9552                           
  9553                           ;incstack = 0
  9554                           ; Regs used in _decodeGesture: [wreg+status,2+status,0]
  9555  0334  0020               	movlb	0	; select bank0
  9556  0335  035E               	decf	_gesture_state_,w
  9557  0336  045F               	iorwf	_gesture_state_+1,w
  9558  0337  1D03               	btfss	3,2
  9559  0338  2B40               	goto	l6047
  9560                           
  9561                           ;APDS9960.c: 799:         gesture_motion_ = DIR_NEAR;
  9562  0339  3005               	movlw	5
  9563  033A  0022               	movlb	2	; select bank2
  9564  033B  00E8               	movwf	_gesture_motion_^(0+256)
  9565  033C  3000               	movlw	0
  9566  033D  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9567                           
  9568                           ;APDS9960.c: 800:         return 1;
  9569  033E  3001               	movlw	1
  9570  033F  0008               	return
  9571  0340                     l6047:	
  9572  0340  3002               	movlw	2
  9573  0341  065E               	xorwf	_gesture_state_,w
  9574  0342  045F               	iorwf	_gesture_state_+1,w
  9575  0343  1D03               	btfss	3,2
  9576  0344  2B4C               	goto	l6053
  9577                           
  9578                           ;APDS9960.c: 802:         gesture_motion_ = DIR_FAR;
  9579  0345  3006               	movlw	6
  9580  0346  0022               	movlb	2	; select bank2
  9581  0347  00E8               	movwf	_gesture_motion_^(0+256)
  9582  0348  3000               	movlw	0
  9583  0349  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9584                           
  9585                           ;APDS9960.c: 803:         return 1;
  9586  034A  3001               	movlw	1
  9587  034B  0008               	return
  9588  034C                     l6053:	
  9589                           
  9590                           ;APDS9960.c: 807:     if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 0) ) {
  9591  034C  0A64               	incf	_gesture_ud_count_,w
  9592  034D  1D03               	skipz
  9593  034E  2B58               	goto	l6059
  9594  034F  0A65               	incf	_gesture_ud_count_+1,w
  9595  0350  1D03               	btfss	3,2
  9596  0351  2B58               	goto	l6059
  9597  0352  0862               	movf	_gesture_lr_count_,w
  9598  0353  0463               	iorwf	_gesture_lr_count_+1,w
  9599  0354  1D03               	btfss	3,2
  9600  0355  2B58               	goto	l6059
  9601  0356                     l6057:	
  9602                           
  9603                           ;APDS9960.c: 808:         gesture_motion_ = DIR_UP;
  9604  0356  3003               	movlw	3
  9605  0357  2B77               	goto	L7
  9606  0358                     l6059:	
  9607                           ;APDS9960.c: 809:     } else if( (gesture_ud_count_ == 1) && (gesture_lr_count_ == 0) ) 
      +                          {
  9608                           
  9609  0358  0364               	decf	_gesture_ud_count_,w
  9610  0359  0465               	iorwf	_gesture_ud_count_+1,w
  9611  035A  1D03               	btfss	3,2
  9612  035B  2B62               	goto	l6065
  9613  035C  0862               	movf	_gesture_lr_count_,w
  9614  035D  0463               	iorwf	_gesture_lr_count_+1,w
  9615  035E  1D03               	btfss	3,2
  9616  035F  2B62               	goto	l6065
  9617  0360                     l6063:	
  9618                           
  9619                           ;APDS9960.c: 810:         gesture_motion_ = DIR_DOWN;
  9620  0360  3004               	movlw	4
  9621  0361  2B77               	goto	L7
  9622  0362                     l6065:	
  9623                           ;APDS9960.c: 811:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 1) ) 
      +                          {
  9624                           
  9625  0362  0864               	movf	_gesture_ud_count_,w
  9626  0363  0465               	iorwf	_gesture_ud_count_+1,w
  9627  0364  1D03               	btfss	3,2
  9628  0365  2B6C               	goto	l6071
  9629  0366  0362               	decf	_gesture_lr_count_,w
  9630  0367  0463               	iorwf	_gesture_lr_count_+1,w
  9631  0368  1D03               	btfss	3,2
  9632  0369  2B6C               	goto	l6071
  9633  036A                     l6069:	
  9634                           
  9635                           ;APDS9960.c: 812:         gesture_motion_ = DIR_RIGHT;
  9636  036A  3002               	movlw	2
  9637  036B  2B77               	goto	L7
  9638  036C                     l6071:	
  9639                           ;APDS9960.c: 813:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == -1) )
      +                           {
  9640                           
  9641  036C  0864               	movf	_gesture_ud_count_,w
  9642  036D  0465               	iorwf	_gesture_ud_count_+1,w
  9643  036E  1D03               	btfss	3,2
  9644  036F  2B7C               	goto	l6077
  9645  0370  0A62               	incf	_gesture_lr_count_,w
  9646  0371  1D03               	skipz
  9647  0372  2B7C               	goto	l6077
  9648  0373  0A63               	incf	_gesture_lr_count_+1,w
  9649  0374  1D03               	btfss	3,2
  9650  0375  2B7C               	goto	l6077
  9651  0376                     l6075:	
  9652                           
  9653                           ;APDS9960.c: 814:         gesture_motion_ = DIR_LEFT;
  9654  0376  3001               	movlw	1
  9655  0377                     L7:	
  9656  0377  0022               	movlb	2	; select bank2
  9657  0378  00E8               	movwf	_gesture_motion_^(0+256)
  9658  0379  3000               	movlw	0
  9659  037A  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9660                           
  9661                           ;APDS9960.c: 815:     } else if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 1) )
      +                           {
  9662  037B  2CC2               	goto	l6153
  9663  037C                     l6077:	
  9664  037C  0A64               	incf	_gesture_ud_count_,w
  9665  037D  1D03               	skipz
  9666  037E  2BCD               	goto	l6095
  9667  037F  0A65               	incf	_gesture_ud_count_+1,w
  9668  0380  1D03               	btfss	3,2
  9669  0381  2BCD               	goto	l6095
  9670  0382  0362               	decf	_gesture_lr_count_,w
  9671  0383  0463               	iorwf	_gesture_lr_count_+1,w
  9672  0384  1D03               	btfss	3,2
  9673  0385  2BCD               	goto	l6095
  9674                           
  9675                           ;APDS9960.c: 816:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9676  0386  0869               	movf	_gesture_ud_delta_+1,w
  9677  0387  3A80               	xorlw	128
  9678  0388  00A0               	movwf	??_decodeGesture
  9679  0389  3080               	movlw	128
  9680  038A  0220               	subwf	??_decodeGesture,w
  9681  038B  1D03               	skipz
  9682  038C  2B8F               	goto	u4975
  9683  038D  3001               	movlw	1
  9684  038E  0268               	subwf	_gesture_ud_delta_,w
  9685  038F                     u4975:	
  9686  038F  1803               	skipnc
  9687  0390  2B9E               	goto	l6085
  9688  0391  0020               	movlb	0	; select bank0
  9689  0392  0968               	comf	_gesture_ud_delta_,w
  9690  0393  00A0               	movwf	??_decodeGesture
  9691  0394  0969               	comf	_gesture_ud_delta_+1,w
  9692  0395  00A1               	movwf	??_decodeGesture+1
  9693  0396  0AA0               	incf	??_decodeGesture,f
  9694  0397  1903               	skipnz
  9695  0398  0AA1               	incf	??_decodeGesture+1,f
  9696  0399  0820               	movf	??_decodeGesture,w
  9697  039A  00A2               	movwf	_decodeGesture$1406
  9698  039B  0821               	movf	??_decodeGesture+1,w
  9699  039C  00A3               	movwf	_decodeGesture$1406+1
  9700  039D  2BA3               	goto	l1039
  9701  039E                     l6085:	
  9702  039E  0020               	movlb	0	; select bank0
  9703  039F  0869               	movf	_gesture_ud_delta_+1,w
  9704  03A0  00A3               	movwf	_decodeGesture$1406+1
  9705  03A1  0868               	movf	_gesture_ud_delta_,w
  9706  03A2  00A2               	movwf	_decodeGesture$1406
  9707  03A3                     l1039:	
  9708  03A3  0867               	movf	_gesture_lr_delta_+1,w
  9709  03A4  3A80               	xorlw	128
  9710  03A5  00A0               	movwf	??_decodeGesture
  9711  03A6  3080               	movlw	128
  9712  03A7  0220               	subwf	??_decodeGesture,w
  9713  03A8  1D03               	skipz
  9714  03A9  2BAC               	goto	u4985
  9715  03AA  3001               	movlw	1
  9716  03AB  0266               	subwf	_gesture_lr_delta_,w
  9717  03AC                     u4985:	
  9718  03AC  1803               	skipnc
  9719  03AD  2BBB               	goto	l6089
  9720  03AE  0020               	movlb	0	; select bank0
  9721  03AF  0966               	comf	_gesture_lr_delta_,w
  9722  03B0  00A0               	movwf	??_decodeGesture
  9723  03B1  0967               	comf	_gesture_lr_delta_+1,w
  9724  03B2  00A1               	movwf	??_decodeGesture+1
  9725  03B3  0AA0               	incf	??_decodeGesture,f
  9726  03B4  1903               	skipnz
  9727  03B5  0AA1               	incf	??_decodeGesture+1,f
  9728  03B6  0820               	movf	??_decodeGesture,w
  9729  03B7  00A4               	movwf	_decodeGesture$1407
  9730  03B8  0821               	movf	??_decodeGesture+1,w
  9731  03B9  00A5               	movwf	_decodeGesture$1407+1
  9732  03BA  2BC0               	goto	l1043
  9733  03BB                     l6089:	
  9734  03BB  0020               	movlb	0	; select bank0
  9735  03BC  0867               	movf	_gesture_lr_delta_+1,w
  9736  03BD  00A5               	movwf	_decodeGesture$1407+1
  9737  03BE  0866               	movf	_gesture_lr_delta_,w
  9738  03BF  00A4               	movwf	_decodeGesture$1407
  9739  03C0                     l1043:	
  9740  03C0  0825               	movf	_decodeGesture$1407+1,w
  9741  03C1  3A80               	xorlw	128
  9742  03C2  00A0               	movwf	??_decodeGesture
  9743  03C3  0823               	movf	_decodeGesture$1406+1,w
  9744  03C4  3A80               	xorlw	128
  9745  03C5  0220               	subwf	??_decodeGesture,w
  9746  03C6  1D03               	skipz
  9747  03C7  2BCA               	goto	u4995
  9748  03C8  0822               	movf	_decodeGesture$1406,w
  9749  03C9  0224               	subwf	_decodeGesture$1407,w
  9750  03CA                     u4995:	
  9751  03CA  1C03               	btfss	3,0
  9752  03CB  2B56               	goto	l6057
  9753  03CC  2B6A               	goto	l6069
  9754  03CD                     l6095:	
  9755  03CD  0364               	decf	_gesture_ud_count_,w
  9756  03CE  0465               	iorwf	_gesture_ud_count_+1,w
  9757  03CF  1D03               	btfss	3,2
  9758  03D0  2C1E               	goto	l6113
  9759  03D1  0A62               	incf	_gesture_lr_count_,w
  9760  03D2  1D03               	skipz
  9761  03D3  2C1E               	goto	l6113
  9762  03D4  0A63               	incf	_gesture_lr_count_+1,w
  9763  03D5  1D03               	btfss	3,2
  9764  03D6  2C1E               	goto	l6113
  9765                           
  9766                           ;APDS9960.c: 822:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9767  03D7  0869               	movf	_gesture_ud_delta_+1,w
  9768  03D8  3A80               	xorlw	128
  9769  03D9  00A0               	movwf	??_decodeGesture
  9770  03DA  3080               	movlw	128
  9771  03DB  0220               	subwf	??_decodeGesture,w
  9772  03DC  1D03               	skipz
  9773  03DD  2BE0               	goto	u5025
  9774  03DE  3001               	movlw	1
  9775  03DF  0268               	subwf	_gesture_ud_delta_,w
  9776  03E0                     u5025:	
  9777  03E0  1803               	skipnc
  9778  03E1  2BEF               	goto	l6103
  9779  03E2  0020               	movlb	0	; select bank0
  9780  03E3  0968               	comf	_gesture_ud_delta_,w
  9781  03E4  00A0               	movwf	??_decodeGesture
  9782  03E5  0969               	comf	_gesture_ud_delta_+1,w
  9783  03E6  00A1               	movwf	??_decodeGesture+1
  9784  03E7  0AA0               	incf	??_decodeGesture,f
  9785  03E8  1903               	skipnz
  9786  03E9  0AA1               	incf	??_decodeGesture+1,f
  9787  03EA  0820               	movf	??_decodeGesture,w
  9788  03EB  00A6               	movwf	_decodeGesture$1408
  9789  03EC  0821               	movf	??_decodeGesture+1,w
  9790  03ED  00A7               	movwf	_decodeGesture$1408+1
  9791  03EE  2BF4               	goto	l1051
  9792  03EF                     l6103:	
  9793  03EF  0020               	movlb	0	; select bank0
  9794  03F0  0869               	movf	_gesture_ud_delta_+1,w
  9795  03F1  00A7               	movwf	_decodeGesture$1408+1
  9796  03F2  0868               	movf	_gesture_ud_delta_,w
  9797  03F3  00A6               	movwf	_decodeGesture$1408
  9798  03F4                     l1051:	
  9799  03F4  0867               	movf	_gesture_lr_delta_+1,w
  9800  03F5  3A80               	xorlw	128
  9801  03F6  00A0               	movwf	??_decodeGesture
  9802  03F7  3080               	movlw	128
  9803  03F8  0220               	subwf	??_decodeGesture,w
  9804  03F9  1D03               	skipz
  9805  03FA  2BFD               	goto	u5035
  9806  03FB  3001               	movlw	1
  9807  03FC  0266               	subwf	_gesture_lr_delta_,w
  9808  03FD                     u5035:	
  9809  03FD  1803               	skipnc
  9810  03FE  2C0C               	goto	l6107
  9811  03FF  0020               	movlb	0	; select bank0
  9812  0400  0966               	comf	_gesture_lr_delta_,w
  9813  0401  00A0               	movwf	??_decodeGesture
  9814  0402  0967               	comf	_gesture_lr_delta_+1,w
  9815  0403  00A1               	movwf	??_decodeGesture+1
  9816  0404  0AA0               	incf	??_decodeGesture,f
  9817  0405  1903               	skipnz
  9818  0406  0AA1               	incf	??_decodeGesture+1,f
  9819  0407  0820               	movf	??_decodeGesture,w
  9820  0408  00A8               	movwf	_decodeGesture$1409
  9821  0409  0821               	movf	??_decodeGesture+1,w
  9822  040A  00A9               	movwf	_decodeGesture$1409+1
  9823  040B  2C11               	goto	l1055
  9824  040C                     l6107:	
  9825  040C  0020               	movlb	0	; select bank0
  9826  040D  0867               	movf	_gesture_lr_delta_+1,w
  9827  040E  00A9               	movwf	_decodeGesture$1409+1
  9828  040F  0866               	movf	_gesture_lr_delta_,w
  9829  0410  00A8               	movwf	_decodeGesture$1409
  9830  0411                     l1055:	
  9831  0411  0829               	movf	_decodeGesture$1409+1,w
  9832  0412  3A80               	xorlw	128
  9833  0413  00A0               	movwf	??_decodeGesture
  9834  0414  0827               	movf	_decodeGesture$1408+1,w
  9835  0415  3A80               	xorlw	128
  9836  0416  0220               	subwf	??_decodeGesture,w
  9837  0417  1D03               	skipz
  9838  0418  2C1B               	goto	u5045
  9839  0419  0826               	movf	_decodeGesture$1408,w
  9840  041A  0228               	subwf	_decodeGesture$1409,w
  9841  041B                     u5045:	
  9842  041B  1C03               	btfss	3,0
  9843  041C  2B60               	goto	l6063
  9844  041D  2B76               	goto	l6075
  9845  041E                     l6113:	
  9846  041E  0A64               	incf	_gesture_ud_count_,w
  9847  041F  1D03               	skipz
  9848  0420  2C71               	goto	l6131
  9849  0421  0A65               	incf	_gesture_ud_count_+1,w
  9850  0422  1D03               	btfss	3,2
  9851  0423  2C71               	goto	l6131
  9852  0424  0A62               	incf	_gesture_lr_count_,w
  9853  0425  1D03               	skipz
  9854  0426  2C71               	goto	l6131
  9855  0427  0A63               	incf	_gesture_lr_count_+1,w
  9856  0428  1D03               	btfss	3,2
  9857  0429  2C71               	goto	l6131
  9858                           
  9859                           ;APDS9960.c: 828:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9860  042A  0869               	movf	_gesture_ud_delta_+1,w
  9861  042B  3A80               	xorlw	128
  9862  042C  00A0               	movwf	??_decodeGesture
  9863  042D  3080               	movlw	128
  9864  042E  0220               	subwf	??_decodeGesture,w
  9865  042F  1D03               	skipz
  9866  0430  2C33               	goto	u5075
  9867  0431  3001               	movlw	1
  9868  0432  0268               	subwf	_gesture_ud_delta_,w
  9869  0433                     u5075:	
  9870  0433  1803               	skipnc
  9871  0434  2C42               	goto	l6121
  9872  0435  0020               	movlb	0	; select bank0
  9873  0436  0968               	comf	_gesture_ud_delta_,w
  9874  0437  00A0               	movwf	??_decodeGesture
  9875  0438  0969               	comf	_gesture_ud_delta_+1,w
  9876  0439  00A1               	movwf	??_decodeGesture+1
  9877  043A  0AA0               	incf	??_decodeGesture,f
  9878  043B  1903               	skipnz
  9879  043C  0AA1               	incf	??_decodeGesture+1,f
  9880  043D  0820               	movf	??_decodeGesture,w
  9881  043E  00AA               	movwf	_decodeGesture$1410
  9882  043F  0821               	movf	??_decodeGesture+1,w
  9883  0440  00AB               	movwf	_decodeGesture$1410+1
  9884  0441  2C47               	goto	l1063
  9885  0442                     l6121:	
  9886  0442  0020               	movlb	0	; select bank0
  9887  0443  0869               	movf	_gesture_ud_delta_+1,w
  9888  0444  00AB               	movwf	_decodeGesture$1410+1
  9889  0445  0868               	movf	_gesture_ud_delta_,w
  9890  0446  00AA               	movwf	_decodeGesture$1410
  9891  0447                     l1063:	
  9892  0447  0867               	movf	_gesture_lr_delta_+1,w
  9893  0448  3A80               	xorlw	128
  9894  0449  00A0               	movwf	??_decodeGesture
  9895  044A  3080               	movlw	128
  9896  044B  0220               	subwf	??_decodeGesture,w
  9897  044C  1D03               	skipz
  9898  044D  2C50               	goto	u5085
  9899  044E  3001               	movlw	1
  9900  044F  0266               	subwf	_gesture_lr_delta_,w
  9901  0450                     u5085:	
  9902  0450  1803               	skipnc
  9903  0451  2C5F               	goto	l6125
  9904  0452  0020               	movlb	0	; select bank0
  9905  0453  0966               	comf	_gesture_lr_delta_,w
  9906  0454  00A0               	movwf	??_decodeGesture
  9907  0455  0967               	comf	_gesture_lr_delta_+1,w
  9908  0456  00A1               	movwf	??_decodeGesture+1
  9909  0457  0AA0               	incf	??_decodeGesture,f
  9910  0458  1903               	skipnz
  9911  0459  0AA1               	incf	??_decodeGesture+1,f
  9912  045A  0820               	movf	??_decodeGesture,w
  9913  045B  00AC               	movwf	_decodeGesture$1411
  9914  045C  0821               	movf	??_decodeGesture+1,w
  9915  045D  00AD               	movwf	_decodeGesture$1411+1
  9916  045E  2C64               	goto	l1067
  9917  045F                     l6125:	
  9918  045F  0020               	movlb	0	; select bank0
  9919  0460  0867               	movf	_gesture_lr_delta_+1,w
  9920  0461  00AD               	movwf	_decodeGesture$1411+1
  9921  0462  0866               	movf	_gesture_lr_delta_,w
  9922  0463  00AC               	movwf	_decodeGesture$1411
  9923  0464                     l1067:	
  9924  0464  082D               	movf	_decodeGesture$1411+1,w
  9925  0465  3A80               	xorlw	128
  9926  0466  00A0               	movwf	??_decodeGesture
  9927  0467  082B               	movf	_decodeGesture$1410+1,w
  9928  0468  3A80               	xorlw	128
  9929  0469  0220               	subwf	??_decodeGesture,w
  9930  046A  1D03               	skipz
  9931  046B  2C6E               	goto	u5095
  9932  046C  082A               	movf	_decodeGesture$1410,w
  9933  046D  022C               	subwf	_decodeGesture$1411,w
  9934  046E                     u5095:	
  9935  046E  1C03               	btfss	3,0
  9936  046F  2B56               	goto	l6057
  9937  0470  2B76               	goto	l6075
  9938  0471                     l6131:	
  9939  0471  0364               	decf	_gesture_ud_count_,w
  9940  0472  0465               	iorwf	_gesture_ud_count_+1,w
  9941  0473  1D03               	btfss	3,2
  9942  0474  2CC0               	goto	l6149
  9943  0475  0362               	decf	_gesture_lr_count_,w
  9944  0476  0463               	iorwf	_gesture_lr_count_+1,w
  9945  0477  1D03               	btfss	3,2
  9946  0478  2CC0               	goto	l6149
  9947                           
  9948                           ;APDS9960.c: 834:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9949  0479  0869               	movf	_gesture_ud_delta_+1,w
  9950  047A  3A80               	xorlw	128
  9951  047B  00A0               	movwf	??_decodeGesture
  9952  047C  3080               	movlw	128
  9953  047D  0220               	subwf	??_decodeGesture,w
  9954  047E  1D03               	skipz
  9955  047F  2C82               	goto	u5125
  9956  0480  3001               	movlw	1
  9957  0481  0268               	subwf	_gesture_ud_delta_,w
  9958  0482                     u5125:	
  9959  0482  1803               	skipnc
  9960  0483  2C91               	goto	l6139
  9961  0484  0020               	movlb	0	; select bank0
  9962  0485  0968               	comf	_gesture_ud_delta_,w
  9963  0486  00A0               	movwf	??_decodeGesture
  9964  0487  0969               	comf	_gesture_ud_delta_+1,w
  9965  0488  00A1               	movwf	??_decodeGesture+1
  9966  0489  0AA0               	incf	??_decodeGesture,f
  9967  048A  1903               	skipnz
  9968  048B  0AA1               	incf	??_decodeGesture+1,f
  9969  048C  0820               	movf	??_decodeGesture,w
  9970  048D  00AE               	movwf	_decodeGesture$1412
  9971  048E  0821               	movf	??_decodeGesture+1,w
  9972  048F  00AF               	movwf	_decodeGesture$1412+1
  9973  0490  2C96               	goto	l1075
  9974  0491                     l6139:	
  9975  0491  0020               	movlb	0	; select bank0
  9976  0492  0869               	movf	_gesture_ud_delta_+1,w
  9977  0493  00AF               	movwf	_decodeGesture$1412+1
  9978  0494  0868               	movf	_gesture_ud_delta_,w
  9979  0495  00AE               	movwf	_decodeGesture$1412
  9980  0496                     l1075:	
  9981  0496  0867               	movf	_gesture_lr_delta_+1,w
  9982  0497  3A80               	xorlw	128
  9983  0498  00A0               	movwf	??_decodeGesture
  9984  0499  3080               	movlw	128
  9985  049A  0220               	subwf	??_decodeGesture,w
  9986  049B  1D03               	skipz
  9987  049C  2C9F               	goto	u5135
  9988  049D  3001               	movlw	1
  9989  049E  0266               	subwf	_gesture_lr_delta_,w
  9990  049F                     u5135:	
  9991  049F  1803               	skipnc
  9992  04A0  2CAE               	goto	l6143
  9993  04A1  0020               	movlb	0	; select bank0
  9994  04A2  0966               	comf	_gesture_lr_delta_,w
  9995  04A3  00A0               	movwf	??_decodeGesture
  9996  04A4  0967               	comf	_gesture_lr_delta_+1,w
  9997  04A5  00A1               	movwf	??_decodeGesture+1
  9998  04A6  0AA0               	incf	??_decodeGesture,f
  9999  04A7  1903               	skipnz
 10000  04A8  0AA1               	incf	??_decodeGesture+1,f
 10001  04A9  0820               	movf	??_decodeGesture,w
 10002  04AA  00B0               	movwf	_decodeGesture$1413
 10003  04AB  0821               	movf	??_decodeGesture+1,w
 10004  04AC  00B1               	movwf	_decodeGesture$1413+1
 10005  04AD  2CB3               	goto	l1079
 10006  04AE                     l6143:	
 10007  04AE  0020               	movlb	0	; select bank0
 10008  04AF  0867               	movf	_gesture_lr_delta_+1,w
 10009  04B0  00B1               	movwf	_decodeGesture$1413+1
 10010  04B1  0866               	movf	_gesture_lr_delta_,w
 10011  04B2  00B0               	movwf	_decodeGesture$1413
 10012  04B3                     l1079:	
 10013  04B3  0831               	movf	_decodeGesture$1413+1,w
 10014  04B4  3A80               	xorlw	128
 10015  04B5  00A0               	movwf	??_decodeGesture
 10016  04B6  082F               	movf	_decodeGesture$1412+1,w
 10017  04B7  3A80               	xorlw	128
 10018  04B8  0220               	subwf	??_decodeGesture,w
 10019  04B9  1D03               	skipz
 10020  04BA  2CBD               	goto	u5145
 10021  04BB  082E               	movf	_decodeGesture$1412,w
 10022  04BC  0230               	subwf	_decodeGesture$1413,w
 10023  04BD                     u5145:	
 10024  04BD  1C03               	btfss	3,0
 10025  04BE  2B60               	goto	l6063
 10026  04BF  2B6A               	goto	l6069
 10027  04C0                     l6149:	
 10028                           
 10029                           ;APDS9960.c: 840:         return 0;
 10030  04C0  3000               	movlw	0
 10031  04C1  0008               	return
 10032  04C2                     l6153:	
 10033                           
 10034                           ;APDS9960.c: 843:     return 1;
 10035  04C2  3001               	movlw	1
 10036  04C3  0008               	return
 10037  04C4                     __end_of_decodeGesture:	
 10038                           
 10039                           	psect	text23
 10040  09D4                     __ptext23:	
 10041 ;; *************** function _PWM_Output_Enable *****************
 10042 ;; Defined at:
 10043 ;;		line 273 in file "main.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;Total ram usage:        0 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    5
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_handleGesture
 10068 ;;		_PWM
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           
 10073                           ;psect for function _PWM_Output_Enable
 10074  09D4                     _PWM_Output_Enable:	
 10075                           
 10076                           ;main.c: 274:     RC7PPS = 0x0C;
 10077                           
 10078                           ;incstack = 0
 10079                           ; Regs used in _PWM_Output_Enable: [wreg]
 10080  09D4  300C               	movlw	12
 10081  09D5  003D               	movlb	29	; select bank29
 10082  09D6  00A7               	movwf	39	;volatile
 10083  09D7  0008               	return
 10084  09D8                     __end_of_PWM_Output_Enable:	
 10085                           
 10086                           	psect	text24
 10087  09A5                     __ptext24:	
 10088 ;; *************** function _PWM_Output_Disable *****************
 10089 ;; Defined at:
 10090 ;;		line 277 in file "main.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;		None
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		status,2
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;Total ram usage:        0 bytes
 10109 ;; Hardware stack levels used:    1
 10110 ;; Hardware stack levels required when called:    5
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_handleGesture
 10115 ;;		_PWM
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _PWM_Output_Disable
 10121  09A5                     _PWM_Output_Disable:	
 10122                           
 10123                           ;main.c: 278:     RC7PPS = 0x00;
 10124                           
 10125                           ;incstack = 0
 10126                           ; Regs used in _PWM_Output_Disable: [status,2]
 10127  09A5  003D               	movlb	29	; select bank29
 10128  09A6  01A7               	clrf	39	;volatile
 10129  09A7  0008               	return
 10130  09A8                     __end_of_PWM_Output_Disable:	
 10131                           
 10132                           	psect	text25
 10133  0E91                     __ptext25:	
 10134 ;; *************** function _Display_Name *****************
 10135 ;; Defined at:
 10136 ;;		line 216 in file "main.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  string1         2    5[BANK0 ] PTR unsigned char 
 10139 ;;		 -> STR_9(11), STR_8(16), STR_7(13), STR_6(12), 
 10140 ;;		 -> STR_5(6), STR_4(11), STR_3(16), STR_2(13), 
 10141 ;;		 -> STR_1(12), 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  i               2   10[BANK0 ] int 
 10144 ;;  length          2    8[BANK0 ] int 
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;Total ram usage:        7 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; Hardware stack levels required when called:    7
 10161 ;; This function calls:
 10162 ;;		_SPI_Write
 10163 ;;		_strlen
 10164 ;; This function is called by:
 10165 ;;		_main
 10166 ;;		_handleGesture
 10167 ;;		_Send_Names
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           
 10172                           ;psect for function _Display_Name
 10173  0E91                     _Display_Name:	
 10174                           
 10175                           ;main.c: 217:     int length;;main.c: 218:     int i;;main.c: 220:         SPI_Write(0xF
      +                          E);
 10176                           
 10177                           ;incstack = 0
 10178                           ; Regs used in _Display_Name: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10179  0E91  30FE               	movlw	254
 10180  0E92  318A  22FD  318E   	fcall	_SPI_Write
 10181                           
 10182                           ;main.c: 221:         _delay((unsigned long)((100)*(500000/4000.0)));
 10183  0E95  3011               	movlw	17
 10184  0E96  0020               	movlb	0	; select bank0
 10185  0E97  00A7               	movwf	??_Display_Name
 10186  0E98  303A               	movlw	58
 10187  0E99                     u5987:	
 10188  0E99  0B89               	decfsz	9,f
 10189  0E9A  2E99               	goto	u5987
 10190  0E9B  0BA7               	decfsz	??_Display_Name,f
 10191  0E9C  2E99               	goto	u5987
 10192  0E9D  0000               	nop
 10193                           
 10194                           ;main.c: 222:         SPI_Write(0x51);
 10195  0E9E  3051               	movlw	81
 10196  0E9F  318A  22FD  318E   	fcall	_SPI_Write
 10197                           
 10198                           ;main.c: 223:         length = strlen(string1);
 10199  0EA2  0020               	movlb	0	; select bank0
 10200  0EA3  0826               	movf	Display_Name@string1+1,w
 10201  0EA4  00A1               	movwf	strlen@s+1
 10202  0EA5  0825               	movf	Display_Name@string1,w
 10203  0EA6  00A0               	movwf	strlen@s
 10204  0EA7  318B  2342  318E   	fcall	_strlen
 10205  0EAA  0020               	movlb	0	; select bank0
 10206  0EAB  0821               	movf	?_strlen+1,w
 10207  0EAC  00A9               	movwf	Display_Name@length+1
 10208  0EAD  0820               	movf	?_strlen,w
 10209  0EAE  00A8               	movwf	Display_Name@length
 10210                           
 10211                           ;main.c: 224:         for(i = 0; i < length; i++){
 10212  0EAF  01AA               	clrf	Display_Name@i
 10213  0EB0  01AB               	clrf	Display_Name@i+1
 10214  0EB1                     l6279:	
 10215  0EB1  082B               	movf	Display_Name@i+1,w
 10216  0EB2  3A80               	xorlw	128
 10217  0EB3  00A7               	movwf	??_Display_Name
 10218  0EB4  0829               	movf	Display_Name@length+1,w
 10219  0EB5  3A80               	xorlw	128
 10220  0EB6  0227               	subwf	??_Display_Name,w
 10221  0EB7  1D03               	skipz
 10222  0EB8  2EBB               	goto	u5165
 10223  0EB9  0828               	movf	Display_Name@length,w
 10224  0EBA  022A               	subwf	Display_Name@i,w
 10225  0EBB                     u5165:	
 10226  0EBB  1803               	btfsc	3,0
 10227  0EBC  2ECE               	goto	l703
 10228                           
 10229                           ;main.c: 225:             SPI_Write(string1[i]);
 10230  0EBD  0020               	movlb	0	; select bank0
 10231  0EBE  0825               	movf	Display_Name@string1,w
 10232  0EBF  072A               	addwf	Display_Name@i,w
 10233  0EC0  0084               	movwf	4
 10234  0EC1  0826               	movf	Display_Name@string1+1,w
 10235  0EC2  3D2B               	addwfc	Display_Name@i+1,w
 10236  0EC3  0085               	movwf	5
 10237  0EC4  0800               	movf	0,w	;code access
 10238  0EC5  318A  22FD  318E   	fcall	_SPI_Write
 10239                           
 10240                           ;main.c: 226:         }
 10241  0EC8  3001               	movlw	1
 10242  0EC9  0020               	movlb	0	; select bank0
 10243  0ECA  07AA               	addwf	Display_Name@i,f
 10244  0ECB  3000               	movlw	0
 10245  0ECC  3DAB               	addwfc	Display_Name@i+1,f
 10246  0ECD  2EB1               	goto	l6279
 10247  0ECE                     l703:	
 10248                           
 10249                           ;main.c: 228:     printed = 1;
 10250  0ECE  0020               	movlb	0	; select bank0
 10251  0ECF  01EE               	clrf	_printed
 10252  0ED0  0AEE               	incf	_printed,f
 10253  0ED1  0008               	return
 10254  0ED2                     __end_of_Display_Name:	
 10255                           
 10256                           	psect	text26
 10257  0B42                     __ptext26:	
 10258 ;; *************** function _strlen *****************
 10259 ;; Defined at:
 10260 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10263 ;;		 -> STR_9(11), STR_8(16), STR_7(13), STR_6(12), 
 10264 ;;		 -> STR_5(6), STR_4(11), STR_3(16), STR_2(13), 
 10265 ;;		 -> STR_1(12), 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 10268 ;;		 -> STR_9(11), STR_8(16), STR_7(13), STR_6(12), 
 10269 ;;		 -> STR_5(6), STR_4(11), STR_3(16), STR_2(13), 
 10270 ;;		 -> STR_1(12), 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  2    0[BANK0 ] unsigned int 
 10273 ;; Registers used:
 10274 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10280 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;Total ram usage:        5 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    5
 10287 ;; This function calls:
 10288 ;;		Nothing
 10289 ;; This function is called by:
 10290 ;;		_Display_Name
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function _strlen
 10296  0B42                     _strlen:	
 10297                           
 10298                           ;incstack = 0
 10299                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10300  0B42  0020               	movlb	0	; select bank0
 10301  0B43  0821               	movf	strlen@s+1,w
 10302  0B44  00A4               	movwf	strlen@a+1
 10303  0B45  0820               	movf	strlen@s,w
 10304  0B46  00A3               	movwf	strlen@a
 10305  0B47                     l5811:	
 10306  0B47  0820               	movf	strlen@s,w
 10307  0B48  0084               	movwf	4
 10308  0B49  0821               	movf	strlen@s+1,w
 10309  0B4A  0085               	movwf	5
 10310  0B4B  0012               	moviw fsr0++
 10311  0B4C  1903               	btfsc	3,2
 10312  0B4D  2B53               	goto	l5813
 10313  0B4E  3001               	movlw	1
 10314  0B4F  07A0               	addwf	strlen@s,f
 10315  0B50  3000               	movlw	0
 10316  0B51  3DA1               	addwfc	strlen@s+1,f
 10317  0B52  2B47               	goto	l5811
 10318  0B53                     l5813:	
 10319  0B53  0823               	movf	strlen@a,w
 10320  0B54  0220               	subwf	strlen@s,w
 10321  0B55  00A0               	movwf	?_strlen
 10322  0B56  0824               	movf	strlen@a+1,w
 10323  0B57  3B21               	subwfb	strlen@s+1,w
 10324  0B58  00A1               	movwf	?_strlen+1
 10325  0B59  0008               	return
 10326  0B5A                     __end_of_strlen:	
 10327                           
 10328                           	psect	text27
 10329  0AFD                     __ptext27:	
 10330 ;; *************** function _SPI_Write *****************
 10331 ;; Defined at:
 10332 ;;		line 207 in file "main.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  incoming        1    wreg     unsigned char 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  incoming        1    2[BANK0 ] unsigned char 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg, status,2, status,0, pclath, cstack
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;Total ram usage:        2 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:    6
 10353 ;; This function calls:
 10354 ;;		_SPI2_Exchange8bit
 10355 ;; This function is called by:
 10356 ;;		_Display_Name
 10357 ;;		_Display_Clear
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           
 10362                           ;psect for function _SPI_Write
 10363  0AFD                     _SPI_Write:	
 10364                           
 10365                           ;incstack = 0
 10366                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
 10367                           ;SPI_Write@incoming stored from wreg
 10368  0AFD  0020               	movlb	0	; select bank0
 10369  0AFE  00A2               	movwf	SPI_Write@incoming
 10370                           
 10371                           ;main.c: 207: void SPI_Write(char incoming);main.c: 208: {;main.c: 209:     do { LATCbit
      +                          s.LATC1 = 0; } while(0);
 10372  0AFF  0022               	movlb	2	; select bank2
 10373  0B00  108E               	bcf	14,1	;volatile
 10374                           
 10375                           ;main.c: 210:     SPI2_Exchange8bit(incoming);
 10376  0B01  0020               	movlb	0	; select bank0
 10377  0B02  0822               	movf	SPI_Write@incoming,w
 10378  0B03  318A  22A2  318A   	fcall	_SPI2_Exchange8bit
 10379  0B06  0022               	movlb	2	; select bank2
 10380  0B07  148E               	bsf	14,1	;volatile
 10381                           
 10382                           ;main.c: 212:     _delay((unsigned long)((100)*(500000/4000.0)));
 10383  0B08  3011               	movlw	17
 10384  0B09  0020               	movlb	0	; select bank0
 10385  0B0A  00A1               	movwf	??_SPI_Write
 10386  0B0B  303A               	movlw	58
 10387  0B0C                     u5997:	
 10388  0B0C  0B89               	decfsz	9,f
 10389  0B0D  2B0C               	goto	u5997
 10390  0B0E  0BA1               	decfsz	??_SPI_Write,f
 10391  0B0F  2B0C               	goto	u5997
 10392  0B10  0000               	nop
 10393  0B11  0008               	return
 10394  0B12                     __end_of_SPI_Write:	
 10395                           
 10396                           	psect	text28
 10397  0AA2                     __ptext28:	
 10398 ;; *************** function _SPI2_Exchange8bit *****************
 10399 ;; Defined at:
 10400 ;;		line 79 in file "mcc_generated_files/spi2.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  data            1    wreg     unsigned char 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  data            1    0[BANK0 ] unsigned char 
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  1    wreg      unsigned char 
 10407 ;; Registers used:
 10408 ;;		wreg
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;Total ram usage:        1 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:    5
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_SPI_Write
 10425 ;;		_SPI2_Exchange8bitBuffer
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           
 10430                           ;psect for function _SPI2_Exchange8bit
 10431  0AA2                     _SPI2_Exchange8bit:	
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 10435                           ;SPI2_Exchange8bit@data stored from wreg
 10436  0AA2  0020               	movlb	0	; select bank0
 10437  0AA3  00A0               	movwf	SPI2_Exchange8bit@data
 10438                           
 10439                           ;mcc_generated_files/spi2.c: 79: uint8_t SPI2_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 80: {;mcc_generated_files/spi2.c: 82:     SSP2CON1bits.WCOL = 0;
 10440  0AA4  0024               	movlb	4	; select bank4
 10441  0AA5  139D               	bcf	29,7	;volatile
 10442                           
 10443                           ;mcc_generated_files/spi2.c: 84:     SSP2BUF = data;
 10444  0AA6  0020               	movlb	0	; select bank0
 10445  0AA7  0820               	movf	SPI2_Exchange8bit@data,w
 10446  0AA8  0024               	movlb	4	; select bank4
 10447  0AA9  0099               	movwf	25	;volatile
 10448  0AAA                     l557:	
 10449                           ;mcc_generated_files/spi2.c: 89:     }
 10450                           
 10451                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 10452                           
 10453                           
 10454                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 10455  0AAA  0024               	movlb	4	; select bank4
 10456  0AAB  181C               	btfsc	28,0	;volatile
 10457  0AAC  2AAF               	goto	l5701
 10458  0AAD  0064               	clrwdt	;# 
 10459  0AAE  2AAA               	goto	l557
 10460  0AAF                     l5701:	
 10461                           
 10462                           ;mcc_generated_files/spi2.c: 91:     return (SSP2BUF);
 10463  0AAF  0819               	movf	25,w	;volatile
 10464  0AB0  0008               	return
 10465  0AB1                     __end_of_SPI2_Exchange8bit:	
 10466                           
 10467                           	psect	text29
 10468  0736                     __ptext29:	
 10469 ;; *************** function _enableGestureSensor *****************
 10470 ;; Defined at:
 10471 ;;		line 409 in file "APDS9960.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  interrupts      1    wreg     _Bool 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  interrupts      1   17[BANK0 ] _Bool 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      _Bool 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0, pclath, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;Total ram usage:        2 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:   11
 10492 ;; This function calls:
 10493 ;;		_enablePower
 10494 ;;		_resetGestureParameters
 10495 ;;		_setGestureIntEnable
 10496 ;;		_setGestureMode
 10497 ;;		_setLEDBoost
 10498 ;;		_setMode
 10499 ;;		_wireWriteDataByte
 10500 ;; This function is called by:
 10501 ;;		_main
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _enableGestureSensor
 10507  0736                     _enableGestureSensor:	
 10508                           
 10509                           ;incstack = 0
 10510                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
 10511                           ;enableGestureSensor@interrupts stored from wreg
 10512  0736  0020               	movlb	0	; select bank0
 10513  0737  00B1               	movwf	enableGestureSensor@interrupts
 10514                           
 10515                           ;APDS9960.c: 409: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 410: {;APDS9
      +                          960.c: 418:     resetGestureParameters();
 10516  0738  318B  232A  3187   	fcall	_resetGestureParameters
 10517                           
 10518                           ;APDS9960.c: 419:     if( !wireWriteDataByte(0x83, 0xFF) ) {
 10519  073B  30FF               	movlw	255
 10520  073C  0020               	movlb	0	; select bank0
 10521  073D  00B0               	movwf	??_enableGestureSensor
 10522  073E  0830               	movf	??_enableGestureSensor,w
 10523  073F  00A6               	movwf	wireWriteDataByte@val
 10524  0740  3083               	movlw	131
 10525  0741  318B  235A  3187   	fcall	_wireWriteDataByte
 10526  0744  0020               	movlb	0	; select bank0
 10527  0745  0826               	movf	?_wireWriteDataByte,w
 10528  0746  0427               	iorwf	?_wireWriteDataByte+1,w
 10529  0747  1903               	btfsc	3,2
 10530  0748  2F4C               	goto	l6759
 10531  0749  2F4E               	goto	l6763
 10532  074A                     l6777:	
 10533                           
 10534                           ;APDS9960.c: 429:         if( !setGestureIntEnable(1) ) {
 10535  074A  3001               	movlw	1
 10536  074B  2F67               	goto	L8
 10537  074C                     l6759:	
 10538                           
 10539                           ;APDS9960.c: 420:         return 0;
 10540  074C  3000               	movlw	0
 10541  074D  0008               	return
 10542  074E                     l6763:	
 10543                           
 10544                           ;APDS9960.c: 422:     if( !wireWriteDataByte(0x8E, 0x89) ) {
 10545  074E  3089               	movlw	137
 10546  074F  00B0               	movwf	??_enableGestureSensor
 10547  0750  0830               	movf	??_enableGestureSensor,w
 10548  0751  00A6               	movwf	wireWriteDataByte@val
 10549  0752  308E               	movlw	142
 10550  0753  318B  235A  3187   	fcall	_wireWriteDataByte
 10551  0756  0020               	movlb	0	; select bank0
 10552  0757  0826               	movf	?_wireWriteDataByte,w
 10553  0758  0427               	iorwf	?_wireWriteDataByte+1,w
 10554  0759  1903               	btfsc	3,2
 10555  075A  2F4C               	goto	l6759
 10556                           
 10557                           ;APDS9960.c: 425:     if( !setLEDBoost(3) ) {
 10558  075B  3003               	movlw	3
 10559  075C  318D  25BA  3187   	fcall	_setLEDBoost
 10560  075F  3A00               	xorlw	0
 10561  0760  1903               	btfsc	3,2
 10562  0761  2F4C               	goto	l6759
 10563                           
 10564                           ;APDS9960.c: 428:     if( interrupts ) {
 10565  0762  0020               	movlb	0	; select bank0
 10566  0763  0831               	movf	enableGestureSensor@interrupts,w
 10567  0764  1D03               	btfss	3,2
 10568  0765  2F4A               	goto	l6777
 10569                           
 10570                           ;APDS9960.c: 433:         if( !setGestureIntEnable(0) ) {
 10571  0766  3000               	movlw	0
 10572  0767                     L8:	
 10573  0767  318D  252E  3187   	fcall	_setGestureIntEnable
 10574  076A  3A00               	xorlw	0
 10575  076B  1903               	btfsc	3,2
 10576  076C  2F4C               	goto	l6759
 10577                           
 10578                           ;APDS9960.c: 437:     if( !setGestureMode(1) ) {
 10579  076D  3001               	movlw	1
 10580  076E  318C  2415  3187   	fcall	_setGestureMode
 10581  0771  3A00               	xorlw	0
 10582  0772  1903               	btfsc	3,2
 10583  0773  2F4C               	goto	l6759
 10584                           
 10585                           ;APDS9960.c: 440:     if( !enablePower() ){
 10586  0774  318A  2294  3187   	fcall	_enablePower
 10587  0777  3A00               	xorlw	0
 10588  0778  1903               	btfsc	3,2
 10589  0779  2F4C               	goto	l6759
 10590                           
 10591                           ;APDS9960.c: 443:     if( !setMode(3, 1) ) {
 10592  077A  0020               	movlb	0	; select bank0
 10593  077B  01AB               	clrf	setMode@enable
 10594  077C  0AAB               	incf	setMode@enable,f
 10595  077D  3003               	movlw	3
 10596  077E  318F  27B1  3187   	fcall	_setMode
 10597  0781  3A00               	xorlw	0
 10598  0782  1903               	btfsc	3,2
 10599  0783  2F4C               	goto	l6759
 10600                           
 10601                           ;APDS9960.c: 446:     if( !setMode(2, 1) ) {
 10602  0784  0020               	movlb	0	; select bank0
 10603  0785  01AB               	clrf	setMode@enable
 10604  0786  0AAB               	incf	setMode@enable,f
 10605  0787  3002               	movlw	2
 10606  0788  318F  27B1  3187   	fcall	_setMode
 10607  078B  3A00               	xorlw	0
 10608  078C  1903               	btfsc	3,2
 10609  078D  2F4C               	goto	l6759
 10610                           
 10611                           ;APDS9960.c: 449:     if( !setMode(6, 1) ) {
 10612  078E  0020               	movlb	0	; select bank0
 10613  078F  01AB               	clrf	setMode@enable
 10614  0790  0AAB               	incf	setMode@enable,f
 10615  0791  3006               	movlw	6
 10616  0792  318F  27B1  3187   	fcall	_setMode
 10617  0795  3A00               	xorlw	0
 10618  0796  1903               	btfsc	3,2
 10619  0797  2F4C               	goto	l6759
 10620                           
 10621                           ;APDS9960.c: 453:     return 1;
 10622  0798  3001               	movlw	1
 10623  0799  0008               	return
 10624  079A                     __end_of_enableGestureSensor:	
 10625                           
 10626                           	psect	text30
 10627  0DBA                     __ptext30:	
 10628 ;; *************** function _setLEDBoost *****************
 10629 ;; Defined at:
 10630 ;;		line 484 in file "APDS9960.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  boost           1    wreg     unsigned char 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;  boost           1   13[BANK0 ] unsigned char 
 10635 ;;  val             1   12[BANK0 ] unsigned char 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      _Bool 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2, status,0, pclath, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;Total ram usage:        4 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:    8
 10652 ;; This function calls:
 10653 ;;		_wireReadDataByte
 10654 ;;		_wireWriteDataByte
 10655 ;; This function is called by:
 10656 ;;		_enableGestureSensor
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           
 10661                           ;psect for function _setLEDBoost
 10662  0DBA                     _setLEDBoost:	
 10663                           
 10664                           ;incstack = 0
 10665                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
 10666                           ;setLEDBoost@boost stored from wreg
 10667  0DBA  0020               	movlb	0	; select bank0
 10668  0DBB  00AD               	movwf	setLEDBoost@boost
 10669                           
 10670                           ;APDS9960.c: 484: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 485: {;APDS9960.c: 486:  
      +                             uint8_t val;;APDS9960.c: 489:     val=wireReadDataByte(0x90);
 10671  0DBC  3090               	movlw	144
 10672  0DBD  318B  23CB  318D   	fcall	_wireReadDataByte
 10673  0DC0  0020               	movlb	0	; select bank0
 10674  0DC1  00AA               	movwf	??_setLEDBoost
 10675  0DC2  082A               	movf	??_setLEDBoost,w
 10676  0DC3  00AC               	movwf	setLEDBoost@val
 10677                           
 10678                           ;APDS9960.c: 492:     boost &= 0b00000011;
 10679  0DC4  3003               	movlw	3
 10680  0DC5  00AA               	movwf	??_setLEDBoost
 10681  0DC6  082A               	movf	??_setLEDBoost,w
 10682  0DC7  05AD               	andwf	setLEDBoost@boost,f
 10683                           
 10684                           ;APDS9960.c: 493:     boost = boost << 4;
 10685  0DC8  082D               	movf	setLEDBoost@boost,w
 10686  0DC9  00AA               	movwf	??_setLEDBoost
 10687  0DCA  3003               	movlw	3
 10688  0DCB                     u5425:	
 10689  0DCB  35AA               	lslf	??_setLEDBoost,f
 10690  0DCC  3EFF               	addlw	-1
 10691  0DCD  1D03               	skipz
 10692  0DCE  2DCB               	goto	u5425
 10693  0DCF  352A               	lslf	??_setLEDBoost,w
 10694  0DD0  00AB               	movwf	??_setLEDBoost+1
 10695  0DD1  082B               	movf	??_setLEDBoost+1,w
 10696  0DD2  00AD               	movwf	setLEDBoost@boost
 10697                           
 10698                           ;APDS9960.c: 494:     val &= 0b11001111;
 10699  0DD3  30CF               	movlw	207
 10700  0DD4  00AA               	movwf	??_setLEDBoost
 10701  0DD5  082A               	movf	??_setLEDBoost,w
 10702  0DD6  05AC               	andwf	setLEDBoost@val,f
 10703                           
 10704                           ;APDS9960.c: 495:     val |= boost;
 10705  0DD7  082D               	movf	setLEDBoost@boost,w
 10706  0DD8  00AA               	movwf	??_setLEDBoost
 10707  0DD9  082A               	movf	??_setLEDBoost,w
 10708  0DDA  04AC               	iorwf	setLEDBoost@val,f
 10709                           
 10710                           ;APDS9960.c: 498:     if( !wireWriteDataByte(0x90, val) ) {
 10711  0DDB  082C               	movf	setLEDBoost@val,w
 10712  0DDC  00AA               	movwf	??_setLEDBoost
 10713  0DDD  082A               	movf	??_setLEDBoost,w
 10714  0DDE  00A6               	movwf	wireWriteDataByte@val
 10715  0DDF  3090               	movlw	144
 10716  0DE0  318B  235A  318D   	fcall	_wireWriteDataByte
 10717  0DE3  0020               	movlb	0	; select bank0
 10718  0DE4  0826               	movf	?_wireWriteDataByte,w
 10719  0DE5  0427               	iorwf	?_wireWriteDataByte+1,w
 10720  0DE6  1D03               	btfss	3,2
 10721  0DE7  2DEA               	goto	l6549
 10722                           
 10723                           ;APDS9960.c: 499:         return 0;
 10724  0DE8  3000               	movlw	0
 10725  0DE9  0008               	return
 10726  0DEA                     l6549:	
 10727                           
 10728                           ;APDS9960.c: 502:     return 1;
 10729  0DEA  3001               	movlw	1
 10730  0DEB  0008               	return
 10731  0DEC                     __end_of_setLEDBoost:	
 10732                           
 10733                           	psect	text31
 10734  0C15                     __ptext31:	
 10735 ;; *************** function _setGestureMode *****************
 10736 ;; Defined at:
 10737 ;;		line 506 in file "APDS9960.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;  mode            1    wreg     unsigned char 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  mode            1   11[BANK0 ] unsigned char 
 10742 ;;  val             1   12[BANK0 ] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      _Bool 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, pclath, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;Total ram usage:        3 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    8
 10759 ;; This function calls:
 10760 ;;		_wireReadDataByte
 10761 ;;		_wireWriteDataByte
 10762 ;; This function is called by:
 10763 ;;		_enableGestureSensor
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           
 10768                           ;psect for function _setGestureMode
 10769  0C15                     _setGestureMode:	
 10770                           
 10771                           ;incstack = 0
 10772                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
 10773                           ;setGestureMode@mode stored from wreg
 10774  0C15  0020               	movlb	0	; select bank0
 10775  0C16  00AB               	movwf	setGestureMode@mode
 10776                           
 10777                           ;APDS9960.c: 506: _Bool setGestureMode(uint8_t mode);APDS9960.c: 507: {;APDS9960.c: 508:
      +                               uint8_t val;;APDS9960.c: 511:     val = wireReadDataByte(0xAB);
 10778  0C17  30AB               	movlw	171
 10779  0C18  318B  23CB  318C   	fcall	_wireReadDataByte
 10780  0C1B  0020               	movlb	0	; select bank0
 10781  0C1C  00AA               	movwf	??_setGestureMode
 10782  0C1D  082A               	movf	??_setGestureMode,w
 10783  0C1E  00AC               	movwf	setGestureMode@val
 10784                           
 10785                           ;APDS9960.c: 514:     mode &= 0b00000001;
 10786  0C1F  3001               	movlw	1
 10787  0C20  00AA               	movwf	??_setGestureMode
 10788  0C21  082A               	movf	??_setGestureMode,w
 10789  0C22  05AB               	andwf	setGestureMode@mode,f
 10790                           
 10791                           ;APDS9960.c: 515:     val &= 0b11111110;
 10792  0C23  30FE               	movlw	254
 10793  0C24  00AA               	movwf	??_setGestureMode
 10794  0C25  082A               	movf	??_setGestureMode,w
 10795  0C26  05AC               	andwf	setGestureMode@val,f
 10796                           
 10797                           ;APDS9960.c: 516:     val |= mode;
 10798  0C27  082B               	movf	setGestureMode@mode,w
 10799  0C28  00AA               	movwf	??_setGestureMode
 10800  0C29  082A               	movf	??_setGestureMode,w
 10801  0C2A  04AC               	iorwf	setGestureMode@val,f
 10802                           
 10803                           ;APDS9960.c: 519:     if( !wireWriteDataByte(0xAB, val) ) {
 10804  0C2B  082C               	movf	setGestureMode@val,w
 10805  0C2C  00AA               	movwf	??_setGestureMode
 10806  0C2D  082A               	movf	??_setGestureMode,w
 10807  0C2E  00A6               	movwf	wireWriteDataByte@val
 10808  0C2F  30AB               	movlw	171
 10809  0C30  318B  235A  318C   	fcall	_wireWriteDataByte
 10810  0C33  0020               	movlb	0	; select bank0
 10811  0C34  0826               	movf	?_wireWriteDataByte,w
 10812  0C35  0427               	iorwf	?_wireWriteDataByte+1,w
 10813  0C36  1D03               	btfss	3,2
 10814  0C37  2C3A               	goto	l6567
 10815                           
 10816                           ;APDS9960.c: 520:         return 0;
 10817  0C38  3000               	movlw	0
 10818  0C39  0008               	return
 10819  0C3A                     l6567:	
 10820                           
 10821                           ;APDS9960.c: 523:     return 1;
 10822  0C3A  3001               	movlw	1
 10823  0C3B  0008               	return
 10824  0C3C                     __end_of_setGestureMode:	
 10825                           
 10826                           	psect	text32
 10827  0D2E                     __ptext32:	
 10828 ;; *************** function _setGestureIntEnable *****************
 10829 ;; Defined at:
 10830 ;;		line 387 in file "APDS9960.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  enable          1    wreg     unsigned char 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  enable          1   12[BANK0 ] unsigned char 
 10835 ;;  val             1   11[BANK0 ] unsigned char 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      _Bool 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2, status,0, pclath, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;Total ram usage:        3 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    8
 10852 ;; This function calls:
 10853 ;;		_wireReadDataByte
 10854 ;;		_wireWriteDataByte
 10855 ;; This function is called by:
 10856 ;;		_initialize
 10857 ;;		_enableGestureSensor
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           
 10862                           ;psect for function _setGestureIntEnable
 10863  0D2E                     _setGestureIntEnable:	
 10864                           
 10865                           ;incstack = 0
 10866                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
 10867                           ;setGestureIntEnable@enable stored from wreg
 10868  0D2E  0020               	movlb	0	; select bank0
 10869  0D2F  00AC               	movwf	setGestureIntEnable@enable
 10870                           
 10871                           ;APDS9960.c: 387: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 388: {;APDS9960.
      +                          c: 389:     uint8_t val;;APDS9960.c: 392:     val = wireReadDataByte(0xAB);
 10872  0D30  30AB               	movlw	171
 10873  0D31  318B  23CB  318D   	fcall	_wireReadDataByte
 10874  0D34  0020               	movlb	0	; select bank0
 10875  0D35  00AA               	movwf	??_setGestureIntEnable
 10876  0D36  082A               	movf	??_setGestureIntEnable,w
 10877  0D37  00AB               	movwf	setGestureIntEnable@val
 10878                           
 10879                           ;APDS9960.c: 395:     enable &= 0b00000001;
 10880  0D38  3001               	movlw	1
 10881  0D39  00AA               	movwf	??_setGestureIntEnable
 10882  0D3A  082A               	movf	??_setGestureIntEnable,w
 10883  0D3B  05AC               	andwf	setGestureIntEnable@enable,f
 10884                           
 10885                           ;APDS9960.c: 396:     enable = enable << 1;
 10886  0D3C  352C               	lslf	setGestureIntEnable@enable,w
 10887  0D3D  00AA               	movwf	??_setGestureIntEnable
 10888  0D3E  082A               	movf	??_setGestureIntEnable,w
 10889  0D3F  00AC               	movwf	setGestureIntEnable@enable
 10890                           
 10891                           ;APDS9960.c: 397:     val &= 0b11111101;
 10892  0D40  30FD               	movlw	253
 10893  0D41  00AA               	movwf	??_setGestureIntEnable
 10894  0D42  082A               	movf	??_setGestureIntEnable,w
 10895  0D43  05AB               	andwf	setGestureIntEnable@val,f
 10896                           
 10897                           ;APDS9960.c: 398:     val |= enable;
 10898  0D44  082C               	movf	setGestureIntEnable@enable,w
 10899  0D45  00AA               	movwf	??_setGestureIntEnable
 10900  0D46  082A               	movf	??_setGestureIntEnable,w
 10901  0D47  04AB               	iorwf	setGestureIntEnable@val,f
 10902                           
 10903                           ;APDS9960.c: 401:     if( !wireWriteDataByte(0xAB, val) ) {
 10904  0D48  082B               	movf	setGestureIntEnable@val,w
 10905  0D49  00AA               	movwf	??_setGestureIntEnable
 10906  0D4A  082A               	movf	??_setGestureIntEnable,w
 10907  0D4B  00A6               	movwf	wireWriteDataByte@val
 10908  0D4C  30AB               	movlw	171
 10909  0D4D  318B  235A  318D   	fcall	_wireWriteDataByte
 10910  0D50  0020               	movlb	0	; select bank0
 10911  0D51  0826               	movf	?_wireWriteDataByte,w
 10912  0D52  0427               	iorwf	?_wireWriteDataByte+1,w
 10913  0D53  1D03               	btfss	3,2
 10914  0D54  2D57               	goto	l6531
 10915                           
 10916                           ;APDS9960.c: 402:         return 0;
 10917  0D55  3000               	movlw	0
 10918  0D56  0008               	return
 10919  0D57                     l6531:	
 10920                           
 10921                           ;APDS9960.c: 405:     return 1;
 10922  0D57  3001               	movlw	1
 10923  0D58  0008               	return
 10924  0D59                     __end_of_setGestureIntEnable:	
 10925                           
 10926                           	psect	text33
 10927  0B2A                     __ptext33:	
 10928 ;; *************** function _resetGestureParameters *****************
 10929 ;; Defined at:
 10930 ;;		line 457 in file "APDS9960.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;		None
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1    wreg      void 
 10937 ;; Registers used:
 10938 ;;		status,2
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    5
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_enableGestureSensor
 10955 ;;		_readGesture
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           
 10959                           
 10960                           ;psect for function _resetGestureParameters
 10961  0B2A                     _resetGestureParameters:	
 10962                           
 10963                           ;APDS9960.c: 460:     gesture_data_.index = 0;
 10964                           
 10965                           ;incstack = 0
 10966                           ; Regs used in _resetGestureParameters: [status,2]
 10967  0B2A  0024               	movlb	4	; select bank4
 10968  0B2B  01E0               	clrf	(_gesture_data_^(0+512)+64)
 10969                           
 10970                           ;APDS9960.c: 461:     gesture_data_.total_gestures = 0;
 10971  0B2C  01E1               	clrf	(_gesture_data_^(0+512)+65)
 10972                           
 10973                           ;APDS9960.c: 463:     gesture_ud_delta_ = 0;
 10974  0B2D  0020               	movlb	0	; select bank0
 10975  0B2E  01E8               	clrf	_gesture_ud_delta_
 10976  0B2F  01E9               	clrf	_gesture_ud_delta_+1
 10977                           
 10978                           ;APDS9960.c: 464:     gesture_lr_delta_ = 0;
 10979  0B30  01E6               	clrf	_gesture_lr_delta_
 10980  0B31  01E7               	clrf	_gesture_lr_delta_+1
 10981                           
 10982                           ;APDS9960.c: 466:     gesture_ud_count_ = 0;
 10983  0B32  01E4               	clrf	_gesture_ud_count_
 10984  0B33  01E5               	clrf	_gesture_ud_count_+1
 10985                           
 10986                           ;APDS9960.c: 467:     gesture_lr_count_ = 0;
 10987  0B34  01E2               	clrf	_gesture_lr_count_
 10988  0B35  01E3               	clrf	_gesture_lr_count_+1
 10989                           
 10990                           ;APDS9960.c: 469:     gesture_near_count_ = 0;
 10991  0B36  01E0               	clrf	_gesture_near_count_
 10992  0B37  01E1               	clrf	_gesture_near_count_+1
 10993                           
 10994                           ;APDS9960.c: 470:     gesture_far_count_ = 0;
 10995  0B38  0021               	movlb	1	; select bank1
 10996  0B39  01E2               	clrf	_gesture_far_count_^(0+128)
 10997  0B3A  01E3               	clrf	(_gesture_far_count_+1)^(0+128)
 10998                           
 10999                           ;APDS9960.c: 472:     gesture_state_ = 0;
 11000  0B3B  0020               	movlb	0	; select bank0
 11001  0B3C  01DE               	clrf	_gesture_state_
 11002  0B3D  01DF               	clrf	_gesture_state_+1
 11003                           
 11004                           ;APDS9960.c: 473:     gesture_motion_ = DIR_NONE;
 11005  0B3E  0022               	movlb	2	; select bank2
 11006  0B3F  01E8               	clrf	_gesture_motion_^(0+256)
 11007  0B40  01E9               	clrf	(_gesture_motion_+1)^(0+256)
 11008  0B41  0008               	return
 11009  0B42                     __end_of_resetGestureParameters:	
 11010                           
 11011                           	psect	text34
 11012  0A94                     __ptext34:	
 11013 ;; *************** function _enablePower *****************
 11014 ;; Defined at:
 11015 ;;		line 527 in file "APDS9960.c"
 11016 ;; Parameters:    Size  Location     Type
 11017 ;;		None
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;		None
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      _Bool 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0, pclath, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;Total ram usage:        0 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:   10
 11036 ;; This function calls:
 11037 ;;		_setMode
 11038 ;; This function is called by:
 11039 ;;		_enableGestureSensor
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           
 11044                           ;psect for function _enablePower
 11045  0A94                     _enablePower:	
 11046                           
 11047                           ;APDS9960.c: 529:     if( !setMode(0, 1) ) {
 11048                           
 11049                           ;incstack = 0
 11050                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
 11051  0A94  0020               	movlb	0	; select bank0
 11052  0A95  01AB               	clrf	setMode@enable
 11053  0A96  0AAB               	incf	setMode@enable,f
 11054  0A97  3000               	movlw	0
 11055  0A98  318F  27B1  318A   	fcall	_setMode
 11056  0A9B  3A00               	xorlw	0
 11057  0A9C  1D03               	skipz
 11058  0A9D  2AA0               	goto	l6577
 11059                           
 11060                           ;APDS9960.c: 530:         return 0;
 11061  0A9E  3000               	movlw	0
 11062  0A9F  0008               	return
 11063  0AA0                     l6577:	
 11064                           
 11065                           ;APDS9960.c: 533:     return 1;
 11066  0AA0  3001               	movlw	1
 11067  0AA1  0008               	return
 11068  0AA2                     __end_of_enablePower:	
 11069                           
 11070                           	psect	text35
 11071  0FB1                     __ptext35:	
 11072 ;; *************** function _setMode *****************
 11073 ;; Defined at:
 11074 ;;		line 124 in file "APDS9960.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  mode            1    wreg     unsigned char 
 11077 ;;  enable          1   11[BANK0 ] unsigned char 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  mode            1   15[BANK0 ] unsigned char 
 11080 ;;  reg_val         1   14[BANK0 ] unsigned char 
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  1    wreg      _Bool 
 11083 ;; Registers used:
 11084 ;;		wreg, status,2, status,0, pclath, cstack
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;Total ram usage:        5 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    9
 11097 ;; This function calls:
 11098 ;;		_getMode
 11099 ;;		_wireWriteDataByte
 11100 ;; This function is called by:
 11101 ;;		_initialize
 11102 ;;		_enableGestureSensor
 11103 ;;		_enablePower
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function _setMode
 11109  0FB1                     _setMode:	
 11110                           
 11111                           ;incstack = 0
 11112                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
 11113                           ;setMode@mode stored from wreg
 11114  0FB1  0020               	movlb	0	; select bank0
 11115  0FB2  00AF               	movwf	setMode@mode
 11116                           
 11117                           ;APDS9960.c: 124: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 125: {;APDS996
      +                          0.c: 126:     uint8_t reg_val;;APDS9960.c: 129:     reg_val = getMode();
 11118  0FB3  318A  225D  318F   	fcall	_getMode
 11119  0FB6  0020               	movlb	0	; select bank0
 11120  0FB7  00AC               	movwf	??_setMode
 11121  0FB8  082C               	movf	??_setMode,w
 11122  0FB9  00AE               	movwf	setMode@reg_val
 11123                           
 11124                           ;APDS9960.c: 130:     if( reg_val == 0xFF ) {
 11125  0FBA  0A2E               	incf	setMode@reg_val,w
 11126  0FBB  1D03               	btfss	3,2
 11127  0FBC  2FBF               	goto	l5825
 11128  0FBD                     l5821:	
 11129                           
 11130                           ;APDS9960.c: 131:         return 0;
 11131  0FBD  3000               	movlw	0
 11132  0FBE  0008               	return
 11133  0FBF                     l5825:	
 11134                           
 11135                           ;APDS9960.c: 135:     enable = enable & 0x01;
 11136  0FBF  082B               	movf	setMode@enable,w
 11137  0FC0  3901               	andlw	1
 11138  0FC1  00AC               	movwf	??_setMode
 11139  0FC2  082C               	movf	??_setMode,w
 11140  0FC3  00AB               	movwf	setMode@enable
 11141                           
 11142                           ;APDS9960.c: 136:     if( mode >= 0 && mode <= 6 ) {
 11143  0FC4  3007               	movlw	7
 11144  0FC5  022F               	subwf	setMode@mode,w
 11145  0FC6  1803               	skipnc
 11146  0FC7  2FE4               	goto	l5835
 11147                           
 11148                           ;APDS9960.c: 137:         if (enable) {
 11149  0FC8  082B               	movf	setMode@enable,w
 11150  0FC9  1903               	btfsc	3,2
 11151  0FCA  2FD7               	goto	l5833
 11152                           
 11153                           ;APDS9960.c: 138:             reg_val |= (1 << mode);
 11154  0FCB  3001               	movlw	1
 11155  0FCC  00AC               	movwf	??_setMode
 11156  0FCD  0A2F               	incf	setMode@mode,w
 11157  0FCE  2FD0               	goto	u4354
 11158  0FCF                     u4355:	
 11159  0FCF  35AC               	lslf	??_setMode,f
 11160  0FD0                     u4354:	
 11161  0FD0  0B89               	decfsz	9,f
 11162  0FD1  2FCF               	goto	u4355
 11163  0FD2  082C               	movf	??_setMode,w
 11164  0FD3  00AD               	movwf	??_setMode+1
 11165  0FD4  082D               	movf	??_setMode+1,w
 11166  0FD5  04AE               	iorwf	setMode@reg_val,f
 11167                           
 11168                           ;APDS9960.c: 139:         } else {
 11169  0FD6  2FF1               	goto	l5843
 11170  0FD7                     l5833:	
 11171                           
 11172                           ;APDS9960.c: 140:             reg_val &= ~(1 << mode);
 11173  0FD7  3001               	movlw	1
 11174  0FD8  00AC               	movwf	??_setMode
 11175  0FD9  0A2F               	incf	setMode@mode,w
 11176  0FDA  2FDC               	goto	u4364
 11177  0FDB                     u4365:	
 11178  0FDB  35AC               	lslf	??_setMode,f
 11179  0FDC                     u4364:	
 11180  0FDC  0B89               	decfsz	9,f
 11181  0FDD  2FDB               	goto	u4365
 11182  0FDE  082C               	movf	??_setMode,w
 11183  0FDF  3AFF               	xorlw	255
 11184  0FE0  00AD               	movwf	??_setMode+1
 11185  0FE1  082D               	movf	??_setMode+1,w
 11186  0FE2  05AE               	andwf	setMode@reg_val,f
 11187  0FE3  2FF1               	goto	l5843
 11188  0FE4                     l5835:	
 11189  0FE4  3007               	movlw	7
 11190  0FE5  062F               	xorwf	setMode@mode,w
 11191  0FE6  1D03               	btfss	3,2
 11192  0FE7  2FF1               	goto	l5843
 11193                           
 11194                           ;APDS9960.c: 143:         if (enable) {
 11195  0FE8  082B               	movf	setMode@enable,w
 11196  0FE9  1903               	btfsc	3,2
 11197  0FEA  2FF0               	goto	l5841
 11198                           
 11199                           ;APDS9960.c: 144:             reg_val = 0x7F;
 11200  0FEB  307F               	movlw	127
 11201  0FEC  00AC               	movwf	??_setMode
 11202  0FED  082C               	movf	??_setMode,w
 11203  0FEE  00AE               	movwf	setMode@reg_val
 11204                           
 11205                           ;APDS9960.c: 145:         } else {
 11206  0FEF  2FF1               	goto	l5843
 11207  0FF0                     l5841:	
 11208                           
 11209                           ;APDS9960.c: 146:             reg_val = 0x00;
 11210  0FF0  01AE               	clrf	setMode@reg_val
 11211  0FF1                     l5843:	
 11212                           
 11213                           ;APDS9960.c: 151:     if( !wireWriteDataByte(0x80, reg_val) ) {
 11214  0FF1  082E               	movf	setMode@reg_val,w
 11215  0FF2  00AC               	movwf	??_setMode
 11216  0FF3  082C               	movf	??_setMode,w
 11217  0FF4  00A6               	movwf	wireWriteDataByte@val
 11218  0FF5  3080               	movlw	128
 11219  0FF6  318B  235A  318F   	fcall	_wireWriteDataByte
 11220  0FF9  0020               	movlb	0	; select bank0
 11221  0FFA  0826               	movf	?_wireWriteDataByte,w
 11222  0FFB  0427               	iorwf	?_wireWriteDataByte+1,w
 11223  0FFC  1903               	btfsc	3,2
 11224  0FFD  2FBD               	goto	l5821
 11225                           
 11226                           ;APDS9960.c: 155:     return 1;
 11227  0FFE  3001               	movlw	1
 11228  0FFF  0008               	return
 11229  1000                     __end_of_setMode:	
 11230                           
 11231                           	psect	text36
 11232  0B5A                     __ptext36:	
 11233 ;; *************** function _wireWriteDataByte *****************
 11234 ;; Defined at:
 11235 ;;		line 871 in file "APDS9960.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  reg             1    wreg     unsigned char 
 11238 ;;  val             1    6[BANK0 ] unsigned char 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  reg             1    9[BANK0 ] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  2    6[BANK0 ] int 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0, pclath, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11250 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;Total ram usage:        4 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    7
 11257 ;; This function calls:
 11258 ;;		_I2C_Start
 11259 ;;		_I2C_Stop
 11260 ;;		_I2C_Write_Byte
 11261 ;; This function is called by:
 11262 ;;		_initialize
 11263 ;;		_setMode
 11264 ;;		_setLEDDrive
 11265 ;;		_setProximityGain
 11266 ;;		_setAmbientLightGain
 11267 ;;		_setProxIntLowThresh
 11268 ;;		_setProxIntHighThresh
 11269 ;;		_setLightIntLowThreshold
 11270 ;;		_setLightIntHighThreshold
 11271 ;;		_setGestureEnterThresh
 11272 ;;		_setGestureExitThresh
 11273 ;;		_setGestureGain
 11274 ;;		_setGestureLEDDrive
 11275 ;;		_setGestureWaitTime
 11276 ;;		_setGestureIntEnable
 11277 ;;		_enableGestureSensor
 11278 ;;		_setLEDBoost
 11279 ;;		_setGestureMode
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           
 11284                           ;psect for function _wireWriteDataByte
 11285  0B5A                     _wireWriteDataByte:	
 11286                           
 11287                           ;incstack = 0
 11288                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
 11289                           ;wireWriteDataByte@reg stored from wreg
 11290  0B5A  0020               	movlb	0	; select bank0
 11291  0B5B  00A9               	movwf	wireWriteDataByte@reg
 11292                           
 11293                           ;APDS9960.c: 871: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 872: {;APDS9960.c: 882:     I2C_Start();
 11294  0B5C  3189  219C  318B   	fcall	_I2C_Start
 11295                           
 11296                           ;APDS9960.c: 883:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 11297  0B5F  3072               	movlw	114
 11298  0B60  318B  2375  318B   	fcall	_I2C_Write_Byte
 11299                           
 11300                           ;APDS9960.c: 884:     I2C_Write_Byte(reg);
 11301  0B63  0020               	movlb	0	; select bank0
 11302  0B64  0829               	movf	wireWriteDataByte@reg,w
 11303  0B65  318B  2375  318B   	fcall	_I2C_Write_Byte
 11304                           
 11305                           ;APDS9960.c: 885:     I2C_Write_Byte(val);
 11306  0B68  0020               	movlb	0	; select bank0
 11307  0B69  0826               	movf	wireWriteDataByte@val,w
 11308  0B6A  318B  2375  318B   	fcall	_I2C_Write_Byte
 11309                           
 11310                           ;APDS9960.c: 886:     I2C_Stop();
 11311  0B6D  3189  21A2         	fcall	_I2C_Stop
 11312                           
 11313                           ;APDS9960.c: 889:     return 1;
 11314  0B6F  3001               	movlw	1
 11315  0B70  0020               	movlb	0	; select bank0
 11316  0B71  00A6               	movwf	?_wireWriteDataByte
 11317  0B72  3000               	movlw	0
 11318  0B73  00A7               	movwf	?_wireWriteDataByte+1
 11319  0B74  0008               	return
 11320  0B75                     __end_of_wireWriteDataByte:	
 11321                           
 11322                           	psect	text37
 11323  0A5D                     __ptext37:	
 11324 ;; *************** function _getMode *****************
 11325 ;; Defined at:
 11326 ;;		line 159 in file "APDS9960.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;		None
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  enable_value    1   10[BANK0 ] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  1    wreg      unsigned char 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0, pclath, cstack
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;Total ram usage:        2 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:    8
 11347 ;; This function calls:
 11348 ;;		_wireReadDataByte
 11349 ;; This function is called by:
 11350 ;;		_setMode
 11351 ;;		_readGesture
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           
 11356                           ;psect for function _getMode
 11357  0A5D                     _getMode:	
 11358                           
 11359                           ;APDS9960.c: 161:     uint8_t enable_value;;APDS9960.c: 164:     enable_value = wireRead
      +                          DataByte(0x80);
 11360                           
 11361                           ;incstack = 0
 11362                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
 11363  0A5D  3080               	movlw	128
 11364  0A5E  318B  23CB         	fcall	_wireReadDataByte
 11365  0A60  0020               	movlb	0	; select bank0
 11366  0A61  00A9               	movwf	??_getMode
 11367  0A62  0829               	movf	??_getMode,w
 11368  0A63  00AA               	movwf	getMode@enable_value
 11369                           
 11370                           ;APDS9960.c: 166:     return enable_value;
 11371  0A64  082A               	movf	getMode@enable_value,w
 11372  0A65  0008               	return
 11373  0A66                     __end_of_getMode:	
 11374                           
 11375                           	psect	text38
 11376  0BCB                     __ptext38:	
 11377 ;; *************** function _wireReadDataByte *****************
 11378 ;; Defined at:
 11379 ;;		line 893 in file "APDS9960.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  reg             1    wreg     unsigned char 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  reg             1    7[BANK0 ] unsigned char 
 11384 ;;  val             1    8[BANK0 ] unsigned char 
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      unsigned char 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0, pclath, cstack
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;Total ram usage:        3 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    7
 11401 ;; This function calls:
 11402 ;;		_I2C_ReStart
 11403 ;;		_I2C_Read_Byte
 11404 ;;		_I2C_Send_NACK
 11405 ;;		_I2C_Start
 11406 ;;		_I2C_Stop
 11407 ;;		_I2C_Write_Byte
 11408 ;; This function is called by:
 11409 ;;		_initialize
 11410 ;;		_getMode
 11411 ;;		_setLEDDrive
 11412 ;;		_setProximityGain
 11413 ;;		_setAmbientLightGain
 11414 ;;		_setGestureGain
 11415 ;;		_setGestureLEDDrive
 11416 ;;		_setGestureWaitTime
 11417 ;;		_setGestureIntEnable
 11418 ;;		_setLEDBoost
 11419 ;;		_setGestureMode
 11420 ;;		_isGestureAvailable
 11421 ;;		_readGesture
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function _wireReadDataByte
 11427  0BCB                     _wireReadDataByte:	
 11428                           
 11429                           ;incstack = 0
 11430                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
 11431                           ;wireReadDataByte@reg stored from wreg
 11432  0BCB  0020               	movlb	0	; select bank0
 11433  0BCC  00A7               	movwf	wireReadDataByte@reg
 11434                           
 11435                           ;APDS9960.c: 893:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 894: {;
      +                          APDS9960.c: 908:     unsigned char val;;APDS9960.c: 909:     I2C_Start();
 11436  0BCD  3189  219C  318B   	fcall	_I2C_Start
 11437                           
 11438                           ;APDS9960.c: 910:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 11439  0BD0  3072               	movlw	114
 11440  0BD1  318B  2375  318B   	fcall	_I2C_Write_Byte
 11441                           
 11442                           ;APDS9960.c: 911:     I2C_Write_Byte(reg);
 11443  0BD4  0020               	movlb	0	; select bank0
 11444  0BD5  0827               	movf	wireReadDataByte@reg,w
 11445  0BD6  318B  2375  318B   	fcall	_I2C_Write_Byte
 11446                           
 11447                           ;APDS9960.c: 912:     I2C_ReStart();
 11448  0BD9  3189  218D  318B   	fcall	_I2C_ReStart
 11449                           
 11450                           ;APDS9960.c: 914:     I2C_Write_Byte((0x39 << 1) | 0x01);
 11451  0BDC  3073               	movlw	115
 11452  0BDD  318B  2375  318B   	fcall	_I2C_Write_Byte
 11453                           
 11454                           ;APDS9960.c: 915:     val=I2C_Read_Byte();
 11455  0BE0  318A  2270  318B   	fcall	_I2C_Read_Byte
 11456  0BE3  0020               	movlb	0	; select bank0
 11457  0BE4  00A6               	movwf	??_wireReadDataByte
 11458  0BE5  0826               	movf	??_wireReadDataByte,w
 11459  0BE6  00A8               	movwf	wireReadDataByte@val
 11460                           
 11461                           ;APDS9960.c: 916:     I2C_Send_NACK();
 11462  0BE7  3189  2196  318B   	fcall	_I2C_Send_NACK
 11463                           
 11464                           ;APDS9960.c: 917:     I2C_Stop();
 11465  0BEA  3189  21A2         	fcall	_I2C_Stop
 11466                           
 11467                           ;APDS9960.c: 919:     return val;
 11468  0BEC  0020               	movlb	0	; select bank0
 11469  0BED  0828               	movf	wireReadDataByte@val,w
 11470  0BEE  0008               	return
 11471  0BEF                     __end_of_wireReadDataByte:	
 11472                           
 11473                           	psect	text39
 11474  0B75                     __ptext39:	
 11475 ;; *************** function _I2C_Write_Byte *****************
 11476 ;; Defined at:
 11477 ;;		line 75 in file "i2c.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  Byte            1    wreg     unsigned char 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  Byte            1    3[BANK0 ] unsigned char 
 11482 ;;  count           2    4[BANK0 ] unsigned int 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0, pclath, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;Total ram usage:        5 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:    6
 11499 ;; This function calls:
 11500 ;;		_i2c1_driver_TXData
 11501 ;; This function is called by:
 11502 ;;		_wireReadDataBlock
 11503 ;;		_wireWriteDataByte
 11504 ;;		_wireReadDataByte
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           
 11509                           ;psect for function _I2C_Write_Byte
 11510  0B75                     _I2C_Write_Byte:	
 11511                           
 11512                           ;incstack = 0
 11513                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
 11514                           ;I2C_Write_Byte@Byte stored from wreg
 11515  0B75  0020               	movlb	0	; select bank0
 11516  0B76  00A3               	movwf	I2C_Write_Byte@Byte
 11517                           
 11518                           ;i2c.c: 75: void I2C_Write_Byte(unsigned char Byte);i2c.c: 76: {;i2c.c: 80:     i2c1_dri
      +                          ver_TXData(Byte);
 11519  0B77  0823               	movf	I2C_Write_Byte@Byte,w
 11520  0B78  3189  21EE  318B   	fcall	_i2c1_driver_TXData
 11521                           
 11522                           ;i2c.c: 83:     unsigned int count = 0;
 11523  0B7B  0020               	movlb	0	; select bank0
 11524  0B7C  01A4               	clrf	I2C_Write_Byte@count
 11525  0B7D  01A5               	clrf	I2C_Write_Byte@count+1
 11526  0B7E                     l1142:	
 11527                           ;i2c.c: 84:     while(SSP1CON2bits.ACKSTAT);
 11528                           
 11529  0B7E  0024               	movlb	4	; select bank4
 11530  0B7F  1B16               	btfsc	22,6	;volatile
 11531  0B80  2B7E               	goto	l1142
 11532  0B81                     l5667:	
 11533  0B81  0020               	movlb	0	; select bank0
 11534  0B82  0825               	movf	I2C_Write_Byte@count+1,w
 11535  0B83  00A2               	movwf	??_I2C_Write_Byte+1
 11536  0B84  0824               	movf	I2C_Write_Byte@count,w
 11537  0B85  00A1               	movwf	??_I2C_Write_Byte
 11538  0B86  0AA4               	incf	I2C_Write_Byte@count,f
 11539  0B87  1903               	skipnz
 11540  0B88  0AA5               	incf	I2C_Write_Byte@count+1,f
 11541  0B89  3000               	movlw	0
 11542  0B8A  0222               	subwf	??_I2C_Write_Byte+1,w
 11543  0B8B  3005               	movlw	5
 11544  0B8C  1903               	skipnz
 11545  0B8D  0221               	subwf	??_I2C_Write_Byte,w
 11546  0B8E  1803               	btfsc	3,0
 11547  0B8F  0008               	return
 11548  0B90  2B81               	goto	l5667
 11549  0B91                     __end_of_I2C_Write_Byte:	
 11550                           
 11551                           	psect	text40
 11552  09EE                     __ptext40:	
 11553 ;; *************** function _i2c1_driver_TXData *****************
 11554 ;; Defined at:
 11555 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  d               1    wreg     unsigned char 
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;  d               1    0[BANK0 ] unsigned char 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;Total ram usage:        1 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    5
 11576 ;; This function calls:
 11577 ;;		Nothing
 11578 ;; This function is called by:
 11579 ;;		_I2C_Write_Byte
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           
 11584                           ;psect for function _i2c1_driver_TXData
 11585  09EE                     _i2c1_driver_TXData:	
 11586                           
 11587                           ;incstack = 0
 11588                           ; Regs used in _i2c1_driver_TXData: [wreg]
 11589                           ;i2c1_driver_TXData@d stored from wreg
 11590  09EE  0020               	movlb	0	; select bank0
 11591  09EF  00A0               	movwf	i2c1_driver_TXData@d
 11592                           
 11593                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
 11594  09F0  0820               	movf	i2c1_driver_TXData@d,w
 11595  09F1  0024               	movlb	4	; select bank4
 11596  09F2  0091               	movwf	17	;volatile
 11597  09F3  0008               	return
 11598  09F4                     __end_of_i2c1_driver_TXData:	
 11599                           
 11600                           	psect	text41
 11601  09A2                     __ptext41:	
 11602 ;; *************** function _I2C_Stop *****************
 11603 ;; Defined at:
 11604 ;;		line 50 in file "i2c.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      void 
 11611 ;; Registers used:
 11612 ;;		status,2, status,0, pclath, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;Total ram usage:        0 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    6
 11625 ;; This function calls:
 11626 ;;		_i2c1_driver_stop
 11627 ;; This function is called by:
 11628 ;;		_wireReadDataBlock
 11629 ;;		_wireWriteDataByte
 11630 ;;		_wireReadDataByte
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           
 11635                           ;psect for function _I2C_Stop
 11636  09A2                     _I2C_Stop:	
 11637                           
 11638                           ;i2c.c: 52:  i2c1_driver_stop();
 11639                           
 11640                           ;incstack = 0
 11641                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
 11642  09A2  3189  219F         	fcall	_i2c1_driver_stop
 11643  09A4  0008               	return
 11644  09A5                     __end_of_I2C_Stop:	
 11645                           
 11646                           	psect	text42
 11647  099F                     __ptext42:	
 11648 ;; *************** function _i2c1_driver_stop *****************
 11649 ;; Defined at:
 11650 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;		None
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      void 
 11657 ;; Registers used:
 11658 ;;		None
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:        0 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:    5
 11671 ;; This function calls:
 11672 ;;		Nothing
 11673 ;; This function is called by:
 11674 ;;		_I2C_Stop
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _i2c1_driver_stop
 11680  099F                     _i2c1_driver_stop:	
 11681                           
 11682                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 11683                           
 11684                           ;incstack = 0
 11685                           ; Regs used in _i2c1_driver_stop: []
 11686  099F  0024               	movlb	4	; select bank4
 11687  09A0  1516               	bsf	22,2	;volatile
 11688  09A1  0008               	return
 11689  09A2                     __end_of_i2c1_driver_stop:	
 11690                           
 11691                           	psect	text43
 11692  099C                     __ptext43:	
 11693 ;; *************** function _I2C_Start *****************
 11694 ;; Defined at:
 11695 ;;		line 35 in file "i2c.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;		None
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;		None
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		status,2, status,0, pclath, cstack
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;Total ram usage:        0 bytes
 11714 ;; Hardware stack levels used:    1
 11715 ;; Hardware stack levels required when called:    6
 11716 ;; This function calls:
 11717 ;;		_i2c1_driver_start
 11718 ;; This function is called by:
 11719 ;;		_wireReadDataBlock
 11720 ;;		_wireWriteDataByte
 11721 ;;		_wireReadDataByte
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           
 11726                           ;psect for function _I2C_Start
 11727  099C                     _I2C_Start:	
 11728                           
 11729                           ;i2c.c: 37:  i2c1_driver_start();
 11730                           
 11731                           ;incstack = 0
 11732                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
 11733  099C  3189  2199         	fcall	_i2c1_driver_start
 11734  099E  0008               	return
 11735  099F                     __end_of_I2C_Start:	
 11736                           
 11737                           	psect	text44
 11738  0999                     __ptext44:	
 11739 ;; *************** function _i2c1_driver_start *****************
 11740 ;; Defined at:
 11741 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		None
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        0 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    5
 11762 ;; This function calls:
 11763 ;;		Nothing
 11764 ;; This function is called by:
 11765 ;;		_I2C_Start
 11766 ;;		_i2c_masterOperation
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function _i2c1_driver_start
 11772  0999                     _i2c1_driver_start:	
 11773                           
 11774                           ;mcc_generated_files/i2c1_driver.c: 148:     SSP1CON2bits.SEN = 1;
 11775                           
 11776                           ;incstack = 0
 11777                           ; Regs used in _i2c1_driver_start: []
 11778  0999  0024               	movlb	4	; select bank4
 11779  099A  1416               	bsf	22,0	;volatile
 11780  099B  0008               	return
 11781  099C                     __end_of_i2c1_driver_start:	
 11782                           
 11783                           	psect	text45
 11784  0996                     __ptext45:	
 11785 ;; *************** function _I2C_Send_NACK *****************
 11786 ;; Defined at:
 11787 ;;		line 66 in file "i2c.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;		None
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		status,2, status,0, pclath, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;Total ram usage:        0 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:    6
 11808 ;; This function calls:
 11809 ;;		_i2c1_driver_sendNACK
 11810 ;; This function is called by:
 11811 ;;		_wireReadDataBlock
 11812 ;;		_wireReadDataByte
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _I2C_Send_NACK
 11818  0996                     _I2C_Send_NACK:	
 11819                           
 11820                           ;i2c.c: 68:     i2c1_driver_sendNACK();
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _I2C_Send_NACK: [status,2+status,0+pclath+cstack]
 11824  0996  3189  21D0         	fcall	_i2c1_driver_sendNACK
 11825  0998  0008               	return
 11826  0999                     __end_of_I2C_Send_NACK:	
 11827                           
 11828                           	psect	text46
 11829  09D0                     __ptext46:	
 11830 ;; *************** function _i2c1_driver_sendNACK *****************
 11831 ;; Defined at:
 11832 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;		None
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;		None
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		None
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;Total ram usage:        0 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    5
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_I2C_Send_NACK
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _i2c1_driver_sendNACK
 11862  09D0                     _i2c1_driver_sendNACK:	
 11863                           
 11864                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _i2c1_driver_sendNACK: []
 11868  09D0  0024               	movlb	4	; select bank4
 11869  09D1  1696               	bsf	22,5	;volatile
 11870                           
 11871                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 11872  09D2  1616               	bsf	22,4	;volatile
 11873  09D3  0008               	return
 11874  09D4                     __end_of_i2c1_driver_sendNACK:	
 11875                           
 11876                           	psect	text47
 11877  0A70                     __ptext47:	
 11878 ;; *************** function _I2C_Read_Byte *****************
 11879 ;; Defined at:
 11880 ;;		line 115 in file "i2c.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;		None
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;		None
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      unsigned char 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0, pclath, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;Total ram usage:        0 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    6
 11901 ;; This function calls:
 11902 ;;		_i2c1_driver_getRXData
 11903 ;;		_i2c1_driver_isBufferFull
 11904 ;;		_i2c1_driver_startRX
 11905 ;; This function is called by:
 11906 ;;		_wireReadDataBlock
 11907 ;;		_wireReadDataByte
 11908 ;; This function uses a non-reentrant model
 11909 ;;
 11910                           
 11911                           
 11912                           ;psect for function _I2C_Read_Byte
 11913  0A70                     _I2C_Read_Byte:	
 11914                           
 11915                           ;i2c.c: 117:     i2c1_driver_startRX();
 11916                           
 11917                           ;incstack = 0
 11918                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 11919  0A70  3189  2193  318A   	fcall	_i2c1_driver_startRX
 11920  0A73                     l5673:	
 11921                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 11922                           
 11923                           
 11924                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 11925  0A73  318A  2215  318A   	fcall	_i2c1_driver_isBufferFull
 11926  0A76  1C03               	btfss	3,0
 11927  0A77  2A73               	goto	l5673
 11928                           
 11929                           ;i2c.c: 137:   return i2c1_driver_getRXData();
 11930  0A78  3189  2190         	fcall	_i2c1_driver_getRXData
 11931  0A7A  0008               	return
 11932  0A7B                     __end_of_I2C_Read_Byte:	
 11933                           
 11934                           	psect	text48
 11935  0993                     __ptext48:	
 11936 ;; *************** function _i2c1_driver_startRX *****************
 11937 ;; Defined at:
 11938 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		None
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;Total ram usage:        0 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    5
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_I2C_Read_Byte
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _i2c1_driver_startRX
 11968  0993                     _i2c1_driver_startRX:	
 11969                           
 11970                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _i2c1_driver_startRX: []
 11974  0993  0024               	movlb	4	; select bank4
 11975  0994  1596               	bsf	22,3	;volatile
 11976  0995  0008               	return
 11977  0996                     __end_of_i2c1_driver_startRX:	
 11978                           
 11979                           	psect	text49
 11980  0A15                     __ptext49:	
 11981 ;; *************** function _i2c1_driver_isBufferFull *****************
 11982 ;; Defined at:
 11983 ;;		line 213 in file "mcc_generated_files/i2c1_driver.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;		None
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;		None               void
 11990 ;; Registers used:
 11991 ;;		wreg, status,2, status,0
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;Total ram usage:        1 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:    5
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_I2C_Read_Byte
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           
 12012                           ;psect for function _i2c1_driver_isBufferFull
 12013  0A15                     _i2c1_driver_isBufferFull:	
 12014                           
 12015                           ;mcc_generated_files/i2c1_driver.c: 215:     return SSP1STATbits.BF;
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _i2c1_driver_isBufferFull: [wreg+status,2+status,0]
 12019  0A15  0024               	movlb	4	; select bank4
 12020  0A16  0814               	movf	20,w	;volatile
 12021  0A17  3901               	andlw	1
 12022  0A18  0020               	movlb	0	; select bank0
 12023  0A19  00A0               	movwf	??_i2c1_driver_isBufferFull
 12024  0A1A  0C20               	rrf	??_i2c1_driver_isBufferFull,w
 12025  0A1B  0008               	return
 12026  0A1C                     __end_of_i2c1_driver_isBufferFull:	
 12027                           
 12028                           	psect	text50
 12029  0990                     __ptext50:	
 12030 ;; *************** function _i2c1_driver_getRXData *****************
 12031 ;; Defined at:
 12032 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      unsigned char 
 12039 ;; Registers used:
 12040 ;;		wreg
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    5
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_I2C_Read_Byte
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           
 12061                           ;psect for function _i2c1_driver_getRXData
 12062  0990                     _i2c1_driver_getRXData:	
 12063                           
 12064                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 12065                           
 12066                           ;incstack = 0
 12067                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 12068  0990  0024               	movlb	4	; select bank4
 12069  0991  0811               	movf	17,w	;volatile
 12070  0992  0008               	return
 12071  0993                     __end_of_i2c1_driver_getRXData:	
 12072                           
 12073                           	psect	text51
 12074  098D                     __ptext51:	
 12075 ;; *************** function _I2C_ReStart *****************
 12076 ;; Defined at:
 12077 ;;		line 43 in file "i2c.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;		None
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		status,2, status,0, pclath, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;Total ram usage:        0 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    6
 12098 ;; This function calls:
 12099 ;;		_i2c1_driver_restart
 12100 ;; This function is called by:
 12101 ;;		_wireReadDataBlock
 12102 ;;		_wireReadDataByte
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           
 12107                           ;psect for function _I2C_ReStart
 12108  098D                     _I2C_ReStart:	
 12109                           
 12110                           ;i2c.c: 45:  i2c1_driver_restart();
 12111                           
 12112                           ;incstack = 0
 12113                           ; Regs used in _I2C_ReStart: [status,2+status,0+pclath+cstack]
 12114  098D  3189  218A         	fcall	_i2c1_driver_restart
 12115  098F  0008               	return
 12116  0990                     __end_of_I2C_ReStart:	
 12117                           
 12118                           	psect	text52
 12119  098A                     __ptext52:	
 12120 ;; *************** function _i2c1_driver_restart *****************
 12121 ;; Defined at:
 12122 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;		None
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;		None
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  1    wreg      void 
 12129 ;; Registers used:
 12130 ;;		None
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;Total ram usage:        0 bytes
 12141 ;; Hardware stack levels used:    1
 12142 ;; Hardware stack levels required when called:    5
 12143 ;; This function calls:
 12144 ;;		Nothing
 12145 ;; This function is called by:
 12146 ;;		_I2C_ReStart
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           
 12151                           ;psect for function _i2c1_driver_restart
 12152  098A                     _i2c1_driver_restart:	
 12153                           
 12154                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 12155                           
 12156                           ;incstack = 0
 12157                           ; Regs used in _i2c1_driver_restart: []
 12158  098A  0024               	movlb	4	; select bank4
 12159  098B  1496               	bsf	22,1	;volatile
 12160  098C  0008               	return
 12161  098D                     __end_of_i2c1_driver_restart:	
 12162                           
 12163                           	psect	text53
 12164  0B12                     __ptext53:	
 12165 ;; *************** function _SYSTEM_Initialize *****************
 12166 ;; Defined at:
 12167 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;		None
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		wreg, status,2, status,0, pclath, cstack
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;Total ram usage:        0 bytes
 12186 ;; Hardware stack levels used:    1
 12187 ;; Hardware stack levels required when called:    7
 12188 ;; This function calls:
 12189 ;;		_ADC_Initialize
 12190 ;;		_OSCILLATOR_Initialize
 12191 ;;		_PIN_MANAGER_Initialize
 12192 ;;		_PMD_Initialize
 12193 ;;		_PWM1_Initialize
 12194 ;;		_SPI2_Initialize
 12195 ;;		_TMR2_Initialize
 12196 ;;		_WDT_Initialize
 12197 ;; This function is called by:
 12198 ;;		_main
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           
 12202                           
 12203                           ;psect for function _SYSTEM_Initialize
 12204  0B12                     _SYSTEM_Initialize:	
 12205                           
 12206                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12207                           
 12208                           ;incstack = 0
 12209                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12210  0B12  318A  223C  318B   	fcall	_PMD_Initialize
 12211                           
 12212                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12213  0B15  318E  2650  318B   	fcall	_PIN_MANAGER_Initialize
 12214                           
 12215                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12216  0B18  318A  2234  318B   	fcall	_OSCILLATOR_Initialize
 12217                           
 12218                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 12219  0B1B  3189  21CC  318B   	fcall	_WDT_Initialize
 12220                           
 12221                           ;mcc_generated_files/mcc.c: 57:     SPI2_Initialize();
 12222  0B1E  318A  220E  318B   	fcall	_SPI2_Initialize
 12223                           
 12224                           ;mcc_generated_files/mcc.c: 58:     PWM1_Initialize();
 12225  0B21  318A  227B  318B   	fcall	_PWM1_Initialize
 12226                           
 12227                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 12228  0B24  318A  222C  318B   	fcall	_ADC_Initialize
 12229                           
 12230                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 12231  0B27  318A  2244         	fcall	_TMR2_Initialize
 12232  0B29  0008               	return
 12233  0B2A                     __end_of_SYSTEM_Initialize:	
 12234                           
 12235                           	psect	text54
 12236  09CC                     __ptext54:	
 12237 ;; *************** function _WDT_Initialize *****************
 12238 ;; Defined at:
 12239 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    5
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_SYSTEM_Initialize
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           
 12268                           ;psect for function _WDT_Initialize
 12269  09CC                     _WDT_Initialize:	
 12270                           
 12271                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
 12272                           
 12273                           ;incstack = 0
 12274                           ; Regs used in _WDT_Initialize: [wreg]
 12275  09CC  3018               	movlw	24
 12276  09CD  0021               	movlb	1	; select bank1
 12277  09CE  0097               	movwf	23	;volatile
 12278  09CF  0008               	return
 12279  09D0                     __end_of_WDT_Initialize:	
 12280                           
 12281                           	psect	text55
 12282  0A44                     __ptext55:	
 12283 ;; *************** function _TMR2_Initialize *****************
 12284 ;; Defined at:
 12285 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1    wreg      void 
 12292 ;; Registers used:
 12293 ;;		wreg, status,2
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:    5
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_SYSTEM_Initialize
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function _TMR2_Initialize
 12315  0A44                     _TMR2_Initialize:	
 12316                           
 12317                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 12318                           
 12319                           ;incstack = 0
 12320                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12321  0A44  30FF               	movlw	255
 12322  0A45  0020               	movlb	0	; select bank0
 12323  0A46  009E               	movwf	30	;volatile
 12324                           
 12325                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 12326  0A47  019D               	clrf	29	;volatile
 12327                           
 12328                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 12329  0A48  1091               	bcf	17,1	;volatile
 12330                           
 12331                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
 12332  0A49  3004               	movlw	4
 12333  0A4A  009F               	movwf	31	;volatile
 12334  0A4B  0008               	return
 12335  0A4C                     __end_of_TMR2_Initialize:	
 12336                           
 12337                           	psect	text56
 12338  0A0E                     __ptext56:	
 12339 ;; *************** function _SPI2_Initialize *****************
 12340 ;; Defined at:
 12341 ;;		line 65 in file "mcc_generated_files/spi2.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;		None
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;		None
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      void 
 12348 ;; Registers used:
 12349 ;;		wreg, status,2
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;Total ram usage:        0 bytes
 12360 ;; Hardware stack levels used:    1
 12361 ;; Hardware stack levels required when called:    5
 12362 ;; This function calls:
 12363 ;;		Nothing
 12364 ;; This function is called by:
 12365 ;;		_SYSTEM_Initialize
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           
 12370                           ;psect for function _SPI2_Initialize
 12371  0A0E                     _SPI2_Initialize:	
 12372                           
 12373                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x80;
 12374                           
 12375                           ;incstack = 0
 12376                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 12377  0A0E  3080               	movlw	128
 12378  0A0F  0024               	movlb	4	; select bank4
 12379  0A10  009C               	movwf	28	;volatile
 12380                           
 12381                           ;mcc_generated_files/spi2.c: 73:     SSP2CON1 = 0x30;
 12382  0A11  3030               	movlw	48
 12383  0A12  009D               	movwf	29	;volatile
 12384                           
 12385                           ;mcc_generated_files/spi2.c: 76:     SSP2ADD = 0x00;
 12386  0A13  019A               	clrf	26	;volatile
 12387  0A14  0008               	return
 12388  0A15                     __end_of_SPI2_Initialize:	
 12389                           
 12390                           	psect	text57
 12391  0A7B                     __ptext57:	
 12392 ;; *************** function _PWM1_Initialize *****************
 12393 ;; Defined at:
 12394 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;		None
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      void 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2, status,0
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    5
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_SYSTEM_Initialize
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           
 12423                           ;psect for function _PWM1_Initialize
 12424  0A7B                     _PWM1_Initialize:	
 12425                           
 12426                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
 12427                           
 12428                           ;incstack = 0
 12429                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12430  0A7B  308F               	movlw	143
 12431  0A7C  0025               	movlb	5	; select bank5
 12432  0A7D  0093               	movwf	19	;volatile
 12433                           
 12434                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
 12435  0A7E  3001               	movlw	1
 12436  0A7F  0092               	movwf	18	;volatile
 12437                           
 12438                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
 12439  0A80  30FF               	movlw	255
 12440  0A81  0091               	movwf	17	;volatile
 12441                           
 12442                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
 12443  0A82  081F               	movf	31,w	;volatile
 12444  0A83  39FC               	andlw	-4
 12445  0A84  3801               	iorlw	1
 12446  0A85  009F               	movwf	31	;volatile
 12447  0A86  0008               	return
 12448  0A87                     __end_of_PWM1_Initialize:	
 12449                           
 12450                           	psect	text58
 12451  0A3C                     __ptext58:	
 12452 ;; *************** function _PMD_Initialize *****************
 12453 ;; Defined at:
 12454 ;;		line 83 in file "mcc_generated_files/mcc.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;		None
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;		None
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1    wreg      void 
 12461 ;; Registers used:
 12462 ;;		status,2
 12463 ;; Tracked objects:
 12464 ;;		On entry : 0/0
 12465 ;;		On exit  : 0/0
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;Total ram usage:        0 bytes
 12473 ;; Hardware stack levels used:    1
 12474 ;; Hardware stack levels required when called:    5
 12475 ;; This function calls:
 12476 ;;		Nothing
 12477 ;; This function is called by:
 12478 ;;		_SYSTEM_Initialize
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           
 12483                           ;psect for function _PMD_Initialize
 12484  0A3C                     _PMD_Initialize:	
 12485                           
 12486                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 12487                           
 12488                           ;incstack = 0
 12489                           ; Regs used in _PMD_Initialize: [status,2]
 12490  0A3C  0032               	movlb	18	; select bank18
 12491  0A3D  0191               	clrf	17	;volatile
 12492                           
 12493                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 12494  0A3E  0192               	clrf	18	;volatile
 12495                           
 12496                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 12497  0A3F  0193               	clrf	19	;volatile
 12498                           
 12499                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 12500  0A40  0194               	clrf	20	;volatile
 12501                           
 12502                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 12503  0A41  0195               	clrf	21	;volatile
 12504                           
 12505                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 12506  0A42  0196               	clrf	22	;volatile
 12507  0A43  0008               	return
 12508  0A44                     __end_of_PMD_Initialize:	
 12509                           
 12510                           	psect	text59
 12511  0E50                     __ptext59:	
 12512 ;; *************** function _PIN_MANAGER_Initialize *****************
 12513 ;; Defined at:
 12514 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;		None
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2, status,0, pclath, cstack
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;Total ram usage:        0 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:    6
 12535 ;; This function calls:
 12536 ;;		_IOCCF1_SetInterruptHandler
 12537 ;; This function is called by:
 12538 ;;		_SYSTEM_Initialize
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           
 12543                           ;psect for function _PIN_MANAGER_Initialize
 12544  0E50                     _PIN_MANAGER_Initialize:	
 12545                           
 12546                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12547                           
 12548                           ;incstack = 0
 12549                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12550  0E50  0022               	movlb	2	; select bank2
 12551  0E51  018C               	clrf	12	;volatile
 12552                           
 12553                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12554  0E52  018D               	clrf	13	;volatile
 12555                           
 12556                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12557  0E53  018E               	clrf	14	;volatile
 12558                           
 12559                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
 12560  0E54  3037               	movlw	55
 12561  0E55  0021               	movlb	1	; select bank1
 12562  0E56  008C               	movwf	12	;volatile
 12563                           
 12564                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xB0;
 12565  0E57  30B0               	movlw	176
 12566  0E58  008D               	movwf	13	;volatile
 12567                           
 12568                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x79;
 12569  0E59  3079               	movlw	121
 12570  0E5A  008E               	movwf	14	;volatile
 12571                           
 12572                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xF5;
 12573  0E5B  30F5               	movlw	245
 12574  0E5C  0023               	movlb	3	; select bank3
 12575  0E5D  008E               	movwf	14	;volatile
 12576                           
 12577                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
 12578  0E5E  018D               	clrf	13	;volatile
 12579                           
 12580                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x11;
 12581  0E5F  3011               	movlw	17
 12582  0E60  008C               	movwf	12	;volatile
 12583                           
 12584                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 12585  0E61  0024               	movlb	4	; select bank4
 12586  0E62  018D               	clrf	13	;volatile
 12587                           
 12588                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
 12589  0E63  018C               	clrf	12	;volatile
 12590                           
 12591                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
 12592  0E64  018E               	clrf	14	;volatile
 12593                           
 12594                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
 12595  0E65  0025               	movlb	5	; select bank5
 12596  0E66  018C               	clrf	12	;volatile
 12597                           
 12598                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
 12599  0E67  018D               	clrf	13	;volatile
 12600                           
 12601                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
 12602  0E68  018E               	clrf	14	;volatile
 12603                           
 12604                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
 12605  0E69  3037               	movlw	55
 12606  0E6A  0026               	movlb	6	; select bank6
 12607  0E6B  008C               	movwf	12	;volatile
 12608                           
 12609                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
 12610  0E6C  30F0               	movlw	240
 12611  0E6D  008D               	movwf	13	;volatile
 12612                           
 12613                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
 12614  0E6E  30FF               	movlw	255
 12615  0E6F  008E               	movwf	14	;volatile
 12616                           
 12617                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
 12618  0E70  0027               	movlb	7	; select bank7
 12619  0E71  1099               	bcf	25,1	;volatile
 12620                           
 12621                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 0;
 12622  0E72  1098               	bcf	24,1	;volatile
 12623                           
 12624                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
 12625  0E73  1497               	bsf	23,1	;volatile
 12626                           
 12627                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
 12628  0E74  306E               	movlw	low _IOCCF1_DefaultInterruptHandler
 12629  0E75  0020               	movlb	0	; select bank0
 12630  0E76  00A0               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
 12631  0E77  3009               	movlw	high _IOCCF1_DefaultInterruptHandler
 12632  0E78  00A1               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
 12633  0E79  318A  2254         	fcall	_IOCCF1_SetInterruptHandler
 12634                           
 12635                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
 12636  0E7B  0021               	movlb	1	; select bank1
 12637  0E7C  1610               	bsf	16,4	;volatile
 12638                           
 12639                           ;mcc_generated_files/pin_manager.c: 121:     SSP2DATPPS = 0x0C;
 12640  0E7D  300C               	movlw	12
 12641  0E7E  003C               	movlb	28	; select bank28
 12642  0E7F  009E               	movwf	30	;volatile
 12643                           
 12644                           ;mcc_generated_files/pin_manager.c: 122:     SSP1CLKPPS = 0x0F;
 12645  0E80  300F               	movlw	15
 12646  0E81  00A0               	movwf	32	;volatile
 12647                           
 12648                           ;mcc_generated_files/pin_manager.c: 123:     RB6PPS = 0x1A;
 12649  0E82  301A               	movlw	26
 12650  0E83  003D               	movlb	29	; select bank29
 12651  0E84  009E               	movwf	30	;volatile
 12652                           
 12653                           ;mcc_generated_files/pin_manager.c: 124:     RB7PPS = 0x18;
 12654  0E85  3018               	movlw	24
 12655  0E86  009F               	movwf	31	;volatile
 12656                           
 12657                           ;mcc_generated_files/pin_manager.c: 125:     RB5PPS = 0x19;
 12658  0E87  3019               	movlw	25
 12659  0E88  009D               	movwf	29	;volatile
 12660                           
 12661                           ;mcc_generated_files/pin_manager.c: 126:     RC2PPS = 0x1B;
 12662  0E89  301B               	movlw	27
 12663  0E8A  00A2               	movwf	34	;volatile
 12664                           
 12665                           ;mcc_generated_files/pin_manager.c: 127:     SSP1DATPPS = 0x0D;
 12666  0E8B  300D               	movlw	13
 12667  0E8C  003C               	movlb	28	; select bank28
 12668  0E8D  00A1               	movwf	33	;volatile
 12669                           
 12670                           ;mcc_generated_files/pin_manager.c: 128:     SSP2CLKPPS = 0x0E;
 12671  0E8E  300E               	movlw	14
 12672  0E8F  009D               	movwf	29	;volatile
 12673  0E90  0008               	return
 12674  0E91                     __end_of_PIN_MANAGER_Initialize:	
 12675                           
 12676                           	psect	text60
 12677  0A54                     __ptext60:	
 12678 ;; *************** function _IOCCF1_SetInterruptHandler *****************
 12679 ;; Defined at:
 12680 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 12683 ;;		 -> IOCCF1_DefaultInterruptHandler(1), 
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;		None
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		wreg
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;Total ram usage:        2 bytes
 12700 ;; Hardware stack levels used:    1
 12701 ;; Hardware stack levels required when called:    5
 12702 ;; This function calls:
 12703 ;;		Nothing
 12704 ;; This function is called by:
 12705 ;;		_PIN_MANAGER_Initialize
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           
 12710                           ;psect for function _IOCCF1_SetInterruptHandler
 12711  0A54                     _IOCCF1_SetInterruptHandler:	
 12712                           
 12713                           ;mcc_generated_files/pin_manager.c: 159:     IOCCF1_InterruptHandler = InterruptHandler;
 12714                           
 12715                           ;incstack = 0
 12716                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
 12717  0A54  0020               	movlb	0	; select bank0
 12718  0A55  0821               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
 12719  0A56  0021               	movlb	1	; select bank1
 12720  0A57  00E5               	movwf	(_IOCCF1_InterruptHandler+1)^(0+128)
 12721  0A58  0020               	movlb	0	; select bank0
 12722  0A59  0820               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
 12723  0A5A  0021               	movlb	1	; select bank1
 12724  0A5B  00E4               	movwf	_IOCCF1_InterruptHandler^(0+128)
 12725  0A5C  0008               	return
 12726  0A5D                     __end_of_IOCCF1_SetInterruptHandler:	
 12727                           
 12728                           	psect	text61
 12729  0A34                     __ptext61:	
 12730 ;; *************** function _OSCILLATOR_Initialize *****************
 12731 ;; Defined at:
 12732 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, status,2
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;Total ram usage:        0 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    5
 12753 ;; This function calls:
 12754 ;;		Nothing
 12755 ;; This function is called by:
 12756 ;;		_SYSTEM_Initialize
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           
 12761                           ;psect for function _OSCILLATOR_Initialize
 12762  0A34                     _OSCILLATOR_Initialize:	
 12763                           
 12764                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
 12765                           
 12766                           ;incstack = 0
 12767                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12768  0A34  3061               	movlw	97
 12769  0A35  0032               	movlb	18	; select bank18
 12770  0A36  0099               	movwf	25	;volatile
 12771                           
 12772                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12773  0A37  019B               	clrf	27	;volatile
 12774                           
 12775                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12776  0A38  019D               	clrf	29	;volatile
 12777                           
 12778                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
 12779  0A39  019F               	clrf	31	;volatile
 12780                           
 12781                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12782  0A3A  019E               	clrf	30	;volatile
 12783  0A3B  0008               	return
 12784  0A3C                     __end_of_OSCILLATOR_Initialize:	
 12785                           
 12786                           	psect	text62
 12787  0A2C                     __ptext62:	
 12788 ;; *************** function _ADC_Initialize *****************
 12789 ;; Defined at:
 12790 ;;		line 65 in file "mcc_generated_files/adc.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;Total ram usage:        0 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    5
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_SYSTEM_Initialize
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function _ADC_Initialize
 12820  0A2C                     _ADC_Initialize:	
 12821                           
 12822                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12826  0A2C  3001               	movlw	1
 12827  0A2D  0021               	movlb	1	; select bank1
 12828  0A2E  009D               	movwf	29	;volatile
 12829                           
 12830                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
 12831  0A2F  019E               	clrf	30	;volatile
 12832                           
 12833                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
 12834  0A30  019F               	clrf	31	;volatile
 12835                           
 12836                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 12837  0A31  019B               	clrf	27	;volatile
 12838                           
 12839                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
 12840  0A32  019C               	clrf	28	;volatile
 12841  0A33  0008               	return
 12842  0A34                     __end_of_ADC_Initialize:	
 12843                           
 12844                           	psect	intentry
 12845  0004                     __pintentry:	
 12846 ;; *************** function _INTERRUPT_InterruptManager *****************
 12847 ;; Defined at:
 12848 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      void 
 12855 ;; Registers used:
 12856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:    4
 12869 ;; This function calls:
 12870 ;;		Absolute function
 12871 ;;		_PIN_MANAGER_IOC
 12872 ;;		_i2c_ISR
 12873 ;;		_i2c_busCollisionISR
 12874 ;; This function is called by:
 12875 ;;		Interrupt level 1
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879  0004                     _INTERRUPT_InterruptManager:	
 12880                           
 12881                           ;incstack = 0
 12882  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12883                           
 12884                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12885  0005  3180               	pagesel	$
 12886                           
 12887                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 12888  0006  0021               	movlb	1	; select bank1
 12889  0007  1E10               	btfss	16,4	;volatile
 12890  0008  2810               	goto	i1l245
 12891  0009  0020               	movlb	0	; select bank0
 12892  000A  1E10               	btfss	16,4	;volatile
 12893  000B  2810               	goto	i1l245
 12894                           
 12895                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 12896  000C  3189  21E2  3180   	fcall	_PIN_MANAGER_IOC
 12897                           
 12898                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12899  000F  2829               	goto	i1l253
 12900  0010                     i1l245:	
 12901                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 12902                           
 12903  0010  1F0B               	btfss	11,6	;volatile
 12904  0011  2829               	goto	i1l253
 12905                           
 12906                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 12907  0012  0021               	movlb	1	; select bank1
 12908  0013  1D11               	btfss	17,2	;volatile
 12909  0014  281E               	goto	i1l248
 12910  0015  0020               	movlb	0	; select bank0
 12911  0016  1D11               	btfss	17,2	;volatile
 12912  0017  281E               	goto	i1l248
 12913                           
 12914                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
 12915  0018  086D               	movf	_i2c1_driver_busCollisionISR+1,w
 12916  0019  008A               	movwf	10
 12917  001A  086C               	movf	_i2c1_driver_busCollisionISR,w
 12918  001B  000A               	callw
 12919  001C  3180               	pagesel	$
 12920                           
 12921                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12922  001D  2829               	goto	i1l253
 12923  001E                     i1l248:	
 12924                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 12925                           
 12926  001E  0021               	movlb	1	; select bank1
 12927  001F  1D91               	btfss	17,3	;volatile
 12928  0020  2829               	goto	i1l253
 12929  0021  0020               	movlb	0	; select bank0
 12930  0022  1D91               	btfss	17,3	;volatile
 12931  0023  2829               	goto	i1l253
 12932                           
 12933                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
 12934  0024  086B               	movf	_i2c1_driver_i2cISR+1,w
 12935  0025  008A               	movwf	10
 12936  0026  086A               	movf	_i2c1_driver_i2cISR,w
 12937  0027  000A               	callw
 12938  0028  3180               	pagesel	$
 12939  0029                     i1l253:	
 12940                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 12941                           
 12942                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12943                           
 12944  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12945  002A  0009               	retfie
 12946  002B                     __end_of_INTERRUPT_InterruptManager:	
 12947                           
 12948                           	psect	text64
 12949  0987                     __ptext64:	
 12950 ;; *************** function _i2c_busCollisionISR *****************
 12951 ;; Defined at:
 12952 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;		None
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  1    wreg      void 
 12959 ;; Registers used:
 12960 ;;		status,2, status,0, pclath, cstack
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;Total ram usage:        0 bytes
 12971 ;; Hardware stack levels used:    1
 12972 ;; Hardware stack levels required when called:    1
 12973 ;; This function calls:
 12974 ;;		_i2c1_driver_clearBusCollision
 12975 ;; This function is called by:
 12976 ;;		_i2c_open
 12977 ;;		_INTERRUPT_InterruptManager
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           
 12982                           ;psect for function _i2c_busCollisionISR
 12983  0987                     _i2c_busCollisionISR:	
 12984                           
 12985                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 12989  0987  3189  2184         	fcall	_i2c1_driver_clearBusCollision
 12990  0989  0008               	return
 12991  098A                     __end_of_i2c_busCollisionISR:	
 12992                           
 12993                           	psect	text65
 12994  0984                     __ptext65:	
 12995 ;; *************** function _i2c1_driver_clearBusCollision *****************
 12996 ;; Defined at:
 12997 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;		None
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		None
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;Total ram usage:        0 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; This function calls:
 13018 ;;		Nothing
 13019 ;; This function is called by:
 13020 ;;		_i2c_busCollisionISR
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _i2c1_driver_clearBusCollision
 13026  0984                     _i2c1_driver_clearBusCollision:	
 13027                           
 13028                           ;mcc_generated_files/i2c1_driver.c: 255:     PIR1bits.BCL1IF = 0;
 13029                           
 13030                           ;incstack = 0
 13031                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13032  0984  0020               	movlb	0	; select bank0
 13033  0985  1111               	bcf	17,2	;volatile
 13034  0986  0008               	return
 13035  0987                     __end_of_i2c1_driver_clearBusCollision:	
 13036                           
 13037                           	psect	text66
 13038  0BEF                     __ptext66:	
 13039 ;; *************** function _i2c_ISR *****************
 13040 ;; Defined at:
 13041 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;		None
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  1    wreg      void 
 13048 ;; Registers used:
 13049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;Total ram usage:        3 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    3
 13062 ;; This function calls:
 13063 ;;		_do_I2C_DO_ACK
 13064 ;;		_do_I2C_DO_ADDRESS_NACK
 13065 ;;		_do_I2C_DO_NACK_RESTART
 13066 ;;		_do_I2C_DO_NACK_STOP
 13067 ;;		_do_I2C_IDLE
 13068 ;;		_do_I2C_RCEN
 13069 ;;		_do_I2C_RESET
 13070 ;;		_do_I2C_RX
 13071 ;;		_do_I2C_SEND_ADR_READ
 13072 ;;		_do_I2C_SEND_ADR_WRITE
 13073 ;;		_do_I2C_SEND_RESTART
 13074 ;;		_do_I2C_SEND_RESTART_READ
 13075 ;;		_do_I2C_SEND_RESTART_WRITE
 13076 ;;		_do_I2C_SEND_STOP
 13077 ;;		_do_I2C_TX
 13078 ;;		_do_I2C_TX_EMPTY
 13079 ;;		_i2c1_driver_isNACK
 13080 ;;		_mssp1_clearIRQ
 13081 ;; This function is called by:
 13082 ;;		_i2c_open
 13083 ;;		_i2c_poller
 13084 ;;		_INTERRUPT_InterruptManager
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           
 13089                           ;psect for function _i2c_ISR
 13090  0BEF                     _i2c_ISR:	
 13091                           
 13092                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 13093                           
 13094                           ;incstack = 0
 13095                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13096  0BEF  3189  2181  318B   	fcall	_mssp1_clearIRQ
 13097                           
 13098                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 13099  0BF2  0023               	movlb	3	; select bank3
 13100  0BF3  1DA0               	btfss	_i2c_status^(0+384),3
 13101  0BF4  2BFF               	goto	i1l5017
 13102  0BF5  318A  221C  318B   	fcall	_i2c1_driver_isNACK
 13103  0BF8  1C03               	btfss	3,0
 13104  0BF9  2BFF               	goto	i1l5017
 13105                           
 13106                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 13107  0BFA  300F               	movlw	15
 13108  0BFB  00F3               	movwf	??_i2c_ISR
 13109  0BFC  0873               	movf	??_i2c_ISR,w
 13110  0BFD  0023               	movlb	3	; select bank3
 13111  0BFE  00A9               	movwf	(_i2c_status^(0+384)+9)
 13112  0BFF                     i1l5017:	
 13113                           
 13114                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 13115  0BFF  0023               	movlb	3	; select bank3
 13116  0C00  0829               	movf	(_i2c_status^(0+384)+9),w
 13117  0C01  00F3               	movwf	??_i2c_ISR
 13118  0C02  01F4               	clrf	??_i2c_ISR+1
 13119  0C03  35F3               	lslf	??_i2c_ISR,f
 13120  0C04  0DF4               	rlf	??_i2c_ISR+1,f
 13121  0C05  3000               	movlw	low (_fsmStateTable| (0+32768))
 13122  0C06  0773               	addwf	??_i2c_ISR,w
 13123  0C07  0084               	movwf	4
 13124  0C08  3090               	movlw	high (_fsmStateTable| (0+32768))
 13125  0C09  3D74               	addwfc	??_i2c_ISR+1,w
 13126  0C0A  0085               	movwf	5
 13127  0C0B  3F01               	moviw [1]fsr0
 13128  0C0C  008A               	movwf	10
 13129  0C0D  3F00               	moviw [0]fsr0
 13130  0C0E  000A               	callw
 13131  0C0F  318B               	pagesel	$
 13132  0C10  00F5               	movwf	??_i2c_ISR+2
 13133  0C11  0875               	movf	??_i2c_ISR+2,w
 13134  0C12  0023               	movlb	3	; select bank3
 13135  0C13  00A9               	movwf	(_i2c_status^(0+384)+9)
 13136  0C14  0008               	return
 13137  0C15                     __end_of_i2c_ISR:	
 13138                           
 13139                           	psect	text67
 13140  0981                     __ptext67:	
 13141 ;; *************** function _mssp1_clearIRQ *****************
 13142 ;; Defined at:
 13143 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;		None
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;		None
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  1    wreg      void 
 13150 ;; Registers used:
 13151 ;;		None
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13161 ;;Total ram usage:        0 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_i2c_ISR
 13167 ;;		_i2c_open
 13168 ;;		_i2c_close
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           
 13173                           ;psect for function _mssp1_clearIRQ
 13174  0981                     _mssp1_clearIRQ:	
 13175                           
 13176                           ;mcc_generated_files/i2c1_driver.c: 55:         SSP1STAT = 0x00;
 13177                           
 13178                           ;incstack = 0
 13179                           ; Regs used in _mssp1_clearIRQ: []
 13180  0981  0020               	movlb	0	; select bank0
 13181  0982  1191               	bcf	17,3	;volatile
 13182  0983  0008               	return
 13183  0984                     __end_of_mssp1_clearIRQ:	
 13184                           
 13185                           	psect	text68
 13186  0ED2                     __ptext68:	
 13187 ;; *************** function _do_I2C_RX *****************
 13188 ;; Defined at:
 13189 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;		None
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  1    wreg      enum E7120
 13196 ;; Registers used:
 13197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;Total ram usage:        3 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:    2
 13210 ;; This function calls:
 13211 ;;		_do_I2C_DO_NACK_RESTART
 13212 ;;		_do_I2C_DO_NACK_STOP
 13213 ;;		_i2c1_driver_sendACK
 13214 ;;		_returnReset
 13215 ;;		_returnStop
 13216 ;;		i1_i2c1_driver_getRXData
 13217 ;; This function is called by:
 13218 ;;		_i2c_ISR
 13219 ;; This function uses a non-reentrant model
 13220 ;;
 13221                           
 13222                           
 13223                           ;psect for function _do_I2C_RX
 13224  0ED2                     _do_I2C_RX:	
 13225                           
 13226                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 13227                           
 13228                           ;incstack = 0
 13229                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13230  0ED2  3189  217B  318E   	fcall	i1_i2c1_driver_getRXData
 13231  0ED5  00F0               	movwf	??_do_I2C_RX
 13232  0ED6  0023               	movlb	3	; select bank3
 13233  0ED7  0822               	movf	(low ((_i2c_status| (0+256)+2)))^(0+128),w
 13234  0ED8  0086               	movwf	6
 13235  0ED9  0187               	clrf	7
 13236  0EDA  0870               	movf	??_do_I2C_RX,w
 13237  0EDB  0081               	movwf	1
 13238  0EDC  3001               	movlw	1
 13239  0EDD  00F0               	movwf	??_do_I2C_RX
 13240  0EDE  0870               	movf	??_do_I2C_RX,w
 13241  0EDF  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^(0+128),f
 13242                           
 13243                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 13244  0EE0  3001               	movlw	1
 13245  0EE1  02A3               	subwf	(_i2c_status^(0+384)+3),f
 13246  0EE2  3000               	movlw	0
 13247  0EE3  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 13248  0EE4  0823               	movf	(_i2c_status^(0+384)+3),w
 13249  0EE5  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 13250  0EE6  1903               	btfsc	3,2
 13251  0EE7  2EEC               	goto	i1l173
 13252                           
 13253                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 13254  0EE8  3189  21A8         	fcall	_i2c1_driver_sendACK
 13255                           
 13256                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 13257  0EEA  3005               	movlw	5
 13258  0EEB  0008               	return
 13259  0EEC                     i1l173:	
 13260                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 13261                           
 13262                           
 13263                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 13264  0EEC  1520               	bsf	_i2c_status^(0+384),2
 13265                           
 13266                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 13267  0EED  2EF4               	goto	i1l4535
 13268  0EEE                     i1l4525:	
 13269                           
 13270                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 13271  0EEE  3189  21C8         	fcall	_do_I2C_DO_NACK_RESTART
 13272  0EF0  0008               	return
 13273  0EF1                     i1l4529:	
 13274                           
 13275                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 13276  0EF1  3189  21C4         	fcall	_do_I2C_DO_NACK_STOP
 13277  0EF3  0008               	return
 13278  0EF4                     i1l4535:	
 13279  0EF4  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 13280  0EF5  00F0               	movwf	??_do_I2C_RX
 13281  0EF6  0870               	movf	??_do_I2C_RX,w
 13282  0EF7  00F0               	movwf	returnReset@p
 13283  0EF8  300B               	movlw	11
 13284  0EF9  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13285  0EFA  0086               	movwf	6
 13286  0EFB  3001               	movlw	1	; select bank3/4
 13287  0EFC  0087               	movwf	7
 13288  0EFD  3F41               	moviw [1]fsr1
 13289  0EFE  008A               	movwf	10
 13290  0EFF  3F40               	moviw [0]fsr1
 13291  0F00  000A               	callw
 13292  0F01  318E               	pagesel	$
 13293  0F02  00F1               	movwf	??_do_I2C_RX+1
 13294  0F03  01F2               	clrf	??_do_I2C_RX+2
 13295                           
 13296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13297                           ; Switch size 1, requested type "simple"
 13298                           ; Number of cases is 1, Range of values is 0 to 0
 13299                           ; switch strategies available:
 13300                           ; Name         Instructions Cycles
 13301                           ; simple_byte            4     3 (average)
 13302                           ; direct_byte            8     6 (fixed)
 13303                           ; jumptable            260     6 (fixed)
 13304                           ;	Chosen strategy is simple_byte
 13305  0F04  0872               	movf	??_do_I2C_RX+2,w
 13306  0F05  3A00               	xorlw	0	; case 0
 13307  0F06  1903               	skipnz
 13308  0F07  2F09               	goto	i1l7133
 13309  0F08  2EF1               	goto	i1l4529
 13310  0F09                     i1l7133:	
 13311                           
 13312                           ; Switch size 1, requested type "simple"
 13313                           ; Number of cases is 4, Range of values is 1 to 4
 13314                           ; switch strategies available:
 13315                           ; Name         Instructions Cycles
 13316                           ; simple_byte           13     7 (average)
 13317                           ; direct_byte           17     9 (fixed)
 13318                           ; jumptable            263     9 (fixed)
 13319                           ;	Chosen strategy is simple_byte
 13320  0F09  0871               	movf	??_do_I2C_RX+1,w
 13321  0F0A  3A01               	xorlw	1	; case 1
 13322  0F0B  1903               	skipnz
 13323  0F0C  2EF1               	goto	i1l4529
 13324  0F0D  3A03               	xorlw	3	; case 2
 13325  0F0E  1903               	skipnz
 13326  0F0F  2EEE               	goto	i1l4525
 13327  0F10  3A01               	xorlw	1	; case 3
 13328  0F11  1903               	skipnz
 13329  0F12  2EEE               	goto	i1l4525
 13330  0F13  3A07               	xorlw	7	; case 4
 13331  0F14  1903               	skipnz
 13332  0F15  2EF1               	goto	i1l4529
 13333  0F16  2EF1               	goto	i1l4529
 13334  0F17  0008               	return
 13335  0F18                     __end_of_do_I2C_RX:	
 13336                           
 13337                           	psect	text69
 13338  0F62                     __ptext69:	
 13339 ;; *************** function _do_I2C_TX *****************
 13340 ;; Defined at:
 13341 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;		None
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;		None
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  1    wreg      enum E7120
 13348 ;; Registers used:
 13349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;Total ram usage:        3 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:    2
 13362 ;; This function calls:
 13363 ;;		_do_I2C_SEND_RESTART_READ
 13364 ;;		_do_I2C_SEND_RESTART_WRITE
 13365 ;;		_do_I2C_SEND_STOP
 13366 ;;		_i2c1_driver_isNACK
 13367 ;;		_returnReset
 13368 ;;		_returnStop
 13369 ;;		i1_i2c1_driver_TXData
 13370 ;; This function is called by:
 13371 ;;		_i2c_ISR
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function _do_I2C_TX
 13377  0F62                     _do_I2C_TX:	
 13378                           
 13379                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13383  0F62  318A  221C  318F   	fcall	_i2c1_driver_isNACK
 13384  0F65  1803               	btfsc	3,0
 13385  0F66  2F71               	goto	i1l4495
 13386  0F67  2F95               	goto	i1l157
 13387  0F68                     i1l4481:	
 13388                           
 13389                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 13390  0F68  3189  21B0         	fcall	_do_I2C_SEND_RESTART_READ
 13391  0F6A  0008               	return
 13392  0F6B                     i1l4485:	
 13393                           
 13394                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 13395  0F6B  3189  21B4         	fcall	_do_I2C_SEND_RESTART_WRITE
 13396  0F6D  0008               	return
 13397  0F6E                     i1l4489:	
 13398                           
 13399                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 13400  0F6E  3189  21BC         	fcall	_do_I2C_SEND_STOP
 13401  0F70  0008               	return
 13402  0F71                     i1l4495:	
 13403  0F71  0023               	movlb	3	; select bank3
 13404  0F72  083A               	movf	(low ((_i2c_status| (0+256)+26)))^(0+128),w
 13405  0F73  00F0               	movwf	??_do_I2C_TX
 13406  0F74  0870               	movf	??_do_I2C_TX,w
 13407  0F75  00F0               	movwf	returnReset@p
 13408  0F76  3011               	movlw	17
 13409  0F77  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13410  0F78  0086               	movwf	6
 13411  0F79  3001               	movlw	1	; select bank3/4
 13412  0F7A  0087               	movwf	7
 13413  0F7B  3F41               	moviw [1]fsr1
 13414  0F7C  008A               	movwf	10
 13415  0F7D  3F40               	moviw [0]fsr1
 13416  0F7E  000A               	callw
 13417  0F7F  318F               	pagesel	$
 13418  0F80  00F1               	movwf	??_do_I2C_TX+1
 13419  0F81  01F2               	clrf	??_do_I2C_TX+2
 13420                           
 13421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13422                           ; Switch size 1, requested type "simple"
 13423                           ; Number of cases is 1, Range of values is 0 to 0
 13424                           ; switch strategies available:
 13425                           ; Name         Instructions Cycles
 13426                           ; simple_byte            4     3 (average)
 13427                           ; direct_byte            8     6 (fixed)
 13428                           ; jumptable            260     6 (fixed)
 13429                           ;	Chosen strategy is simple_byte
 13430  0F82  0872               	movf	??_do_I2C_TX+2,w
 13431  0F83  3A00               	xorlw	0	; case 0
 13432  0F84  1903               	skipnz
 13433  0F85  2F87               	goto	i1l7135
 13434  0F86  2F6E               	goto	i1l4489
 13435  0F87                     i1l7135:	
 13436                           
 13437                           ; Switch size 1, requested type "simple"
 13438                           ; Number of cases is 4, Range of values is 1 to 4
 13439                           ; switch strategies available:
 13440                           ; Name         Instructions Cycles
 13441                           ; simple_byte           13     7 (average)
 13442                           ; direct_byte           17     9 (fixed)
 13443                           ; jumptable            263     9 (fixed)
 13444                           ;	Chosen strategy is simple_byte
 13445  0F87  0871               	movf	??_do_I2C_TX+1,w
 13446  0F88  3A01               	xorlw	1	; case 1
 13447  0F89  1903               	skipnz
 13448  0F8A  2F6E               	goto	i1l4489
 13449  0F8B  3A03               	xorlw	3	; case 2
 13450  0F8C  1903               	skipnz
 13451  0F8D  2F68               	goto	i1l4481
 13452  0F8E  3A01               	xorlw	1	; case 3
 13453  0F8F  1903               	skipnz
 13454  0F90  2F6B               	goto	i1l4485
 13455  0F91  3A07               	xorlw	7	; case 4
 13456  0F92  1903               	skipnz
 13457  0F93  2F6E               	goto	i1l4489
 13458  0F94  2F6E               	goto	i1l4489
 13459  0F95                     i1l157:	
 13460                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 13461                           
 13462                           
 13463                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 13464  0F95  0023               	movlb	3	; select bank3
 13465  0F96  11A0               	bcf	_i2c_status^(0+384),3
 13466                           
 13467                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 13468  0F97  3002               	movlw	2
 13469  0F98  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13470  0F99  0086               	movwf	6
 13471  0F9A  3001               	movlw	1	; select bank3/4
 13472  0F9B  0087               	movwf	7
 13473  0F9C  3F40               	moviw [0]fsr1
 13474  0F9D  0084               	movwf	4
 13475  0F9E  0185               	clrf	5
 13476  0F9F  0A81               	incf	1,f
 13477  0FA0  0800               	movf	0,w
 13478  0FA1  3189  21D8  318F   	fcall	i1_i2c1_driver_TXData
 13479                           
 13480                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 13481  0FA4  3001               	movlw	1
 13482  0FA5  0023               	movlb	3	; select bank3
 13483  0FA6  02A3               	subwf	(_i2c_status^(0+384)+3),f
 13484  0FA7  3000               	movlw	0
 13485  0FA8  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 13486  0FA9  0823               	movf	(_i2c_status^(0+384)+3),w
 13487  0FAA  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 13488  0FAB  1D03               	btfss	3,2
 13489  0FAC  2FAF               	goto	i1l4503
 13490  0FAD  3006               	movlw	6
 13491  0FAE  0008               	return
 13492  0FAF                     i1l4503:	
 13493  0FAF  3003               	movlw	3
 13494  0FB0  0008               	return
 13495  0FB1                     __end_of_do_I2C_TX:	
 13496                           
 13497                           	psect	text70
 13498  0D03                     __ptext70:	
 13499 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 13500 ;; Defined at:
 13501 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;		None
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;		None
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      enum E7120
 13508 ;; Registers used:
 13509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;Total ram usage:        3 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    2
 13522 ;; This function calls:
 13523 ;;		_do_I2C_SEND_RESTART
 13524 ;;		_do_I2C_SEND_STOP
 13525 ;;		_returnReset
 13526 ;;		_returnStop
 13527 ;; This function is called by:
 13528 ;;		_i2c_ISR
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           
 13533                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 13534  0D03                     _do_I2C_DO_ADDRESS_NACK:	
 13535                           
 13536                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 13537                           
 13538                           ;incstack = 0
 13539                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13540  0D03  0023               	movlb	3	; select bank3
 13541  0D04  11A0               	bcf	_i2c_status^(0+384),3
 13542                           
 13543                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 13544  0D05  3002               	movlw	2
 13545  0D06  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 13546  0D07  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 13547  0D08  00AA               	movwf	(_i2c_status^(0+384)+10)
 13548                           
 13549                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 13550  0D09  2D10               	goto	i1l4469
 13551  0D0A                     i1l4459:	
 13552                           
 13553                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 13554  0D0A  3189  21B8         	fcall	_do_I2C_SEND_RESTART
 13555  0D0C  0008               	return
 13556  0D0D                     i1l4463:	
 13557                           
 13558                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 13559  0D0D  3189  21BC         	fcall	_do_I2C_SEND_STOP
 13560  0D0F  0008               	return
 13561  0D10                     i1l4469:	
 13562  0D10  0839               	movf	(low ((_i2c_status| (0+256)+25)))^(0+128),w
 13563  0D11  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 13564  0D12  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 13565  0D13  00F0               	movwf	returnReset@p
 13566  0D14  300F               	movlw	15
 13567  0D15  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13568  0D16  0086               	movwf	6
 13569  0D17  3001               	movlw	1	; select bank3/4
 13570  0D18  0087               	movwf	7
 13571  0D19  3F41               	moviw [1]fsr1
 13572  0D1A  008A               	movwf	10
 13573  0D1B  3F40               	moviw [0]fsr1
 13574  0D1C  000A               	callw
 13575  0D1D  318D               	pagesel	$
 13576  0D1E  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 13577  0D1F  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 13578                           
 13579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13580                           ; Switch size 1, requested type "simple"
 13581                           ; Number of cases is 1, Range of values is 0 to 0
 13582                           ; switch strategies available:
 13583                           ; Name         Instructions Cycles
 13584                           ; simple_byte            4     3 (average)
 13585                           ; direct_byte            8     6 (fixed)
 13586                           ; jumptable            260     6 (fixed)
 13587                           ;	Chosen strategy is simple_byte
 13588  0D20  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 13589  0D21  3A00               	xorlw	0	; case 0
 13590  0D22  1903               	skipnz
 13591  0D23  2D25               	goto	i1l7137
 13592  0D24  2D0D               	goto	i1l4463
 13593  0D25                     i1l7137:	
 13594                           
 13595                           ; Switch size 1, requested type "simple"
 13596                           ; Number of cases is 2, Range of values is 2 to 3
 13597                           ; switch strategies available:
 13598                           ; Name         Instructions Cycles
 13599                           ; simple_byte            7     4 (average)
 13600                           ; direct_byte           13     9 (fixed)
 13601                           ; jumptable            263     9 (fixed)
 13602                           ;	Chosen strategy is simple_byte
 13603  0D25  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 13604  0D26  3A02               	xorlw	2	; case 2
 13605  0D27  1903               	skipnz
 13606  0D28  2D0A               	goto	i1l4459
 13607  0D29  3A01               	xorlw	1	; case 3
 13608  0D2A  1903               	skipnz
 13609  0D2B  2D0A               	goto	i1l4459
 13610  0D2C  2D0D               	goto	i1l4463
 13611  0D2D  0008               	return
 13612  0D2E                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 13613                           
 13614                           	psect	text71
 13615  09C8                     __ptext71:	
 13616 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 13617 ;; Defined at:
 13618 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;		None
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;		None
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  1    wreg      enum E7120
 13625 ;; Registers used:
 13626 ;;		wreg, status,2, status,0, pclath, cstack
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;Total ram usage:        0 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; Hardware stack levels required when called:    1
 13639 ;; This function calls:
 13640 ;;		i1_i2c1_driver_sendNACK
 13641 ;; This function is called by:
 13642 ;;		_do_I2C_RX
 13643 ;;		_i2c_ISR
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           
 13648                           ;psect for function _do_I2C_DO_NACK_RESTART
 13649  09C8                     _do_I2C_DO_NACK_RESTART:	
 13650                           
 13651                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 13652                           
 13653                           ;incstack = 0
 13654                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13655  09C8  3189  21AC         	fcall	i1_i2c1_driver_sendNACK
 13656                           
 13657                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 13658  09CA  3009               	movlw	9
 13659  09CB  0008               	return
 13660  09CC                     __end_of_do_I2C_DO_NACK_RESTART:	
 13661                           
 13662                           	psect	text72
 13663  09C4                     __ptext72:	
 13664 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 13665 ;; Defined at:
 13666 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      enum E7120
 13673 ;; Registers used:
 13674 ;;		wreg, status,2, status,0, pclath, cstack
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13684 ;;Total ram usage:        0 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    1
 13687 ;; This function calls:
 13688 ;;		i1_i2c1_driver_sendNACK
 13689 ;; This function is called by:
 13690 ;;		_do_I2C_RX
 13691 ;;		_i2c_ISR
 13692 ;; This function uses a non-reentrant model
 13693 ;;
 13694                           
 13695                           
 13696                           ;psect for function _do_I2C_DO_NACK_STOP
 13697  09C4                     _do_I2C_DO_NACK_STOP:	
 13698                           
 13699                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 13700                           
 13701                           ;incstack = 0
 13702                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13703  09C4  3189  21AC         	fcall	i1_i2c1_driver_sendNACK
 13704                           
 13705                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 13706  09C6  300A               	movlw	10
 13707  09C7  0008               	return
 13708  09C8                     __end_of_do_I2C_DO_NACK_STOP:	
 13709                           
 13710                           	psect	text73
 13711  09C0                     __ptext73:	
 13712 ;; *************** function _do_I2C_DO_ACK *****************
 13713 ;; Defined at:
 13714 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;		None
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;		None
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      enum E7120
 13721 ;; Registers used:
 13722 ;;		wreg, status,2, status,0, pclath, cstack
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13732 ;;Total ram usage:        0 bytes
 13733 ;; Hardware stack levels used:    1
 13734 ;; Hardware stack levels required when called:    1
 13735 ;; This function calls:
 13736 ;;		_i2c1_driver_sendACK
 13737 ;; This function is called by:
 13738 ;;		_i2c_ISR
 13739 ;; This function uses a non-reentrant model
 13740 ;;
 13741                           
 13742                           
 13743                           ;psect for function _do_I2C_DO_ACK
 13744  09C0                     _do_I2C_DO_ACK:	
 13745                           
 13746                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 13747                           
 13748                           ;incstack = 0
 13749                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 13750  09C0  3189  21A8         	fcall	_i2c1_driver_sendACK
 13751                           
 13752                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 13753  09C2  3005               	movlw	5
 13754  09C3  0008               	return
 13755  09C4                     __end_of_do_I2C_DO_ACK:	
 13756                           
 13757                           	psect	text74
 13758  09E8                     __ptext74:	
 13759 ;; *************** function _do_I2C_RCEN *****************
 13760 ;; Defined at:
 13761 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;		None
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;		None
 13766 ;; Return value:  Size  Location     Type
 13767 ;;                  1    wreg      enum E7120
 13768 ;; Registers used:
 13769 ;;		wreg, status,2, status,0, pclath, cstack
 13770 ;; Tracked objects:
 13771 ;;		On entry : 0/0
 13772 ;;		On exit  : 0/0
 13773 ;;		Unchanged: 0/0
 13774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;Total ram usage:        0 bytes
 13780 ;; Hardware stack levels used:    1
 13781 ;; Hardware stack levels required when called:    1
 13782 ;; This function calls:
 13783 ;;		i1_i2c1_driver_startRX
 13784 ;; This function is called by:
 13785 ;;		_i2c_ISR
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           
 13790                           ;psect for function _do_I2C_RCEN
 13791  09E8                     _do_I2C_RCEN:	
 13792                           
 13793                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 13794                           
 13795                           ;incstack = 0
 13796                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13797  09E8  0023               	movlb	3	; select bank3
 13798  09E9  11A0               	bcf	_i2c_status^(0+384),3
 13799                           
 13800                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 13801  09EA  3189  2178         	fcall	i1_i2c1_driver_startRX
 13802                           
 13803                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 13804  09EC  3004               	movlw	4
 13805  09ED  0008               	return
 13806  09EE                     __end_of_do_I2C_RCEN:	
 13807                           
 13808                           	psect	text75
 13809  0A07                     __ptext75:	
 13810 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 13811 ;; Defined at:
 13812 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      enum E7120
 13819 ;; Registers used:
 13820 ;;		wreg, status,2, status,0, pclath, cstack
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;Total ram usage:        0 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    1
 13833 ;; This function calls:
 13834 ;;		i1_i2c1_driver_TXData
 13835 ;; This function is called by:
 13836 ;;		_i2c_ISR
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           
 13841                           ;psect for function _do_I2C_SEND_ADR_WRITE
 13842  0A07                     _do_I2C_SEND_ADR_WRITE:	
 13843                           
 13844                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 13845                           
 13846                           ;incstack = 0
 13847                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13848  0A07  0023               	movlb	3	; select bank3
 13849  0A08  15A0               	bsf	_i2c_status^(0+384),3
 13850                           
 13851                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 13852  0A09  3521               	lslf	(_i2c_status^(0+384)+1),w
 13853  0A0A  3189  21D8         	fcall	i1_i2c1_driver_TXData
 13854                           
 13855                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 13856  0A0C  3003               	movlw	3
 13857  0A0D  0008               	return
 13858  0A0E                     __end_of_do_I2C_SEND_ADR_WRITE:	
 13859                           
 13860                           	psect	text76
 13861  0A24                     __ptext76:	
 13862 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 13863 ;; Defined at:
 13864 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;		None
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      enum E7120
 13871 ;; Registers used:
 13872 ;;		wreg, status,2, status,0, pclath, cstack
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;Total ram usage:        0 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:    1
 13885 ;; This function calls:
 13886 ;;		i1_i2c1_driver_TXData
 13887 ;; This function is called by:
 13888 ;;		_i2c_ISR
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           
 13893                           ;psect for function _do_I2C_SEND_ADR_READ
 13894  0A24                     _do_I2C_SEND_ADR_READ:	
 13895                           
 13896                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 13897                           
 13898                           ;incstack = 0
 13899                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 13900  0A24  0023               	movlb	3	; select bank3
 13901  0A25  15A0               	bsf	_i2c_status^(0+384),3
 13902                           
 13903                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 13904  0A26  1403               	setc
 13905  0A27  0D21               	rlf	(_i2c_status^(0+384)+1),w
 13906  0A28  3189  21D8         	fcall	i1_i2c1_driver_TXData
 13907                           
 13908                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 13909  0A2A  3005               	movlw	5
 13910  0A2B  0008               	return
 13911  0A2C                     __end_of_do_I2C_SEND_ADR_READ:	
 13912                           
 13913                           	psect	text77
 13914  09BC                     __ptext77:	
 13915 ;; *************** function _do_I2C_SEND_STOP *****************
 13916 ;; Defined at:
 13917 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;		None
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;		None
 13922 ;; Return value:  Size  Location     Type
 13923 ;;                  1    wreg      enum E7120
 13924 ;; Registers used:
 13925 ;;		wreg, status,2, status,0, pclath, cstack
 13926 ;; Tracked objects:
 13927 ;;		On entry : 0/0
 13928 ;;		On exit  : 0/0
 13929 ;;		Unchanged: 0/0
 13930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;Total ram usage:        0 bytes
 13936 ;; Hardware stack levels used:    1
 13937 ;; Hardware stack levels required when called:    1
 13938 ;; This function calls:
 13939 ;;		i1_i2c1_driver_stop
 13940 ;; This function is called by:
 13941 ;;		_do_I2C_DO_ADDRESS_NACK
 13942 ;;		_do_I2C_TX
 13943 ;;		_do_I2C_TX_EMPTY
 13944 ;;		_i2c_ISR
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function _do_I2C_SEND_STOP
 13950  09BC                     _do_I2C_SEND_STOP:	
 13951                           
 13952                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 13953                           
 13954                           ;incstack = 0
 13955                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13956  09BC  3189  2175         	fcall	i1_i2c1_driver_stop
 13957                           
 13958                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 13959  09BE  3000               	movlw	0
 13960  09BF  0008               	return
 13961  09C0                     __end_of_do_I2C_SEND_STOP:	
 13962                           
 13963                           	psect	text78
 13964  09B8                     __ptext78:	
 13965 ;; *************** function _do_I2C_SEND_RESTART *****************
 13966 ;; Defined at:
 13967 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;		None
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      enum E7120
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0, pclath, cstack
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;Total ram usage:        0 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    1
 13988 ;; This function calls:
 13989 ;;		i1_i2c1_driver_restart
 13990 ;; This function is called by:
 13991 ;;		_do_I2C_DO_ADDRESS_NACK
 13992 ;;		_do_I2C_TX_EMPTY
 13993 ;;		_i2c_ISR
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           
 13998                           ;psect for function _do_I2C_SEND_RESTART
 13999  09B8                     _do_I2C_SEND_RESTART:	
 14000                           
 14001                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 14002                           
 14003                           ;incstack = 0
 14004                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14005  09B8  3189  2172         	fcall	i1_i2c1_driver_restart
 14006                           
 14007                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 14008  09BA  3001               	movlw	1
 14009  09BB  0008               	return
 14010  09BC                     __end_of_do_I2C_SEND_RESTART:	
 14011                           
 14012                           	psect	text79
 14013  09B4                     __ptext79:	
 14014 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 14015 ;; Defined at:
 14016 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;		None
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;		None
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1    wreg      enum E7120
 14023 ;; Registers used:
 14024 ;;		wreg, status,2, status,0, pclath, cstack
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14034 ;;Total ram usage:        0 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    1
 14037 ;; This function calls:
 14038 ;;		i1_i2c1_driver_restart
 14039 ;; This function is called by:
 14040 ;;		_do_I2C_TX
 14041 ;;		_i2c_ISR
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           
 14046                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 14047  09B4                     _do_I2C_SEND_RESTART_WRITE:	
 14048                           
 14049                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 14050                           
 14051                           ;incstack = 0
 14052                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14053  09B4  3189  2172         	fcall	i1_i2c1_driver_restart
 14054                           
 14055                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 14056  09B6  3002               	movlw	2
 14057  09B7  0008               	return
 14058  09B8                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 14059                           
 14060                           	psect	text80
 14061  09B0                     __ptext80:	
 14062 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 14063 ;; Defined at:
 14064 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;		None
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      enum E7120
 14071 ;; Registers used:
 14072 ;;		wreg, status,2, status,0, pclath, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;Total ram usage:        0 bytes
 14083 ;; Hardware stack levels used:    1
 14084 ;; Hardware stack levels required when called:    1
 14085 ;; This function calls:
 14086 ;;		i1_i2c1_driver_restart
 14087 ;; This function is called by:
 14088 ;;		_do_I2C_TX
 14089 ;;		_i2c_ISR
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           
 14094                           ;psect for function _do_I2C_SEND_RESTART_READ
 14095  09B0                     _do_I2C_SEND_RESTART_READ:	
 14096                           
 14097                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 14098                           
 14099                           ;incstack = 0
 14100                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14101  09B0  3189  2172         	fcall	i1_i2c1_driver_restart
 14102                           
 14103                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 14104  09B2  3001               	movlw	1
 14105  09B3  0008               	return
 14106  09B4                     __end_of_do_I2C_SEND_RESTART_READ:	
 14107                           
 14108                           	psect	text81
 14109  09DD                     __ptext81:	
 14110 ;; *************** function _do_I2C_IDLE *****************
 14111 ;; Defined at:
 14112 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;		None
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;		None
 14117 ;; Return value:  Size  Location     Type
 14118 ;;                  1    wreg      enum E7120
 14119 ;; Registers used:
 14120 ;;		wreg, status,2
 14121 ;; Tracked objects:
 14122 ;;		On entry : 0/0
 14123 ;;		On exit  : 0/0
 14124 ;;		Unchanged: 0/0
 14125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;Total ram usage:        0 bytes
 14131 ;; Hardware stack levels used:    1
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_i2c_ISR
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           
 14140                           ;psect for function _do_I2C_IDLE
 14141  09DD                     _do_I2C_IDLE:	
 14142                           
 14143                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 14144                           
 14145                           ;incstack = 0
 14146                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 14147  09DD  0023               	movlb	3	; select bank3
 14148  09DE  1020               	bcf	_i2c_status^(0+384),0
 14149                           
 14150                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 14151  09DF  01AA               	clrf	(_i2c_status^(0+384)+10)
 14152                           
 14153                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 14154  09E0  300E               	movlw	14
 14155  09E1  0008               	return
 14156  09E2                     __end_of_do_I2C_IDLE:	
 14157                           
 14158                           	psect	text82
 14159  0A00                     __ptext82:	
 14160 ;; *************** function _do_I2C_RESET *****************
 14161 ;; Defined at:
 14162 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;		None
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      enum E7120
 14169 ;; Registers used:
 14170 ;;		wreg, status,2, status,0, pclath, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;Total ram usage:        0 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    1
 14183 ;; This function calls:
 14184 ;;		_i2c1_driver_resetBus
 14185 ;; This function is called by:
 14186 ;;		_i2c_ISR
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           
 14191                           ;psect for function _do_I2C_RESET
 14192  0A00                     _do_I2C_RESET:	
 14193                           
 14194                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 14195                           
 14196                           ;incstack = 0
 14197                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 14198  0A00  3189  216F         	fcall	_i2c1_driver_resetBus
 14199                           
 14200                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 14201  0A02  0023               	movlb	3	; select bank3
 14202  0A03  1020               	bcf	_i2c_status^(0+384),0
 14203                           
 14204                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 14205  0A04  01AA               	clrf	(_i2c_status^(0+384)+10)
 14206                           
 14207                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 14208  0A05  300E               	movlw	14
 14209  0A06  0008               	return
 14210  0A07                     __end_of_do_I2C_RESET:	
 14211                           
 14212                           	psect	text83
 14213  0D89                     __ptext83:	
 14214 ;; *************** function _do_I2C_TX_EMPTY *****************
 14215 ;; Defined at:
 14216 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      enum E7120
 14223 ;; Registers used:
 14224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;Total ram usage:        3 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    2
 14237 ;; This function calls:
 14238 ;;		_do_I2C_SEND_RESTART
 14239 ;;		_do_I2C_SEND_STOP
 14240 ;;		_mssp1_setIRQ
 14241 ;;		_returnReset
 14242 ;;		_returnStop
 14243 ;; This function is called by:
 14244 ;;		_i2c_ISR
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           
 14249                           ;psect for function _do_I2C_TX_EMPTY
 14250  0D89                     _do_I2C_TX_EMPTY:	
 14251                           
 14252                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 14253                           
 14254                           ;incstack = 0
 14255                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14256  0D89  0023               	movlb	3	; select bank3
 14257  0D8A  1520               	bsf	_i2c_status^(0+384),2
 14258                           
 14259                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14260  0D8B  2D96               	goto	i1l4561
 14261  0D8C                     i1l4545:	
 14262                           
 14263                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 14264  0D8C  3189  21B8         	fcall	_do_I2C_SEND_RESTART
 14265  0D8E  0008               	return
 14266  0D8F                     i1l4549:	
 14267                           
 14268                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 14269  0D8F  3189  217E         	fcall	_mssp1_setIRQ
 14270                           
 14271                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 14272  0D91  3003               	movlw	3
 14273  0D92  0008               	return
 14274  0D93                     i1l4555:	
 14275                           
 14276                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 14277  0D93  3189  21BC         	fcall	_do_I2C_SEND_STOP
 14278  0D95  0008               	return
 14279  0D96                     i1l4561:	
 14280  0D96  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 14281  0D97  00F0               	movwf	??_do_I2C_TX_EMPTY
 14282  0D98  0870               	movf	??_do_I2C_TX_EMPTY,w
 14283  0D99  00F0               	movwf	returnReset@p
 14284  0D9A  300B               	movlw	11
 14285  0D9B  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 14286  0D9C  0086               	movwf	6
 14287  0D9D  3001               	movlw	1	; select bank3/4
 14288  0D9E  0087               	movwf	7
 14289  0D9F  3F41               	moviw [1]fsr1
 14290  0DA0  008A               	movwf	10
 14291  0DA1  3F40               	moviw [0]fsr1
 14292  0DA2  000A               	callw
 14293  0DA3  318D               	pagesel	$
 14294  0DA4  00F1               	movwf	??_do_I2C_TX_EMPTY+1
 14295  0DA5  01F2               	clrf	??_do_I2C_TX_EMPTY+2
 14296                           
 14297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14298                           ; Switch size 1, requested type "simple"
 14299                           ; Number of cases is 1, Range of values is 0 to 0
 14300                           ; switch strategies available:
 14301                           ; Name         Instructions Cycles
 14302                           ; simple_byte            4     3 (average)
 14303                           ; direct_byte            8     6 (fixed)
 14304                           ; jumptable            260     6 (fixed)
 14305                           ;	Chosen strategy is simple_byte
 14306  0DA6  0872               	movf	??_do_I2C_TX_EMPTY+2,w
 14307  0DA7  3A00               	xorlw	0	; case 0
 14308  0DA8  1903               	skipnz
 14309  0DA9  2DAB               	goto	i1l7139
 14310  0DAA  2D93               	goto	i1l4555
 14311  0DAB                     i1l7139:	
 14312                           
 14313                           ; Switch size 1, requested type "simple"
 14314                           ; Number of cases is 4, Range of values is 1 to 4
 14315                           ; switch strategies available:
 14316                           ; Name         Instructions Cycles
 14317                           ; simple_byte           13     7 (average)
 14318                           ; direct_byte           17     9 (fixed)
 14319                           ; jumptable            263     9 (fixed)
 14320                           ;	Chosen strategy is simple_byte
 14321  0DAB  0871               	movf	??_do_I2C_TX_EMPTY+1,w
 14322  0DAC  3A01               	xorlw	1	; case 1
 14323  0DAD  1903               	skipnz
 14324  0DAE  2D93               	goto	i1l4555
 14325  0DAF  3A03               	xorlw	3	; case 2
 14326  0DB0  1903               	skipnz
 14327  0DB1  2D8C               	goto	i1l4545
 14328  0DB2  3A01               	xorlw	1	; case 3
 14329  0DB3  1903               	skipnz
 14330  0DB4  2D8C               	goto	i1l4545
 14331  0DB5  3A07               	xorlw	7	; case 4
 14332  0DB6  1903               	skipnz
 14333  0DB7  2D8F               	goto	i1l4549
 14334  0DB8  2D93               	goto	i1l4555
 14335  0DB9  0008               	return
 14336  0DBA                     __end_of_do_I2C_TX_EMPTY:	
 14337                           
 14338                           	psect	text84
 14339  097E                     __ptext84:	
 14340 ;; *************** function _mssp1_setIRQ *****************
 14341 ;; Defined at:
 14342 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;		None
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  1    wreg      void 
 14349 ;; Registers used:
 14350 ;;		None
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;Total ram usage:        0 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; This function calls:
 14363 ;;		Nothing
 14364 ;; This function is called by:
 14365 ;;		_do_I2C_TX_EMPTY
 14366 ;; This function uses a non-reentrant model
 14367 ;;
 14368                           
 14369                           
 14370                           ;psect for function _mssp1_setIRQ
 14371  097E                     _mssp1_setIRQ:	
 14372                           
 14373                           ;mcc_generated_files/i2c1_driver.c: 60:     }
 14374                           
 14375                           ;incstack = 0
 14376                           ; Regs used in _mssp1_setIRQ: []
 14377  097E  0020               	movlb	0	; select bank0
 14378  097F  1591               	bsf	17,3	;volatile
 14379  0980  0008               	return
 14380  0981                     __end_of_mssp1_setIRQ:	
 14381                           
 14382                           	psect	text85
 14383  0A1C                     __ptext85:	
 14384 ;; *************** function _i2c1_driver_isNACK *****************
 14385 ;; Defined at:
 14386 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;		None
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;		None               void
 14393 ;; Registers used:
 14394 ;;		wreg, status,2, status,0
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14404 ;;Total ram usage:        1 bytes
 14405 ;; Hardware stack levels used:    1
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_do_I2C_TX
 14410 ;;		_i2c_ISR
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           
 14415                           ;psect for function _i2c1_driver_isNACK
 14416  0A1C                     _i2c1_driver_isNACK:	
 14417                           
 14418                           ;mcc_generated_files/i2c1_driver.c: 163:     return SSP1CON2bits.ACKSTAT;
 14419                           
 14420                           ;incstack = 0
 14421                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 14422  0A1C  0024               	movlb	4	; select bank4
 14423  0A1D  0E16               	swapf	22,w	;volatile
 14424  0A1E  0C89               	rrf	9,f
 14425  0A1F  0C89               	rrf	9,f
 14426  0A20  3901               	andlw	1
 14427  0A21  00F0               	movwf	??_i2c1_driver_isNACK
 14428  0A22  0C70               	rrf	??_i2c1_driver_isNACK,w
 14429  0A23  0008               	return
 14430  0A24                     __end_of_i2c1_driver_isNACK:	
 14431                           
 14432                           	psect	text86
 14433  09D8                     __ptext86:	
 14434 ;; *************** function i1_i2c1_driver_TXData *****************
 14435 ;; Defined at:
 14436 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  d               1    wreg     unsigned char 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;  d               1    0[COMMON] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      void 
 14443 ;; Registers used:
 14444 ;;		wreg
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;Total ram usage:        1 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; This function calls:
 14457 ;;		Nothing
 14458 ;; This function is called by:
 14459 ;;		_do_I2C_SEND_ADR_READ
 14460 ;;		_do_I2C_SEND_ADR_WRITE
 14461 ;;		_do_I2C_TX
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function i1_i2c1_driver_TXData
 14467  09D8                     i1_i2c1_driver_TXData:	
 14468                           
 14469                           ;incstack = 0
 14470                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 14471                           ;i1i2c1_driver_TXData@d stored from wreg
 14472  09D8  00F0               	movwf	i1i2c1_driver_TXData@d
 14473                           
 14474                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
 14475  09D9  0870               	movf	i1i2c1_driver_TXData@d,w
 14476  09DA  0024               	movlb	4	; select bank4
 14477  09DB  0091               	movwf	17	;volatile
 14478  09DC  0008               	return
 14479  09DD                     __end_ofi1_i2c1_driver_TXData:	
 14480                           
 14481                           	psect	text87
 14482  097B                     __ptext87:	
 14483 ;; *************** function i1_i2c1_driver_getRXData *****************
 14484 ;; Defined at:
 14485 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;		None
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      unsigned char 
 14492 ;; Registers used:
 14493 ;;		wreg
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;Total ram usage:        0 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_do_I2C_RX
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           
 14513                           ;psect for function i1_i2c1_driver_getRXData
 14514  097B                     i1_i2c1_driver_getRXData:	
 14515                           
 14516                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 14517                           
 14518                           ;incstack = 0
 14519                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 14520  097B  0024               	movlb	4	; select bank4
 14521  097C  0811               	movf	17,w	;volatile
 14522  097D  0008               	return
 14523  097E                     __end_ofi1_i2c1_driver_getRXData:	
 14524                           
 14525                           	psect	text88
 14526  09AC                     __ptext88:	
 14527 ;; *************** function i1_i2c1_driver_sendNACK *****************
 14528 ;; Defined at:
 14529 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;		None
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;		None
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		None
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;Total ram usage:        0 bytes
 14548 ;; Hardware stack levels used:    1
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		_do_I2C_DO_NACK_STOP
 14553 ;;		_do_I2C_DO_NACK_RESTART
 14554 ;; This function uses a non-reentrant model
 14555 ;;
 14556                           
 14557                           
 14558                           ;psect for function i1_i2c1_driver_sendNACK
 14559  09AC                     i1_i2c1_driver_sendNACK:	
 14560                           
 14561                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 14562                           
 14563                           ;incstack = 0
 14564                           ; Regs used in i1_i2c1_driver_sendNACK: []
 14565  09AC  0024               	movlb	4	; select bank4
 14566  09AD  1696               	bsf	22,5	;volatile
 14567                           
 14568                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 14569  09AE  1616               	bsf	22,4	;volatile
 14570  09AF  0008               	return
 14571  09B0                     __end_ofi1_i2c1_driver_sendNACK:	
 14572                           
 14573                           	psect	text89
 14574  096F                     __ptext89:	
 14575 ;; *************** function _i2c1_driver_resetBus *****************
 14576 ;; Defined at:
 14577 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;		None
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;		None
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  1    wreg      void 
 14584 ;; Registers used:
 14585 ;;		None
 14586 ;; Tracked objects:
 14587 ;;		On entry : 0/0
 14588 ;;		On exit  : 0/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;Total ram usage:        0 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; This function calls:
 14598 ;;		Nothing
 14599 ;; This function is called by:
 14600 ;;		_do_I2C_RESET
 14601 ;; This function uses a non-reentrant model
 14602 ;;
 14603                           
 14604                           
 14605                           ;psect for function _i2c1_driver_resetBus
 14606  096F                     _i2c1_driver_resetBus:	
 14607                           
 14608                           ;incstack = 0
 14609                           ; Regs used in _i2c1_driver_resetBus: []
 14610  096F  0008               	return
 14611  0970                     __end_of_i2c1_driver_resetBus:	
 14612                           
 14613                           	psect	text90
 14614  0978                     __ptext90:	
 14615 ;; *************** function i1_i2c1_driver_startRX *****************
 14616 ;; Defined at:
 14617 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;		None
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;		None
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  1    wreg      void 
 14624 ;; Registers used:
 14625 ;;		None
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;Total ram usage:        0 bytes
 14636 ;; Hardware stack levels used:    1
 14637 ;; This function calls:
 14638 ;;		Nothing
 14639 ;; This function is called by:
 14640 ;;		_do_I2C_RCEN
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644                           
 14645                           ;psect for function i1_i2c1_driver_startRX
 14646  0978                     i1_i2c1_driver_startRX:	
 14647                           
 14648                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 14649                           
 14650                           ;incstack = 0
 14651                           ; Regs used in i1_i2c1_driver_startRX: []
 14652  0978  0024               	movlb	4	; select bank4
 14653  0979  1596               	bsf	22,3	;volatile
 14654  097A  0008               	return
 14655  097B                     __end_ofi1_i2c1_driver_startRX:	
 14656                           
 14657                           	psect	text91
 14658  0002                     __ptext91:	
 14659 ;; *************** function _returnReset *****************
 14660 ;; Defined at:
 14661 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;  p               1    0[COMMON] PTR void 
 14664 ;;		 -> NULL(0), 
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  1    wreg      enum E6966
 14669 ;; Registers used:
 14670 ;;		wreg
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;Total ram usage:        1 bytes
 14681 ;; Hardware stack levels used:    1
 14682 ;; This function calls:
 14683 ;;		Nothing
 14684 ;; This function is called by:
 14685 ;;		_i2c_open
 14686 ;;		_do_I2C_DO_ADDRESS_NACK
 14687 ;;		_do_I2C_TX
 14688 ;;		_do_I2C_RX
 14689 ;;		_do_I2C_TX_EMPTY
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           
 14694                           ;psect for function _returnReset
 14695  0002                     _returnReset:	
 14696                           
 14697                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 14698                           
 14699                           ;incstack = 0
 14700                           ; Regs used in _returnReset: [wreg]
 14701  0002  3005               	movlw	5
 14702  0003  0008               	return
 14703  0004                     __end_of_returnReset:	
 14704                           
 14705                           	psect	text92
 14706  0970                     __ptext92:	
 14707 ;; *************** function _returnStop *****************
 14708 ;; Defined at:
 14709 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 14710 ;; Parameters:    Size  Location     Type
 14711 ;;  p               1    0[COMMON] PTR void 
 14712 ;;		 -> NULL(0), 
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;		None
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  1    wreg      enum E6966
 14717 ;; Registers used:
 14718 ;;		wreg
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;Total ram usage:        1 bytes
 14729 ;; Hardware stack levels used:    1
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		_i2c_open
 14734 ;;		_setCallBack
 14735 ;;		_do_I2C_DO_ADDRESS_NACK
 14736 ;;		_do_I2C_TX
 14737 ;;		_do_I2C_RX
 14738 ;;		_do_I2C_TX_EMPTY
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           
 14743                           ;psect for function _returnStop
 14744  0970                     _returnStop:	
 14745                           
 14746                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 14747                           
 14748                           ;incstack = 0
 14749                           ; Regs used in _returnStop: [wreg]
 14750  0970  3001               	movlw	1
 14751  0971  0008               	return
 14752  0972                     __end_of_returnStop:	
 14753                           
 14754                           	psect	text93
 14755  0975                     __ptext93:	
 14756 ;; *************** function i1_i2c1_driver_stop *****************
 14757 ;; Defined at:
 14758 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;		None
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;		None
 14763 ;; Return value:  Size  Location     Type
 14764 ;;                  1    wreg      void 
 14765 ;; Registers used:
 14766 ;;		None
 14767 ;; Tracked objects:
 14768 ;;		On entry : 0/0
 14769 ;;		On exit  : 0/0
 14770 ;;		Unchanged: 0/0
 14771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14776 ;;Total ram usage:        0 bytes
 14777 ;; Hardware stack levels used:    1
 14778 ;; This function calls:
 14779 ;;		Nothing
 14780 ;; This function is called by:
 14781 ;;		_do_I2C_SEND_STOP
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           
 14786                           ;psect for function i1_i2c1_driver_stop
 14787  0975                     i1_i2c1_driver_stop:	
 14788                           
 14789                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 14790                           
 14791                           ;incstack = 0
 14792                           ; Regs used in i1_i2c1_driver_stop: []
 14793  0975  0024               	movlb	4	; select bank4
 14794  0976  1516               	bsf	22,2	;volatile
 14795  0977  0008               	return
 14796  0978                     __end_ofi1_i2c1_driver_stop:	
 14797                           
 14798                           	psect	text94
 14799  0972                     __ptext94:	
 14800 ;; *************** function i1_i2c1_driver_restart *****************
 14801 ;; Defined at:
 14802 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      void 
 14809 ;; Registers used:
 14810 ;;		None
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_do_I2C_SEND_RESTART_READ
 14826 ;;		_do_I2C_SEND_RESTART_WRITE
 14827 ;;		_do_I2C_SEND_RESTART
 14828 ;; This function uses a non-reentrant model
 14829 ;;
 14830                           
 14831                           
 14832                           ;psect for function i1_i2c1_driver_restart
 14833  0972                     i1_i2c1_driver_restart:	
 14834                           
 14835                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in i1_i2c1_driver_restart: []
 14839  0972  0024               	movlb	4	; select bank4
 14840  0973  1496               	bsf	22,1	;volatile
 14841  0974  0008               	return
 14842  0975                     __end_ofi1_i2c1_driver_restart:	
 14843                           
 14844                           	psect	text95
 14845  09A8                     __ptext95:	
 14846 ;; *************** function _i2c1_driver_sendACK *****************
 14847 ;; Defined at:
 14848 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;		None
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;		None
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      void 
 14855 ;; Registers used:
 14856 ;;		None
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;Total ram usage:        0 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; This function calls:
 14869 ;;		Nothing
 14870 ;; This function is called by:
 14871 ;;		_do_I2C_DO_ACK
 14872 ;;		_do_I2C_RX
 14873 ;;		_I2C_Send_ACK
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877                           
 14878                           ;psect for function _i2c1_driver_sendACK
 14879  09A8                     _i2c1_driver_sendACK:	
 14880                           
 14881                           ;mcc_generated_files/i2c1_driver.c: 198:     SSP1CON2bits.ACKDT = 0;
 14882                           
 14883                           ;incstack = 0
 14884                           ; Regs used in _i2c1_driver_sendACK: []
 14885  09A8  0024               	movlb	4	; select bank4
 14886  09A9  1296               	bcf	22,5	;volatile
 14887                           
 14888                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKEN = 1;
 14889  09AA  1616               	bsf	22,4	;volatile
 14890  09AB  0008               	return
 14891  09AC                     __end_of_i2c1_driver_sendACK:	
 14892                           
 14893                           	psect	text96
 14894  09E2                     __ptext96:	
 14895 ;; *************** function _PIN_MANAGER_IOC *****************
 14896 ;; Defined at:
 14897 ;;		line 131 in file "mcc_generated_files/pin_manager.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;                  1    wreg      void 
 14904 ;; Registers used:
 14905 ;;		wreg, status,2, status,0, pclath, cstack
 14906 ;; Tracked objects:
 14907 ;;		On entry : 0/0
 14908 ;;		On exit  : 0/0
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;Total ram usage:        0 bytes
 14916 ;; Hardware stack levels used:    1
 14917 ;; Hardware stack levels required when called:    2
 14918 ;; This function calls:
 14919 ;;		_IOCCF1_ISR
 14920 ;; This function is called by:
 14921 ;;		_INTERRUPT_InterruptManager
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           
 14926                           ;psect for function _PIN_MANAGER_IOC
 14927  09E2                     _PIN_MANAGER_IOC:	
 14928                           
 14929                           ;mcc_generated_files/pin_manager.c: 134:     if(IOCCFbits.IOCCF1 == 1)
 14930                           
 14931                           ;incstack = 0
 14932                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 14933  09E2  0027               	movlb	7	; select bank7
 14934  09E3  1C99               	btfss	25,1	;volatile
 14935  09E4  0008               	return
 14936                           
 14937                           ;mcc_generated_files/pin_manager.c: 135:     {;mcc_generated_files/pin_manager.c: 136:  
      +                                 IOCCF1_ISR();
 14938  09E5  318A  2287         	fcall	_IOCCF1_ISR
 14939  09E7  0008               	return
 14940  09E8                     __end_of_PIN_MANAGER_IOC:	
 14941                           
 14942                           	psect	text97
 14943  0A87                     __ptext97:	
 14944 ;; *************** function _IOCCF1_ISR *****************
 14945 ;; Defined at:
 14946 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
 14947 ;; Parameters:    Size  Location     Type
 14948 ;;		None
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;		None
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1    wreg      void 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2, status,0, pclath, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/0
 14957 ;;		On exit  : 0/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;Total ram usage:        0 bytes
 14965 ;; Hardware stack levels used:    1
 14966 ;; Hardware stack levels required when called:    1
 14967 ;; This function calls:
 14968 ;;		Absolute function
 14969 ;;		_IOCCF1_DefaultInterruptHandler
 14970 ;; This function is called by:
 14971 ;;		_PIN_MANAGER_IOC
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           
 14976                           ;psect for function _IOCCF1_ISR
 14977  0A87                     _IOCCF1_ISR:	
 14978                           
 14979                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCF1_InterruptHandler)
 14980                           
 14981                           ;incstack = 0
 14982                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14983  0A87  0021               	movlb	1	; select bank1
 14984  0A88  0864               	movf	_IOCCF1_InterruptHandler^(0+128),w
 14985  0A89  0465               	iorwf	(_IOCCF1_InterruptHandler+1)^(0+128),w
 14986  0A8A  1903               	btfsc	3,2
 14987  0A8B  2A91               	goto	i1l4671
 14988                           
 14989                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF1_InterruptHandler();
 14990  0A8C  0865               	movf	(_IOCCF1_InterruptHandler+1)^(0+128),w
 14991  0A8D  008A               	movwf	10
 14992  0A8E  0864               	movf	_IOCCF1_InterruptHandler^(0+128),w
 14993  0A8F  000A               	callw
 14994  0A90  318A               	pagesel	$
 14995  0A91                     i1l4671:	
 14996                           
 14997                           ;mcc_generated_files/pin_manager.c: 152:     IOCCFbits.IOCCF1 = 0;
 14998  0A91  0027               	movlb	7	; select bank7
 14999  0A92  1099               	bcf	25,1	;volatile
 15000  0A93  0008               	return
 15001  0A94                     __end_of_IOCCF1_ISR:	
 15002                           
 15003                           	psect	text98
 15004  096E                     __ptext98:	
 15005 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 15006 ;; Defined at:
 15007 ;;		line 165 in file "mcc_generated_files/pin_manager.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;		None
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;		None
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1    wreg      void 
 15014 ;; Registers used:
 15015 ;;		None
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;Total ram usage:        0 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; This function calls:
 15028 ;;		Nothing
 15029 ;; This function is called by:
 15030 ;;		_PIN_MANAGER_Initialize
 15031 ;;		_IOCCF1_ISR
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           
 15036                           ;psect for function _IOCCF1_DefaultInterruptHandler
 15037  096E                     _IOCCF1_DefaultInterruptHandler:	
 15038                           
 15039                           ;incstack = 0
 15040                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 15041  096E  0008               	return
 15042  096F                     __end_of_IOCCF1_DefaultInterruptHandler:	
 15043  007E                     btemp	set	126	;btemp
 15044  007E                     int$flags	set	126
 15045  007E                     wtemp0	set	126


Data Sizes:
    Strings     58
    Constant    32
    Data        9
    BSS         127
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     60      80
    BANK1            80     66      72
    BANK2            80     64      74
    BANK3            80      0      29
    BANK4            80      0      68
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_ISR$2485	const PTR FTN()enum E7120 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[12]), 
		 -> STR_5(CODE[6]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), 
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[12]), 
		 -> STR_5(CODE[6]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), 
		 -> STR_1(CODE[12]), 

    wireReadDataBlock@val	PTR unsigned char  size(2) Largest target is 64
		 -> readGesture@fifo_data2(BANK1[64]), readGesture@fifo_data(BANK2[64]), 

    Display_Name@string1	PTR unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[12]), 
		 -> STR_5(CODE[6]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), 
		 -> STR_1(CODE[12]), 

    names	PTR unsigned char [4] size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), STR_1(CODE[12]), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    fsmStateTable	const PTR FTN()enum E7120[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 0

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY

Critical Paths under _main in BANK0

    _main->_handleGesture
    _initialize->_setMode
    _setProximityGain->_wireWriteDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireWriteDataByte
    _setGestureWaitTime->_wireWriteDataByte
    _setGestureLEDDrive->_wireWriteDataByte
    _setGestureGain->_wireWriteDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireWriteDataByte
    _handleGesture->_readGesture
    _readGesture->_processGestureData
    _wireReadDataBlock->_I2C_Write_Byte
    _processGestureData->___awdiv
    ___awdiv->___wmul
    _isGestureAvailable->_wireReadDataByte
    _Display_Name->_strlen
    _SPI_Write->_SPI2_Exchange8bit
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireWriteDataByte
    _setGestureMode->_wireWriteDataByte
    _setGestureIntEnable->_wireWriteDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Write_Byte
    _I2C_Write_Byte->_i2c1_driver_TXData
    _I2C_Read_Byte->_i2c1_driver_isBufferFull
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _handleGesture->_readGesture

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _handleGesture->_readGesture

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   88066
                                             64 BANK1      2     2      0
                       _Display_Name
                  _SYSTEM_Initialize
                _enableGestureSensor
                      _handleGesture
                         _initialize
                 _isGestureAvailable
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   54520
                                             16 BANK0      2     2      0
                   _i2c1_driver_open
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleGesture                                        1     1      0    8982
                                             59 BANK0      1     1      0
                       _Display_Name
                 _PWM_Output_Disable
                  _PWM_Output_Enable
                        _readGesture
 ---------------------------------------------------------------------------------
 (2) _readGesture                                        140   138      2    7816
                                             47 BANK0     12    10      2
                                              0 BANK1     64    64      0
                                              0 BANK2     64    64      0
                      _decodeGesture
                            _getMode
                 _isGestureAvailable
                 _processGestureData
             _resetGestureParameters
                  _wireReadDataBlock
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _wireReadDataBlock                                   11     7      4     651
                                              6 BANK0     11     7      4
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _processGestureData                                  32    32      0    5644
                                             15 BANK0     32    32      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2176
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _isGestureAvailable                                   2     2      0     198
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _decodeGesture                                       18    18      0     296
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_Enable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_Disable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Display_Name                                         7     5      2    1166
                                              5 BANK0      7     5      2
                          _SPI_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     220
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      62
                                              1 BANK0      2     2      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   23076
                                             16 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    3667
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (3) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    4340
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    4340
                                             11 BANK0      5     4      1
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    3398
                                              6 BANK0      4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     195
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0     161
                                              6 BANK0      3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       5     5      0      96
                                              1 BANK0      5     5      0
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_TXData                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                  _i2c1_driver_start
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
              _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_isBufferFull                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _SPI2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     121
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     914
                   Absolute function *
                    _PIN_MANAGER_IOC
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (9) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_ISR                                              3     3      0     914
                                              3 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (10) _mssp1_clearIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX_EMPTY                                     3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX                                           3     3      0     234
                                              0 COMMON     3     3      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_READ                            0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_READ                                0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RX                                           3     3      0     212
                                              0 COMMON     3     3      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
            i1_i2c1_driver_getRXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_STOP                                 0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_RESTART                              0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RCEN                                         0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ADDRESS_NACK                              3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _returnStop                                          1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _returnReset                                         1     0      1     212
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_STOP                                    0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART                                 0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF1_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _IOCCF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_Name
     _SPI_Write
       _SPI2_Exchange8bit
     _strlen
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _PWM1_Initialize
     _SPI2_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
               _i2c1_driver_restart
             _I2C_Read_Byte
               _i2c1_driver_getRXData
               _i2c1_driver_isBufferFull
               _i2c1_driver_startRX
             _I2C_Send_NACK
               _i2c1_driver_sendNACK
             _I2C_Start
               _i2c1_driver_start
             _I2C_Stop
               _i2c1_driver_stop
             _I2C_Write_Byte
               _i2c1_driver_TXData
         _wireWriteDataByte
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _handleGesture
     _Display_Name
       _SPI_Write
         _SPI2_Exchange8bit
       _strlen
     _PWM_Output_Disable
     _PWM_Output_Enable
     _readGesture
       _decodeGesture
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _isGestureAvailable
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _processGestureData
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _resetGestureParameters
       _wireReadDataBlock
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
   _initialize
     _i2c1_driver_open
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _isGestureAvailable
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _PIN_MANAGER_IOC *
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _returnReset *
       _returnStop *
     _do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       i1_i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       _do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       _i2c1_driver_sendACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_getRXData *
     _do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     _do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     _do_I2C_TX *
       _do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _i2c1_driver_isNACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_TXData *
     _do_I2C_TX_EMPTY *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _mssp1_setIRQ
       _returnReset *
       _returnStop *
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     40      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      1D      11       36.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      44      13       85.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 01 19:11:35 2019

                              returnReset@p 0070                       ?_setGestureExitThresh 0070  
                        __size_of_I2C_Start 0003                                 __CFG_CP$OFF 0000  
                              ___awdiv@sign 002C                        __size_of_do_I2C_IDLE 0005  
                       _do_I2C_SEND_RESTART 09B8                        __size_of_do_I2C_RCEN 0006  
                       ___wmul@multiplicand 0022                          _PWM_Output_Disable 09A5  
                               __CFG_LVP$ON 0000                                         l703 0ECE  
                                       l557 0AAA            processGestureData@ud_ratio_first 0031  
                                       l971 0084                                         l994 023F  
                                       l998 0268                                         _PR2 001E  
                              __CFG_CPD$OFF 0000                       __end_of_decodeGesture 04C4  
                      __size_of_I2C_ReStart 0003                     __size_of_PMD_Initialize 0008  
                        I2C_Write_Byte@Byte 0023                             _TMR2_Initialize 0A44  
                     __size_of_do_I2C_RESET 0007                                         wreg 0009  
                       ?_PWM_Output_Disable 0070                          i1_i2c1_driver_stop 0975  
                                      l1000 028E                                        l1013 02DE  
                                      l1006 02BF                                        l1017 0307  
                                      l1018 031F                                        l1051 03F4  
                                      l1043 03C0                                        l1142 0B7E  
                                      l1063 0447                                        l1055 0411  
                                      l1039 03A3                                        l1075 0496  
                                      l1067 0464                                        l1079 04B3  
                                      l1397 0B9A                                        l6103 03EF  
                                      l6007 02B3                                        l6015 02C1  
                                      l6121 0442                                        l6113 041E  
                                      l6025 0302                                        l6131 0471  
                                      l6107 040C                                        l6019 02D9  
                                      l6125 045F                                        l6053 034C  
                                      l6301 05ED                                        l6143 04AE  
                                      l6071 036C                                        l6063 0360  
                                      l6047 0340                                        l6065 0362  
                                      l6153 04C2                                        l6057 0356  
                                      l6139 0491                                        l6075 0376  
                                      l6059 0358                                        l6331 0692  
                                      l7131 071F                                        l5701 0AAF  
                                      l6149 04C0                                        l6085 039E  
                                      l6077 037C                                        l6069 036A  
                                      l6317 0623                                        l6309 0600  
                                      l6413 0CA2                                        l6095 03CD  
                                      l6335 069B                                        l6089 03BB  
                                      l6329 0631                                        l6513 0C61  
                                      l6433 0C7B                                        l6409 0CA0  
                                      l6531 0D57                                        l5811 0B47  
                                      l6291 05E9                                        l5821 0FBD  
                                      l5813 0B53                                        l6429 0C79  
                                      l6279 0EB1                                        l5727 0B94  
                                      l6295 069E                                        l6631 04D9  
                                      l5673 0A73                                        l5841 0FF0  
                                      l5833 0FD7                                        l5825 0FBF  
                                      l5753 07B0                                        l6449 0AD5  
                                      l5667 0B81                                        l5843 0FF1  
                                      l5835 0FE4                                        l5771 07D6  
                                      l5763 07B8                                        l5747 07A5  
                                      l5923 00F5                                        l5907 0080  
                                      l6459 0AE8                                        l6627 04D7  
                                      l6549 0DEA                                        l5765 07C4  
                                      l5909 00DA                                        l5941 013F  
                                      l6477 0E1C                                        l6389 07FD  
                                      l6567 0C3A                                        l5775 07DF  
                                      l6495 0E4E                                        l6399 0AFB  
                                      l6577 0AA0                                        l5961 01F5  
                                      l5937 00F1                                        l6763 074E  
                                      l5779 07E7                                        l5971 021A  
                                      l5955 01E0                                        l5891 0075  
                                      l5875 0F28                                        l6851 0733  
                                      l6835 06F0                                        l6827 06DD  
                                      l5797 0AC2                                        l5965 0205  
                                      l5877 0F57                                        l6845 0709  
                                      l6837 06FE                                        l6759 074C  
                                      l5959 01F2                                        l5887 0073  
                                      l6943 0D6D                                        l6777 074A  
                                      l5993 0281                                        l5985 0263  
                                      l5969 0217                                        l6849 0716  
                                      l5979 023A                                        l5997 0289  
                                      l6949 0D7F                                        STR_1 103D  
                                      STR_2 1030                                        STR_3 1020  
                                      STR_4 1049                                        STR_5 1054  
                   __end_of_PWM1_Initialize 0A87                                        _LATA 010C  
                                      _LATB 010D                                        _LATC 010E  
                                      u5025 03E0                                        u5035 03FD  
                                      u4235 07BB                                        u5125 0482  
                                      u5045 041B                                        u4405 0F31  
                                      u5135 049F                                        u4255 07C5  
                                      u4175 0B9B                                        u5145 04BD  
                                      u4265 07CF                                        u4185 0BA0  
                                      u4354 0FD0                                        u4355 0FCF  
                                      u5075 0433                                        u4275 07D7  
                                      u5235 062C                                        u4364 0FDC  
                                      _PMD0 0911                                        u4365 0FDB  
                                      u5165 0EBB                                        u5085 0450  
                                      u4605 01FE                                        u5245 063B  
                                      _PMD1 0912                                        _PMD2 0913  
                                      u5095 046E                                        u4615 020F  
                                      _PMD3 0914                                        _PMD4 0915  
                                      u5425 0DCB                                        u5265 0CC2  
                                      _PMD5 0916                                        u5275 0CEB  
                                      u4805 02F3                                        u4725 0298  
                                      u4645 022B                                        u4485 008F  
                                      u5365 0DFD                                        u4815 0310  
                                      u4735 02A6                                        u4655 0248  
                                      u4665 0254                                        u4585 01D9  
                                      u5385 0E2F                                        u4675 0271  
                                      u4595 01EA                                        u4845 0328  
                                      u4785 02CA                                        u5825 06EB  
                                      u4795 02E7                        ?_do_I2C_SEND_RESTART 0070  
                                      u4975 038F                                        u4985 03AC  
                                      u4995 03CA                                        u5957 06D4  
                                      u5967 06A2                                        u5977 06B5  
                                      u5987 0E99                                        u5997 0B0C  
                                      _TMR2 001D                                        _WPUA 020C  
                                      _WPUB 020D                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
         __size_of_do_I2C_SEND_RESTART_READ 0004                         ?i1_i2c1_driver_stop 0070  
                 ?_do_I2C_SEND_RESTART_READ 0070                                        _main 0D59  
                                      _name 005C                   __size_of_do_I2C_SEND_STOP 0004  
                    __size_of_do_I2C_DO_ACK 0004                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                     ??_setGestureIntEnable 002A                            __end_of_I2C_Stop 09A5  
                             __CFG_BOREN$ON 0000                     i1_i2c1_driver_getRXData 097B  
                     ?_do_I2C_SEND_ADR_READ 0070                               __CFG_BORV$LOW 0000  
           ??_i2c1_driver_clearBusCollision 0070                                        start 002B  
                       I2C_Write_Byte@count 0024                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                        ??_PWM_Output_Disable 0020  
                           __end_of_i2c_ISR 0C15                    ??_do_I2C_DO_NACK_RESTART 0070  
                              ?_readGesture 004F                                _do_I2C_RESET 0A00  
            __size_of_OSCILLATOR_Initialize 0008               __end_of_OSCILLATOR_Initialize 0A3C  
                       __size_of_IOCCF1_ISR 000D                        ??i1_i2c1_driver_stop 0070  
                                     _ADACT 009F                    __end_of_i2c1_driver_open 0A70  
                                     ?_main 0070                             __end_of___awdiv 07EC  
                  __end_of_i2c1_driver_stop 09A2                             ___awdiv@divisor 0026  
                                     _T2CON 001F                  __end_of_i2c1_driver_TXData 09F4  
                            __CFG_DEBUG$OFF 0000                                       i1l157 0F95  
                                     i1l173 0EEC                                       i1l253 0029  
                                     i1l245 0010                                       i1l248 001E  
                              ?_setLEDBoost 0070                             ___awdiv@counter 002B  
                              ?_setLEDDrive 0070                              _setGestureGain 0DEC  
                                     _OSCEN 091D                          wireReadDataBlock@j 0030  
                            _setGestureMode 0C15                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 07FF                             __end_of_getMode 0A66  
                     isGestureAvailable@val 002A                     __end_of_PIN_MANAGER_IOC 09E8  
                __end_of_i2c1_driver_isNACK 0A24                      __size_of_I2C_Read_Byte 000B  
                            _WDT_Initialize 09CC                                       _names 0160  
                          _b_i2c_error_flag 0076                __end_of_setProxIntHighThresh 0AFD  
                ?_do_I2C_SEND_RESTART_WRITE 0070                                       _state 0078  
                                     _start 006F                       ??_do_I2C_SEND_RESTART 0070  
                           __end_of_setMode 1000                           __end_of_I2C_Start 099F  
                                     pclath 000A                     __size_of_mssp1_clearIRQ 0003  
                      i1_i2c1_driver_TXData 09D8                __size_of_setAmbientLightGain 001E  
                    ?_do_I2C_SEND_ADR_WRITE 0070                      __size_of_I2C_Send_NACK 0003  
                                     status 0003                                       wtemp0 007E  
                        __size_of_SPI_Write 0015                    ?_setLightIntLowThreshold 002A  
                __end_of_setGestureLEDDrive 0E50                       setGestureWaitTime@val 002C  
                             _fsmStateTable 1000                               _gesture_data_ 0220  
                           __initialization 002D                      ??_setGestureExitThresh 002A  
                         _SPI2_Exchange8bit 0AA2                  processGestureData@lr_delta 004B  
                                _i2c_status 01A0                                __end_of_main 0D89  
                         _handleGestureFlag 0077                  processGestureData@ud_delta 0049  
                        ?_SPI2_Exchange8bit 0070                     __end_of_TMR2_Initialize 0A4C  
               ?_INTERRUPT_InterruptManager 0070                      __end_of_setGestureGain 0E1E  
                 __size_of_setProximityGain 0029                      __end_of_setGestureMode 0C3C  
                             _do_I2C_DO_ACK 09C0                                      ??_main 005C  
             __size_of_i2c1_driver_sendNACK 0004                    __size_of_SPI2_Initialize 0007  
                       ??_SPI2_Exchange8bit 0020           __size_of_setLightIntHighThreshold 0027  
             __size_of_i2c1_driver_resetBus 0001                      __end_of_WDT_Initialize 09D0  
                   ?_do_I2C_DO_ADDRESS_NACK 0070                   ?_setLightIntHighThreshold 002A  
         setLightIntHighThreshold@threshold 002A                        __end_of_Display_Name 0ED2  
                      __size_of_enablePower 000E                                      _ADCON0 009D  
                                    _ADCON1 009E                ??_IOCCF1_SetInterruptHandler 0022  
                                    _ADRESH 009C                                      _ADRESL 009B  
                                    _CCPR1H 0292                                      _CCPR1L 0291  
                          ___awdiv@dividend 0028                          _processGestureData 0065  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
              setProxIntLowThresh@threshold 002B                       ?i1_i2c1_driver_TXData 0070  
                                    _RC2PPS 0EA2                                      _RB5PPS 0E9D  
                                    _RB6PPS 0E9E                            ?_PWM1_Initialize 0070  
                                    _RB7PPS 0E9F                                      _ODCONA 028C  
                                    _ODCONB 028D                                      _ODCONC 028E  
                                    _RC7PPS 0EA7                                      i1l5017 0BFF  
                                    i1l4503 0FAF                                      i1l4525 0EEE  
                                    i1l4463 0D0D                                      i1l4535 0EF4  
                                    i1l4545 0D8C                                      i1l4561 0D96  
                                    i1l4481 0F68                                      i1l4529 0EF1  
                                    i1l4555 0D93                                      i1l4459 0D0A  
                                    i1l4549 0D8F                                      i1l4469 0D10  
                                    i1l4485 0F6B                                      i1l7133 0F09  
                                    i1l4671 0A91                                      i1l7135 0F87  
                                    i1l4495 0F71                                      i1l7137 0D25  
                                    i1l4489 0F6E                                      i1l7139 0DAB  
                 ??i1_i2c1_driver_getRXData 0070                            _wireReadDataByte 0BCB  
                                    _OSCFRQ 091F                     ?_resetGestureParameters 0070  
                    ??_do_I2C_SEND_ADR_READ 0070                                      _WDTCON 0097  
                                 ??_i2c_ISR 0073                         ?_processGestureData 0070  
                         _gesture_lr_delta_ 0066                              __CFG_PWRTE$OFF 0000  
             setProxIntHighThresh@threshold 002B                   __end_of_SPI2_Exchange8bit 0AB1  
                         _gesture_lr_count_ 0062                         wireReadDataByte@reg 0027  
                     _i2c1_driver_getRXData 0990                         wireReadDataByte@val 0028  
                         _gesture_ud_delta_ 0068                 __end_of_do_I2C_DO_NACK_STOP 09C8  
                             _I2C_Read_Byte 0A70                  __end_of_isGestureAvailable 0AC4  
                         _gesture_ud_count_ 0064                                      ___wmul 0B91  
                                 ??___awdiv 002A       __end_of_i2c1_driver_clearBusCollision 0987  
    __size_of_i2c1_driver_clearBusCollision 0003               _i2c1_driver_clearBusCollision 0984  
                __end_of_setGestureWaitTime 0C63                              __CFG_STVREN$ON 0000  
           __size_of_do_I2C_DO_NACK_RESTART 0004                                      _button 007A  
                          ___awdiv@quotient 002D                              ?_do_I2C_DO_ACK 0070  
                           ?_setGestureGain 0070                               _I2C_Send_NACK 0996  
                                 ??_getMode 0029                             ?_setGestureMode 0070  
       __size_of_IOCCF1_SetInterruptHandler 0009                                      _strlen 0B42  
                   ??_setGestureEnterThresh 002A                        ??_processGestureData 002F  
                         __end_of_SPI_Write 0B12                 __end_of_i2c1_driver_sendACK 09AC  
                            _PMD_Initialize 0A3C              __end_of_do_I2C_DO_ADDRESS_NACK 0D2E  
                                 ?_I2C_Stop 0070                          Display_Name@length 0028  
                                 ??_setMode 002C                             ?_WDT_Initialize 0070  
               __end_of_i2c1_driver_restart 098D                                ?_returnReset 0070  
                         readGesture@motion 0053                 __end_of_i2c1_driver_startRX 0996  
IOCCF1_SetInterruptHandler@InterruptHandler 0020                            ?_PIN_MANAGER_IOC 0070  
                              ??_IOCCF1_ISR 0070              __end_of_resetGestureParameters 0B42  
                         _SYSTEM_Initialize 0B12                     __end_of__initialization 0061  
                          _do_I2C_SEND_STOP 09BC                          __size_of_do_I2C_RX 0046  
                        __size_of_do_I2C_TX 004F                          ?_SYSTEM_Initialize 0070  
                    setGestureWaitTime@time 002B                    __size_of_do_I2C_TX_EMPTY 0031  
                                _adcResult2 00E0                              ?_I2C_Read_Byte 0070  
                            __pcstackCOMMON 0070                                __pidataBANK0 07FF  
                              __pidataBANK2 0A4C                         ??_SYSTEM_Initialize 0022  
                     i1i2c1_driver_TXData@d 0070                        _setProxIntHighThresh 0AEA  
                            _gesture_state_ 005E                              ?_I2C_Send_NACK 0070  
                          ?_TMR2_Initialize 0070                       i1_i2c1_driver_restart 0972  
                    __end_of_PMD_Initialize 0A44                       i1_i2c1_driver_startRX 0978  
                        __end_of_IOCCF1_ISR 0A94                        __size_of_readGesture 00F3  
                     __end_of_handleGesture 0736           __size_of_i2c1_driver_isBufferFull 0007  
                                ??_I2C_Stop 0020                   ?_i2c1_driver_isBufferFull 0070  
                        _gesture_far_count_ 00E2                        __size_of_setLEDBoost 0032  
                      __size_of_setLEDDrive 0029                      _do_I2C_DO_NACK_RESTART 09C8  
                    ??i1_i2c1_driver_TXData 0070                   __end_of_SYSTEM_Initialize 0B2A  
                         ??_SPI2_Initialize 0020                              _mssp1_clearIRQ 0981  
                                __pbssBANK0 005C                                  __pbssBANK1 00E0  
                                __pbssBANK2 0168                                  __pbssBANK3 01A0  
                                __pbssBANK4 0220                        wireWriteDataByte@reg 0029  
                      wireWriteDataByte@val 0026                         getMode@enable_value 002A  
                  ??i1_i2c1_driver_sendNACK 0070                      ?_i2c1_driver_getRXData 0070  
                __size_of_SPI2_Exchange8bit 000F                __size_of_i2c_busCollisionISR 0003  
                                __pmaintext 0D59                               ??_do_I2C_IDLE 0070  
                             ??_do_I2C_RCEN 0070                     setGestureLEDDrive@drive 002D  
                                   ?___wmul 0020                             __CFG_PPS1WAY$ON 0000  
                           ??_do_I2C_DO_ACK 0070                __size_of_enableGestureSensor 0064  
                                __pintentry 0004                       ?_setProxIntHighThresh 0070  
                                   _CCP1CON 0293                     __size_of_I2C_Write_Byte 001C  
                             ??_I2C_ReStart 0020                            _setProximityGain 0CDA  
                               setMode@mode 002F                             ?_PMD_Initialize 0070  
                       _setAmbientLightGain 0BAD                     __size_of_ADC_Initialize 0008  
                     __size_of_Display_Name 0041              ?_i2c1_driver_clearBusCollision 0070  
                                   ?_strlen 0020                           ?_i2c1_driver_open 0070  
                         __end_of_do_I2C_RX 0F18                           __end_of_do_I2C_TX 0FB1  
                         ?_i2c1_driver_stop 0070                           _wireReadDataBlock 0F18  
                        ??_i2c1_driver_open 0020                          ??_i2c1_driver_stop 0020  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                             ?_mssp1_setIRQ 0070          __end_of_IOCCF1_SetInterruptHandler 0A5D  
                _IOCCF1_SetInterruptHandler 0A54                                     _OSCTUNE 091E  
                      wireReadDataBlock@len 0028                        wireReadDataBlock@reg 002F  
                      wireReadDataBlock@val 0026                                     _SSP1ADD 0212  
                                   _SSP2ADD 021A                                     _SLRCONA 030C  
                                   _SLRCONB 030D                                     _SLRCONC 030E  
                                   _SSP1BUF 0211                      __end_of_mssp1_clearIRQ 0984  
                                   _SSP2BUF 0219                          ?_wireReadDataBlock 0026  
                                   _SSP1MSK 0213                           SPI_Write@incoming 0022  
               __end_of_setGestureIntEnable 0D59                     ??_do_I2C_SEND_ADR_WRITE 0070  
           processGestureData@lr_ratio_last 0037                 ??_do_I2C_SEND_RESTART_WRITE 0070  
                              readGesture@i 0059                          _i2c1_driver_TXData 09EE  
                      ?_setAmbientLightGain 0070                          _i2c1_driver_i2cISR 006A  
                       ??_wireReadDataBlock 002A                                     _i2c_ISR 0BEF  
                                 _I2C_Start 099C                             ??_I2C_Read_Byte 0021  
                             setMode@enable 002B                          _i2c1_driver_isNACK 0A1C  
                    __size_of_decodeGesture 0190                         ?_i2c1_driver_TXData 0070  
               __size_of_PWM_Output_Disable 0003                                _Display_Name 0E91  
                           ??_I2C_Send_NACK 0020                                     ___awdiv 079A  
                           __size_of___wmul 001C                      ?i1_i2c1_driver_restart 0070  
                         ??_do_I2C_TX_EMPTY 0070                         ?_i2c1_driver_isNACK 0070  
                    ?i1_i2c1_driver_startRX 0070                    __end_of_wireReadDataByte 0BEF  
                                _initialize 04C4                                     _getMode 0A5D  
          __size_of_setLightIntLowThreshold 0027                          _setGestureLEDDrive 0E1E  
                                   __ptext1 04C4                                     __ptext2 0CDA  
                                   __ptext3 07EC                                     __ptext4 0AEA  
                                   __ptext5 0C8A                                     __ptext6 0C63  
                                   __ptext7 0CB1                                     __ptext8 0C3C  
                                   __ptext9 0E1E                 __size_ofi1_i2c1_driver_stop 0003  
                       __end_of_do_I2C_IDLE 09E2                   __end_of_wireReadDataBlock 0F62  
                       __end_of_do_I2C_RCEN 09EE                             __size_of_strlen 0018  
                     _OSCILLATOR_Initialize 0A34                                   _T2CONbits 001F  
               __end_of_do_I2C_SEND_RESTART 09BC                              ??_mssp1_setIRQ 0070  
                      ??_i2c1_driver_TXData 0020                                     _setMode 0FB1  
                  ??_PIN_MANAGER_Initialize 0022                                   _IOCCFbits 0399  
                       __end_of_I2C_ReStart 0990                                   _IOCCNbits 0398  
                       ?_setGestureLEDDrive 0070                                   _IOCCPbits 0397  
                                   _printed 006E                             ?_mssp1_clearIRQ 0070  
                  _do_I2C_SEND_RESTART_READ 09B0                  __size_of_SYSTEM_Initialize 0018  
                                   clrloop0 09F5                        __size_of_returnReset 0002  
                      end_of_initialization 0061                        ??_i2c1_driver_isNACK 0070  
                     ??_setAmbientLightGain 002A                __size_of_setProxIntLowThresh 0013  
                                   init_ram 09FA                __end_of_i2c1_driver_sendNACK 09D4  
                                   initloop 09FB             __size_ofi1_i2c1_driver_sendNACK 0004  
                                ?_I2C_Start 0070               enableGestureSensor@interrupts 0031  
              __end_of_i2c1_driver_resetBus 0970               setGestureExitThresh@threshold 002B  
                      ??_setGestureLEDDrive 002A                          readGesture@gstatus 0055  
                              initialize@id 0031                            ??_setGestureGain 002A  
                    ??_setProxIntHighThresh 002A                            ??_setGestureMode 002A  
                 _do_I2C_SEND_RESTART_WRITE 09B4                         Display_Name@string1 0025  
             __size_of_setGestureExitThresh 0013                                     strlen@a 0023  
                                   strlen@s 0020                            ??_WDT_Initialize 0020  
                         _wireWriteDataByte 0B5A                                  _returnStop 0970  
                  __end_of_do_I2C_SEND_STOP 09C0                               ??_enablePower 0030  
                        ?_wireWriteDataByte 0026             setLightIntHighThreshold@val_low 002D  
            __size_of_setGestureEnterThresh 0013               __end_of_setGestureEnterThresh 0AD7  
                             _decodeGesture 0334                          _isGestureAvailable 0AB1  
                        _setGestureWaitTime 0C3C                                   _SPI_Write 0AFD  
                         __size_of_I2C_Stop 0003                                 returnStop@p 0070  
                       ??_wireWriteDataByte 0029                            __CFG_FEXTOSC$OFF 0000  
                         _PWM_Output_Enable 09D4             processGestureData@ud_ratio_last 0035  
                       ?_isGestureAvailable 0070                         ?_setGestureWaitTime 0070  
                        ?_PWM_Output_Enable 0070                                 _CCP1CONbits 0293  
                     SPI2_Exchange8bit@data 0020               __size_of_do_I2C_SEND_ADR_READ 0008  
                     setProximityGain@drive 002D                    __size_of_PWM1_Initialize 000C  
                       ??_PWM_Output_Enable 0020            __end_of_i2c1_driver_isBufferFull 0A1C  
                               _do_I2C_IDLE 09DD                                 _do_I2C_RCEN 09E8  
                 __end_of_wireWriteDataByte 0B75                              _I2C_Write_Byte 0B75  
                      ??_isGestureAvailable 0029                              __end_of___wmul 0BAD  
                      ??_setGestureWaitTime 002A                                 ?_initialize 0070  
                               _I2C_ReStart 098D                              _ADC_Initialize 0A2C  
                    i1_i2c1_driver_sendNACK 09AC                      ?_OSCILLATOR_Initialize 0070  
                  _setLightIntHighThreshold 0C63                  __size_of_wireReadDataBlock 004A  
                           _gesture_motion_ 0168                             _SPI2_Initialize 0A0E  
              __size_of_do_I2C_DO_NACK_STOP 0004                 __size_of_processGestureData 02CF  
                            ?_decodeGesture 0070                              __end_of_strlen 0B5A  
                   ?_do_I2C_DO_NACK_RESTART 0070                         start_initialization 002D  
                        setGestureGain@gain 002D                         _i2c_busCollisionISR 0987  
           __size_of_PIN_MANAGER_Initialize 0041                   __end_of_PWM_Output_Enable 09D8  
                  ?i1_i2c1_driver_getRXData 0070                                  ?_SPI_Write 0070  
          setLightIntHighThreshold@val_high 002E                         _enableGestureSensor 0736  
                       __end_of_enablePower 0AA2                __size_of_i2c1_driver_sendACK 0004  
                   ??_i2c1_driver_getRXData 0020                    __end_of_setProximityGain 0D03  
              __size_of_i2c1_driver_restart 0003                    processGestureData@d_last 0042  
              __size_of_i2c1_driver_startRX 0003                    processGestureData@l_last 0043  
                               ??_I2C_Start 0020                    processGestureData@r_last 0044  
                  __size_of_PIN_MANAGER_IOC 0006                    processGestureData@u_last 0041  
                   _processGestureData$1401 0039                     _processGestureData$1402 003B  
                   _processGestureData$1403 003D                     _processGestureData$1404 003F  
                      ?_i2c_busCollisionISR 0070                            __CFG_LPBOREN$OFF 0000  
                      __end_of_mssp1_setIRQ 0981                      __end_of_I2C_Write_Byte 0B91  
                          ??_PMD_Initialize 0020             setLightIntLowThreshold@val_high 002E  
                                  ??___wmul 0024                        ?_enableGestureSensor 0070  
                               _CCPTMRSbits 029F                               ??_readGesture 0051  
                    __end_of_ADC_Initialize 0A34                               ?_do_I2C_RESET 0070  
                               __pdataBANK0 006F                                 __pdataBANK2 0160  
                        setGestureMode@mode 002B                     _setLightIntLowThreshold 0C8A  
                 setGestureIntEnable@enable 002C                    setAmbientLightGain@drive 002B  
                               ?_returnStop 0070                                    ??_strlen 0022  
            __end_of_do_I2C_DO_NACK_RESTART 09CC                               ??_setLEDBoost 002A  
                             ??_setLEDDrive 002A                        _i2c1_driver_sendNACK 09D0  
                    setGestureIntEnable@val 002B                                 __pbssCOMMON 0076  
                                 ___latbits 0002                                   _adcResult 0079  
                      _i2c1_driver_resetBus 096F                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A0                               __pcstackBANK2 0120  
                  __size_of_TMR2_Initialize 0008                                   _do_I2C_RX 0ED2  
                                 _do_I2C_TX 0F62                 ?_IOCCF1_SetInterruptHandler 0020  
            __size_of_do_I2C_SEND_ADR_WRITE 0007               __size_ofi1_i2c1_driver_TXData 0005  
             __end_of_do_I2C_SEND_ADR_WRITE 0A0E                       readGesture@fifo_data2 00A0  
                 __size_of_i2c1_driver_open 000A                       readGesture@fifo_level 0058  
                 __size_of_i2c1_driver_stop 0003                                    ?_i2c_ISR 0070  
                       __size_of_initialize 0116                             _do_I2C_TX_EMPTY 0D89  
                                 __pnvBANK1 00E4                      __size_of_handleGesture 0069  
                     ??_i2c_busCollisionISR 0070                       __end_of_fsmStateTable 1020  
                    _PIN_MANAGER_Initialize 0E50                     ??i1_i2c1_driver_restart 0070  
                   ??i1_i2c1_driver_startRX 0070                             ?_I2C_Write_Byte 0070  
                     ??_enableGestureSensor 0030                     __end_of_SPI2_Initialize 0A15  
                            ??_do_I2C_RESET 0070                                    ?___awdiv 0026  
                __size_of_wireWriteDataByte 001B                    ??_do_I2C_DO_ADDRESS_NACK 0070  
                           ?_ADC_Initialize 0070                 _i2c1_driver_busCollisionISR 006C  
                       _setProxIntLowThresh 07EC                       __end_of_do_I2C_DO_ACK 09C4  
                         ??_PWM1_Initialize 0020                ??_INTERRUPT_InterruptManager 0076  
                  _i2c1_driver_isBufferFull 0A15                                    ?_getMode 0070  
                           ??_decodeGesture 0020                           ?_wireReadDataByte 0070  
                ??_do_I2C_SEND_RESTART_READ 0070                       ?_i2c1_driver_sendNACK 0070  
           __end_ofi1_i2c1_driver_getRXData 097E                            ??_mssp1_clearIRQ 0070  
          ??_IOCCF1_DefaultInterruptHandler 0070             ?_IOCCF1_DefaultInterruptHandler 0070  
                               _enablePower 0A94                          ??_wireReadDataByte 0026  
                       __end_of_readGesture 06CD                       ?_i2c1_driver_resetBus 0070  
        __size_of_do_I2C_SEND_RESTART_WRITE 0004                                    _I2C_Stop 09A2  
                  ??_resetGestureParameters 0020                                    ?_setMode 002B  
                __size_of_PWM_Output_Enable 0004                                  ?_do_I2C_RX 0070  
                                ?_do_I2C_TX 0070                            __CFG_WDTE$SWDTEN 0000  
                               ??_SPI_Write 0021                           _i2c1_driver_start 0999  
                       __end_of_setLEDBoost 0DEC                         __end_of_setLEDDrive 0CDA  
                      ?_setProxIntLowThresh 0070                       readGesture@bytes_read 0056  
                        ?_i2c1_driver_start 0070                              ___wmul@product 0024  
                                  _LATCbits 010E                         __size_of_returnStop 0002  
                                 clear_ram0 09F4                                    _PIE0bits 0090  
                                  _PIE1bits 0091                __size_of_setGestureIntEnable 002B  
                __end_of_PWM_Output_Disable 09A8                         _gesture_near_count_ 0060  
                       ??_i2c1_driver_start 0020         __size_of_INTERRUPT_InterruptManager 0027  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
                     __end_of_I2C_Read_Byte 0A7B                   ??_setLightIntLowThreshold 002C  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
                                  _SSP2CON1 021D                              setLEDBoost@val 002C  
                                  _SSP1STAT 0214                                    _SSP2STAT 021C  
                __end_ofi1_i2c1_driver_stop 0978                           ??_PIN_MANAGER_IOC 0070  
                     __end_of_I2C_Send_NACK 0999                              setLEDDrive@val 002C  
          processGestureData@lr_ratio_first 0033                                  _ADCON0bits 009D  
                         ___wmul@multiplier 0020                           ?_do_I2C_SEND_STOP 0070  
                 processGestureData@d_first 0046                               _handleGesture 06CD  
                 __end_of_i2c1_driver_start 099C                               ??_returnReset 0071  
                        ??_do_I2C_SEND_STOP 0070                 __size_of_i2c1_driver_TXData 0006  
               __end_of_setAmbientLightGain 0BCB                   processGestureData@l_first 0047  
         __end_of_do_I2C_SEND_RESTART_WRITE 09B8                     __end_of_do_I2C_TX_EMPTY 0DBA  
              __end_of_setGestureExitThresh 0AEA                   processGestureData@r_first 0048  
                 processGestureData@u_first 0045                       ??_setProxIntLowThresh 002A  
              __size_of_do_I2C_SEND_RESTART 0004                 __size_of_i2c1_driver_isNACK 0008  
                         setGestureGain@val 002C                       __size_of_mssp1_setIRQ 0003  
                         ??_TMR2_Initialize 0020                         _do_I2C_DO_NACK_STOP 09C4  
                          __size_of_i2c_ISR 0026                  ??_setLightIntHighThreshold 002C  
               __size_of_setGestureLEDDrive 0032                              setMode@reg_val 002E  
            setLightIntLowThreshold@val_low 002D                                ?_do_I2C_IDLE 0070  
                              ?_do_I2C_RCEN 0070                           setGestureMode@val 002C  
                          ?_SPI2_Initialize 0070                     ?i1_i2c1_driver_sendNACK 0070  
                   ??_OSCILLATOR_Initialize 0020                         _i2c1_driver_sendACK 09A8  
                          __size_of___awdiv 0052               __size_of_setProxIntHighThresh 0013  
                               _readGesture 05DA             __size_of_do_I2C_DO_ADDRESS_NACK 002B  
                       i2c1_driver_TXData@d 0020                      ??_i2c1_driver_sendNACK 0020  
                              ??_initialize 0030                                ?_I2C_ReStart 0070  
                       _i2c1_driver_restart 098A            setLightIntLowThreshold@threshold 002A  
                      ?_do_I2C_DO_NACK_STOP 0070                         _i2c1_driver_startRX 0993  
                            ?_handleGesture 0070                __end_of_do_I2C_SEND_ADR_READ 0A2C  
                          __size_of_getMode 0009                      ??_i2c1_driver_resetBus 0070  
                      readGesture@fifo_data 0120                                 _setLEDBoost 0DBA  
                               _setLEDDrive 0CB1             __size_of_resetGestureParameters 0018  
                              _mssp1_setIRQ 097E             __end_of_setLightIntLowThreshold 0CB1  
                               ??_do_I2C_RX 0070                                 ??_do_I2C_TX 0070  
                     setGestureLEDDrive@val 002C                            __size_of_setMode 004F  
                                  __ptext10 0DEC                                    __ptext11 0AD7  
                                  __ptext20 079A                                    __ptext12 0AC4  
                                  __ptext21 0AB1                                    __ptext13 0BAD  
                                  __ptext30 0DBA                                    __ptext22 0334  
                                  __ptext14 0A66                                    __ptext31 0C15  
                                  __ptext23 09D4                                    __ptext15 06CD  
                                  __ptext40 09EE                                    __ptext32 0D2E  
                                  __ptext24 09A5                                    __ptext16 05DA  
                                  __ptext41 09A2                                    __ptext33 0B2A  
                                  __ptext25 0E91                                    __ptext17 0F18  
                                  __ptext50 0990                                    __ptext42 099F  
                                  __ptext34 0A94                                    __ptext26 0B42  
                                  __ptext18 0065                                    __ptext51 098D  
                                  __ptext43 099C                                    __ptext35 0FB1  
                                  __ptext27 0AFD                                    __ptext19 0B91  
                                  __ptext60 0A54                                    __ptext52 098A  
                                  __ptext44 0999                                    __ptext36 0B5A  
                                  __ptext28 0AA2                                    __ptext61 0A34  
                                  __ptext53 0B12                                    __ptext45 0996  
                                  __ptext37 0A5D                                    __ptext29 0736  
                                  __ptext70 0D03                                    __ptext62 0A2C  
                                  __ptext54 09CC                                    __ptext46 09D0  
                                  __ptext38 0BCB                                    __ptext71 09C8  
                                  __ptext55 0A44                                    __ptext47 0A70  
                                  __ptext39 0B75                                    __ptext80 09B0  
                                  __ptext72 09C4                                    __ptext64 0987  
                                  __ptext56 0A0E                                    __ptext48 0993  
                                  __ptext81 09DD                                    __ptext73 09C0  
                                  __ptext65 0984                                    __ptext57 0A7B  
                                  __ptext49 0A15                                    __ptext90 0978  
                                  __ptext82 0A00                                    __ptext74 09E8  
                                  __ptext66 0BEF                                    __ptext58 0A3C  
                                  __ptext91 0002                                    __ptext83 0D89  
                                  __ptext75 0A07                                    __ptext67 0981  
                                  __ptext59 0E50                                    __ptext92 0970  
                                  __ptext84 097E                                    __ptext76 0A24  
                                  __ptext68 0ED2                                    __ptext93 0975  
                                  __ptext85 0A1C                                    __ptext77 09BC  
                                  __ptext69 0F62                                    __ptext94 0972  
                                  __ptext86 09D8                                    __ptext78 09B8  
                                  __ptext95 09A8                                    __ptext87 097B  
                                  __ptext79 09B4                                    __ptext96 09E2  
                                  __ptext88 09AC                                    __ptext97 0A87  
                                  __ptext89 096F                                    __ptext98 096E  
                     _setGestureEnterThresh 0AC4                                _SSP1CON1bits 0215  
                              _SSP1CON2bits 0216              setGestureEnterThresh@threshold 002B  
                              _SSP2CON1bits 021D                        ?_i2c1_driver_sendACK 0070  
                      __end_of_do_I2C_RESET 0A07                                  _IOCCF1_ISR 0A87  
                      ?_i2c1_driver_restart 0070                         __end_of_returnReset 0004  
                          _i2c1_driver_open 0A66                            _i2c1_driver_stop 099F  
                             __size_of_main 0030                        ?_i2c1_driver_startRX 0070  
                         ?_setProximityGain 0070              __size_of_i2c1_driver_getRXData 0003  
             __end_of_i2c1_driver_getRXData 0993                          __end_of_initialize 05DA  
                        ??_setProximityGain 002A            __size_ofi1_i2c1_driver_getRXData 0003  
                        _decodeGesture$1410 002A                          _decodeGesture$1411 002C  
                        _decodeGesture$1412 002E                          _decodeGesture$1413 0030  
                        _decodeGesture$1406 0022                          _decodeGesture$1407 0024  
                        _decodeGesture$1408 0026                          _decodeGesture$1409 0028  
            __end_ofi1_i2c1_driver_sendNACK 09B0                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 002B                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                 __size_of_isGestureAvailable 0013  
                             Display_Name@i 002A                         setProximityGain@val 002C  
          __end_of_do_I2C_SEND_RESTART_READ 09B4                 __size_of_setGestureWaitTime 0027  
                __end_of_processGestureData 0334                                ??_returnStop 0071  
                              _SSP2STATbits 021C                       ??_do_I2C_DO_NACK_STOP 0070  
                   __size_of_setGestureGain 0032                                  _INTCONbits 000B  
                   __size_of_setGestureMode 0027                  __size_of_i2c1_driver_start 0003  
                    setAmbientLightGain@val 002C                       ??_i2c1_driver_sendACK 0070  
                          ?_do_I2C_TX_EMPTY 0070                     __size_of_WDT_Initialize 0004  
                    _do_I2C_DO_ADDRESS_NACK 0D03                                    intlevel1 0000  
                     ??_i2c1_driver_restart 0020                       ??_i2c1_driver_startRX 0020  
                   ?_PIN_MANAGER_Initialize 0070                            ??_I2C_Write_Byte 0021  
                         __CFG_CLKOUTEN$OFF 0000                          __end_of_returnStop 0972  
                           _PWM1_Initialize 0A7B                            ??_ADC_Initialize 0020  
                    _resetGestureParameters 0B2A                  ??_i2c1_driver_isBufferFull 0020  
                             ?_Display_Name 0025              __size_ofi1_i2c1_driver_restart 0003  
             __end_ofi1_i2c1_driver_restart 0975              __size_ofi1_i2c1_driver_startRX 0003  
              __end_ofi1_i2c1_driver_TXData 09DD               __end_ofi1_i2c1_driver_startRX 097B  
                      _setGestureExitThresh 0AD7                             ??_handleGesture 005B  
                             __pstringtext1 1000                               __pstringtext2 1020  
                             __pstringtext3 1030                               __pstringtext4 103D  
                             __pstringtext5 1049                               __pstringtext6 1054  
                             __pstringtext7 0000                                  _SSP1DATPPS 0E21  
                              ?_enablePower 0070                                  _SSP2DATPPS 0E1E  
                                _SSP1CLKPPS 0E20                         _setGestureIntEnable 0D2E  
                                _SSP2CLKPPS 0E1D                            setLEDBoost@boost 002D  
                    ?_setGestureEnterThresh 0070                                 _returnReset 0002  
                               ?_IOCCF1_ISR 0070              __end_of_PIN_MANAGER_Initialize 0E91  
               __end_of_i2c_busCollisionISR 098A                   __size_of_wireReadDataByte 0024  
    __end_of_IOCCF1_DefaultInterruptHandler 096F     __size_of_IOCCF1_DefaultInterruptHandler 0001  
            _IOCCF1_DefaultInterruptHandler 096E                            setLEDDrive@drive 002D  
                       processGestureData@i 004D                             _PIN_MANAGER_IOC 09E2  
               __end_of_enableGestureSensor 079A                       _do_I2C_SEND_ADR_WRITE 0A07  
                      ?_setGestureIntEnable 0070                        _do_I2C_SEND_ADR_READ 0A24  
                   _IOCCF1_InterruptHandler 00E4            __end_of_setLightIntHighThreshold 0C8A  
                            ??_Display_Name 0027  
