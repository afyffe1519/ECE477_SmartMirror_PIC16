

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 12:24:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,delta=2
    75                           	psect	text62,local,class=CODE,merge=1,delta=2
    76                           	psect	text63,local,class=CODE,merge=1,delta=2
    77                           	psect	text64,local,class=CODE,merge=1,delta=2
    78                           	psect	text65,local,class=CODE,merge=1,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,delta=2
    80                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text74,local,class=CODE,merge=1,delta=2
    88                           	psect	text75,local,class=CODE,merge=1,delta=2
    89                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text79,local,class=CODE,merge=1,delta=2
    93                           	psect	text80,local,class=CODE,merge=1,delta=2
    94                           	psect	text81,local,class=CODE,merge=1,delta=2
    95                           	psect	text82,local,class=CODE,merge=1,delta=2
    96                           	dabs	1,0x7E,2
    97  0000                     
    98                           ; Version 2.05
    99                           ; Generated 20/12/2018 GMT
   100                           ; 
   101                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC16F18345 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0097                     	;# 
   175  009B                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0214                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  0219                     	;# 
   242  021A                     	;# 
   243  021B                     	;# 
   244  021C                     	;# 
   245  021D                     	;# 
   246  021D                     	;# 
   247  021E                     	;# 
   248  021F                     	;# 
   249  028C                     	;# 
   250  028D                     	;# 
   251  028E                     	;# 
   252  0291                     	;# 
   253  0291                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0294                     	;# 
   257  0295                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0297                     	;# 
   261  0298                     	;# 
   262  029F                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  0311                     	;# 
   267  0311                     	;# 
   268  0312                     	;# 
   269  0313                     	;# 
   270  0314                     	;# 
   271  0315                     	;# 
   272  0315                     	;# 
   273  0316                     	;# 
   274  0317                     	;# 
   275  0318                     	;# 
   276  038C                     	;# 
   277  038D                     	;# 
   278  038E                     	;# 
   279  0391                     	;# 
   280  0392                     	;# 
   281  0393                     	;# 
   282  0394                     	;# 
   283  0395                     	;# 
   284  0396                     	;# 
   285  0397                     	;# 
   286  0398                     	;# 
   287  0399                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0411                     	;# 
   294  0411                     	;# 
   295  0412                     	;# 
   296  0413                     	;# 
   297  0414                     	;# 
   298  0415                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  0418                     	;# 
   303  0419                     	;# 
   304  041A                     	;# 
   305  041B                     	;# 
   306  041C                     	;# 
   307  041D                     	;# 
   308  041E                     	;# 
   309  041F                     	;# 
   310  0498                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  049E                     	;# 
   319  049F                     	;# 
   320  0617                     	;# 
   321  0618                     	;# 
   322  0619                     	;# 
   323  0619                     	;# 
   324  061A                     	;# 
   325  061B                     	;# 
   326  061C                     	;# 
   327  061C                     	;# 
   328  061F                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  0695                     	;# 
   334  0696                     	;# 
   335  0697                     	;# 
   336  0698                     	;# 
   337  0699                     	;# 
   338  0711                     	;# 
   339  0712                     	;# 
   340  0713                     	;# 
   341  0714                     	;# 
   342  0715                     	;# 
   343  0716                     	;# 
   344  0717                     	;# 
   345  0718                     	;# 
   346  0719                     	;# 
   347  0891                     	;# 
   348  0891                     	;# 
   349  0891                     	;# 
   350  0891                     	;# 
   351  0891                     	;# 
   352  0891                     	;# 
   353  0892                     	;# 
   354  0892                     	;# 
   355  0892                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0893                     	;# 
   359  0893                     	;# 
   360  0893                     	;# 
   361  0893                     	;# 
   362  0894                     	;# 
   363  0894                     	;# 
   364  0894                     	;# 
   365  0895                     	;# 
   366  0895                     	;# 
   367  0895                     	;# 
   368  0896                     	;# 
   369  0896                     	;# 
   370  0896                     	;# 
   371  089B                     	;# 
   372  0911                     	;# 
   373  0912                     	;# 
   374  0913                     	;# 
   375  0914                     	;# 
   376  0915                     	;# 
   377  0916                     	;# 
   378  0918                     	;# 
   379  0919                     	;# 
   380  091A                     	;# 
   381  091B                     	;# 
   382  091C                     	;# 
   383  091D                     	;# 
   384  091E                     	;# 
   385  091F                     	;# 
   386  0E0F                     	;# 
   387  0E10                     	;# 
   388  0E11                     	;# 
   389  0E12                     	;# 
   390  0E13                     	;# 
   391  0E14                     	;# 
   392  0E15                     	;# 
   393  0E16                     	;# 
   394  0E17                     	;# 
   395  0E18                     	;# 
   396  0E19                     	;# 
   397  0E1A                     	;# 
   398  0E1B                     	;# 
   399  0E1C                     	;# 
   400  0E1D                     	;# 
   401  0E1E                     	;# 
   402  0E1F                     	;# 
   403  0E20                     	;# 
   404  0E21                     	;# 
   405  0E22                     	;# 
   406  0E24                     	;# 
   407  0E25                     	;# 
   408  0E28                     	;# 
   409  0E29                     	;# 
   410  0E2A                     	;# 
   411  0E2B                     	;# 
   412  0E2C                     	;# 
   413  0E2D                     	;# 
   414  0E2E                     	;# 
   415  0E2F                     	;# 
   416  0E90                     	;# 
   417  0E91                     	;# 
   418  0E92                     	;# 
   419  0E94                     	;# 
   420  0E95                     	;# 
   421  0E9C                     	;# 
   422  0E9D                     	;# 
   423  0E9E                     	;# 
   424  0E9F                     	;# 
   425  0EA0                     	;# 
   426  0EA1                     	;# 
   427  0EA2                     	;# 
   428  0EA3                     	;# 
   429  0EA4                     	;# 
   430  0EA5                     	;# 
   431  0EA6                     	;# 
   432  0EA7                     	;# 
   433  0F0F                     	;# 
   434  0F10                     	;# 
   435  0F11                     	;# 
   436  0F12                     	;# 
   437  0F13                     	;# 
   438  0F14                     	;# 
   439  0F15                     	;# 
   440  0F16                     	;# 
   441  0F17                     	;# 
   442  0F18                     	;# 
   443  0F19                     	;# 
   444  0F1A                     	;# 
   445  0F1B                     	;# 
   446  0F1C                     	;# 
   447  0F1D                     	;# 
   448  0F1E                     	;# 
   449  0F1F                     	;# 
   450  0F20                     	;# 
   451  0F21                     	;# 
   452  0F22                     	;# 
   453  0F23                     	;# 
   454  0F24                     	;# 
   455  0F25                     	;# 
   456  0F26                     	;# 
   457  0F27                     	;# 
   458  0F28                     	;# 
   459  0F29                     	;# 
   460  0F2A                     	;# 
   461  0F2B                     	;# 
   462  0F2C                     	;# 
   463  0F2D                     	;# 
   464  0F2E                     	;# 
   465  0F2F                     	;# 
   466  0F30                     	;# 
   467  0F31                     	;# 
   468  0F32                     	;# 
   469  0F33                     	;# 
   470  0F34                     	;# 
   471  0F35                     	;# 
   472  0F36                     	;# 
   473  0F37                     	;# 
   474  0FE4                     	;# 
   475  0FE5                     	;# 
   476  0FE6                     	;# 
   477  0FE7                     	;# 
   478  0FE8                     	;# 
   479  0FE9                     	;# 
   480  0FEA                     	;# 
   481  0FEB                     	;# 
   482  0FED                     	;# 
   483  0FEE                     	;# 
   484  0FEF                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0014                     	;# 
   505  0015                     	;# 
   506  0015                     	;# 
   507  0016                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001D                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  008C                     	;# 
   520  008D                     	;# 
   521  008E                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0097                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548  018E                     	;# 
   549  0197                     	;# 
   550  0199                     	;# 
   551  0199                     	;# 
   552  0199                     	;# 
   553  019A                     	;# 
   554  019A                     	;# 
   555  019A                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019C                     	;# 
   562  019C                     	;# 
   563  019C                     	;# 
   564  019D                     	;# 
   565  019D                     	;# 
   566  019D                     	;# 
   567  019E                     	;# 
   568  019E                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  019F                     	;# 
   572  019F                     	;# 
   573  019F                     	;# 
   574  019F                     	;# 
   575  020C                     	;# 
   576  020D                     	;# 
   577  020E                     	;# 
   578  0211                     	;# 
   579  0211                     	;# 
   580  0212                     	;# 
   581  0212                     	;# 
   582  0213                     	;# 
   583  0213                     	;# 
   584  0214                     	;# 
   585  0214                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0219                     	;# 
   595  021A                     	;# 
   596  021B                     	;# 
   597  021C                     	;# 
   598  021D                     	;# 
   599  021D                     	;# 
   600  021E                     	;# 
   601  021F                     	;# 
   602  028C                     	;# 
   603  028D                     	;# 
   604  028E                     	;# 
   605  0291                     	;# 
   606  0291                     	;# 
   607  0292                     	;# 
   608  0293                     	;# 
   609  0294                     	;# 
   610  0295                     	;# 
   611  0295                     	;# 
   612  0296                     	;# 
   613  0297                     	;# 
   614  0298                     	;# 
   615  029F                     	;# 
   616  030C                     	;# 
   617  030D                     	;# 
   618  030E                     	;# 
   619  0311                     	;# 
   620  0311                     	;# 
   621  0312                     	;# 
   622  0313                     	;# 
   623  0314                     	;# 
   624  0315                     	;# 
   625  0315                     	;# 
   626  0316                     	;# 
   627  0317                     	;# 
   628  0318                     	;# 
   629  038C                     	;# 
   630  038D                     	;# 
   631  038E                     	;# 
   632  0391                     	;# 
   633  0392                     	;# 
   634  0393                     	;# 
   635  0394                     	;# 
   636  0395                     	;# 
   637  0396                     	;# 
   638  0397                     	;# 
   639  0398                     	;# 
   640  0399                     	;# 
   641  039A                     	;# 
   642  039C                     	;# 
   643  039D                     	;# 
   644  039E                     	;# 
   645  039F                     	;# 
   646  0411                     	;# 
   647  0411                     	;# 
   648  0412                     	;# 
   649  0413                     	;# 
   650  0414                     	;# 
   651  0415                     	;# 
   652  0416                     	;# 
   653  0417                     	;# 
   654  0418                     	;# 
   655  0418                     	;# 
   656  0419                     	;# 
   657  041A                     	;# 
   658  041B                     	;# 
   659  041C                     	;# 
   660  041D                     	;# 
   661  041E                     	;# 
   662  041F                     	;# 
   663  0498                     	;# 
   664  0498                     	;# 
   665  0499                     	;# 
   666  049A                     	;# 
   667  049B                     	;# 
   668  049B                     	;# 
   669  049C                     	;# 
   670  049D                     	;# 
   671  049E                     	;# 
   672  049F                     	;# 
   673  0617                     	;# 
   674  0618                     	;# 
   675  0619                     	;# 
   676  0619                     	;# 
   677  061A                     	;# 
   678  061B                     	;# 
   679  061C                     	;# 
   680  061C                     	;# 
   681  061F                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0696                     	;# 
   688  0697                     	;# 
   689  0698                     	;# 
   690  0699                     	;# 
   691  0711                     	;# 
   692  0712                     	;# 
   693  0713                     	;# 
   694  0714                     	;# 
   695  0715                     	;# 
   696  0716                     	;# 
   697  0717                     	;# 
   698  0718                     	;# 
   699  0719                     	;# 
   700  0891                     	;# 
   701  0891                     	;# 
   702  0891                     	;# 
   703  0891                     	;# 
   704  0891                     	;# 
   705  0891                     	;# 
   706  0892                     	;# 
   707  0892                     	;# 
   708  0892                     	;# 
   709  0893                     	;# 
   710  0893                     	;# 
   711  0893                     	;# 
   712  0893                     	;# 
   713  0893                     	;# 
   714  0893                     	;# 
   715  0894                     	;# 
   716  0894                     	;# 
   717  0894                     	;# 
   718  0895                     	;# 
   719  0895                     	;# 
   720  0895                     	;# 
   721  0896                     	;# 
   722  0896                     	;# 
   723  0896                     	;# 
   724  089B                     	;# 
   725  0911                     	;# 
   726  0912                     	;# 
   727  0913                     	;# 
   728  0914                     	;# 
   729  0915                     	;# 
   730  0916                     	;# 
   731  0918                     	;# 
   732  0919                     	;# 
   733  091A                     	;# 
   734  091B                     	;# 
   735  091C                     	;# 
   736  091D                     	;# 
   737  091E                     	;# 
   738  091F                     	;# 
   739  0E0F                     	;# 
   740  0E10                     	;# 
   741  0E11                     	;# 
   742  0E12                     	;# 
   743  0E13                     	;# 
   744  0E14                     	;# 
   745  0E15                     	;# 
   746  0E16                     	;# 
   747  0E17                     	;# 
   748  0E18                     	;# 
   749  0E19                     	;# 
   750  0E1A                     	;# 
   751  0E1B                     	;# 
   752  0E1C                     	;# 
   753  0E1D                     	;# 
   754  0E1E                     	;# 
   755  0E1F                     	;# 
   756  0E20                     	;# 
   757  0E21                     	;# 
   758  0E22                     	;# 
   759  0E24                     	;# 
   760  0E25                     	;# 
   761  0E28                     	;# 
   762  0E29                     	;# 
   763  0E2A                     	;# 
   764  0E2B                     	;# 
   765  0E2C                     	;# 
   766  0E2D                     	;# 
   767  0E2E                     	;# 
   768  0E2F                     	;# 
   769  0E90                     	;# 
   770  0E91                     	;# 
   771  0E92                     	;# 
   772  0E94                     	;# 
   773  0E95                     	;# 
   774  0E9C                     	;# 
   775  0E9D                     	;# 
   776  0E9E                     	;# 
   777  0E9F                     	;# 
   778  0EA0                     	;# 
   779  0EA1                     	;# 
   780  0EA2                     	;# 
   781  0EA3                     	;# 
   782  0EA4                     	;# 
   783  0EA5                     	;# 
   784  0EA6                     	;# 
   785  0EA7                     	;# 
   786  0F0F                     	;# 
   787  0F10                     	;# 
   788  0F11                     	;# 
   789  0F12                     	;# 
   790  0F13                     	;# 
   791  0F14                     	;# 
   792  0F15                     	;# 
   793  0F16                     	;# 
   794  0F17                     	;# 
   795  0F18                     	;# 
   796  0F19                     	;# 
   797  0F1A                     	;# 
   798  0F1B                     	;# 
   799  0F1C                     	;# 
   800  0F1D                     	;# 
   801  0F1E                     	;# 
   802  0F1F                     	;# 
   803  0F20                     	;# 
   804  0F21                     	;# 
   805  0F22                     	;# 
   806  0F23                     	;# 
   807  0F24                     	;# 
   808  0F25                     	;# 
   809  0F26                     	;# 
   810  0F27                     	;# 
   811  0F28                     	;# 
   812  0F29                     	;# 
   813  0F2A                     	;# 
   814  0F2B                     	;# 
   815  0F2C                     	;# 
   816  0F2D                     	;# 
   817  0F2E                     	;# 
   818  0F2F                     	;# 
   819  0F30                     	;# 
   820  0F31                     	;# 
   821  0F32                     	;# 
   822  0F33                     	;# 
   823  0F34                     	;# 
   824  0F35                     	;# 
   825  0F36                     	;# 
   826  0F37                     	;# 
   827  0FE4                     	;# 
   828  0FE5                     	;# 
   829  0FE6                     	;# 
   830  0FE7                     	;# 
   831  0FE8                     	;# 
   832  0FE9                     	;# 
   833  0FEA                     	;# 
   834  0FEB                     	;# 
   835  0FED                     	;# 
   836  0FEE                     	;# 
   837  0FEF                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0008                     	;# 
   847  0009                     	;# 
   848  000A                     	;# 
   849  000B                     	;# 
   850  000C                     	;# 
   851  000D                     	;# 
   852  000E                     	;# 
   853  0010                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0013                     	;# 
   857  0014                     	;# 
   858  0015                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  0019                     	;# 
   866  001A                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  001D                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  008E                     	;# 
   875  0090                     	;# 
   876  0091                     	;# 
   877  0092                     	;# 
   878  0093                     	;# 
   879  0094                     	;# 
   880  0097                     	;# 
   881  009B                     	;# 
   882  009B                     	;# 
   883  009C                     	;# 
   884  009D                     	;# 
   885  009E                     	;# 
   886  009F                     	;# 
   887  010C                     	;# 
   888  010D                     	;# 
   889  010E                     	;# 
   890  0111                     	;# 
   891  0112                     	;# 
   892  0113                     	;# 
   893  0114                     	;# 
   894  0115                     	;# 
   895  0116                     	;# 
   896  0117                     	;# 
   897  0118                     	;# 
   898  0119                     	;# 
   899  018C                     	;# 
   900  018D                     	;# 
   901  018E                     	;# 
   902  0197                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  020C                     	;# 
   929  020D                     	;# 
   930  020E                     	;# 
   931  0211                     	;# 
   932  0211                     	;# 
   933  0212                     	;# 
   934  0212                     	;# 
   935  0213                     	;# 
   936  0213                     	;# 
   937  0214                     	;# 
   938  0214                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0216                     	;# 
   944  0216                     	;# 
   945  0217                     	;# 
   946  0217                     	;# 
   947  0219                     	;# 
   948  021A                     	;# 
   949  021B                     	;# 
   950  021C                     	;# 
   951  021D                     	;# 
   952  021D                     	;# 
   953  021E                     	;# 
   954  021F                     	;# 
   955  028C                     	;# 
   956  028D                     	;# 
   957  028E                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0294                     	;# 
   963  0295                     	;# 
   964  0295                     	;# 
   965  0296                     	;# 
   966  0297                     	;# 
   967  0298                     	;# 
   968  029F                     	;# 
   969  030C                     	;# 
   970  030D                     	;# 
   971  030E                     	;# 
   972  0311                     	;# 
   973  0311                     	;# 
   974  0312                     	;# 
   975  0313                     	;# 
   976  0314                     	;# 
   977  0315                     	;# 
   978  0315                     	;# 
   979  0316                     	;# 
   980  0317                     	;# 
   981  0318                     	;# 
   982  038C                     	;# 
   983  038D                     	;# 
   984  038E                     	;# 
   985  0391                     	;# 
   986  0392                     	;# 
   987  0393                     	;# 
   988  0394                     	;# 
   989  0395                     	;# 
   990  0396                     	;# 
   991  0397                     	;# 
   992  0398                     	;# 
   993  0399                     	;# 
   994  039A                     	;# 
   995  039C                     	;# 
   996  039D                     	;# 
   997  039E                     	;# 
   998  039F                     	;# 
   999  0411                     	;# 
  1000  0411                     	;# 
  1001  0412                     	;# 
  1002  0413                     	;# 
  1003  0414                     	;# 
  1004  0415                     	;# 
  1005  0416                     	;# 
  1006  0417                     	;# 
  1007  0418                     	;# 
  1008  0418                     	;# 
  1009  0419                     	;# 
  1010  041A                     	;# 
  1011  041B                     	;# 
  1012  041C                     	;# 
  1013  041D                     	;# 
  1014  041E                     	;# 
  1015  041F                     	;# 
  1016  0498                     	;# 
  1017  0498                     	;# 
  1018  0499                     	;# 
  1019  049A                     	;# 
  1020  049B                     	;# 
  1021  049B                     	;# 
  1022  049C                     	;# 
  1023  049D                     	;# 
  1024  049E                     	;# 
  1025  049F                     	;# 
  1026  0617                     	;# 
  1027  0618                     	;# 
  1028  0619                     	;# 
  1029  0619                     	;# 
  1030  061A                     	;# 
  1031  061B                     	;# 
  1032  061C                     	;# 
  1033  061C                     	;# 
  1034  061F                     	;# 
  1035  0691                     	;# 
  1036  0692                     	;# 
  1037  0693                     	;# 
  1038  0694                     	;# 
  1039  0695                     	;# 
  1040  0696                     	;# 
  1041  0697                     	;# 
  1042  0698                     	;# 
  1043  0699                     	;# 
  1044  0711                     	;# 
  1045  0712                     	;# 
  1046  0713                     	;# 
  1047  0714                     	;# 
  1048  0715                     	;# 
  1049  0716                     	;# 
  1050  0717                     	;# 
  1051  0718                     	;# 
  1052  0719                     	;# 
  1053  0891                     	;# 
  1054  0891                     	;# 
  1055  0891                     	;# 
  1056  0891                     	;# 
  1057  0891                     	;# 
  1058  0891                     	;# 
  1059  0892                     	;# 
  1060  0892                     	;# 
  1061  0892                     	;# 
  1062  0893                     	;# 
  1063  0893                     	;# 
  1064  0893                     	;# 
  1065  0893                     	;# 
  1066  0893                     	;# 
  1067  0893                     	;# 
  1068  0894                     	;# 
  1069  0894                     	;# 
  1070  0894                     	;# 
  1071  0895                     	;# 
  1072  0895                     	;# 
  1073  0895                     	;# 
  1074  0896                     	;# 
  1075  0896                     	;# 
  1076  0896                     	;# 
  1077  089B                     	;# 
  1078  0911                     	;# 
  1079  0912                     	;# 
  1080  0913                     	;# 
  1081  0914                     	;# 
  1082  0915                     	;# 
  1083  0916                     	;# 
  1084  0918                     	;# 
  1085  0919                     	;# 
  1086  091A                     	;# 
  1087  091B                     	;# 
  1088  091C                     	;# 
  1089  091D                     	;# 
  1090  091E                     	;# 
  1091  091F                     	;# 
  1092  0E0F                     	;# 
  1093  0E10                     	;# 
  1094  0E11                     	;# 
  1095  0E12                     	;# 
  1096  0E13                     	;# 
  1097  0E14                     	;# 
  1098  0E15                     	;# 
  1099  0E16                     	;# 
  1100  0E17                     	;# 
  1101  0E18                     	;# 
  1102  0E19                     	;# 
  1103  0E1A                     	;# 
  1104  0E1B                     	;# 
  1105  0E1C                     	;# 
  1106  0E1D                     	;# 
  1107  0E1E                     	;# 
  1108  0E1F                     	;# 
  1109  0E20                     	;# 
  1110  0E21                     	;# 
  1111  0E22                     	;# 
  1112  0E24                     	;# 
  1113  0E25                     	;# 
  1114  0E28                     	;# 
  1115  0E29                     	;# 
  1116  0E2A                     	;# 
  1117  0E2B                     	;# 
  1118  0E2C                     	;# 
  1119  0E2D                     	;# 
  1120  0E2E                     	;# 
  1121  0E2F                     	;# 
  1122  0E90                     	;# 
  1123  0E91                     	;# 
  1124  0E92                     	;# 
  1125  0E94                     	;# 
  1126  0E95                     	;# 
  1127  0E9C                     	;# 
  1128  0E9D                     	;# 
  1129  0E9E                     	;# 
  1130  0E9F                     	;# 
  1131  0EA0                     	;# 
  1132  0EA1                     	;# 
  1133  0EA2                     	;# 
  1134  0EA3                     	;# 
  1135  0EA4                     	;# 
  1136  0EA5                     	;# 
  1137  0EA6                     	;# 
  1138  0EA7                     	;# 
  1139  0F0F                     	;# 
  1140  0F10                     	;# 
  1141  0F11                     	;# 
  1142  0F12                     	;# 
  1143  0F13                     	;# 
  1144  0F14                     	;# 
  1145  0F15                     	;# 
  1146  0F16                     	;# 
  1147  0F17                     	;# 
  1148  0F18                     	;# 
  1149  0F19                     	;# 
  1150  0F1A                     	;# 
  1151  0F1B                     	;# 
  1152  0F1C                     	;# 
  1153  0F1D                     	;# 
  1154  0F1E                     	;# 
  1155  0F1F                     	;# 
  1156  0F20                     	;# 
  1157  0F21                     	;# 
  1158  0F22                     	;# 
  1159  0F23                     	;# 
  1160  0F24                     	;# 
  1161  0F25                     	;# 
  1162  0F26                     	;# 
  1163  0F27                     	;# 
  1164  0F28                     	;# 
  1165  0F29                     	;# 
  1166  0F2A                     	;# 
  1167  0F2B                     	;# 
  1168  0F2C                     	;# 
  1169  0F2D                     	;# 
  1170  0F2E                     	;# 
  1171  0F2F                     	;# 
  1172  0F30                     	;# 
  1173  0F31                     	;# 
  1174  0F32                     	;# 
  1175  0F33                     	;# 
  1176  0F34                     	;# 
  1177  0F35                     	;# 
  1178  0F36                     	;# 
  1179  0F37                     	;# 
  1180  0FE4                     	;# 
  1181  0FE5                     	;# 
  1182  0FE6                     	;# 
  1183  0FE7                     	;# 
  1184  0FE8                     	;# 
  1185  0FE9                     	;# 
  1186  0FEA                     	;# 
  1187  0FEB                     	;# 
  1188  0FED                     	;# 
  1189  0FEE                     	;# 
  1190  0FEF                     	;# 
  1191  0000                     	;# 
  1192  0001                     	;# 
  1193  0002                     	;# 
  1194  0003                     	;# 
  1195  0004                     	;# 
  1196  0005                     	;# 
  1197  0006                     	;# 
  1198  0007                     	;# 
  1199  0008                     	;# 
  1200  0009                     	;# 
  1201  000A                     	;# 
  1202  000B                     	;# 
  1203  000C                     	;# 
  1204  000D                     	;# 
  1205  000E                     	;# 
  1206  0010                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001B                     	;# 
  1221  001C                     	;# 
  1222  001D                     	;# 
  1223  001E                     	;# 
  1224  001F                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  008E                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0094                     	;# 
  1233  0097                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  009F                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  018C                     	;# 
  1253  018D                     	;# 
  1254  018E                     	;# 
  1255  0197                     	;# 
  1256  0199                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  019A                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019D                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019E                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  020C                     	;# 
  1282  020D                     	;# 
  1283  020E                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0214                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  0219                     	;# 
  1301  021A                     	;# 
  1302  021B                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021D                     	;# 
  1306  021E                     	;# 
  1307  021F                     	;# 
  1308  028C                     	;# 
  1309  028D                     	;# 
  1310  028E                     	;# 
  1311  0291                     	;# 
  1312  0291                     	;# 
  1313  0292                     	;# 
  1314  0293                     	;# 
  1315  0294                     	;# 
  1316  0295                     	;# 
  1317  0295                     	;# 
  1318  0296                     	;# 
  1319  0297                     	;# 
  1320  0298                     	;# 
  1321  029F                     	;# 
  1322  030C                     	;# 
  1323  030D                     	;# 
  1324  030E                     	;# 
  1325  0311                     	;# 
  1326  0311                     	;# 
  1327  0312                     	;# 
  1328  0313                     	;# 
  1329  0314                     	;# 
  1330  0315                     	;# 
  1331  0315                     	;# 
  1332  0316                     	;# 
  1333  0317                     	;# 
  1334  0318                     	;# 
  1335  038C                     	;# 
  1336  038D                     	;# 
  1337  038E                     	;# 
  1338  0391                     	;# 
  1339  0392                     	;# 
  1340  0393                     	;# 
  1341  0394                     	;# 
  1342  0395                     	;# 
  1343  0396                     	;# 
  1344  0397                     	;# 
  1345  0398                     	;# 
  1346  0399                     	;# 
  1347  039A                     	;# 
  1348  039C                     	;# 
  1349  039D                     	;# 
  1350  039E                     	;# 
  1351  039F                     	;# 
  1352  0411                     	;# 
  1353  0411                     	;# 
  1354  0412                     	;# 
  1355  0413                     	;# 
  1356  0414                     	;# 
  1357  0415                     	;# 
  1358  0416                     	;# 
  1359  0417                     	;# 
  1360  0418                     	;# 
  1361  0418                     	;# 
  1362  0419                     	;# 
  1363  041A                     	;# 
  1364  041B                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  041F                     	;# 
  1369  0498                     	;# 
  1370  0498                     	;# 
  1371  0499                     	;# 
  1372  049A                     	;# 
  1373  049B                     	;# 
  1374  049B                     	;# 
  1375  049C                     	;# 
  1376  049D                     	;# 
  1377  049E                     	;# 
  1378  049F                     	;# 
  1379  0617                     	;# 
  1380  0618                     	;# 
  1381  0619                     	;# 
  1382  0619                     	;# 
  1383  061A                     	;# 
  1384  061B                     	;# 
  1385  061C                     	;# 
  1386  061C                     	;# 
  1387  061F                     	;# 
  1388  0691                     	;# 
  1389  0692                     	;# 
  1390  0693                     	;# 
  1391  0694                     	;# 
  1392  0695                     	;# 
  1393  0696                     	;# 
  1394  0697                     	;# 
  1395  0698                     	;# 
  1396  0699                     	;# 
  1397  0711                     	;# 
  1398  0712                     	;# 
  1399  0713                     	;# 
  1400  0714                     	;# 
  1401  0715                     	;# 
  1402  0716                     	;# 
  1403  0717                     	;# 
  1404  0718                     	;# 
  1405  0719                     	;# 
  1406  0891                     	;# 
  1407  0891                     	;# 
  1408  0891                     	;# 
  1409  0891                     	;# 
  1410  0891                     	;# 
  1411  0891                     	;# 
  1412  0892                     	;# 
  1413  0892                     	;# 
  1414  0892                     	;# 
  1415  0893                     	;# 
  1416  0893                     	;# 
  1417  0893                     	;# 
  1418  0893                     	;# 
  1419  0893                     	;# 
  1420  0893                     	;# 
  1421  0894                     	;# 
  1422  0894                     	;# 
  1423  0894                     	;# 
  1424  0895                     	;# 
  1425  0895                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0896                     	;# 
  1429  0896                     	;# 
  1430  089B                     	;# 
  1431  0911                     	;# 
  1432  0912                     	;# 
  1433  0913                     	;# 
  1434  0914                     	;# 
  1435  0915                     	;# 
  1436  0916                     	;# 
  1437  0918                     	;# 
  1438  0919                     	;# 
  1439  091A                     	;# 
  1440  091B                     	;# 
  1441  091C                     	;# 
  1442  091D                     	;# 
  1443  091E                     	;# 
  1444  091F                     	;# 
  1445  0E0F                     	;# 
  1446  0E10                     	;# 
  1447  0E11                     	;# 
  1448  0E12                     	;# 
  1449  0E13                     	;# 
  1450  0E14                     	;# 
  1451  0E15                     	;# 
  1452  0E16                     	;# 
  1453  0E17                     	;# 
  1454  0E18                     	;# 
  1455  0E19                     	;# 
  1456  0E1A                     	;# 
  1457  0E1B                     	;# 
  1458  0E1C                     	;# 
  1459  0E1D                     	;# 
  1460  0E1E                     	;# 
  1461  0E1F                     	;# 
  1462  0E20                     	;# 
  1463  0E21                     	;# 
  1464  0E22                     	;# 
  1465  0E24                     	;# 
  1466  0E25                     	;# 
  1467  0E28                     	;# 
  1468  0E29                     	;# 
  1469  0E2A                     	;# 
  1470  0E2B                     	;# 
  1471  0E2C                     	;# 
  1472  0E2D                     	;# 
  1473  0E2E                     	;# 
  1474  0E2F                     	;# 
  1475  0E90                     	;# 
  1476  0E91                     	;# 
  1477  0E92                     	;# 
  1478  0E94                     	;# 
  1479  0E95                     	;# 
  1480  0E9C                     	;# 
  1481  0E9D                     	;# 
  1482  0E9E                     	;# 
  1483  0E9F                     	;# 
  1484  0EA0                     	;# 
  1485  0EA1                     	;# 
  1486  0EA2                     	;# 
  1487  0EA3                     	;# 
  1488  0EA4                     	;# 
  1489  0EA5                     	;# 
  1490  0EA6                     	;# 
  1491  0EA7                     	;# 
  1492  0F0F                     	;# 
  1493  0F10                     	;# 
  1494  0F11                     	;# 
  1495  0F12                     	;# 
  1496  0F13                     	;# 
  1497  0F14                     	;# 
  1498  0F15                     	;# 
  1499  0F16                     	;# 
  1500  0F17                     	;# 
  1501  0F18                     	;# 
  1502  0F19                     	;# 
  1503  0F1A                     	;# 
  1504  0F1B                     	;# 
  1505  0F1C                     	;# 
  1506  0F1D                     	;# 
  1507  0F1E                     	;# 
  1508  0F1F                     	;# 
  1509  0F20                     	;# 
  1510  0F21                     	;# 
  1511  0F22                     	;# 
  1512  0F23                     	;# 
  1513  0F24                     	;# 
  1514  0F25                     	;# 
  1515  0F26                     	;# 
  1516  0F27                     	;# 
  1517  0F28                     	;# 
  1518  0F29                     	;# 
  1519  0F2A                     	;# 
  1520  0F2B                     	;# 
  1521  0F2C                     	;# 
  1522  0F2D                     	;# 
  1523  0F2E                     	;# 
  1524  0F2F                     	;# 
  1525  0F30                     	;# 
  1526  0F31                     	;# 
  1527  0F32                     	;# 
  1528  0F33                     	;# 
  1529  0F34                     	;# 
  1530  0F35                     	;# 
  1531  0F36                     	;# 
  1532  0F37                     	;# 
  1533  0FE4                     	;# 
  1534  0FE5                     	;# 
  1535  0FE6                     	;# 
  1536  0FE7                     	;# 
  1537  0FE8                     	;# 
  1538  0FE9                     	;# 
  1539  0FEA                     	;# 
  1540  0FEB                     	;# 
  1541  0FED                     	;# 
  1542  0FEE                     	;# 
  1543  0FEF                     	;# 
  1544  0000                     	;# 
  1545  0001                     	;# 
  1546  0002                     	;# 
  1547  0003                     	;# 
  1548  0004                     	;# 
  1549  0005                     	;# 
  1550  0006                     	;# 
  1551  0007                     	;# 
  1552  0008                     	;# 
  1553  0009                     	;# 
  1554  000A                     	;# 
  1555  000B                     	;# 
  1556  000C                     	;# 
  1557  000D                     	;# 
  1558  000E                     	;# 
  1559  0010                     	;# 
  1560  0011                     	;# 
  1561  0012                     	;# 
  1562  0013                     	;# 
  1563  0014                     	;# 
  1564  0015                     	;# 
  1565  0015                     	;# 
  1566  0016                     	;# 
  1567  0016                     	;# 
  1568  0017                     	;# 
  1569  0018                     	;# 
  1570  0019                     	;# 
  1571  0019                     	;# 
  1572  001A                     	;# 
  1573  001B                     	;# 
  1574  001C                     	;# 
  1575  001D                     	;# 
  1576  001E                     	;# 
  1577  001F                     	;# 
  1578  008C                     	;# 
  1579  008D                     	;# 
  1580  008E                     	;# 
  1581  0090                     	;# 
  1582  0091                     	;# 
  1583  0092                     	;# 
  1584  0093                     	;# 
  1585  0094                     	;# 
  1586  0097                     	;# 
  1587  009B                     	;# 
  1588  009B                     	;# 
  1589  009C                     	;# 
  1590  009D                     	;# 
  1591  009E                     	;# 
  1592  009F                     	;# 
  1593  010C                     	;# 
  1594  010D                     	;# 
  1595  010E                     	;# 
  1596  0111                     	;# 
  1597  0112                     	;# 
  1598  0113                     	;# 
  1599  0114                     	;# 
  1600  0115                     	;# 
  1601  0116                     	;# 
  1602  0117                     	;# 
  1603  0118                     	;# 
  1604  0119                     	;# 
  1605  018C                     	;# 
  1606  018D                     	;# 
  1607  018E                     	;# 
  1608  0197                     	;# 
  1609  0199                     	;# 
  1610  0199                     	;# 
  1611  0199                     	;# 
  1612  019A                     	;# 
  1613  019A                     	;# 
  1614  019A                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019B                     	;# 
  1618  019B                     	;# 
  1619  019B                     	;# 
  1620  019C                     	;# 
  1621  019C                     	;# 
  1622  019C                     	;# 
  1623  019D                     	;# 
  1624  019D                     	;# 
  1625  019D                     	;# 
  1626  019E                     	;# 
  1627  019E                     	;# 
  1628  019E                     	;# 
  1629  019F                     	;# 
  1630  019F                     	;# 
  1631  019F                     	;# 
  1632  019F                     	;# 
  1633  019F                     	;# 
  1634  020C                     	;# 
  1635  020D                     	;# 
  1636  020E                     	;# 
  1637  0211                     	;# 
  1638  0211                     	;# 
  1639  0212                     	;# 
  1640  0212                     	;# 
  1641  0213                     	;# 
  1642  0213                     	;# 
  1643  0214                     	;# 
  1644  0214                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0215                     	;# 
  1648  0215                     	;# 
  1649  0216                     	;# 
  1650  0216                     	;# 
  1651  0217                     	;# 
  1652  0217                     	;# 
  1653  0219                     	;# 
  1654  021A                     	;# 
  1655  021B                     	;# 
  1656  021C                     	;# 
  1657  021D                     	;# 
  1658  021D                     	;# 
  1659  021E                     	;# 
  1660  021F                     	;# 
  1661  028C                     	;# 
  1662  028D                     	;# 
  1663  028E                     	;# 
  1664  0291                     	;# 
  1665  0291                     	;# 
  1666  0292                     	;# 
  1667  0293                     	;# 
  1668  0294                     	;# 
  1669  0295                     	;# 
  1670  0295                     	;# 
  1671  0296                     	;# 
  1672  0297                     	;# 
  1673  0298                     	;# 
  1674  029F                     	;# 
  1675  030C                     	;# 
  1676  030D                     	;# 
  1677  030E                     	;# 
  1678  0311                     	;# 
  1679  0311                     	;# 
  1680  0312                     	;# 
  1681  0313                     	;# 
  1682  0314                     	;# 
  1683  0315                     	;# 
  1684  0315                     	;# 
  1685  0316                     	;# 
  1686  0317                     	;# 
  1687  0318                     	;# 
  1688  038C                     	;# 
  1689  038D                     	;# 
  1690  038E                     	;# 
  1691  0391                     	;# 
  1692  0392                     	;# 
  1693  0393                     	;# 
  1694  0394                     	;# 
  1695  0395                     	;# 
  1696  0396                     	;# 
  1697  0397                     	;# 
  1698  0398                     	;# 
  1699  0399                     	;# 
  1700  039A                     	;# 
  1701  039C                     	;# 
  1702  039D                     	;# 
  1703  039E                     	;# 
  1704  039F                     	;# 
  1705  0411                     	;# 
  1706  0411                     	;# 
  1707  0412                     	;# 
  1708  0413                     	;# 
  1709  0414                     	;# 
  1710  0415                     	;# 
  1711  0416                     	;# 
  1712  0417                     	;# 
  1713  0418                     	;# 
  1714  0418                     	;# 
  1715  0419                     	;# 
  1716  041A                     	;# 
  1717  041B                     	;# 
  1718  041C                     	;# 
  1719  041D                     	;# 
  1720  041E                     	;# 
  1721  041F                     	;# 
  1722  0498                     	;# 
  1723  0498                     	;# 
  1724  0499                     	;# 
  1725  049A                     	;# 
  1726  049B                     	;# 
  1727  049B                     	;# 
  1728  049C                     	;# 
  1729  049D                     	;# 
  1730  049E                     	;# 
  1731  049F                     	;# 
  1732  0617                     	;# 
  1733  0618                     	;# 
  1734  0619                     	;# 
  1735  0619                     	;# 
  1736  061A                     	;# 
  1737  061B                     	;# 
  1738  061C                     	;# 
  1739  061C                     	;# 
  1740  061F                     	;# 
  1741  0691                     	;# 
  1742  0692                     	;# 
  1743  0693                     	;# 
  1744  0694                     	;# 
  1745  0695                     	;# 
  1746  0696                     	;# 
  1747  0697                     	;# 
  1748  0698                     	;# 
  1749  0699                     	;# 
  1750  0711                     	;# 
  1751  0712                     	;# 
  1752  0713                     	;# 
  1753  0714                     	;# 
  1754  0715                     	;# 
  1755  0716                     	;# 
  1756  0717                     	;# 
  1757  0718                     	;# 
  1758  0719                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0891                     	;# 
  1763  0891                     	;# 
  1764  0891                     	;# 
  1765  0892                     	;# 
  1766  0892                     	;# 
  1767  0892                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0893                     	;# 
  1772  0893                     	;# 
  1773  0893                     	;# 
  1774  0894                     	;# 
  1775  0894                     	;# 
  1776  0894                     	;# 
  1777  0895                     	;# 
  1778  0895                     	;# 
  1779  0895                     	;# 
  1780  0896                     	;# 
  1781  0896                     	;# 
  1782  0896                     	;# 
  1783  089B                     	;# 
  1784  0911                     	;# 
  1785  0912                     	;# 
  1786  0913                     	;# 
  1787  0914                     	;# 
  1788  0915                     	;# 
  1789  0916                     	;# 
  1790  0918                     	;# 
  1791  0919                     	;# 
  1792  091A                     	;# 
  1793  091B                     	;# 
  1794  091C                     	;# 
  1795  091D                     	;# 
  1796  091E                     	;# 
  1797  091F                     	;# 
  1798  0E0F                     	;# 
  1799  0E10                     	;# 
  1800  0E11                     	;# 
  1801  0E12                     	;# 
  1802  0E13                     	;# 
  1803  0E14                     	;# 
  1804  0E15                     	;# 
  1805  0E16                     	;# 
  1806  0E17                     	;# 
  1807  0E18                     	;# 
  1808  0E19                     	;# 
  1809  0E1A                     	;# 
  1810  0E1B                     	;# 
  1811  0E1C                     	;# 
  1812  0E1D                     	;# 
  1813  0E1E                     	;# 
  1814  0E1F                     	;# 
  1815  0E20                     	;# 
  1816  0E21                     	;# 
  1817  0E22                     	;# 
  1818  0E24                     	;# 
  1819  0E25                     	;# 
  1820  0E28                     	;# 
  1821  0E29                     	;# 
  1822  0E2A                     	;# 
  1823  0E2B                     	;# 
  1824  0E2C                     	;# 
  1825  0E2D                     	;# 
  1826  0E2E                     	;# 
  1827  0E2F                     	;# 
  1828  0E90                     	;# 
  1829  0E91                     	;# 
  1830  0E92                     	;# 
  1831  0E94                     	;# 
  1832  0E95                     	;# 
  1833  0E9C                     	;# 
  1834  0E9D                     	;# 
  1835  0E9E                     	;# 
  1836  0E9F                     	;# 
  1837  0EA0                     	;# 
  1838  0EA1                     	;# 
  1839  0EA2                     	;# 
  1840  0EA3                     	;# 
  1841  0EA4                     	;# 
  1842  0EA5                     	;# 
  1843  0EA6                     	;# 
  1844  0EA7                     	;# 
  1845  0F0F                     	;# 
  1846  0F10                     	;# 
  1847  0F11                     	;# 
  1848  0F12                     	;# 
  1849  0F13                     	;# 
  1850  0F14                     	;# 
  1851  0F15                     	;# 
  1852  0F16                     	;# 
  1853  0F17                     	;# 
  1854  0F18                     	;# 
  1855  0F19                     	;# 
  1856  0F1A                     	;# 
  1857  0F1B                     	;# 
  1858  0F1C                     	;# 
  1859  0F1D                     	;# 
  1860  0F1E                     	;# 
  1861  0F1F                     	;# 
  1862  0F20                     	;# 
  1863  0F21                     	;# 
  1864  0F22                     	;# 
  1865  0F23                     	;# 
  1866  0F24                     	;# 
  1867  0F25                     	;# 
  1868  0F26                     	;# 
  1869  0F27                     	;# 
  1870  0F28                     	;# 
  1871  0F29                     	;# 
  1872  0F2A                     	;# 
  1873  0F2B                     	;# 
  1874  0F2C                     	;# 
  1875  0F2D                     	;# 
  1876  0F2E                     	;# 
  1877  0F2F                     	;# 
  1878  0F30                     	;# 
  1879  0F31                     	;# 
  1880  0F32                     	;# 
  1881  0F33                     	;# 
  1882  0F34                     	;# 
  1883  0F35                     	;# 
  1884  0F36                     	;# 
  1885  0F37                     	;# 
  1886  0FE4                     	;# 
  1887  0FE5                     	;# 
  1888  0FE6                     	;# 
  1889  0FE7                     	;# 
  1890  0FE8                     	;# 
  1891  0FE9                     	;# 
  1892  0FEA                     	;# 
  1893  0FEB                     	;# 
  1894  0FED                     	;# 
  1895  0FEE                     	;# 
  1896  0FEF                     	;# 
  1897  0000                     	;# 
  1898  0001                     	;# 
  1899  0002                     	;# 
  1900  0003                     	;# 
  1901  0004                     	;# 
  1902  0005                     	;# 
  1903  0006                     	;# 
  1904  0007                     	;# 
  1905  0008                     	;# 
  1906  0009                     	;# 
  1907  000A                     	;# 
  1908  000B                     	;# 
  1909  000C                     	;# 
  1910  000D                     	;# 
  1911  000E                     	;# 
  1912  0010                     	;# 
  1913  0011                     	;# 
  1914  0012                     	;# 
  1915  0013                     	;# 
  1916  0014                     	;# 
  1917  0015                     	;# 
  1918  0015                     	;# 
  1919  0016                     	;# 
  1920  0016                     	;# 
  1921  0017                     	;# 
  1922  0018                     	;# 
  1923  0019                     	;# 
  1924  0019                     	;# 
  1925  001A                     	;# 
  1926  001B                     	;# 
  1927  001C                     	;# 
  1928  001D                     	;# 
  1929  001E                     	;# 
  1930  001F                     	;# 
  1931  008C                     	;# 
  1932  008D                     	;# 
  1933  008E                     	;# 
  1934  0090                     	;# 
  1935  0091                     	;# 
  1936  0092                     	;# 
  1937  0093                     	;# 
  1938  0094                     	;# 
  1939  0097                     	;# 
  1940  009B                     	;# 
  1941  009B                     	;# 
  1942  009C                     	;# 
  1943  009D                     	;# 
  1944  009E                     	;# 
  1945  009F                     	;# 
  1946  010C                     	;# 
  1947  010D                     	;# 
  1948  010E                     	;# 
  1949  0111                     	;# 
  1950  0112                     	;# 
  1951  0113                     	;# 
  1952  0114                     	;# 
  1953  0115                     	;# 
  1954  0116                     	;# 
  1955  0117                     	;# 
  1956  0118                     	;# 
  1957  0119                     	;# 
  1958  018C                     	;# 
  1959  018D                     	;# 
  1960  018E                     	;# 
  1961  0197                     	;# 
  1962  0199                     	;# 
  1963  0199                     	;# 
  1964  0199                     	;# 
  1965  019A                     	;# 
  1966  019A                     	;# 
  1967  019A                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019C                     	;# 
  1974  019C                     	;# 
  1975  019C                     	;# 
  1976  019D                     	;# 
  1977  019D                     	;# 
  1978  019D                     	;# 
  1979  019E                     	;# 
  1980  019E                     	;# 
  1981  019E                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  019F                     	;# 
  1987  020C                     	;# 
  1988  020D                     	;# 
  1989  020E                     	;# 
  1990  0211                     	;# 
  1991  0211                     	;# 
  1992  0212                     	;# 
  1993  0212                     	;# 
  1994  0213                     	;# 
  1995  0213                     	;# 
  1996  0214                     	;# 
  1997  0214                     	;# 
  1998  0215                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0216                     	;# 
  2003  0216                     	;# 
  2004  0217                     	;# 
  2005  0217                     	;# 
  2006  0219                     	;# 
  2007  021A                     	;# 
  2008  021B                     	;# 
  2009  021C                     	;# 
  2010  021D                     	;# 
  2011  021D                     	;# 
  2012  021E                     	;# 
  2013  021F                     	;# 
  2014  028C                     	;# 
  2015  028D                     	;# 
  2016  028E                     	;# 
  2017  0291                     	;# 
  2018  0291                     	;# 
  2019  0292                     	;# 
  2020  0293                     	;# 
  2021  0294                     	;# 
  2022  0295                     	;# 
  2023  0295                     	;# 
  2024  0296                     	;# 
  2025  0297                     	;# 
  2026  0298                     	;# 
  2027  029F                     	;# 
  2028  030C                     	;# 
  2029  030D                     	;# 
  2030  030E                     	;# 
  2031  0311                     	;# 
  2032  0311                     	;# 
  2033  0312                     	;# 
  2034  0313                     	;# 
  2035  0314                     	;# 
  2036  0315                     	;# 
  2037  0315                     	;# 
  2038  0316                     	;# 
  2039  0317                     	;# 
  2040  0318                     	;# 
  2041  038C                     	;# 
  2042  038D                     	;# 
  2043  038E                     	;# 
  2044  0391                     	;# 
  2045  0392                     	;# 
  2046  0393                     	;# 
  2047  0394                     	;# 
  2048  0395                     	;# 
  2049  0396                     	;# 
  2050  0397                     	;# 
  2051  0398                     	;# 
  2052  0399                     	;# 
  2053  039A                     	;# 
  2054  039C                     	;# 
  2055  039D                     	;# 
  2056  039E                     	;# 
  2057  039F                     	;# 
  2058  0411                     	;# 
  2059  0411                     	;# 
  2060  0412                     	;# 
  2061  0413                     	;# 
  2062  0414                     	;# 
  2063  0415                     	;# 
  2064  0416                     	;# 
  2065  0417                     	;# 
  2066  0418                     	;# 
  2067  0418                     	;# 
  2068  0419                     	;# 
  2069  041A                     	;# 
  2070  041B                     	;# 
  2071  041C                     	;# 
  2072  041D                     	;# 
  2073  041E                     	;# 
  2074  041F                     	;# 
  2075  0498                     	;# 
  2076  0498                     	;# 
  2077  0499                     	;# 
  2078  049A                     	;# 
  2079  049B                     	;# 
  2080  049B                     	;# 
  2081  049C                     	;# 
  2082  049D                     	;# 
  2083  049E                     	;# 
  2084  049F                     	;# 
  2085  0617                     	;# 
  2086  0618                     	;# 
  2087  0619                     	;# 
  2088  0619                     	;# 
  2089  061A                     	;# 
  2090  061B                     	;# 
  2091  061C                     	;# 
  2092  061C                     	;# 
  2093  061F                     	;# 
  2094  0691                     	;# 
  2095  0692                     	;# 
  2096  0693                     	;# 
  2097  0694                     	;# 
  2098  0695                     	;# 
  2099  0696                     	;# 
  2100  0697                     	;# 
  2101  0698                     	;# 
  2102  0699                     	;# 
  2103  0711                     	;# 
  2104  0712                     	;# 
  2105  0713                     	;# 
  2106  0714                     	;# 
  2107  0715                     	;# 
  2108  0716                     	;# 
  2109  0717                     	;# 
  2110  0718                     	;# 
  2111  0719                     	;# 
  2112  0891                     	;# 
  2113  0891                     	;# 
  2114  0891                     	;# 
  2115  0891                     	;# 
  2116  0891                     	;# 
  2117  0891                     	;# 
  2118  0892                     	;# 
  2119  0892                     	;# 
  2120  0892                     	;# 
  2121  0893                     	;# 
  2122  0893                     	;# 
  2123  0893                     	;# 
  2124  0893                     	;# 
  2125  0893                     	;# 
  2126  0893                     	;# 
  2127  0894                     	;# 
  2128  0894                     	;# 
  2129  0894                     	;# 
  2130  0895                     	;# 
  2131  0895                     	;# 
  2132  0895                     	;# 
  2133  0896                     	;# 
  2134  0896                     	;# 
  2135  0896                     	;# 
  2136  089B                     	;# 
  2137  0911                     	;# 
  2138  0912                     	;# 
  2139  0913                     	;# 
  2140  0914                     	;# 
  2141  0915                     	;# 
  2142  0916                     	;# 
  2143  0918                     	;# 
  2144  0919                     	;# 
  2145  091A                     	;# 
  2146  091B                     	;# 
  2147  091C                     	;# 
  2148  091D                     	;# 
  2149  091E                     	;# 
  2150  091F                     	;# 
  2151  0E0F                     	;# 
  2152  0E10                     	;# 
  2153  0E11                     	;# 
  2154  0E12                     	;# 
  2155  0E13                     	;# 
  2156  0E14                     	;# 
  2157  0E15                     	;# 
  2158  0E16                     	;# 
  2159  0E17                     	;# 
  2160  0E18                     	;# 
  2161  0E19                     	;# 
  2162  0E1A                     	;# 
  2163  0E1B                     	;# 
  2164  0E1C                     	;# 
  2165  0E1D                     	;# 
  2166  0E1E                     	;# 
  2167  0E1F                     	;# 
  2168  0E20                     	;# 
  2169  0E21                     	;# 
  2170  0E22                     	;# 
  2171  0E24                     	;# 
  2172  0E25                     	;# 
  2173  0E28                     	;# 
  2174  0E29                     	;# 
  2175  0E2A                     	;# 
  2176  0E2B                     	;# 
  2177  0E2C                     	;# 
  2178  0E2D                     	;# 
  2179  0E2E                     	;# 
  2180  0E2F                     	;# 
  2181  0E90                     	;# 
  2182  0E91                     	;# 
  2183  0E92                     	;# 
  2184  0E94                     	;# 
  2185  0E95                     	;# 
  2186  0E9C                     	;# 
  2187  0E9D                     	;# 
  2188  0E9E                     	;# 
  2189  0E9F                     	;# 
  2190  0EA0                     	;# 
  2191  0EA1                     	;# 
  2192  0EA2                     	;# 
  2193  0EA3                     	;# 
  2194  0EA4                     	;# 
  2195  0EA5                     	;# 
  2196  0EA6                     	;# 
  2197  0EA7                     	;# 
  2198  0F0F                     	;# 
  2199  0F10                     	;# 
  2200  0F11                     	;# 
  2201  0F12                     	;# 
  2202  0F13                     	;# 
  2203  0F14                     	;# 
  2204  0F15                     	;# 
  2205  0F16                     	;# 
  2206  0F17                     	;# 
  2207  0F18                     	;# 
  2208  0F19                     	;# 
  2209  0F1A                     	;# 
  2210  0F1B                     	;# 
  2211  0F1C                     	;# 
  2212  0F1D                     	;# 
  2213  0F1E                     	;# 
  2214  0F1F                     	;# 
  2215  0F20                     	;# 
  2216  0F21                     	;# 
  2217  0F22                     	;# 
  2218  0F23                     	;# 
  2219  0F24                     	;# 
  2220  0F25                     	;# 
  2221  0F26                     	;# 
  2222  0F27                     	;# 
  2223  0F28                     	;# 
  2224  0F29                     	;# 
  2225  0F2A                     	;# 
  2226  0F2B                     	;# 
  2227  0F2C                     	;# 
  2228  0F2D                     	;# 
  2229  0F2E                     	;# 
  2230  0F2F                     	;# 
  2231  0F30                     	;# 
  2232  0F31                     	;# 
  2233  0F32                     	;# 
  2234  0F33                     	;# 
  2235  0F34                     	;# 
  2236  0F35                     	;# 
  2237  0F36                     	;# 
  2238  0F37                     	;# 
  2239  0FE4                     	;# 
  2240  0FE5                     	;# 
  2241  0FE6                     	;# 
  2242  0FE7                     	;# 
  2243  0FE8                     	;# 
  2244  0FE9                     	;# 
  2245  0FEA                     	;# 
  2246  0FEB                     	;# 
  2247  0FED                     	;# 
  2248  0FEE                     	;# 
  2249  0FEF                     	;# 
  2250  0000                     	;# 
  2251  0001                     	;# 
  2252  0002                     	;# 
  2253  0003                     	;# 
  2254  0004                     	;# 
  2255  0005                     	;# 
  2256  0006                     	;# 
  2257  0007                     	;# 
  2258  0008                     	;# 
  2259  0009                     	;# 
  2260  000A                     	;# 
  2261  000B                     	;# 
  2262  000C                     	;# 
  2263  000D                     	;# 
  2264  000E                     	;# 
  2265  0010                     	;# 
  2266  0011                     	;# 
  2267  0012                     	;# 
  2268  0013                     	;# 
  2269  0014                     	;# 
  2270  0015                     	;# 
  2271  0015                     	;# 
  2272  0016                     	;# 
  2273  0016                     	;# 
  2274  0017                     	;# 
  2275  0018                     	;# 
  2276  0019                     	;# 
  2277  0019                     	;# 
  2278  001A                     	;# 
  2279  001B                     	;# 
  2280  001C                     	;# 
  2281  001D                     	;# 
  2282  001E                     	;# 
  2283  001F                     	;# 
  2284  008C                     	;# 
  2285  008D                     	;# 
  2286  008E                     	;# 
  2287  0090                     	;# 
  2288  0091                     	;# 
  2289  0092                     	;# 
  2290  0093                     	;# 
  2291  0094                     	;# 
  2292  0097                     	;# 
  2293  009B                     	;# 
  2294  009B                     	;# 
  2295  009C                     	;# 
  2296  009D                     	;# 
  2297  009E                     	;# 
  2298  009F                     	;# 
  2299  010C                     	;# 
  2300  010D                     	;# 
  2301  010E                     	;# 
  2302  0111                     	;# 
  2303  0112                     	;# 
  2304  0113                     	;# 
  2305  0114                     	;# 
  2306  0115                     	;# 
  2307  0116                     	;# 
  2308  0117                     	;# 
  2309  0118                     	;# 
  2310  0119                     	;# 
  2311  018C                     	;# 
  2312  018D                     	;# 
  2313  018E                     	;# 
  2314  0197                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  0199                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019A                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019B                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019C                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019D                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019E                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  019F                     	;# 
  2340  020C                     	;# 
  2341  020D                     	;# 
  2342  020E                     	;# 
  2343  0211                     	;# 
  2344  0211                     	;# 
  2345  0212                     	;# 
  2346  0212                     	;# 
  2347  0213                     	;# 
  2348  0213                     	;# 
  2349  0214                     	;# 
  2350  0214                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0215                     	;# 
  2355  0216                     	;# 
  2356  0216                     	;# 
  2357  0217                     	;# 
  2358  0217                     	;# 
  2359  0219                     	;# 
  2360  021A                     	;# 
  2361  021B                     	;# 
  2362  021C                     	;# 
  2363  021D                     	;# 
  2364  021D                     	;# 
  2365  021E                     	;# 
  2366  021F                     	;# 
  2367  028C                     	;# 
  2368  028D                     	;# 
  2369  028E                     	;# 
  2370  0291                     	;# 
  2371  0291                     	;# 
  2372  0292                     	;# 
  2373  0293                     	;# 
  2374  0294                     	;# 
  2375  0295                     	;# 
  2376  0295                     	;# 
  2377  0296                     	;# 
  2378  0297                     	;# 
  2379  0298                     	;# 
  2380  029F                     	;# 
  2381  030C                     	;# 
  2382  030D                     	;# 
  2383  030E                     	;# 
  2384  0311                     	;# 
  2385  0311                     	;# 
  2386  0312                     	;# 
  2387  0313                     	;# 
  2388  0314                     	;# 
  2389  0315                     	;# 
  2390  0315                     	;# 
  2391  0316                     	;# 
  2392  0317                     	;# 
  2393  0318                     	;# 
  2394  038C                     	;# 
  2395  038D                     	;# 
  2396  038E                     	;# 
  2397  0391                     	;# 
  2398  0392                     	;# 
  2399  0393                     	;# 
  2400  0394                     	;# 
  2401  0395                     	;# 
  2402  0396                     	;# 
  2403  0397                     	;# 
  2404  0398                     	;# 
  2405  0399                     	;# 
  2406  039A                     	;# 
  2407  039C                     	;# 
  2408  039D                     	;# 
  2409  039E                     	;# 
  2410  039F                     	;# 
  2411  0411                     	;# 
  2412  0411                     	;# 
  2413  0412                     	;# 
  2414  0413                     	;# 
  2415  0414                     	;# 
  2416  0415                     	;# 
  2417  0416                     	;# 
  2418  0417                     	;# 
  2419  0418                     	;# 
  2420  0418                     	;# 
  2421  0419                     	;# 
  2422  041A                     	;# 
  2423  041B                     	;# 
  2424  041C                     	;# 
  2425  041D                     	;# 
  2426  041E                     	;# 
  2427  041F                     	;# 
  2428  0498                     	;# 
  2429  0498                     	;# 
  2430  0499                     	;# 
  2431  049A                     	;# 
  2432  049B                     	;# 
  2433  049B                     	;# 
  2434  049C                     	;# 
  2435  049D                     	;# 
  2436  049E                     	;# 
  2437  049F                     	;# 
  2438  0617                     	;# 
  2439  0618                     	;# 
  2440  0619                     	;# 
  2441  0619                     	;# 
  2442  061A                     	;# 
  2443  061B                     	;# 
  2444  061C                     	;# 
  2445  061C                     	;# 
  2446  061F                     	;# 
  2447  0691                     	;# 
  2448  0692                     	;# 
  2449  0693                     	;# 
  2450  0694                     	;# 
  2451  0695                     	;# 
  2452  0696                     	;# 
  2453  0697                     	;# 
  2454  0698                     	;# 
  2455  0699                     	;# 
  2456  0711                     	;# 
  2457  0712                     	;# 
  2458  0713                     	;# 
  2459  0714                     	;# 
  2460  0715                     	;# 
  2461  0716                     	;# 
  2462  0717                     	;# 
  2463  0718                     	;# 
  2464  0719                     	;# 
  2465  0891                     	;# 
  2466  0891                     	;# 
  2467  0891                     	;# 
  2468  0891                     	;# 
  2469  0891                     	;# 
  2470  0891                     	;# 
  2471  0892                     	;# 
  2472  0892                     	;# 
  2473  0892                     	;# 
  2474  0893                     	;# 
  2475  0893                     	;# 
  2476  0893                     	;# 
  2477  0893                     	;# 
  2478  0893                     	;# 
  2479  0893                     	;# 
  2480  0894                     	;# 
  2481  0894                     	;# 
  2482  0894                     	;# 
  2483  0895                     	;# 
  2484  0895                     	;# 
  2485  0895                     	;# 
  2486  0896                     	;# 
  2487  0896                     	;# 
  2488  0896                     	;# 
  2489  089B                     	;# 
  2490  0911                     	;# 
  2491  0912                     	;# 
  2492  0913                     	;# 
  2493  0914                     	;# 
  2494  0915                     	;# 
  2495  0916                     	;# 
  2496  0918                     	;# 
  2497  0919                     	;# 
  2498  091A                     	;# 
  2499  091B                     	;# 
  2500  091C                     	;# 
  2501  091D                     	;# 
  2502  091E                     	;# 
  2503  091F                     	;# 
  2504  0E0F                     	;# 
  2505  0E10                     	;# 
  2506  0E11                     	;# 
  2507  0E12                     	;# 
  2508  0E13                     	;# 
  2509  0E14                     	;# 
  2510  0E15                     	;# 
  2511  0E16                     	;# 
  2512  0E17                     	;# 
  2513  0E18                     	;# 
  2514  0E19                     	;# 
  2515  0E1A                     	;# 
  2516  0E1B                     	;# 
  2517  0E1C                     	;# 
  2518  0E1D                     	;# 
  2519  0E1E                     	;# 
  2520  0E1F                     	;# 
  2521  0E20                     	;# 
  2522  0E21                     	;# 
  2523  0E22                     	;# 
  2524  0E24                     	;# 
  2525  0E25                     	;# 
  2526  0E28                     	;# 
  2527  0E29                     	;# 
  2528  0E2A                     	;# 
  2529  0E2B                     	;# 
  2530  0E2C                     	;# 
  2531  0E2D                     	;# 
  2532  0E2E                     	;# 
  2533  0E2F                     	;# 
  2534  0E90                     	;# 
  2535  0E91                     	;# 
  2536  0E92                     	;# 
  2537  0E94                     	;# 
  2538  0E95                     	;# 
  2539  0E9C                     	;# 
  2540  0E9D                     	;# 
  2541  0E9E                     	;# 
  2542  0E9F                     	;# 
  2543  0EA0                     	;# 
  2544  0EA1                     	;# 
  2545  0EA2                     	;# 
  2546  0EA3                     	;# 
  2547  0EA4                     	;# 
  2548  0EA5                     	;# 
  2549  0EA6                     	;# 
  2550  0EA7                     	;# 
  2551  0F0F                     	;# 
  2552  0F10                     	;# 
  2553  0F11                     	;# 
  2554  0F12                     	;# 
  2555  0F13                     	;# 
  2556  0F14                     	;# 
  2557  0F15                     	;# 
  2558  0F16                     	;# 
  2559  0F17                     	;# 
  2560  0F18                     	;# 
  2561  0F19                     	;# 
  2562  0F1A                     	;# 
  2563  0F1B                     	;# 
  2564  0F1C                     	;# 
  2565  0F1D                     	;# 
  2566  0F1E                     	;# 
  2567  0F1F                     	;# 
  2568  0F20                     	;# 
  2569  0F21                     	;# 
  2570  0F22                     	;# 
  2571  0F23                     	;# 
  2572  0F24                     	;# 
  2573  0F25                     	;# 
  2574  0F26                     	;# 
  2575  0F27                     	;# 
  2576  0F28                     	;# 
  2577  0F29                     	;# 
  2578  0F2A                     	;# 
  2579  0F2B                     	;# 
  2580  0F2C                     	;# 
  2581  0F2D                     	;# 
  2582  0F2E                     	;# 
  2583  0F2F                     	;# 
  2584  0F30                     	;# 
  2585  0F31                     	;# 
  2586  0F32                     	;# 
  2587  0F33                     	;# 
  2588  0F34                     	;# 
  2589  0F35                     	;# 
  2590  0F36                     	;# 
  2591  0F37                     	;# 
  2592  0FE4                     	;# 
  2593  0FE5                     	;# 
  2594  0FE6                     	;# 
  2595  0FE7                     	;# 
  2596  0FE8                     	;# 
  2597  0FE9                     	;# 
  2598  0FEA                     	;# 
  2599  0FEB                     	;# 
  2600  0FED                     	;# 
  2601  0FEE                     	;# 
  2602  0FEF                     	;# 
  2603  0000                     	;# 
  2604  0001                     	;# 
  2605  0002                     	;# 
  2606  0003                     	;# 
  2607  0004                     	;# 
  2608  0005                     	;# 
  2609  0006                     	;# 
  2610  0007                     	;# 
  2611  0008                     	;# 
  2612  0009                     	;# 
  2613  000A                     	;# 
  2614  000B                     	;# 
  2615  000C                     	;# 
  2616  000D                     	;# 
  2617  000E                     	;# 
  2618  0010                     	;# 
  2619  0011                     	;# 
  2620  0012                     	;# 
  2621  0013                     	;# 
  2622  0014                     	;# 
  2623  0015                     	;# 
  2624  0015                     	;# 
  2625  0016                     	;# 
  2626  0016                     	;# 
  2627  0017                     	;# 
  2628  0018                     	;# 
  2629  0019                     	;# 
  2630  0019                     	;# 
  2631  001A                     	;# 
  2632  001B                     	;# 
  2633  001C                     	;# 
  2634  001D                     	;# 
  2635  001E                     	;# 
  2636  001F                     	;# 
  2637  008C                     	;# 
  2638  008D                     	;# 
  2639  008E                     	;# 
  2640  0090                     	;# 
  2641  0091                     	;# 
  2642  0092                     	;# 
  2643  0093                     	;# 
  2644  0094                     	;# 
  2645  0097                     	;# 
  2646  009B                     	;# 
  2647  009B                     	;# 
  2648  009C                     	;# 
  2649  009D                     	;# 
  2650  009E                     	;# 
  2651  009F                     	;# 
  2652  010C                     	;# 
  2653  010D                     	;# 
  2654  010E                     	;# 
  2655  0111                     	;# 
  2656  0112                     	;# 
  2657  0113                     	;# 
  2658  0114                     	;# 
  2659  0115                     	;# 
  2660  0116                     	;# 
  2661  0117                     	;# 
  2662  0118                     	;# 
  2663  0119                     	;# 
  2664  018C                     	;# 
  2665  018D                     	;# 
  2666  018E                     	;# 
  2667  0197                     	;# 
  2668  0199                     	;# 
  2669  0199                     	;# 
  2670  0199                     	;# 
  2671  019A                     	;# 
  2672  019A                     	;# 
  2673  019A                     	;# 
  2674  019B                     	;# 
  2675  019B                     	;# 
  2676  019B                     	;# 
  2677  019B                     	;# 
  2678  019B                     	;# 
  2679  019C                     	;# 
  2680  019C                     	;# 
  2681  019C                     	;# 
  2682  019D                     	;# 
  2683  019D                     	;# 
  2684  019D                     	;# 
  2685  019E                     	;# 
  2686  019E                     	;# 
  2687  019E                     	;# 
  2688  019F                     	;# 
  2689  019F                     	;# 
  2690  019F                     	;# 
  2691  019F                     	;# 
  2692  019F                     	;# 
  2693  020C                     	;# 
  2694  020D                     	;# 
  2695  020E                     	;# 
  2696  0211                     	;# 
  2697  0211                     	;# 
  2698  0212                     	;# 
  2699  0212                     	;# 
  2700  0213                     	;# 
  2701  0213                     	;# 
  2702  0214                     	;# 
  2703  0214                     	;# 
  2704  0215                     	;# 
  2705  0215                     	;# 
  2706  0215                     	;# 
  2707  0215                     	;# 
  2708  0216                     	;# 
  2709  0216                     	;# 
  2710  0217                     	;# 
  2711  0217                     	;# 
  2712  0219                     	;# 
  2713  021A                     	;# 
  2714  021B                     	;# 
  2715  021C                     	;# 
  2716  021D                     	;# 
  2717  021D                     	;# 
  2718  021E                     	;# 
  2719  021F                     	;# 
  2720  028C                     	;# 
  2721  028D                     	;# 
  2722  028E                     	;# 
  2723  0291                     	;# 
  2724  0291                     	;# 
  2725  0292                     	;# 
  2726  0293                     	;# 
  2727  0294                     	;# 
  2728  0295                     	;# 
  2729  0295                     	;# 
  2730  0296                     	;# 
  2731  0297                     	;# 
  2732  0298                     	;# 
  2733  029F                     	;# 
  2734  030C                     	;# 
  2735  030D                     	;# 
  2736  030E                     	;# 
  2737  0311                     	;# 
  2738  0311                     	;# 
  2739  0312                     	;# 
  2740  0313                     	;# 
  2741  0314                     	;# 
  2742  0315                     	;# 
  2743  0315                     	;# 
  2744  0316                     	;# 
  2745  0317                     	;# 
  2746  0318                     	;# 
  2747  038C                     	;# 
  2748  038D                     	;# 
  2749  038E                     	;# 
  2750  0391                     	;# 
  2751  0392                     	;# 
  2752  0393                     	;# 
  2753  0394                     	;# 
  2754  0395                     	;# 
  2755  0396                     	;# 
  2756  0397                     	;# 
  2757  0398                     	;# 
  2758  0399                     	;# 
  2759  039A                     	;# 
  2760  039C                     	;# 
  2761  039D                     	;# 
  2762  039E                     	;# 
  2763  039F                     	;# 
  2764  0411                     	;# 
  2765  0411                     	;# 
  2766  0412                     	;# 
  2767  0413                     	;# 
  2768  0414                     	;# 
  2769  0415                     	;# 
  2770  0416                     	;# 
  2771  0417                     	;# 
  2772  0418                     	;# 
  2773  0418                     	;# 
  2774  0419                     	;# 
  2775  041A                     	;# 
  2776  041B                     	;# 
  2777  041C                     	;# 
  2778  041D                     	;# 
  2779  041E                     	;# 
  2780  041F                     	;# 
  2781  0498                     	;# 
  2782  0498                     	;# 
  2783  0499                     	;# 
  2784  049A                     	;# 
  2785  049B                     	;# 
  2786  049B                     	;# 
  2787  049C                     	;# 
  2788  049D                     	;# 
  2789  049E                     	;# 
  2790  049F                     	;# 
  2791  0617                     	;# 
  2792  0618                     	;# 
  2793  0619                     	;# 
  2794  0619                     	;# 
  2795  061A                     	;# 
  2796  061B                     	;# 
  2797  061C                     	;# 
  2798  061C                     	;# 
  2799  061F                     	;# 
  2800  0691                     	;# 
  2801  0692                     	;# 
  2802  0693                     	;# 
  2803  0694                     	;# 
  2804  0695                     	;# 
  2805  0696                     	;# 
  2806  0697                     	;# 
  2807  0698                     	;# 
  2808  0699                     	;# 
  2809  0711                     	;# 
  2810  0712                     	;# 
  2811  0713                     	;# 
  2812  0714                     	;# 
  2813  0715                     	;# 
  2814  0716                     	;# 
  2815  0717                     	;# 
  2816  0718                     	;# 
  2817  0719                     	;# 
  2818  0891                     	;# 
  2819  0891                     	;# 
  2820  0891                     	;# 
  2821  0891                     	;# 
  2822  0891                     	;# 
  2823  0891                     	;# 
  2824  0892                     	;# 
  2825  0892                     	;# 
  2826  0892                     	;# 
  2827  0893                     	;# 
  2828  0893                     	;# 
  2829  0893                     	;# 
  2830  0893                     	;# 
  2831  0893                     	;# 
  2832  0893                     	;# 
  2833  0894                     	;# 
  2834  0894                     	;# 
  2835  0894                     	;# 
  2836  0895                     	;# 
  2837  0895                     	;# 
  2838  0895                     	;# 
  2839  0896                     	;# 
  2840  0896                     	;# 
  2841  0896                     	;# 
  2842  089B                     	;# 
  2843  0911                     	;# 
  2844  0912                     	;# 
  2845  0913                     	;# 
  2846  0914                     	;# 
  2847  0915                     	;# 
  2848  0916                     	;# 
  2849  0918                     	;# 
  2850  0919                     	;# 
  2851  091A                     	;# 
  2852  091B                     	;# 
  2853  091C                     	;# 
  2854  091D                     	;# 
  2855  091E                     	;# 
  2856  091F                     	;# 
  2857  0E0F                     	;# 
  2858  0E10                     	;# 
  2859  0E11                     	;# 
  2860  0E12                     	;# 
  2861  0E13                     	;# 
  2862  0E14                     	;# 
  2863  0E15                     	;# 
  2864  0E16                     	;# 
  2865  0E17                     	;# 
  2866  0E18                     	;# 
  2867  0E19                     	;# 
  2868  0E1A                     	;# 
  2869  0E1B                     	;# 
  2870  0E1C                     	;# 
  2871  0E1D                     	;# 
  2872  0E1E                     	;# 
  2873  0E1F                     	;# 
  2874  0E20                     	;# 
  2875  0E21                     	;# 
  2876  0E22                     	;# 
  2877  0E24                     	;# 
  2878  0E25                     	;# 
  2879  0E28                     	;# 
  2880  0E29                     	;# 
  2881  0E2A                     	;# 
  2882  0E2B                     	;# 
  2883  0E2C                     	;# 
  2884  0E2D                     	;# 
  2885  0E2E                     	;# 
  2886  0E2F                     	;# 
  2887  0E90                     	;# 
  2888  0E91                     	;# 
  2889  0E92                     	;# 
  2890  0E94                     	;# 
  2891  0E95                     	;# 
  2892  0E9C                     	;# 
  2893  0E9D                     	;# 
  2894  0E9E                     	;# 
  2895  0E9F                     	;# 
  2896  0EA0                     	;# 
  2897  0EA1                     	;# 
  2898  0EA2                     	;# 
  2899  0EA3                     	;# 
  2900  0EA4                     	;# 
  2901  0EA5                     	;# 
  2902  0EA6                     	;# 
  2903  0EA7                     	;# 
  2904  0F0F                     	;# 
  2905  0F10                     	;# 
  2906  0F11                     	;# 
  2907  0F12                     	;# 
  2908  0F13                     	;# 
  2909  0F14                     	;# 
  2910  0F15                     	;# 
  2911  0F16                     	;# 
  2912  0F17                     	;# 
  2913  0F18                     	;# 
  2914  0F19                     	;# 
  2915  0F1A                     	;# 
  2916  0F1B                     	;# 
  2917  0F1C                     	;# 
  2918  0F1D                     	;# 
  2919  0F1E                     	;# 
  2920  0F1F                     	;# 
  2921  0F20                     	;# 
  2922  0F21                     	;# 
  2923  0F22                     	;# 
  2924  0F23                     	;# 
  2925  0F24                     	;# 
  2926  0F25                     	;# 
  2927  0F26                     	;# 
  2928  0F27                     	;# 
  2929  0F28                     	;# 
  2930  0F29                     	;# 
  2931  0F2A                     	;# 
  2932  0F2B                     	;# 
  2933  0F2C                     	;# 
  2934  0F2D                     	;# 
  2935  0F2E                     	;# 
  2936  0F2F                     	;# 
  2937  0F30                     	;# 
  2938  0F31                     	;# 
  2939  0F32                     	;# 
  2940  0F33                     	;# 
  2941  0F34                     	;# 
  2942  0F35                     	;# 
  2943  0F36                     	;# 
  2944  0F37                     	;# 
  2945  0FE4                     	;# 
  2946  0FE5                     	;# 
  2947  0FE6                     	;# 
  2948  0FE7                     	;# 
  2949  0FE8                     	;# 
  2950  0FE9                     	;# 
  2951  0FEA                     	;# 
  2952  0FEB                     	;# 
  2953  0FED                     	;# 
  2954  0FEE                     	;# 
  2955  0FEF                     	;# 
  2956  0000                     	;# 
  2957  0001                     	;# 
  2958  0002                     	;# 
  2959  0003                     	;# 
  2960  0004                     	;# 
  2961  0005                     	;# 
  2962  0006                     	;# 
  2963  0007                     	;# 
  2964  0008                     	;# 
  2965  0009                     	;# 
  2966  000A                     	;# 
  2967  000B                     	;# 
  2968  000C                     	;# 
  2969  000D                     	;# 
  2970  000E                     	;# 
  2971  0010                     	;# 
  2972  0011                     	;# 
  2973  0012                     	;# 
  2974  0013                     	;# 
  2975  0014                     	;# 
  2976  0015                     	;# 
  2977  0015                     	;# 
  2978  0016                     	;# 
  2979  0016                     	;# 
  2980  0017                     	;# 
  2981  0018                     	;# 
  2982  0019                     	;# 
  2983  0019                     	;# 
  2984  001A                     	;# 
  2985  001B                     	;# 
  2986  001C                     	;# 
  2987  001D                     	;# 
  2988  001E                     	;# 
  2989  001F                     	;# 
  2990  008C                     	;# 
  2991  008D                     	;# 
  2992  008E                     	;# 
  2993  0090                     	;# 
  2994  0091                     	;# 
  2995  0092                     	;# 
  2996  0093                     	;# 
  2997  0094                     	;# 
  2998  0097                     	;# 
  2999  009B                     	;# 
  3000  009B                     	;# 
  3001  009C                     	;# 
  3002  009D                     	;# 
  3003  009E                     	;# 
  3004  009F                     	;# 
  3005  010C                     	;# 
  3006  010D                     	;# 
  3007  010E                     	;# 
  3008  0111                     	;# 
  3009  0112                     	;# 
  3010  0113                     	;# 
  3011  0114                     	;# 
  3012  0115                     	;# 
  3013  0116                     	;# 
  3014  0117                     	;# 
  3015  0118                     	;# 
  3016  0119                     	;# 
  3017  018C                     	;# 
  3018  018D                     	;# 
  3019  018E                     	;# 
  3020  0197                     	;# 
  3021  0199                     	;# 
  3022  0199                     	;# 
  3023  0199                     	;# 
  3024  019A                     	;# 
  3025  019A                     	;# 
  3026  019A                     	;# 
  3027  019B                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019B                     	;# 
  3032  019C                     	;# 
  3033  019C                     	;# 
  3034  019C                     	;# 
  3035  019D                     	;# 
  3036  019D                     	;# 
  3037  019D                     	;# 
  3038  019E                     	;# 
  3039  019E                     	;# 
  3040  019E                     	;# 
  3041  019F                     	;# 
  3042  019F                     	;# 
  3043  019F                     	;# 
  3044  019F                     	;# 
  3045  019F                     	;# 
  3046  020C                     	;# 
  3047  020D                     	;# 
  3048  020E                     	;# 
  3049  0211                     	;# 
  3050  0211                     	;# 
  3051  0212                     	;# 
  3052  0212                     	;# 
  3053  0213                     	;# 
  3054  0213                     	;# 
  3055  0214                     	;# 
  3056  0214                     	;# 
  3057  0215                     	;# 
  3058  0215                     	;# 
  3059  0215                     	;# 
  3060  0215                     	;# 
  3061  0216                     	;# 
  3062  0216                     	;# 
  3063  0217                     	;# 
  3064  0217                     	;# 
  3065  0219                     	;# 
  3066  021A                     	;# 
  3067  021B                     	;# 
  3068  021C                     	;# 
  3069  021D                     	;# 
  3070  021D                     	;# 
  3071  021E                     	;# 
  3072  021F                     	;# 
  3073  028C                     	;# 
  3074  028D                     	;# 
  3075  028E                     	;# 
  3076  0291                     	;# 
  3077  0291                     	;# 
  3078  0292                     	;# 
  3079  0293                     	;# 
  3080  0294                     	;# 
  3081  0295                     	;# 
  3082  0295                     	;# 
  3083  0296                     	;# 
  3084  0297                     	;# 
  3085  0298                     	;# 
  3086  029F                     	;# 
  3087  030C                     	;# 
  3088  030D                     	;# 
  3089  030E                     	;# 
  3090  0311                     	;# 
  3091  0311                     	;# 
  3092  0312                     	;# 
  3093  0313                     	;# 
  3094  0314                     	;# 
  3095  0315                     	;# 
  3096  0315                     	;# 
  3097  0316                     	;# 
  3098  0317                     	;# 
  3099  0318                     	;# 
  3100  038C                     	;# 
  3101  038D                     	;# 
  3102  038E                     	;# 
  3103  0391                     	;# 
  3104  0392                     	;# 
  3105  0393                     	;# 
  3106  0394                     	;# 
  3107  0395                     	;# 
  3108  0396                     	;# 
  3109  0397                     	;# 
  3110  0398                     	;# 
  3111  0399                     	;# 
  3112  039A                     	;# 
  3113  039C                     	;# 
  3114  039D                     	;# 
  3115  039E                     	;# 
  3116  039F                     	;# 
  3117  0411                     	;# 
  3118  0411                     	;# 
  3119  0412                     	;# 
  3120  0413                     	;# 
  3121  0414                     	;# 
  3122  0415                     	;# 
  3123  0416                     	;# 
  3124  0417                     	;# 
  3125  0418                     	;# 
  3126  0418                     	;# 
  3127  0419                     	;# 
  3128  041A                     	;# 
  3129  041B                     	;# 
  3130  041C                     	;# 
  3131  041D                     	;# 
  3132  041E                     	;# 
  3133  041F                     	;# 
  3134  0498                     	;# 
  3135  0498                     	;# 
  3136  0499                     	;# 
  3137  049A                     	;# 
  3138  049B                     	;# 
  3139  049B                     	;# 
  3140  049C                     	;# 
  3141  049D                     	;# 
  3142  049E                     	;# 
  3143  049F                     	;# 
  3144  0617                     	;# 
  3145  0618                     	;# 
  3146  0619                     	;# 
  3147  0619                     	;# 
  3148  061A                     	;# 
  3149  061B                     	;# 
  3150  061C                     	;# 
  3151  061C                     	;# 
  3152  061F                     	;# 
  3153  0691                     	;# 
  3154  0692                     	;# 
  3155  0693                     	;# 
  3156  0694                     	;# 
  3157  0695                     	;# 
  3158  0696                     	;# 
  3159  0697                     	;# 
  3160  0698                     	;# 
  3161  0699                     	;# 
  3162  0711                     	;# 
  3163  0712                     	;# 
  3164  0713                     	;# 
  3165  0714                     	;# 
  3166  0715                     	;# 
  3167  0716                     	;# 
  3168  0717                     	;# 
  3169  0718                     	;# 
  3170  0719                     	;# 
  3171  0891                     	;# 
  3172  0891                     	;# 
  3173  0891                     	;# 
  3174  0891                     	;# 
  3175  0891                     	;# 
  3176  0891                     	;# 
  3177  0892                     	;# 
  3178  0892                     	;# 
  3179  0892                     	;# 
  3180  0893                     	;# 
  3181  0893                     	;# 
  3182  0893                     	;# 
  3183  0893                     	;# 
  3184  0893                     	;# 
  3185  0893                     	;# 
  3186  0894                     	;# 
  3187  0894                     	;# 
  3188  0894                     	;# 
  3189  0895                     	;# 
  3190  0895                     	;# 
  3191  0895                     	;# 
  3192  0896                     	;# 
  3193  0896                     	;# 
  3194  0896                     	;# 
  3195  089B                     	;# 
  3196  0911                     	;# 
  3197  0912                     	;# 
  3198  0913                     	;# 
  3199  0914                     	;# 
  3200  0915                     	;# 
  3201  0916                     	;# 
  3202  0918                     	;# 
  3203  0919                     	;# 
  3204  091A                     	;# 
  3205  091B                     	;# 
  3206  091C                     	;# 
  3207  091D                     	;# 
  3208  091E                     	;# 
  3209  091F                     	;# 
  3210  0E0F                     	;# 
  3211  0E10                     	;# 
  3212  0E11                     	;# 
  3213  0E12                     	;# 
  3214  0E13                     	;# 
  3215  0E14                     	;# 
  3216  0E15                     	;# 
  3217  0E16                     	;# 
  3218  0E17                     	;# 
  3219  0E18                     	;# 
  3220  0E19                     	;# 
  3221  0E1A                     	;# 
  3222  0E1B                     	;# 
  3223  0E1C                     	;# 
  3224  0E1D                     	;# 
  3225  0E1E                     	;# 
  3226  0E1F                     	;# 
  3227  0E20                     	;# 
  3228  0E21                     	;# 
  3229  0E22                     	;# 
  3230  0E24                     	;# 
  3231  0E25                     	;# 
  3232  0E28                     	;# 
  3233  0E29                     	;# 
  3234  0E2A                     	;# 
  3235  0E2B                     	;# 
  3236  0E2C                     	;# 
  3237  0E2D                     	;# 
  3238  0E2E                     	;# 
  3239  0E2F                     	;# 
  3240  0E90                     	;# 
  3241  0E91                     	;# 
  3242  0E92                     	;# 
  3243  0E94                     	;# 
  3244  0E95                     	;# 
  3245  0E9C                     	;# 
  3246  0E9D                     	;# 
  3247  0E9E                     	;# 
  3248  0E9F                     	;# 
  3249  0EA0                     	;# 
  3250  0EA1                     	;# 
  3251  0EA2                     	;# 
  3252  0EA3                     	;# 
  3253  0EA4                     	;# 
  3254  0EA5                     	;# 
  3255  0EA6                     	;# 
  3256  0EA7                     	;# 
  3257  0F0F                     	;# 
  3258  0F10                     	;# 
  3259  0F11                     	;# 
  3260  0F12                     	;# 
  3261  0F13                     	;# 
  3262  0F14                     	;# 
  3263  0F15                     	;# 
  3264  0F16                     	;# 
  3265  0F17                     	;# 
  3266  0F18                     	;# 
  3267  0F19                     	;# 
  3268  0F1A                     	;# 
  3269  0F1B                     	;# 
  3270  0F1C                     	;# 
  3271  0F1D                     	;# 
  3272  0F1E                     	;# 
  3273  0F1F                     	;# 
  3274  0F20                     	;# 
  3275  0F21                     	;# 
  3276  0F22                     	;# 
  3277  0F23                     	;# 
  3278  0F24                     	;# 
  3279  0F25                     	;# 
  3280  0F26                     	;# 
  3281  0F27                     	;# 
  3282  0F28                     	;# 
  3283  0F29                     	;# 
  3284  0F2A                     	;# 
  3285  0F2B                     	;# 
  3286  0F2C                     	;# 
  3287  0F2D                     	;# 
  3288  0F2E                     	;# 
  3289  0F2F                     	;# 
  3290  0F30                     	;# 
  3291  0F31                     	;# 
  3292  0F32                     	;# 
  3293  0F33                     	;# 
  3294  0F34                     	;# 
  3295  0F35                     	;# 
  3296  0F36                     	;# 
  3297  0F37                     	;# 
  3298  0FE4                     	;# 
  3299  0FE5                     	;# 
  3300  0FE6                     	;# 
  3301  0FE7                     	;# 
  3302  0FE8                     	;# 
  3303  0FE9                     	;# 
  3304  0FEA                     	;# 
  3305  0FEB                     	;# 
  3306  0FED                     	;# 
  3307  0FEE                     	;# 
  3308  0FEF                     	;# 
  3309                           
  3310                           	psect	stringtext1
  3311  0563                     __pstringtext1:	
  3312  0563                     _fsmStateTable:	
  3313  0563  34E5               	retlw	low _do_I2C_IDLE
  3314  0564  3406               	retlw	high _do_I2C_IDLE
  3315  0565  34A2               	retlw	low _do_I2C_SEND_ADR_READ
  3316  0566  3406               	retlw	high _do_I2C_SEND_ADR_READ
  3317  0567  34B9               	retlw	low _do_I2C_SEND_ADR_WRITE
  3318  0568  3406               	retlw	high _do_I2C_SEND_ADR_WRITE
  3319  0569  340F               	retlw	low _do_I2C_TX
  3320  056A  3402               	retlw	high _do_I2C_TX
  3321  056B  345C               	retlw	low _do_I2C_RX
  3322  056C  3402               	retlw	high _do_I2C_RX
  3323  056D  34D9               	retlw	low _do_I2C_RCEN
  3324  056E  3406               	retlw	high _do_I2C_RCEN
  3325  056F  34A6               	retlw	low _do_I2C_TX_EMPTY
  3326  0570  3403               	retlw	high _do_I2C_TX_EMPTY
  3327  0571  340F               	retlw	low _do_I2C_SEND_RESTART_READ
  3328  0572  3407               	retlw	high _do_I2C_SEND_RESTART_READ
  3329  0573  340B               	retlw	low _do_I2C_SEND_RESTART_WRITE
  3330  0574  3407               	retlw	high _do_I2C_SEND_RESTART_WRITE
  3331  0575  3407               	retlw	low _do_I2C_SEND_RESTART
  3332  0576  3407               	retlw	high _do_I2C_SEND_RESTART
  3333  0577  3403               	retlw	low _do_I2C_SEND_STOP
  3334  0578  3407               	retlw	high _do_I2C_SEND_STOP
  3335  0579  34FF               	retlw	low _do_I2C_DO_ACK
  3336  057A  3406               	retlw	high _do_I2C_DO_ACK
  3337  057B  34FB               	retlw	low _do_I2C_DO_NACK_STOP
  3338  057C  3406               	retlw	high _do_I2C_DO_NACK_STOP
  3339  057D  34F7               	retlw	low _do_I2C_DO_NACK_RESTART
  3340  057E  3406               	retlw	high _do_I2C_DO_NACK_RESTART
  3341  057F  34C0               	retlw	low _do_I2C_RESET
  3342  0580  3406               	retlw	high _do_I2C_RESET
  3343  0581  3401               	retlw	low _do_I2C_DO_ADDRESS_NACK
  3344  0582  3404               	retlw	high _do_I2C_DO_ADDRESS_NACK
  3345  0583                     __end_of_fsmStateTable:	
  3346                           
  3347                           	psect	nvBANK0
  3348  0060                     __pnvBANK0:	
  3349  0060                     _IOCCF1_InterruptHandler:	
  3350  0060                     	ds	2
  3351  0011                     _PIR1bits	set	17
  3352  000B                     _INTCONbits	set	11
  3353  0010                     _PIR0bits	set	16
  3354  008E                     _TRISC	set	142
  3355  008D                     _TRISB	set	141
  3356  008C                     _TRISA	set	140
  3357  0097                     _WDTCON	set	151
  3358  0091                     _PIE1bits	set	145
  3359  0090                     _PIE0bits	set	144
  3360  010E                     _LATCbits	set	270
  3361  010C                     _LATAbits	set	268
  3362  010E                     _LATC	set	270
  3363  010D                     _LATB	set	269
  3364  010C                     _LATA	set	268
  3365  018C                     _ANSELA	set	396
  3366  018D                     _ANSELB	set	397
  3367  018E                     _ANSELC	set	398
  3368  0214                     _SSP1STATbits	set	532
  3369  0213                     _SSP1MSK	set	531
  3370  0211                     _SSP1BUF	set	529
  3371  0216                     _SSP1CON2bits	set	534
  3372  0212                     _SSP1ADD	set	530
  3373  0216                     _SSP1CON2	set	534
  3374  0215                     _SSP1CON1	set	533
  3375  0214                     _SSP1STAT	set	532
  3376  0215                     _SSP1CON1bits	set	533
  3377  020E                     _WPUC	set	526
  3378  020C                     _WPUA	set	524
  3379  020D                     _WPUB	set	525
  3380  028E                     _ODCONC	set	654
  3381  028D                     _ODCONB	set	653
  3382  028C                     _ODCONA	set	652
  3383  030E                     _SLRCONC	set	782
  3384  030D                     _SLRCONB	set	781
  3385  030C                     _SLRCONA	set	780
  3386  0397                     _IOCCPbits	set	919
  3387  0398                     _IOCCNbits	set	920
  3388  0399                     _IOCCFbits	set	921
  3389  0916                     _PMD5	set	2326
  3390  0915                     _PMD4	set	2325
  3391  0914                     _PMD3	set	2324
  3392  0913                     _PMD2	set	2323
  3393  0912                     _PMD1	set	2322
  3394  0911                     _PMD0	set	2321
  3395  091E                     _OSCTUNE	set	2334
  3396  091F                     _OSCFRQ	set	2335
  3397  091D                     _OSCEN	set	2333
  3398  091B                     _OSCCON3	set	2331
  3399  0919                     _OSCCON1	set	2329
  3400  0E21                     _SSP1DATPPS	set	3617
  3401  0E20                     _SSP1CLKPPS	set	3616
  3402  0E9D                     _RB5PPS	set	3741
  3403  0E9F                     _RB7PPS	set	3743
  3404                           
  3405                           ; #config settings
  3406  0000                     
  3407                           	psect	cinit
  3408  002D                     start_initialization:	
  3409  002D                     __initialization:	
  3410                           
  3411                           ; Clear objects allocated to COMMON
  3412  002D  01F0               	clrf	__pbssCOMMON& (0+127)
  3413  002E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3414  002F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3415  0030  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3416  0031  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3417  0032  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3418                           
  3419                           ; Clear objects allocated to BANK0
  3420  0033  3020               	movlw	low __pbssBANK0
  3421  0034  0084               	movwf	4
  3422  0035  3000               	movlw	high __pbssBANK0
  3423  0036  0085               	movwf	5
  3424  0037  302D               	movlw	45
  3425  0038  3186  26C7  3180   	fcall	clear_ram0
  3426                           
  3427                           ; Clear objects allocated to BANK1
  3428  003B  30A0               	movlw	low __pbssBANK1
  3429  003C  0084               	movwf	4
  3430  003D  3000               	movlw	high __pbssBANK1
  3431  003E  0085               	movwf	5
  3432  003F  3044               	movlw	68
  3433  0040  3186  26C7         	fcall	clear_ram0
  3434  0042                     end_of_initialization:	
  3435                           ;End of C runtime variable initialization code
  3436                           
  3437  0042                     __end_of__initialization:	
  3438  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3439  0043  0020               	movlb	0
  3440  0044  3182  2ADC         	ljmp	_main	;jump to C main() function
  3441                           
  3442                           	psect	bssCOMMON
  3443  0070                     __pbssCOMMON:	
  3444  0070                     _gesture_ud_count_:	
  3445  0070                     	ds	2
  3446  0072                     _gesture_lr_delta_:	
  3447  0072                     	ds	2
  3448  0074                     _gesture_ud_delta_:	
  3449  0074                     	ds	2
  3450                           
  3451                           	psect	bssBANK0
  3452  0020                     __pbssBANK0:	
  3453  0020                     _i2c_status:	
  3454  0020                     	ds	29
  3455  003D                     _gesture_motion_:	
  3456  003D                     	ds	2
  3457  003F                     _gesture_state_:	
  3458  003F                     	ds	2
  3459  0041                     _gesture_far_count_:	
  3460  0041                     	ds	2
  3461  0043                     _gesture_near_count_:	
  3462  0043                     	ds	2
  3463  0045                     _gesture_lr_count_:	
  3464  0045                     	ds	2
  3465  0047                     _i2c1_driver_i2cISR:	
  3466  0047                     	ds	2
  3467  0049                     _i2c1_driver_busCollisionISR:	
  3468  0049                     	ds	2
  3469  004B                     _b_i2c_error_flag:	
  3470  004B                     	ds	1
  3471  004C                     _handleGestureFlag:	
  3472  004C                     	ds	1
  3473                           
  3474                           	psect	bssBANK1
  3475  00A0                     __pbssBANK1:	
  3476  00A0                     _gesture_data_:	
  3477  00A0                     	ds	68
  3478                           
  3479                           	psect	clrtext
  3480  06C7                     clear_ram0:	
  3481                           ;	Called with FSR0 containing the base address, and
  3482                           ;	WREG with the size to clear
  3483                           
  3484  06C7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3485  06C8                     clrloop0:	
  3486  06C8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3487  06C9  3101               	addfsr 0,1
  3488  06CA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3489  06CB  2EC8               	goto	clrloop0	;have we reached the end yet?
  3490  06CC  3400               	retlw	0	;all done for this memory range, return
  3491                           
  3492                           	psect	cstackCOMMON
  3493  0076                     __pcstackCOMMON:	
  3494  0076                     ?_i2c1_driver_open:	
  3495  0076                     ?_i2c1_driver_isNACK:	
  3496                           ; 1 bit 
  3497                           
  3498  0076                     ?_i2c1_driver_isBufferFull:	
  3499                           ; 1 bit 
  3500                           
  3501  0076                     ?_returnStop:	
  3502                           ; 1 bit 
  3503                           
  3504  0076                     ?_returnReset:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0076                     ?_mssp1_clearIRQ:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0076                     ??_mssp1_clearIRQ:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0076                     ?_i2c_busCollisionISR:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0076                     ??_i2c_busCollisionISR:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0076                     ?_i2c_ISR:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0076                     ?_i2c1_driver_start:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0076                     ?_i2c1_driver_resetBus:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0076                     ??_i2c1_driver_resetBus:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0076                     ?_i2c1_driver_restart:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  0076                     ?_i2c1_driver_stop:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  0076                     ?_i2c1_driver_TXData:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540  0076                     ?_i2c1_driver_startRX:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0076                     ?_i2c1_driver_sendACK:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0076                     ??_i2c1_driver_sendACK:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0076                     ?_i2c1_driver_sendNACK:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0076                     ??_i2c1_driver_isNACK:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0076                     ?_i2c1_driver_getRXData:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0076                     ?_mssp1_setIRQ:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0076                     ??_mssp1_setIRQ:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0076                     ?_i2c1_driver_clearBusCollision:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0076                     ??_i2c1_driver_clearBusCollision:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0076                     ?_PIN_MANAGER_IOC:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0076                     ??_PIN_MANAGER_IOC:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0076                     ?_PMD_Initialize:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0076                     ?_PIN_MANAGER_Initialize:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0076                     ?_OSCILLATOR_Initialize:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0076                     ?_WDT_Initialize:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0076                     ?_IOCCF1_DefaultInterruptHandler:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0076                     ??_IOCCF1_DefaultInterruptHandler:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0076                     ?_IOCCF1_ISR:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0076                     ??_IOCCF1_ISR:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0076                     ?_initialize:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0076                     ?_enableGestureSensor:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0076                     ?_isGestureAvailable:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0076                     ?_wireReadDataByte:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0076                     ?_setLEDDrive:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0076                     ?_setProximityGain:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0076                     ?_setAmbientLightGain:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0076                     ?_setProxIntLowThresh:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0076                     ?_setProxIntHighThresh:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0076                     ?_setGestureEnterThresh:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0076                     ?_setGestureExitThresh:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0076                     ?_setGestureGain:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0076                     ?_setGestureLEDDrive:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0076                     ?_setGestureWaitTime:	
  3640                           ; 1 bytes @ 0x0
  3641                           
  3642  0076                     ?_setGestureIntEnable:	
  3643                           ; 1 bytes @ 0x0
  3644                           
  3645  0076                     ?_getMode:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648  0076                     ?_resetGestureParameters:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651  0076                     ?_setLEDBoost:	
  3652                           ; 1 bytes @ 0x0
  3653                           
  3654  0076                     ?_setGestureMode:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657  0076                     ?_enablePower:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0076                     ?_I2C_Start:	
  3661                           ; 1 bytes @ 0x0
  3662                           
  3663  0076                     ?_I2C_Write_Byte:	
  3664                           ; 1 bytes @ 0x0
  3665                           
  3666  0076                     ?_I2C_ReStart:	
  3667                           ; 1 bytes @ 0x0
  3668                           
  3669  0076                     ?_I2C_Read_Byte:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672  0076                     ?_I2C_Send_NACK:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675  0076                     ?_I2C_Stop:	
  3676                           ; 1 bytes @ 0x0
  3677                           
  3678  0076                     ?_do_I2C_RESET:	
  3679                           ; 1 bytes @ 0x0
  3680                           
  3681  0076                     ??_do_I2C_RESET:	
  3682                           ; 1 bytes @ 0x0
  3683                           
  3684  0076                     ?_do_I2C_IDLE:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687  0076                     ??_do_I2C_IDLE:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690  0076                     ?_do_I2C_SEND_RESTART_READ:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693  0076                     ??_do_I2C_SEND_RESTART_READ:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696  0076                     ?_do_I2C_SEND_RESTART_WRITE:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699  0076                     ??_do_I2C_SEND_RESTART_WRITE:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702  0076                     ?_do_I2C_SEND_RESTART:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705  0076                     ??_do_I2C_SEND_RESTART:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708  0076                     ?_do_I2C_SEND_STOP:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711  0076                     ??_do_I2C_SEND_STOP:	
  3712                           ; 1 bytes @ 0x0
  3713                           
  3714  0076                     ?_do_I2C_SEND_ADR_READ:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0076                     ??_do_I2C_SEND_ADR_READ:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0076                     ?_do_I2C_SEND_ADR_WRITE:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0076                     ??_do_I2C_SEND_ADR_WRITE:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0076                     ?_do_I2C_RCEN:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0076                     ??_do_I2C_RCEN:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0076                     ?_do_I2C_DO_ACK:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0076                     ??_do_I2C_DO_ACK:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0076                     ?_do_I2C_DO_NACK_STOP:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0076                     ??_do_I2C_DO_NACK_STOP:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0076                     ?_do_I2C_DO_NACK_RESTART:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0076                     ??_do_I2C_DO_NACK_RESTART:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0076                     ?_do_I2C_DO_ADDRESS_NACK:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0076                     ??_do_I2C_DO_ADDRESS_NACK:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0076                     ?_do_I2C_TX:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0076                     ??_do_I2C_TX:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0076                     ?_do_I2C_RX:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0076                     ??_do_I2C_RX:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0076                     ?_do_I2C_TX_EMPTY:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0076                     ??_do_I2C_TX_EMPTY:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0076                     ?_INTERRUPT_InterruptManager:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0076                     ?_SYSTEM_Initialize:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0076                     ?_GestureInterruptHandler:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0076                     ??_GestureInterruptHandler:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0076                     ?_main:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0076                     ?i1_i2c1_driver_restart:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0076                     ??i1_i2c1_driver_restart:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0076                     ?i1_i2c1_driver_stop:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0076                     ??i1_i2c1_driver_stop:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0076                     ?i1_i2c1_driver_startRX:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0076                     ??i1_i2c1_driver_startRX:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0076                     ?i1_i2c1_driver_getRXData:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0076                     ??i1_i2c1_driver_getRXData:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0076                     ?i1_i2c1_driver_TXData:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0076                     ??i1_i2c1_driver_TXData:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0076                     ?i1_i2c1_driver_sendNACK:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0076                     ??i1_i2c1_driver_sendNACK:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0076                     returnStop@p:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0076                     returnReset@p:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0076                     i1i2c1_driver_TXData@d:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834                           
  3835                           ; 1 bytes @ 0x0
  3836  0076                     	ds	1
  3837  0077                     ??_returnStop:	
  3838  0077                     ??_returnReset:	
  3839                           ; 1 bytes @ 0x1
  3840                           
  3841                           
  3842                           ; 1 bytes @ 0x1
  3843  0077                     	ds	2
  3844  0079                     ??_i2c_ISR:	
  3845                           
  3846                           ; 1 bytes @ 0x3
  3847  0079                     	ds	3
  3848  007C                     ??_INTERRUPT_InterruptManager:	
  3849                           
  3850                           	psect	cstackBANK0
  3851  004D                     __pcstackBANK0:	
  3852                           ; 1 bytes @ 0x6
  3853                           
  3854  004D                     ??_i2c1_driver_open:	
  3855  004D                     ??_i2c1_driver_start:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  004D                     ??_i2c1_driver_restart:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  004D                     ??_i2c1_driver_stop:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  004D                     ??_i2c1_driver_TXData:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  004D                     ??_i2c1_driver_startRX:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  004D                     ??_i2c1_driver_sendNACK:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  004D                     ??_i2c1_driver_getRXData:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  004D                     ??_PMD_Initialize:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  004D                     ??_OSCILLATOR_Initialize:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  004D                     ??_WDT_Initialize:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  004D                     ?_IOCCF1_SetInterruptHandler:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  004D                     ??_resetGestureParameters:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  004D                     ??_I2C_Start:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  004D                     ??_I2C_ReStart:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  004D                     ??_I2C_Send_NACK:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  004D                     ??_I2C_Stop:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  004D                     ??_i2c1_driver_isBufferFull:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  004D                     i2c1_driver_TXData@d:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  004D                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912                           
  3913                           ; 2 bytes @ 0x0
  3914  004D                     	ds	1
  3915  004E                     ??_I2C_Write_Byte:	
  3916  004E                     ??_I2C_Read_Byte:	
  3917                           ; 1 bytes @ 0x1
  3918                           
  3919                           
  3920                           ; 1 bytes @ 0x1
  3921  004E                     	ds	1
  3922  004F                     ??_PIN_MANAGER_Initialize:	
  3923  004F                     ??_IOCCF1_SetInterruptHandler:	
  3924                           ; 1 bytes @ 0x2
  3925                           
  3926  004F                     ??_SYSTEM_Initialize:	
  3927                           ; 1 bytes @ 0x2
  3928                           
  3929                           
  3930                           ; 1 bytes @ 0x2
  3931  004F                     	ds	1
  3932  0050                     I2C_Write_Byte@Byte:	
  3933                           
  3934                           ; 1 bytes @ 0x3
  3935  0050                     	ds	1
  3936  0051                     I2C_Write_Byte@count:	
  3937                           
  3938                           ; 2 bytes @ 0x4
  3939  0051                     	ds	2
  3940  0053                     ??_wireReadDataByte:	
  3941  0053                     ?_wireWriteDataByte:	
  3942                           ; 1 bytes @ 0x6
  3943                           
  3944  0053                     wireWriteDataByte@val:	
  3945                           ; 2 bytes @ 0x6
  3946                           
  3947                           
  3948                           ; 1 bytes @ 0x6
  3949  0053                     	ds	1
  3950  0054                     wireReadDataByte@reg:	
  3951                           
  3952                           ; 1 bytes @ 0x7
  3953  0054                     	ds	1
  3954  0055                     wireReadDataByte@val:	
  3955                           
  3956                           ; 1 bytes @ 0x8
  3957  0055                     	ds	1
  3958  0056                     ??_isGestureAvailable:	
  3959  0056                     ??_wireWriteDataByte:	
  3960                           ; 1 bytes @ 0x9
  3961                           
  3962  0056                     ??_getMode:	
  3963                           ; 1 bytes @ 0x9
  3964                           
  3965  0056                     wireWriteDataByte@reg:	
  3966                           ; 1 bytes @ 0x9
  3967                           
  3968                           
  3969                           ; 1 bytes @ 0x9
  3970  0056                     	ds	1
  3971  0057                     ??_setLEDDrive:	
  3972  0057                     ??_setProximityGain:	
  3973                           ; 1 bytes @ 0xA
  3974                           
  3975  0057                     ??_setAmbientLightGain:	
  3976                           ; 1 bytes @ 0xA
  3977                           
  3978  0057                     ??_setProxIntLowThresh:	
  3979                           ; 1 bytes @ 0xA
  3980                           
  3981  0057                     ??_setProxIntHighThresh:	
  3982                           ; 1 bytes @ 0xA
  3983                           
  3984  0057                     ?_setLightIntLowThreshold:	
  3985                           ; 1 bytes @ 0xA
  3986                           
  3987  0057                     ?_setLightIntHighThreshold:	
  3988                           ; 1 bytes @ 0xA
  3989                           
  3990  0057                     ??_setGestureEnterThresh:	
  3991                           ; 1 bytes @ 0xA
  3992                           
  3993  0057                     ??_setGestureExitThresh:	
  3994                           ; 1 bytes @ 0xA
  3995                           
  3996  0057                     ??_setGestureGain:	
  3997                           ; 1 bytes @ 0xA
  3998                           
  3999  0057                     ??_setGestureLEDDrive:	
  4000                           ; 1 bytes @ 0xA
  4001                           
  4002  0057                     ??_setGestureWaitTime:	
  4003                           ; 1 bytes @ 0xA
  4004                           
  4005  0057                     ??_setGestureIntEnable:	
  4006                           ; 1 bytes @ 0xA
  4007                           
  4008  0057                     ??_setLEDBoost:	
  4009                           ; 1 bytes @ 0xA
  4010                           
  4011  0057                     ??_setGestureMode:	
  4012                           ; 1 bytes @ 0xA
  4013                           
  4014  0057                     getMode@enable_value:	
  4015                           ; 1 bytes @ 0xA
  4016                           
  4017  0057                     isGestureAvailable@val:	
  4018                           ; 1 bytes @ 0xA
  4019                           
  4020  0057                     setLightIntLowThreshold@threshold:	
  4021                           ; 1 bytes @ 0xA
  4022                           
  4023  0057                     setLightIntHighThreshold@threshold:	
  4024                           ; 2 bytes @ 0xA
  4025                           
  4026                           
  4027                           ; 2 bytes @ 0xA
  4028  0057                     	ds	1
  4029  0058                     ?_setMode:	
  4030  0058                     setMode@enable:	
  4031                           ; 1 bytes @ 0xB
  4032                           
  4033  0058                     setAmbientLightGain@drive:	
  4034                           ; 1 bytes @ 0xB
  4035                           
  4036  0058                     setProxIntLowThresh@threshold:	
  4037                           ; 1 bytes @ 0xB
  4038                           
  4039  0058                     setProxIntHighThresh@threshold:	
  4040                           ; 1 bytes @ 0xB
  4041                           
  4042  0058                     setGestureEnterThresh@threshold:	
  4043                           ; 1 bytes @ 0xB
  4044                           
  4045  0058                     setGestureExitThresh@threshold:	
  4046                           ; 1 bytes @ 0xB
  4047                           
  4048  0058                     setGestureWaitTime@time:	
  4049                           ; 1 bytes @ 0xB
  4050                           
  4051  0058                     setGestureIntEnable@val:	
  4052                           ; 1 bytes @ 0xB
  4053                           
  4054  0058                     setGestureMode@mode:	
  4055                           ; 1 bytes @ 0xB
  4056                           
  4057                           
  4058                           ; 1 bytes @ 0xB
  4059  0058                     	ds	1
  4060  0059                     ??_setMode:	
  4061  0059                     ??_setLightIntLowThreshold:	
  4062                           ; 1 bytes @ 0xC
  4063                           
  4064  0059                     ??_setLightIntHighThreshold:	
  4065                           ; 1 bytes @ 0xC
  4066                           
  4067  0059                     setLEDDrive@val:	
  4068                           ; 1 bytes @ 0xC
  4069                           
  4070  0059                     setProximityGain@val:	
  4071                           ; 1 bytes @ 0xC
  4072                           
  4073  0059                     setAmbientLightGain@val:	
  4074                           ; 1 bytes @ 0xC
  4075                           
  4076  0059                     setGestureGain@val:	
  4077                           ; 1 bytes @ 0xC
  4078                           
  4079  0059                     setGestureLEDDrive@val:	
  4080                           ; 1 bytes @ 0xC
  4081                           
  4082  0059                     setGestureWaitTime@val:	
  4083                           ; 1 bytes @ 0xC
  4084                           
  4085  0059                     setGestureIntEnable@enable:	
  4086                           ; 1 bytes @ 0xC
  4087                           
  4088  0059                     setLEDBoost@val:	
  4089                           ; 1 bytes @ 0xC
  4090                           
  4091  0059                     setGestureMode@val:	
  4092                           ; 1 bytes @ 0xC
  4093                           
  4094                           
  4095                           ; 1 bytes @ 0xC
  4096  0059                     	ds	1
  4097  005A                     setLEDDrive@drive:	
  4098  005A                     setProximityGain@drive:	
  4099                           ; 1 bytes @ 0xD
  4100                           
  4101  005A                     setLightIntLowThreshold@val_low:	
  4102                           ; 1 bytes @ 0xD
  4103                           
  4104  005A                     setLightIntHighThreshold@val_low:	
  4105                           ; 1 bytes @ 0xD
  4106                           
  4107  005A                     setGestureGain@gain:	
  4108                           ; 1 bytes @ 0xD
  4109                           
  4110  005A                     setGestureLEDDrive@drive:	
  4111                           ; 1 bytes @ 0xD
  4112                           
  4113  005A                     setLEDBoost@boost:	
  4114                           ; 1 bytes @ 0xD
  4115                           
  4116                           
  4117                           ; 1 bytes @ 0xD
  4118  005A                     	ds	1
  4119  005B                     setMode@reg_val:	
  4120  005B                     setLightIntLowThreshold@val_high:	
  4121                           ; 1 bytes @ 0xE
  4122                           
  4123  005B                     setLightIntHighThreshold@val_high:	
  4124                           ; 1 bytes @ 0xE
  4125                           
  4126                           
  4127                           ; 1 bytes @ 0xE
  4128  005B                     	ds	1
  4129  005C                     setMode@mode:	
  4130                           
  4131                           ; 1 bytes @ 0xF
  4132  005C                     	ds	1
  4133  005D                     ??_initialize:	
  4134  005D                     ??_enableGestureSensor:	
  4135                           ; 1 bytes @ 0x10
  4136                           
  4137  005D                     ??_enablePower:	
  4138                           ; 1 bytes @ 0x10
  4139                           
  4140                           
  4141                           ; 1 bytes @ 0x10
  4142  005D                     	ds	1
  4143  005E                     initialize@id:	
  4144  005E                     enableGestureSensor@interrupts:	
  4145                           ; 1 bytes @ 0x11
  4146                           
  4147                           
  4148                           ; 1 bytes @ 0x11
  4149  005E                     	ds	1
  4150  005F                     ??_main:	
  4151                           
  4152                           ; 1 bytes @ 0x12
  4153  005F                     	ds	1
  4154                           
  4155                           	psect	maintext
  4156  02DC                     __pmaintext:	
  4157 ;;
  4158 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4159 ;;
  4160 ;; *************** function _main *****************
  4161 ;; Defined at:
  4162 ;;		line 60 in file "main.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  count           2    0        unsigned int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : B1F/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels required when called:   12
  4182 ;; This function calls:
  4183 ;;		_IOCCF1_SetInterruptHandler
  4184 ;;		_SYSTEM_Initialize
  4185 ;;		_enableGestureSensor
  4186 ;;		_initialize
  4187 ;;		_isGestureAvailable
  4188 ;;		_wireReadDataByte
  4189 ;; This function is called by:
  4190 ;;		Startup code after reset
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _main
  4196  02DC                     _main:	
  4197                           
  4198                           ;main.c: 63:     SYSTEM_Initialize();
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  4202  02DC  3186  2667  3182   	fcall	_SYSTEM_Initialize
  4203                           
  4204                           ;main.c: 69:     (INTCONbits.GIE = 1);
  4205  02DF  178B               	bsf	11,7	;volatile
  4206                           
  4207                           ;main.c: 72:     (INTCONbits.PEIE = 1);
  4208  02E0  170B               	bsf	11,6	;volatile
  4209                           
  4210                           ;main.c: 74:     IOCCF1_SetInterruptHandler(GestureInterruptHandler);
  4211  02E1  301B               	movlw	low _GestureInterruptHandler
  4212  02E2  0020               	movlb	0	; select bank0
  4213  02E3  00CD               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  4214  02E4  3007               	movlw	high _GestureInterruptHandler
  4215  02E5  00CE               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  4216  02E6  3186  26D3  3182   	fcall	_IOCCF1_SetInterruptHandler
  4217                           
  4218                           ;main.c: 96:     if(initialize()){
  4219  02E9  3180  2046  3182   	fcall	_initialize
  4220  02EC  3A00               	xorlw	0
  4221  02ED  1903               	skipnz
  4222  02EE  2AF1               	goto	l5558
  4223                           
  4224                           ;main.c: 97:         do { LATAbits.LATA2 = 1; } while(0);
  4225  02EF  0022               	movlb	2	; select bank2
  4226  02F0  150C               	bsf	12,2	;volatile
  4227  02F1                     l5558:	
  4228                           
  4229                           ;main.c: 99:     if(enableGestureSensor(0)){
  4230  02F1  3000               	movlw	0
  4231  02F2  3181  215C  3182   	fcall	_enableGestureSensor
  4232  02F5  3A00               	xorlw	0
  4233  02F6  1903               	skipnz
  4234  02F7  2AFA               	goto	l5560
  4235                           
  4236                           ;main.c: 100:         do { LATAbits.LATA5 = 1; } while(0);
  4237  02F8  0022               	movlb	2	; select bank2
  4238  02F9  168C               	bsf	12,5	;volatile
  4239  02FA                     l5560:	
  4240                           
  4241                           ;main.c: 105:     {;main.c: 109:         if(isGestureAvailable()){
  4242  02FA  3185  25ED  3182   	fcall	_isGestureAvailable
  4243  02FD  3A00               	xorlw	0
  4244  02FE  1903               	skipnz
  4245  02FF  2AFA               	goto	l5560
  4246                           
  4247                           ;main.c: 110:             do { LATCbits.LATC5 = 1; } while(0);
  4248  0300  0022               	movlb	2	; select bank2
  4249  0301  168E               	bsf	14,5	;volatile
  4250                           
  4251                           ;main.c: 111:             _delay((unsigned long)((100)*(1000000/4000.0)));
  4252  0302  3021               	movlw	33
  4253  0303  0020               	movlb	0	; select bank0
  4254  0304  00DF               	movwf	??_main
  4255  0305  3076               	movlw	118
  4256  0306                     u4537:	
  4257  0306  0B89               	decfsz	9,f
  4258  0307  2B06               	goto	u4537
  4259  0308  0BDF               	decfsz	??_main,f
  4260  0309  2B06               	goto	u4537
  4261  030A  0000               	nop
  4262                           
  4263                           ;main.c: 112:             wireReadDataByte(0xFC);
  4264  030B  30FC               	movlw	252
  4265  030C  3185  253F  3182   	fcall	_wireReadDataByte
  4266  030F  2AFA               	goto	l5560
  4267  0310                     __end_of_main:	
  4268                           
  4269                           	psect	text1
  4270  05ED                     __ptext1:	
  4271 ;; *************** function _isGestureAvailable *****************
  4272 ;; Defined at:
  4273 ;;		line 536 in file "APDS9960.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  val             1   10[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      _Bool 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:        2 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    8
  4294 ;; This function calls:
  4295 ;;		_wireReadDataByte
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_handleGesture
  4299 ;;		_readGesture
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _isGestureAvailable
  4305  05ED                     _isGestureAvailable:	
  4306                           
  4307                           ;APDS9960.c: 538:     uint8_t val;;APDS9960.c: 541:     val=wireReadDataByte(0xAF);
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
  4311  05ED  30AF               	movlw	175
  4312  05EE  3185  253F  3185   	fcall	_wireReadDataByte
  4313  05F1  0020               	movlb	0	; select bank0
  4314  05F2  00D6               	movwf	??_isGestureAvailable
  4315  05F3  0856               	movf	??_isGestureAvailable,w
  4316  05F4  00D7               	movwf	isGestureAvailable@val
  4317                           
  4318                           ;APDS9960.c: 544:     val &= 0b00000001;
  4319  05F5  3001               	movlw	1
  4320  05F6  00D6               	movwf	??_isGestureAvailable
  4321  05F7  0856               	movf	??_isGestureAvailable,w
  4322  05F8  05D7               	andwf	isGestureAvailable@val,f
  4323                           
  4324                           ;APDS9960.c: 547:     if( val == 1) {
  4325  05F9  0357               	decf	isGestureAvailable@val,w
  4326  05FA  1D03               	btfss	3,2
  4327  05FB  2DFE               	goto	l5500
  4328                           
  4329                           ;APDS9960.c: 548:         return 1;
  4330  05FC  3001               	movlw	1
  4331  05FD  0008               	return
  4332  05FE                     l5500:	
  4333                           
  4334                           ;APDS9960.c: 550:         return 0;
  4335  05FE  3000               	movlw	0
  4336  05FF  0008               	return
  4337  0600                     __end_of_isGestureAvailable:	
  4338                           
  4339                           	psect	text2
  4340  0046                     __ptext2:	
  4341 ;; *************** function _initialize *****************
  4342 ;; Defined at:
  4343 ;;		line 19 in file "APDS9960.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  id              1   17[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      _Bool 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;Total ram usage:        2 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:   10
  4364 ;; This function calls:
  4365 ;;		_i2c1_driver_open
  4366 ;;		_setAmbientLightGain
  4367 ;;		_setGestureEnterThresh
  4368 ;;		_setGestureExitThresh
  4369 ;;		_setGestureGain
  4370 ;;		_setGestureIntEnable
  4371 ;;		_setGestureLEDDrive
  4372 ;;		_setGestureWaitTime
  4373 ;;		_setLEDDrive
  4374 ;;		_setLightIntHighThreshold
  4375 ;;		_setLightIntLowThreshold
  4376 ;;		_setMode
  4377 ;;		_setProxIntHighThresh
  4378 ;;		_setProxIntLowThresh
  4379 ;;		_setProximityGain
  4380 ;;		_wireReadDataByte
  4381 ;;		_wireWriteDataByte
  4382 ;; This function is called by:
  4383 ;;		_main
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function _initialize
  4389  0046                     _initialize:	
  4390                           
  4391                           ;APDS9960.c: 24:     i2c1_driver_open();
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  4395  0046  3186  267E  3180   	fcall	_i2c1_driver_open
  4396                           
  4397                           ;APDS9960.c: 30:     id = wireReadDataByte(0x92);
  4398  0049  3092               	movlw	146
  4399  004A  3185  253F  3180   	fcall	_wireReadDataByte
  4400  004D  0020               	movlb	0	; select bank0
  4401  004E  00DD               	movwf	??_initialize
  4402  004F  085D               	movf	??_initialize,w
  4403  0050  00DE               	movwf	initialize@id
  4404                           
  4405                           ;APDS9960.c: 32:     if( !(id == 0xAB ||id == 0x9C ) )
  4406  0051  30AB               	movlw	171
  4407  0052  065E               	xorwf	initialize@id,w
  4408  0053  1903               	btfsc	3,2
  4409  0054  285B               	goto	l5296
  4410  0055  309C               	movlw	156
  4411  0056  065E               	xorwf	initialize@id,w
  4412  0057  1903               	btfsc	3,2
  4413  0058  285B               	goto	l5296
  4414  0059                     l5292:	
  4415                           
  4416                           ;APDS9960.c: 33:     {;APDS9960.c: 34:      return 0;
  4417  0059  3000               	movlw	0
  4418  005A  0008               	return
  4419  005B                     l5296:	
  4420                           
  4421                           ;APDS9960.c: 38:     setMode(7, 0);
  4422  005B  01D8               	clrf	setMode@enable
  4423  005C  3007               	movlw	7
  4424  005D  3181  21C0  3180   	fcall	_setMode
  4425                           
  4426                           ;APDS9960.c: 40:     wireWriteDataByte(0x81, 219);
  4427  0060  30DB               	movlw	219
  4428  0061  0020               	movlb	0	; select bank0
  4429  0062  00DD               	movwf	??_initialize
  4430  0063  085D               	movf	??_initialize,w
  4431  0064  00D3               	movwf	wireWriteDataByte@val
  4432  0065  3081               	movlw	129
  4433  0066  3185  25BD  3180   	fcall	_wireWriteDataByte
  4434                           
  4435                           ;APDS9960.c: 41:     wireWriteDataByte(0x83, 246);
  4436  0069  30F6               	movlw	246
  4437  006A  0020               	movlb	0	; select bank0
  4438  006B  00DD               	movwf	??_initialize
  4439  006C  085D               	movf	??_initialize,w
  4440  006D  00D3               	movwf	wireWriteDataByte@val
  4441  006E  3083               	movlw	131
  4442  006F  3185  25BD  3180   	fcall	_wireWriteDataByte
  4443                           
  4444                           ;APDS9960.c: 42:     wireWriteDataByte(0x8E, 0x87);
  4445  0072  3087               	movlw	135
  4446  0073  0020               	movlb	0	; select bank0
  4447  0074  00DD               	movwf	??_initialize
  4448  0075  085D               	movf	??_initialize,w
  4449  0076  00D3               	movwf	wireWriteDataByte@val
  4450  0077  308E               	movlw	142
  4451  0078  3185  25BD  3180   	fcall	_wireWriteDataByte
  4452                           
  4453                           ;APDS9960.c: 43:     wireWriteDataByte(0x9D, 0) ;
  4454  007B  0020               	movlb	0	; select bank0
  4455  007C  01D3               	clrf	wireWriteDataByte@val
  4456  007D  309D               	movlw	157
  4457  007E  3185  25BD  3180   	fcall	_wireWriteDataByte
  4458                           
  4459                           ;APDS9960.c: 44:     wireWriteDataByte(0x9E, 0) ;
  4460  0081  0020               	movlb	0	; select bank0
  4461  0082  01D3               	clrf	wireWriteDataByte@val
  4462  0083  309E               	movlw	158
  4463  0084  3185  25BD  3180   	fcall	_wireWriteDataByte
  4464                           
  4465                           ;APDS9960.c: 45:     wireWriteDataByte(0x8D, 0x60) ;
  4466  0087  3060               	movlw	96
  4467  0088  0020               	movlb	0	; select bank0
  4468  0089  00DD               	movwf	??_initialize
  4469  008A  085D               	movf	??_initialize,w
  4470  008B  00D3               	movwf	wireWriteDataByte@val
  4471  008C  308D               	movlw	141
  4472  008D  3185  25BD  3180   	fcall	_wireWriteDataByte
  4473                           
  4474                           ;APDS9960.c: 46:     setLEDDrive(0);
  4475  0090  3000               	movlw	0
  4476  0091  3184  2454  3180   	fcall	_setLEDDrive
  4477                           
  4478                           ;APDS9960.c: 47:     setProximityGain(2);
  4479  0094  3002               	movlw	2
  4480  0095  3184  242B  3180   	fcall	_setProximityGain
  4481                           
  4482                           ;APDS9960.c: 48:     setAmbientLightGain(1);
  4483  0098  3001               	movlw	1
  4484  0099  3185  2583  3180   	fcall	_setAmbientLightGain
  4485                           
  4486                           ;APDS9960.c: 50:     if( !setProxIntLowThresh(0) ) {
  4487  009C  3000               	movlw	0
  4488  009D  3186  2600  3180   	fcall	_setProxIntLowThresh
  4489  00A0  3A00               	xorlw	0
  4490  00A1  1903               	btfsc	3,2
  4491  00A2  2859               	goto	l5292
  4492                           
  4493                           ;APDS9960.c: 53:     if( !setProxIntHighThresh(50) ) {
  4494  00A3  3032               	movlw	50
  4495  00A4  3186  2613  3180   	fcall	_setProxIntHighThresh
  4496  00A7  3A00               	xorlw	0
  4497  00A8  1903               	btfsc	3,2
  4498  00A9  2859               	goto	l5292
  4499                           
  4500                           ;APDS9960.c: 58:     if( !setLightIntLowThreshold(0xFFFF) ) {
  4501  00AA  30FF               	movlw	255
  4502  00AB  0020               	movlb	0	; select bank0
  4503  00AC  00D7               	movwf	setLightIntLowThreshold@threshold
  4504  00AD  30FF               	movlw	255
  4505  00AE  00D8               	movwf	setLightIntLowThreshold@threshold+1
  4506  00AF  3184  247D  3180   	fcall	_setLightIntLowThreshold
  4507  00B2  3A00               	xorlw	0
  4508  00B3  1903               	btfsc	3,2
  4509  00B4  2859               	goto	l5292
  4510                           
  4511                           ;APDS9960.c: 61:     if( !setLightIntHighThreshold(0) ) {
  4512  00B5  3000               	movlw	0
  4513  00B6  0020               	movlb	0	; select bank0
  4514  00B7  00D7               	movwf	setLightIntHighThreshold@threshold
  4515  00B8  00D8               	movwf	setLightIntHighThreshold@threshold+1
  4516  00B9  3184  24A4  3180   	fcall	_setLightIntHighThreshold
  4517  00BC  3A00               	xorlw	0
  4518  00BD  1903               	btfsc	3,2
  4519  00BE  2859               	goto	l5292
  4520                           
  4521                           ;APDS9960.c: 65:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  4522  00BF  3011               	movlw	17
  4523  00C0  0020               	movlb	0	; select bank0
  4524  00C1  00DD               	movwf	??_initialize
  4525  00C2  085D               	movf	??_initialize,w
  4526  00C3  00D3               	movwf	wireWriteDataByte@val
  4527  00C4  308C               	movlw	140
  4528  00C5  3185  25BD  3180   	fcall	_wireWriteDataByte
  4529  00C8  0020               	movlb	0	; select bank0
  4530  00C9  0853               	movf	?_wireWriteDataByte,w
  4531  00CA  0454               	iorwf	?_wireWriteDataByte+1,w
  4532  00CB  1903               	btfsc	3,2
  4533  00CC  2859               	goto	l5292
  4534                           
  4535                           ;APDS9960.c: 70:     if( !wireWriteDataByte(0x90, 0x01) ) {
  4536  00CD  01D3               	clrf	wireWriteDataByte@val
  4537  00CE  0AD3               	incf	wireWriteDataByte@val,f
  4538  00CF  3090               	movlw	144
  4539  00D0  3185  25BD  3180   	fcall	_wireWriteDataByte
  4540  00D3  0020               	movlb	0	; select bank0
  4541  00D4  0853               	movf	?_wireWriteDataByte,w
  4542  00D5  0454               	iorwf	?_wireWriteDataByte+1,w
  4543  00D6  1903               	btfsc	3,2
  4544  00D7  2859               	goto	l5292
  4545                           
  4546                           ;APDS9960.c: 73:     if( !wireWriteDataByte(0x9F, 0) ) {
  4547  00D8  01D3               	clrf	wireWriteDataByte@val
  4548  00D9  309F               	movlw	159
  4549  00DA  3185  25BD  3180   	fcall	_wireWriteDataByte
  4550  00DD  0020               	movlb	0	; select bank0
  4551  00DE  0853               	movf	?_wireWriteDataByte,w
  4552  00DF  0454               	iorwf	?_wireWriteDataByte+1,w
  4553  00E0  1903               	btfsc	3,2
  4554  00E1  2859               	goto	l5292
  4555                           
  4556                           ;APDS9960.c: 77:     if( !setGestureEnterThresh(40) ) {
  4557  00E2  3028               	movlw	40
  4558  00E3  3186  2639  3180   	fcall	_setGestureEnterThresh
  4559  00E6  3A00               	xorlw	0
  4560  00E7  1903               	btfsc	3,2
  4561  00E8  2859               	goto	l5292
  4562                           
  4563                           ;APDS9960.c: 81:     if( !setGestureExitThresh(30) ) {
  4564  00E9  301E               	movlw	30
  4565  00EA  3186  2626  3180   	fcall	_setGestureExitThresh
  4566  00ED  3A00               	xorlw	0
  4567  00EE  1903               	btfsc	3,2
  4568  00EF  2859               	goto	l5292
  4569                           
  4570                           ;APDS9960.c: 84:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  4571  00F0  3040               	movlw	64
  4572  00F1  0020               	movlb	0	; select bank0
  4573  00F2  00DD               	movwf	??_initialize
  4574  00F3  085D               	movf	??_initialize,w
  4575  00F4  00D3               	movwf	wireWriteDataByte@val
  4576  00F5  30A2               	movlw	162
  4577  00F6  3185  25BD  3180   	fcall	_wireWriteDataByte
  4578  00F9  0020               	movlb	0	; select bank0
  4579  00FA  0853               	movf	?_wireWriteDataByte,w
  4580  00FB  0454               	iorwf	?_wireWriteDataByte+1,w
  4581  00FC  1903               	btfsc	3,2
  4582  00FD  2859               	goto	l5292
  4583                           
  4584                           ;APDS9960.c: 87:     if( !setGestureGain(2) ) {
  4585  00FE  3002               	movlw	2
  4586  00FF  3183  2342  3180   	fcall	_setGestureGain
  4587  0102  3A00               	xorlw	0
  4588  0103  1903               	btfsc	3,2
  4589  0104  2859               	goto	l5292
  4590                           
  4591                           ;APDS9960.c: 90:     if( !setGestureLEDDrive(0) ) {
  4592  0105  3000               	movlw	0
  4593  0106  3183  2310  3180   	fcall	_setGestureLEDDrive
  4594  0109  3A00               	xorlw	0
  4595  010A  1903               	btfsc	3,2
  4596  010B  2859               	goto	l5292
  4597                           
  4598                           ;APDS9960.c: 94:     if( !setGestureWaitTime(1) ) {
  4599  010C  3001               	movlw	1
  4600  010D  3184  24CB  3180   	fcall	_setGestureWaitTime
  4601  0110  3A00               	xorlw	0
  4602  0111  1903               	btfsc	3,2
  4603  0112  2859               	goto	l5292
  4604                           
  4605                           ;APDS9960.c: 97:     if( !wireWriteDataByte(0xA4, 0) ) {
  4606  0113  0020               	movlb	0	; select bank0
  4607  0114  01D3               	clrf	wireWriteDataByte@val
  4608  0115  30A4               	movlw	164
  4609  0116  3185  25BD  3180   	fcall	_wireWriteDataByte
  4610  0119  0020               	movlb	0	; select bank0
  4611  011A  0853               	movf	?_wireWriteDataByte,w
  4612  011B  0454               	iorwf	?_wireWriteDataByte+1,w
  4613  011C  1903               	btfsc	3,2
  4614  011D  2859               	goto	l5292
  4615                           
  4616                           ;APDS9960.c: 100:     if( !wireWriteDataByte(0xA5, 0) ) {
  4617  011E  01D3               	clrf	wireWriteDataByte@val
  4618  011F  30A5               	movlw	165
  4619  0120  3185  25BD  3180   	fcall	_wireWriteDataByte
  4620  0123  0020               	movlb	0	; select bank0
  4621  0124  0853               	movf	?_wireWriteDataByte,w
  4622  0125  0454               	iorwf	?_wireWriteDataByte+1,w
  4623  0126  1903               	btfsc	3,2
  4624  0127  2859               	goto	l5292
  4625                           
  4626                           ;APDS9960.c: 103:     if( !wireWriteDataByte(0xA7, 0) ) {
  4627  0128  01D3               	clrf	wireWriteDataByte@val
  4628  0129  30A7               	movlw	167
  4629  012A  3185  25BD  3180   	fcall	_wireWriteDataByte
  4630  012D  0020               	movlb	0	; select bank0
  4631  012E  0853               	movf	?_wireWriteDataByte,w
  4632  012F  0454               	iorwf	?_wireWriteDataByte+1,w
  4633  0130  1903               	btfsc	3,2
  4634  0131  2859               	goto	l5292
  4635                           
  4636                           ;APDS9960.c: 106:     if( !wireWriteDataByte(0xA9, 0) ) {
  4637  0132  01D3               	clrf	wireWriteDataByte@val
  4638  0133  30A9               	movlw	169
  4639  0134  3185  25BD  3180   	fcall	_wireWriteDataByte
  4640  0137  0020               	movlb	0	; select bank0
  4641  0138  0853               	movf	?_wireWriteDataByte,w
  4642  0139  0454               	iorwf	?_wireWriteDataByte+1,w
  4643  013A  1903               	btfsc	3,2
  4644  013B  2859               	goto	l5292
  4645                           
  4646                           ;APDS9960.c: 109:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  4647  013C  30C9               	movlw	201
  4648  013D  00DD               	movwf	??_initialize
  4649  013E  085D               	movf	??_initialize,w
  4650  013F  00D3               	movwf	wireWriteDataByte@val
  4651  0140  30A6               	movlw	166
  4652  0141  3185  25BD  3180   	fcall	_wireWriteDataByte
  4653  0144  0020               	movlb	0	; select bank0
  4654  0145  0853               	movf	?_wireWriteDataByte,w
  4655  0146  0454               	iorwf	?_wireWriteDataByte+1,w
  4656  0147  1903               	btfsc	3,2
  4657  0148  2859               	goto	l5292
  4658                           
  4659                           ;APDS9960.c: 112:     if( !wireWriteDataByte(0xAA, 0) ) {
  4660  0149  01D3               	clrf	wireWriteDataByte@val
  4661  014A  30AA               	movlw	170
  4662  014B  3185  25BD  3180   	fcall	_wireWriteDataByte
  4663  014E  0020               	movlb	0	; select bank0
  4664  014F  0853               	movf	?_wireWriteDataByte,w
  4665  0150  0454               	iorwf	?_wireWriteDataByte+1,w
  4666  0151  1903               	btfsc	3,2
  4667  0152  2859               	goto	l5292
  4668                           
  4669                           ;APDS9960.c: 115:     if( !setGestureIntEnable(0) ) {
  4670  0153  3000               	movlw	0
  4671  0154  3183  23D6  3180   	fcall	_setGestureIntEnable
  4672  0157  3A00               	xorlw	0
  4673  0158  1903               	btfsc	3,2
  4674  0159  2859               	goto	l5292
  4675                           
  4676                           ;APDS9960.c: 119:     return 1;
  4677  015A  3001               	movlw	1
  4678  015B  0008               	return
  4679  015C                     __end_of_initialize:	
  4680                           
  4681                           	psect	text3
  4682  042B                     __ptext3:	
  4683 ;; *************** function _setProximityGain *****************
  4684 ;; Defined at:
  4685 ;;		line 191 in file "APDS9960.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  drive           1    wreg     unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  drive           1   13[BANK0 ] unsigned char 
  4690 ;;  val             1   12[BANK0 ] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      _Bool 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0, pclath, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4702 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;Total ram usage:        4 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    8
  4707 ;; This function calls:
  4708 ;;		_wireReadDataByte
  4709 ;;		_wireWriteDataByte
  4710 ;; This function is called by:
  4711 ;;		_initialize
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           
  4716                           ;psect for function _setProximityGain
  4717  042B                     _setProximityGain:	
  4718                           
  4719                           ;incstack = 0
  4720                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  4721                           ;setProximityGain@drive stored from wreg
  4722  042B  0020               	movlb	0	; select bank0
  4723  042C  00DA               	movwf	setProximityGain@drive
  4724                           
  4725                           ;APDS9960.c: 191: _Bool setProximityGain(uint8_t drive);APDS9960.c: 192: {;APDS9960.c: 1
      +                          93:     uint8_t val;;APDS9960.c: 196:     val=wireReadDataByte(0x8F);
  4726  042D  308F               	movlw	143
  4727  042E  3185  253F  3184   	fcall	_wireReadDataByte
  4728  0431  0020               	movlb	0	; select bank0
  4729  0432  00D7               	movwf	??_setProximityGain
  4730  0433  0857               	movf	??_setProximityGain,w
  4731  0434  00D9               	movwf	setProximityGain@val
  4732                           
  4733                           ;APDS9960.c: 198:     drive &= 0b00000011;
  4734  0435  3003               	movlw	3
  4735  0436  00D7               	movwf	??_setProximityGain
  4736  0437  0857               	movf	??_setProximityGain,w
  4737  0438  05DA               	andwf	setProximityGain@drive,f
  4738                           
  4739                           ;APDS9960.c: 199:     drive = drive << 2;
  4740  0439  085A               	movf	setProximityGain@drive,w
  4741  043A  00D7               	movwf	??_setProximityGain
  4742  043B  3001               	movlw	1
  4743  043C                     u3825:	
  4744  043C  35D7               	lslf	??_setProximityGain,f
  4745  043D  3EFF               	addlw	-1
  4746  043E  1D03               	skipz
  4747  043F  2C3C               	goto	u3825
  4748  0440  3557               	lslf	??_setProximityGain,w
  4749  0441  00D8               	movwf	??_setProximityGain+1
  4750  0442  0858               	movf	??_setProximityGain+1,w
  4751  0443  00DA               	movwf	setProximityGain@drive
  4752                           
  4753                           ;APDS9960.c: 200:     val &= 0b11110011;
  4754  0444  30F3               	movlw	243
  4755  0445  00D7               	movwf	??_setProximityGain
  4756  0446  0857               	movf	??_setProximityGain,w
  4757  0447  05D9               	andwf	setProximityGain@val,f
  4758                           
  4759                           ;APDS9960.c: 201:     val |= drive;
  4760  0448  085A               	movf	setProximityGain@drive,w
  4761  0449  00D7               	movwf	??_setProximityGain
  4762  044A  0857               	movf	??_setProximityGain,w
  4763  044B  04D9               	iorwf	setProximityGain@val,f
  4764                           
  4765                           ;APDS9960.c: 204:     if( !wireWriteDataByte(0x8F, val) ) {
  4766  044C  0859               	movf	setProximityGain@val,w
  4767  044D  00D7               	movwf	??_setProximityGain
  4768  044E  0857               	movf	??_setProximityGain,w
  4769  044F  00D3               	movwf	wireWriteDataByte@val
  4770  0450  308F               	movlw	143
  4771  0451  3185  25BD         	fcall	_wireWriteDataByte
  4772  0453  0008               	return
  4773  0454                     __end_of_setProximityGain:	
  4774                           
  4775                           	psect	text4
  4776  0600                     __ptext4:	
  4777 ;; *************** function _setProxIntLowThresh *****************
  4778 ;; Defined at:
  4779 ;;		line 233 in file "APDS9960.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  threshold       1    wreg     unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  threshold       1   11[BANK0 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      _Bool 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        2 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    8
  4800 ;; This function calls:
  4801 ;;		_wireWriteDataByte
  4802 ;; This function is called by:
  4803 ;;		_initialize
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _setProxIntLowThresh
  4809  0600                     _setProxIntLowThresh:	
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  4813                           ;setProxIntLowThresh@threshold stored from wreg
  4814  0600  0020               	movlb	0	; select bank0
  4815  0601  00D8               	movwf	setProxIntLowThresh@threshold
  4816                           
  4817                           ;APDS9960.c: 233: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 234: {;APDS99
      +                          60.c: 235:     if( !wireWriteDataByte(0x89, threshold) ) {
  4818  0602  0858               	movf	setProxIntLowThresh@threshold,w
  4819  0603  00D7               	movwf	??_setProxIntLowThresh
  4820  0604  0857               	movf	??_setProxIntLowThresh,w
  4821  0605  00D3               	movwf	wireWriteDataByte@val
  4822  0606  3089               	movlw	137
  4823  0607  3185  25BD  3186   	fcall	_wireWriteDataByte
  4824  060A  0020               	movlb	0	; select bank0
  4825  060B  0853               	movf	?_wireWriteDataByte,w
  4826  060C  0454               	iorwf	?_wireWriteDataByte+1,w
  4827  060D  1D03               	btfss	3,2
  4828  060E  2E11               	goto	l5060
  4829                           
  4830                           ;APDS9960.c: 236:         return 0;
  4831  060F  3000               	movlw	0
  4832  0610  0008               	return
  4833  0611                     l5060:	
  4834                           
  4835                           ;APDS9960.c: 239:     return 1;
  4836  0611  3001               	movlw	1
  4837  0612  0008               	return
  4838  0613                     __end_of_setProxIntLowThresh:	
  4839                           
  4840                           	psect	text5
  4841  0613                     __ptext5:	
  4842 ;; *************** function _setProxIntHighThresh *****************
  4843 ;; Defined at:
  4844 ;;		line 243 in file "APDS9960.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  threshold       1    wreg     unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  threshold       1   11[BANK0 ] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      _Bool 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        2 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    8
  4865 ;; This function calls:
  4866 ;;		_wireWriteDataByte
  4867 ;; This function is called by:
  4868 ;;		_initialize
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _setProxIntHighThresh
  4874  0613                     _setProxIntHighThresh:	
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  4878                           ;setProxIntHighThresh@threshold stored from wreg
  4879  0613  0020               	movlb	0	; select bank0
  4880  0614  00D8               	movwf	setProxIntHighThresh@threshold
  4881                           
  4882                           ;APDS9960.c: 243: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 244: {;APDS9
      +                          960.c: 245:     if( !wireWriteDataByte(0x8B, threshold) ) {
  4883  0615  0858               	movf	setProxIntHighThresh@threshold,w
  4884  0616  00D7               	movwf	??_setProxIntHighThresh
  4885  0617  0857               	movf	??_setProxIntHighThresh,w
  4886  0618  00D3               	movwf	wireWriteDataByte@val
  4887  0619  308B               	movlw	139
  4888  061A  3185  25BD  3186   	fcall	_wireWriteDataByte
  4889  061D  0020               	movlb	0	; select bank0
  4890  061E  0853               	movf	?_wireWriteDataByte,w
  4891  061F  0454               	iorwf	?_wireWriteDataByte+1,w
  4892  0620  1D03               	btfss	3,2
  4893  0621  2E24               	goto	l5070
  4894                           
  4895                           ;APDS9960.c: 246:         return 0;
  4896  0622  3000               	movlw	0
  4897  0623  0008               	return
  4898  0624                     l5070:	
  4899                           
  4900                           ;APDS9960.c: 249:     return 1;
  4901  0624  3001               	movlw	1
  4902  0625  0008               	return
  4903  0626                     __end_of_setProxIntHighThresh:	
  4904                           
  4905                           	psect	text6
  4906  047D                     __ptext6:	
  4907 ;; *************** function _setLightIntLowThreshold *****************
  4908 ;; Defined at:
  4909 ;;		line 253 in file "APDS9960.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  threshold       2   10[BANK0 ] unsigned short 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  val_high        1   14[BANK0 ] unsigned char 
  4914 ;;  val_low         1   13[BANK0 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      _Bool 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;Total ram usage:        5 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    8
  4931 ;; This function calls:
  4932 ;;		_wireWriteDataByte
  4933 ;; This function is called by:
  4934 ;;		_initialize
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function _setLightIntLowThreshold
  4940  047D                     _setLightIntLowThreshold:	
  4941                           
  4942                           ;APDS9960.c: 253: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 254: {;A
      +                          PDS9960.c: 255:     uint8_t val_low;;APDS9960.c: 256:     uint8_t val_high;;APDS9960.c: 
      +                          259:     val_low = threshold & 0x00FF;
  4943                           
  4944                           ;incstack = 0
  4945                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  4946  047D  0020               	movlb	0	; select bank0
  4947  047E  0857               	movf	setLightIntLowThreshold@threshold,w
  4948  047F  00D9               	movwf	??_setLightIntLowThreshold
  4949  0480  0859               	movf	??_setLightIntLowThreshold,w
  4950  0481  00DA               	movwf	setLightIntLowThreshold@val_low
  4951                           
  4952                           ;APDS9960.c: 260:     val_high = (threshold & 0xFF00) >> 8;
  4953  0482  0858               	movf	setLightIntLowThreshold@threshold+1,w
  4954  0483  00D9               	movwf	??_setLightIntLowThreshold
  4955  0484  0859               	movf	??_setLightIntLowThreshold,w
  4956  0485  00DB               	movwf	setLightIntLowThreshold@val_high
  4957                           
  4958                           ;APDS9960.c: 263:     if( !wireWriteDataByte(0x84, val_low) ) {
  4959  0486  085A               	movf	setLightIntLowThreshold@val_low,w
  4960  0487  00D9               	movwf	??_setLightIntLowThreshold
  4961  0488  0859               	movf	??_setLightIntLowThreshold,w
  4962  0489  00D3               	movwf	wireWriteDataByte@val
  4963  048A  3084               	movlw	132
  4964  048B  3185  25BD  3184   	fcall	_wireWriteDataByte
  4965  048E  0020               	movlb	0	; select bank0
  4966  048F  0853               	movf	?_wireWriteDataByte,w
  4967  0490  0454               	iorwf	?_wireWriteDataByte+1,w
  4968  0491  1D03               	btfss	3,2
  4969  0492  2C95               	goto	l5084
  4970  0493                     l5080:	
  4971                           
  4972                           ;APDS9960.c: 264:         return 0;
  4973  0493  3000               	movlw	0
  4974  0494  0008               	return
  4975  0495                     l5084:	
  4976                           
  4977                           ;APDS9960.c: 268:     if( !wireWriteDataByte(0x85, val_high) ) {
  4978  0495  085B               	movf	setLightIntLowThreshold@val_high,w
  4979  0496  00D9               	movwf	??_setLightIntLowThreshold
  4980  0497  0859               	movf	??_setLightIntLowThreshold,w
  4981  0498  00D3               	movwf	wireWriteDataByte@val
  4982  0499  3085               	movlw	133
  4983  049A  3185  25BD  3184   	fcall	_wireWriteDataByte
  4984  049D  0020               	movlb	0	; select bank0
  4985  049E  0853               	movf	?_wireWriteDataByte,w
  4986  049F  0454               	iorwf	?_wireWriteDataByte+1,w
  4987  04A0  1903               	btfsc	3,2
  4988  04A1  2C93               	goto	l5080
  4989                           
  4990                           ;APDS9960.c: 272:     return 1;
  4991  04A2  3001               	movlw	1
  4992  04A3  0008               	return
  4993  04A4                     __end_of_setLightIntLowThreshold:	
  4994                           
  4995                           	psect	text7
  4996  04A4                     __ptext7:	
  4997 ;; *************** function _setLightIntHighThreshold *****************
  4998 ;; Defined at:
  4999 ;;		line 276 in file "APDS9960.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  threshold       2   10[BANK0 ] unsigned short 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  val_high        1   14[BANK0 ] unsigned char 
  5004 ;;  val_low         1   13[BANK0 ] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      _Bool 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0, pclath, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;Total ram usage:        5 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    8
  5021 ;; This function calls:
  5022 ;;		_wireWriteDataByte
  5023 ;; This function is called by:
  5024 ;;		_initialize
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _setLightIntHighThreshold
  5030  04A4                     _setLightIntHighThreshold:	
  5031                           
  5032                           ;APDS9960.c: 276: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 277: {;
      +                          APDS9960.c: 278:     uint8_t val_low;;APDS9960.c: 279:     uint8_t val_high;;APDS9960.c:
      +                           282:     val_low = threshold & 0x00FF;
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  5036  04A4  0020               	movlb	0	; select bank0
  5037  04A5  0857               	movf	setLightIntHighThreshold@threshold,w
  5038  04A6  00D9               	movwf	??_setLightIntHighThreshold
  5039  04A7  0859               	movf	??_setLightIntHighThreshold,w
  5040  04A8  00DA               	movwf	setLightIntHighThreshold@val_low
  5041                           
  5042                           ;APDS9960.c: 283:     val_high = (threshold & 0xFF00) >> 8;
  5043  04A9  0858               	movf	setLightIntHighThreshold@threshold+1,w
  5044  04AA  00D9               	movwf	??_setLightIntHighThreshold
  5045  04AB  0859               	movf	??_setLightIntHighThreshold,w
  5046  04AC  00DB               	movwf	setLightIntHighThreshold@val_high
  5047                           
  5048                           ;APDS9960.c: 286:     if( !wireWriteDataByte(0x86, val_low) ) {
  5049  04AD  085A               	movf	setLightIntHighThreshold@val_low,w
  5050  04AE  00D9               	movwf	??_setLightIntHighThreshold
  5051  04AF  0859               	movf	??_setLightIntHighThreshold,w
  5052  04B0  00D3               	movwf	wireWriteDataByte@val
  5053  04B1  3086               	movlw	134
  5054  04B2  3185  25BD  3184   	fcall	_wireWriteDataByte
  5055  04B5  0020               	movlb	0	; select bank0
  5056  04B6  0853               	movf	?_wireWriteDataByte,w
  5057  04B7  0454               	iorwf	?_wireWriteDataByte+1,w
  5058  04B8  1D03               	btfss	3,2
  5059  04B9  2CBC               	goto	l5104
  5060  04BA                     l5100:	
  5061                           
  5062                           ;APDS9960.c: 287:         return 0;
  5063  04BA  3000               	movlw	0
  5064  04BB  0008               	return
  5065  04BC                     l5104:	
  5066                           
  5067                           ;APDS9960.c: 291:     if( !wireWriteDataByte(0x87, val_high) ) {
  5068  04BC  085B               	movf	setLightIntHighThreshold@val_high,w
  5069  04BD  00D9               	movwf	??_setLightIntHighThreshold
  5070  04BE  0859               	movf	??_setLightIntHighThreshold,w
  5071  04BF  00D3               	movwf	wireWriteDataByte@val
  5072  04C0  3087               	movlw	135
  5073  04C1  3185  25BD  3184   	fcall	_wireWriteDataByte
  5074  04C4  0020               	movlb	0	; select bank0
  5075  04C5  0853               	movf	?_wireWriteDataByte,w
  5076  04C6  0454               	iorwf	?_wireWriteDataByte+1,w
  5077  04C7  1903               	btfsc	3,2
  5078  04C8  2CBA               	goto	l5100
  5079                           
  5080                           ;APDS9960.c: 295:     return 1;
  5081  04C9  3001               	movlw	1
  5082  04CA  0008               	return
  5083  04CB                     __end_of_setLightIntHighThreshold:	
  5084                           
  5085                           	psect	text8
  5086  0454                     __ptext8:	
  5087 ;; *************** function _setLEDDrive *****************
  5088 ;; Defined at:
  5089 ;;		line 169 in file "APDS9960.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  drive           1    wreg     unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  drive           1   13[BANK0 ] unsigned char 
  5094 ;;  val             1   12[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      _Bool 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;Total ram usage:        4 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    8
  5111 ;; This function calls:
  5112 ;;		_wireReadDataByte
  5113 ;;		_wireWriteDataByte
  5114 ;; This function is called by:
  5115 ;;		_initialize
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           
  5120                           ;psect for function _setLEDDrive
  5121  0454                     _setLEDDrive:	
  5122                           
  5123                           ;incstack = 0
  5124                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  5125                           ;setLEDDrive@drive stored from wreg
  5126  0454  0020               	movlb	0	; select bank0
  5127  0455  00DA               	movwf	setLEDDrive@drive
  5128                           
  5129                           ;APDS9960.c: 169: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 170: {;APDS9960.c: 171:  
      +                             uint8_t val;;APDS9960.c: 174:     val=wireReadDataByte(0x8F);
  5130  0456  308F               	movlw	143
  5131  0457  3185  253F  3184   	fcall	_wireReadDataByte
  5132  045A  0020               	movlb	0	; select bank0
  5133  045B  00D7               	movwf	??_setLEDDrive
  5134  045C  0857               	movf	??_setLEDDrive,w
  5135  045D  00D9               	movwf	setLEDDrive@val
  5136                           
  5137                           ;APDS9960.c: 177:     drive &= 0b00000011;
  5138  045E  3003               	movlw	3
  5139  045F  00D7               	movwf	??_setLEDDrive
  5140  0460  0857               	movf	??_setLEDDrive,w
  5141  0461  05DA               	andwf	setLEDDrive@drive,f
  5142                           
  5143                           ;APDS9960.c: 178:     drive = drive << 6;
  5144  0462  085A               	movf	setLEDDrive@drive,w
  5145  0463  00D7               	movwf	??_setLEDDrive
  5146  0464  3005               	movlw	5
  5147  0465                     u3815:	
  5148  0465  35D7               	lslf	??_setLEDDrive,f
  5149  0466  3EFF               	addlw	-1
  5150  0467  1D03               	skipz
  5151  0468  2C65               	goto	u3815
  5152  0469  3557               	lslf	??_setLEDDrive,w
  5153  046A  00D8               	movwf	??_setLEDDrive+1
  5154  046B  0858               	movf	??_setLEDDrive+1,w
  5155  046C  00DA               	movwf	setLEDDrive@drive
  5156                           
  5157                           ;APDS9960.c: 179:     val &= 0b00111111;
  5158  046D  303F               	movlw	63
  5159  046E  00D7               	movwf	??_setLEDDrive
  5160  046F  0857               	movf	??_setLEDDrive,w
  5161  0470  05D9               	andwf	setLEDDrive@val,f
  5162                           
  5163                           ;APDS9960.c: 180:     val |= drive;
  5164  0471  085A               	movf	setLEDDrive@drive,w
  5165  0472  00D7               	movwf	??_setLEDDrive
  5166  0473  0857               	movf	??_setLEDDrive,w
  5167  0474  04D9               	iorwf	setLEDDrive@val,f
  5168                           
  5169                           ;APDS9960.c: 183:     if( !wireWriteDataByte(0x8F, val) ) {
  5170  0475  0859               	movf	setLEDDrive@val,w
  5171  0476  00D7               	movwf	??_setLEDDrive
  5172  0477  0857               	movf	??_setLEDDrive,w
  5173  0478  00D3               	movwf	wireWriteDataByte@val
  5174  0479  308F               	movlw	143
  5175  047A  3185  25BD         	fcall	_wireWriteDataByte
  5176  047C  0008               	return
  5177  047D                     __end_of_setLEDDrive:	
  5178                           
  5179                           	psect	text9
  5180  04CB                     __ptext9:	
  5181 ;; *************** function _setGestureWaitTime *****************
  5182 ;; Defined at:
  5183 ;;		line 365 in file "APDS9960.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  time            1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  time            1   11[BANK0 ] unsigned char 
  5188 ;;  val             1   12[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      _Bool 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;Total ram usage:        3 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    8
  5205 ;; This function calls:
  5206 ;;		_wireReadDataByte
  5207 ;;		_wireWriteDataByte
  5208 ;; This function is called by:
  5209 ;;		_initialize
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _setGestureWaitTime
  5215  04CB                     _setGestureWaitTime:	
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  5219                           ;setGestureWaitTime@time stored from wreg
  5220  04CB  0020               	movlb	0	; select bank0
  5221  04CC  00D8               	movwf	setGestureWaitTime@time
  5222                           
  5223                           ;APDS9960.c: 365: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 366: {;APDS9960.c: 
      +                          367:     uint8_t val;;APDS9960.c: 370:     val = wireReadDataByte(0xA3);
  5224  04CD  30A3               	movlw	163
  5225  04CE  3185  253F  3184   	fcall	_wireReadDataByte
  5226  04D1  0020               	movlb	0	; select bank0
  5227  04D2  00D7               	movwf	??_setGestureWaitTime
  5228  04D3  0857               	movf	??_setGestureWaitTime,w
  5229  04D4  00D9               	movwf	setGestureWaitTime@val
  5230                           
  5231                           ;APDS9960.c: 373:     time &= 0b00000111;
  5232  04D5  3007               	movlw	7
  5233  04D6  00D7               	movwf	??_setGestureWaitTime
  5234  04D7  0857               	movf	??_setGestureWaitTime,w
  5235  04D8  05D8               	andwf	setGestureWaitTime@time,f
  5236                           
  5237                           ;APDS9960.c: 374:     val &= 0b11111000;
  5238  04D9  30F8               	movlw	248
  5239  04DA  00D7               	movwf	??_setGestureWaitTime
  5240  04DB  0857               	movf	??_setGestureWaitTime,w
  5241  04DC  05D9               	andwf	setGestureWaitTime@val,f
  5242                           
  5243                           ;APDS9960.c: 375:     val |= time;
  5244  04DD  0858               	movf	setGestureWaitTime@time,w
  5245  04DE  00D7               	movwf	??_setGestureWaitTime
  5246  04DF  0857               	movf	??_setGestureWaitTime,w
  5247  04E0  04D9               	iorwf	setGestureWaitTime@val,f
  5248                           
  5249                           ;APDS9960.c: 378:     if( !wireWriteDataByte(0xA3, val) ) {
  5250  04E1  0859               	movf	setGestureWaitTime@val,w
  5251  04E2  00D7               	movwf	??_setGestureWaitTime
  5252  04E3  0857               	movf	??_setGestureWaitTime,w
  5253  04E4  00D3               	movwf	wireWriteDataByte@val
  5254  04E5  30A3               	movlw	163
  5255  04E6  3185  25BD  3184   	fcall	_wireWriteDataByte
  5256  04E9  0020               	movlb	0	; select bank0
  5257  04EA  0853               	movf	?_wireWriteDataByte,w
  5258  04EB  0454               	iorwf	?_wireWriteDataByte+1,w
  5259  04EC  1D03               	btfss	3,2
  5260  04ED  2CF0               	goto	l5184
  5261                           
  5262                           ;APDS9960.c: 379:         return 0;
  5263  04EE  3000               	movlw	0
  5264  04EF  0008               	return
  5265  04F0                     l5184:	
  5266                           
  5267                           ;APDS9960.c: 382:     return 1;
  5268  04F0  3001               	movlw	1
  5269  04F1  0008               	return
  5270  04F2                     __end_of_setGestureWaitTime:	
  5271                           
  5272                           	psect	text10
  5273  0310                     __ptext10:	
  5274 ;; *************** function _setGestureLEDDrive *****************
  5275 ;; Defined at:
  5276 ;;		line 342 in file "APDS9960.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  drive           1    wreg     unsigned char 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  drive           1   13[BANK0 ] unsigned char 
  5281 ;;  val             1   12[BANK0 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      _Bool 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, pclath, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;Total ram usage:        4 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    8
  5298 ;; This function calls:
  5299 ;;		_wireReadDataByte
  5300 ;;		_wireWriteDataByte
  5301 ;; This function is called by:
  5302 ;;		_initialize
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _setGestureLEDDrive
  5308  0310                     _setGestureLEDDrive:	
  5309                           
  5310                           ;incstack = 0
  5311                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  5312                           ;setGestureLEDDrive@drive stored from wreg
  5313  0310  0020               	movlb	0	; select bank0
  5314  0311  00DA               	movwf	setGestureLEDDrive@drive
  5315                           
  5316                           ;APDS9960.c: 342: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 343: {;APDS9960.c:
      +                           344:     uint8_t val;;APDS9960.c: 347:     val = wireReadDataByte(0xA3);
  5317  0312  30A3               	movlw	163
  5318  0313  3185  253F  3183   	fcall	_wireReadDataByte
  5319  0316  0020               	movlb	0	; select bank0
  5320  0317  00D7               	movwf	??_setGestureLEDDrive
  5321  0318  0857               	movf	??_setGestureLEDDrive,w
  5322  0319  00D9               	movwf	setGestureLEDDrive@val
  5323                           
  5324                           ;APDS9960.c: 351:     drive &= 0b00000011;
  5325  031A  3003               	movlw	3
  5326  031B  00D7               	movwf	??_setGestureLEDDrive
  5327  031C  0857               	movf	??_setGestureLEDDrive,w
  5328  031D  05DA               	andwf	setGestureLEDDrive@drive,f
  5329                           
  5330                           ;APDS9960.c: 352:     drive = drive << 3;
  5331  031E  085A               	movf	setGestureLEDDrive@drive,w
  5332  031F  00D7               	movwf	??_setGestureLEDDrive
  5333  0320  3002               	movlw	2
  5334  0321                     u3935:	
  5335  0321  35D7               	lslf	??_setGestureLEDDrive,f
  5336  0322  3EFF               	addlw	-1
  5337  0323  1D03               	skipz
  5338  0324  2B21               	goto	u3935
  5339  0325  3557               	lslf	??_setGestureLEDDrive,w
  5340  0326  00D8               	movwf	??_setGestureLEDDrive+1
  5341  0327  0858               	movf	??_setGestureLEDDrive+1,w
  5342  0328  00DA               	movwf	setGestureLEDDrive@drive
  5343                           
  5344                           ;APDS9960.c: 353:     val &= 0b11100111;
  5345  0329  30E7               	movlw	231
  5346  032A  00D7               	movwf	??_setGestureLEDDrive
  5347  032B  0857               	movf	??_setGestureLEDDrive,w
  5348  032C  05D9               	andwf	setGestureLEDDrive@val,f
  5349                           
  5350                           ;APDS9960.c: 354:     val |= drive;
  5351  032D  085A               	movf	setGestureLEDDrive@drive,w
  5352  032E  00D7               	movwf	??_setGestureLEDDrive
  5353  032F  0857               	movf	??_setGestureLEDDrive,w
  5354  0330  04D9               	iorwf	setGestureLEDDrive@val,f
  5355                           
  5356                           ;APDS9960.c: 357:     if( !wireWriteDataByte(0xA3, val) ) {
  5357  0331  0859               	movf	setGestureLEDDrive@val,w
  5358  0332  00D7               	movwf	??_setGestureLEDDrive
  5359  0333  0857               	movf	??_setGestureLEDDrive,w
  5360  0334  00D3               	movwf	wireWriteDataByte@val
  5361  0335  30A3               	movlw	163
  5362  0336  3185  25BD  3183   	fcall	_wireWriteDataByte
  5363  0339  0020               	movlb	0	; select bank0
  5364  033A  0853               	movf	?_wireWriteDataByte,w
  5365  033B  0454               	iorwf	?_wireWriteDataByte+1,w
  5366  033C  1D03               	btfss	3,2
  5367  033D  2B40               	goto	l5166
  5368                           
  5369                           ;APDS9960.c: 358:         return 0;
  5370  033E  3000               	movlw	0
  5371  033F  0008               	return
  5372  0340                     l5166:	
  5373                           
  5374                           ;APDS9960.c: 361:     return 1;
  5375  0340  3001               	movlw	1
  5376  0341  0008               	return
  5377  0342                     __end_of_setGestureLEDDrive:	
  5378                           
  5379                           	psect	text11
  5380  0342                     __ptext11:	
  5381 ;; *************** function _setGestureGain *****************
  5382 ;; Defined at:
  5383 ;;		line 319 in file "APDS9960.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  gain            1    wreg     unsigned char 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  gain            1   13[BANK0 ] unsigned char 
  5388 ;;  val             1   12[BANK0 ] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      _Bool 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;Total ram usage:        4 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    8
  5405 ;; This function calls:
  5406 ;;		_wireReadDataByte
  5407 ;;		_wireWriteDataByte
  5408 ;; This function is called by:
  5409 ;;		_initialize
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           
  5414                           ;psect for function _setGestureGain
  5415  0342                     _setGestureGain:	
  5416                           
  5417                           ;incstack = 0
  5418                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  5419                           ;setGestureGain@gain stored from wreg
  5420  0342  0020               	movlb	0	; select bank0
  5421  0343  00DA               	movwf	setGestureGain@gain
  5422                           
  5423                           ;APDS9960.c: 319: _Bool setGestureGain(uint8_t gain);APDS9960.c: 320: {;APDS9960.c: 321:
      +                               uint8_t val;;APDS9960.c: 324:     val = wireReadDataByte(0xA3);
  5424  0344  30A3               	movlw	163
  5425  0345  3185  253F  3183   	fcall	_wireReadDataByte
  5426  0348  0020               	movlb	0	; select bank0
  5427  0349  00D7               	movwf	??_setGestureGain
  5428  034A  0857               	movf	??_setGestureGain,w
  5429  034B  00D9               	movwf	setGestureGain@val
  5430                           
  5431                           ;APDS9960.c: 328:     gain &= 0b00000011;
  5432  034C  3003               	movlw	3
  5433  034D  00D7               	movwf	??_setGestureGain
  5434  034E  0857               	movf	??_setGestureGain,w
  5435  034F  05DA               	andwf	setGestureGain@gain,f
  5436                           
  5437                           ;APDS9960.c: 329:     gain = gain << 5;
  5438  0350  085A               	movf	setGestureGain@gain,w
  5439  0351  00D7               	movwf	??_setGestureGain
  5440  0352  3004               	movlw	4
  5441  0353                     u3915:	
  5442  0353  35D7               	lslf	??_setGestureGain,f
  5443  0354  3EFF               	addlw	-1
  5444  0355  1D03               	skipz
  5445  0356  2B53               	goto	u3915
  5446  0357  3557               	lslf	??_setGestureGain,w
  5447  0358  00D8               	movwf	??_setGestureGain+1
  5448  0359  0858               	movf	??_setGestureGain+1,w
  5449  035A  00DA               	movwf	setGestureGain@gain
  5450                           
  5451                           ;APDS9960.c: 330:     val &= 0b10011111;
  5452  035B  309F               	movlw	159
  5453  035C  00D7               	movwf	??_setGestureGain
  5454  035D  0857               	movf	??_setGestureGain,w
  5455  035E  05D9               	andwf	setGestureGain@val,f
  5456                           
  5457                           ;APDS9960.c: 331:     val |= gain;
  5458  035F  085A               	movf	setGestureGain@gain,w
  5459  0360  00D7               	movwf	??_setGestureGain
  5460  0361  0857               	movf	??_setGestureGain,w
  5461  0362  04D9               	iorwf	setGestureGain@val,f
  5462                           
  5463                           ;APDS9960.c: 334:     if( !wireWriteDataByte(0xA3, val) ) {
  5464  0363  0859               	movf	setGestureGain@val,w
  5465  0364  00D7               	movwf	??_setGestureGain
  5466  0365  0857               	movf	??_setGestureGain,w
  5467  0366  00D3               	movwf	wireWriteDataByte@val
  5468  0367  30A3               	movlw	163
  5469  0368  3185  25BD  3183   	fcall	_wireWriteDataByte
  5470  036B  0020               	movlb	0	; select bank0
  5471  036C  0853               	movf	?_wireWriteDataByte,w
  5472  036D  0454               	iorwf	?_wireWriteDataByte+1,w
  5473  036E  1D03               	btfss	3,2
  5474  036F  2B72               	goto	l5148
  5475                           
  5476                           ;APDS9960.c: 335:         return 0;
  5477  0370  3000               	movlw	0
  5478  0371  0008               	return
  5479  0372                     l5148:	
  5480                           
  5481                           ;APDS9960.c: 338:     return 1;
  5482  0372  3001               	movlw	1
  5483  0373  0008               	return
  5484  0374                     __end_of_setGestureGain:	
  5485                           
  5486                           	psect	text12
  5487  0626                     __ptext12:	
  5488 ;; *************** function _setGestureExitThresh *****************
  5489 ;; Defined at:
  5490 ;;		line 309 in file "APDS9960.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  threshold       1    wreg     unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  threshold       1   11[BANK0 ] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      _Bool 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;Total ram usage:        2 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    8
  5511 ;; This function calls:
  5512 ;;		_wireWriteDataByte
  5513 ;; This function is called by:
  5514 ;;		_initialize
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _setGestureExitThresh
  5520  0626                     _setGestureExitThresh:	
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  5524                           ;setGestureExitThresh@threshold stored from wreg
  5525  0626  0020               	movlb	0	; select bank0
  5526  0627  00D8               	movwf	setGestureExitThresh@threshold
  5527                           
  5528                           ;APDS9960.c: 309: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 310: {;APDS9
      +                          960.c: 311:     if( !wireWriteDataByte(0xA1, threshold) ) {
  5529  0628  0858               	movf	setGestureExitThresh@threshold,w
  5530  0629  00D7               	movwf	??_setGestureExitThresh
  5531  062A  0857               	movf	??_setGestureExitThresh,w
  5532  062B  00D3               	movwf	wireWriteDataByte@val
  5533  062C  30A1               	movlw	161
  5534  062D  3185  25BD  3186   	fcall	_wireWriteDataByte
  5535  0630  0020               	movlb	0	; select bank0
  5536  0631  0853               	movf	?_wireWriteDataByte,w
  5537  0632  0454               	iorwf	?_wireWriteDataByte+1,w
  5538  0633  1D03               	btfss	3,2
  5539  0634  2E37               	goto	l5130
  5540                           
  5541                           ;APDS9960.c: 312:         return 0;
  5542  0635  3000               	movlw	0
  5543  0636  0008               	return
  5544  0637                     l5130:	
  5545                           
  5546                           ;APDS9960.c: 315:     return 1;
  5547  0637  3001               	movlw	1
  5548  0638  0008               	return
  5549  0639                     __end_of_setGestureExitThresh:	
  5550                           
  5551                           	psect	text13
  5552  0639                     __ptext13:	
  5553 ;; *************** function _setGestureEnterThresh *****************
  5554 ;; Defined at:
  5555 ;;		line 299 in file "APDS9960.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  threshold       1    wreg     unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  threshold       1   11[BANK0 ] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      _Bool 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0, pclath, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    8
  5576 ;; This function calls:
  5577 ;;		_wireWriteDataByte
  5578 ;; This function is called by:
  5579 ;;		_initialize
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function _setGestureEnterThresh
  5585  0639                     _setGestureEnterThresh:	
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  5589                           ;setGestureEnterThresh@threshold stored from wreg
  5590  0639  0020               	movlb	0	; select bank0
  5591  063A  00D8               	movwf	setGestureEnterThresh@threshold
  5592                           
  5593                           ;APDS9960.c: 299: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 300: {;APDS
      +                          9960.c: 301:     if( !wireWriteDataByte(0xA0, threshold) ) {
  5594  063B  0858               	movf	setGestureEnterThresh@threshold,w
  5595  063C  00D7               	movwf	??_setGestureEnterThresh
  5596  063D  0857               	movf	??_setGestureEnterThresh,w
  5597  063E  00D3               	movwf	wireWriteDataByte@val
  5598  063F  30A0               	movlw	160
  5599  0640  3185  25BD  3186   	fcall	_wireWriteDataByte
  5600  0643  0020               	movlb	0	; select bank0
  5601  0644  0853               	movf	?_wireWriteDataByte,w
  5602  0645  0454               	iorwf	?_wireWriteDataByte+1,w
  5603  0646  1D03               	btfss	3,2
  5604  0647  2E4A               	goto	l5120
  5605                           
  5606                           ;APDS9960.c: 302:         return 0;
  5607  0648  3000               	movlw	0
  5608  0649  0008               	return
  5609  064A                     l5120:	
  5610                           
  5611                           ;APDS9960.c: 305:     return 1;
  5612  064A  3001               	movlw	1
  5613  064B  0008               	return
  5614  064C                     __end_of_setGestureEnterThresh:	
  5615                           
  5616                           	psect	text14
  5617  0583                     __ptext14:	
  5618 ;; *************** function _setAmbientLightGain *****************
  5619 ;; Defined at:
  5620 ;;		line 212 in file "APDS9960.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  drive           1    wreg     unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  drive           1   11[BANK0 ] unsigned char 
  5625 ;;  val             1   12[BANK0 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      _Bool 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;Total ram usage:        3 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    8
  5642 ;; This function calls:
  5643 ;;		_wireReadDataByte
  5644 ;;		_wireWriteDataByte
  5645 ;; This function is called by:
  5646 ;;		_initialize
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _setAmbientLightGain
  5652  0583                     _setAmbientLightGain:	
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  5656                           ;setAmbientLightGain@drive stored from wreg
  5657  0583  0020               	movlb	0	; select bank0
  5658  0584  00D8               	movwf	setAmbientLightGain@drive
  5659                           
  5660                           ;APDS9960.c: 212: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 213: {;APDS9960.c
      +                          : 214:     uint8_t val;;APDS9960.c: 217:     val= wireReadDataByte(0x8F);
  5661  0585  308F               	movlw	143
  5662  0586  3185  253F  3185   	fcall	_wireReadDataByte
  5663  0589  0020               	movlb	0	; select bank0
  5664  058A  00D7               	movwf	??_setAmbientLightGain
  5665  058B  0857               	movf	??_setAmbientLightGain,w
  5666  058C  00D9               	movwf	setAmbientLightGain@val
  5667                           
  5668                           ;APDS9960.c: 220:     drive &= 0b00000011;
  5669  058D  3003               	movlw	3
  5670  058E  00D7               	movwf	??_setAmbientLightGain
  5671  058F  0857               	movf	??_setAmbientLightGain,w
  5672  0590  05D8               	andwf	setAmbientLightGain@drive,f
  5673                           
  5674                           ;APDS9960.c: 221:     val &= 0b11111100;
  5675  0591  30FC               	movlw	252
  5676  0592  00D7               	movwf	??_setAmbientLightGain
  5677  0593  0857               	movf	??_setAmbientLightGain,w
  5678  0594  05D9               	andwf	setAmbientLightGain@val,f
  5679                           
  5680                           ;APDS9960.c: 222:     val |= drive;
  5681  0595  0858               	movf	setAmbientLightGain@drive,w
  5682  0596  00D7               	movwf	??_setAmbientLightGain
  5683  0597  0857               	movf	??_setAmbientLightGain,w
  5684  0598  04D9               	iorwf	setAmbientLightGain@val,f
  5685                           
  5686                           ;APDS9960.c: 225:     if( !wireWriteDataByte(0x8F, val) ) {
  5687  0599  0859               	movf	setAmbientLightGain@val,w
  5688  059A  00D7               	movwf	??_setAmbientLightGain
  5689  059B  0857               	movf	??_setAmbientLightGain,w
  5690  059C  00D3               	movwf	wireWriteDataByte@val
  5691  059D  308F               	movlw	143
  5692  059E  3185  25BD         	fcall	_wireWriteDataByte
  5693  05A0  0008               	return
  5694  05A1                     __end_of_setAmbientLightGain:	
  5695                           
  5696                           	psect	text15
  5697  067E                     __ptext15:	
  5698 ;; *************** function _i2c1_driver_open *****************
  5699 ;; Defined at:
  5700 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;		None               void
  5707 ;; Registers used:
  5708 ;;		wreg, status,2
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    5
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_initialize
  5725 ;;		_i2c_open
  5726 ;;		_InitI2C
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _i2c1_driver_open
  5732  067E                     _i2c1_driver_open:	
  5733                           
  5734                           ;incstack = 0
  5735                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  5736  067E  0024               	movlb	4	; select bank4
  5737  067F  1A95               	btfsc	21,5	;volatile
  5738  0680  0008               	return
  5739  0681  0194               	clrf	20	;volatile
  5740  0682  3028               	movlw	40
  5741  0683  0095               	movwf	21	;volatile
  5742  0684  0196               	clrf	22	;volatile
  5743  0685  3003               	movlw	3
  5744  0686  0092               	movwf	18	;volatile
  5745  0687  0008               	return
  5746  0688                     __end_of_i2c1_driver_open:	
  5747                           
  5748                           	psect	text16
  5749  015C                     __ptext16:	
  5750 ;; *************** function _enableGestureSensor *****************
  5751 ;; Defined at:
  5752 ;;		line 408 in file "APDS9960.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  interrupts      1    wreg     _Bool 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  interrupts      1   17[BANK0 ] _Bool 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      _Bool 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;Total ram usage:        2 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:   11
  5773 ;; This function calls:
  5774 ;;		_enablePower
  5775 ;;		_resetGestureParameters
  5776 ;;		_setGestureIntEnable
  5777 ;;		_setGestureMode
  5778 ;;		_setLEDBoost
  5779 ;;		_setMode
  5780 ;;		_wireWriteDataByte
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           
  5787                           ;psect for function _enableGestureSensor
  5788  015C                     _enableGestureSensor:	
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  5792                           ;enableGestureSensor@interrupts stored from wreg
  5793  015C  0020               	movlb	0	; select bank0
  5794  015D  00DE               	movwf	enableGestureSensor@interrupts
  5795                           
  5796                           ;APDS9960.c: 408: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 409: {;APDS9
      +                          960.c: 417:     resetGestureParameters();
  5797  015E  3185  25D8  3181   	fcall	_resetGestureParameters
  5798                           
  5799                           ;APDS9960.c: 418:     if( !wireWriteDataByte(0x83, 0xFF) ) {
  5800  0161  30FF               	movlw	255
  5801  0162  0020               	movlb	0	; select bank0
  5802  0163  00DD               	movwf	??_enableGestureSensor
  5803  0164  085D               	movf	??_enableGestureSensor,w
  5804  0165  00D3               	movwf	wireWriteDataByte@val
  5805  0166  3083               	movlw	131
  5806  0167  3185  25BD  3181   	fcall	_wireWriteDataByte
  5807  016A  0020               	movlb	0	; select bank0
  5808  016B  0853               	movf	?_wireWriteDataByte,w
  5809  016C  0454               	iorwf	?_wireWriteDataByte+1,w
  5810  016D  1903               	btfsc	3,2
  5811  016E  2972               	goto	l5424
  5812  016F  2974               	goto	l5428
  5813  0170                     l5442:	
  5814                           
  5815                           ;APDS9960.c: 428:         if( !setGestureIntEnable(1) ) {
  5816  0170  3001               	movlw	1
  5817  0171  298D               	goto	L1
  5818  0172                     l5424:	
  5819                           
  5820                           ;APDS9960.c: 419:         return 0;
  5821  0172  3000               	movlw	0
  5822  0173  0008               	return
  5823  0174                     l5428:	
  5824                           
  5825                           ;APDS9960.c: 421:     if( !wireWriteDataByte(0x8E, 0x89) ) {
  5826  0174  3089               	movlw	137
  5827  0175  00DD               	movwf	??_enableGestureSensor
  5828  0176  085D               	movf	??_enableGestureSensor,w
  5829  0177  00D3               	movwf	wireWriteDataByte@val
  5830  0178  308E               	movlw	142
  5831  0179  3185  25BD  3181   	fcall	_wireWriteDataByte
  5832  017C  0020               	movlb	0	; select bank0
  5833  017D  0853               	movf	?_wireWriteDataByte,w
  5834  017E  0454               	iorwf	?_wireWriteDataByte+1,w
  5835  017F  1903               	btfsc	3,2
  5836  0180  2972               	goto	l5424
  5837                           
  5838                           ;APDS9960.c: 424:     if( !setLEDBoost(3) ) {
  5839  0181  3003               	movlw	3
  5840  0182  3183  2374  3181   	fcall	_setLEDBoost
  5841  0185  3A00               	xorlw	0
  5842  0186  1903               	btfsc	3,2
  5843  0187  2972               	goto	l5424
  5844                           
  5845                           ;APDS9960.c: 427:     if( interrupts ) {
  5846  0188  0020               	movlb	0	; select bank0
  5847  0189  085E               	movf	enableGestureSensor@interrupts,w
  5848  018A  1D03               	btfss	3,2
  5849  018B  2970               	goto	l5442
  5850                           
  5851                           ;APDS9960.c: 432:         if( !setGestureIntEnable(0) ) {
  5852  018C  3000               	movlw	0
  5853  018D                     L1:	
  5854  018D  3183  23D6  3181   	fcall	_setGestureIntEnable
  5855  0190  3A00               	xorlw	0
  5856  0191  1903               	btfsc	3,2
  5857  0192  2972               	goto	l5424
  5858                           
  5859                           ;APDS9960.c: 436:     if( !setGestureMode(1) ) {
  5860  0193  3001               	movlw	1
  5861  0194  3184  24F2  3181   	fcall	_setGestureMode
  5862  0197  3A00               	xorlw	0
  5863  0198  1903               	btfsc	3,2
  5864  0199  2972               	goto	l5424
  5865                           
  5866                           ;APDS9960.c: 439:     if( !enablePower() ){
  5867  019A  3186  264C  3181   	fcall	_enablePower
  5868  019D  3A00               	xorlw	0
  5869  019E  1903               	btfsc	3,2
  5870  019F  2972               	goto	l5424
  5871                           
  5872                           ;APDS9960.c: 442:     if( !setMode(3, 1) ) {
  5873  01A0  0020               	movlb	0	; select bank0
  5874  01A1  01D8               	clrf	setMode@enable
  5875  01A2  0AD8               	incf	setMode@enable,f
  5876  01A3  3003               	movlw	3
  5877  01A4  3181  21C0  3181   	fcall	_setMode
  5878  01A7  3A00               	xorlw	0
  5879  01A8  1903               	btfsc	3,2
  5880  01A9  2972               	goto	l5424
  5881                           
  5882                           ;APDS9960.c: 445:     if( !setMode(2, 1) ) {
  5883  01AA  0020               	movlb	0	; select bank0
  5884  01AB  01D8               	clrf	setMode@enable
  5885  01AC  0AD8               	incf	setMode@enable,f
  5886  01AD  3002               	movlw	2
  5887  01AE  3181  21C0  3181   	fcall	_setMode
  5888  01B1  3A00               	xorlw	0
  5889  01B2  1903               	btfsc	3,2
  5890  01B3  2972               	goto	l5424
  5891                           
  5892                           ;APDS9960.c: 448:     if( !setMode(6, 1) ) {
  5893  01B4  0020               	movlb	0	; select bank0
  5894  01B5  01D8               	clrf	setMode@enable
  5895  01B6  0AD8               	incf	setMode@enable,f
  5896  01B7  3006               	movlw	6
  5897  01B8  3181  21C0  3181   	fcall	_setMode
  5898  01BB  3A00               	xorlw	0
  5899  01BC  1903               	btfsc	3,2
  5900  01BD  2972               	goto	l5424
  5901                           
  5902                           ;APDS9960.c: 452:     return 1;
  5903  01BE  3001               	movlw	1
  5904  01BF  0008               	return
  5905  01C0                     __end_of_enableGestureSensor:	
  5906                           
  5907                           	psect	text17
  5908  0374                     __ptext17:	
  5909 ;; *************** function _setLEDBoost *****************
  5910 ;; Defined at:
  5911 ;;		line 483 in file "APDS9960.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  boost           1    wreg     unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  boost           1   13[BANK0 ] unsigned char 
  5916 ;;  val             1   12[BANK0 ] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      _Bool 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0, pclath, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;Total ram usage:        4 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    8
  5933 ;; This function calls:
  5934 ;;		_wireReadDataByte
  5935 ;;		_wireWriteDataByte
  5936 ;; This function is called by:
  5937 ;;		_enableGestureSensor
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _setLEDBoost
  5943  0374                     _setLEDBoost:	
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  5947                           ;setLEDBoost@boost stored from wreg
  5948  0374  0020               	movlb	0	; select bank0
  5949  0375  00DA               	movwf	setLEDBoost@boost
  5950                           
  5951                           ;APDS9960.c: 483: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 484: {;APDS9960.c: 485:  
      +                             uint8_t val;;APDS9960.c: 488:     val=wireReadDataByte(0x90);
  5952  0376  3090               	movlw	144
  5953  0377  3185  253F  3183   	fcall	_wireReadDataByte
  5954  037A  0020               	movlb	0	; select bank0
  5955  037B  00D7               	movwf	??_setLEDBoost
  5956  037C  0857               	movf	??_setLEDBoost,w
  5957  037D  00D9               	movwf	setLEDBoost@val
  5958                           
  5959                           ;APDS9960.c: 491:     boost &= 0b00000011;
  5960  037E  3003               	movlw	3
  5961  037F  00D7               	movwf	??_setLEDBoost
  5962  0380  0857               	movf	??_setLEDBoost,w
  5963  0381  05DA               	andwf	setLEDBoost@boost,f
  5964                           
  5965                           ;APDS9960.c: 492:     boost = boost << 4;
  5966  0382  085A               	movf	setLEDBoost@boost,w
  5967  0383  00D7               	movwf	??_setLEDBoost
  5968  0384  3003               	movlw	3
  5969  0385                     u3975:	
  5970  0385  35D7               	lslf	??_setLEDBoost,f
  5971  0386  3EFF               	addlw	-1
  5972  0387  1D03               	skipz
  5973  0388  2B85               	goto	u3975
  5974  0389  3557               	lslf	??_setLEDBoost,w
  5975  038A  00D8               	movwf	??_setLEDBoost+1
  5976  038B  0858               	movf	??_setLEDBoost+1,w
  5977  038C  00DA               	movwf	setLEDBoost@boost
  5978                           
  5979                           ;APDS9960.c: 493:     val &= 0b11001111;
  5980  038D  30CF               	movlw	207
  5981  038E  00D7               	movwf	??_setLEDBoost
  5982  038F  0857               	movf	??_setLEDBoost,w
  5983  0390  05D9               	andwf	setLEDBoost@val,f
  5984                           
  5985                           ;APDS9960.c: 494:     val |= boost;
  5986  0391  085A               	movf	setLEDBoost@boost,w
  5987  0392  00D7               	movwf	??_setLEDBoost
  5988  0393  0857               	movf	??_setLEDBoost,w
  5989  0394  04D9               	iorwf	setLEDBoost@val,f
  5990                           
  5991                           ;APDS9960.c: 497:     if( !wireWriteDataByte(0x90, val) ) {
  5992  0395  0859               	movf	setLEDBoost@val,w
  5993  0396  00D7               	movwf	??_setLEDBoost
  5994  0397  0857               	movf	??_setLEDBoost,w
  5995  0398  00D3               	movwf	wireWriteDataByte@val
  5996  0399  3090               	movlw	144
  5997  039A  3185  25BD  3183   	fcall	_wireWriteDataByte
  5998  039D  0020               	movlb	0	; select bank0
  5999  039E  0853               	movf	?_wireWriteDataByte,w
  6000  039F  0454               	iorwf	?_wireWriteDataByte+1,w
  6001  03A0  1D03               	btfss	3,2
  6002  03A1  2BA4               	goto	l5222
  6003                           
  6004                           ;APDS9960.c: 498:         return 0;
  6005  03A2  3000               	movlw	0
  6006  03A3  0008               	return
  6007  03A4                     l5222:	
  6008                           
  6009                           ;APDS9960.c: 501:     return 1;
  6010  03A4  3001               	movlw	1
  6011  03A5  0008               	return
  6012  03A6                     __end_of_setLEDBoost:	
  6013                           
  6014                           	psect	text18
  6015  04F2                     __ptext18:	
  6016 ;; *************** function _setGestureMode *****************
  6017 ;; Defined at:
  6018 ;;		line 505 in file "APDS9960.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  mode            1    wreg     unsigned char 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  mode            1   11[BANK0 ] unsigned char 
  6023 ;;  val             1   12[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      _Bool 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:        3 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    8
  6040 ;; This function calls:
  6041 ;;		_wireReadDataByte
  6042 ;;		_wireWriteDataByte
  6043 ;; This function is called by:
  6044 ;;		_enableGestureSensor
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           
  6049                           ;psect for function _setGestureMode
  6050  04F2                     _setGestureMode:	
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  6054                           ;setGestureMode@mode stored from wreg
  6055  04F2  0020               	movlb	0	; select bank0
  6056  04F3  00D8               	movwf	setGestureMode@mode
  6057                           
  6058                           ;APDS9960.c: 505: _Bool setGestureMode(uint8_t mode);APDS9960.c: 506: {;APDS9960.c: 507:
      +                               uint8_t val;;APDS9960.c: 510:     val = wireReadDataByte(0xAB);
  6059  04F4  30AB               	movlw	171
  6060  04F5  3185  253F  3184   	fcall	_wireReadDataByte
  6061  04F8  0020               	movlb	0	; select bank0
  6062  04F9  00D7               	movwf	??_setGestureMode
  6063  04FA  0857               	movf	??_setGestureMode,w
  6064  04FB  00D9               	movwf	setGestureMode@val
  6065                           
  6066                           ;APDS9960.c: 513:     mode &= 0b00000001;
  6067  04FC  3001               	movlw	1
  6068  04FD  00D7               	movwf	??_setGestureMode
  6069  04FE  0857               	movf	??_setGestureMode,w
  6070  04FF  05D8               	andwf	setGestureMode@mode,f
  6071                           
  6072                           ;APDS9960.c: 514:     val &= 0b11111110;
  6073  0500  30FE               	movlw	254
  6074  0501  00D7               	movwf	??_setGestureMode
  6075  0502  0857               	movf	??_setGestureMode,w
  6076  0503  05D9               	andwf	setGestureMode@val,f
  6077                           
  6078                           ;APDS9960.c: 515:     val |= mode;
  6079  0504  0858               	movf	setGestureMode@mode,w
  6080  0505  00D7               	movwf	??_setGestureMode
  6081  0506  0857               	movf	??_setGestureMode,w
  6082  0507  04D9               	iorwf	setGestureMode@val,f
  6083                           
  6084                           ;APDS9960.c: 518:     if( !wireWriteDataByte(0xAB, val) ) {
  6085  0508  0859               	movf	setGestureMode@val,w
  6086  0509  00D7               	movwf	??_setGestureMode
  6087  050A  0857               	movf	??_setGestureMode,w
  6088  050B  00D3               	movwf	wireWriteDataByte@val
  6089  050C  30AB               	movlw	171
  6090  050D  3185  25BD  3184   	fcall	_wireWriteDataByte
  6091  0510  0020               	movlb	0	; select bank0
  6092  0511  0853               	movf	?_wireWriteDataByte,w
  6093  0512  0454               	iorwf	?_wireWriteDataByte+1,w
  6094  0513  1D03               	btfss	3,2
  6095  0514  2D17               	goto	l5240
  6096                           
  6097                           ;APDS9960.c: 519:         return 0;
  6098  0515  3000               	movlw	0
  6099  0516  0008               	return
  6100  0517                     l5240:	
  6101                           
  6102                           ;APDS9960.c: 522:     return 1;
  6103  0517  3001               	movlw	1
  6104  0518  0008               	return
  6105  0519                     __end_of_setGestureMode:	
  6106                           
  6107                           	psect	text19
  6108  03D6                     __ptext19:	
  6109 ;; *************** function _setGestureIntEnable *****************
  6110 ;; Defined at:
  6111 ;;		line 386 in file "APDS9960.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  enable          1    wreg     unsigned char 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  enable          1   12[BANK0 ] unsigned char 
  6116 ;;  val             1   11[BANK0 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      _Bool 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, pclath, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;Total ram usage:        3 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    8
  6133 ;; This function calls:
  6134 ;;		_wireReadDataByte
  6135 ;;		_wireWriteDataByte
  6136 ;; This function is called by:
  6137 ;;		_initialize
  6138 ;;		_enableGestureSensor
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function _setGestureIntEnable
  6144  03D6                     _setGestureIntEnable:	
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  6148                           ;setGestureIntEnable@enable stored from wreg
  6149  03D6  0020               	movlb	0	; select bank0
  6150  03D7  00D9               	movwf	setGestureIntEnable@enable
  6151                           
  6152                           ;APDS9960.c: 386: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 387: {;APDS9960.
      +                          c: 388:     uint8_t val;;APDS9960.c: 391:     val = wireReadDataByte(0xAB);
  6153  03D8  30AB               	movlw	171
  6154  03D9  3185  253F  3183   	fcall	_wireReadDataByte
  6155  03DC  0020               	movlb	0	; select bank0
  6156  03DD  00D7               	movwf	??_setGestureIntEnable
  6157  03DE  0857               	movf	??_setGestureIntEnable,w
  6158  03DF  00D8               	movwf	setGestureIntEnable@val
  6159                           
  6160                           ;APDS9960.c: 394:     enable &= 0b00000001;
  6161  03E0  3001               	movlw	1
  6162  03E1  00D7               	movwf	??_setGestureIntEnable
  6163  03E2  0857               	movf	??_setGestureIntEnable,w
  6164  03E3  05D9               	andwf	setGestureIntEnable@enable,f
  6165                           
  6166                           ;APDS9960.c: 395:     enable = enable << 1;
  6167  03E4  3559               	lslf	setGestureIntEnable@enable,w
  6168  03E5  00D7               	movwf	??_setGestureIntEnable
  6169  03E6  0857               	movf	??_setGestureIntEnable,w
  6170  03E7  00D9               	movwf	setGestureIntEnable@enable
  6171                           
  6172                           ;APDS9960.c: 396:     val &= 0b11111101;
  6173  03E8  30FD               	movlw	253
  6174  03E9  00D7               	movwf	??_setGestureIntEnable
  6175  03EA  0857               	movf	??_setGestureIntEnable,w
  6176  03EB  05D8               	andwf	setGestureIntEnable@val,f
  6177                           
  6178                           ;APDS9960.c: 397:     val |= enable;
  6179  03EC  0859               	movf	setGestureIntEnable@enable,w
  6180  03ED  00D7               	movwf	??_setGestureIntEnable
  6181  03EE  0857               	movf	??_setGestureIntEnable,w
  6182  03EF  04D8               	iorwf	setGestureIntEnable@val,f
  6183                           
  6184                           ;APDS9960.c: 400:     if( !wireWriteDataByte(0xAB, val) ) {
  6185  03F0  0858               	movf	setGestureIntEnable@val,w
  6186  03F1  00D7               	movwf	??_setGestureIntEnable
  6187  03F2  0857               	movf	??_setGestureIntEnable,w
  6188  03F3  00D3               	movwf	wireWriteDataByte@val
  6189  03F4  30AB               	movlw	171
  6190  03F5  3185  25BD  3183   	fcall	_wireWriteDataByte
  6191  03F8  0020               	movlb	0	; select bank0
  6192  03F9  0853               	movf	?_wireWriteDataByte,w
  6193  03FA  0454               	iorwf	?_wireWriteDataByte+1,w
  6194  03FB  1D03               	btfss	3,2
  6195  03FC  2BFF               	goto	l5202
  6196                           
  6197                           ;APDS9960.c: 401:         return 0;
  6198  03FD  3000               	movlw	0
  6199  03FE  0008               	return
  6200  03FF                     l5202:	
  6201                           
  6202                           ;APDS9960.c: 404:     return 1;
  6203  03FF  3001               	movlw	1
  6204  0400  0008               	return
  6205  0401                     __end_of_setGestureIntEnable:	
  6206                           
  6207                           	psect	text20
  6208  05D8                     __ptext20:	
  6209 ;; *************** function _resetGestureParameters *****************
  6210 ;; Defined at:
  6211 ;;		line 456 in file "APDS9960.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		status,2
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    5
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_enableGestureSensor
  6236 ;;		_readGesture
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _resetGestureParameters
  6242  05D8                     _resetGestureParameters:	
  6243                           
  6244                           ;APDS9960.c: 459:     gesture_data_.index = 0;
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in _resetGestureParameters: [status,2]
  6248  05D8  0021               	movlb	1	; select bank1
  6249  05D9  01E0               	clrf	(_gesture_data_^(0+128)+64)
  6250                           
  6251                           ;APDS9960.c: 460:     gesture_data_.total_gestures = 0;
  6252  05DA  01E1               	clrf	(_gesture_data_^(0+128)+65)
  6253                           
  6254                           ;APDS9960.c: 462:     gesture_ud_delta_ = 0;
  6255  05DB  01F4               	clrf	_gesture_ud_delta_
  6256  05DC  01F5               	clrf	_gesture_ud_delta_+1
  6257                           
  6258                           ;APDS9960.c: 463:     gesture_lr_delta_ = 0;
  6259  05DD  01F2               	clrf	_gesture_lr_delta_
  6260  05DE  01F3               	clrf	_gesture_lr_delta_+1
  6261                           
  6262                           ;APDS9960.c: 465:     gesture_ud_count_ = 0;
  6263  05DF  01F0               	clrf	_gesture_ud_count_
  6264  05E0  01F1               	clrf	_gesture_ud_count_+1
  6265                           
  6266                           ;APDS9960.c: 466:     gesture_lr_count_ = 0;
  6267  05E1  0020               	movlb	0	; select bank0
  6268  05E2  01C5               	clrf	_gesture_lr_count_
  6269  05E3  01C6               	clrf	_gesture_lr_count_+1
  6270                           
  6271                           ;APDS9960.c: 468:     gesture_near_count_ = 0;
  6272  05E4  01C3               	clrf	_gesture_near_count_
  6273  05E5  01C4               	clrf	_gesture_near_count_+1
  6274                           
  6275                           ;APDS9960.c: 469:     gesture_far_count_ = 0;
  6276  05E6  01C1               	clrf	_gesture_far_count_
  6277  05E7  01C2               	clrf	_gesture_far_count_+1
  6278                           
  6279                           ;APDS9960.c: 471:     gesture_state_ = 0;
  6280  05E8  01BF               	clrf	_gesture_state_
  6281  05E9  01C0               	clrf	_gesture_state_+1
  6282                           
  6283                           ;APDS9960.c: 472:     gesture_motion_ = DIR_NONE;
  6284  05EA  01BD               	clrf	_gesture_motion_
  6285  05EB  01BE               	clrf	_gesture_motion_+1
  6286  05EC  0008               	return
  6287  05ED                     __end_of_resetGestureParameters:	
  6288                           
  6289                           	psect	text21
  6290  064C                     __ptext21:	
  6291 ;; *************** function _enablePower *****************
  6292 ;; Defined at:
  6293 ;;		line 526 in file "APDS9960.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      _Bool 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, pclath, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:   10
  6314 ;; This function calls:
  6315 ;;		_setMode
  6316 ;; This function is called by:
  6317 ;;		_enableGestureSensor
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _enablePower
  6323  064C                     _enablePower:	
  6324                           
  6325                           ;APDS9960.c: 528:     if( !setMode(0, 1) ) {
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  6329  064C  0020               	movlb	0	; select bank0
  6330  064D  01D8               	clrf	setMode@enable
  6331  064E  0AD8               	incf	setMode@enable,f
  6332  064F  3000               	movlw	0
  6333  0650  3181  21C0  3186   	fcall	_setMode
  6334  0653  3A00               	xorlw	0
  6335  0654  1D03               	skipz
  6336  0655  2E58               	goto	l5250
  6337                           
  6338                           ;APDS9960.c: 529:         return 0;
  6339  0656  3000               	movlw	0
  6340  0657  0008               	return
  6341  0658                     l5250:	
  6342                           
  6343                           ;APDS9960.c: 532:     return 1;
  6344  0658  3001               	movlw	1
  6345  0659  0008               	return
  6346  065A                     __end_of_enablePower:	
  6347                           
  6348                           	psect	text22
  6349  01C0                     __ptext22:	
  6350 ;; *************** function _setMode *****************
  6351 ;; Defined at:
  6352 ;;		line 123 in file "APDS9960.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  mode            1    wreg     unsigned char 
  6355 ;;  enable          1   11[BANK0 ] unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  mode            1   15[BANK0 ] unsigned char 
  6358 ;;  reg_val         1   14[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      _Bool 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6368 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;Total ram usage:        5 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    9
  6375 ;; This function calls:
  6376 ;;		_getMode
  6377 ;;		_wireWriteDataByte
  6378 ;; This function is called by:
  6379 ;;		_initialize
  6380 ;;		_enableGestureSensor
  6381 ;;		_enablePower
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function _setMode
  6387  01C0                     _setMode:	
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  6391                           ;setMode@mode stored from wreg
  6392  01C0  0020               	movlb	0	; select bank0
  6393  01C1  00DC               	movwf	setMode@mode
  6394                           
  6395                           ;APDS9960.c: 123: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 124: {;APDS996
      +                          0.c: 125:     uint8_t reg_val;;APDS9960.c: 128:     reg_val = getMode();
  6396  01C2  3186  2688  3181   	fcall	_getMode
  6397  01C5  0020               	movlb	0	; select bank0
  6398  01C6  00D9               	movwf	??_setMode
  6399  01C7  0859               	movf	??_setMode,w
  6400  01C8  00DB               	movwf	setMode@reg_val
  6401                           
  6402                           ;APDS9960.c: 129:     if( reg_val == 0xFF ) {
  6403  01C9  0A5B               	incf	setMode@reg_val,w
  6404  01CA  1D03               	btfss	3,2
  6405  01CB  29CE               	goto	l4926
  6406  01CC                     l4922:	
  6407                           
  6408                           ;APDS9960.c: 130:         return 0;
  6409  01CC  3000               	movlw	0
  6410  01CD  0008               	return
  6411  01CE                     l4926:	
  6412                           
  6413                           ;APDS9960.c: 134:     enable = enable & 0x01;
  6414  01CE  0858               	movf	setMode@enable,w
  6415  01CF  3901               	andlw	1
  6416  01D0  00D9               	movwf	??_setMode
  6417  01D1  0859               	movf	??_setMode,w
  6418  01D2  00D8               	movwf	setMode@enable
  6419                           
  6420                           ;APDS9960.c: 135:     if( mode >= 0 && mode <= 6 ) {
  6421  01D3  3007               	movlw	7
  6422  01D4  025C               	subwf	setMode@mode,w
  6423  01D5  1803               	skipnc
  6424  01D6  29F3               	goto	l4936
  6425                           
  6426                           ;APDS9960.c: 136:         if (enable) {
  6427  01D7  0858               	movf	setMode@enable,w
  6428  01D8  1903               	btfsc	3,2
  6429  01D9  29E6               	goto	l4934
  6430                           
  6431                           ;APDS9960.c: 137:             reg_val |= (1 << mode);
  6432  01DA  3001               	movlw	1
  6433  01DB  00D9               	movwf	??_setMode
  6434  01DC  0A5C               	incf	setMode@mode,w
  6435  01DD  29DF               	goto	u3754
  6436  01DE                     u3755:	
  6437  01DE  35D9               	lslf	??_setMode,f
  6438  01DF                     u3754:	
  6439  01DF  0B89               	decfsz	9,f
  6440  01E0  29DE               	goto	u3755
  6441  01E1  0859               	movf	??_setMode,w
  6442  01E2  00DA               	movwf	??_setMode+1
  6443  01E3  085A               	movf	??_setMode+1,w
  6444  01E4  04DB               	iorwf	setMode@reg_val,f
  6445                           
  6446                           ;APDS9960.c: 138:         } else {
  6447  01E5  2A00               	goto	l4944
  6448  01E6                     l4934:	
  6449                           
  6450                           ;APDS9960.c: 139:             reg_val &= ~(1 << mode);
  6451  01E6  3001               	movlw	1
  6452  01E7  00D9               	movwf	??_setMode
  6453  01E8  0A5C               	incf	setMode@mode,w
  6454  01E9  29EB               	goto	u3764
  6455  01EA                     u3765:	
  6456  01EA  35D9               	lslf	??_setMode,f
  6457  01EB                     u3764:	
  6458  01EB  0B89               	decfsz	9,f
  6459  01EC  29EA               	goto	u3765
  6460  01ED  0859               	movf	??_setMode,w
  6461  01EE  3AFF               	xorlw	255
  6462  01EF  00DA               	movwf	??_setMode+1
  6463  01F0  085A               	movf	??_setMode+1,w
  6464  01F1  05DB               	andwf	setMode@reg_val,f
  6465  01F2  2A00               	goto	l4944
  6466  01F3                     l4936:	
  6467  01F3  3007               	movlw	7
  6468  01F4  065C               	xorwf	setMode@mode,w
  6469  01F5  1D03               	btfss	3,2
  6470  01F6  2A00               	goto	l4944
  6471                           
  6472                           ;APDS9960.c: 142:         if (enable) {
  6473  01F7  0858               	movf	setMode@enable,w
  6474  01F8  1903               	btfsc	3,2
  6475  01F9  29FF               	goto	l4942
  6476                           
  6477                           ;APDS9960.c: 143:             reg_val = 0x7F;
  6478  01FA  307F               	movlw	127
  6479  01FB  00D9               	movwf	??_setMode
  6480  01FC  0859               	movf	??_setMode,w
  6481  01FD  00DB               	movwf	setMode@reg_val
  6482                           
  6483                           ;APDS9960.c: 144:         } else {
  6484  01FE  2A00               	goto	l4944
  6485  01FF                     l4942:	
  6486                           
  6487                           ;APDS9960.c: 145:             reg_val = 0x00;
  6488  01FF  01DB               	clrf	setMode@reg_val
  6489  0200                     l4944:	
  6490                           
  6491                           ;APDS9960.c: 150:     if( !wireWriteDataByte(0x80, reg_val) ) {
  6492  0200  085B               	movf	setMode@reg_val,w
  6493  0201  00D9               	movwf	??_setMode
  6494  0202  0859               	movf	??_setMode,w
  6495  0203  00D3               	movwf	wireWriteDataByte@val
  6496  0204  3080               	movlw	128
  6497  0205  3185  25BD  3181   	fcall	_wireWriteDataByte
  6498  0208  0020               	movlb	0	; select bank0
  6499  0209  0853               	movf	?_wireWriteDataByte,w
  6500  020A  0454               	iorwf	?_wireWriteDataByte+1,w
  6501  020B  1903               	btfsc	3,2
  6502  020C  29CC               	goto	l4922
  6503                           
  6504                           ;APDS9960.c: 154:     return 1;
  6505  020D  3001               	movlw	1
  6506  020E  0008               	return
  6507  020F                     __end_of_setMode:	
  6508                           
  6509                           	psect	text23
  6510  05BD                     __ptext23:	
  6511 ;; *************** function _wireWriteDataByte *****************
  6512 ;; Defined at:
  6513 ;;		line 870 in file "APDS9960.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  reg             1    wreg     unsigned char 
  6516 ;;  val             1    6[BANK0 ] unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  reg             1    9[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  2    6[BANK0 ] int 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6528 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;Total ram usage:        4 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    7
  6535 ;; This function calls:
  6536 ;;		_I2C_Start
  6537 ;;		_I2C_Stop
  6538 ;;		_I2C_Write_Byte
  6539 ;; This function is called by:
  6540 ;;		_initialize
  6541 ;;		_setMode
  6542 ;;		_setLEDDrive
  6543 ;;		_setProximityGain
  6544 ;;		_setAmbientLightGain
  6545 ;;		_setProxIntLowThresh
  6546 ;;		_setProxIntHighThresh
  6547 ;;		_setLightIntLowThreshold
  6548 ;;		_setLightIntHighThreshold
  6549 ;;		_setGestureEnterThresh
  6550 ;;		_setGestureExitThresh
  6551 ;;		_setGestureGain
  6552 ;;		_setGestureLEDDrive
  6553 ;;		_setGestureWaitTime
  6554 ;;		_setGestureIntEnable
  6555 ;;		_enableGestureSensor
  6556 ;;		_setLEDBoost
  6557 ;;		_setGestureMode
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _wireWriteDataByte
  6563  05BD                     _wireWriteDataByte:	
  6564                           
  6565                           ;incstack = 0
  6566                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  6567                           ;wireWriteDataByte@reg stored from wreg
  6568  05BD  0020               	movlb	0	; select bank0
  6569  05BE  00D6               	movwf	wireWriteDataByte@reg
  6570                           
  6571                           ;APDS9960.c: 870: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 871: {;APDS9960.c: 881:     I2C_Start();
  6572  05BF  3187  2725  3185   	fcall	_I2C_Start
  6573                           
  6574                           ;APDS9960.c: 882:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  6575  05C2  3072               	movlw	114
  6576  05C3  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6577                           
  6578                           ;APDS9960.c: 883:     I2C_Write_Byte(reg);
  6579  05C6  0020               	movlb	0	; select bank0
  6580  05C7  0856               	movf	wireWriteDataByte@reg,w
  6581  05C8  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6582                           
  6583                           ;APDS9960.c: 884:     I2C_Write_Byte(val);
  6584  05CB  0020               	movlb	0	; select bank0
  6585  05CC  0853               	movf	wireWriteDataByte@val,w
  6586  05CD  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6587                           
  6588                           ;APDS9960.c: 885:     I2C_Stop();
  6589  05D0  3187  271F         	fcall	_I2C_Stop
  6590                           
  6591                           ;APDS9960.c: 888:     return 1;
  6592  05D2  3001               	movlw	1
  6593  05D3  0020               	movlb	0	; select bank0
  6594  05D4  00D3               	movwf	?_wireWriteDataByte
  6595  05D5  3000               	movlw	0
  6596  05D6  00D4               	movwf	?_wireWriteDataByte+1
  6597  05D7  0008               	return
  6598  05D8                     __end_of_wireWriteDataByte:	
  6599                           
  6600                           	psect	text24
  6601  0688                     __ptext24:	
  6602 ;; *************** function _getMode *****************
  6603 ;; Defined at:
  6604 ;;		line 158 in file "APDS9960.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;		None
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  enable_value    1   10[BANK0 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      unsigned char 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, pclath, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;Total ram usage:        2 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    8
  6625 ;; This function calls:
  6626 ;;		_wireReadDataByte
  6627 ;; This function is called by:
  6628 ;;		_setMode
  6629 ;;		_readGesture
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           
  6634                           ;psect for function _getMode
  6635  0688                     _getMode:	
  6636                           
  6637                           ;APDS9960.c: 160:     uint8_t enable_value;;APDS9960.c: 163:     enable_value = wireRead
      +                          DataByte(0x80);
  6638                           
  6639                           ;incstack = 0
  6640                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  6641  0688  3080               	movlw	128
  6642  0689  3185  253F         	fcall	_wireReadDataByte
  6643  068B  0020               	movlb	0	; select bank0
  6644  068C  00D6               	movwf	??_getMode
  6645  068D  0856               	movf	??_getMode,w
  6646  068E  00D7               	movwf	getMode@enable_value
  6647                           
  6648                           ;APDS9960.c: 165:     return enable_value;
  6649  068F  0857               	movf	getMode@enable_value,w
  6650  0690  0008               	return
  6651  0691                     __end_of_getMode:	
  6652                           
  6653                           	psect	text25
  6654  053F                     __ptext25:	
  6655 ;; *************** function _wireReadDataByte *****************
  6656 ;; Defined at:
  6657 ;;		line 892 in file "APDS9960.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  reg             1    wreg     unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  reg             1    7[BANK0 ] unsigned char 
  6662 ;;  val             1    8[BANK0 ] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      unsigned char 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0, pclath, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;Total ram usage:        3 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    7
  6679 ;; This function calls:
  6680 ;;		_I2C_ReStart
  6681 ;;		_I2C_Read_Byte
  6682 ;;		_I2C_Send_NACK
  6683 ;;		_I2C_Start
  6684 ;;		_I2C_Stop
  6685 ;;		_I2C_Write_Byte
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;;		_initialize
  6689 ;;		_getMode
  6690 ;;		_setLEDDrive
  6691 ;;		_setProximityGain
  6692 ;;		_setAmbientLightGain
  6693 ;;		_setGestureGain
  6694 ;;		_setGestureLEDDrive
  6695 ;;		_setGestureWaitTime
  6696 ;;		_setGestureIntEnable
  6697 ;;		_setLEDBoost
  6698 ;;		_setGestureMode
  6699 ;;		_isGestureAvailable
  6700 ;;		_readGesture
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _wireReadDataByte
  6706  053F                     _wireReadDataByte:	
  6707                           
  6708                           ;incstack = 0
  6709                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  6710                           ;wireReadDataByte@reg stored from wreg
  6711  053F  0020               	movlb	0	; select bank0
  6712  0540  00D4               	movwf	wireReadDataByte@reg
  6713                           
  6714                           ;APDS9960.c: 892:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 893: {;
      +                          APDS9960.c: 907:     unsigned char val;;APDS9960.c: 908:     I2C_Start();
  6715  0541  3187  2725  3185   	fcall	_I2C_Start
  6716                           
  6717                           ;APDS9960.c: 909:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  6718  0544  3072               	movlw	114
  6719  0545  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6720                           
  6721                           ;APDS9960.c: 910:     I2C_Write_Byte(reg);
  6722  0548  0020               	movlb	0	; select bank0
  6723  0549  0854               	movf	wireReadDataByte@reg,w
  6724  054A  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6725                           
  6726                           ;APDS9960.c: 911:     I2C_ReStart();
  6727  054D  3187  2734  3185   	fcall	_I2C_ReStart
  6728                           
  6729                           ;APDS9960.c: 913:     I2C_Write_Byte((0x39 << 1) | 0x01);
  6730  0550  3073               	movlw	115
  6731  0551  3185  25A1  3185   	fcall	_I2C_Write_Byte
  6732                           
  6733                           ;APDS9960.c: 914:     val=I2C_Read_Byte();
  6734  0554  3186  2673  3185   	fcall	_I2C_Read_Byte
  6735  0557  0020               	movlb	0	; select bank0
  6736  0558  00D3               	movwf	??_wireReadDataByte
  6737  0559  0853               	movf	??_wireReadDataByte,w
  6738  055A  00D5               	movwf	wireReadDataByte@val
  6739                           
  6740                           ;APDS9960.c: 915:     I2C_Send_NACK();
  6741  055B  3187  272B  3185   	fcall	_I2C_Send_NACK
  6742                           
  6743                           ;APDS9960.c: 916:     I2C_Stop();
  6744  055E  3187  271F         	fcall	_I2C_Stop
  6745                           
  6746                           ;APDS9960.c: 918:     return val;
  6747  0560  0020               	movlb	0	; select bank0
  6748  0561  0855               	movf	wireReadDataByte@val,w
  6749  0562  0008               	return
  6750  0563                     __end_of_wireReadDataByte:	
  6751                           
  6752                           	psect	text26
  6753  05A1                     __ptext26:	
  6754 ;; *************** function _I2C_Write_Byte *****************
  6755 ;; Defined at:
  6756 ;;		line 75 in file "i2c.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  Byte            1    wreg     unsigned char 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  Byte            1    3[BANK0 ] unsigned char 
  6761 ;;  count           2    4[BANK0 ] unsigned int 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0, pclath, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;Total ram usage:        5 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    6
  6778 ;; This function calls:
  6779 ;;		_i2c1_driver_TXData
  6780 ;; This function is called by:
  6781 ;;		_wireWriteDataByte
  6782 ;;		_wireReadDataByte
  6783 ;;		_wireReadDataBlock
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function _I2C_Write_Byte
  6789  05A1                     _I2C_Write_Byte:	
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  6793                           ;I2C_Write_Byte@Byte stored from wreg
  6794  05A1  0020               	movlb	0	; select bank0
  6795  05A2  00D0               	movwf	I2C_Write_Byte@Byte
  6796                           
  6797                           ;i2c.c: 75: void I2C_Write_Byte(unsigned char Byte);i2c.c: 76: {;i2c.c: 80:     i2c1_dri
      +                          ver_TXData(Byte);
  6798  05A3  0850               	movf	I2C_Write_Byte@Byte,w
  6799  05A4  3186  26CD  3185   	fcall	_i2c1_driver_TXData
  6800                           
  6801                           ;i2c.c: 83:     unsigned int count = 0;
  6802  05A7  0020               	movlb	0	; select bank0
  6803  05A8  01D1               	clrf	I2C_Write_Byte@count
  6804  05A9  01D2               	clrf	I2C_Write_Byte@count+1
  6805  05AA                     l1030:	
  6806                           ;i2c.c: 84:     while(SSP1CON2bits.ACKSTAT);
  6807                           
  6808  05AA  0024               	movlb	4	; select bank4
  6809  05AB  1B16               	btfsc	22,6	;volatile
  6810  05AC  2DAA               	goto	l1030
  6811  05AD                     l4866:	
  6812  05AD  0020               	movlb	0	; select bank0
  6813  05AE  0852               	movf	I2C_Write_Byte@count+1,w
  6814  05AF  00CF               	movwf	??_I2C_Write_Byte+1
  6815  05B0  0851               	movf	I2C_Write_Byte@count,w
  6816  05B1  00CE               	movwf	??_I2C_Write_Byte
  6817  05B2  0AD1               	incf	I2C_Write_Byte@count,f
  6818  05B3  1903               	skipnz
  6819  05B4  0AD2               	incf	I2C_Write_Byte@count+1,f
  6820  05B5  3000               	movlw	0
  6821  05B6  024F               	subwf	??_I2C_Write_Byte+1,w
  6822  05B7  3005               	movlw	5
  6823  05B8  1903               	skipnz
  6824  05B9  024E               	subwf	??_I2C_Write_Byte,w
  6825  05BA  1803               	btfsc	3,0
  6826  05BB  0008               	return
  6827  05BC  2DAD               	goto	l4866
  6828  05BD                     __end_of_I2C_Write_Byte:	
  6829                           
  6830                           	psect	text27
  6831  06CD                     __ptext27:	
  6832 ;; *************** function _i2c1_driver_TXData *****************
  6833 ;; Defined at:
  6834 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  d               1    wreg     unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  d               1    0[BANK0 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      void 
  6841 ;; Registers used:
  6842 ;;		wreg
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;Total ram usage:        1 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    5
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_I2C_Write_Byte
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           
  6863                           ;psect for function _i2c1_driver_TXData
  6864  06CD                     _i2c1_driver_TXData:	
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _i2c1_driver_TXData: [wreg]
  6868                           ;i2c1_driver_TXData@d stored from wreg
  6869  06CD  0020               	movlb	0	; select bank0
  6870  06CE  00CD               	movwf	i2c1_driver_TXData@d
  6871                           
  6872                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
  6873  06CF  084D               	movf	i2c1_driver_TXData@d,w
  6874  06D0  0024               	movlb	4	; select bank4
  6875  06D1  0091               	movwf	17	;volatile
  6876  06D2  0008               	return
  6877  06D3                     __end_of_i2c1_driver_TXData:	
  6878                           
  6879                           	psect	text28
  6880  071F                     __ptext28:	
  6881 ;; *************** function _I2C_Stop *****************
  6882 ;; Defined at:
  6883 ;;		line 50 in file "i2c.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		status,2, status,0, pclath, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;Total ram usage:        0 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    6
  6904 ;; This function calls:
  6905 ;;		_i2c1_driver_stop
  6906 ;; This function is called by:
  6907 ;;		_wireWriteDataByte
  6908 ;;		_wireReadDataByte
  6909 ;;		_wireReadDataBlock
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function _I2C_Stop
  6915  071F                     _I2C_Stop:	
  6916                           
  6917                           ;i2c.c: 52:  i2c1_driver_stop();
  6918                           
  6919                           ;incstack = 0
  6920                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
  6921  071F  3187  2722         	fcall	_i2c1_driver_stop
  6922  0721  0008               	return
  6923  0722                     __end_of_I2C_Stop:	
  6924                           
  6925                           	psect	text29
  6926  0722                     __ptext29:	
  6927 ;; *************** function _i2c1_driver_stop *****************
  6928 ;; Defined at:
  6929 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		None
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    5
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_I2C_Stop
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _i2c1_driver_stop
  6959  0722                     _i2c1_driver_stop:	
  6960                           
  6961                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
  6962                           
  6963                           ;incstack = 0
  6964                           ; Regs used in _i2c1_driver_stop: []
  6965  0722  0024               	movlb	4	; select bank4
  6966  0723  1516               	bsf	22,2	;volatile
  6967  0724  0008               	return
  6968  0725                     __end_of_i2c1_driver_stop:	
  6969                           
  6970                           	psect	text30
  6971  0725                     __ptext30:	
  6972 ;; *************** function _I2C_Start *****************
  6973 ;; Defined at:
  6974 ;;		line 35 in file "i2c.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;		None
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		status,2, status,0, pclath, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;Total ram usage:        0 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    6
  6995 ;; This function calls:
  6996 ;;		_i2c1_driver_start
  6997 ;; This function is called by:
  6998 ;;		_wireWriteDataByte
  6999 ;;		_wireReadDataByte
  7000 ;;		_wireReadDataBlock
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function _I2C_Start
  7006  0725                     _I2C_Start:	
  7007                           
  7008                           ;i2c.c: 37:  i2c1_driver_start();
  7009                           
  7010                           ;incstack = 0
  7011                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
  7012  0725  3187  2728         	fcall	_i2c1_driver_start
  7013  0727  0008               	return
  7014  0728                     __end_of_I2C_Start:	
  7015                           
  7016                           	psect	text31
  7017  0728                     __ptext31:	
  7018 ;; *************** function _i2c1_driver_start *****************
  7019 ;; Defined at:
  7020 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		None
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    5
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_I2C_Start
  7045 ;;		_i2c_masterOperation
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           
  7050                           ;psect for function _i2c1_driver_start
  7051  0728                     _i2c1_driver_start:	
  7052                           
  7053                           ;mcc_generated_files/i2c1_driver.c: 148:     SSP1CON2bits.SEN = 1;
  7054                           
  7055                           ;incstack = 0
  7056                           ; Regs used in _i2c1_driver_start: []
  7057  0728  0024               	movlb	4	; select bank4
  7058  0729  1416               	bsf	22,0	;volatile
  7059  072A  0008               	return
  7060  072B                     __end_of_i2c1_driver_start:	
  7061                           
  7062                           	psect	text32
  7063  072B                     __ptext32:	
  7064 ;; *************** function _I2C_Send_NACK *****************
  7065 ;; Defined at:
  7066 ;;		line 66 in file "i2c.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		status,2, status,0, pclath, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    6
  7087 ;; This function calls:
  7088 ;;		_i2c1_driver_sendNACK
  7089 ;; This function is called by:
  7090 ;;		_wireReadDataByte
  7091 ;;		_wireReadDataBlock
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function _I2C_Send_NACK
  7097  072B                     _I2C_Send_NACK:	
  7098                           
  7099                           ;i2c.c: 68:     i2c1_driver_sendNACK();
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in _I2C_Send_NACK: [status,2+status,0+pclath+cstack]
  7103  072B  3186  26EF         	fcall	_i2c1_driver_sendNACK
  7104  072D  0008               	return
  7105  072E                     __end_of_I2C_Send_NACK:	
  7106                           
  7107                           	psect	text33
  7108  06EF                     __ptext33:	
  7109 ;; *************** function _i2c1_driver_sendNACK *****************
  7110 ;; Defined at:
  7111 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		None
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    5
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_I2C_Send_NACK
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _i2c1_driver_sendNACK
  7141  06EF                     _i2c1_driver_sendNACK:	
  7142                           
  7143                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
  7144                           
  7145                           ;incstack = 0
  7146                           ; Regs used in _i2c1_driver_sendNACK: []
  7147  06EF  0024               	movlb	4	; select bank4
  7148  06F0  1696               	bsf	22,5	;volatile
  7149                           
  7150                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
  7151  06F1  1616               	bsf	22,4	;volatile
  7152  06F2  0008               	return
  7153  06F3                     __end_of_i2c1_driver_sendNACK:	
  7154                           
  7155                           	psect	text34
  7156  0673                     __ptext34:	
  7157 ;; *************** function _I2C_Read_Byte *****************
  7158 ;; Defined at:
  7159 ;;		line 115 in file "i2c.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      unsigned char 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0, pclath, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    6
  7180 ;; This function calls:
  7181 ;;		_i2c1_driver_getRXData
  7182 ;;		_i2c1_driver_isBufferFull
  7183 ;;		_i2c1_driver_startRX
  7184 ;; This function is called by:
  7185 ;;		_wireReadDataByte
  7186 ;;		_wireReadDataBlock
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function _I2C_Read_Byte
  7192  0673                     _I2C_Read_Byte:	
  7193                           
  7194                           ;i2c.c: 117:     i2c1_driver_startRX();
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7198  0673  3187  272E  3186   	fcall	_i2c1_driver_startRX
  7199  0676                     l4872:	
  7200                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
  7201                           
  7202                           
  7203                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
  7204  0676  3186  26B2  3186   	fcall	_i2c1_driver_isBufferFull
  7205  0679  1C03               	btfss	3,0
  7206  067A  2E76               	goto	l4872
  7207                           
  7208                           ;i2c.c: 137:   return i2c1_driver_getRXData();
  7209  067B  3187  2731         	fcall	_i2c1_driver_getRXData
  7210  067D  0008               	return
  7211  067E                     __end_of_I2C_Read_Byte:	
  7212                           
  7213                           	psect	text35
  7214  072E                     __ptext35:	
  7215 ;; *************** function _i2c1_driver_startRX *****************
  7216 ;; Defined at:
  7217 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		None
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    5
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_I2C_Read_Byte
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function _i2c1_driver_startRX
  7247  072E                     _i2c1_driver_startRX:	
  7248                           
  7249                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _i2c1_driver_startRX: []
  7253  072E  0024               	movlb	4	; select bank4
  7254  072F  1596               	bsf	22,3	;volatile
  7255  0730  0008               	return
  7256  0731                     __end_of_i2c1_driver_startRX:	
  7257                           
  7258                           	psect	text36
  7259  06B2                     __ptext36:	
  7260 ;; *************** function _i2c1_driver_isBufferFull *****************
  7261 ;; Defined at:
  7262 ;;		line 213 in file "mcc_generated_files/i2c1_driver.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;		None
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;		None
  7267 ;; Return value:  Size  Location     Type
  7268 ;;		None               void
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;Total ram usage:        1 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    5
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_I2C_Read_Byte
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           
  7291                           ;psect for function _i2c1_driver_isBufferFull
  7292  06B2                     _i2c1_driver_isBufferFull:	
  7293                           
  7294                           ;mcc_generated_files/i2c1_driver.c: 215:     return SSP1STATbits.BF;
  7295                           
  7296                           ;incstack = 0
  7297                           ; Regs used in _i2c1_driver_isBufferFull: [wreg+status,2+status,0]
  7298  06B2  0024               	movlb	4	; select bank4
  7299  06B3  0814               	movf	20,w	;volatile
  7300  06B4  3901               	andlw	1
  7301  06B5  0020               	movlb	0	; select bank0
  7302  06B6  00CD               	movwf	??_i2c1_driver_isBufferFull
  7303  06B7  0C4D               	rrf	??_i2c1_driver_isBufferFull,w
  7304  06B8  0008               	return
  7305  06B9                     __end_of_i2c1_driver_isBufferFull:	
  7306                           
  7307                           	psect	text37
  7308  0731                     __ptext37:	
  7309 ;; *************** function _i2c1_driver_getRXData *****************
  7310 ;; Defined at:
  7311 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      unsigned char 
  7318 ;; Registers used:
  7319 ;;		wreg
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    5
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_I2C_Read_Byte
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _i2c1_driver_getRXData
  7341  0731                     _i2c1_driver_getRXData:	
  7342                           
  7343                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in _i2c1_driver_getRXData: [wreg]
  7347  0731  0024               	movlb	4	; select bank4
  7348  0732  0811               	movf	17,w	;volatile
  7349  0733  0008               	return
  7350  0734                     __end_of_i2c1_driver_getRXData:	
  7351                           
  7352                           	psect	text38
  7353  0734                     __ptext38:	
  7354 ;; *************** function _I2C_ReStart *****************
  7355 ;; Defined at:
  7356 ;;		line 43 in file "i2c.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		status,2, status,0, pclath, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    6
  7377 ;; This function calls:
  7378 ;;		_i2c1_driver_restart
  7379 ;; This function is called by:
  7380 ;;		_wireReadDataByte
  7381 ;;		_wireReadDataBlock
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _I2C_ReStart
  7387  0734                     _I2C_ReStart:	
  7388                           
  7389                           ;i2c.c: 45:  i2c1_driver_restart();
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in _I2C_ReStart: [status,2+status,0+pclath+cstack]
  7393  0734  3187  2737         	fcall	_i2c1_driver_restart
  7394  0736  0008               	return
  7395  0737                     __end_of_I2C_ReStart:	
  7396                           
  7397                           	psect	text39
  7398  0737                     __ptext39:	
  7399 ;; *************** function _i2c1_driver_restart *****************
  7400 ;; Defined at:
  7401 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		None
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;Total ram usage:        0 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    5
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_I2C_ReStart
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           
  7430                           ;psect for function _i2c1_driver_restart
  7431  0737                     _i2c1_driver_restart:	
  7432                           
  7433                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
  7434                           
  7435                           ;incstack = 0
  7436                           ; Regs used in _i2c1_driver_restart: []
  7437  0737  0024               	movlb	4	; select bank4
  7438  0738  1496               	bsf	22,1	;volatile
  7439  0739  0008               	return
  7440  073A                     __end_of_i2c1_driver_restart:	
  7441                           
  7442                           	psect	text40
  7443  0667                     __ptext40:	
  7444 ;; *************** function _SYSTEM_Initialize *****************
  7445 ;; Defined at:
  7446 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;		None
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0, pclath, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;Total ram usage:        0 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:    7
  7467 ;; This function calls:
  7468 ;;		_OSCILLATOR_Initialize
  7469 ;;		_PIN_MANAGER_Initialize
  7470 ;;		_PMD_Initialize
  7471 ;;		_WDT_Initialize
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function _SYSTEM_Initialize
  7479  0667                     _SYSTEM_Initialize:	
  7480                           
  7481                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7482                           
  7483                           ;incstack = 0
  7484                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7485  0667  3186  269A  3186   	fcall	_PMD_Initialize
  7486                           
  7487                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7488  066A  3182  22A1  3186   	fcall	_PIN_MANAGER_Initialize
  7489                           
  7490                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7491  066D  3186  2691  3186   	fcall	_OSCILLATOR_Initialize
  7492                           
  7493                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  7494  0670  3186  26F3         	fcall	_WDT_Initialize
  7495  0672  0008               	return
  7496  0673                     __end_of_SYSTEM_Initialize:	
  7497                           
  7498                           	psect	text41
  7499  06F3                     __ptext41:	
  7500 ;; *************** function _WDT_Initialize *****************
  7501 ;; Defined at:
  7502 ;;		line 73 in file "mcc_generated_files/mcc.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    5
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_SYSTEM_Initialize
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _WDT_Initialize
  7532  06F3                     _WDT_Initialize:	
  7533                           
  7534                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in _WDT_Initialize: [wreg]
  7538  06F3  3016               	movlw	22
  7539  06F4  0021               	movlb	1	; select bank1
  7540  06F5  0097               	movwf	23	;volatile
  7541  06F6  0008               	return
  7542  06F7                     __end_of_WDT_Initialize:	
  7543                           
  7544                           	psect	text42
  7545  069A                     __ptext42:	
  7546 ;; *************** function _PMD_Initialize *****************
  7547 ;; Defined at:
  7548 ;;		line 79 in file "mcc_generated_files/mcc.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		status,2
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    5
  7569 ;; This function calls:
  7570 ;;		Nothing
  7571 ;; This function is called by:
  7572 ;;		_SYSTEM_Initialize
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           
  7577                           ;psect for function _PMD_Initialize
  7578  069A                     _PMD_Initialize:	
  7579                           
  7580                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  7581                           
  7582                           ;incstack = 0
  7583                           ; Regs used in _PMD_Initialize: [status,2]
  7584  069A  0032               	movlb	18	; select bank18
  7585  069B  0191               	clrf	17	;volatile
  7586                           
  7587                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  7588  069C  0192               	clrf	18	;volatile
  7589                           
  7590                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  7591  069D  0193               	clrf	19	;volatile
  7592                           
  7593                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  7594  069E  0194               	clrf	20	;volatile
  7595                           
  7596                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  7597  069F  0195               	clrf	21	;volatile
  7598                           
  7599                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  7600  06A0  0196               	clrf	22	;volatile
  7601  06A1  0008               	return
  7602  06A2                     __end_of_PMD_Initialize:	
  7603                           
  7604                           	psect	text43
  7605  02A1                     __ptext43:	
  7606 ;; *************** function _PIN_MANAGER_Initialize *****************
  7607 ;; Defined at:
  7608 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1    wreg      void 
  7615 ;; Registers used:
  7616 ;;		wreg, status,2, status,0, pclath, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    6
  7629 ;; This function calls:
  7630 ;;		_IOCCF1_SetInterruptHandler
  7631 ;; This function is called by:
  7632 ;;		_SYSTEM_Initialize
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           
  7637                           ;psect for function _PIN_MANAGER_Initialize
  7638  02A1                     _PIN_MANAGER_Initialize:	
  7639                           
  7640                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7644  02A1  0022               	movlb	2	; select bank2
  7645  02A2  018C               	clrf	12	;volatile
  7646                           
  7647                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7648  02A3  018D               	clrf	13	;volatile
  7649                           
  7650                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7651  02A4  018E               	clrf	14	;volatile
  7652                           
  7653                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  7654  02A5  3011               	movlw	17
  7655  02A6  0021               	movlb	1	; select bank1
  7656  02A7  008C               	movwf	12	;volatile
  7657                           
  7658                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  7659  02A8  30F0               	movlw	240
  7660  02A9  008D               	movwf	13	;volatile
  7661                           
  7662                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  7663  02AA  30DF               	movlw	223
  7664  02AB  008E               	movwf	14	;volatile
  7665                           
  7666                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xDD;
  7667  02AC  30DD               	movlw	221
  7668  02AD  0023               	movlb	3	; select bank3
  7669  02AE  008E               	movwf	14	;volatile
  7670                           
  7671                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x50;
  7672  02AF  3050               	movlw	80
  7673  02B0  008D               	movwf	13	;volatile
  7674                           
  7675                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x11;
  7676  02B1  3011               	movlw	17
  7677  02B2  008C               	movwf	12	;volatile
  7678                           
  7679                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7680  02B3  0024               	movlb	4	; select bank4
  7681  02B4  018D               	clrf	13	;volatile
  7682                           
  7683                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7684  02B5  018C               	clrf	12	;volatile
  7685                           
  7686                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x02;
  7687  02B6  3002               	movlw	2
  7688  02B7  008E               	movwf	14	;volatile
  7689                           
  7690                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  7691  02B8  0025               	movlb	5	; select bank5
  7692  02B9  018C               	clrf	12	;volatile
  7693                           
  7694                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  7695  02BA  018D               	clrf	13	;volatile
  7696                           
  7697                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  7698  02BB  018E               	clrf	14	;volatile
  7699                           
  7700                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  7701  02BC  3037               	movlw	55
  7702  02BD  0026               	movlb	6	; select bank6
  7703  02BE  008C               	movwf	12	;volatile
  7704                           
  7705                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  7706  02BF  30F0               	movlw	240
  7707  02C0  008D               	movwf	13	;volatile
  7708                           
  7709                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  7710  02C1  30FF               	movlw	255
  7711  02C2  008E               	movwf	14	;volatile
  7712                           
  7713                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
  7714  02C3  0027               	movlb	7	; select bank7
  7715  02C4  1099               	bcf	25,1	;volatile
  7716                           
  7717                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 0;
  7718  02C5  1098               	bcf	24,1	;volatile
  7719                           
  7720                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
  7721  02C6  1497               	bsf	23,1	;volatile
  7722                           
  7723                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
  7724  02C7  3057               	movlw	low _IOCCF1_DefaultInterruptHandler
  7725  02C8  0020               	movlb	0	; select bank0
  7726  02C9  00CD               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  7727  02CA  3007               	movlw	high _IOCCF1_DefaultInterruptHandler
  7728  02CB  00CE               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  7729  02CC  3186  26D3         	fcall	_IOCCF1_SetInterruptHandler
  7730                           
  7731                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  7732  02CE  0021               	movlb	1	; select bank1
  7733  02CF  1610               	bsf	16,4	;volatile
  7734                           
  7735                           ;mcc_generated_files/pin_manager.c: 121:     SSP1CLKPPS = 0x0F;
  7736  02D0  300F               	movlw	15
  7737  02D1  003C               	movlb	28	; select bank28
  7738  02D2  00A0               	movwf	32	;volatile
  7739                           
  7740                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x18;
  7741  02D3  3018               	movlw	24
  7742  02D4  003D               	movlb	29	; select bank29
  7743  02D5  009F               	movwf	31	;volatile
  7744                           
  7745                           ;mcc_generated_files/pin_manager.c: 123:     RB5PPS = 0x19;
  7746  02D6  3019               	movlw	25
  7747  02D7  009D               	movwf	29	;volatile
  7748                           
  7749                           ;mcc_generated_files/pin_manager.c: 124:     SSP1DATPPS = 0x0D;
  7750  02D8  300D               	movlw	13
  7751  02D9  003C               	movlb	28	; select bank28
  7752  02DA  00A1               	movwf	33	;volatile
  7753  02DB  0008               	return
  7754  02DC                     __end_of_PIN_MANAGER_Initialize:	
  7755                           
  7756                           	psect	text44
  7757  06D3                     __ptext44:	
  7758 ;; *************** function _IOCCF1_SetInterruptHandler *****************
  7759 ;; Defined at:
  7760 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7763 ;;		 -> GestureInterruptHandler(1), IOCCF1_DefaultInterruptHandler(1), 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      void 
  7768 ;; Registers used:
  7769 ;;		wreg
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;Total ram usage:        2 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    5
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_PIN_MANAGER_Initialize
  7786 ;;		_main
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function _IOCCF1_SetInterruptHandler
  7792  06D3                     _IOCCF1_SetInterruptHandler:	
  7793                           
  7794                           ;mcc_generated_files/pin_manager.c: 155:     IOCCF1_InterruptHandler = InterruptHandler;
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
  7798  06D3  0020               	movlb	0	; select bank0
  7799  06D4  084E               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
  7800  06D5  00E1               	movwf	_IOCCF1_InterruptHandler+1
  7801  06D6  084D               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
  7802  06D7  00E0               	movwf	_IOCCF1_InterruptHandler
  7803  06D8  0008               	return
  7804  06D9                     __end_of_IOCCF1_SetInterruptHandler:	
  7805                           
  7806                           	psect	text45
  7807  0691                     __ptext45:	
  7808 ;; *************** function _OSCILLATOR_Initialize *****************
  7809 ;; Defined at:
  7810 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    5
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_SYSTEM_Initialize
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _OSCILLATOR_Initialize
  7840  0691                     _OSCILLATOR_Initialize:	
  7841                           
  7842                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7846  0691  3062               	movlw	98
  7847  0692  0032               	movlb	18	; select bank18
  7848  0693  0099               	movwf	25	;volatile
  7849                           
  7850                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  7851  0694  019B               	clrf	27	;volatile
  7852                           
  7853                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  7854  0695  019D               	clrf	29	;volatile
  7855                           
  7856                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
  7857  0696  3003               	movlw	3
  7858  0697  009F               	movwf	31	;volatile
  7859                           
  7860                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  7861  0698  019E               	clrf	30	;volatile
  7862  0699  0008               	return
  7863  069A                     __end_of_OSCILLATOR_Initialize:	
  7864                           
  7865                           	psect	intentry
  7866  0004                     __pintentry:	
  7867 ;; *************** function _INTERRUPT_InterruptManager *****************
  7868 ;; Defined at:
  7869 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;Total ram usage:        0 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    4
  7890 ;; This function calls:
  7891 ;;		Absolute function
  7892 ;;		_PIN_MANAGER_IOC
  7893 ;;		_i2c_ISR
  7894 ;;		_i2c_busCollisionISR
  7895 ;; This function is called by:
  7896 ;;		Interrupt level 1
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900  0004                     _INTERRUPT_InterruptManager:	
  7901                           
  7902                           ;incstack = 0
  7903  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7904                           
  7905                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7906  0005  3180               	pagesel	$
  7907                           
  7908                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  7909  0006  0021               	movlb	1	; select bank1
  7910  0007  1E10               	btfss	16,4	;volatile
  7911  0008  2810               	goto	i1l245
  7912  0009  0020               	movlb	0	; select bank0
  7913  000A  1E10               	btfss	16,4	;volatile
  7914  000B  2810               	goto	i1l245
  7915                           
  7916                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7917  000C  3186  26DF  3180   	fcall	_PIN_MANAGER_IOC
  7918                           
  7919                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7920  000F  2829               	goto	i1l253
  7921  0010                     i1l245:	
  7922                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7923                           
  7924  0010  1F0B               	btfss	11,6	;volatile
  7925  0011  2829               	goto	i1l253
  7926                           
  7927                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  7928  0012  0021               	movlb	1	; select bank1
  7929  0013  1D11               	btfss	17,2	;volatile
  7930  0014  281E               	goto	i1l248
  7931  0015  0020               	movlb	0	; select bank0
  7932  0016  1D11               	btfss	17,2	;volatile
  7933  0017  281E               	goto	i1l248
  7934                           
  7935                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
  7936  0018  084A               	movf	_i2c1_driver_busCollisionISR+1,w
  7937  0019  008A               	movwf	10
  7938  001A  0849               	movf	_i2c1_driver_busCollisionISR,w
  7939  001B  000A               	callw
  7940  001C  3180               	pagesel	$
  7941                           
  7942                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7943  001D  2829               	goto	i1l253
  7944  001E                     i1l248:	
  7945                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  7946                           
  7947  001E  0021               	movlb	1	; select bank1
  7948  001F  1D91               	btfss	17,3	;volatile
  7949  0020  2829               	goto	i1l253
  7950  0021  0020               	movlb	0	; select bank0
  7951  0022  1D91               	btfss	17,3	;volatile
  7952  0023  2829               	goto	i1l253
  7953                           
  7954                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
  7955  0024  0848               	movf	_i2c1_driver_i2cISR+1,w
  7956  0025  008A               	movwf	10
  7957  0026  0847               	movf	_i2c1_driver_i2cISR,w
  7958  0027  000A               	callw
  7959  0028  3180               	pagesel	$
  7960  0029                     i1l253:	
  7961                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  7962                           
  7963                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7964                           
  7965  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7966  002A  0009               	retfie
  7967  002B                     __end_of_INTERRUPT_InterruptManager:	
  7968                           
  7969                           	psect	text47
  7970  073A                     __ptext47:	
  7971 ;; *************** function _i2c_busCollisionISR *****************
  7972 ;; Defined at:
  7973 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		status,2, status,0, pclath, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:    1
  7994 ;; This function calls:
  7995 ;;		_i2c1_driver_clearBusCollision
  7996 ;; This function is called by:
  7997 ;;		_i2c_open
  7998 ;;		_INTERRUPT_InterruptManager
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function _i2c_busCollisionISR
  8004  073A                     _i2c_busCollisionISR:	
  8005                           
  8006                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8010  073A  3187  273D         	fcall	_i2c1_driver_clearBusCollision
  8011  073C  0008               	return
  8012  073D                     __end_of_i2c_busCollisionISR:	
  8013                           
  8014                           	psect	text48
  8015  073D                     __ptext48:	
  8016 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8017 ;; Defined at:
  8018 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		None
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_i2c_busCollisionISR
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _i2c1_driver_clearBusCollision
  8047  073D                     _i2c1_driver_clearBusCollision:	
  8048                           
  8049                           ;mcc_generated_files/i2c1_driver.c: 255:     PIR1bits.BCL1IF = 0;
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in _i2c1_driver_clearBusCollision: []
  8053  073D  0020               	movlb	0	; select bank0
  8054  073E  1111               	bcf	17,2	;volatile
  8055  073F  0008               	return
  8056  0740                     __end_of_i2c1_driver_clearBusCollision:	
  8057                           
  8058                           	psect	text49
  8059  0519                     __ptext49:	
  8060 ;; *************** function _i2c_ISR *****************
  8061 ;; Defined at:
  8062 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;Total ram usage:        3 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    3
  8083 ;; This function calls:
  8084 ;;		_do_I2C_DO_ACK
  8085 ;;		_do_I2C_DO_ADDRESS_NACK
  8086 ;;		_do_I2C_DO_NACK_RESTART
  8087 ;;		_do_I2C_DO_NACK_STOP
  8088 ;;		_do_I2C_IDLE
  8089 ;;		_do_I2C_RCEN
  8090 ;;		_do_I2C_RESET
  8091 ;;		_do_I2C_RX
  8092 ;;		_do_I2C_SEND_ADR_READ
  8093 ;;		_do_I2C_SEND_ADR_WRITE
  8094 ;;		_do_I2C_SEND_RESTART
  8095 ;;		_do_I2C_SEND_RESTART_READ
  8096 ;;		_do_I2C_SEND_RESTART_WRITE
  8097 ;;		_do_I2C_SEND_STOP
  8098 ;;		_do_I2C_TX
  8099 ;;		_do_I2C_TX_EMPTY
  8100 ;;		_i2c1_driver_isNACK
  8101 ;;		_mssp1_clearIRQ
  8102 ;; This function is called by:
  8103 ;;		_i2c_open
  8104 ;;		_i2c_poller
  8105 ;;		_INTERRUPT_InterruptManager
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function _i2c_ISR
  8111  0519                     _i2c_ISR:	
  8112                           
  8113                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8117  0519  3187  2740  3185   	fcall	_mssp1_clearIRQ
  8118                           
  8119                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  8120  051C  0020               	movlb	0	; select bank0
  8121  051D  1DA0               	btfss	_i2c_status,3
  8122  051E  2D29               	goto	i1l3942
  8123  051F  3186  26AA  3185   	fcall	_i2c1_driver_isNACK
  8124  0522  1C03               	btfss	3,0
  8125  0523  2D29               	goto	i1l3942
  8126                           
  8127                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  8128  0524  300F               	movlw	15
  8129  0525  00F9               	movwf	??_i2c_ISR
  8130  0526  0879               	movf	??_i2c_ISR,w
  8131  0527  0020               	movlb	0	; select bank0
  8132  0528  00A9               	movwf	_i2c_status+9
  8133  0529                     i1l3942:	
  8134                           
  8135                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  8136  0529  0020               	movlb	0	; select bank0
  8137  052A  0829               	movf	_i2c_status+9,w
  8138  052B  00F9               	movwf	??_i2c_ISR
  8139  052C  01FA               	clrf	??_i2c_ISR+1
  8140  052D  35F9               	lslf	??_i2c_ISR,f
  8141  052E  0DFA               	rlf	??_i2c_ISR+1,f
  8142  052F  3063               	movlw	low (_fsmStateTable| (0+32768))
  8143  0530  0779               	addwf	??_i2c_ISR,w
  8144  0531  0084               	movwf	4
  8145  0532  3085               	movlw	high (_fsmStateTable| (0+32768))
  8146  0533  3D7A               	addwfc	??_i2c_ISR+1,w
  8147  0534  0085               	movwf	5
  8148  0535  3F01               	moviw [1]fsr0
  8149  0536  008A               	movwf	10
  8150  0537  3F00               	moviw [0]fsr0
  8151  0538  000A               	callw
  8152  0539  3185               	pagesel	$
  8153  053A  00FB               	movwf	??_i2c_ISR+2
  8154  053B  087B               	movf	??_i2c_ISR+2,w
  8155  053C  0020               	movlb	0	; select bank0
  8156  053D  00A9               	movwf	_i2c_status+9
  8157  053E  0008               	return
  8158  053F                     __end_of_i2c_ISR:	
  8159                           
  8160                           	psect	text50
  8161  0740                     __ptext50:	
  8162 ;; *************** function _mssp1_clearIRQ *****************
  8163 ;; Defined at:
  8164 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		None
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_i2c_ISR
  8188 ;;		_i2c_open
  8189 ;;		_i2c_close
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function _mssp1_clearIRQ
  8195  0740                     _mssp1_clearIRQ:	
  8196                           
  8197                           ;mcc_generated_files/i2c1_driver.c: 55:         SSP1STAT = 0x00;
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _mssp1_clearIRQ: []
  8201  0740  0020               	movlb	0	; select bank0
  8202  0741  1191               	bcf	17,3	;volatile
  8203  0742  0008               	return
  8204  0743                     __end_of_mssp1_clearIRQ:	
  8205                           
  8206                           	psect	text51
  8207  025C                     __ptext51:	
  8208 ;; *************** function _do_I2C_RX *****************
  8209 ;; Defined at:
  8210 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      enum E7120
  8217 ;; Registers used:
  8218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;Total ram usage:        3 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    2
  8231 ;; This function calls:
  8232 ;;		_do_I2C_DO_NACK_RESTART
  8233 ;;		_do_I2C_DO_NACK_STOP
  8234 ;;		_i2c1_driver_sendACK
  8235 ;;		_returnReset
  8236 ;;		_returnStop
  8237 ;;		i1_i2c1_driver_getRXData
  8238 ;; This function is called by:
  8239 ;;		_i2c_ISR
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function _do_I2C_RX
  8245  025C                     _do_I2C_RX:	
  8246                           
  8247                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  8248                           
  8249                           ;incstack = 0
  8250                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8251  025C  3187  2746  3182   	fcall	i1_i2c1_driver_getRXData
  8252  025F  00F6               	movwf	??_do_I2C_RX
  8253  0260  0020               	movlb	0	; select bank0
  8254  0261  0822               	movf	low ((_i2c_status| 0+2)),w
  8255  0262  0086               	movwf	6
  8256  0263  0187               	clrf	7
  8257  0264  0876               	movf	??_do_I2C_RX,w
  8258  0265  0081               	movwf	1
  8259  0266  3001               	movlw	1
  8260  0267  00F6               	movwf	??_do_I2C_RX
  8261  0268  0876               	movf	??_do_I2C_RX,w
  8262  0269  07A2               	addwf	low ((_i2c_status| 0+2)),f
  8263                           
  8264                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  8265  026A  3001               	movlw	1
  8266  026B  02A3               	subwf	_i2c_status+3,f
  8267  026C  3000               	movlw	0
  8268  026D  3BA4               	subwfb	_i2c_status+4,f
  8269  026E  0823               	movf	_i2c_status+3,w
  8270  026F  0424               	iorwf	_i2c_status+4,w
  8271  0270  1903               	btfsc	3,2
  8272  0271  2A76               	goto	i1l173
  8273                           
  8274                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  8275  0272  3187  2717         	fcall	_i2c1_driver_sendACK
  8276                           
  8277                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  8278  0274  3005               	movlw	5
  8279  0275  0008               	return
  8280  0276                     i1l173:	
  8281                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  8282                           
  8283                           
  8284                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  8285  0276  1520               	bsf	_i2c_status,2
  8286                           
  8287                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  8288  0277  2A7E               	goto	i1l3588
  8289  0278                     i1l3578:	
  8290                           
  8291                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  8292  0278  3186  26F7         	fcall	_do_I2C_DO_NACK_RESTART
  8293  027A  0008               	return
  8294  027B                     i1l3582:	
  8295                           
  8296                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  8297  027B  3186  26FB         	fcall	_do_I2C_DO_NACK_STOP
  8298  027D  0008               	return
  8299  027E                     i1l3588:	
  8300  027E  0837               	movf	low ((_i2c_status| 0+23)),w
  8301  027F  00F6               	movwf	??_do_I2C_RX
  8302  0280  0876               	movf	??_do_I2C_RX,w
  8303  0281  00F6               	movwf	returnReset@p
  8304  0282  300B               	movlw	11
  8305  0283  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8306  0284  0086               	movwf	6
  8307  0285  0187               	clrf	7
  8308  0286  3F41               	moviw [1]fsr1
  8309  0287  008A               	movwf	10
  8310  0288  3F40               	moviw [0]fsr1
  8311  0289  000A               	callw
  8312  028A  3182               	pagesel	$
  8313  028B  00F7               	movwf	??_do_I2C_RX+1
  8314  028C  01F8               	clrf	??_do_I2C_RX+2
  8315                           
  8316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8317                           ; Switch size 1, requested type "simple"
  8318                           ; Number of cases is 1, Range of values is 0 to 0
  8319                           ; switch strategies available:
  8320                           ; Name         Instructions Cycles
  8321                           ; simple_byte            4     3 (average)
  8322                           ; direct_byte            8     6 (fixed)
  8323                           ; jumptable            260     6 (fixed)
  8324                           ;	Chosen strategy is simple_byte
  8325  028D  0878               	movf	??_do_I2C_RX+2,w
  8326  028E  3A00               	xorlw	0	; case 0
  8327  028F  1903               	skipnz
  8328  0290  2A92               	goto	i1l5774
  8329  0291  2A7B               	goto	i1l3582
  8330  0292                     i1l5774:	
  8331                           
  8332                           ; Switch size 1, requested type "simple"
  8333                           ; Number of cases is 4, Range of values is 1 to 4
  8334                           ; switch strategies available:
  8335                           ; Name         Instructions Cycles
  8336                           ; simple_byte           13     7 (average)
  8337                           ; direct_byte           17     9 (fixed)
  8338                           ; jumptable            263     9 (fixed)
  8339                           ;	Chosen strategy is simple_byte
  8340  0292  0877               	movf	??_do_I2C_RX+1,w
  8341  0293  3A01               	xorlw	1	; case 1
  8342  0294  1903               	skipnz
  8343  0295  2A7B               	goto	i1l3582
  8344  0296  3A03               	xorlw	3	; case 2
  8345  0297  1903               	skipnz
  8346  0298  2A78               	goto	i1l3578
  8347  0299  3A01               	xorlw	1	; case 3
  8348  029A  1903               	skipnz
  8349  029B  2A78               	goto	i1l3578
  8350  029C  3A07               	xorlw	7	; case 4
  8351  029D  1903               	skipnz
  8352  029E  2A7B               	goto	i1l3582
  8353  029F  2A7B               	goto	i1l3582
  8354  02A0  0008               	return
  8355  02A1                     __end_of_do_I2C_RX:	
  8356                           
  8357                           	psect	text52
  8358  020F                     __ptext52:	
  8359 ;; *************** function _do_I2C_TX *****************
  8360 ;; Defined at:
  8361 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      enum E7120
  8368 ;; Registers used:
  8369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;Total ram usage:        3 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    2
  8382 ;; This function calls:
  8383 ;;		_do_I2C_SEND_RESTART_READ
  8384 ;;		_do_I2C_SEND_RESTART_WRITE
  8385 ;;		_do_I2C_SEND_STOP
  8386 ;;		_i2c1_driver_isNACK
  8387 ;;		_returnReset
  8388 ;;		_returnStop
  8389 ;;		i1_i2c1_driver_TXData
  8390 ;; This function is called by:
  8391 ;;		_i2c_ISR
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           
  8396                           ;psect for function _do_I2C_TX
  8397  020F                     _do_I2C_TX:	
  8398                           
  8399                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  8400                           
  8401                           ;incstack = 0
  8402                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8403  020F  3186  26AA  3182   	fcall	_i2c1_driver_isNACK
  8404  0212  1803               	btfsc	3,0
  8405  0213  2A1E               	goto	i1l3548
  8406  0214  2A41               	goto	i1l157
  8407  0215                     i1l3534:	
  8408                           
  8409                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  8410  0215  3187  270F         	fcall	_do_I2C_SEND_RESTART_READ
  8411  0217  0008               	return
  8412  0218                     i1l3538:	
  8413                           
  8414                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  8415  0218  3187  270B         	fcall	_do_I2C_SEND_RESTART_WRITE
  8416  021A  0008               	return
  8417  021B                     i1l3542:	
  8418                           
  8419                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  8420  021B  3187  2703         	fcall	_do_I2C_SEND_STOP
  8421  021D  0008               	return
  8422  021E                     i1l3548:	
  8423  021E  0020               	movlb	0	; select bank0
  8424  021F  083A               	movf	low ((_i2c_status| 0+26)),w
  8425  0220  00F6               	movwf	??_do_I2C_TX
  8426  0221  0876               	movf	??_do_I2C_TX,w
  8427  0222  00F6               	movwf	returnReset@p
  8428  0223  3011               	movlw	17
  8429  0224  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8430  0225  0086               	movwf	6
  8431  0226  0187               	clrf	7
  8432  0227  3F41               	moviw [1]fsr1
  8433  0228  008A               	movwf	10
  8434  0229  3F40               	moviw [0]fsr1
  8435  022A  000A               	callw
  8436  022B  3182               	pagesel	$
  8437  022C  00F7               	movwf	??_do_I2C_TX+1
  8438  022D  01F8               	clrf	??_do_I2C_TX+2
  8439                           
  8440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8441                           ; Switch size 1, requested type "simple"
  8442                           ; Number of cases is 1, Range of values is 0 to 0
  8443                           ; switch strategies available:
  8444                           ; Name         Instructions Cycles
  8445                           ; simple_byte            4     3 (average)
  8446                           ; direct_byte            8     6 (fixed)
  8447                           ; jumptable            260     6 (fixed)
  8448                           ;	Chosen strategy is simple_byte
  8449  022E  0878               	movf	??_do_I2C_TX+2,w
  8450  022F  3A00               	xorlw	0	; case 0
  8451  0230  1903               	skipnz
  8452  0231  2A33               	goto	i1l5776
  8453  0232  2A1B               	goto	i1l3542
  8454  0233                     i1l5776:	
  8455                           
  8456                           ; Switch size 1, requested type "simple"
  8457                           ; Number of cases is 4, Range of values is 1 to 4
  8458                           ; switch strategies available:
  8459                           ; Name         Instructions Cycles
  8460                           ; simple_byte           13     7 (average)
  8461                           ; direct_byte           17     9 (fixed)
  8462                           ; jumptable            263     9 (fixed)
  8463                           ;	Chosen strategy is simple_byte
  8464  0233  0877               	movf	??_do_I2C_TX+1,w
  8465  0234  3A01               	xorlw	1	; case 1
  8466  0235  1903               	skipnz
  8467  0236  2A1B               	goto	i1l3542
  8468  0237  3A03               	xorlw	3	; case 2
  8469  0238  1903               	skipnz
  8470  0239  2A15               	goto	i1l3534
  8471  023A  3A01               	xorlw	1	; case 3
  8472  023B  1903               	skipnz
  8473  023C  2A18               	goto	i1l3538
  8474  023D  3A07               	xorlw	7	; case 4
  8475  023E  1903               	skipnz
  8476  023F  2A1B               	goto	i1l3542
  8477  0240  2A1B               	goto	i1l3542
  8478  0241                     i1l157:	
  8479                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  8480                           
  8481                           
  8482                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  8483  0241  0020               	movlb	0	; select bank0
  8484  0242  11A0               	bcf	_i2c_status,3
  8485                           
  8486                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  8487  0243  3002               	movlw	2
  8488  0244  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8489  0245  0086               	movwf	6
  8490  0246  0187               	clrf	7
  8491  0247  3F40               	moviw [0]fsr1
  8492  0248  0084               	movwf	4
  8493  0249  0185               	clrf	5
  8494  024A  0A81               	incf	1,f
  8495  024B  0800               	movf	0,w
  8496  024C  3186  26EA  3182   	fcall	i1_i2c1_driver_TXData
  8497                           
  8498                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  8499  024F  3001               	movlw	1
  8500  0250  0020               	movlb	0	; select bank0
  8501  0251  02A3               	subwf	_i2c_status+3,f
  8502  0252  3000               	movlw	0
  8503  0253  3BA4               	subwfb	_i2c_status+4,f
  8504  0254  0823               	movf	_i2c_status+3,w
  8505  0255  0424               	iorwf	_i2c_status+4,w
  8506  0256  1D03               	btfss	3,2
  8507  0257  2A5A               	goto	i1l3556
  8508  0258  3006               	movlw	6
  8509  0259  0008               	return
  8510  025A                     i1l3556:	
  8511  025A  3003               	movlw	3
  8512  025B  0008               	return
  8513  025C                     __end_of_do_I2C_TX:	
  8514                           
  8515                           	psect	text53
  8516  0401                     __ptext53:	
  8517 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  8518 ;; Defined at:
  8519 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      enum E7120
  8526 ;; Registers used:
  8527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;Total ram usage:        3 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:    2
  8540 ;; This function calls:
  8541 ;;		_do_I2C_SEND_RESTART
  8542 ;;		_do_I2C_SEND_STOP
  8543 ;;		_returnReset
  8544 ;;		_returnStop
  8545 ;; This function is called by:
  8546 ;;		_i2c_ISR
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  8552  0401                     _do_I2C_DO_ADDRESS_NACK:	
  8553                           
  8554                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8558  0401  0020               	movlb	0	; select bank0
  8559  0402  11A0               	bcf	_i2c_status,3
  8560                           
  8561                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  8562  0403  3002               	movlw	2
  8563  0404  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8564  0405  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8565  0406  00AA               	movwf	_i2c_status+10
  8566                           
  8567                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  8568  0407  2C0E               	goto	i1l3524
  8569  0408                     i1l3514:	
  8570                           
  8571                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  8572  0408  3187  2707         	fcall	_do_I2C_SEND_RESTART
  8573  040A  0008               	return
  8574  040B                     i1l3518:	
  8575                           
  8576                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  8577  040B  3187  2703         	fcall	_do_I2C_SEND_STOP
  8578  040D  0008               	return
  8579  040E                     i1l3524:	
  8580  040E  0839               	movf	low ((_i2c_status| 0+25)),w
  8581  040F  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8582  0410  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8583  0411  00F6               	movwf	returnReset@p
  8584  0412  300F               	movlw	15
  8585  0413  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8586  0414  0086               	movwf	6
  8587  0415  0187               	clrf	7
  8588  0416  3F41               	moviw [1]fsr1
  8589  0417  008A               	movwf	10
  8590  0418  3F40               	moviw [0]fsr1
  8591  0419  000A               	callw
  8592  041A  3184               	pagesel	$
  8593  041B  00F7               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  8594  041C  01F8               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  8595                           
  8596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8597                           ; Switch size 1, requested type "simple"
  8598                           ; Number of cases is 1, Range of values is 0 to 0
  8599                           ; switch strategies available:
  8600                           ; Name         Instructions Cycles
  8601                           ; simple_byte            4     3 (average)
  8602                           ; direct_byte            8     6 (fixed)
  8603                           ; jumptable            260     6 (fixed)
  8604                           ;	Chosen strategy is simple_byte
  8605  041D  0878               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  8606  041E  3A00               	xorlw	0	; case 0
  8607  041F  1903               	skipnz
  8608  0420  2C22               	goto	i1l5778
  8609  0421  2C0B               	goto	i1l3518
  8610  0422                     i1l5778:	
  8611                           
  8612                           ; Switch size 1, requested type "simple"
  8613                           ; Number of cases is 2, Range of values is 2 to 3
  8614                           ; switch strategies available:
  8615                           ; Name         Instructions Cycles
  8616                           ; simple_byte            7     4 (average)
  8617                           ; direct_byte           13     9 (fixed)
  8618                           ; jumptable            263     9 (fixed)
  8619                           ;	Chosen strategy is simple_byte
  8620  0422  0877               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  8621  0423  3A02               	xorlw	2	; case 2
  8622  0424  1903               	skipnz
  8623  0425  2C08               	goto	i1l3514
  8624  0426  3A01               	xorlw	1	; case 3
  8625  0427  1903               	skipnz
  8626  0428  2C08               	goto	i1l3514
  8627  0429  2C0B               	goto	i1l3518
  8628  042A  0008               	return
  8629  042B                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  8630                           
  8631                           	psect	text54
  8632  06F7                     __ptext54:	
  8633 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  8634 ;; Defined at:
  8635 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      enum E7120
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    1
  8656 ;; This function calls:
  8657 ;;		i1_i2c1_driver_sendNACK
  8658 ;; This function is called by:
  8659 ;;		_do_I2C_RX
  8660 ;;		_i2c_ISR
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           
  8665                           ;psect for function _do_I2C_DO_NACK_RESTART
  8666  06F7                     _do_I2C_DO_NACK_RESTART:	
  8667                           
  8668                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  8672  06F7  3187  2713         	fcall	i1_i2c1_driver_sendNACK
  8673                           
  8674                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  8675  06F9  3009               	movlw	9
  8676  06FA  0008               	return
  8677  06FB                     __end_of_do_I2C_DO_NACK_RESTART:	
  8678                           
  8679                           	psect	text55
  8680  06FB                     __ptext55:	
  8681 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  8682 ;; Defined at:
  8683 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      enum E7120
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0, pclath, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;Total ram usage:        0 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    1
  8704 ;; This function calls:
  8705 ;;		i1_i2c1_driver_sendNACK
  8706 ;; This function is called by:
  8707 ;;		_do_I2C_RX
  8708 ;;		_i2c_ISR
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function _do_I2C_DO_NACK_STOP
  8714  06FB                     _do_I2C_DO_NACK_STOP:	
  8715                           
  8716                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  8717                           
  8718                           ;incstack = 0
  8719                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  8720  06FB  3187  2713         	fcall	i1_i2c1_driver_sendNACK
  8721                           
  8722                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  8723  06FD  300A               	movlw	10
  8724  06FE  0008               	return
  8725  06FF                     __end_of_do_I2C_DO_NACK_STOP:	
  8726                           
  8727                           	psect	text56
  8728  06FF                     __ptext56:	
  8729 ;; *************** function _do_I2C_DO_ACK *****************
  8730 ;; Defined at:
  8731 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      enum E7120
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0, pclath, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    1
  8752 ;; This function calls:
  8753 ;;		_i2c1_driver_sendACK
  8754 ;; This function is called by:
  8755 ;;		_i2c_ISR
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           
  8760                           ;psect for function _do_I2C_DO_ACK
  8761  06FF                     _do_I2C_DO_ACK:	
  8762                           
  8763                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  8764                           
  8765                           ;incstack = 0
  8766                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  8767  06FF  3187  2717         	fcall	_i2c1_driver_sendACK
  8768                           
  8769                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  8770  0701  3005               	movlw	5
  8771  0702  0008               	return
  8772  0703                     __end_of_do_I2C_DO_ACK:	
  8773                           
  8774                           	psect	text57
  8775  06D9                     __ptext57:	
  8776 ;; *************** function _do_I2C_RCEN *****************
  8777 ;; Defined at:
  8778 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      enum E7120
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0, pclath, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    1
  8799 ;; This function calls:
  8800 ;;		i1_i2c1_driver_startRX
  8801 ;; This function is called by:
  8802 ;;		_i2c_ISR
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _do_I2C_RCEN
  8808  06D9                     _do_I2C_RCEN:	
  8809                           
  8810                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  8814  06D9  0020               	movlb	0	; select bank0
  8815  06DA  11A0               	bcf	_i2c_status,3
  8816                           
  8817                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  8818  06DB  3187  2749         	fcall	i1_i2c1_driver_startRX
  8819                           
  8820                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  8821  06DD  3004               	movlw	4
  8822  06DE  0008               	return
  8823  06DF                     __end_of_do_I2C_RCEN:	
  8824                           
  8825                           	psect	text58
  8826  06B9                     __ptext58:	
  8827 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  8828 ;; Defined at:
  8829 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;		None
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      enum E7120
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:        0 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    1
  8850 ;; This function calls:
  8851 ;;		i1_i2c1_driver_TXData
  8852 ;; This function is called by:
  8853 ;;		_i2c_ISR
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _do_I2C_SEND_ADR_WRITE
  8859  06B9                     _do_I2C_SEND_ADR_WRITE:	
  8860                           
  8861                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  8865  06B9  0020               	movlb	0	; select bank0
  8866  06BA  15A0               	bsf	_i2c_status,3
  8867                           
  8868                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  8869  06BB  3521               	lslf	_i2c_status+1,w
  8870  06BC  3186  26EA         	fcall	i1_i2c1_driver_TXData
  8871                           
  8872                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  8873  06BE  3003               	movlw	3
  8874  06BF  0008               	return
  8875  06C0                     __end_of_do_I2C_SEND_ADR_WRITE:	
  8876                           
  8877                           	psect	text59
  8878  06A2                     __ptext59:	
  8879 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  8880 ;; Defined at:
  8881 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      enum E7120
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, pclath, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    1
  8902 ;; This function calls:
  8903 ;;		i1_i2c1_driver_TXData
  8904 ;; This function is called by:
  8905 ;;		_i2c_ISR
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function _do_I2C_SEND_ADR_READ
  8911  06A2                     _do_I2C_SEND_ADR_READ:	
  8912                           
  8913                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  8914                           
  8915                           ;incstack = 0
  8916                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  8917  06A2  0020               	movlb	0	; select bank0
  8918  06A3  15A0               	bsf	_i2c_status,3
  8919                           
  8920                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  8921  06A4  1403               	setc
  8922  06A5  0D21               	rlf	_i2c_status+1,w
  8923  06A6  3186  26EA         	fcall	i1_i2c1_driver_TXData
  8924                           
  8925                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  8926  06A8  3005               	movlw	5
  8927  06A9  0008               	return
  8928  06AA                     __end_of_do_I2C_SEND_ADR_READ:	
  8929                           
  8930                           	psect	text60
  8931  0703                     __ptext60:	
  8932 ;; *************** function _do_I2C_SEND_STOP *****************
  8933 ;; Defined at:
  8934 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      enum E7120
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0, pclath, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    1
  8955 ;; This function calls:
  8956 ;;		i1_i2c1_driver_stop
  8957 ;; This function is called by:
  8958 ;;		_do_I2C_DO_ADDRESS_NACK
  8959 ;;		_do_I2C_TX
  8960 ;;		_do_I2C_TX_EMPTY
  8961 ;;		_i2c_ISR
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function _do_I2C_SEND_STOP
  8967  0703                     _do_I2C_SEND_STOP:	
  8968                           
  8969                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  8973  0703  3187  274C         	fcall	i1_i2c1_driver_stop
  8974                           
  8975                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  8976  0705  3000               	movlw	0
  8977  0706  0008               	return
  8978  0707                     __end_of_do_I2C_SEND_STOP:	
  8979                           
  8980                           	psect	text61
  8981  0707                     __ptext61:	
  8982 ;; *************** function _do_I2C_SEND_RESTART *****************
  8983 ;; Defined at:
  8984 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      enum E7120
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;Total ram usage:        0 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    1
  9005 ;; This function calls:
  9006 ;;		i1_i2c1_driver_restart
  9007 ;; This function is called by:
  9008 ;;		_do_I2C_DO_ADDRESS_NACK
  9009 ;;		_do_I2C_TX_EMPTY
  9010 ;;		_i2c_ISR
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _do_I2C_SEND_RESTART
  9016  0707                     _do_I2C_SEND_RESTART:	
  9017                           
  9018                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  9019                           
  9020                           ;incstack = 0
  9021                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9022  0707  3187  274F         	fcall	i1_i2c1_driver_restart
  9023                           
  9024                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  9025  0709  3001               	movlw	1
  9026  070A  0008               	return
  9027  070B                     __end_of_do_I2C_SEND_RESTART:	
  9028                           
  9029                           	psect	text62
  9030  070B                     __ptext62:	
  9031 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9032 ;; Defined at:
  9033 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;		None
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;		None
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1    wreg      enum E7120
  9040 ;; Registers used:
  9041 ;;		wreg, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;Total ram usage:        0 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    1
  9054 ;; This function calls:
  9055 ;;		i1_i2c1_driver_restart
  9056 ;; This function is called by:
  9057 ;;		_do_I2C_TX
  9058 ;;		_i2c_ISR
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           
  9063                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9064  070B                     _do_I2C_SEND_RESTART_WRITE:	
  9065                           
  9066                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9070  070B  3187  274F         	fcall	i1_i2c1_driver_restart
  9071                           
  9072                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  9073  070D  3002               	movlw	2
  9074  070E  0008               	return
  9075  070F                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  9076                           
  9077                           	psect	text63
  9078  070F                     __ptext63:	
  9079 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  9080 ;; Defined at:
  9081 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      enum E7120
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0, pclath, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    1
  9102 ;; This function calls:
  9103 ;;		i1_i2c1_driver_restart
  9104 ;; This function is called by:
  9105 ;;		_do_I2C_TX
  9106 ;;		_i2c_ISR
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           
  9111                           ;psect for function _do_I2C_SEND_RESTART_READ
  9112  070F                     _do_I2C_SEND_RESTART_READ:	
  9113                           
  9114                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
  9115                           
  9116                           ;incstack = 0
  9117                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  9118  070F  3187  274F         	fcall	i1_i2c1_driver_restart
  9119                           
  9120                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  9121  0711  3001               	movlw	1
  9122  0712  0008               	return
  9123  0713                     __end_of_do_I2C_SEND_RESTART_READ:	
  9124                           
  9125                           	psect	text64
  9126  06E5                     __ptext64:	
  9127 ;; *************** function _do_I2C_IDLE *****************
  9128 ;; Defined at:
  9129 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      enum E7120
  9136 ;; Registers used:
  9137 ;;		wreg, status,2
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_i2c_ISR
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _do_I2C_IDLE
  9158  06E5                     _do_I2C_IDLE:	
  9159                           
  9160                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  9164  06E5  0020               	movlb	0	; select bank0
  9165  06E6  1020               	bcf	_i2c_status,0
  9166                           
  9167                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  9168  06E7  01AA               	clrf	_i2c_status+10
  9169                           
  9170                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  9171  06E8  300E               	movlw	14
  9172  06E9  0008               	return
  9173  06EA                     __end_of_do_I2C_IDLE:	
  9174                           
  9175                           	psect	text65
  9176  06C0                     __ptext65:	
  9177 ;; *************** function _do_I2C_RESET *****************
  9178 ;; Defined at:
  9179 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      enum E7120
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0, pclath, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    1
  9200 ;; This function calls:
  9201 ;;		_i2c1_driver_resetBus
  9202 ;; This function is called by:
  9203 ;;		_i2c_ISR
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           
  9208                           ;psect for function _do_I2C_RESET
  9209  06C0                     _do_I2C_RESET:	
  9210                           
  9211                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
  9212                           
  9213                           ;incstack = 0
  9214                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  9215  06C0  3187  2756         	fcall	_i2c1_driver_resetBus
  9216                           
  9217                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  9218  06C2  0020               	movlb	0	; select bank0
  9219  06C3  1020               	bcf	_i2c_status,0
  9220                           
  9221                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  9222  06C4  01AA               	clrf	_i2c_status+10
  9223                           
  9224                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  9225  06C5  300E               	movlw	14
  9226  06C6  0008               	return
  9227  06C7                     __end_of_do_I2C_RESET:	
  9228                           
  9229                           	psect	text66
  9230  03A6                     __ptext66:	
  9231 ;; *************** function _do_I2C_TX_EMPTY *****************
  9232 ;; Defined at:
  9233 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      enum E7120
  9240 ;; Registers used:
  9241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;Total ram usage:        3 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    2
  9254 ;; This function calls:
  9255 ;;		_do_I2C_SEND_RESTART
  9256 ;;		_do_I2C_SEND_STOP
  9257 ;;		_mssp1_setIRQ
  9258 ;;		_returnReset
  9259 ;;		_returnStop
  9260 ;; This function is called by:
  9261 ;;		_i2c_ISR
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _do_I2C_TX_EMPTY
  9267  03A6                     _do_I2C_TX_EMPTY:	
  9268                           
  9269                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  9270                           
  9271                           ;incstack = 0
  9272                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9273  03A6  0020               	movlb	0	; select bank0
  9274  03A7  1520               	bsf	_i2c_status,2
  9275                           
  9276                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9277  03A8  2BB3               	goto	i1l3612
  9278  03A9                     i1l3596:	
  9279                           
  9280                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  9281  03A9  3187  2707         	fcall	_do_I2C_SEND_RESTART
  9282  03AB  0008               	return
  9283  03AC                     i1l3600:	
  9284                           
  9285                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
  9286  03AC  3187  2743         	fcall	_mssp1_setIRQ
  9287                           
  9288                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  9289  03AE  3003               	movlw	3
  9290  03AF  0008               	return
  9291  03B0                     i1l3606:	
  9292                           
  9293                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  9294  03B0  3187  2703         	fcall	_do_I2C_SEND_STOP
  9295  03B2  0008               	return
  9296  03B3                     i1l3612:	
  9297  03B3  0837               	movf	low ((_i2c_status| 0+23)),w
  9298  03B4  00F6               	movwf	??_do_I2C_TX_EMPTY
  9299  03B5  0876               	movf	??_do_I2C_TX_EMPTY,w
  9300  03B6  00F6               	movwf	returnReset@p
  9301  03B7  300B               	movlw	11
  9302  03B8  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9303  03B9  0086               	movwf	6
  9304  03BA  0187               	clrf	7
  9305  03BB  3F41               	moviw [1]fsr1
  9306  03BC  008A               	movwf	10
  9307  03BD  3F40               	moviw [0]fsr1
  9308  03BE  000A               	callw
  9309  03BF  3183               	pagesel	$
  9310  03C0  00F7               	movwf	??_do_I2C_TX_EMPTY+1
  9311  03C1  01F8               	clrf	??_do_I2C_TX_EMPTY+2
  9312                           
  9313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9314                           ; Switch size 1, requested type "simple"
  9315                           ; Number of cases is 1, Range of values is 0 to 0
  9316                           ; switch strategies available:
  9317                           ; Name         Instructions Cycles
  9318                           ; simple_byte            4     3 (average)
  9319                           ; direct_byte            8     6 (fixed)
  9320                           ; jumptable            260     6 (fixed)
  9321                           ;	Chosen strategy is simple_byte
  9322  03C2  0878               	movf	??_do_I2C_TX_EMPTY+2,w
  9323  03C3  3A00               	xorlw	0	; case 0
  9324  03C4  1903               	skipnz
  9325  03C5  2BC7               	goto	i1l5780
  9326  03C6  2BB0               	goto	i1l3606
  9327  03C7                     i1l5780:	
  9328                           
  9329                           ; Switch size 1, requested type "simple"
  9330                           ; Number of cases is 4, Range of values is 1 to 4
  9331                           ; switch strategies available:
  9332                           ; Name         Instructions Cycles
  9333                           ; simple_byte           13     7 (average)
  9334                           ; direct_byte           17     9 (fixed)
  9335                           ; jumptable            263     9 (fixed)
  9336                           ;	Chosen strategy is simple_byte
  9337  03C7  0877               	movf	??_do_I2C_TX_EMPTY+1,w
  9338  03C8  3A01               	xorlw	1	; case 1
  9339  03C9  1903               	skipnz
  9340  03CA  2BB0               	goto	i1l3606
  9341  03CB  3A03               	xorlw	3	; case 2
  9342  03CC  1903               	skipnz
  9343  03CD  2BA9               	goto	i1l3596
  9344  03CE  3A01               	xorlw	1	; case 3
  9345  03CF  1903               	skipnz
  9346  03D0  2BA9               	goto	i1l3596
  9347  03D1  3A07               	xorlw	7	; case 4
  9348  03D2  1903               	skipnz
  9349  03D3  2BAC               	goto	i1l3600
  9350  03D4  2BB0               	goto	i1l3606
  9351  03D5  0008               	return
  9352  03D6                     __end_of_do_I2C_TX_EMPTY:	
  9353                           
  9354                           	psect	text67
  9355  0743                     __ptext67:	
  9356 ;; *************** function _mssp1_setIRQ *****************
  9357 ;; Defined at:
  9358 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		None
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_do_I2C_TX_EMPTY
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _mssp1_setIRQ
  9387  0743                     _mssp1_setIRQ:	
  9388                           
  9389                           ;mcc_generated_files/i2c1_driver.c: 60:     }
  9390                           
  9391                           ;incstack = 0
  9392                           ; Regs used in _mssp1_setIRQ: []
  9393  0743  0020               	movlb	0	; select bank0
  9394  0744  1591               	bsf	17,3	;volatile
  9395  0745  0008               	return
  9396  0746                     __end_of_mssp1_setIRQ:	
  9397                           
  9398                           	psect	text68
  9399  06AA                     __ptext68:	
  9400 ;; *************** function _i2c1_driver_isNACK *****************
  9401 ;; Defined at:
  9402 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;		None
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;		None               void
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;Total ram usage:        1 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_do_I2C_TX
  9426 ;;		_i2c_ISR
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _i2c1_driver_isNACK
  9432  06AA                     _i2c1_driver_isNACK:	
  9433                           
  9434                           ;mcc_generated_files/i2c1_driver.c: 163:     return SSP1CON2bits.ACKSTAT;
  9435                           
  9436                           ;incstack = 0
  9437                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
  9438  06AA  0024               	movlb	4	; select bank4
  9439  06AB  0E16               	swapf	22,w	;volatile
  9440  06AC  0C89               	rrf	9,f
  9441  06AD  0C89               	rrf	9,f
  9442  06AE  3901               	andlw	1
  9443  06AF  00F6               	movwf	??_i2c1_driver_isNACK
  9444  06B0  0C76               	rrf	??_i2c1_driver_isNACK,w
  9445  06B1  0008               	return
  9446  06B2                     __end_of_i2c1_driver_isNACK:	
  9447                           
  9448                           	psect	text69
  9449  06EA                     __ptext69:	
  9450 ;; *************** function i1_i2c1_driver_TXData *****************
  9451 ;; Defined at:
  9452 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  d               1    wreg     unsigned char 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  d               1    0[COMMON] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;Total ram usage:        1 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_do_I2C_SEND_ADR_READ
  9476 ;;		_do_I2C_SEND_ADR_WRITE
  9477 ;;		_do_I2C_TX
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function i1_i2c1_driver_TXData
  9483  06EA                     i1_i2c1_driver_TXData:	
  9484                           
  9485                           ;incstack = 0
  9486                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
  9487                           ;i1i2c1_driver_TXData@d stored from wreg
  9488  06EA  00F6               	movwf	i1i2c1_driver_TXData@d
  9489                           
  9490                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
  9491  06EB  0876               	movf	i1i2c1_driver_TXData@d,w
  9492  06EC  0024               	movlb	4	; select bank4
  9493  06ED  0091               	movwf	17	;volatile
  9494  06EE  0008               	return
  9495  06EF                     __end_ofi1_i2c1_driver_TXData:	
  9496                           
  9497                           	psect	text70
  9498  0746                     __ptext70:	
  9499 ;; *************** function i1_i2c1_driver_getRXData *****************
  9500 ;; Defined at:
  9501 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      unsigned char 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_do_I2C_RX
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function i1_i2c1_driver_getRXData
  9530  0746                     i1_i2c1_driver_getRXData:	
  9531                           
  9532                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
  9536  0746  0024               	movlb	4	; select bank4
  9537  0747  0811               	movf	17,w	;volatile
  9538  0748  0008               	return
  9539  0749                     __end_ofi1_i2c1_driver_getRXData:	
  9540                           
  9541                           	psect	text71
  9542  0713                     __ptext71:	
  9543 ;; *************** function i1_i2c1_driver_sendNACK *****************
  9544 ;; Defined at:
  9545 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;		None
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		None
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;Total ram usage:        0 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_do_I2C_DO_NACK_STOP
  9569 ;;		_do_I2C_DO_NACK_RESTART
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           
  9574                           ;psect for function i1_i2c1_driver_sendNACK
  9575  0713                     i1_i2c1_driver_sendNACK:	
  9576                           
  9577                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
  9578                           
  9579                           ;incstack = 0
  9580                           ; Regs used in i1_i2c1_driver_sendNACK: []
  9581  0713  0024               	movlb	4	; select bank4
  9582  0714  1696               	bsf	22,5	;volatile
  9583                           
  9584                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
  9585  0715  1616               	bsf	22,4	;volatile
  9586  0716  0008               	return
  9587  0717                     __end_ofi1_i2c1_driver_sendNACK:	
  9588                           
  9589                           	psect	text72
  9590  0756                     __ptext72:	
  9591 ;; *************** function _i2c1_driver_resetBus *****************
  9592 ;; Defined at:
  9593 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		None
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;Total ram usage:        0 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_do_I2C_RESET
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           
  9621                           ;psect for function _i2c1_driver_resetBus
  9622  0756                     _i2c1_driver_resetBus:	
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in _i2c1_driver_resetBus: []
  9626  0756  0008               	return
  9627  0757                     __end_of_i2c1_driver_resetBus:	
  9628                           
  9629                           	psect	text73
  9630  0749                     __ptext73:	
  9631 ;; *************** function i1_i2c1_driver_startRX *****************
  9632 ;; Defined at:
  9633 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      void 
  9640 ;; Registers used:
  9641 ;;		None
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;Total ram usage:        0 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_do_I2C_RCEN
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function i1_i2c1_driver_startRX
  9662  0749                     i1_i2c1_driver_startRX:	
  9663                           
  9664                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
  9665                           
  9666                           ;incstack = 0
  9667                           ; Regs used in i1_i2c1_driver_startRX: []
  9668  0749  0024               	movlb	4	; select bank4
  9669  074A  1596               	bsf	22,3	;volatile
  9670  074B  0008               	return
  9671  074C                     __end_ofi1_i2c1_driver_startRX:	
  9672                           
  9673                           	psect	text74
  9674  0752                     __ptext74:	
  9675 ;; *************** function _returnReset *****************
  9676 ;; Defined at:
  9677 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;  p               1    0[COMMON] PTR void 
  9680 ;;		 -> NULL(0), 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1    wreg      enum E6966
  9685 ;; Registers used:
  9686 ;;		wreg
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;Total ram usage:        1 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_i2c_open
  9702 ;;		_do_I2C_DO_ADDRESS_NACK
  9703 ;;		_do_I2C_TX
  9704 ;;		_do_I2C_RX
  9705 ;;		_do_I2C_TX_EMPTY
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           
  9710                           ;psect for function _returnReset
  9711  0752                     _returnReset:	
  9712                           
  9713                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _returnReset: [wreg]
  9717  0752  3005               	movlw	5
  9718  0753  0008               	return
  9719  0754                     __end_of_returnReset:	
  9720                           
  9721                           	psect	text75
  9722  0754                     __ptext75:	
  9723 ;; *************** function _returnStop *****************
  9724 ;; Defined at:
  9725 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  p               1    0[COMMON] PTR void 
  9728 ;;		 -> NULL(0), 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      enum E6966
  9733 ;; Registers used:
  9734 ;;		wreg
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9740 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;Total ram usage:        1 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_i2c_open
  9750 ;;		_setCallBack
  9751 ;;		_do_I2C_DO_ADDRESS_NACK
  9752 ;;		_do_I2C_TX
  9753 ;;		_do_I2C_RX
  9754 ;;		_do_I2C_TX_EMPTY
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           
  9759                           ;psect for function _returnStop
  9760  0754                     _returnStop:	
  9761                           
  9762                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
  9763                           
  9764                           ;incstack = 0
  9765                           ; Regs used in _returnStop: [wreg]
  9766  0754  3001               	movlw	1
  9767  0755  0008               	return
  9768  0756                     __end_of_returnStop:	
  9769                           
  9770                           	psect	text76
  9771  074C                     __ptext76:	
  9772 ;; *************** function i1_i2c1_driver_stop *****************
  9773 ;; Defined at:
  9774 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		None
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_do_I2C_SEND_STOP
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           
  9802                           ;psect for function i1_i2c1_driver_stop
  9803  074C                     i1_i2c1_driver_stop:	
  9804                           
  9805                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
  9806                           
  9807                           ;incstack = 0
  9808                           ; Regs used in i1_i2c1_driver_stop: []
  9809  074C  0024               	movlb	4	; select bank4
  9810  074D  1516               	bsf	22,2	;volatile
  9811  074E  0008               	return
  9812  074F                     __end_ofi1_i2c1_driver_stop:	
  9813                           
  9814                           	psect	text77
  9815  074F                     __ptext77:	
  9816 ;; *************** function i1_i2c1_driver_restart *****************
  9817 ;; Defined at:
  9818 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		None
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:        0 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_do_I2C_SEND_RESTART_READ
  9842 ;;		_do_I2C_SEND_RESTART_WRITE
  9843 ;;		_do_I2C_SEND_RESTART
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           
  9848                           ;psect for function i1_i2c1_driver_restart
  9849  074F                     i1_i2c1_driver_restart:	
  9850                           
  9851                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
  9852                           
  9853                           ;incstack = 0
  9854                           ; Regs used in i1_i2c1_driver_restart: []
  9855  074F  0024               	movlb	4	; select bank4
  9856  0750  1496               	bsf	22,1	;volatile
  9857  0751  0008               	return
  9858  0752                     __end_ofi1_i2c1_driver_restart:	
  9859                           
  9860                           	psect	text78
  9861  0717                     __ptext78:	
  9862 ;; *************** function _i2c1_driver_sendACK *****************
  9863 ;; Defined at:
  9864 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		None
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_do_I2C_DO_ACK
  9888 ;;		_do_I2C_RX
  9889 ;;		_I2C_Send_ACK
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           
  9894                           ;psect for function _i2c1_driver_sendACK
  9895  0717                     _i2c1_driver_sendACK:	
  9896                           
  9897                           ;mcc_generated_files/i2c1_driver.c: 198:     SSP1CON2bits.ACKDT = 0;
  9898                           
  9899                           ;incstack = 0
  9900                           ; Regs used in _i2c1_driver_sendACK: []
  9901  0717  0024               	movlb	4	; select bank4
  9902  0718  1296               	bcf	22,5	;volatile
  9903                           
  9904                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKEN = 1;
  9905  0719  1616               	bsf	22,4	;volatile
  9906  071A  0008               	return
  9907  071B                     __end_of_i2c1_driver_sendACK:	
  9908                           
  9909                           	psect	text79
  9910  06DF                     __ptext79:	
  9911 ;; *************** function _PIN_MANAGER_IOC *****************
  9912 ;; Defined at:
  9913 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    2
  9934 ;; This function calls:
  9935 ;;		_IOCCF1_ISR
  9936 ;; This function is called by:
  9937 ;;		_INTERRUPT_InterruptManager
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _PIN_MANAGER_IOC
  9943  06DF                     _PIN_MANAGER_IOC:	
  9944                           
  9945                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCCFbits.IOCCF1 == 1)
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  9949  06DF  0027               	movlb	7	; select bank7
  9950  06E0  1C99               	btfss	25,1	;volatile
  9951  06E1  0008               	return
  9952                           
  9953                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCCF1_ISR();
  9954  06E2  3186  265A         	fcall	_IOCCF1_ISR
  9955  06E4  0008               	return
  9956  06E5                     __end_of_PIN_MANAGER_IOC:	
  9957                           
  9958                           	psect	text80
  9959  065A                     __ptext80:	
  9960 ;; *************** function _IOCCF1_ISR *****************
  9961 ;; Defined at:
  9962 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;		None
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;Total ram usage:        0 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    1
  9983 ;; This function calls:
  9984 ;;		Absolute function
  9985 ;;		_GestureInterruptHandler
  9986 ;;		_IOCCF1_DefaultInterruptHandler
  9987 ;; This function is called by:
  9988 ;;		_PIN_MANAGER_IOC
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           
  9993                           ;psect for function _IOCCF1_ISR
  9994  065A                     _IOCCF1_ISR:	
  9995                           
  9996                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCCF1_InterruptHandler)
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10000  065A  0020               	movlb	0	; select bank0
 10001  065B  0860               	movf	_IOCCF1_InterruptHandler,w
 10002  065C  0461               	iorwf	_IOCCF1_InterruptHandler+1,w
 10003  065D  1903               	btfsc	3,2
 10004  065E  2E64               	goto	i1l3676
 10005                           
 10006                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCCF1_InterruptHandler();
 10007  065F  0861               	movf	_IOCCF1_InterruptHandler+1,w
 10008  0660  008A               	movwf	10
 10009  0661  0860               	movf	_IOCCF1_InterruptHandler,w
 10010  0662  000A               	callw
 10011  0663  3186               	pagesel	$
 10012  0664                     i1l3676:	
 10013                           
 10014                           ;mcc_generated_files/pin_manager.c: 148:     IOCCFbits.IOCCF1 = 0;
 10015  0664  0027               	movlb	7	; select bank7
 10016  0665  1099               	bcf	25,1	;volatile
 10017  0666  0008               	return
 10018  0667                     __end_of_IOCCF1_ISR:	
 10019                           
 10020                           	psect	text81
 10021  071B                     __ptext81:	
 10022 ;; *************** function _GestureInterruptHandler *****************
 10023 ;; Defined at:
 10024 ;;		line 54 in file "main.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;		None
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  1    wreg      void 
 10031 ;; Registers used:
 10032 ;;		None
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;Total ram usage:        0 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_main
 10048 ;;		_IOCCF1_ISR
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function _GestureInterruptHandler
 10054  071B                     _GestureInterruptHandler:	
 10055                           
 10056                           ;main.c: 55:     handleGestureFlag = 1;
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in _GestureInterruptHandler: []
 10060  071B  0020               	movlb	0	; select bank0
 10061  071C  01CC               	clrf	_handleGestureFlag
 10062  071D  0ACC               	incf	_handleGestureFlag,f
 10063  071E  0008               	return
 10064  071F                     __end_of_GestureInterruptHandler:	
 10065                           
 10066                           	psect	text82
 10067  0757                     __ptext82:	
 10068 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 10069 ;; Defined at:
 10070 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;		None
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;		None
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  1    wreg      void 
 10077 ;; Registers used:
 10078 ;;		None
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;Total ram usage:        0 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; This function calls:
 10091 ;;		Nothing
 10092 ;; This function is called by:
 10093 ;;		_PIN_MANAGER_Initialize
 10094 ;;		_IOCCF1_ISR
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           
 10099                           ;psect for function _IOCCF1_DefaultInterruptHandler
 10100  0757                     _IOCCF1_DefaultInterruptHandler:	
 10101                           
 10102                           ;incstack = 0
 10103                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 10104  0757  0008               	return
 10105  0758                     __end_of_IOCCF1_DefaultInterruptHandler:	
 10106  007E                     btemp	set	126	;btemp
 10107  007E                     int$flags	set	126
 10108  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         119
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     21      68
    BANK1            80      0      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_ISR$2093	const PTR FTN()enum E7120 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCCF1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    fsmStateTable	const PTR FTN()enum E7120[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 0

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY

Critical Paths under _main in BANK0

    _main->_enableGestureSensor
    _main->_initialize
    _isGestureAvailable->_wireReadDataByte
    _initialize->_setMode
    _setProximityGain->_wireWriteDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireWriteDataByte
    _setGestureWaitTime->_wireWriteDataByte
    _setGestureLEDDrive->_wireWriteDataByte
    _setGestureGain->_wireWriteDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireWriteDataByte
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireWriteDataByte
    _setGestureMode->_wireWriteDataByte
    _setGestureIntEnable->_wireWriteDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Write_Byte
    _I2C_Write_Byte->_i2c1_driver_TXData
    _I2C_Read_Byte->_i2c1_driver_isBufferFull
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   78380
                                             18 BANK0      3     3      0
         _IOCCF1_SetInterruptHandler
                  _SYSTEM_Initialize
                _enableGestureSensor
                         _initialize
                 _isGestureAvailable
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (1) _isGestureAvailable                                   2     2      0     198
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   54520
                                             16 BANK0      2     2      0
                   _i2c1_driver_open
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   23076
                                             16 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    3667
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    4340
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    4340
                                             11 BANK0      5     4      1
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    3398
                                              6 BANK0      4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     195
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (1) _wireReadDataByte                                     3     3      0     161
                                              6 BANK0      3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Byte                                       5     5      0      96
                                              1 BANK0      5     5      0
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_TXData                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                  _i2c1_driver_start
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
              _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_isBufferFull                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     914
                   Absolute function *
                    _PIN_MANAGER_IOC
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (9) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_ISR                                              3     3      0     914
                                              3 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (10) _mssp1_clearIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX_EMPTY                                     3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX                                           3     3      0     234
                                              0 COMMON     3     3      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_READ                            0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_READ                                0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RX                                           3     3      0     212
                                              0 COMMON     3     3      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
            i1_i2c1_driver_getRXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_STOP                                 0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_RESTART                              0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RCEN                                         0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ADDRESS_NACK                              3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _returnStop                                          1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _returnReset                                         1     0      1     212
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_STOP                                    0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART                                 0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF1_ISR                                          0     0      0       0
                   Absolute function *
            _GestureInterruptHandler *
     _IOCCF1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _IOCCF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _GestureInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF1_SetInterruptHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
               _i2c1_driver_restart
             _I2C_Read_Byte
               _i2c1_driver_getRXData
               _i2c1_driver_isBufferFull
               _i2c1_driver_startRX
             _I2C_Send_NACK
               _i2c1_driver_sendNACK
             _I2C_Start
               _i2c1_driver_start
             _I2C_Stop
               _i2c1_driver_stop
             _I2C_Write_Byte
               _i2c1_driver_TXData
         _wireWriteDataByte
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _initialize
     _i2c1_driver_open
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _isGestureAvailable
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _wireReadDataByte
     _I2C_ReStart
       _i2c1_driver_restart
     _I2C_Read_Byte
       _i2c1_driver_getRXData
       _i2c1_driver_isBufferFull
       _i2c1_driver_startRX
     _I2C_Send_NACK
       _i2c1_driver_sendNACK
     _I2C_Start
       _i2c1_driver_start
     _I2C_Stop
       _i2c1_driver_stop
     _I2C_Write_Byte
       _i2c1_driver_TXData

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _PIN_MANAGER_IOC *
     _IOCCF1_ISR
       Absolute function(Fake) *
       _GestureInterruptHandler *
       _IOCCF1_DefaultInterruptHandler *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _returnReset *
       _returnStop *
     _do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       i1_i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       _do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       _i2c1_driver_sendACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_getRXData *
     _do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     _do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     _do_I2C_TX *
       _do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _i2c1_driver_isNACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_TXData *
     _do_I2C_TX_EMPTY *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _mssp1_setIRQ
       _returnReset *
       _returnStop *
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      94      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      94      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 12:24:30 2019

                              returnReset@p 0076                       ?_setGestureExitThresh 0076  
                        __size_of_I2C_Start 0003                                 __CFG_CP$OFF 0000  
                      __size_of_do_I2C_IDLE 0005                         _do_I2C_SEND_RESTART 0707  
                      __size_of_do_I2C_RCEN 0006                                 __CFG_LVP$ON 0000  
                              __CFG_CPD$OFF 0000                        __size_of_I2C_ReStart 0003  
                   __size_of_PMD_Initialize 0008                          I2C_Write_Byte@Byte 0050  
                     __size_of_do_I2C_RESET 0007                                         wreg 0009  
                        i1_i2c1_driver_stop 074C                                        l1030 05AA  
                                      l5100 04BA                                        l5120 064A  
                                      l5104 04BC                                        l5202 03FF  
                                      l5130 0637                                        l5060 0611  
                                      l5222 03A4                                        l5070 0624  
                                      l5240 0517                                        l5080 0493  
                                      l5250 0658                                        l5148 0372  
                                      l5084 0495                                        l5500 05FE  
                                      l5166 0340                                        l5424 0172  
                                      l5184 04F0                                        l5442 0170  
                                      l5428 0174                                        l5292 0059  
                                      l5296 005B                                        l5560 02FA  
                                      l4922 01CC                                        l4942 01FF  
                                      l4934 01E6                                        l4926 01CE  
                                      l5558 02F1                                        l4872 0676  
                                      l4944 0200                                        l4936 01F3  
                                      l4866 05AD                                        _LATA 010C  
                                      _LATB 010D                                        _LATC 010E  
                                      _PMD0 0911                                        _PMD1 0912  
                                      _PMD2 0913                                        u3815 0465  
                                      _PMD3 0914                                        _PMD4 0915  
                                      u3825 043C                                        u4537 0306  
                                      _PMD5 0916                                        u3754 01DF  
                                      u3755 01DE                                        u3915 0353  
                                      u3764 01EB                                        u3765 01EA  
                                      u3935 0321                                        u3975 0385  
                      ?_do_I2C_SEND_RESTART 0076                                        _WPUA 020C  
                                      _WPUB 020D                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
         __size_of_do_I2C_SEND_RESTART_READ 0004                         ?i1_i2c1_driver_stop 0076  
                 ?_do_I2C_SEND_RESTART_READ 0076                                        _main 02DC  
                 __size_of_do_I2C_SEND_STOP 0004                      __size_of_do_I2C_DO_ACK 0004  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                       ??_setGestureIntEnable 0057  
                          __end_of_I2C_Stop 0722                               __CFG_BOREN$ON 0000  
                   i1_i2c1_driver_getRXData 0746                       ?_do_I2C_SEND_ADR_READ 0076  
                             __CFG_BORV$LOW 0000             ??_i2c1_driver_clearBusCollision 0076  
                                      start 002B                         I2C_Write_Byte@count 0051  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 053F                    ??_do_I2C_DO_NACK_RESTART 0076  
                              _do_I2C_RESET 06C0              __size_of_OSCILLATOR_Initialize 0009  
             __end_of_OSCILLATOR_Initialize 069A                         __size_of_IOCCF1_ISR 000D  
                      ??i1_i2c1_driver_stop 0076                    __end_of_i2c1_driver_open 0688  
                                     ?_main 0076                    __end_of_i2c1_driver_stop 0725  
                             __CFG_WDTE$OFF 0000                  __end_of_i2c1_driver_TXData 06D3  
                            __CFG_DEBUG$OFF 0000                                       i1l157 0241  
                                     i1l173 0276                                       i1l253 0029  
                                     i1l245 0010                                       i1l248 001E  
                              ?_setLEDBoost 0076                                ?_setLEDDrive 0076  
                            _setGestureGain 0342                                       _OSCEN 091D  
                            _setGestureMode 04F2                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 0613                             __end_of_getMode 0691  
                     isGestureAvailable@val 0057                     __end_of_PIN_MANAGER_IOC 06E5  
                __end_of_i2c1_driver_isNACK 06B2                      __size_of_I2C_Read_Byte 000B  
                            _WDT_Initialize 06F3                            _b_i2c_error_flag 004B  
              __end_of_setProxIntHighThresh 0626                  ?_do_I2C_SEND_RESTART_WRITE 0076  
                     ??_do_I2C_SEND_RESTART 0076                             __end_of_setMode 020F  
                         __end_of_I2C_Start 0728                                       pclath 000A  
                   __size_of_mssp1_clearIRQ 0003                        i1_i2c1_driver_TXData 06EA  
              __size_of_setAmbientLightGain 001E                      ?_do_I2C_SEND_ADR_WRITE 0076  
                    __size_of_I2C_Send_NACK 0003                                       status 0003  
                                     wtemp0 007E                    ?_setLightIntLowThreshold 0057  
                __end_of_setGestureLEDDrive 0342                       setGestureWaitTime@val 0059  
                             _fsmStateTable 0563                               _gesture_data_ 00A0  
                           __initialization 002D                      ??_setGestureExitThresh 0057  
                                _i2c_status 0020                                __end_of_main 0310  
                         _handleGestureFlag 004C                 ?_INTERRUPT_InterruptManager 0076  
                    __end_of_setGestureGain 0374                   __size_of_setProximityGain 0029  
                    __end_of_setGestureMode 0519                               _do_I2C_DO_ACK 06FF  
                                    ??_main 005F               __size_of_i2c1_driver_sendNACK 0004  
         __size_of_setLightIntHighThreshold 0027               __size_of_i2c1_driver_resetBus 0001  
                    __end_of_WDT_Initialize 06F7                     ?_do_I2C_DO_ADDRESS_NACK 0076  
                 ?_setLightIntHighThreshold 0057           setLightIntHighThreshold@threshold 0057  
                      __size_of_enablePower 000E                ??_IOCCF1_SetInterruptHandler 004F  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
              setProxIntLowThresh@threshold 0058                       ?i1_i2c1_driver_TXData 0076  
                                    _RB5PPS 0E9D                                      _RB7PPS 0E9F  
                                    _ODCONA 028C                                      _ODCONB 028D  
                                    _ODCONC 028E                                      i1l3600 03AC  
                                    i1l3514 0408                                      i1l3612 03B3  
                                    i1l3524 040E                                      i1l3606 03B0  
                                    i1l3518 040B                                      i1l3542 021B  
                                    i1l3534 0215                                      i1l3538 0218  
                                    i1l3556 025A                                      i1l3548 021E  
                                    i1l3582 027B                                      i1l3578 0278  
                                    i1l3676 0664                                      i1l3596 03A9  
                                    i1l3588 027E                                      i1l3942 0529  
                 ??i1_i2c1_driver_getRXData 0076                                      i1l5780 03C7  
                                    i1l5774 0292                                      i1l5776 0233  
                                    i1l5778 0422                            _wireReadDataByte 053F  
                                    _OSCFRQ 091F                     ?_resetGestureParameters 0076  
                    ??_do_I2C_SEND_ADR_READ 0076                                      _WDTCON 0097  
                                 ??_i2c_ISR 0079                           _gesture_lr_delta_ 0072  
                            __CFG_PWRTE$OFF 0000               setProxIntHighThresh@threshold 0058  
                         _gesture_lr_count_ 0045                         wireReadDataByte@reg 0054  
                     _i2c1_driver_getRXData 0731                         wireReadDataByte@val 0055  
                         _gesture_ud_delta_ 0074                 __end_of_do_I2C_DO_NACK_STOP 06FF  
                             _I2C_Read_Byte 0673                  __end_of_isGestureAvailable 0600  
                         _gesture_ud_count_ 0070       __end_of_i2c1_driver_clearBusCollision 0740  
    __size_of_i2c1_driver_clearBusCollision 0003               _i2c1_driver_clearBusCollision 073D  
                __end_of_setGestureWaitTime 04F2                              __CFG_STVREN$ON 0000  
           __size_of_do_I2C_DO_NACK_RESTART 0004                              ?_do_I2C_DO_ACK 0076  
                           ?_setGestureGain 0076                               _I2C_Send_NACK 072B  
                                 ??_getMode 0056                             ?_setGestureMode 0076  
       __size_of_IOCCF1_SetInterruptHandler 0006                     ??_setGestureEnterThresh 0057  
               __end_of_i2c1_driver_sendACK 071B                              _PMD_Initialize 069A  
            __end_of_do_I2C_DO_ADDRESS_NACK 042B                                   ?_I2C_Stop 0076  
                                 ??_setMode 0059                             ?_WDT_Initialize 0076  
               __end_of_i2c1_driver_restart 073A                                ?_returnReset 0076  
               __end_of_i2c1_driver_startRX 0731                    ?_GestureInterruptHandler 0076  
IOCCF1_SetInterruptHandler@InterruptHandler 004D                            ?_PIN_MANAGER_IOC 0076  
                              ??_IOCCF1_ISR 0076              __end_of_resetGestureParameters 05ED  
                         _SYSTEM_Initialize 0667                     __end_of__initialization 0042  
                          _do_I2C_SEND_STOP 0703                          __size_of_do_I2C_RX 0045  
                        __size_of_do_I2C_TX 004D                          ?_SYSTEM_Initialize 0076  
                    setGestureWaitTime@time 0058                    __size_of_do_I2C_TX_EMPTY 0030  
                            ?_I2C_Read_Byte 0076                              __pcstackCOMMON 0076  
                       ??_SYSTEM_Initialize 004F                       i1i2c1_driver_TXData@d 0076  
                      _setProxIntHighThresh 0613                              _gesture_state_ 003F  
                            ?_I2C_Send_NACK 0076                       i1_i2c1_driver_restart 074F  
                    __end_of_PMD_Initialize 06A2                       i1_i2c1_driver_startRX 0749  
                        __end_of_IOCCF1_ISR 0667           __size_of_i2c1_driver_isBufferFull 0007  
                                ??_I2C_Stop 004D                   ?_i2c1_driver_isBufferFull 0076  
                        _gesture_far_count_ 0041                        __size_of_setLEDBoost 0032  
                      __size_of_setLEDDrive 0029                      _do_I2C_DO_NACK_RESTART 06F7  
                    ??i1_i2c1_driver_TXData 0076                   __end_of_SYSTEM_Initialize 0673  
                            _mssp1_clearIRQ 0740                                  __pbssBANK0 0020  
                                __pbssBANK1 00A0                        wireWriteDataByte@reg 0056  
                      wireWriteDataByte@val 0053                         getMode@enable_value 0057  
                  ??i1_i2c1_driver_sendNACK 0076                      ?_i2c1_driver_getRXData 0076  
              __size_of_i2c_busCollisionISR 0003                                  __pmaintext 02DC  
                             ??_do_I2C_IDLE 0076                               ??_do_I2C_RCEN 0076  
                   setGestureLEDDrive@drive 005A                             __CFG_PPS1WAY$ON 0000  
                           ??_do_I2C_DO_ACK 0076                __size_of_enableGestureSensor 0064  
                                __pintentry 0004                       ?_setProxIntHighThresh 0076  
                   __size_of_I2C_Write_Byte 001C                               ??_I2C_ReStart 004D  
                          _setProximityGain 042B                                 setMode@mode 005C  
                           ?_PMD_Initialize 0076                         _setAmbientLightGain 0583  
            ?_i2c1_driver_clearBusCollision 0076                           ?_i2c1_driver_open 0076  
                         __end_of_do_I2C_RX 02A1                           __end_of_do_I2C_TX 025C  
                         ?_i2c1_driver_stop 0076             __end_of_GestureInterruptHandler 071F  
                        ??_i2c1_driver_open 004D                          ??_i2c1_driver_stop 004D  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                             ?_mssp1_setIRQ 0076          __end_of_IOCCF1_SetInterruptHandler 06D9  
                _IOCCF1_SetInterruptHandler 06D3                                     _OSCTUNE 091E  
                                   _SSP1ADD 0212                                     _SLRCONA 030C  
                                   _SLRCONB 030D                                     _SLRCONC 030E  
                                   _SSP1BUF 0211                      __end_of_mssp1_clearIRQ 0743  
                                   _SSP1MSK 0213                 __end_of_setGestureIntEnable 0401  
                   ??_do_I2C_SEND_ADR_WRITE 0076                 ??_do_I2C_SEND_RESTART_WRITE 0076  
                        _i2c1_driver_TXData 06CD                        ?_setAmbientLightGain 0076  
                        _i2c1_driver_i2cISR 0047                                     _i2c_ISR 0519  
                                 _I2C_Start 0725                             ??_I2C_Read_Byte 004E  
                             setMode@enable 0058                          _i2c1_driver_isNACK 06AA  
                       ?_i2c1_driver_TXData 0076                             ??_I2C_Send_NACK 004D  
                    ?i1_i2c1_driver_restart 0076                           ??_do_I2C_TX_EMPTY 0076  
                       ?_i2c1_driver_isNACK 0076                      ?i1_i2c1_driver_startRX 0076  
                  __end_of_wireReadDataByte 0563                                  _initialize 0046  
                                   _getMode 0688            __size_of_setLightIntLowThreshold 0027  
                        _setGestureLEDDrive 0310                                     __ptext1 05ED  
                                   __ptext2 0046                                     __ptext3 042B  
                                   __ptext4 0600                                     __ptext5 0613  
                                   __ptext6 047D                                     __ptext7 04A4  
                                   __ptext8 0454                                     __ptext9 04CB  
               __size_ofi1_i2c1_driver_stop 0003                         __end_of_do_I2C_IDLE 06EA  
                       __end_of_do_I2C_RCEN 06DF                       _OSCILLATOR_Initialize 0691  
               __end_of_do_I2C_SEND_RESTART 070B                              ??_mssp1_setIRQ 0076  
                      ??_i2c1_driver_TXData 004D                                     _setMode 01C0  
                  ??_PIN_MANAGER_Initialize 004F                                   _IOCCFbits 0399  
                       __end_of_I2C_ReStart 0737                                   _IOCCNbits 0398  
                       ?_setGestureLEDDrive 0076                                   _IOCCPbits 0397  
                           ?_mssp1_clearIRQ 0076                    _do_I2C_SEND_RESTART_READ 070F  
                __size_of_SYSTEM_Initialize 000C                                     clrloop0 06C8  
                      __size_of_returnReset 0002                        end_of_initialization 0042  
                      ??_i2c1_driver_isNACK 0076                       ??_setAmbientLightGain 0057  
              __size_of_setProxIntLowThresh 0013                __end_of_i2c1_driver_sendNACK 06F3  
           __size_ofi1_i2c1_driver_sendNACK 0004                                  ?_I2C_Start 0076  
             enableGestureSensor@interrupts 005E                __end_of_i2c1_driver_resetBus 0757  
             setGestureExitThresh@threshold 0058                        ??_setGestureLEDDrive 0057  
                              initialize@id 005E                            ??_setGestureGain 0057  
                    ??_setProxIntHighThresh 0057                            ??_setGestureMode 0057  
                 _do_I2C_SEND_RESTART_WRITE 070B               __size_of_setGestureExitThresh 0013  
                          ??_WDT_Initialize 004D                           _wireWriteDataByte 05BD  
                                _returnStop 0754                    __end_of_do_I2C_SEND_STOP 0707  
                             ??_enablePower 005D                          ?_wireWriteDataByte 0053  
           setLightIntHighThreshold@val_low 005A              __size_of_setGestureEnterThresh 0013  
             __end_of_setGestureEnterThresh 064C                          _isGestureAvailable 05ED  
                        _setGestureWaitTime 04CB                           __size_of_I2C_Stop 0003  
                               returnStop@p 0076                         ??_wireWriteDataByte 0056  
                          __CFG_FEXTOSC$OFF 0000                         ?_isGestureAvailable 0076  
                       ?_setGestureWaitTime 0076               __size_of_do_I2C_SEND_ADR_READ 0008  
                     setProximityGain@drive 005A            __size_of_GestureInterruptHandler 0004  
          __end_of_i2c1_driver_isBufferFull 06B9                                 _do_I2C_IDLE 06E5  
                               _do_I2C_RCEN 06D9                   __end_of_wireWriteDataByte 05D8  
                            _I2C_Write_Byte 05A1                        ??_isGestureAvailable 0056  
                      ??_setGestureWaitTime 0057                                 ?_initialize 0076  
                               _I2C_ReStart 0734                      i1_i2c1_driver_sendNACK 0713  
                    ?_OSCILLATOR_Initialize 0076                    _setLightIntHighThreshold 04A4  
                           _gesture_motion_ 003D                __size_of_do_I2C_DO_NACK_STOP 0004  
                   ?_do_I2C_DO_NACK_RESTART 0076                         start_initialization 002D  
                        setGestureGain@gain 005A                         _i2c_busCollisionISR 073A  
           __size_of_PIN_MANAGER_Initialize 003B                    ?i1_i2c1_driver_getRXData 0076  
          setLightIntHighThreshold@val_high 005B                         _enableGestureSensor 015C  
                       __end_of_enablePower 065A                __size_of_i2c1_driver_sendACK 0004  
                   ??_i2c1_driver_getRXData 004D                    __end_of_setProximityGain 0454  
              __size_of_i2c1_driver_restart 0003                __size_of_i2c1_driver_startRX 0003  
                               ??_I2C_Start 004D                    __size_of_PIN_MANAGER_IOC 0006  
                      ?_i2c_busCollisionISR 0076                            __CFG_LPBOREN$OFF 0000  
                      __end_of_mssp1_setIRQ 0746                      __end_of_I2C_Write_Byte 05BD  
                          ??_PMD_Initialize 004D             setLightIntLowThreshold@val_high 005B  
                      ?_enableGestureSensor 0076                               ?_do_I2C_RESET 0076  
                        setGestureMode@mode 0058                     _setLightIntLowThreshold 047D  
                 setGestureIntEnable@enable 0059                    setAmbientLightGain@drive 0058  
                               ?_returnStop 0076              __end_of_do_I2C_DO_NACK_RESTART 06FB  
                             ??_setLEDBoost 0057                               ??_setLEDDrive 0057  
                      _i2c1_driver_sendNACK 06EF                      setGestureIntEnable@val 0058  
                               __pbssCOMMON 0070                                   ___latbits 0002  
                      _i2c1_driver_resetBus 0756                               __pcstackBANK0 004D  
                                 _do_I2C_RX 025C                                   _do_I2C_TX 020F  
               ?_IOCCF1_SetInterruptHandler 004D              __size_of_do_I2C_SEND_ADR_WRITE 0007  
             __size_ofi1_i2c1_driver_TXData 0005               __end_of_do_I2C_SEND_ADR_WRITE 06C0  
                 __size_of_i2c1_driver_open 000A                   __size_of_i2c1_driver_stop 0003  
                                  ?_i2c_ISR 0076                         __size_of_initialize 0116  
                           _do_I2C_TX_EMPTY 03A6                                   __pnvBANK0 0060  
                     ??_i2c_busCollisionISR 0076                       __end_of_fsmStateTable 0583  
                    _PIN_MANAGER_Initialize 02A1                     ??i1_i2c1_driver_restart 0076  
                   ??i1_i2c1_driver_startRX 0076                             ?_I2C_Write_Byte 0076  
                     ??_enableGestureSensor 005D                              ??_do_I2C_RESET 0076  
                __size_of_wireWriteDataByte 001B                    ??_do_I2C_DO_ADDRESS_NACK 0076  
               _i2c1_driver_busCollisionISR 0049                         _setProxIntLowThresh 0600  
                     __end_of_do_I2C_DO_ACK 0703                ??_INTERRUPT_InterruptManager 007C  
                  _i2c1_driver_isBufferFull 06B2                                    ?_getMode 0076  
                         ?_wireReadDataByte 0076                  ??_do_I2C_SEND_RESTART_READ 0076  
                     ?_i2c1_driver_sendNACK 0076             __end_ofi1_i2c1_driver_getRXData 0749  
                          ??_mssp1_clearIRQ 0076            ??_IOCCF1_DefaultInterruptHandler 0076  
           ?_IOCCF1_DefaultInterruptHandler 0076                                 _enablePower 064C  
                        ??_wireReadDataByte 0053                       ?_i2c1_driver_resetBus 0076  
        __size_of_do_I2C_SEND_RESTART_WRITE 0004                                    _I2C_Stop 071F  
                  ??_resetGestureParameters 004D                                    ?_setMode 0058  
                                ?_do_I2C_RX 0076                                  ?_do_I2C_TX 0076  
                         _i2c1_driver_start 0728                         __end_of_setLEDBoost 03A6  
                       __end_of_setLEDDrive 047D                        ?_setProxIntLowThresh 0076  
                        ?_i2c1_driver_start 0076                                    _LATAbits 010C  
                                  _LATCbits 010E                         __size_of_returnStop 0002  
                                 clear_ram0 06C7                                    _PIE0bits 0090  
                                  _PIE1bits 0091                __size_of_setGestureIntEnable 002B  
                   _GestureInterruptHandler 071B                         _gesture_near_count_ 0043  
                       ??_i2c1_driver_start 004D         __size_of_INTERRUPT_InterruptManager 0027  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
                     __end_of_I2C_Read_Byte 067E                   ??_setLightIntLowThreshold 0059  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
                            setLEDBoost@val 0059                                    _SSP1STAT 0214  
                __end_ofi1_i2c1_driver_stop 074F                           ??_PIN_MANAGER_IOC 0076  
                     __end_of_I2C_Send_NACK 072E                              setLEDDrive@val 0059  
                         ?_do_I2C_SEND_STOP 0076                   __end_of_i2c1_driver_start 072B  
                             ??_returnReset 0077                          ??_do_I2C_SEND_STOP 0076  
               __size_of_i2c1_driver_TXData 0006                 __end_of_setAmbientLightGain 05A1  
         __end_of_do_I2C_SEND_RESTART_WRITE 070F                     __end_of_do_I2C_TX_EMPTY 03D6  
              __end_of_setGestureExitThresh 0639                       ??_setProxIntLowThresh 0057  
              __size_of_do_I2C_SEND_RESTART 0004                 __size_of_i2c1_driver_isNACK 0008  
                         setGestureGain@val 0059                       __size_of_mssp1_setIRQ 0003  
                       _do_I2C_DO_NACK_STOP 06FB                            __size_of_i2c_ISR 0026  
                ??_setLightIntHighThreshold 0059                 __size_of_setGestureLEDDrive 0032  
                            setMode@reg_val 005B              setLightIntLowThreshold@val_low 005A  
                              ?_do_I2C_IDLE 0076                                ?_do_I2C_RCEN 0076  
                         setGestureMode@val 0059                     ?i1_i2c1_driver_sendNACK 0076  
                   ??_OSCILLATOR_Initialize 004D                         _i2c1_driver_sendACK 0717  
             __size_of_setProxIntHighThresh 0013             __size_of_do_I2C_DO_ADDRESS_NACK 002A  
                       i2c1_driver_TXData@d 004D                      ??_i2c1_driver_sendNACK 004D  
                              ??_initialize 005D                                ?_I2C_ReStart 0076  
                       _i2c1_driver_restart 0737            setLightIntLowThreshold@threshold 0057  
                      ?_do_I2C_DO_NACK_STOP 0076                         _i2c1_driver_startRX 072E  
              __end_of_do_I2C_SEND_ADR_READ 06AA                            __size_of_getMode 0009  
                    ??_i2c1_driver_resetBus 0076                                 _setLEDBoost 0374  
                               _setLEDDrive 0454             __size_of_resetGestureParameters 0015  
                              _mssp1_setIRQ 0743             __end_of_setLightIntLowThreshold 04A4  
                               ??_do_I2C_RX 0076                                 ??_do_I2C_TX 0076  
                     setGestureLEDDrive@val 0059                            __size_of_setMode 004F  
                                  __ptext10 0310                                    __ptext11 0342  
                                  __ptext20 05D8                                    __ptext12 0626  
                                  __ptext21 064C                                    __ptext13 0639  
                                  __ptext30 0725                                    __ptext22 01C0  
                                  __ptext14 0583                                    __ptext31 0728  
                                  __ptext23 05BD                                    __ptext15 067E  
                                  __ptext40 0667                                    __ptext32 072B  
                                  __ptext24 0688                                    __ptext16 015C  
                                  __ptext41 06F3                                    __ptext33 06EF  
                                  __ptext25 053F                                    __ptext17 0374  
                                  __ptext50 0740                                    __ptext42 069A  
                                  __ptext34 0673                                    __ptext26 05A1  
                                  __ptext18 04F2                                    __ptext51 025C  
                                  __ptext43 02A1                                    __ptext35 072E  
                                  __ptext27 06CD                                    __ptext19 03D6  
                                  __ptext60 0703                                    __ptext52 020F  
                                  __ptext44 06D3                                    __ptext36 06B2  
                                  __ptext28 071F                                    __ptext61 0707  
                                  __ptext53 0401                                    __ptext45 0691  
                                  __ptext37 0731                                    __ptext29 0722  
                                  __ptext70 0746                                    __ptext62 070B  
                                  __ptext54 06F7                                    __ptext38 0734  
                                  __ptext71 0713                                    __ptext63 070F  
                                  __ptext55 06FB                                    __ptext47 073A  
                                  __ptext39 0737                                    __ptext80 065A  
                                  __ptext72 0756                                    __ptext64 06E5  
                                  __ptext56 06FF                                    __ptext48 073D  
                                  __ptext81 071B                                    __ptext73 0749  
                                  __ptext65 06C0                                    __ptext57 06D9  
                                  __ptext49 0519                                    __ptext82 0757  
                                  __ptext74 0752                                    __ptext66 03A6  
                                  __ptext58 06B9                                    __ptext75 0754  
                                  __ptext67 0743                                    __ptext59 06A2  
                                  __ptext76 074C                                    __ptext68 06AA  
                                  __ptext77 074F                                    __ptext69 06EA  
                                  __ptext78 0717                                    __ptext79 06DF  
                     _setGestureEnterThresh 0639                                _SSP1CON1bits 0215  
                              _SSP1CON2bits 0216              setGestureEnterThresh@threshold 0058  
                      ?_i2c1_driver_sendACK 0076                        __end_of_do_I2C_RESET 06C7  
                                _IOCCF1_ISR 065A                        ?_i2c1_driver_restart 0076  
                       __end_of_returnReset 0754                   ??_GestureInterruptHandler 0076  
                          _i2c1_driver_open 067E                            _i2c1_driver_stop 0722  
                             __size_of_main 0034                        ?_i2c1_driver_startRX 0076  
                         ?_setProximityGain 0076              __size_of_i2c1_driver_getRXData 0003  
             __end_of_i2c1_driver_getRXData 0734                          __end_of_initialize 015C  
                        ??_setProximityGain 0057            __size_ofi1_i2c1_driver_getRXData 0003  
            __end_ofi1_i2c1_driver_sendNACK 0717                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 002B                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                 __size_of_isGestureAvailable 0013  
                       setProximityGain@val 0059            __end_of_do_I2C_SEND_RESTART_READ 0713  
               __size_of_setGestureWaitTime 0027                                ??_returnStop 0077  
                     ??_do_I2C_DO_NACK_STOP 0076                     __size_of_setGestureGain 0032  
                                _INTCONbits 000B                     __size_of_setGestureMode 0027  
                __size_of_i2c1_driver_start 0003                      setAmbientLightGain@val 0059  
                     ??_i2c1_driver_sendACK 0076                            ?_do_I2C_TX_EMPTY 0076  
                   __size_of_WDT_Initialize 0004                      _do_I2C_DO_ADDRESS_NACK 0401  
                                  intlevel1 0000                       ??_i2c1_driver_restart 004D  
                     ??_i2c1_driver_startRX 004D                     ?_PIN_MANAGER_Initialize 0076  
                          ??_I2C_Write_Byte 004E                           __CFG_CLKOUTEN$OFF 0000  
                        __end_of_returnStop 0756                      _resetGestureParameters 05D8  
                ??_i2c1_driver_isBufferFull 004D              __size_ofi1_i2c1_driver_restart 0003  
             __end_ofi1_i2c1_driver_restart 0752              __size_ofi1_i2c1_driver_startRX 0003  
              __end_ofi1_i2c1_driver_TXData 06EF               __end_ofi1_i2c1_driver_startRX 074C  
                      _setGestureExitThresh 0626                               __pstringtext1 0563  
                                _SSP1DATPPS 0E21                                ?_enablePower 0076  
                                _SSP1CLKPPS 0E20                         _setGestureIntEnable 03D6  
                          setLEDBoost@boost 005A                      ?_setGestureEnterThresh 0076  
                               _returnReset 0752                                 ?_IOCCF1_ISR 0076  
            __end_of_PIN_MANAGER_Initialize 02DC                 __end_of_i2c_busCollisionISR 073D  
                 __size_of_wireReadDataByte 0024      __end_of_IOCCF1_DefaultInterruptHandler 0758  
   __size_of_IOCCF1_DefaultInterruptHandler 0001              _IOCCF1_DefaultInterruptHandler 0757  
                          setLEDDrive@drive 005A                             _PIN_MANAGER_IOC 06DF  
               __end_of_enableGestureSensor 01C0                       _do_I2C_SEND_ADR_WRITE 06B9  
                      ?_setGestureIntEnable 0076                        _do_I2C_SEND_ADR_READ 06A2  
                   _IOCCF1_InterruptHandler 0060            __end_of_setLightIntHighThreshold 04CB  
