

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
<<<<<<< Upstream, based on origin/master
                                                                                               Mon Apr 08 13:17:39 2019
=======
                                                                                               Sun Apr 07 16:16:04 2019
>>>>>>> b288aef trying to integrate UART

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,delta=2
    74                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text45,local,class=CODE,merge=1,delta=2
    78                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text47,local,class=CODE,merge=1,delta=2
    80                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text51,local,class=CODE,merge=1,delta=2
    84                           	psect	text52,local,class=CODE,merge=1,delta=2
    85                           	psect	text53,local,class=CODE,merge=1,delta=2
    86                           	psect	text54,local,class=CODE,merge=1,delta=2
    87                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text57,local,class=CODE,merge=1,delta=2
    90                           	psect	text58,local,class=CODE,merge=1,delta=2
    91                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	text62,local,class=CODE,merge=1,delta=2
    95                           	psect	text63,local,class=CODE,merge=1,delta=2
    96                           	psect	text64,local,class=CODE,merge=1,delta=2
    97                           	psect	text65,local,class=CODE,merge=1,delta=2
    98                           	psect	text66,local,class=CODE,merge=1,delta=2
    99                           	psect	text67,local,class=CODE,merge=1,delta=2
   100                           	psect	text68,local,class=CODE,merge=1,delta=2
   101                           	psect	text69,local,class=CODE,merge=1,delta=2
   102                           	psect	text70,local,class=CODE,merge=1,delta=2
   103                           	psect	text71,local,class=CODE,merge=1,delta=2
   104                           	psect	text72,local,class=CODE,merge=1,delta=2
   105                           	psect	text73,local,class=CODE,merge=1,delta=2
   106                           	psect	text74,local,class=CODE,merge=1,delta=2
   107                           	psect	text75,local,class=CODE,merge=1,delta=2
   108                           	psect	text76,local,class=CODE,merge=1,delta=2
   109                           	psect	text77,local,class=CODE,merge=1,delta=2
   110                           	psect	text78,local,class=CODE,merge=1,delta=2
   111                           	psect	text79,local,class=CODE,merge=1,delta=2
   112                           	psect	text80,local,class=CODE,merge=1,delta=2
   113                           	psect	text81,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text82,local,class=CODE,merge=1,delta=2
   115                           	psect	text83,local,class=CODE,merge=1,delta=2
   116                           	psect	text84,local,class=CODE,merge=1,delta=2
   117                           	psect	text85,local,class=CODE,merge=1,delta=2
   118                           	psect	text86,local,class=CODE,merge=1,delta=2
   119                           	psect	text87,local,class=CODE,merge=1,delta=2
   120                           	psect	intentry,global,class=CODE,delta=2
   121                           	psect	text89,local,class=CODE,merge=1,delta=2
   122                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text91,local,class=CODE,merge=1,delta=2
   124                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text93,local,class=CODE,merge=1,delta=2
   126                           	psect	text94,local,class=CODE,merge=1,delta=2
   127                           	psect	text95,local,class=CODE,merge=1,delta=2
   128                           	psect	text96,local,class=CODE,merge=1,delta=2
   129                           	psect	text97,local,class=CODE,merge=1,delta=2
   130                           	psect	text98,local,class=CODE,merge=1,delta=2
   131                           	psect	text99,local,class=CODE,merge=1,delta=2
   132                           	psect	text100,local,class=CODE,merge=1,delta=2
   133                           	psect	text101,local,class=CODE,merge=1,delta=2
   134                           	psect	text102,local,class=CODE,merge=1,delta=2
   135                           	psect	text103,local,class=CODE,merge=1,delta=2
   136                           	psect	text104,local,class=CODE,merge=1,delta=2
   137                           	psect	text105,local,class=CODE,merge=1,delta=2
   138                           	psect	text106,local,class=CODE,merge=1,delta=2
   139                           	psect	text107,local,class=CODE,merge=1,delta=2
   140                           	psect	text108,local,class=CODE,merge=1,delta=2
   141                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text116,local,class=CODE,merge=1,delta=2
   149                           	psect	text117,local,class=CODE,merge=1,delta=2
   150                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text121,local,class=CODE,merge=1,delta=2
   154                           	psect	text122,local,class=CODE,merge=1,delta=2
   155                           	psect	text123,local,class=CODE,merge=1,delta=2
   156                           	psect	text124,local,class=CODE,merge=1,delta=2
   157                           	psect	text125,local,class=CODE,merge=1,delta=2
   158                           	psect	text126,local,class=CODE,merge=1,delta=2
   159                           	psect	text127,local,class=CODE,merge=1,delta=2
   160                           	dabs	1,0x7E,2
   161  0000                     
   162                           ; Version 2.05
   163                           ; Generated 20/12/2018 GMT
   164                           ; 
   165                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   166                           ; All rights reserved.
   167                           ; 
   168                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   169                           ; 
   170                           ; Redistribution and use in source and binary forms, with or without modification, are
   171                           ; permitted provided that the following conditions are met:
   172                           ; 
   173                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   174                           ;        conditions and the following disclaimer.
   175                           ; 
   176                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   177                           ;        of conditions and the following disclaimer in the documentation and/or other
   178                           ;        materials provided with the distribution.
   179                           ; 
   180                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   181                           ;        software without specific prior written permission.
   182                           ; 
   183                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   184                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   185                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   186                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   187                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   188                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   189                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
<<<<<<< Upstream, based on origin/master
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC16F18345 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0097                     	;# 
   207  009B                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  018E                     	;# 
   228  0197                     	;# 
   229  0199                     	;# 
   230  0199                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019A                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019C                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019D                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  019E                     	;# 
   248  019E                     	;# 
   249  019F                     	;# 
   250  019F                     	;# 
   251  019F                     	;# 
   252  019F                     	;# 
   253  019F                     	;# 
   254  020C                     	;# 
   255  020D                     	;# 
   256  020E                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0219                     	;# 
   274  021A                     	;# 
   275  021B                     	;# 
   276  021C                     	;# 
   277  021D                     	;# 
   278  021D                     	;# 
   279  021E                     	;# 
   280  021F                     	;# 
   281  028C                     	;# 
   282  028D                     	;# 
   283  028E                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0295                     	;# 
   290  0295                     	;# 
   291  0296                     	;# 
   292  0297                     	;# 
   293  0298                     	;# 
   294  029F                     	;# 
   295  030C                     	;# 
   296  030D                     	;# 
   297  030E                     	;# 
   298  0311                     	;# 
   299  0311                     	;# 
   300  0312                     	;# 
   301  0313                     	;# 
   302  0314                     	;# 
   303  0315                     	;# 
   304  0315                     	;# 
   305  0316                     	;# 
   306  0317                     	;# 
   307  0318                     	;# 
   308  038C                     	;# 
   309  038D                     	;# 
   310  038E                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  0393                     	;# 
   314  0394                     	;# 
   315  0395                     	;# 
   316  0396                     	;# 
   317  0397                     	;# 
   318  0398                     	;# 
   319  0399                     	;# 
   320  039A                     	;# 
   321  039C                     	;# 
   322  039D                     	;# 
   323  039E                     	;# 
   324  039F                     	;# 
   325  0411                     	;# 
   326  0411                     	;# 
   327  0412                     	;# 
   328  0413                     	;# 
   329  0414                     	;# 
   330  0415                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  0418                     	;# 
   334  0418                     	;# 
   335  0419                     	;# 
   336  041A                     	;# 
   337  041B                     	;# 
   338  041C                     	;# 
   339  041D                     	;# 
   340  041E                     	;# 
   341  041F                     	;# 
   342  0498                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  049E                     	;# 
   351  049F                     	;# 
   352  0617                     	;# 
   353  0618                     	;# 
   354  0619                     	;# 
   355  0619                     	;# 
   356  061A                     	;# 
   357  061B                     	;# 
   358  061C                     	;# 
   359  061C                     	;# 
   360  061F                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0696                     	;# 
   367  0697                     	;# 
   368  0698                     	;# 
   369  0699                     	;# 
   370  0711                     	;# 
   371  0712                     	;# 
   372  0713                     	;# 
   373  0714                     	;# 
   374  0715                     	;# 
   375  0716                     	;# 
   376  0717                     	;# 
   377  0718                     	;# 
   378  0719                     	;# 
   379  0891                     	;# 
   380  0891                     	;# 
   381  0891                     	;# 
   382  0891                     	;# 
   383  0891                     	;# 
   384  0891                     	;# 
   385  0892                     	;# 
   386  0892                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0893                     	;# 
   391  0893                     	;# 
   392  0893                     	;# 
   393  0893                     	;# 
   394  0894                     	;# 
   395  0894                     	;# 
   396  0894                     	;# 
   397  0895                     	;# 
   398  0895                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0896                     	;# 
   402  0896                     	;# 
   403  089B                     	;# 
   404  0911                     	;# 
   405  0912                     	;# 
   406  0913                     	;# 
   407  0914                     	;# 
   408  0915                     	;# 
   409  0916                     	;# 
   410  0918                     	;# 
   411  0919                     	;# 
   412  091A                     	;# 
   413  091B                     	;# 
   414  091C                     	;# 
   415  091D                     	;# 
   416  091E                     	;# 
   417  091F                     	;# 
   418  0E0F                     	;# 
   419  0E10                     	;# 
   420  0E11                     	;# 
   421  0E12                     	;# 
   422  0E13                     	;# 
   423  0E14                     	;# 
   424  0E15                     	;# 
   425  0E16                     	;# 
   426  0E17                     	;# 
   427  0E18                     	;# 
   428  0E19                     	;# 
   429  0E1A                     	;# 
   430  0E1B                     	;# 
   431  0E1C                     	;# 
   432  0E1D                     	;# 
   433  0E1E                     	;# 
   434  0E1F                     	;# 
   435  0E20                     	;# 
   436  0E21                     	;# 
   437  0E22                     	;# 
   438  0E24                     	;# 
   439  0E25                     	;# 
   440  0E28                     	;# 
   441  0E29                     	;# 
   442  0E2A                     	;# 
   443  0E2B                     	;# 
   444  0E2C                     	;# 
   445  0E2D                     	;# 
   446  0E2E                     	;# 
   447  0E2F                     	;# 
   448  0E90                     	;# 
   449  0E91                     	;# 
   450  0E92                     	;# 
   451  0E94                     	;# 
   452  0E95                     	;# 
   453  0E9C                     	;# 
   454  0E9D                     	;# 
   455  0E9E                     	;# 
   456  0E9F                     	;# 
   457  0EA0                     	;# 
   458  0EA1                     	;# 
   459  0EA2                     	;# 
   460  0EA3                     	;# 
   461  0EA4                     	;# 
   462  0EA5                     	;# 
   463  0EA6                     	;# 
   464  0EA7                     	;# 
   465  0F0F                     	;# 
   466  0F10                     	;# 
   467  0F11                     	;# 
   468  0F12                     	;# 
   469  0F13                     	;# 
   470  0F14                     	;# 
   471  0F15                     	;# 
   472  0F16                     	;# 
   473  0F17                     	;# 
   474  0F18                     	;# 
   475  0F19                     	;# 
   476  0F1A                     	;# 
   477  0F1B                     	;# 
   478  0F1C                     	;# 
   479  0F1D                     	;# 
   480  0F1E                     	;# 
   481  0F1F                     	;# 
   482  0F20                     	;# 
   483  0F21                     	;# 
   484  0F22                     	;# 
   485  0F23                     	;# 
   486  0F24                     	;# 
   487  0F25                     	;# 
   488  0F26                     	;# 
   489  0F27                     	;# 
   490  0F28                     	;# 
   491  0F29                     	;# 
   492  0F2A                     	;# 
   493  0F2B                     	;# 
   494  0F2C                     	;# 
   495  0F2D                     	;# 
   496  0F2E                     	;# 
   497  0F2F                     	;# 
   498  0F30                     	;# 
   499  0F31                     	;# 
   500  0F32                     	;# 
   501  0F33                     	;# 
   502  0F34                     	;# 
   503  0F35                     	;# 
   504  0F36                     	;# 
   505  0F37                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  0010                     	;# 
   533  0011                     	;# 
   534  0012                     	;# 
   535  0013                     	;# 
   536  0014                     	;# 
   537  0015                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  001D                     	;# 
   549  001E                     	;# 
   550  001F                     	;# 
   551  008C                     	;# 
   552  008D                     	;# 
   553  008E                     	;# 
   554  0090                     	;# 
   555  0091                     	;# 
   556  0092                     	;# 
   557  0093                     	;# 
   558  0094                     	;# 
   559  0097                     	;# 
   560  009B                     	;# 
   561  009B                     	;# 
   562  009C                     	;# 
   563  009D                     	;# 
   564  009E                     	;# 
   565  009F                     	;# 
   566  010C                     	;# 
   567  010D                     	;# 
   568  010E                     	;# 
   569  0111                     	;# 
   570  0112                     	;# 
   571  0113                     	;# 
   572  0114                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0197                     	;# 
   582  0199                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019C                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019D                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  020D                     	;# 
   609  020E                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  0219                     	;# 
   627  021A                     	;# 
   628  021B                     	;# 
   629  021C                     	;# 
   630  021D                     	;# 
   631  021D                     	;# 
   632  021E                     	;# 
   633  021F                     	;# 
   634  028C                     	;# 
   635  028D                     	;# 
   636  028E                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0294                     	;# 
   642  0295                     	;# 
   643  0295                     	;# 
   644  0296                     	;# 
   645  0297                     	;# 
   646  0298                     	;# 
   647  029F                     	;# 
   648  030C                     	;# 
   649  030D                     	;# 
   650  030E                     	;# 
   651  0311                     	;# 
   652  0311                     	;# 
   653  0312                     	;# 
   654  0313                     	;# 
   655  0314                     	;# 
   656  0315                     	;# 
   657  0315                     	;# 
   658  0316                     	;# 
   659  0317                     	;# 
   660  0318                     	;# 
   661  038C                     	;# 
   662  038D                     	;# 
   663  038E                     	;# 
   664  0391                     	;# 
   665  0392                     	;# 
   666  0393                     	;# 
   667  0394                     	;# 
   668  0395                     	;# 
   669  0396                     	;# 
   670  0397                     	;# 
   671  0398                     	;# 
   672  0399                     	;# 
   673  039A                     	;# 
   674  039C                     	;# 
   675  039D                     	;# 
   676  039E                     	;# 
   677  039F                     	;# 
   678  0411                     	;# 
   679  0411                     	;# 
   680  0412                     	;# 
   681  0413                     	;# 
   682  0414                     	;# 
   683  0415                     	;# 
   684  0416                     	;# 
   685  0417                     	;# 
   686  0418                     	;# 
   687  0418                     	;# 
   688  0419                     	;# 
   689  041A                     	;# 
   690  041B                     	;# 
   691  041C                     	;# 
   692  041D                     	;# 
   693  041E                     	;# 
   694  041F                     	;# 
   695  0498                     	;# 
   696  0498                     	;# 
   697  0499                     	;# 
   698  049A                     	;# 
   699  049B                     	;# 
   700  049B                     	;# 
   701  049C                     	;# 
   702  049D                     	;# 
   703  049E                     	;# 
   704  049F                     	;# 
   705  0617                     	;# 
   706  0618                     	;# 
   707  0619                     	;# 
   708  0619                     	;# 
   709  061A                     	;# 
   710  061B                     	;# 
   711  061C                     	;# 
   712  061C                     	;# 
   713  061F                     	;# 
   714  0691                     	;# 
   715  0692                     	;# 
   716  0693                     	;# 
   717  0694                     	;# 
   718  0695                     	;# 
   719  0696                     	;# 
   720  0697                     	;# 
   721  0698                     	;# 
   722  0699                     	;# 
   723  0711                     	;# 
   724  0712                     	;# 
   725  0713                     	;# 
   726  0714                     	;# 
   727  0715                     	;# 
   728  0716                     	;# 
   729  0717                     	;# 
   730  0718                     	;# 
   731  0719                     	;# 
   732  0891                     	;# 
   733  0891                     	;# 
   734  0891                     	;# 
   735  0891                     	;# 
   736  0891                     	;# 
   737  0891                     	;# 
   738  0892                     	;# 
   739  0892                     	;# 
   740  0892                     	;# 
   741  0893                     	;# 
   742  0893                     	;# 
   743  0893                     	;# 
   744  0893                     	;# 
   745  0893                     	;# 
   746  0893                     	;# 
   747  0894                     	;# 
   748  0894                     	;# 
   749  0894                     	;# 
   750  0895                     	;# 
   751  0895                     	;# 
   752  0895                     	;# 
   753  0896                     	;# 
   754  0896                     	;# 
   755  0896                     	;# 
   756  089B                     	;# 
   757  0911                     	;# 
   758  0912                     	;# 
   759  0913                     	;# 
   760  0914                     	;# 
   761  0915                     	;# 
   762  0916                     	;# 
   763  0918                     	;# 
   764  0919                     	;# 
   765  091A                     	;# 
   766  091B                     	;# 
   767  091C                     	;# 
   768  091D                     	;# 
   769  091E                     	;# 
   770  091F                     	;# 
   771  0E0F                     	;# 
   772  0E10                     	;# 
   773  0E11                     	;# 
   774  0E12                     	;# 
   775  0E13                     	;# 
   776  0E14                     	;# 
   777  0E15                     	;# 
   778  0E16                     	;# 
   779  0E17                     	;# 
   780  0E18                     	;# 
   781  0E19                     	;# 
   782  0E1A                     	;# 
   783  0E1B                     	;# 
   784  0E1C                     	;# 
   785  0E1D                     	;# 
   786  0E1E                     	;# 
   787  0E1F                     	;# 
   788  0E20                     	;# 
   789  0E21                     	;# 
   790  0E22                     	;# 
   791  0E24                     	;# 
   792  0E25                     	;# 
   793  0E28                     	;# 
   794  0E29                     	;# 
   795  0E2A                     	;# 
   796  0E2B                     	;# 
   797  0E2C                     	;# 
   798  0E2D                     	;# 
   799  0E2E                     	;# 
   800  0E2F                     	;# 
   801  0E90                     	;# 
   802  0E91                     	;# 
   803  0E92                     	;# 
   804  0E94                     	;# 
   805  0E95                     	;# 
   806  0E9C                     	;# 
   807  0E9D                     	;# 
   808  0E9E                     	;# 
   809  0E9F                     	;# 
   810  0EA0                     	;# 
   811  0EA1                     	;# 
   812  0EA2                     	;# 
   813  0EA3                     	;# 
   814  0EA4                     	;# 
   815  0EA5                     	;# 
   816  0EA6                     	;# 
   817  0EA7                     	;# 
   818  0F0F                     	;# 
   819  0F10                     	;# 
   820  0F11                     	;# 
   821  0F12                     	;# 
   822  0F13                     	;# 
   823  0F14                     	;# 
   824  0F15                     	;# 
   825  0F16                     	;# 
   826  0F17                     	;# 
   827  0F18                     	;# 
   828  0F19                     	;# 
   829  0F1A                     	;# 
   830  0F1B                     	;# 
   831  0F1C                     	;# 
   832  0F1D                     	;# 
   833  0F1E                     	;# 
   834  0F1F                     	;# 
   835  0F20                     	;# 
   836  0F21                     	;# 
   837  0F22                     	;# 
   838  0F23                     	;# 
   839  0F24                     	;# 
   840  0F25                     	;# 
   841  0F26                     	;# 
   842  0F27                     	;# 
   843  0F28                     	;# 
   844  0F29                     	;# 
   845  0F2A                     	;# 
   846  0F2B                     	;# 
   847  0F2C                     	;# 
   848  0F2D                     	;# 
   849  0F2E                     	;# 
   850  0F2F                     	;# 
   851  0F30                     	;# 
   852  0F31                     	;# 
   853  0F32                     	;# 
   854  0F33                     	;# 
   855  0F34                     	;# 
   856  0F35                     	;# 
   857  0F36                     	;# 
   858  0F37                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  0010                     	;# 
   886  0011                     	;# 
   887  0012                     	;# 
   888  0013                     	;# 
   889  0014                     	;# 
   890  0015                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  0090                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0097                     	;# 
   913  009B                     	;# 
   914  009B                     	;# 
   915  009C                     	;# 
   916  009D                     	;# 
   917  009E                     	;# 
   918  009F                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  010E                     	;# 
   922  0111                     	;# 
   923  0112                     	;# 
   924  0113                     	;# 
   925  0114                     	;# 
   926  0115                     	;# 
   927  0116                     	;# 
   928  0117                     	;# 
   929  0118                     	;# 
   930  0119                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  018E                     	;# 
   934  0197                     	;# 
   935  0199                     	;# 
   936  0199                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019A                     	;# 
   940  019A                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019D                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019E                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  019F                     	;# 
   957  019F                     	;# 
   958  019F                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  020E                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0219                     	;# 
   980  021A                     	;# 
   981  021B                     	;# 
   982  021C                     	;# 
   983  021D                     	;# 
   984  021D                     	;# 
   985  021E                     	;# 
   986  021F                     	;# 
   987  028C                     	;# 
   988  028D                     	;# 
   989  028E                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0294                     	;# 
   995  0295                     	;# 
   996  0295                     	;# 
   997  0296                     	;# 
   998  0297                     	;# 
   999  0298                     	;# 
  1000  029F                     	;# 
  1001  030C                     	;# 
  1002  030D                     	;# 
  1003  030E                     	;# 
  1004  0311                     	;# 
  1005  0311                     	;# 
  1006  0312                     	;# 
  1007  0313                     	;# 
  1008  0314                     	;# 
  1009  0315                     	;# 
  1010  0315                     	;# 
  1011  0316                     	;# 
  1012  0317                     	;# 
  1013  0318                     	;# 
  1014  038C                     	;# 
  1015  038D                     	;# 
  1016  038E                     	;# 
  1017  0391                     	;# 
  1018  0392                     	;# 
  1019  0393                     	;# 
  1020  0394                     	;# 
  1021  0395                     	;# 
  1022  0396                     	;# 
  1023  0397                     	;# 
  1024  0398                     	;# 
  1025  0399                     	;# 
  1026  039A                     	;# 
  1027  039C                     	;# 
  1028  039D                     	;# 
  1029  039E                     	;# 
  1030  039F                     	;# 
  1031  0411                     	;# 
  1032  0411                     	;# 
  1033  0412                     	;# 
  1034  0413                     	;# 
  1035  0414                     	;# 
  1036  0415                     	;# 
  1037  0416                     	;# 
  1038  0417                     	;# 
  1039  0418                     	;# 
  1040  0418                     	;# 
  1041  0419                     	;# 
  1042  041A                     	;# 
  1043  041B                     	;# 
  1044  041C                     	;# 
  1045  041D                     	;# 
  1046  041E                     	;# 
  1047  041F                     	;# 
  1048  0498                     	;# 
  1049  0498                     	;# 
  1050  0499                     	;# 
  1051  049A                     	;# 
  1052  049B                     	;# 
  1053  049B                     	;# 
  1054  049C                     	;# 
  1055  049D                     	;# 
  1056  049E                     	;# 
  1057  049F                     	;# 
  1058  0617                     	;# 
  1059  0618                     	;# 
  1060  0619                     	;# 
  1061  0619                     	;# 
  1062  061A                     	;# 
  1063  061B                     	;# 
  1064  061C                     	;# 
  1065  061C                     	;# 
  1066  061F                     	;# 
  1067  0691                     	;# 
  1068  0692                     	;# 
  1069  0693                     	;# 
  1070  0694                     	;# 
  1071  0695                     	;# 
  1072  0696                     	;# 
  1073  0697                     	;# 
  1074  0698                     	;# 
  1075  0699                     	;# 
  1076  0711                     	;# 
  1077  0712                     	;# 
  1078  0713                     	;# 
  1079  0714                     	;# 
  1080  0715                     	;# 
  1081  0716                     	;# 
  1082  0717                     	;# 
  1083  0718                     	;# 
  1084  0719                     	;# 
  1085  0891                     	;# 
  1086  0891                     	;# 
  1087  0891                     	;# 
  1088  0891                     	;# 
  1089  0891                     	;# 
  1090  0891                     	;# 
  1091  0892                     	;# 
  1092  0892                     	;# 
  1093  0892                     	;# 
  1094  0893                     	;# 
  1095  0893                     	;# 
  1096  0893                     	;# 
  1097  0893                     	;# 
  1098  0893                     	;# 
  1099  0893                     	;# 
  1100  0894                     	;# 
  1101  0894                     	;# 
  1102  0894                     	;# 
  1103  0895                     	;# 
  1104  0895                     	;# 
  1105  0895                     	;# 
  1106  0896                     	;# 
  1107  0896                     	;# 
  1108  0896                     	;# 
  1109  089B                     	;# 
  1110  0911                     	;# 
  1111  0912                     	;# 
  1112  0913                     	;# 
  1113  0914                     	;# 
  1114  0915                     	;# 
  1115  0916                     	;# 
  1116  0918                     	;# 
  1117  0919                     	;# 
  1118  091A                     	;# 
  1119  091B                     	;# 
  1120  091C                     	;# 
  1121  091D                     	;# 
  1122  091E                     	;# 
  1123  091F                     	;# 
  1124  0E0F                     	;# 
  1125  0E10                     	;# 
  1126  0E11                     	;# 
  1127  0E12                     	;# 
  1128  0E13                     	;# 
  1129  0E14                     	;# 
  1130  0E15                     	;# 
  1131  0E16                     	;# 
  1132  0E17                     	;# 
  1133  0E18                     	;# 
  1134  0E19                     	;# 
  1135  0E1A                     	;# 
  1136  0E1B                     	;# 
  1137  0E1C                     	;# 
  1138  0E1D                     	;# 
  1139  0E1E                     	;# 
  1140  0E1F                     	;# 
  1141  0E20                     	;# 
  1142  0E21                     	;# 
  1143  0E22                     	;# 
  1144  0E24                     	;# 
  1145  0E25                     	;# 
  1146  0E28                     	;# 
  1147  0E29                     	;# 
  1148  0E2A                     	;# 
  1149  0E2B                     	;# 
  1150  0E2C                     	;# 
  1151  0E2D                     	;# 
  1152  0E2E                     	;# 
  1153  0E2F                     	;# 
  1154  0E90                     	;# 
  1155  0E91                     	;# 
  1156  0E92                     	;# 
  1157  0E94                     	;# 
  1158  0E95                     	;# 
  1159  0E9C                     	;# 
  1160  0E9D                     	;# 
  1161  0E9E                     	;# 
  1162  0E9F                     	;# 
  1163  0EA0                     	;# 
  1164  0EA1                     	;# 
  1165  0EA2                     	;# 
  1166  0EA3                     	;# 
  1167  0EA4                     	;# 
  1168  0EA5                     	;# 
  1169  0EA6                     	;# 
  1170  0EA7                     	;# 
  1171  0F0F                     	;# 
  1172  0F10                     	;# 
  1173  0F11                     	;# 
  1174  0F12                     	;# 
  1175  0F13                     	;# 
  1176  0F14                     	;# 
  1177  0F15                     	;# 
  1178  0F16                     	;# 
  1179  0F17                     	;# 
  1180  0F18                     	;# 
  1181  0F19                     	;# 
  1182  0F1A                     	;# 
  1183  0F1B                     	;# 
  1184  0F1C                     	;# 
  1185  0F1D                     	;# 
  1186  0F1E                     	;# 
  1187  0F1F                     	;# 
  1188  0F20                     	;# 
  1189  0F21                     	;# 
  1190  0F22                     	;# 
  1191  0F23                     	;# 
  1192  0F24                     	;# 
  1193  0F25                     	;# 
  1194  0F26                     	;# 
  1195  0F27                     	;# 
  1196  0F28                     	;# 
  1197  0F29                     	;# 
  1198  0F2A                     	;# 
  1199  0F2B                     	;# 
  1200  0F2C                     	;# 
  1201  0F2D                     	;# 
  1202  0F2E                     	;# 
  1203  0F2F                     	;# 
  1204  0F30                     	;# 
  1205  0F31                     	;# 
  1206  0F32                     	;# 
  1207  0F33                     	;# 
  1208  0F34                     	;# 
  1209  0F35                     	;# 
  1210  0F36                     	;# 
  1211  0F37                     	;# 
  1212  0FE4                     	;# 
  1213  0FE5                     	;# 
  1214  0FE6                     	;# 
  1215  0FE7                     	;# 
  1216  0FE8                     	;# 
  1217  0FE9                     	;# 
  1218  0FEA                     	;# 
  1219  0FEB                     	;# 
  1220  0FED                     	;# 
  1221  0FEE                     	;# 
  1222  0FEF                     	;# 
  1223  0000                     	;# 
  1224  0001                     	;# 
  1225  0002                     	;# 
  1226  0003                     	;# 
  1227  0004                     	;# 
  1228  0005                     	;# 
  1229  0006                     	;# 
  1230  0007                     	;# 
  1231  0008                     	;# 
  1232  0009                     	;# 
  1233  000A                     	;# 
  1234  000B                     	;# 
  1235  000C                     	;# 
  1236  000D                     	;# 
  1237  000E                     	;# 
  1238  0010                     	;# 
  1239  0011                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0014                     	;# 
  1243  0015                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001B                     	;# 
  1253  001C                     	;# 
  1254  001D                     	;# 
  1255  001E                     	;# 
  1256  001F                     	;# 
  1257  008C                     	;# 
  1258  008D                     	;# 
  1259  008E                     	;# 
  1260  0090                     	;# 
  1261  0091                     	;# 
  1262  0092                     	;# 
  1263  0093                     	;# 
  1264  0094                     	;# 
  1265  0097                     	;# 
  1266  009B                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  009F                     	;# 
  1272  010C                     	;# 
  1273  010D                     	;# 
  1274  010E                     	;# 
  1275  0111                     	;# 
  1276  0112                     	;# 
  1277  0113                     	;# 
  1278  0114                     	;# 
  1279  0115                     	;# 
  1280  0116                     	;# 
  1281  0117                     	;# 
  1282  0118                     	;# 
  1283  0119                     	;# 
  1284  018C                     	;# 
  1285  018D                     	;# 
  1286  018E                     	;# 
  1287  0197                     	;# 
  1288  0199                     	;# 
  1289  0199                     	;# 
  1290  0199                     	;# 
  1291  019A                     	;# 
  1292  019A                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019C                     	;# 
  1302  019D                     	;# 
  1303  019D                     	;# 
  1304  019D                     	;# 
  1305  019E                     	;# 
  1306  019E                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  019F                     	;# 
  1312  019F                     	;# 
  1313  020C                     	;# 
  1314  020D                     	;# 
  1315  020E                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0216                     	;# 
  1329  0216                     	;# 
  1330  0217                     	;# 
  1331  0217                     	;# 
  1332  0219                     	;# 
  1333  021A                     	;# 
  1334  021B                     	;# 
  1335  021C                     	;# 
  1336  021D                     	;# 
  1337  021D                     	;# 
  1338  021E                     	;# 
  1339  021F                     	;# 
  1340  028C                     	;# 
  1341  028D                     	;# 
  1342  028E                     	;# 
  1343  0291                     	;# 
  1344  0291                     	;# 
  1345  0292                     	;# 
  1346  0293                     	;# 
  1347  0294                     	;# 
  1348  0295                     	;# 
  1349  0295                     	;# 
  1350  0296                     	;# 
  1351  0297                     	;# 
  1352  0298                     	;# 
  1353  029F                     	;# 
  1354  030C                     	;# 
  1355  030D                     	;# 
  1356  030E                     	;# 
  1357  0311                     	;# 
  1358  0311                     	;# 
  1359  0312                     	;# 
  1360  0313                     	;# 
  1361  0314                     	;# 
  1362  0315                     	;# 
  1363  0315                     	;# 
  1364  0316                     	;# 
  1365  0317                     	;# 
  1366  0318                     	;# 
  1367  038C                     	;# 
  1368  038D                     	;# 
  1369  038E                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0397                     	;# 
  1377  0398                     	;# 
  1378  0399                     	;# 
  1379  039A                     	;# 
  1380  039C                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  0411                     	;# 
  1385  0411                     	;# 
  1386  0412                     	;# 
  1387  0413                     	;# 
  1388  0414                     	;# 
  1389  0415                     	;# 
  1390  0416                     	;# 
  1391  0417                     	;# 
  1392  0418                     	;# 
  1393  0418                     	;# 
  1394  0419                     	;# 
  1395  041A                     	;# 
  1396  041B                     	;# 
  1397  041C                     	;# 
  1398  041D                     	;# 
  1399  041E                     	;# 
  1400  041F                     	;# 
  1401  0498                     	;# 
  1402  0498                     	;# 
  1403  0499                     	;# 
  1404  049A                     	;# 
  1405  049B                     	;# 
  1406  049B                     	;# 
  1407  049C                     	;# 
  1408  049D                     	;# 
  1409  049E                     	;# 
  1410  049F                     	;# 
  1411  0617                     	;# 
  1412  0618                     	;# 
  1413  0619                     	;# 
  1414  0619                     	;# 
  1415  061A                     	;# 
  1416  061B                     	;# 
  1417  061C                     	;# 
  1418  061C                     	;# 
  1419  061F                     	;# 
  1420  0691                     	;# 
  1421  0692                     	;# 
  1422  0693                     	;# 
  1423  0694                     	;# 
  1424  0695                     	;# 
  1425  0696                     	;# 
  1426  0697                     	;# 
  1427  0698                     	;# 
  1428  0699                     	;# 
  1429  0711                     	;# 
  1430  0712                     	;# 
  1431  0713                     	;# 
  1432  0714                     	;# 
  1433  0715                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  0891                     	;# 
  1439  0891                     	;# 
  1440  0891                     	;# 
  1441  0891                     	;# 
  1442  0891                     	;# 
  1443  0891                     	;# 
  1444  0892                     	;# 
  1445  0892                     	;# 
  1446  0892                     	;# 
  1447  0893                     	;# 
  1448  0893                     	;# 
  1449  0893                     	;# 
  1450  0893                     	;# 
  1451  0893                     	;# 
  1452  0893                     	;# 
  1453  0894                     	;# 
  1454  0894                     	;# 
  1455  0894                     	;# 
  1456  0895                     	;# 
  1457  0895                     	;# 
  1458  0895                     	;# 
  1459  0896                     	;# 
  1460  0896                     	;# 
  1461  0896                     	;# 
  1462  089B                     	;# 
  1463  0911                     	;# 
  1464  0912                     	;# 
  1465  0913                     	;# 
  1466  0914                     	;# 
  1467  0915                     	;# 
  1468  0916                     	;# 
  1469  0918                     	;# 
  1470  0919                     	;# 
  1471  091A                     	;# 
  1472  091B                     	;# 
  1473  091C                     	;# 
  1474  091D                     	;# 
  1475  091E                     	;# 
  1476  091F                     	;# 
  1477  0E0F                     	;# 
  1478  0E10                     	;# 
  1479  0E11                     	;# 
  1480  0E12                     	;# 
  1481  0E13                     	;# 
  1482  0E14                     	;# 
  1483  0E15                     	;# 
  1484  0E16                     	;# 
  1485  0E17                     	;# 
  1486  0E18                     	;# 
  1487  0E19                     	;# 
  1488  0E1A                     	;# 
  1489  0E1B                     	;# 
  1490  0E1C                     	;# 
  1491  0E1D                     	;# 
  1492  0E1E                     	;# 
  1493  0E1F                     	;# 
  1494  0E20                     	;# 
  1495  0E21                     	;# 
  1496  0E22                     	;# 
  1497  0E24                     	;# 
  1498  0E25                     	;# 
  1499  0E28                     	;# 
  1500  0E29                     	;# 
  1501  0E2A                     	;# 
  1502  0E2B                     	;# 
  1503  0E2C                     	;# 
  1504  0E2D                     	;# 
  1505  0E2E                     	;# 
  1506  0E2F                     	;# 
  1507  0E90                     	;# 
  1508  0E91                     	;# 
  1509  0E92                     	;# 
  1510  0E94                     	;# 
  1511  0E95                     	;# 
  1512  0E9C                     	;# 
  1513  0E9D                     	;# 
  1514  0E9E                     	;# 
  1515  0E9F                     	;# 
  1516  0EA0                     	;# 
  1517  0EA1                     	;# 
  1518  0EA2                     	;# 
  1519  0EA3                     	;# 
  1520  0EA4                     	;# 
  1521  0EA5                     	;# 
  1522  0EA6                     	;# 
  1523  0EA7                     	;# 
  1524  0F0F                     	;# 
  1525  0F10                     	;# 
  1526  0F11                     	;# 
  1527  0F12                     	;# 
  1528  0F13                     	;# 
  1529  0F14                     	;# 
  1530  0F15                     	;# 
  1531  0F16                     	;# 
  1532  0F17                     	;# 
  1533  0F18                     	;# 
  1534  0F19                     	;# 
  1535  0F1A                     	;# 
  1536  0F1B                     	;# 
  1537  0F1C                     	;# 
  1538  0F1D                     	;# 
  1539  0F1E                     	;# 
  1540  0F1F                     	;# 
  1541  0F20                     	;# 
  1542  0F21                     	;# 
  1543  0F22                     	;# 
  1544  0F23                     	;# 
  1545  0F24                     	;# 
  1546  0F25                     	;# 
  1547  0F26                     	;# 
  1548  0F27                     	;# 
  1549  0F28                     	;# 
  1550  0F29                     	;# 
  1551  0F2A                     	;# 
  1552  0F2B                     	;# 
  1553  0F2C                     	;# 
  1554  0F2D                     	;# 
  1555  0F2E                     	;# 
  1556  0F2F                     	;# 
  1557  0F30                     	;# 
  1558  0F31                     	;# 
  1559  0F32                     	;# 
  1560  0F33                     	;# 
  1561  0F34                     	;# 
  1562  0F35                     	;# 
  1563  0F36                     	;# 
  1564  0F37                     	;# 
  1565  0FE4                     	;# 
  1566  0FE5                     	;# 
  1567  0FE6                     	;# 
  1568  0FE7                     	;# 
  1569  0FE8                     	;# 
  1570  0FE9                     	;# 
  1571  0FEA                     	;# 
  1572  0FEB                     	;# 
  1573  0FED                     	;# 
  1574  0FEE                     	;# 
  1575  0FEF                     	;# 
  1576  0000                     	;# 
  1577  0001                     	;# 
  1578  0002                     	;# 
  1579  0003                     	;# 
  1580  0004                     	;# 
  1581  0005                     	;# 
  1582  0006                     	;# 
  1583  0007                     	;# 
  1584  0008                     	;# 
  1585  0009                     	;# 
  1586  000A                     	;# 
  1587  000B                     	;# 
  1588  000C                     	;# 
  1589  000D                     	;# 
  1590  000E                     	;# 
  1591  0010                     	;# 
  1592  0011                     	;# 
  1593  0012                     	;# 
  1594  0013                     	;# 
  1595  0014                     	;# 
  1596  0015                     	;# 
  1597  0015                     	;# 
  1598  0016                     	;# 
  1599  0016                     	;# 
  1600  0017                     	;# 
  1601  0018                     	;# 
  1602  0019                     	;# 
  1603  0019                     	;# 
  1604  001A                     	;# 
  1605  001B                     	;# 
  1606  001C                     	;# 
  1607  001D                     	;# 
  1608  001E                     	;# 
  1609  001F                     	;# 
  1610  008C                     	;# 
  1611  008D                     	;# 
  1612  008E                     	;# 
  1613  0090                     	;# 
  1614  0091                     	;# 
  1615  0092                     	;# 
  1616  0093                     	;# 
  1617  0094                     	;# 
  1618  0097                     	;# 
  1619  009B                     	;# 
  1620  009B                     	;# 
  1621  009C                     	;# 
  1622  009D                     	;# 
  1623  009E                     	;# 
  1624  009F                     	;# 
  1625  010C                     	;# 
  1626  010D                     	;# 
  1627  010E                     	;# 
  1628  0111                     	;# 
  1629  0112                     	;# 
  1630  0113                     	;# 
  1631  0114                     	;# 
  1632  0115                     	;# 
  1633  0116                     	;# 
  1634  0117                     	;# 
  1635  0118                     	;# 
  1636  0119                     	;# 
  1637  018C                     	;# 
  1638  018D                     	;# 
  1639  018E                     	;# 
  1640  0197                     	;# 
  1641  0199                     	;# 
  1642  0199                     	;# 
  1643  0199                     	;# 
  1644  019A                     	;# 
  1645  019A                     	;# 
  1646  019A                     	;# 
  1647  019B                     	;# 
  1648  019B                     	;# 
  1649  019B                     	;# 
  1650  019B                     	;# 
  1651  019B                     	;# 
  1652  019C                     	;# 
  1653  019C                     	;# 
  1654  019C                     	;# 
  1655  019D                     	;# 
  1656  019D                     	;# 
  1657  019D                     	;# 
  1658  019E                     	;# 
  1659  019E                     	;# 
  1660  019E                     	;# 
  1661  019F                     	;# 
  1662  019F                     	;# 
  1663  019F                     	;# 
  1664  019F                     	;# 
  1665  019F                     	;# 
  1666  020C                     	;# 
  1667  020D                     	;# 
  1668  020E                     	;# 
  1669  0211                     	;# 
  1670  0211                     	;# 
  1671  0212                     	;# 
  1672  0212                     	;# 
  1673  0213                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0216                     	;# 
  1682  0216                     	;# 
  1683  0217                     	;# 
  1684  0217                     	;# 
  1685  0219                     	;# 
  1686  021A                     	;# 
  1687  021B                     	;# 
  1688  021C                     	;# 
  1689  021D                     	;# 
  1690  021D                     	;# 
  1691  021E                     	;# 
  1692  021F                     	;# 
  1693  028C                     	;# 
  1694  028D                     	;# 
  1695  028E                     	;# 
  1696  0291                     	;# 
  1697  0291                     	;# 
  1698  0292                     	;# 
  1699  0293                     	;# 
  1700  0294                     	;# 
  1701  0295                     	;# 
  1702  0295                     	;# 
  1703  0296                     	;# 
  1704  0297                     	;# 
  1705  0298                     	;# 
  1706  029F                     	;# 
  1707  030C                     	;# 
  1708  030D                     	;# 
  1709  030E                     	;# 
  1710  0311                     	;# 
  1711  0311                     	;# 
  1712  0312                     	;# 
  1713  0313                     	;# 
  1714  0314                     	;# 
  1715  0315                     	;# 
  1716  0315                     	;# 
  1717  0316                     	;# 
  1718  0317                     	;# 
  1719  0318                     	;# 
  1720  038C                     	;# 
  1721  038D                     	;# 
  1722  038E                     	;# 
  1723  0391                     	;# 
  1724  0392                     	;# 
  1725  0393                     	;# 
  1726  0394                     	;# 
  1727  0395                     	;# 
  1728  0396                     	;# 
  1729  0397                     	;# 
  1730  0398                     	;# 
  1731  0399                     	;# 
  1732  039A                     	;# 
  1733  039C                     	;# 
  1734  039D                     	;# 
  1735  039E                     	;# 
  1736  039F                     	;# 
  1737  0411                     	;# 
  1738  0411                     	;# 
  1739  0412                     	;# 
  1740  0413                     	;# 
  1741  0414                     	;# 
  1742  0415                     	;# 
  1743  0416                     	;# 
  1744  0417                     	;# 
  1745  0418                     	;# 
  1746  0418                     	;# 
  1747  0419                     	;# 
  1748  041A                     	;# 
  1749  041B                     	;# 
  1750  041C                     	;# 
  1751  041D                     	;# 
  1752  041E                     	;# 
  1753  041F                     	;# 
  1754  0498                     	;# 
  1755  0498                     	;# 
  1756  0499                     	;# 
  1757  049A                     	;# 
  1758  049B                     	;# 
  1759  049B                     	;# 
  1760  049C                     	;# 
  1761  049D                     	;# 
  1762  049E                     	;# 
  1763  049F                     	;# 
  1764  0617                     	;# 
  1765  0618                     	;# 
  1766  0619                     	;# 
  1767  0619                     	;# 
  1768  061A                     	;# 
  1769  061B                     	;# 
  1770  061C                     	;# 
  1771  061C                     	;# 
  1772  061F                     	;# 
  1773  0691                     	;# 
  1774  0692                     	;# 
  1775  0693                     	;# 
  1776  0694                     	;# 
  1777  0695                     	;# 
  1778  0696                     	;# 
  1779  0697                     	;# 
  1780  0698                     	;# 
  1781  0699                     	;# 
  1782  0711                     	;# 
  1783  0712                     	;# 
  1784  0713                     	;# 
  1785  0714                     	;# 
  1786  0715                     	;# 
  1787  0716                     	;# 
  1788  0717                     	;# 
  1789  0718                     	;# 
  1790  0719                     	;# 
  1791  0891                     	;# 
  1792  0891                     	;# 
  1793  0891                     	;# 
  1794  0891                     	;# 
  1795  0891                     	;# 
  1796  0891                     	;# 
  1797  0892                     	;# 
  1798  0892                     	;# 
  1799  0892                     	;# 
  1800  0893                     	;# 
  1801  0893                     	;# 
  1802  0893                     	;# 
  1803  0893                     	;# 
  1804  0893                     	;# 
  1805  0893                     	;# 
  1806  0894                     	;# 
  1807  0894                     	;# 
  1808  0894                     	;# 
  1809  0895                     	;# 
  1810  0895                     	;# 
  1811  0895                     	;# 
  1812  0896                     	;# 
  1813  0896                     	;# 
  1814  0896                     	;# 
  1815  089B                     	;# 
  1816  0911                     	;# 
  1817  0912                     	;# 
  1818  0913                     	;# 
  1819  0914                     	;# 
  1820  0915                     	;# 
  1821  0916                     	;# 
  1822  0918                     	;# 
  1823  0919                     	;# 
  1824  091A                     	;# 
  1825  091B                     	;# 
  1826  091C                     	;# 
  1827  091D                     	;# 
  1828  091E                     	;# 
  1829  091F                     	;# 
  1830  0E0F                     	;# 
  1831  0E10                     	;# 
  1832  0E11                     	;# 
  1833  0E12                     	;# 
  1834  0E13                     	;# 
  1835  0E14                     	;# 
  1836  0E15                     	;# 
  1837  0E16                     	;# 
  1838  0E17                     	;# 
  1839  0E18                     	;# 
  1840  0E19                     	;# 
  1841  0E1A                     	;# 
  1842  0E1B                     	;# 
  1843  0E1C                     	;# 
  1844  0E1D                     	;# 
  1845  0E1E                     	;# 
  1846  0E1F                     	;# 
  1847  0E20                     	;# 
  1848  0E21                     	;# 
  1849  0E22                     	;# 
  1850  0E24                     	;# 
  1851  0E25                     	;# 
  1852  0E28                     	;# 
  1853  0E29                     	;# 
  1854  0E2A                     	;# 
  1855  0E2B                     	;# 
  1856  0E2C                     	;# 
  1857  0E2D                     	;# 
  1858  0E2E                     	;# 
  1859  0E2F                     	;# 
  1860  0E90                     	;# 
  1861  0E91                     	;# 
  1862  0E92                     	;# 
  1863  0E94                     	;# 
  1864  0E95                     	;# 
  1865  0E9C                     	;# 
  1866  0E9D                     	;# 
  1867  0E9E                     	;# 
  1868  0E9F                     	;# 
  1869  0EA0                     	;# 
  1870  0EA1                     	;# 
  1871  0EA2                     	;# 
  1872  0EA3                     	;# 
  1873  0EA4                     	;# 
  1874  0EA5                     	;# 
  1875  0EA6                     	;# 
  1876  0EA7                     	;# 
  1877  0F0F                     	;# 
  1878  0F10                     	;# 
  1879  0F11                     	;# 
  1880  0F12                     	;# 
  1881  0F13                     	;# 
  1882  0F14                     	;# 
  1883  0F15                     	;# 
  1884  0F16                     	;# 
  1885  0F17                     	;# 
  1886  0F18                     	;# 
  1887  0F19                     	;# 
  1888  0F1A                     	;# 
  1889  0F1B                     	;# 
  1890  0F1C                     	;# 
  1891  0F1D                     	;# 
  1892  0F1E                     	;# 
  1893  0F1F                     	;# 
  1894  0F20                     	;# 
  1895  0F21                     	;# 
  1896  0F22                     	;# 
  1897  0F23                     	;# 
  1898  0F24                     	;# 
  1899  0F25                     	;# 
  1900  0F26                     	;# 
  1901  0F27                     	;# 
  1902  0F28                     	;# 
  1903  0F29                     	;# 
  1904  0F2A                     	;# 
  1905  0F2B                     	;# 
  1906  0F2C                     	;# 
  1907  0F2D                     	;# 
  1908  0F2E                     	;# 
  1909  0F2F                     	;# 
  1910  0F30                     	;# 
  1911  0F31                     	;# 
  1912  0F32                     	;# 
  1913  0F33                     	;# 
  1914  0F34                     	;# 
  1915  0F35                     	;# 
  1916  0F36                     	;# 
  1917  0F37                     	;# 
  1918  0FE4                     	;# 
  1919  0FE5                     	;# 
  1920  0FE6                     	;# 
  1921  0FE7                     	;# 
  1922  0FE8                     	;# 
  1923  0FE9                     	;# 
  1924  0FEA                     	;# 
  1925  0FEB                     	;# 
  1926  0FED                     	;# 
  1927  0FEE                     	;# 
  1928  0FEF                     	;# 
  1929  0000                     	;# 
  1930  0001                     	;# 
  1931  0002                     	;# 
  1932  0003                     	;# 
  1933  0004                     	;# 
  1934  0005                     	;# 
  1935  0006                     	;# 
  1936  0007                     	;# 
  1937  0008                     	;# 
  1938  0009                     	;# 
  1939  000A                     	;# 
  1940  000B                     	;# 
  1941  000C                     	;# 
  1942  000D                     	;# 
  1943  000E                     	;# 
  1944  0010                     	;# 
  1945  0011                     	;# 
  1946  0012                     	;# 
  1947  0013                     	;# 
  1948  0014                     	;# 
  1949  0015                     	;# 
  1950  0015                     	;# 
  1951  0016                     	;# 
  1952  0016                     	;# 
  1953  0017                     	;# 
  1954  0018                     	;# 
  1955  0019                     	;# 
  1956  0019                     	;# 
  1957  001A                     	;# 
  1958  001B                     	;# 
  1959  001C                     	;# 
  1960  001D                     	;# 
  1961  001E                     	;# 
  1962  001F                     	;# 
  1963  008C                     	;# 
  1964  008D                     	;# 
  1965  008E                     	;# 
  1966  0090                     	;# 
  1967  0091                     	;# 
  1968  0092                     	;# 
  1969  0093                     	;# 
  1970  0094                     	;# 
  1971  0097                     	;# 
  1972  009B                     	;# 
  1973  009B                     	;# 
  1974  009C                     	;# 
  1975  009D                     	;# 
  1976  009E                     	;# 
  1977  009F                     	;# 
  1978  010C                     	;# 
  1979  010D                     	;# 
  1980  010E                     	;# 
  1981  0111                     	;# 
  1982  0112                     	;# 
  1983  0113                     	;# 
  1984  0114                     	;# 
  1985  0115                     	;# 
  1986  0116                     	;# 
  1987  0117                     	;# 
  1988  0118                     	;# 
  1989  0119                     	;# 
  1990  018C                     	;# 
  1991  018D                     	;# 
  1992  018E                     	;# 
  1993  0197                     	;# 
  1994  0199                     	;# 
  1995  0199                     	;# 
  1996  0199                     	;# 
  1997  019A                     	;# 
  1998  019A                     	;# 
  1999  019A                     	;# 
  2000  019B                     	;# 
  2001  019B                     	;# 
  2002  019B                     	;# 
  2003  019B                     	;# 
  2004  019B                     	;# 
  2005  019C                     	;# 
  2006  019C                     	;# 
  2007  019C                     	;# 
  2008  019D                     	;# 
  2009  019D                     	;# 
  2010  019D                     	;# 
  2011  019E                     	;# 
  2012  019E                     	;# 
  2013  019E                     	;# 
  2014  019F                     	;# 
  2015  019F                     	;# 
  2016  019F                     	;# 
  2017  019F                     	;# 
  2018  019F                     	;# 
  2019  020C                     	;# 
  2020  020D                     	;# 
  2021  020E                     	;# 
  2022  0211                     	;# 
  2023  0211                     	;# 
  2024  0212                     	;# 
  2025  0212                     	;# 
  2026  0213                     	;# 
  2027  0213                     	;# 
  2028  0214                     	;# 
  2029  0214                     	;# 
  2030  0215                     	;# 
  2031  0215                     	;# 
  2032  0215                     	;# 
  2033  0215                     	;# 
  2034  0216                     	;# 
  2035  0216                     	;# 
  2036  0217                     	;# 
  2037  0217                     	;# 
  2038  0219                     	;# 
  2039  021A                     	;# 
  2040  021B                     	;# 
  2041  021C                     	;# 
  2042  021D                     	;# 
  2043  021D                     	;# 
  2044  021E                     	;# 
  2045  021F                     	;# 
  2046  028C                     	;# 
  2047  028D                     	;# 
  2048  028E                     	;# 
  2049  0291                     	;# 
  2050  0291                     	;# 
  2051  0292                     	;# 
  2052  0293                     	;# 
  2053  0294                     	;# 
  2054  0295                     	;# 
  2055  0295                     	;# 
  2056  0296                     	;# 
  2057  0297                     	;# 
  2058  0298                     	;# 
  2059  029F                     	;# 
  2060  030C                     	;# 
  2061  030D                     	;# 
  2062  030E                     	;# 
  2063  0311                     	;# 
  2064  0311                     	;# 
  2065  0312                     	;# 
  2066  0313                     	;# 
  2067  0314                     	;# 
  2068  0315                     	;# 
  2069  0315                     	;# 
  2070  0316                     	;# 
  2071  0317                     	;# 
  2072  0318                     	;# 
  2073  038C                     	;# 
  2074  038D                     	;# 
  2075  038E                     	;# 
  2076  0391                     	;# 
  2077  0392                     	;# 
  2078  0393                     	;# 
  2079  0394                     	;# 
  2080  0395                     	;# 
  2081  0396                     	;# 
  2082  0397                     	;# 
  2083  0398                     	;# 
  2084  0399                     	;# 
  2085  039A                     	;# 
  2086  039C                     	;# 
  2087  039D                     	;# 
  2088  039E                     	;# 
  2089  039F                     	;# 
  2090  0411                     	;# 
  2091  0411                     	;# 
  2092  0412                     	;# 
  2093  0413                     	;# 
  2094  0414                     	;# 
  2095  0415                     	;# 
  2096  0416                     	;# 
  2097  0417                     	;# 
  2098  0418                     	;# 
  2099  0418                     	;# 
  2100  0419                     	;# 
  2101  041A                     	;# 
  2102  041B                     	;# 
  2103  041C                     	;# 
  2104  041D                     	;# 
  2105  041E                     	;# 
  2106  041F                     	;# 
  2107  0498                     	;# 
  2108  0498                     	;# 
  2109  0499                     	;# 
  2110  049A                     	;# 
  2111  049B                     	;# 
  2112  049B                     	;# 
  2113  049C                     	;# 
  2114  049D                     	;# 
  2115  049E                     	;# 
  2116  049F                     	;# 
  2117  0617                     	;# 
  2118  0618                     	;# 
  2119  0619                     	;# 
  2120  0619                     	;# 
  2121  061A                     	;# 
  2122  061B                     	;# 
  2123  061C                     	;# 
  2124  061C                     	;# 
  2125  061F                     	;# 
  2126  0691                     	;# 
  2127  0692                     	;# 
  2128  0693                     	;# 
  2129  0694                     	;# 
  2130  0695                     	;# 
  2131  0696                     	;# 
  2132  0697                     	;# 
  2133  0698                     	;# 
  2134  0699                     	;# 
  2135  0711                     	;# 
  2136  0712                     	;# 
  2137  0713                     	;# 
  2138  0714                     	;# 
  2139  0715                     	;# 
  2140  0716                     	;# 
  2141  0717                     	;# 
  2142  0718                     	;# 
  2143  0719                     	;# 
  2144  0891                     	;# 
  2145  0891                     	;# 
  2146  0891                     	;# 
  2147  0891                     	;# 
  2148  0891                     	;# 
  2149  0891                     	;# 
  2150  0892                     	;# 
  2151  0892                     	;# 
  2152  0892                     	;# 
  2153  0893                     	;# 
  2154  0893                     	;# 
  2155  0893                     	;# 
  2156  0893                     	;# 
  2157  0893                     	;# 
  2158  0893                     	;# 
  2159  0894                     	;# 
  2160  0894                     	;# 
  2161  0894                     	;# 
  2162  0895                     	;# 
  2163  0895                     	;# 
  2164  0895                     	;# 
  2165  0896                     	;# 
  2166  0896                     	;# 
  2167  0896                     	;# 
  2168  089B                     	;# 
  2169  0911                     	;# 
  2170  0912                     	;# 
  2171  0913                     	;# 
  2172  0914                     	;# 
  2173  0915                     	;# 
  2174  0916                     	;# 
  2175  0918                     	;# 
  2176  0919                     	;# 
  2177  091A                     	;# 
  2178  091B                     	;# 
  2179  091C                     	;# 
  2180  091D                     	;# 
  2181  091E                     	;# 
  2182  091F                     	;# 
  2183  0E0F                     	;# 
  2184  0E10                     	;# 
  2185  0E11                     	;# 
  2186  0E12                     	;# 
  2187  0E13                     	;# 
  2188  0E14                     	;# 
  2189  0E15                     	;# 
  2190  0E16                     	;# 
  2191  0E17                     	;# 
  2192  0E18                     	;# 
  2193  0E19                     	;# 
  2194  0E1A                     	;# 
  2195  0E1B                     	;# 
  2196  0E1C                     	;# 
  2197  0E1D                     	;# 
  2198  0E1E                     	;# 
  2199  0E1F                     	;# 
  2200  0E20                     	;# 
  2201  0E21                     	;# 
  2202  0E22                     	;# 
  2203  0E24                     	;# 
  2204  0E25                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E2F                     	;# 
  2213  0E90                     	;# 
  2214  0E91                     	;# 
  2215  0E92                     	;# 
  2216  0E94                     	;# 
  2217  0E95                     	;# 
  2218  0E9C                     	;# 
  2219  0E9D                     	;# 
  2220  0E9E                     	;# 
  2221  0E9F                     	;# 
  2222  0EA0                     	;# 
  2223  0EA1                     	;# 
  2224  0EA2                     	;# 
  2225  0EA3                     	;# 
  2226  0EA4                     	;# 
  2227  0EA5                     	;# 
  2228  0EA6                     	;# 
  2229  0EA7                     	;# 
  2230  0F0F                     	;# 
  2231  0F10                     	;# 
  2232  0F11                     	;# 
  2233  0F12                     	;# 
  2234  0F13                     	;# 
  2235  0F14                     	;# 
  2236  0F15                     	;# 
  2237  0F16                     	;# 
  2238  0F17                     	;# 
  2239  0F18                     	;# 
  2240  0F19                     	;# 
  2241  0F1A                     	;# 
  2242  0F1B                     	;# 
  2243  0F1C                     	;# 
  2244  0F1D                     	;# 
  2245  0F1E                     	;# 
  2246  0F1F                     	;# 
  2247  0F20                     	;# 
  2248  0F21                     	;# 
  2249  0F22                     	;# 
  2250  0F23                     	;# 
  2251  0F24                     	;# 
  2252  0F25                     	;# 
  2253  0F26                     	;# 
  2254  0F27                     	;# 
  2255  0F28                     	;# 
  2256  0F29                     	;# 
  2257  0F2A                     	;# 
  2258  0F2B                     	;# 
  2259  0F2C                     	;# 
  2260  0F2D                     	;# 
  2261  0F2E                     	;# 
  2262  0F2F                     	;# 
  2263  0F30                     	;# 
  2264  0F31                     	;# 
  2265  0F32                     	;# 
  2266  0F33                     	;# 
  2267  0F34                     	;# 
  2268  0F35                     	;# 
  2269  0F36                     	;# 
  2270  0F37                     	;# 
  2271  0FE4                     	;# 
  2272  0FE5                     	;# 
  2273  0FE6                     	;# 
  2274  0FE7                     	;# 
  2275  0FE8                     	;# 
  2276  0FE9                     	;# 
  2277  0FEA                     	;# 
  2278  0FEB                     	;# 
  2279  0FED                     	;# 
  2280  0FEE                     	;# 
  2281  0FEF                     	;# 
  2282  0000                     	;# 
  2283  0001                     	;# 
  2284  0002                     	;# 
  2285  0003                     	;# 
  2286  0004                     	;# 
  2287  0005                     	;# 
  2288  0006                     	;# 
  2289  0007                     	;# 
  2290  0008                     	;# 
  2291  0009                     	;# 
  2292  000A                     	;# 
  2293  000B                     	;# 
  2294  000C                     	;# 
  2295  000D                     	;# 
  2296  000E                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0015                     	;# 
  2304  0016                     	;# 
  2305  0016                     	;# 
  2306  0017                     	;# 
  2307  0018                     	;# 
  2308  0019                     	;# 
  2309  0019                     	;# 
  2310  001A                     	;# 
  2311  001B                     	;# 
  2312  001C                     	;# 
  2313  001D                     	;# 
  2314  001E                     	;# 
  2315  001F                     	;# 
  2316  008C                     	;# 
  2317  008D                     	;# 
  2318  008E                     	;# 
  2319  0090                     	;# 
  2320  0091                     	;# 
  2321  0092                     	;# 
  2322  0093                     	;# 
  2323  0094                     	;# 
  2324  0097                     	;# 
  2325  009B                     	;# 
  2326  009B                     	;# 
  2327  009C                     	;# 
  2328  009D                     	;# 
  2329  009E                     	;# 
  2330  009F                     	;# 
  2331  010C                     	;# 
  2332  010D                     	;# 
  2333  010E                     	;# 
  2334  0111                     	;# 
  2335  0112                     	;# 
  2336  0113                     	;# 
  2337  0114                     	;# 
  2338  0115                     	;# 
  2339  0116                     	;# 
  2340  0117                     	;# 
  2341  0118                     	;# 
  2342  0119                     	;# 
  2343  018C                     	;# 
  2344  018D                     	;# 
  2345  018E                     	;# 
  2346  0197                     	;# 
  2347  0199                     	;# 
  2348  0199                     	;# 
  2349  0199                     	;# 
  2350  019A                     	;# 
  2351  019A                     	;# 
  2352  019A                     	;# 
  2353  019B                     	;# 
  2354  019B                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019B                     	;# 
  2358  019C                     	;# 
  2359  019C                     	;# 
  2360  019C                     	;# 
  2361  019D                     	;# 
  2362  019D                     	;# 
  2363  019D                     	;# 
  2364  019E                     	;# 
  2365  019E                     	;# 
  2366  019E                     	;# 
  2367  019F                     	;# 
  2368  019F                     	;# 
  2369  019F                     	;# 
  2370  019F                     	;# 
  2371  019F                     	;# 
  2372  020C                     	;# 
  2373  020D                     	;# 
  2374  020E                     	;# 
  2375  0211                     	;# 
  2376  0211                     	;# 
  2377  0212                     	;# 
  2378  0212                     	;# 
  2379  0213                     	;# 
  2380  0213                     	;# 
  2381  0214                     	;# 
  2382  0214                     	;# 
  2383  0215                     	;# 
  2384  0215                     	;# 
  2385  0215                     	;# 
  2386  0215                     	;# 
  2387  0216                     	;# 
  2388  0216                     	;# 
  2389  0217                     	;# 
  2390  0217                     	;# 
  2391  0219                     	;# 
  2392  021A                     	;# 
  2393  021B                     	;# 
  2394  021C                     	;# 
  2395  021D                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028D                     	;# 
  2401  028E                     	;# 
  2402  0291                     	;# 
  2403  0291                     	;# 
  2404  0292                     	;# 
  2405  0293                     	;# 
  2406  0294                     	;# 
  2407  0295                     	;# 
  2408  0295                     	;# 
  2409  0296                     	;# 
  2410  0297                     	;# 
  2411  0298                     	;# 
  2412  029F                     	;# 
  2413  030C                     	;# 
  2414  030D                     	;# 
  2415  030E                     	;# 
  2416  0311                     	;# 
  2417  0311                     	;# 
  2418  0312                     	;# 
  2419  0313                     	;# 
  2420  0314                     	;# 
  2421  0315                     	;# 
  2422  0315                     	;# 
  2423  0316                     	;# 
  2424  0317                     	;# 
  2425  0318                     	;# 
  2426  038C                     	;# 
  2427  038D                     	;# 
  2428  038E                     	;# 
  2429  0391                     	;# 
  2430  0392                     	;# 
  2431  0393                     	;# 
  2432  0394                     	;# 
  2433  0395                     	;# 
  2434  0396                     	;# 
  2435  0397                     	;# 
  2436  0398                     	;# 
  2437  0399                     	;# 
  2438  039A                     	;# 
  2439  039C                     	;# 
  2440  039D                     	;# 
  2441  039E                     	;# 
  2442  039F                     	;# 
  2443  0411                     	;# 
  2444  0411                     	;# 
  2445  0412                     	;# 
  2446  0413                     	;# 
  2447  0414                     	;# 
  2448  0415                     	;# 
  2449  0416                     	;# 
  2450  0417                     	;# 
  2451  0418                     	;# 
  2452  0418                     	;# 
  2453  0419                     	;# 
  2454  041A                     	;# 
  2455  041B                     	;# 
  2456  041C                     	;# 
  2457  041D                     	;# 
  2458  041E                     	;# 
  2459  041F                     	;# 
  2460  0498                     	;# 
  2461  0498                     	;# 
  2462  0499                     	;# 
  2463  049A                     	;# 
  2464  049B                     	;# 
  2465  049B                     	;# 
  2466  049C                     	;# 
  2467  049D                     	;# 
  2468  049E                     	;# 
  2469  049F                     	;# 
  2470  0617                     	;# 
  2471  0618                     	;# 
  2472  0619                     	;# 
  2473  0619                     	;# 
  2474  061A                     	;# 
  2475  061B                     	;# 
  2476  061C                     	;# 
  2477  061C                     	;# 
  2478  061F                     	;# 
  2479  0691                     	;# 
  2480  0692                     	;# 
  2481  0693                     	;# 
  2482  0694                     	;# 
  2483  0695                     	;# 
  2484  0696                     	;# 
  2485  0697                     	;# 
  2486  0698                     	;# 
  2487  0699                     	;# 
  2488  0711                     	;# 
  2489  0712                     	;# 
  2490  0713                     	;# 
  2491  0714                     	;# 
  2492  0715                     	;# 
  2493  0716                     	;# 
  2494  0717                     	;# 
  2495  0718                     	;# 
  2496  0719                     	;# 
  2497  0891                     	;# 
  2498  0891                     	;# 
  2499  0891                     	;# 
  2500  0891                     	;# 
  2501  0891                     	;# 
  2502  0891                     	;# 
  2503  0892                     	;# 
  2504  0892                     	;# 
  2505  0892                     	;# 
  2506  0893                     	;# 
  2507  0893                     	;# 
  2508  0893                     	;# 
  2509  0893                     	;# 
  2510  0893                     	;# 
  2511  0893                     	;# 
  2512  0894                     	;# 
  2513  0894                     	;# 
  2514  0894                     	;# 
  2515  0895                     	;# 
  2516  0895                     	;# 
  2517  0895                     	;# 
  2518  0896                     	;# 
  2519  0896                     	;# 
  2520  0896                     	;# 
  2521  089B                     	;# 
  2522  0911                     	;# 
  2523  0912                     	;# 
  2524  0913                     	;# 
  2525  0914                     	;# 
  2526  0915                     	;# 
  2527  0916                     	;# 
  2528  0918                     	;# 
  2529  0919                     	;# 
  2530  091A                     	;# 
  2531  091B                     	;# 
  2532  091C                     	;# 
  2533  091D                     	;# 
  2534  091E                     	;# 
  2535  091F                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E24                     	;# 
  2557  0E25                     	;# 
  2558  0E28                     	;# 
  2559  0E29                     	;# 
  2560  0E2A                     	;# 
  2561  0E2B                     	;# 
  2562  0E2C                     	;# 
  2563  0E2D                     	;# 
  2564  0E2E                     	;# 
  2565  0E2F                     	;# 
  2566  0E90                     	;# 
  2567  0E91                     	;# 
  2568  0E92                     	;# 
  2569  0E94                     	;# 
  2570  0E95                     	;# 
  2571  0E9C                     	;# 
  2572  0E9D                     	;# 
  2573  0E9E                     	;# 
  2574  0E9F                     	;# 
  2575  0EA0                     	;# 
  2576  0EA1                     	;# 
  2577  0EA2                     	;# 
  2578  0EA3                     	;# 
  2579  0EA4                     	;# 
  2580  0EA5                     	;# 
  2581  0EA6                     	;# 
  2582  0EA7                     	;# 
  2583  0F0F                     	;# 
  2584  0F10                     	;# 
  2585  0F11                     	;# 
  2586  0F12                     	;# 
  2587  0F13                     	;# 
  2588  0F14                     	;# 
  2589  0F15                     	;# 
  2590  0F16                     	;# 
  2591  0F17                     	;# 
  2592  0F18                     	;# 
  2593  0F19                     	;# 
  2594  0F1A                     	;# 
  2595  0F1B                     	;# 
  2596  0F1C                     	;# 
  2597  0F1D                     	;# 
  2598  0F1E                     	;# 
  2599  0F1F                     	;# 
  2600  0F20                     	;# 
  2601  0F21                     	;# 
  2602  0F22                     	;# 
  2603  0F23                     	;# 
  2604  0F24                     	;# 
  2605  0F25                     	;# 
  2606  0F26                     	;# 
  2607  0F27                     	;# 
  2608  0F28                     	;# 
  2609  0F29                     	;# 
  2610  0F2A                     	;# 
  2611  0F2B                     	;# 
  2612  0F2C                     	;# 
  2613  0F2D                     	;# 
  2614  0F2E                     	;# 
  2615  0F2F                     	;# 
  2616  0F30                     	;# 
  2617  0F31                     	;# 
  2618  0F32                     	;# 
  2619  0F33                     	;# 
  2620  0F34                     	;# 
  2621  0F35                     	;# 
  2622  0F36                     	;# 
  2623  0F37                     	;# 
  2624  0FE4                     	;# 
  2625  0FE5                     	;# 
  2626  0FE6                     	;# 
  2627  0FE7                     	;# 
  2628  0FE8                     	;# 
  2629  0FE9                     	;# 
  2630  0FEA                     	;# 
  2631  0FEB                     	;# 
  2632  0FED                     	;# 
  2633  0FEE                     	;# 
  2634  0FEF                     	;# 
  2635  0000                     	;# 
  2636  0001                     	;# 
  2637  0002                     	;# 
  2638  0003                     	;# 
  2639  0004                     	;# 
  2640  0005                     	;# 
  2641  0006                     	;# 
  2642  0007                     	;# 
  2643  0008                     	;# 
  2644  0009                     	;# 
  2645  000A                     	;# 
  2646  000B                     	;# 
  2647  000C                     	;# 
  2648  000D                     	;# 
  2649  000E                     	;# 
  2650  0010                     	;# 
  2651  0011                     	;# 
  2652  0012                     	;# 
  2653  0013                     	;# 
  2654  0014                     	;# 
  2655  0015                     	;# 
  2656  0015                     	;# 
  2657  0016                     	;# 
  2658  0016                     	;# 
  2659  0017                     	;# 
  2660  0018                     	;# 
  2661  0019                     	;# 
  2662  0019                     	;# 
  2663  001A                     	;# 
  2664  001B                     	;# 
  2665  001C                     	;# 
  2666  001D                     	;# 
  2667  001E                     	;# 
  2668  001F                     	;# 
  2669  008C                     	;# 
  2670  008D                     	;# 
  2671  008E                     	;# 
  2672  0090                     	;# 
  2673  0091                     	;# 
  2674  0092                     	;# 
  2675  0093                     	;# 
  2676  0094                     	;# 
  2677  0097                     	;# 
  2678  009B                     	;# 
  2679  009B                     	;# 
  2680  009C                     	;# 
  2681  009D                     	;# 
  2682  009E                     	;# 
  2683  009F                     	;# 
  2684  010C                     	;# 
  2685  010D                     	;# 
  2686  010E                     	;# 
  2687  0111                     	;# 
  2688  0112                     	;# 
  2689  0113                     	;# 
  2690  0114                     	;# 
  2691  0115                     	;# 
  2692  0116                     	;# 
  2693  0117                     	;# 
  2694  0118                     	;# 
  2695  0119                     	;# 
  2696  018C                     	;# 
  2697  018D                     	;# 
  2698  018E                     	;# 
  2699  0197                     	;# 
  2700  0199                     	;# 
  2701  0199                     	;# 
  2702  0199                     	;# 
  2703  019A                     	;# 
  2704  019A                     	;# 
  2705  019A                     	;# 
  2706  019B                     	;# 
  2707  019B                     	;# 
  2708  019B                     	;# 
  2709  019B                     	;# 
  2710  019B                     	;# 
  2711  019C                     	;# 
  2712  019C                     	;# 
  2713  019C                     	;# 
  2714  019D                     	;# 
  2715  019D                     	;# 
  2716  019D                     	;# 
  2717  019E                     	;# 
  2718  019E                     	;# 
  2719  019E                     	;# 
  2720  019F                     	;# 
  2721  019F                     	;# 
  2722  019F                     	;# 
  2723  019F                     	;# 
  2724  019F                     	;# 
  2725  020C                     	;# 
  2726  020D                     	;# 
  2727  020E                     	;# 
  2728  0211                     	;# 
  2729  0211                     	;# 
  2730  0212                     	;# 
  2731  0212                     	;# 
  2732  0213                     	;# 
  2733  0213                     	;# 
  2734  0214                     	;# 
  2735  0214                     	;# 
  2736  0215                     	;# 
  2737  0215                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0216                     	;# 
  2741  0216                     	;# 
  2742  0217                     	;# 
  2743  0217                     	;# 
  2744  0219                     	;# 
  2745  021A                     	;# 
  2746  021B                     	;# 
  2747  021C                     	;# 
  2748  021D                     	;# 
  2749  021D                     	;# 
  2750  021E                     	;# 
  2751  021F                     	;# 
  2752  028C                     	;# 
  2753  028D                     	;# 
  2754  028E                     	;# 
  2755  0291                     	;# 
  2756  0291                     	;# 
  2757  0292                     	;# 
  2758  0293                     	;# 
  2759  0294                     	;# 
  2760  0295                     	;# 
  2761  0295                     	;# 
  2762  0296                     	;# 
  2763  0297                     	;# 
  2764  0298                     	;# 
  2765  029F                     	;# 
  2766  030C                     	;# 
  2767  030D                     	;# 
  2768  030E                     	;# 
  2769  0311                     	;# 
  2770  0311                     	;# 
  2771  0312                     	;# 
  2772  0313                     	;# 
  2773  0314                     	;# 
  2774  0315                     	;# 
  2775  0315                     	;# 
  2776  0316                     	;# 
  2777  0317                     	;# 
  2778  0318                     	;# 
  2779  038C                     	;# 
  2780  038D                     	;# 
  2781  038E                     	;# 
  2782  0391                     	;# 
  2783  0392                     	;# 
  2784  0393                     	;# 
  2785  0394                     	;# 
  2786  0395                     	;# 
  2787  0396                     	;# 
  2788  0397                     	;# 
  2789  0398                     	;# 
  2790  0399                     	;# 
  2791  039A                     	;# 
  2792  039C                     	;# 
  2793  039D                     	;# 
  2794  039E                     	;# 
  2795  039F                     	;# 
  2796  0411                     	;# 
  2797  0411                     	;# 
  2798  0412                     	;# 
  2799  0413                     	;# 
  2800  0414                     	;# 
  2801  0415                     	;# 
  2802  0416                     	;# 
  2803  0417                     	;# 
  2804  0418                     	;# 
  2805  0418                     	;# 
  2806  0419                     	;# 
  2807  041A                     	;# 
  2808  041B                     	;# 
  2809  041C                     	;# 
  2810  041D                     	;# 
  2811  041E                     	;# 
  2812  041F                     	;# 
  2813  0498                     	;# 
  2814  0498                     	;# 
  2815  0499                     	;# 
  2816  049A                     	;# 
  2817  049B                     	;# 
  2818  049B                     	;# 
  2819  049C                     	;# 
  2820  049D                     	;# 
  2821  049E                     	;# 
  2822  049F                     	;# 
  2823  0617                     	;# 
  2824  0618                     	;# 
  2825  0619                     	;# 
  2826  0619                     	;# 
  2827  061A                     	;# 
  2828  061B                     	;# 
  2829  061C                     	;# 
  2830  061C                     	;# 
  2831  061F                     	;# 
  2832  0691                     	;# 
  2833  0692                     	;# 
  2834  0693                     	;# 
  2835  0694                     	;# 
  2836  0695                     	;# 
  2837  0696                     	;# 
  2838  0697                     	;# 
  2839  0698                     	;# 
  2840  0699                     	;# 
  2841  0711                     	;# 
  2842  0712                     	;# 
  2843  0713                     	;# 
  2844  0714                     	;# 
  2845  0715                     	;# 
  2846  0716                     	;# 
  2847  0717                     	;# 
  2848  0718                     	;# 
  2849  0719                     	;# 
  2850  0891                     	;# 
  2851  0891                     	;# 
  2852  0891                     	;# 
  2853  0891                     	;# 
  2854  0891                     	;# 
  2855  0891                     	;# 
  2856  0892                     	;# 
  2857  0892                     	;# 
  2858  0892                     	;# 
  2859  0893                     	;# 
  2860  0893                     	;# 
  2861  0893                     	;# 
  2862  0893                     	;# 
  2863  0893                     	;# 
  2864  0893                     	;# 
  2865  0894                     	;# 
  2866  0894                     	;# 
  2867  0894                     	;# 
  2868  0895                     	;# 
  2869  0895                     	;# 
  2870  0895                     	;# 
  2871  0896                     	;# 
  2872  0896                     	;# 
  2873  0896                     	;# 
  2874  089B                     	;# 
  2875  0911                     	;# 
  2876  0912                     	;# 
  2877  0913                     	;# 
  2878  0914                     	;# 
  2879  0915                     	;# 
  2880  0916                     	;# 
  2881  0918                     	;# 
  2882  0919                     	;# 
  2883  091A                     	;# 
  2884  091B                     	;# 
  2885  091C                     	;# 
  2886  091D                     	;# 
  2887  091E                     	;# 
  2888  091F                     	;# 
  2889  0E0F                     	;# 
  2890  0E10                     	;# 
  2891  0E11                     	;# 
  2892  0E12                     	;# 
  2893  0E13                     	;# 
  2894  0E14                     	;# 
  2895  0E15                     	;# 
  2896  0E16                     	;# 
  2897  0E17                     	;# 
  2898  0E18                     	;# 
  2899  0E19                     	;# 
  2900  0E1A                     	;# 
  2901  0E1B                     	;# 
  2902  0E1C                     	;# 
  2903  0E1D                     	;# 
  2904  0E1E                     	;# 
  2905  0E1F                     	;# 
  2906  0E20                     	;# 
  2907  0E21                     	;# 
  2908  0E22                     	;# 
  2909  0E24                     	;# 
  2910  0E25                     	;# 
  2911  0E28                     	;# 
  2912  0E29                     	;# 
  2913  0E2A                     	;# 
  2914  0E2B                     	;# 
  2915  0E2C                     	;# 
  2916  0E2D                     	;# 
  2917  0E2E                     	;# 
  2918  0E2F                     	;# 
  2919  0E90                     	;# 
  2920  0E91                     	;# 
  2921  0E92                     	;# 
  2922  0E94                     	;# 
  2923  0E95                     	;# 
  2924  0E9C                     	;# 
  2925  0E9D                     	;# 
  2926  0E9E                     	;# 
  2927  0E9F                     	;# 
  2928  0EA0                     	;# 
  2929  0EA1                     	;# 
  2930  0EA2                     	;# 
  2931  0EA3                     	;# 
  2932  0EA4                     	;# 
  2933  0EA5                     	;# 
  2934  0EA6                     	;# 
  2935  0EA7                     	;# 
  2936  0F0F                     	;# 
  2937  0F10                     	;# 
  2938  0F11                     	;# 
  2939  0F12                     	;# 
  2940  0F13                     	;# 
  2941  0F14                     	;# 
  2942  0F15                     	;# 
  2943  0F16                     	;# 
  2944  0F17                     	;# 
  2945  0F18                     	;# 
  2946  0F19                     	;# 
  2947  0F1A                     	;# 
  2948  0F1B                     	;# 
  2949  0F1C                     	;# 
  2950  0F1D                     	;# 
  2951  0F1E                     	;# 
  2952  0F1F                     	;# 
  2953  0F20                     	;# 
  2954  0F21                     	;# 
  2955  0F22                     	;# 
  2956  0F23                     	;# 
  2957  0F24                     	;# 
  2958  0F25                     	;# 
  2959  0F26                     	;# 
  2960  0F27                     	;# 
  2961  0F28                     	;# 
  2962  0F29                     	;# 
  2963  0F2A                     	;# 
  2964  0F2B                     	;# 
  2965  0F2C                     	;# 
  2966  0F2D                     	;# 
  2967  0F2E                     	;# 
  2968  0F2F                     	;# 
  2969  0F30                     	;# 
  2970  0F31                     	;# 
  2971  0F32                     	;# 
  2972  0F33                     	;# 
  2973  0F34                     	;# 
  2974  0F35                     	;# 
  2975  0F36                     	;# 
  2976  0F37                     	;# 
  2977  0FE4                     	;# 
  2978  0FE5                     	;# 
  2979  0FE6                     	;# 
  2980  0FE7                     	;# 
  2981  0FE8                     	;# 
  2982  0FE9                     	;# 
  2983  0FEA                     	;# 
  2984  0FEB                     	;# 
  2985  0FED                     	;# 
  2986  0FEE                     	;# 
  2987  0FEF                     	;# 
  2988  0000                     	;# 
  2989  0001                     	;# 
  2990  0002                     	;# 
  2991  0003                     	;# 
  2992  0004                     	;# 
  2993  0005                     	;# 
  2994  0006                     	;# 
  2995  0007                     	;# 
  2996  0008                     	;# 
  2997  0009                     	;# 
  2998  000A                     	;# 
  2999  000B                     	;# 
  3000  000C                     	;# 
  3001  000D                     	;# 
  3002  000E                     	;# 
  3003  0010                     	;# 
  3004  0011                     	;# 
  3005  0012                     	;# 
  3006  0013                     	;# 
  3007  0014                     	;# 
  3008  0015                     	;# 
  3009  0015                     	;# 
  3010  0016                     	;# 
  3011  0016                     	;# 
  3012  0017                     	;# 
  3013  0018                     	;# 
  3014  0019                     	;# 
  3015  0019                     	;# 
  3016  001A                     	;# 
  3017  001B                     	;# 
  3018  001C                     	;# 
  3019  001D                     	;# 
  3020  001E                     	;# 
  3021  001F                     	;# 
  3022  008C                     	;# 
  3023  008D                     	;# 
  3024  008E                     	;# 
  3025  0090                     	;# 
  3026  0091                     	;# 
  3027  0092                     	;# 
  3028  0093                     	;# 
  3029  0094                     	;# 
  3030  0097                     	;# 
  3031  009B                     	;# 
  3032  009B                     	;# 
  3033  009C                     	;# 
  3034  009D                     	;# 
  3035  009E                     	;# 
  3036  009F                     	;# 
  3037  010C                     	;# 
  3038  010D                     	;# 
  3039  010E                     	;# 
  3040  0111                     	;# 
  3041  0112                     	;# 
  3042  0113                     	;# 
  3043  0114                     	;# 
  3044  0115                     	;# 
  3045  0116                     	;# 
  3046  0117                     	;# 
  3047  0118                     	;# 
  3048  0119                     	;# 
  3049  018C                     	;# 
  3050  018D                     	;# 
  3051  018E                     	;# 
  3052  0197                     	;# 
  3053  0199                     	;# 
  3054  0199                     	;# 
  3055  0199                     	;# 
  3056  019A                     	;# 
  3057  019A                     	;# 
  3058  019A                     	;# 
  3059  019B                     	;# 
  3060  019B                     	;# 
  3061  019B                     	;# 
  3062  019B                     	;# 
  3063  019B                     	;# 
  3064  019C                     	;# 
  3065  019C                     	;# 
  3066  019C                     	;# 
  3067  019D                     	;# 
  3068  019D                     	;# 
  3069  019D                     	;# 
  3070  019E                     	;# 
  3071  019E                     	;# 
  3072  019E                     	;# 
  3073  019F                     	;# 
  3074  019F                     	;# 
  3075  019F                     	;# 
  3076  019F                     	;# 
  3077  019F                     	;# 
  3078  020C                     	;# 
  3079  020D                     	;# 
  3080  020E                     	;# 
  3081  0211                     	;# 
  3082  0211                     	;# 
  3083  0212                     	;# 
  3084  0212                     	;# 
  3085  0213                     	;# 
  3086  0213                     	;# 
  3087  0214                     	;# 
  3088  0214                     	;# 
  3089  0215                     	;# 
  3090  0215                     	;# 
  3091  0215                     	;# 
  3092  0215                     	;# 
  3093  0216                     	;# 
  3094  0216                     	;# 
  3095  0217                     	;# 
  3096  0217                     	;# 
  3097  0219                     	;# 
  3098  021A                     	;# 
  3099  021B                     	;# 
  3100  021C                     	;# 
  3101  021D                     	;# 
  3102  021D                     	;# 
  3103  021E                     	;# 
  3104  021F                     	;# 
  3105  028C                     	;# 
  3106  028D                     	;# 
  3107  028E                     	;# 
  3108  0291                     	;# 
  3109  0291                     	;# 
  3110  0292                     	;# 
  3111  0293                     	;# 
  3112  0294                     	;# 
  3113  0295                     	;# 
  3114  0295                     	;# 
  3115  0296                     	;# 
  3116  0297                     	;# 
  3117  0298                     	;# 
  3118  029F                     	;# 
  3119  030C                     	;# 
  3120  030D                     	;# 
  3121  030E                     	;# 
  3122  0311                     	;# 
  3123  0311                     	;# 
  3124  0312                     	;# 
  3125  0313                     	;# 
  3126  0314                     	;# 
  3127  0315                     	;# 
  3128  0315                     	;# 
  3129  0316                     	;# 
  3130  0317                     	;# 
  3131  0318                     	;# 
  3132  038C                     	;# 
  3133  038D                     	;# 
  3134  038E                     	;# 
  3135  0391                     	;# 
  3136  0392                     	;# 
  3137  0393                     	;# 
  3138  0394                     	;# 
  3139  0395                     	;# 
  3140  0396                     	;# 
  3141  0397                     	;# 
  3142  0398                     	;# 
  3143  0399                     	;# 
  3144  039A                     	;# 
  3145  039C                     	;# 
  3146  039D                     	;# 
  3147  039E                     	;# 
  3148  039F                     	;# 
  3149  0411                     	;# 
  3150  0411                     	;# 
  3151  0412                     	;# 
  3152  0413                     	;# 
  3153  0414                     	;# 
  3154  0415                     	;# 
  3155  0416                     	;# 
  3156  0417                     	;# 
  3157  0418                     	;# 
  3158  0418                     	;# 
  3159  0419                     	;# 
  3160  041A                     	;# 
  3161  041B                     	;# 
  3162  041C                     	;# 
  3163  041D                     	;# 
  3164  041E                     	;# 
  3165  041F                     	;# 
  3166  0498                     	;# 
  3167  0498                     	;# 
  3168  0499                     	;# 
  3169  049A                     	;# 
  3170  049B                     	;# 
  3171  049B                     	;# 
  3172  049C                     	;# 
  3173  049D                     	;# 
  3174  049E                     	;# 
  3175  049F                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  0619                     	;# 
  3180  061A                     	;# 
  3181  061B                     	;# 
  3182  061C                     	;# 
  3183  061C                     	;# 
  3184  061F                     	;# 
  3185  0691                     	;# 
  3186  0692                     	;# 
  3187  0693                     	;# 
  3188  0694                     	;# 
  3189  0695                     	;# 
  3190  0696                     	;# 
  3191  0697                     	;# 
  3192  0698                     	;# 
  3193  0699                     	;# 
  3194  0711                     	;# 
  3195  0712                     	;# 
  3196  0713                     	;# 
  3197  0714                     	;# 
  3198  0715                     	;# 
  3199  0716                     	;# 
  3200  0717                     	;# 
  3201  0718                     	;# 
  3202  0719                     	;# 
  3203  0891                     	;# 
  3204  0891                     	;# 
  3205  0891                     	;# 
  3206  0891                     	;# 
  3207  0891                     	;# 
  3208  0891                     	;# 
  3209  0892                     	;# 
  3210  0892                     	;# 
  3211  0892                     	;# 
  3212  0893                     	;# 
  3213  0893                     	;# 
  3214  0893                     	;# 
  3215  0893                     	;# 
  3216  0893                     	;# 
  3217  0893                     	;# 
  3218  0894                     	;# 
  3219  0894                     	;# 
  3220  0894                     	;# 
  3221  0895                     	;# 
  3222  0895                     	;# 
  3223  0895                     	;# 
  3224  0896                     	;# 
  3225  0896                     	;# 
  3226  0896                     	;# 
  3227  089B                     	;# 
  3228  0911                     	;# 
  3229  0912                     	;# 
  3230  0913                     	;# 
  3231  0914                     	;# 
  3232  0915                     	;# 
  3233  0916                     	;# 
  3234  0918                     	;# 
  3235  0919                     	;# 
  3236  091A                     	;# 
  3237  091B                     	;# 
  3238  091C                     	;# 
  3239  091D                     	;# 
  3240  091E                     	;# 
  3241  091F                     	;# 
  3242  0E0F                     	;# 
  3243  0E10                     	;# 
  3244  0E11                     	;# 
  3245  0E12                     	;# 
  3246  0E13                     	;# 
  3247  0E14                     	;# 
  3248  0E15                     	;# 
  3249  0E16                     	;# 
  3250  0E17                     	;# 
  3251  0E18                     	;# 
  3252  0E19                     	;# 
  3253  0E1A                     	;# 
  3254  0E1B                     	;# 
  3255  0E1C                     	;# 
  3256  0E1D                     	;# 
  3257  0E1E                     	;# 
  3258  0E1F                     	;# 
  3259  0E20                     	;# 
  3260  0E21                     	;# 
  3261  0E22                     	;# 
  3262  0E24                     	;# 
  3263  0E25                     	;# 
  3264  0E28                     	;# 
  3265  0E29                     	;# 
  3266  0E2A                     	;# 
  3267  0E2B                     	;# 
  3268  0E2C                     	;# 
  3269  0E2D                     	;# 
  3270  0E2E                     	;# 
  3271  0E2F                     	;# 
  3272  0E90                     	;# 
  3273  0E91                     	;# 
  3274  0E92                     	;# 
  3275  0E94                     	;# 
  3276  0E95                     	;# 
  3277  0E9C                     	;# 
  3278  0E9D                     	;# 
  3279  0E9E                     	;# 
  3280  0E9F                     	;# 
  3281  0EA0                     	;# 
  3282  0EA1                     	;# 
  3283  0EA2                     	;# 
  3284  0EA3                     	;# 
  3285  0EA4                     	;# 
  3286  0EA5                     	;# 
  3287  0EA6                     	;# 
  3288  0EA7                     	;# 
  3289  0F0F                     	;# 
  3290  0F10                     	;# 
  3291  0F11                     	;# 
  3292  0F12                     	;# 
  3293  0F13                     	;# 
  3294  0F14                     	;# 
  3295  0F15                     	;# 
  3296  0F16                     	;# 
  3297  0F17                     	;# 
  3298  0F18                     	;# 
  3299  0F19                     	;# 
  3300  0F1A                     	;# 
  3301  0F1B                     	;# 
  3302  0F1C                     	;# 
  3303  0F1D                     	;# 
  3304  0F1E                     	;# 
  3305  0F1F                     	;# 
  3306  0F20                     	;# 
  3307  0F21                     	;# 
  3308  0F22                     	;# 
  3309  0F23                     	;# 
  3310  0F24                     	;# 
  3311  0F25                     	;# 
  3312  0F26                     	;# 
  3313  0F27                     	;# 
  3314  0F28                     	;# 
  3315  0F29                     	;# 
  3316  0F2A                     	;# 
  3317  0F2B                     	;# 
  3318  0F2C                     	;# 
  3319  0F2D                     	;# 
  3320  0F2E                     	;# 
  3321  0F2F                     	;# 
  3322  0F30                     	;# 
  3323  0F31                     	;# 
  3324  0F32                     	;# 
  3325  0F33                     	;# 
  3326  0F34                     	;# 
  3327  0F35                     	;# 
  3328  0F36                     	;# 
  3329  0F37                     	;# 
  3330  0FE4                     	;# 
  3331  0FE5                     	;# 
  3332  0FE6                     	;# 
  3333  0FE7                     	;# 
  3334  0FE8                     	;# 
  3335  0FE9                     	;# 
  3336  0FEA                     	;# 
  3337  0FEB                     	;# 
  3338  0FED                     	;# 
  3339  0FEE                     	;# 
  3340  0FEF                     	;# 
  3341  0000                     	;# 
  3342  0001                     	;# 
  3343  0002                     	;# 
  3344  0003                     	;# 
  3345  0004                     	;# 
  3346  0005                     	;# 
  3347  0006                     	;# 
  3348  0007                     	;# 
  3349  0008                     	;# 
  3350  0009                     	;# 
  3351  000A                     	;# 
  3352  000B                     	;# 
  3353  000C                     	;# 
  3354  000D                     	;# 
  3355  000E                     	;# 
  3356  0010                     	;# 
  3357  0011                     	;# 
  3358  0012                     	;# 
  3359  0013                     	;# 
  3360  0014                     	;# 
  3361  0015                     	;# 
  3362  0015                     	;# 
  3363  0016                     	;# 
  3364  0016                     	;# 
  3365  0017                     	;# 
  3366  0018                     	;# 
  3367  0019                     	;# 
  3368  0019                     	;# 
  3369  001A                     	;# 
  3370  001B                     	;# 
  3371  001C                     	;# 
  3372  001D                     	;# 
  3373  001E                     	;# 
  3374  001F                     	;# 
  3375  008C                     	;# 
  3376  008D                     	;# 
  3377  008E                     	;# 
  3378  0090                     	;# 
  3379  0091                     	;# 
  3380  0092                     	;# 
  3381  0093                     	;# 
  3382  0094                     	;# 
  3383  0097                     	;# 
  3384  009B                     	;# 
  3385  009B                     	;# 
  3386  009C                     	;# 
  3387  009D                     	;# 
  3388  009E                     	;# 
  3389  009F                     	;# 
  3390  010C                     	;# 
  3391  010D                     	;# 
  3392  010E                     	;# 
  3393  0111                     	;# 
  3394  0112                     	;# 
  3395  0113                     	;# 
  3396  0114                     	;# 
  3397  0115                     	;# 
  3398  0116                     	;# 
  3399  0117                     	;# 
  3400  0118                     	;# 
  3401  0119                     	;# 
  3402  018C                     	;# 
  3403  018D                     	;# 
  3404  018E                     	;# 
  3405  0197                     	;# 
  3406  0199                     	;# 
  3407  0199                     	;# 
  3408  0199                     	;# 
  3409  019A                     	;# 
  3410  019A                     	;# 
  3411  019A                     	;# 
  3412  019B                     	;# 
  3413  019B                     	;# 
  3414  019B                     	;# 
  3415  019B                     	;# 
  3416  019B                     	;# 
  3417  019C                     	;# 
  3418  019C                     	;# 
  3419  019C                     	;# 
  3420  019D                     	;# 
  3421  019D                     	;# 
  3422  019D                     	;# 
  3423  019E                     	;# 
  3424  019E                     	;# 
  3425  019E                     	;# 
  3426  019F                     	;# 
  3427  019F                     	;# 
  3428  019F                     	;# 
  3429  019F                     	;# 
  3430  019F                     	;# 
  3431  020C                     	;# 
  3432  020D                     	;# 
  3433  020E                     	;# 
  3434  0211                     	;# 
  3435  0211                     	;# 
  3436  0212                     	;# 
  3437  0212                     	;# 
  3438  0213                     	;# 
  3439  0213                     	;# 
  3440  0214                     	;# 
  3441  0214                     	;# 
  3442  0215                     	;# 
  3443  0215                     	;# 
  3444  0215                     	;# 
  3445  0215                     	;# 
  3446  0216                     	;# 
  3447  0216                     	;# 
  3448  0217                     	;# 
  3449  0217                     	;# 
  3450  0219                     	;# 
  3451  021A                     	;# 
  3452  021B                     	;# 
  3453  021C                     	;# 
  3454  021D                     	;# 
  3455  021D                     	;# 
  3456  021E                     	;# 
  3457  021F                     	;# 
  3458  028C                     	;# 
  3459  028D                     	;# 
  3460  028E                     	;# 
  3461  0291                     	;# 
  3462  0291                     	;# 
  3463  0292                     	;# 
  3464  0293                     	;# 
  3465  0294                     	;# 
  3466  0295                     	;# 
  3467  0295                     	;# 
  3468  0296                     	;# 
  3469  0297                     	;# 
  3470  0298                     	;# 
  3471  029F                     	;# 
  3472  030C                     	;# 
  3473  030D                     	;# 
  3474  030E                     	;# 
  3475  0311                     	;# 
  3476  0311                     	;# 
  3477  0312                     	;# 
  3478  0313                     	;# 
  3479  0314                     	;# 
  3480  0315                     	;# 
  3481  0315                     	;# 
  3482  0316                     	;# 
  3483  0317                     	;# 
  3484  0318                     	;# 
  3485  038C                     	;# 
  3486  038D                     	;# 
  3487  038E                     	;# 
  3488  0391                     	;# 
  3489  0392                     	;# 
  3490  0393                     	;# 
  3491  0394                     	;# 
  3492  0395                     	;# 
  3493  0396                     	;# 
  3494  0397                     	;# 
  3495  0398                     	;# 
  3496  0399                     	;# 
  3497  039A                     	;# 
  3498  039C                     	;# 
  3499  039D                     	;# 
  3500  039E                     	;# 
  3501  039F                     	;# 
  3502  0411                     	;# 
  3503  0411                     	;# 
  3504  0412                     	;# 
  3505  0413                     	;# 
  3506  0414                     	;# 
  3507  0415                     	;# 
  3508  0416                     	;# 
  3509  0417                     	;# 
  3510  0418                     	;# 
  3511  0418                     	;# 
  3512  0419                     	;# 
  3513  041A                     	;# 
  3514  041B                     	;# 
  3515  041C                     	;# 
  3516  041D                     	;# 
  3517  041E                     	;# 
  3518  041F                     	;# 
  3519  0498                     	;# 
  3520  0498                     	;# 
  3521  0499                     	;# 
  3522  049A                     	;# 
  3523  049B                     	;# 
  3524  049B                     	;# 
  3525  049C                     	;# 
  3526  049D                     	;# 
  3527  049E                     	;# 
  3528  049F                     	;# 
  3529  0617                     	;# 
  3530  0618                     	;# 
  3531  0619                     	;# 
  3532  0619                     	;# 
  3533  061A                     	;# 
  3534  061B                     	;# 
  3535  061C                     	;# 
  3536  061C                     	;# 
  3537  061F                     	;# 
  3538  0691                     	;# 
  3539  0692                     	;# 
  3540  0693                     	;# 
  3541  0694                     	;# 
  3542  0695                     	;# 
  3543  0696                     	;# 
  3544  0697                     	;# 
  3545  0698                     	;# 
  3546  0699                     	;# 
  3547  0711                     	;# 
  3548  0712                     	;# 
  3549  0713                     	;# 
  3550  0714                     	;# 
  3551  0715                     	;# 
  3552  0716                     	;# 
  3553  0717                     	;# 
  3554  0718                     	;# 
  3555  0719                     	;# 
  3556  0891                     	;# 
  3557  0891                     	;# 
  3558  0891                     	;# 
  3559  0891                     	;# 
  3560  0891                     	;# 
  3561  0891                     	;# 
  3562  0892                     	;# 
  3563  0892                     	;# 
  3564  0892                     	;# 
  3565  0893                     	;# 
  3566  0893                     	;# 
  3567  0893                     	;# 
  3568  0893                     	;# 
  3569  0893                     	;# 
  3570  0893                     	;# 
  3571  0894                     	;# 
  3572  0894                     	;# 
  3573  0894                     	;# 
  3574  0895                     	;# 
  3575  0895                     	;# 
  3576  0895                     	;# 
  3577  0896                     	;# 
  3578  0896                     	;# 
  3579  0896                     	;# 
  3580  089B                     	;# 
  3581  0911                     	;# 
  3582  0912                     	;# 
  3583  0913                     	;# 
  3584  0914                     	;# 
  3585  0915                     	;# 
  3586  0916                     	;# 
  3587  0918                     	;# 
  3588  0919                     	;# 
  3589  091A                     	;# 
  3590  091B                     	;# 
  3591  091C                     	;# 
  3592  091D                     	;# 
  3593  091E                     	;# 
  3594  091F                     	;# 
  3595  0E0F                     	;# 
  3596  0E10                     	;# 
  3597  0E11                     	;# 
  3598  0E12                     	;# 
  3599  0E13                     	;# 
  3600  0E14                     	;# 
  3601  0E15                     	;# 
  3602  0E16                     	;# 
  3603  0E17                     	;# 
  3604  0E18                     	;# 
  3605  0E19                     	;# 
  3606  0E1A                     	;# 
  3607  0E1B                     	;# 
  3608  0E1C                     	;# 
  3609  0E1D                     	;# 
  3610  0E1E                     	;# 
  3611  0E1F                     	;# 
  3612  0E20                     	;# 
  3613  0E21                     	;# 
  3614  0E22                     	;# 
  3615  0E24                     	;# 
  3616  0E25                     	;# 
  3617  0E28                     	;# 
  3618  0E29                     	;# 
  3619  0E2A                     	;# 
  3620  0E2B                     	;# 
  3621  0E2C                     	;# 
  3622  0E2D                     	;# 
  3623  0E2E                     	;# 
  3624  0E2F                     	;# 
  3625  0E90                     	;# 
  3626  0E91                     	;# 
  3627  0E92                     	;# 
  3628  0E94                     	;# 
  3629  0E95                     	;# 
  3630  0E9C                     	;# 
  3631  0E9D                     	;# 
  3632  0E9E                     	;# 
  3633  0E9F                     	;# 
  3634  0EA0                     	;# 
  3635  0EA1                     	;# 
  3636  0EA2                     	;# 
  3637  0EA3                     	;# 
  3638  0EA4                     	;# 
  3639  0EA5                     	;# 
  3640  0EA6                     	;# 
  3641  0EA7                     	;# 
  3642  0F0F                     	;# 
  3643  0F10                     	;# 
  3644  0F11                     	;# 
  3645  0F12                     	;# 
  3646  0F13                     	;# 
  3647  0F14                     	;# 
  3648  0F15                     	;# 
  3649  0F16                     	;# 
  3650  0F17                     	;# 
  3651  0F18                     	;# 
  3652  0F19                     	;# 
  3653  0F1A                     	;# 
  3654  0F1B                     	;# 
  3655  0F1C                     	;# 
  3656  0F1D                     	;# 
  3657  0F1E                     	;# 
  3658  0F1F                     	;# 
  3659  0F20                     	;# 
  3660  0F21                     	;# 
  3661  0F22                     	;# 
  3662  0F23                     	;# 
  3663  0F24                     	;# 
  3664  0F25                     	;# 
  3665  0F26                     	;# 
  3666  0F27                     	;# 
  3667  0F28                     	;# 
  3668  0F29                     	;# 
  3669  0F2A                     	;# 
  3670  0F2B                     	;# 
  3671  0F2C                     	;# 
  3672  0F2D                     	;# 
  3673  0F2E                     	;# 
  3674  0F2F                     	;# 
  3675  0F30                     	;# 
  3676  0F31                     	;# 
  3677  0F32                     	;# 
  3678  0F33                     	;# 
  3679  0F34                     	;# 
  3680  0F35                     	;# 
  3681  0F36                     	;# 
  3682  0F37                     	;# 
  3683  0FE4                     	;# 
  3684  0FE5                     	;# 
  3685  0FE6                     	;# 
  3686  0FE7                     	;# 
  3687  0FE8                     	;# 
  3688  0FE9                     	;# 
  3689  0FEA                     	;# 
  3690  0FEB                     	;# 
  3691  0FED                     	;# 
  3692  0FEE                     	;# 
  3693  0FEF                     	;# 
  3694  0000                     	;# 
  3695  0001                     	;# 
  3696  0002                     	;# 
  3697  0003                     	;# 
  3698  0004                     	;# 
  3699  0005                     	;# 
  3700  0006                     	;# 
  3701  0007                     	;# 
  3702  0008                     	;# 
  3703  0009                     	;# 
  3704  000A                     	;# 
  3705  000B                     	;# 
  3706  000C                     	;# 
  3707  000D                     	;# 
  3708  000E                     	;# 
  3709  0010                     	;# 
  3710  0011                     	;# 
  3711  0012                     	;# 
  3712  0013                     	;# 
  3713  0014                     	;# 
  3714  0015                     	;# 
  3715  0015                     	;# 
  3716  0016                     	;# 
  3717  0016                     	;# 
  3718  0017                     	;# 
  3719  0018                     	;# 
  3720  0019                     	;# 
  3721  0019                     	;# 
  3722  001A                     	;# 
  3723  001B                     	;# 
  3724  001C                     	;# 
  3725  001D                     	;# 
  3726  001E                     	;# 
  3727  001F                     	;# 
  3728  008C                     	;# 
  3729  008D                     	;# 
  3730  008E                     	;# 
  3731  0090                     	;# 
  3732  0091                     	;# 
  3733  0092                     	;# 
  3734  0093                     	;# 
  3735  0094                     	;# 
  3736  0097                     	;# 
  3737  009B                     	;# 
  3738  009B                     	;# 
  3739  009C                     	;# 
  3740  009D                     	;# 
  3741  009E                     	;# 
  3742  009F                     	;# 
  3743  010C                     	;# 
  3744  010D                     	;# 
  3745  010E                     	;# 
  3746  0111                     	;# 
  3747  0112                     	;# 
  3748  0113                     	;# 
  3749  0114                     	;# 
  3750  0115                     	;# 
  3751  0116                     	;# 
  3752  0117                     	;# 
  3753  0118                     	;# 
  3754  0119                     	;# 
  3755  018C                     	;# 
  3756  018D                     	;# 
  3757  018E                     	;# 
  3758  0197                     	;# 
  3759  0199                     	;# 
  3760  0199                     	;# 
  3761  0199                     	;# 
  3762  019A                     	;# 
  3763  019A                     	;# 
  3764  019A                     	;# 
  3765  019B                     	;# 
  3766  019B                     	;# 
  3767  019B                     	;# 
  3768  019B                     	;# 
  3769  019B                     	;# 
  3770  019C                     	;# 
  3771  019C                     	;# 
  3772  019C                     	;# 
  3773  019D                     	;# 
  3774  019D                     	;# 
  3775  019D                     	;# 
  3776  019E                     	;# 
  3777  019E                     	;# 
  3778  019E                     	;# 
  3779  019F                     	;# 
  3780  019F                     	;# 
  3781  019F                     	;# 
  3782  019F                     	;# 
  3783  019F                     	;# 
  3784  020C                     	;# 
  3785  020D                     	;# 
  3786  020E                     	;# 
  3787  0211                     	;# 
  3788  0211                     	;# 
  3789  0212                     	;# 
  3790  0212                     	;# 
  3791  0213                     	;# 
  3792  0213                     	;# 
  3793  0214                     	;# 
  3794  0214                     	;# 
  3795  0215                     	;# 
  3796  0215                     	;# 
  3797  0215                     	;# 
  3798  0215                     	;# 
  3799  0216                     	;# 
  3800  0216                     	;# 
  3801  0217                     	;# 
  3802  0217                     	;# 
  3803  0219                     	;# 
  3804  021A                     	;# 
  3805  021B                     	;# 
  3806  021C                     	;# 
  3807  021D                     	;# 
  3808  021D                     	;# 
  3809  021E                     	;# 
  3810  021F                     	;# 
  3811  028C                     	;# 
  3812  028D                     	;# 
  3813  028E                     	;# 
  3814  0291                     	;# 
  3815  0291                     	;# 
  3816  0292                     	;# 
  3817  0293                     	;# 
  3818  0294                     	;# 
  3819  0295                     	;# 
  3820  0295                     	;# 
  3821  0296                     	;# 
  3822  0297                     	;# 
  3823  0298                     	;# 
  3824  029F                     	;# 
  3825  030C                     	;# 
  3826  030D                     	;# 
  3827  030E                     	;# 
  3828  0311                     	;# 
  3829  0311                     	;# 
  3830  0312                     	;# 
  3831  0313                     	;# 
  3832  0314                     	;# 
  3833  0315                     	;# 
  3834  0315                     	;# 
  3835  0316                     	;# 
  3836  0317                     	;# 
  3837  0318                     	;# 
  3838  038C                     	;# 
  3839  038D                     	;# 
  3840  038E                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  0393                     	;# 
  3844  0394                     	;# 
  3845  0395                     	;# 
  3846  0396                     	;# 
  3847  0397                     	;# 
  3848  0398                     	;# 
  3849  0399                     	;# 
  3850  039A                     	;# 
  3851  039C                     	;# 
  3852  039D                     	;# 
  3853  039E                     	;# 
  3854  039F                     	;# 
  3855  0411                     	;# 
  3856  0411                     	;# 
  3857  0412                     	;# 
  3858  0413                     	;# 
  3859  0414                     	;# 
  3860  0415                     	;# 
  3861  0416                     	;# 
  3862  0417                     	;# 
  3863  0418                     	;# 
  3864  0418                     	;# 
  3865  0419                     	;# 
  3866  041A                     	;# 
  3867  041B                     	;# 
  3868  041C                     	;# 
  3869  041D                     	;# 
  3870  041E                     	;# 
  3871  041F                     	;# 
  3872  0498                     	;# 
  3873  0498                     	;# 
  3874  0499                     	;# 
  3875  049A                     	;# 
  3876  049B                     	;# 
  3877  049B                     	;# 
  3878  049C                     	;# 
  3879  049D                     	;# 
  3880  049E                     	;# 
  3881  049F                     	;# 
  3882  0617                     	;# 
  3883  0618                     	;# 
  3884  0619                     	;# 
  3885  0619                     	;# 
  3886  061A                     	;# 
  3887  061B                     	;# 
  3888  061C                     	;# 
  3889  061C                     	;# 
  3890  061F                     	;# 
  3891  0691                     	;# 
  3892  0692                     	;# 
  3893  0693                     	;# 
  3894  0694                     	;# 
  3895  0695                     	;# 
  3896  0696                     	;# 
  3897  0697                     	;# 
  3898  0698                     	;# 
  3899  0699                     	;# 
  3900  0711                     	;# 
  3901  0712                     	;# 
  3902  0713                     	;# 
  3903  0714                     	;# 
  3904  0715                     	;# 
  3905  0716                     	;# 
  3906  0717                     	;# 
  3907  0718                     	;# 
  3908  0719                     	;# 
  3909  0891                     	;# 
  3910  0891                     	;# 
  3911  0891                     	;# 
  3912  0891                     	;# 
  3913  0891                     	;# 
  3914  0891                     	;# 
  3915  0892                     	;# 
  3916  0892                     	;# 
  3917  0892                     	;# 
  3918  0893                     	;# 
  3919  0893                     	;# 
  3920  0893                     	;# 
  3921  0893                     	;# 
  3922  0893                     	;# 
  3923  0893                     	;# 
  3924  0894                     	;# 
  3925  0894                     	;# 
  3926  0894                     	;# 
  3927  0895                     	;# 
  3928  0895                     	;# 
  3929  0895                     	;# 
  3930  0896                     	;# 
  3931  0896                     	;# 
  3932  0896                     	;# 
  3933  089B                     	;# 
  3934  0911                     	;# 
  3935  0912                     	;# 
  3936  0913                     	;# 
  3937  0914                     	;# 
  3938  0915                     	;# 
  3939  0916                     	;# 
  3940  0918                     	;# 
  3941  0919                     	;# 
  3942  091A                     	;# 
  3943  091B                     	;# 
  3944  091C                     	;# 
  3945  091D                     	;# 
  3946  091E                     	;# 
  3947  091F                     	;# 
  3948  0E0F                     	;# 
  3949  0E10                     	;# 
  3950  0E11                     	;# 
  3951  0E12                     	;# 
  3952  0E13                     	;# 
  3953  0E14                     	;# 
  3954  0E15                     	;# 
  3955  0E16                     	;# 
  3956  0E17                     	;# 
  3957  0E18                     	;# 
  3958  0E19                     	;# 
  3959  0E1A                     	;# 
  3960  0E1B                     	;# 
  3961  0E1C                     	;# 
  3962  0E1D                     	;# 
  3963  0E1E                     	;# 
  3964  0E1F                     	;# 
  3965  0E20                     	;# 
  3966  0E21                     	;# 
  3967  0E22                     	;# 
  3968  0E24                     	;# 
  3969  0E25                     	;# 
  3970  0E28                     	;# 
  3971  0E29                     	;# 
  3972  0E2A                     	;# 
  3973  0E2B                     	;# 
  3974  0E2C                     	;# 
  3975  0E2D                     	;# 
  3976  0E2E                     	;# 
  3977  0E2F                     	;# 
  3978  0E90                     	;# 
  3979  0E91                     	;# 
  3980  0E92                     	;# 
  3981  0E94                     	;# 
  3982  0E95                     	;# 
  3983  0E9C                     	;# 
  3984  0E9D                     	;# 
  3985  0E9E                     	;# 
  3986  0E9F                     	;# 
  3987  0EA0                     	;# 
  3988  0EA1                     	;# 
  3989  0EA2                     	;# 
  3990  0EA3                     	;# 
  3991  0EA4                     	;# 
  3992  0EA5                     	;# 
  3993  0EA6                     	;# 
  3994  0EA7                     	;# 
  3995  0F0F                     	;# 
  3996  0F10                     	;# 
  3997  0F11                     	;# 
  3998  0F12                     	;# 
  3999  0F13                     	;# 
  4000  0F14                     	;# 
  4001  0F15                     	;# 
  4002  0F16                     	;# 
  4003  0F17                     	;# 
  4004  0F18                     	;# 
  4005  0F19                     	;# 
  4006  0F1A                     	;# 
  4007  0F1B                     	;# 
  4008  0F1C                     	;# 
  4009  0F1D                     	;# 
  4010  0F1E                     	;# 
  4011  0F1F                     	;# 
  4012  0F20                     	;# 
  4013  0F21                     	;# 
  4014  0F22                     	;# 
  4015  0F23                     	;# 
  4016  0F24                     	;# 
  4017  0F25                     	;# 
  4018  0F26                     	;# 
  4019  0F27                     	;# 
  4020  0F28                     	;# 
  4021  0F29                     	;# 
  4022  0F2A                     	;# 
  4023  0F2B                     	;# 
  4024  0F2C                     	;# 
  4025  0F2D                     	;# 
  4026  0F2E                     	;# 
  4027  0F2F                     	;# 
  4028  0F30                     	;# 
  4029  0F31                     	;# 
  4030  0F32                     	;# 
  4031  0F33                     	;# 
  4032  0F34                     	;# 
  4033  0F35                     	;# 
  4034  0F36                     	;# 
  4035  0F37                     	;# 
  4036  0FE4                     	;# 
  4037  0FE5                     	;# 
  4038  0FE6                     	;# 
  4039  0FE7                     	;# 
  4040  0FE8                     	;# 
  4041  0FE9                     	;# 
  4042  0FEA                     	;# 
  4043  0FEB                     	;# 
  4044  0FED                     	;# 
  4045  0FEE                     	;# 
  4046  0FEF                     	;# 
  4047  0000                     	;# 
  4048  0001                     	;# 
  4049  0002                     	;# 
  4050  0003                     	;# 
  4051  0004                     	;# 
  4052  0005                     	;# 
  4053  0006                     	;# 
  4054  0007                     	;# 
  4055  0008                     	;# 
  4056  0009                     	;# 
  4057  000A                     	;# 
  4058  000B                     	;# 
  4059  000C                     	;# 
  4060  000D                     	;# 
  4061  000E                     	;# 
  4062  0010                     	;# 
  4063  0011                     	;# 
  4064  0012                     	;# 
  4065  0013                     	;# 
  4066  0014                     	;# 
  4067  0015                     	;# 
  4068  0015                     	;# 
  4069  0016                     	;# 
  4070  0016                     	;# 
  4071  0017                     	;# 
  4072  0018                     	;# 
  4073  0019                     	;# 
  4074  0019                     	;# 
  4075  001A                     	;# 
  4076  001B                     	;# 
  4077  001C                     	;# 
  4078  001D                     	;# 
  4079  001E                     	;# 
  4080  001F                     	;# 
  4081  008C                     	;# 
  4082  008D                     	;# 
  4083  008E                     	;# 
  4084  0090                     	;# 
  4085  0091                     	;# 
  4086  0092                     	;# 
  4087  0093                     	;# 
  4088  0094                     	;# 
  4089  0097                     	;# 
  4090  009B                     	;# 
  4091  009B                     	;# 
  4092  009C                     	;# 
  4093  009D                     	;# 
  4094  009E                     	;# 
  4095  009F                     	;# 
  4096  010C                     	;# 
  4097  010D                     	;# 
  4098  010E                     	;# 
  4099  0111                     	;# 
  4100  0112                     	;# 
  4101  0113                     	;# 
  4102  0114                     	;# 
  4103  0115                     	;# 
  4104  0116                     	;# 
  4105  0117                     	;# 
  4106  0118                     	;# 
  4107  0119                     	;# 
  4108  018C                     	;# 
  4109  018D                     	;# 
  4110  018E                     	;# 
  4111  0197                     	;# 
  4112  0199                     	;# 
  4113  0199                     	;# 
  4114  0199                     	;# 
  4115  019A                     	;# 
  4116  019A                     	;# 
  4117  019A                     	;# 
  4118  019B                     	;# 
  4119  019B                     	;# 
  4120  019B                     	;# 
  4121  019B                     	;# 
  4122  019B                     	;# 
  4123  019C                     	;# 
  4124  019C                     	;# 
  4125  019C                     	;# 
  4126  019D                     	;# 
  4127  019D                     	;# 
  4128  019D                     	;# 
  4129  019E                     	;# 
  4130  019E                     	;# 
  4131  019E                     	;# 
  4132  019F                     	;# 
  4133  019F                     	;# 
  4134  019F                     	;# 
  4135  019F                     	;# 
  4136  019F                     	;# 
  4137  020C                     	;# 
  4138  020D                     	;# 
  4139  020E                     	;# 
  4140  0211                     	;# 
  4141  0211                     	;# 
  4142  0212                     	;# 
  4143  0212                     	;# 
  4144  0213                     	;# 
  4145  0213                     	;# 
  4146  0214                     	;# 
  4147  0214                     	;# 
  4148  0215                     	;# 
  4149  0215                     	;# 
  4150  0215                     	;# 
  4151  0215                     	;# 
  4152  0216                     	;# 
  4153  0216                     	;# 
  4154  0217                     	;# 
  4155  0217                     	;# 
  4156  0219                     	;# 
  4157  021A                     	;# 
  4158  021B                     	;# 
  4159  021C                     	;# 
  4160  021D                     	;# 
  4161  021D                     	;# 
  4162  021E                     	;# 
  4163  021F                     	;# 
  4164  028C                     	;# 
  4165  028D                     	;# 
  4166  028E                     	;# 
  4167  0291                     	;# 
  4168  0291                     	;# 
  4169  0292                     	;# 
  4170  0293                     	;# 
  4171  0294                     	;# 
  4172  0295                     	;# 
  4173  0295                     	;# 
  4174  0296                     	;# 
  4175  0297                     	;# 
  4176  0298                     	;# 
  4177  029F                     	;# 
  4178  030C                     	;# 
  4179  030D                     	;# 
  4180  030E                     	;# 
  4181  0311                     	;# 
  4182  0311                     	;# 
  4183  0312                     	;# 
  4184  0313                     	;# 
  4185  0314                     	;# 
  4186  0315                     	;# 
  4187  0315                     	;# 
  4188  0316                     	;# 
  4189  0317                     	;# 
  4190  0318                     	;# 
  4191  038C                     	;# 
  4192  038D                     	;# 
  4193  038E                     	;# 
  4194  0391                     	;# 
  4195  0392                     	;# 
  4196  0393                     	;# 
  4197  0394                     	;# 
  4198  0395                     	;# 
  4199  0396                     	;# 
  4200  0397                     	;# 
  4201  0398                     	;# 
  4202  0399                     	;# 
  4203  039A                     	;# 
  4204  039C                     	;# 
  4205  039D                     	;# 
  4206  039E                     	;# 
  4207  039F                     	;# 
  4208  0411                     	;# 
  4209  0411                     	;# 
  4210  0412                     	;# 
  4211  0413                     	;# 
  4212  0414                     	;# 
  4213  0415                     	;# 
  4214  0416                     	;# 
  4215  0417                     	;# 
  4216  0418                     	;# 
  4217  0418                     	;# 
  4218  0419                     	;# 
  4219  041A                     	;# 
  4220  041B                     	;# 
  4221  041C                     	;# 
  4222  041D                     	;# 
  4223  041E                     	;# 
  4224  041F                     	;# 
  4225  0498                     	;# 
  4226  0498                     	;# 
  4227  0499                     	;# 
  4228  049A                     	;# 
  4229  049B                     	;# 
  4230  049B                     	;# 
  4231  049C                     	;# 
  4232  049D                     	;# 
  4233  049E                     	;# 
  4234  049F                     	;# 
  4235  0617                     	;# 
  4236  0618                     	;# 
  4237  0619                     	;# 
  4238  0619                     	;# 
  4239  061A                     	;# 
  4240  061B                     	;# 
  4241  061C                     	;# 
  4242  061C                     	;# 
  4243  061F                     	;# 
  4244  0691                     	;# 
  4245  0692                     	;# 
  4246  0693                     	;# 
  4247  0694                     	;# 
  4248  0695                     	;# 
  4249  0696                     	;# 
  4250  0697                     	;# 
  4251  0698                     	;# 
  4252  0699                     	;# 
  4253  0711                     	;# 
  4254  0712                     	;# 
  4255  0713                     	;# 
  4256  0714                     	;# 
  4257  0715                     	;# 
  4258  0716                     	;# 
  4259  0717                     	;# 
  4260  0718                     	;# 
  4261  0719                     	;# 
  4262  0891                     	;# 
  4263  0891                     	;# 
  4264  0891                     	;# 
  4265  0891                     	;# 
  4266  0891                     	;# 
  4267  0891                     	;# 
  4268  0892                     	;# 
  4269  0892                     	;# 
  4270  0892                     	;# 
  4271  0893                     	;# 
  4272  0893                     	;# 
  4273  0893                     	;# 
  4274  0893                     	;# 
  4275  0893                     	;# 
  4276  0893                     	;# 
  4277  0894                     	;# 
  4278  0894                     	;# 
  4279  0894                     	;# 
  4280  0895                     	;# 
  4281  0895                     	;# 
  4282  0895                     	;# 
  4283  0896                     	;# 
  4284  0896                     	;# 
  4285  0896                     	;# 
  4286  089B                     	;# 
  4287  0911                     	;# 
  4288  0912                     	;# 
  4289  0913                     	;# 
  4290  0914                     	;# 
  4291  0915                     	;# 
  4292  0916                     	;# 
  4293  0918                     	;# 
  4294  0919                     	;# 
  4295  091A                     	;# 
  4296  091B                     	;# 
  4297  091C                     	;# 
  4298  091D                     	;# 
  4299  091E                     	;# 
  4300  091F                     	;# 
  4301  0E0F                     	;# 
  4302  0E10                     	;# 
  4303  0E11                     	;# 
  4304  0E12                     	;# 
  4305  0E13                     	;# 
  4306  0E14                     	;# 
  4307  0E15                     	;# 
  4308  0E16                     	;# 
  4309  0E17                     	;# 
  4310  0E18                     	;# 
  4311  0E19                     	;# 
  4312  0E1A                     	;# 
  4313  0E1B                     	;# 
  4314  0E1C                     	;# 
  4315  0E1D                     	;# 
  4316  0E1E                     	;# 
  4317  0E1F                     	;# 
  4318  0E20                     	;# 
  4319  0E21                     	;# 
  4320  0E22                     	;# 
  4321  0E24                     	;# 
  4322  0E25                     	;# 
  4323  0E28                     	;# 
  4324  0E29                     	;# 
  4325  0E2A                     	;# 
  4326  0E2B                     	;# 
  4327  0E2C                     	;# 
  4328  0E2D                     	;# 
  4329  0E2E                     	;# 
  4330  0E2F                     	;# 
  4331  0E90                     	;# 
  4332  0E91                     	;# 
  4333  0E92                     	;# 
  4334  0E94                     	;# 
  4335  0E95                     	;# 
  4336  0E9C                     	;# 
  4337  0E9D                     	;# 
  4338  0E9E                     	;# 
  4339  0E9F                     	;# 
  4340  0EA0                     	;# 
  4341  0EA1                     	;# 
  4342  0EA2                     	;# 
  4343  0EA3                     	;# 
  4344  0EA4                     	;# 
  4345  0EA5                     	;# 
  4346  0EA6                     	;# 
  4347  0EA7                     	;# 
  4348  0F0F                     	;# 
  4349  0F10                     	;# 
  4350  0F11                     	;# 
  4351  0F12                     	;# 
  4352  0F13                     	;# 
  4353  0F14                     	;# 
  4354  0F15                     	;# 
  4355  0F16                     	;# 
  4356  0F17                     	;# 
  4357  0F18                     	;# 
  4358  0F19                     	;# 
  4359  0F1A                     	;# 
  4360  0F1B                     	;# 
  4361  0F1C                     	;# 
  4362  0F1D                     	;# 
  4363  0F1E                     	;# 
  4364  0F1F                     	;# 
  4365  0F20                     	;# 
  4366  0F21                     	;# 
  4367  0F22                     	;# 
  4368  0F23                     	;# 
  4369  0F24                     	;# 
  4370  0F25                     	;# 
  4371  0F26                     	;# 
  4372  0F27                     	;# 
  4373  0F28                     	;# 
  4374  0F29                     	;# 
  4375  0F2A                     	;# 
  4376  0F2B                     	;# 
  4377  0F2C                     	;# 
  4378  0F2D                     	;# 
  4379  0F2E                     	;# 
  4380  0F2F                     	;# 
  4381  0F30                     	;# 
  4382  0F31                     	;# 
  4383  0F32                     	;# 
  4384  0F33                     	;# 
  4385  0F34                     	;# 
  4386  0F35                     	;# 
  4387  0F36                     	;# 
  4388  0F37                     	;# 
  4389  0FE4                     	;# 
  4390  0FE5                     	;# 
  4391  0FE6                     	;# 
  4392  0FE7                     	;# 
  4393  0FE8                     	;# 
  4394  0FE9                     	;# 
  4395  0FEA                     	;# 
  4396  0FEB                     	;# 
  4397  0FED                     	;# 
  4398  0FEE                     	;# 
  4399  0FEF                     	;# 
  4400  0000                     	;# 
  4401  0001                     	;# 
  4402  0002                     	;# 
  4403  0003                     	;# 
  4404  0004                     	;# 
  4405  0005                     	;# 
  4406  0006                     	;# 
  4407  0007                     	;# 
  4408  0008                     	;# 
  4409  0009                     	;# 
  4410  000A                     	;# 
  4411  000B                     	;# 
  4412  000C                     	;# 
  4413  000D                     	;# 
  4414  000E                     	;# 
  4415  0010                     	;# 
  4416  0011                     	;# 
  4417  0012                     	;# 
  4418  0013                     	;# 
  4419  0014                     	;# 
  4420  0015                     	;# 
  4421  0015                     	;# 
  4422  0016                     	;# 
  4423  0016                     	;# 
  4424  0017                     	;# 
  4425  0018                     	;# 
  4426  0019                     	;# 
  4427  0019                     	;# 
  4428  001A                     	;# 
  4429  001B                     	;# 
  4430  001C                     	;# 
  4431  001D                     	;# 
  4432  001E                     	;# 
  4433  001F                     	;# 
  4434  008C                     	;# 
  4435  008D                     	;# 
  4436  008E                     	;# 
  4437  0090                     	;# 
  4438  0091                     	;# 
  4439  0092                     	;# 
  4440  0093                     	;# 
  4441  0094                     	;# 
  4442  0097                     	;# 
  4443  009B                     	;# 
  4444  009B                     	;# 
  4445  009C                     	;# 
  4446  009D                     	;# 
  4447  009E                     	;# 
  4448  009F                     	;# 
  4449  010C                     	;# 
  4450  010D                     	;# 
  4451  010E                     	;# 
  4452  0111                     	;# 
  4453  0112                     	;# 
  4454  0113                     	;# 
  4455  0114                     	;# 
  4456  0115                     	;# 
  4457  0116                     	;# 
  4458  0117                     	;# 
  4459  0118                     	;# 
  4460  0119                     	;# 
  4461  018C                     	;# 
  4462  018D                     	;# 
  4463  018E                     	;# 
  4464  0197                     	;# 
  4465  0199                     	;# 
  4466  0199                     	;# 
  4467  0199                     	;# 
  4468  019A                     	;# 
  4469  019A                     	;# 
  4470  019A                     	;# 
  4471  019B                     	;# 
  4472  019B                     	;# 
  4473  019B                     	;# 
  4474  019B                     	;# 
  4475  019B                     	;# 
  4476  019C                     	;# 
  4477  019C                     	;# 
  4478  019C                     	;# 
  4479  019D                     	;# 
  4480  019D                     	;# 
  4481  019D                     	;# 
  4482  019E                     	;# 
  4483  019E                     	;# 
  4484  019E                     	;# 
  4485  019F                     	;# 
  4486  019F                     	;# 
  4487  019F                     	;# 
  4488  019F                     	;# 
  4489  019F                     	;# 
  4490  020C                     	;# 
  4491  020D                     	;# 
  4492  020E                     	;# 
  4493  0211                     	;# 
  4494  0211                     	;# 
  4495  0212                     	;# 
  4496  0212                     	;# 
  4497  0213                     	;# 
  4498  0213                     	;# 
  4499  0214                     	;# 
  4500  0214                     	;# 
  4501  0215                     	;# 
  4502  0215                     	;# 
  4503  0215                     	;# 
  4504  0215                     	;# 
  4505  0216                     	;# 
  4506  0216                     	;# 
  4507  0217                     	;# 
  4508  0217                     	;# 
  4509  0219                     	;# 
  4510  021A                     	;# 
  4511  021B                     	;# 
  4512  021C                     	;# 
  4513  021D                     	;# 
  4514  021D                     	;# 
  4515  021E                     	;# 
  4516  021F                     	;# 
  4517  028C                     	;# 
  4518  028D                     	;# 
  4519  028E                     	;# 
  4520  0291                     	;# 
  4521  0291                     	;# 
  4522  0292                     	;# 
  4523  0293                     	;# 
  4524  0294                     	;# 
  4525  0295                     	;# 
  4526  0295                     	;# 
  4527  0296                     	;# 
  4528  0297                     	;# 
  4529  0298                     	;# 
  4530  029F                     	;# 
  4531  030C                     	;# 
  4532  030D                     	;# 
  4533  030E                     	;# 
  4534  0311                     	;# 
  4535  0311                     	;# 
  4536  0312                     	;# 
  4537  0313                     	;# 
  4538  0314                     	;# 
  4539  0315                     	;# 
  4540  0315                     	;# 
  4541  0316                     	;# 
  4542  0317                     	;# 
  4543  0318                     	;# 
  4544  038C                     	;# 
  4545  038D                     	;# 
  4546  038E                     	;# 
  4547  0391                     	;# 
  4548  0392                     	;# 
  4549  0393                     	;# 
  4550  0394                     	;# 
  4551  0395                     	;# 
  4552  0396                     	;# 
  4553  0397                     	;# 
  4554  0398                     	;# 
  4555  0399                     	;# 
  4556  039A                     	;# 
  4557  039C                     	;# 
  4558  039D                     	;# 
  4559  039E                     	;# 
  4560  039F                     	;# 
  4561  0411                     	;# 
  4562  0411                     	;# 
  4563  0412                     	;# 
  4564  0413                     	;# 
  4565  0414                     	;# 
  4566  0415                     	;# 
  4567  0416                     	;# 
  4568  0417                     	;# 
  4569  0418                     	;# 
  4570  0418                     	;# 
  4571  0419                     	;# 
  4572  041A                     	;# 
  4573  041B                     	;# 
  4574  041C                     	;# 
  4575  041D                     	;# 
  4576  041E                     	;# 
  4577  041F                     	;# 
  4578  0498                     	;# 
  4579  0498                     	;# 
  4580  0499                     	;# 
  4581  049A                     	;# 
  4582  049B                     	;# 
  4583  049B                     	;# 
  4584  049C                     	;# 
  4585  049D                     	;# 
  4586  049E                     	;# 
  4587  049F                     	;# 
  4588  0617                     	;# 
  4589  0618                     	;# 
  4590  0619                     	;# 
  4591  0619                     	;# 
  4592  061A                     	;# 
  4593  061B                     	;# 
  4594  061C                     	;# 
  4595  061C                     	;# 
  4596  061F                     	;# 
  4597  0691                     	;# 
  4598  0692                     	;# 
  4599  0693                     	;# 
  4600  0694                     	;# 
  4601  0695                     	;# 
  4602  0696                     	;# 
  4603  0697                     	;# 
  4604  0698                     	;# 
  4605  0699                     	;# 
  4606  0711                     	;# 
  4607  0712                     	;# 
  4608  0713                     	;# 
  4609  0714                     	;# 
  4610  0715                     	;# 
  4611  0716                     	;# 
  4612  0717                     	;# 
  4613  0718                     	;# 
  4614  0719                     	;# 
  4615  0891                     	;# 
  4616  0891                     	;# 
  4617  0891                     	;# 
  4618  0891                     	;# 
  4619  0891                     	;# 
  4620  0891                     	;# 
  4621  0892                     	;# 
  4622  0892                     	;# 
  4623  0892                     	;# 
  4624  0893                     	;# 
  4625  0893                     	;# 
  4626  0893                     	;# 
  4627  0893                     	;# 
  4628  0893                     	;# 
  4629  0893                     	;# 
  4630  0894                     	;# 
  4631  0894                     	;# 
  4632  0894                     	;# 
  4633  0895                     	;# 
  4634  0895                     	;# 
  4635  0895                     	;# 
  4636  0896                     	;# 
  4637  0896                     	;# 
  4638  0896                     	;# 
  4639  089B                     	;# 
  4640  0911                     	;# 
  4641  0912                     	;# 
  4642  0913                     	;# 
  4643  0914                     	;# 
  4644  0915                     	;# 
  4645  0916                     	;# 
  4646  0918                     	;# 
  4647  0919                     	;# 
  4648  091A                     	;# 
  4649  091B                     	;# 
  4650  091C                     	;# 
  4651  091D                     	;# 
  4652  091E                     	;# 
  4653  091F                     	;# 
  4654  0E0F                     	;# 
  4655  0E10                     	;# 
  4656  0E11                     	;# 
  4657  0E12                     	;# 
  4658  0E13                     	;# 
  4659  0E14                     	;# 
  4660  0E15                     	;# 
  4661  0E16                     	;# 
  4662  0E17                     	;# 
  4663  0E18                     	;# 
  4664  0E19                     	;# 
  4665  0E1A                     	;# 
  4666  0E1B                     	;# 
  4667  0E1C                     	;# 
  4668  0E1D                     	;# 
  4669  0E1E                     	;# 
  4670  0E1F                     	;# 
  4671  0E20                     	;# 
  4672  0E21                     	;# 
  4673  0E22                     	;# 
  4674  0E24                     	;# 
  4675  0E25                     	;# 
  4676  0E28                     	;# 
  4677  0E29                     	;# 
  4678  0E2A                     	;# 
  4679  0E2B                     	;# 
  4680  0E2C                     	;# 
  4681  0E2D                     	;# 
  4682  0E2E                     	;# 
  4683  0E2F                     	;# 
  4684  0E90                     	;# 
  4685  0E91                     	;# 
  4686  0E92                     	;# 
  4687  0E94                     	;# 
  4688  0E95                     	;# 
  4689  0E9C                     	;# 
  4690  0E9D                     	;# 
  4691  0E9E                     	;# 
  4692  0E9F                     	;# 
  4693  0EA0                     	;# 
  4694  0EA1                     	;# 
  4695  0EA2                     	;# 
  4696  0EA3                     	;# 
  4697  0EA4                     	;# 
  4698  0EA5                     	;# 
  4699  0EA6                     	;# 
  4700  0EA7                     	;# 
  4701  0F0F                     	;# 
  4702  0F10                     	;# 
  4703  0F11                     	;# 
  4704  0F12                     	;# 
  4705  0F13                     	;# 
  4706  0F14                     	;# 
  4707  0F15                     	;# 
  4708  0F16                     	;# 
  4709  0F17                     	;# 
  4710  0F18                     	;# 
  4711  0F19                     	;# 
  4712  0F1A                     	;# 
  4713  0F1B                     	;# 
  4714  0F1C                     	;# 
  4715  0F1D                     	;# 
  4716  0F1E                     	;# 
  4717  0F1F                     	;# 
  4718  0F20                     	;# 
  4719  0F21                     	;# 
  4720  0F22                     	;# 
  4721  0F23                     	;# 
  4722  0F24                     	;# 
  4723  0F25                     	;# 
  4724  0F26                     	;# 
  4725  0F27                     	;# 
  4726  0F28                     	;# 
  4727  0F29                     	;# 
  4728  0F2A                     	;# 
  4729  0F2B                     	;# 
  4730  0F2C                     	;# 
  4731  0F2D                     	;# 
  4732  0F2E                     	;# 
  4733  0F2F                     	;# 
  4734  0F30                     	;# 
  4735  0F31                     	;# 
  4736  0F32                     	;# 
  4737  0F33                     	;# 
  4738  0F34                     	;# 
  4739  0F35                     	;# 
  4740  0F36                     	;# 
  4741  0F37                     	;# 
  4742  0FE4                     	;# 
  4743  0FE5                     	;# 
  4744  0FE6                     	;# 
  4745  0FE7                     	;# 
  4746  0FE8                     	;# 
  4747  0FE9                     	;# 
  4748  0FEA                     	;# 
  4749  0FEB                     	;# 
  4750  0FED                     	;# 
  4751  0FEE                     	;# 
  4752  0FEF                     	;# 
  4753                           
  4754                           	psect	idataCOMMON
  4755  0877                     __pidataCOMMON:	
  4756                           
  4757                           ;initializer for _val
  4758  0877  3404               	retlw	4
  4759                           
  4760                           	psect	idataBANK0
  4761  0876                     __pidataBANK0:	
  4762                           
  4763                           ;initializer for _start
  4764  0876  3401               	retlw	1
  4765                           
  4766                           	psect	idataBANK2
  4767  0952                     __pidataBANK2:	
  4768                           
  4769                           ;initializer for _names
  4770  0952  343D               	retlw	low (STR_1| (0+32768))
  4771  0953  3490               	retlw	high (STR_1| (0+32768))
  4772  0954  3430               	retlw	low (STR_2| (0+32768))
  4773  0955  3490               	retlw	high (STR_2| (0+32768))
  4774  0956  3420               	retlw	low (STR_3| (0+32768))
  4775  0957  3490               	retlw	high (STR_3| (0+32768))
  4776  0958  3449               	retlw	low (STR_4| (0+32768))
  4777  0959  3490               	retlw	high (STR_4| (0+32768))
  4778                           
  4779                           	psect	stringtext1
  4780  1000                     __pstringtext1:	
  4781  1000                     _fsmStateTable:	
  4782  1000  34E2               	retlw	low _do_I2C_IDLE
  4783  1001  3408               	retlw	high _do_I2C_IDLE
  4784  1002  342A               	retlw	low _do_I2C_SEND_ADR_READ
  4785  1003  3409               	retlw	high _do_I2C_SEND_ADR_READ
  4786  1004  3406               	retlw	low _do_I2C_SEND_ADR_WRITE
  4787  1005  3409               	retlw	high _do_I2C_SEND_ADR_WRITE
  4788  1006  3402               	retlw	low _do_I2C_TX
  4789  1007  340E               	retlw	high _do_I2C_TX
  4790  1008  34BC               	retlw	low _do_I2C_RX
  4791  1009  340D               	retlw	high _do_I2C_RX
  4792  100A  34E7               	retlw	low _do_I2C_RCEN
  4793  100B  3408               	retlw	high _do_I2C_RCEN
  4794  100C  348B               	retlw	low _do_I2C_TX_EMPTY
  4795  100D  340C               	retlw	high _do_I2C_TX_EMPTY
  4796  100E  34B5               	retlw	low _do_I2C_SEND_RESTART_READ
  4797  100F  3408               	retlw	high _do_I2C_SEND_RESTART_READ
  4798  1010  34B9               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4799  1011  3408               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4800  1012  34BD               	retlw	low _do_I2C_SEND_RESTART
  4801  1013  3408               	retlw	high _do_I2C_SEND_RESTART
  4802  1014  34C1               	retlw	low _do_I2C_SEND_STOP
  4803  1015  3408               	retlw	high _do_I2C_SEND_STOP
  4804  1016  34C5               	retlw	low _do_I2C_DO_ACK
  4805  1017  3408               	retlw	high _do_I2C_DO_ACK
  4806  1018  34C9               	retlw	low _do_I2C_DO_NACK_STOP
  4807  1019  3408               	retlw	high _do_I2C_DO_NACK_STOP
  4808  101A  34CD               	retlw	low _do_I2C_DO_NACK_RESTART
  4809  101B  3408               	retlw	high _do_I2C_DO_NACK_RESTART
  4810  101C  34FF               	retlw	low _do_I2C_RESET
  4811  101D  3408               	retlw	high _do_I2C_RESET
  4812  101E  3435               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4813  101F  340C               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4814  1020                     __end_of_fsmStateTable:	
  4815  000E                     _PORTCbits	set	14
  4816  001F                     _T2CONbits	set	31
  4817  001F                     _T2CON	set	31
  4818  001D                     _TMR2	set	29
  4819  001E                     _PR2	set	30
  4820  0011                     _PIR1bits	set	17
  4821  000B                     _INTCONbits	set	11
  4822  0010                     _PIR0bits	set	16
  4823  009D                     _ADCON0bits	set	157
  4824  009C                     _ADRESH	set	156
  4825  009B                     _ADRESL	set	155
  4826  009F                     _ADACT	set	159
  4827  009E                     _ADCON1	set	158
  4828  009D                     _ADCON0	set	157
  4829  008E                     _TRISC	set	142
  4830  008D                     _TRISB	set	141
  4831  008C                     _TRISA	set	140
  4832  0097                     _WDTCON	set	151
  4833  0091                     _PIE1bits	set	145
  4834  0090                     _PIE0bits	set	144
  4835  010E                     _LATCbits	set	270
  4836  010E                     _LATC	set	270
  4837  010D                     _LATB	set	269
  4838  010C                     _LATA	set	268
  4839  018C                     _ANSELA	set	396
  4840  018D                     _ANSELB	set	397
  4841  018E                     _ANSELC	set	398
  4842  021C                     _SSP2STATbits	set	540
  4843  0219                     _SSP2BUF	set	537
  4844  021D                     _SSP2CON1bits	set	541
  4845  021A                     _SSP2ADD	set	538
  4846  021D                     _SSP2CON1	set	541
  4847  021C                     _SSP2STAT	set	540
  4848  0214                     _SSP1STATbits	set	532
  4849  0213                     _SSP1MSK	set	531
  4850  0211                     _SSP1BUF	set	529
  4851  0216                     _SSP1CON2bits	set	534
  4852  0212                     _SSP1ADD	set	530
  4853  0216                     _SSP1CON2	set	534
  4854  0215                     _SSP1CON1	set	533
  4855  0214                     _SSP1STAT	set	532
  4856  0215                     _SSP1CON1bits	set	533
  4857  020E                     _WPUC	set	526
  4858  020C                     _WPUA	set	524
  4859  020D                     _WPUB	set	525
  4860  0293                     _CCP1CONbits	set	659
  4861  029F                     _CCPTMRSbits	set	671
  4862  0291                     _CCPR1L	set	657
  4863  0292                     _CCPR1H	set	658
  4864  0293                     _CCP1CON	set	659
  4865  028E                     _ODCONC	set	654
  4866  028D                     _ODCONB	set	653
  4867  028C                     _ODCONA	set	652
  4868  030E                     _SLRCONC	set	782
  4869  030D                     _SLRCONB	set	781
  4870  030C                     _SLRCONA	set	780
  4871  0916                     _PMD5	set	2326
  4872  0915                     _PMD4	set	2325
  4873  0914                     _PMD3	set	2324
  4874  0913                     _PMD2	set	2323
  4875  0912                     _PMD1	set	2322
  4876  0911                     _PMD0	set	2321
  4877  091E                     _OSCTUNE	set	2334
  4878  091F                     _OSCFRQ	set	2335
  4879  091D                     _OSCEN	set	2333
  4880  091B                     _OSCCON3	set	2331
  4881  0919                     _OSCCON1	set	2329
  4882  0E1D                     _SSP2CLKPPS	set	3613
  4883  0E21                     _SSP1DATPPS	set	3617
  4884  0E20                     _SSP1CLKPPS	set	3616
  4885  0E1E                     _SSP2DATPPS	set	3614
  4886  0EA6                     _RC6PPS	set	3750
  4887  0EA2                     _RC2PPS	set	3746
  4888  0E9D                     _RB5PPS	set	3741
  4889  0E9F                     _RB7PPS	set	3743
  4890  0E9E                     _RB6PPS	set	3742
  4891  1020                     STR_3:	
  4892  1020  3441               	retlw	65	;'A'
  4893  1021  346C               	retlw	108	;'l'
  4894  1022  3465               	retlw	101	;'e'
  4895  1023  3478               	retlw	120	;'x'
  4896  1024  3461               	retlw	97	;'a'
  4897  1025  346E               	retlw	110	;'n'
  4898  1026  3464               	retlw	100	;'d'
  4899  1027  3472               	retlw	114	;'r'
  4900  1028  3461               	retlw	97	;'a'
  4901  1029  3420               	retlw	32	;' '
  4902  102A  3446               	retlw	70	;'F'
  4903  102B  3479               	retlw	121	;'y'
  4904  102C  3466               	retlw	102	;'f'
  4905  102D  3466               	retlw	102	;'f'
  4906  102E  3465               	retlw	101	;'e'
  4907  102F  3400               	retlw	0
  4908                           
  4909                           	psect	stringtext2
  4910  1030                     __pstringtext2:	
  4911  1030                     STR_2:	
  4912  1030  344E               	retlw	78	;'N'
  4913  1031  346F               	retlw	111	;'o'
  4914  1032  3465               	retlw	101	;'e'
  4915  1033  346C               	retlw	108	;'l'
  4916  1034  346C               	retlw	108	;'l'
  4917  1035  3465               	retlw	101	;'e'
  4918  1036  3420               	retlw	32	;' '
  4919  1037  3443               	retlw	67	;'C'
  4920  1038  3472               	retlw	114	;'r'
  4921  1039  3461               	retlw	97	;'a'
  4922  103A  346E               	retlw	110	;'n'
  4923  103B  3465               	retlw	101	;'e'
  4924  103C  3400               	retlw	0
  4925                           
  4926                           	psect	stringtext3
  4927  103D                     __pstringtext3:	
  4928  103D                     STR_1:	
  4929  103D  344A               	retlw	74	;'J'
  4930  103E  3475               	retlw	117	;'u'
  4931  103F  3473               	retlw	115	;'s'
  4932  1040  3474               	retlw	116	;'t'
  4933  1041  3469               	retlw	105	;'i'
  4934  1042  346E               	retlw	110	;'n'
  4935  1043  3420               	retlw	32	;' '
  4936  1044  3443               	retlw	67	;'C'
  4937  1045  3468               	retlw	104	;'h'
  4938  1046  3461               	retlw	97	;'a'
  4939  1047  346E               	retlw	110	;'n'
  4940  1048  3400               	retlw	0
  4941                           
  4942                           	psect	stringtext4
  4943  1049                     __pstringtext4:	
  4944  1049                     STR_4:	
  4945  1049  344A               	retlw	74	;'J'
  4946  104A  3465               	retlw	101	;'e'
  4947  104B  3466               	retlw	102	;'f'
  4948  104C  3466               	retlw	102	;'f'
  4949  104D  3420               	retlw	32	;' '
  4950  104E  3447               	retlw	71	;'G'
  4951  104F  3465               	retlw	101	;'e'
  4952  1050  3469               	retlw	105	;'i'
  4953  1051  3473               	retlw	115	;'s'
  4954  1052  3473               	retlw	115	;'s'
  4955  1053  3400               	retlw	0
  4956                           
  4957                           	psect	stringtext5
  4958  0000                     __pstringtext5:	
  4959                           
  4960                           ; #config settings
  4961  0000                     
  4962                           	psect	cinit
  4963  002E                     start_initialization:	
  4964  002E                     __initialization:	
  4965                           
  4966                           ; Initialize objects allocated to COMMON
  4967  002E  3188  2077  3180   	fcall	__pidataCOMMON	;fetch initializer
  4968  0031  00FA               	movwf	__pdataCOMMON& (0+127)
  4969                           
  4970                           ; Initialize objects allocated to BANK0
  4971  0032  3188  2076  3180   	fcall	__pidataBANK0	;fetch initializer
  4972  0035  00EE               	movwf	__pdataBANK0& (0+127)
  4973                           
  4974                           ; Initialize objects allocated to BANK2
  4975  0036  3052               	movlw	low __pidataBANK2
  4976  0037  0084               	movwf	4
  4977  0038  3089               	movlw	(high __pidataBANK2)| (0+128)
  4978  0039  0085               	movwf	5
  4979  003A  3060               	movlw	low __pdataBANK2
  4980  003B  0086               	movwf	6
  4981  003C  3001               	movlw	high __pdataBANK2
  4982  003D  0087               	movwf	7
  4983  003E  3008               	movlw	8
  4984  003F  3188  20F9  3180   	fcall	init_ram
  4985                           
  4986                           ; Clear objects allocated to COMMON
  4987  0042  01F6               	clrf	__pbssCOMMON& (0+127)
  4988  0043  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4989  0044  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4990  0045  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4991                           
  4992                           ; Clear objects allocated to BANK0
  4993  0046  305C               	movlw	low __pbssBANK0
  4994  0047  0084               	movwf	4
  4995  0048  3000               	movlw	high __pbssBANK0
  4996  0049  0085               	movwf	5
  4997  004A  3012               	movlw	18
  4998  004B  3188  20F3  3180   	fcall	clear_ram0
  4999                           
  5000                           ; Clear objects allocated to BANK1
  5001  004E  0021               	movlb	1	; select bank1
  5002  004F  01E0               	clrf	__pbssBANK1& (0+127)
  5003  0050  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  5004  0051  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  5005  0052  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  5006  0053  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  5007  0054  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  5008                           
  5009                           ; Clear objects allocated to BANK2
  5010  0055  0022               	movlb	2	; select bank2
  5011  0056  01E8               	clrf	__pbssBANK2& (0+127)
  5012  0057  01E9               	clrf	(__pbssBANK2+1)& (0+127)
  5013                           
  5014                           ; Clear objects allocated to BANK3
  5015  0058  30A0               	movlw	low __pbssBANK3
  5016  0059  0084               	movwf	4
  5017  005A  3001               	movlw	high __pbssBANK3
  5018  005B  0085               	movwf	5
  5019  005C  301D               	movlw	29
  5020  005D  3188  20F3  3180   	fcall	clear_ram0
  5021                           
  5022                           ; Clear objects allocated to BANK4
  5023  0060  3020               	movlw	low __pbssBANK4
  5024  0061  0084               	movwf	4
  5025  0062  3002               	movlw	high __pbssBANK4
  5026  0063  0085               	movwf	5
  5027  0064  3044               	movlw	68
  5028  0065  3188  20F3         	fcall	clear_ram0
  5029  0067                     end_of_initialization:	
  5030                           ;End of C runtime variable initialization code
  5031                           
  5032  0067                     __end_of__initialization:	
  5033  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5034  0068  0020               	movlb	0
  5035  0069  318D  2D52         	ljmp	_main	;jump to C main() function
  5036                           
  5037                           	psect	bssCOMMON
  5038  0076                     __pbssCOMMON:	
  5039  0076                     _b_i2c_error_flag:	
  5040  0076                     	ds	1
  5041  0077                     _handleGestureFlag:	
  5042  0077                     	ds	1
  5043  0078                     _state:	
  5044  0078                     	ds	1
  5045  0079                     _button:	
  5046  0079                     	ds	1
  5047                           
  5048                           	psect	dataCOMMON
  5049  007A                     __pdataCOMMON:	
  5050  007A                     _val:	
  5051  007A                     	ds	1
  5052                           
  5053                           	psect	bssBANK0
  5054  005C                     __pbssBANK0:	
  5055  005C                     _name:	
  5056  005C                     	ds	2
  5057  005E                     _gesture_state_:	
  5058  005E                     	ds	2
  5059  0060                     _gesture_near_count_:	
  5060  0060                     	ds	2
  5061  0062                     _gesture_lr_count_:	
  5062  0062                     	ds	2
  5063  0064                     _gesture_ud_count_:	
  5064  0064                     	ds	2
  5065  0066                     _gesture_lr_delta_:	
  5066  0066                     	ds	2
  5067  0068                     _gesture_ud_delta_:	
  5068  0068                     	ds	2
  5069  006A                     _i2c1_driver_busCollisionISR:	
  5070  006A                     	ds	2
  5071  006C                     _adcResult:	
  5072  006C                     	ds	1
  5073  006D                     _printed:	
  5074  006D                     	ds	1
  5075                           
  5076                           	psect	dataBANK0
  5077  006E                     __pdataBANK0:	
  5078  006E                     _start:	
  5079  006E                     	ds	1
  5080                           
  5081                           	psect	bssBANK1
  5082  00E0                     __pbssBANK1:	
  5083  00E0                     _adcResult2:	
  5084  00E0                     	ds	2
  5085  00E2                     _gesture_far_count_:	
  5086  00E2                     	ds	2
  5087  00E4                     _i2c1_driver_i2cISR:	
  5088  00E4                     	ds	2
  5089                           
  5090                           	psect	bssBANK2
  5091  0168                     __pbssBANK2:	
  5092  0168                     _gesture_motion_:	
  5093  0168                     	ds	2
  5094                           
  5095                           	psect	dataBANK2
  5096  0160                     __pdataBANK2:	
  5097  0160                     _names:	
  5098  0160                     	ds	8
  5099                           
  5100                           	psect	bssBANK3
  5101  01A0                     __pbssBANK3:	
  5102  01A0                     _i2c_status:	
  5103  01A0                     	ds	29
  5104                           
  5105                           	psect	bssBANK4
  5106  0220                     __pbssBANK4:	
  5107  0220                     _gesture_data_:	
  5108  0220                     	ds	68
  5109                           
  5110                           	psect	inittext
  5111  08F9                     init_ram:	
  5112  08F9  00FE               	movwf	126
  5113  08FA                     initloop:	
  5114  08FA  0012               	moviw fsr0++
  5115  08FB  001E               	movwi fsr1++
  5116  08FC  0BFE               	decfsz	126,f
  5117  08FD  28FA               	goto	initloop
  5118  08FE  3400               	retlw	0
  5119                           
  5120                           	psect	clrtext
  5121  08F3                     clear_ram0:	
  5122                           ;	Called with FSR0 containing the base address, and
  5123                           ;	WREG with the size to clear
  5124                           
  5125  08F3  0064               	clrwdt	;clear the watchdog before getting into this loop
  5126  08F4                     clrloop0:	
  5127  08F4  0180               	clrf	0	;clear RAM location pointed to by FSR
  5128  08F5  3101               	addfsr 0,1
  5129  08F6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5130  08F7  28F4               	goto	clrloop0	;have we reached the end yet?
  5131  08F8  3400               	retlw	0	;all done for this memory range, return
  5132                           
  5133                           	psect	cstackBANK2
  5134  0120                     __pcstackBANK2:	
  5135  0120                     readGesture@fifo_data:	
  5136                           
  5137                           ; 64 bytes @ 0x0
  5138  0120                     	ds	64
  5139                           
  5140                           	psect	cstackBANK1
  5141  00A0                     __pcstackBANK1:	
  5142  00A0                     readGesture@fifo_data2:	
  5143                           
  5144                           ; 64 bytes @ 0x0
  5145  00A0                     	ds	64
  5146                           
  5147                           	psect	cstackCOMMON
  5148  0070                     __pcstackCOMMON:	
  5149  0070                     ?_i2c1_driver_open:	
  5150  0070                     ?_i2c1_driver_isNACK:	
  5151                           ; 1 bit 
  5152                           
  5153  0070                     ?_i2c1_driver_isBufferFull:	
  5154                           ; 1 bit 
  5155                           
  5156  0070                     ?_returnStop:	
  5157                           ; 1 bit 
  5158                           
  5159  0070                     ?_returnReset:	
  5160                           ; 1 bytes @ 0x0
  5161                           
  5162  0070                     ?_mssp1_clearIRQ:	
  5163                           ; 1 bytes @ 0x0
  5164                           
  5165  0070                     ??_mssp1_clearIRQ:	
  5166                           ; 1 bytes @ 0x0
  5167                           
  5168  0070                     ?_i2c_busCollisionISR:	
  5169                           ; 1 bytes @ 0x0
  5170                           
  5171  0070                     ??_i2c_busCollisionISR:	
  5172                           ; 1 bytes @ 0x0
  5173                           
  5174  0070                     ?_i2c_ISR:	
  5175                           ; 1 bytes @ 0x0
  5176                           
  5177  0070                     ?_i2c1_driver_start:	
  5178                           ; 1 bytes @ 0x0
  5179                           
  5180  0070                     ?_i2c1_driver_resetBus:	
  5181                           ; 1 bytes @ 0x0
  5182                           
  5183  0070                     ??_i2c1_driver_resetBus:	
  5184                           ; 1 bytes @ 0x0
  5185                           
  5186  0070                     ?_i2c1_driver_restart:	
  5187                           ; 1 bytes @ 0x0
  5188                           
  5189  0070                     ?_i2c1_driver_stop:	
  5190                           ; 1 bytes @ 0x0
  5191                           
  5192  0070                     ?_i2c1_driver_TXData:	
  5193                           ; 1 bytes @ 0x0
  5194                           
  5195  0070                     ?_i2c1_driver_startRX:	
  5196                           ; 1 bytes @ 0x0
  5197                           
  5198  0070                     ?_i2c1_driver_sendACK:	
  5199                           ; 1 bytes @ 0x0
  5200                           
  5201  0070                     ??_i2c1_driver_sendACK:	
  5202                           ; 1 bytes @ 0x0
=======
   190                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   191                           ; 
   192                           ; 
   193                           ; Code-generator required, PIC16F18345 Definitions
   194                           ; 
   195                           ; SFR Addresses
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0090                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0097                     	;# 
   239  009B                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  0111                     	;# 
   249  0112                     	;# 
   250  0113                     	;# 
   251  0114                     	;# 
   252  0115                     	;# 
   253  0116                     	;# 
   254  0117                     	;# 
   255  0118                     	;# 
   256  0119                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  018E                     	;# 
   260  0197                     	;# 
   261  0199                     	;# 
   262  0199                     	;# 
   263  0199                     	;# 
   264  019A                     	;# 
   265  019A                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019C                     	;# 
   274  019C                     	;# 
   275  019D                     	;# 
   276  019D                     	;# 
   277  019D                     	;# 
   278  019E                     	;# 
   279  019E                     	;# 
   280  019E                     	;# 
   281  019F                     	;# 
   282  019F                     	;# 
   283  019F                     	;# 
   284  019F                     	;# 
   285  019F                     	;# 
   286  020C                     	;# 
   287  020D                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0217                     	;# 
   305  0219                     	;# 
   306  021A                     	;# 
   307  021B                     	;# 
   308  021C                     	;# 
   309  021D                     	;# 
   310  021D                     	;# 
   311  021E                     	;# 
   312  021F                     	;# 
   313  028C                     	;# 
   314  028D                     	;# 
   315  028E                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0297                     	;# 
   325  0298                     	;# 
   326  029F                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  0311                     	;# 
   331  0311                     	;# 
   332  0312                     	;# 
   333  0313                     	;# 
   334  0314                     	;# 
   335  0315                     	;# 
   336  0315                     	;# 
   337  0316                     	;# 
   338  0317                     	;# 
   339  0318                     	;# 
   340  038C                     	;# 
   341  038D                     	;# 
   342  038E                     	;# 
   343  0391                     	;# 
   344  0392                     	;# 
   345  0393                     	;# 
   346  0394                     	;# 
   347  0395                     	;# 
   348  0396                     	;# 
   349  0397                     	;# 
   350  0398                     	;# 
   351  0399                     	;# 
   352  039A                     	;# 
   353  039C                     	;# 
   354  039D                     	;# 
   355  039E                     	;# 
   356  039F                     	;# 
   357  0411                     	;# 
   358  0411                     	;# 
   359  0412                     	;# 
   360  0413                     	;# 
   361  0414                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  0418                     	;# 
   366  0418                     	;# 
   367  0419                     	;# 
   368  041A                     	;# 
   369  041B                     	;# 
   370  041C                     	;# 
   371  041D                     	;# 
   372  041E                     	;# 
   373  041F                     	;# 
   374  0498                     	;# 
   375  0498                     	;# 
   376  0499                     	;# 
   377  049A                     	;# 
   378  049B                     	;# 
   379  049B                     	;# 
   380  049C                     	;# 
   381  049D                     	;# 
   382  049E                     	;# 
   383  049F                     	;# 
   384  0617                     	;# 
   385  0618                     	;# 
   386  0619                     	;# 
   387  0619                     	;# 
   388  061A                     	;# 
   389  061B                     	;# 
   390  061C                     	;# 
   391  061C                     	;# 
   392  061F                     	;# 
   393  0691                     	;# 
   394  0692                     	;# 
   395  0693                     	;# 
   396  0694                     	;# 
   397  0695                     	;# 
   398  0696                     	;# 
   399  0697                     	;# 
   400  0698                     	;# 
   401  0699                     	;# 
   402  0711                     	;# 
   403  0712                     	;# 
   404  0713                     	;# 
   405  0714                     	;# 
   406  0715                     	;# 
   407  0716                     	;# 
   408  0717                     	;# 
   409  0718                     	;# 
   410  0719                     	;# 
   411  0891                     	;# 
   412  0891                     	;# 
   413  0891                     	;# 
   414  0891                     	;# 
   415  0891                     	;# 
   416  0891                     	;# 
   417  0892                     	;# 
   418  0892                     	;# 
   419  0892                     	;# 
   420  0893                     	;# 
   421  0893                     	;# 
   422  0893                     	;# 
   423  0893                     	;# 
   424  0893                     	;# 
   425  0893                     	;# 
   426  0894                     	;# 
   427  0894                     	;# 
   428  0894                     	;# 
   429  0895                     	;# 
   430  0895                     	;# 
   431  0895                     	;# 
   432  0896                     	;# 
   433  0896                     	;# 
   434  0896                     	;# 
   435  089B                     	;# 
   436  0911                     	;# 
   437  0912                     	;# 
   438  0913                     	;# 
   439  0914                     	;# 
   440  0915                     	;# 
   441  0916                     	;# 
   442  0918                     	;# 
   443  0919                     	;# 
   444  091A                     	;# 
   445  091B                     	;# 
   446  091C                     	;# 
   447  091D                     	;# 
   448  091E                     	;# 
   449  091F                     	;# 
   450  0E0F                     	;# 
   451  0E10                     	;# 
   452  0E11                     	;# 
   453  0E12                     	;# 
   454  0E13                     	;# 
   455  0E14                     	;# 
   456  0E15                     	;# 
   457  0E16                     	;# 
   458  0E17                     	;# 
   459  0E18                     	;# 
   460  0E19                     	;# 
   461  0E1A                     	;# 
   462  0E1B                     	;# 
   463  0E1C                     	;# 
   464  0E1D                     	;# 
   465  0E1E                     	;# 
   466  0E1F                     	;# 
   467  0E20                     	;# 
   468  0E21                     	;# 
   469  0E22                     	;# 
   470  0E24                     	;# 
   471  0E25                     	;# 
   472  0E28                     	;# 
   473  0E29                     	;# 
   474  0E2A                     	;# 
   475  0E2B                     	;# 
   476  0E2C                     	;# 
   477  0E2D                     	;# 
   478  0E2E                     	;# 
   479  0E2F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E9C                     	;# 
   486  0E9D                     	;# 
   487  0E9E                     	;# 
   488  0E9F                     	;# 
   489  0EA0                     	;# 
   490  0EA1                     	;# 
   491  0EA2                     	;# 
   492  0EA3                     	;# 
   493  0EA4                     	;# 
   494  0EA5                     	;# 
   495  0EA6                     	;# 
   496  0EA7                     	;# 
   497  0F0F                     	;# 
   498  0F10                     	;# 
   499  0F11                     	;# 
   500  0F12                     	;# 
   501  0F13                     	;# 
   502  0F14                     	;# 
   503  0F15                     	;# 
   504  0F16                     	;# 
   505  0F17                     	;# 
   506  0F18                     	;# 
   507  0F19                     	;# 
   508  0F1A                     	;# 
   509  0F1B                     	;# 
   510  0F1C                     	;# 
   511  0F1D                     	;# 
   512  0F1E                     	;# 
   513  0F1F                     	;# 
   514  0F20                     	;# 
   515  0F21                     	;# 
   516  0F22                     	;# 
   517  0F23                     	;# 
   518  0F24                     	;# 
   519  0F25                     	;# 
   520  0F26                     	;# 
   521  0F27                     	;# 
   522  0F28                     	;# 
   523  0F29                     	;# 
   524  0F2A                     	;# 
   525  0F2B                     	;# 
   526  0F2C                     	;# 
   527  0F2D                     	;# 
   528  0F2E                     	;# 
   529  0F2F                     	;# 
   530  0F30                     	;# 
   531  0F31                     	;# 
   532  0F32                     	;# 
   533  0F33                     	;# 
   534  0F34                     	;# 
   535  0F35                     	;# 
   536  0F36                     	;# 
   537  0F37                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001C                     	;# 
   580  001D                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0094                     	;# 
   591  0097                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  018E                     	;# 
   613  0197                     	;# 
   614  0199                     	;# 
   615  0199                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019A                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019D                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019E                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  019F                     	;# 
   637  019F                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020D                     	;# 
   641  020E                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0216                     	;# 
   655  0216                     	;# 
   656  0217                     	;# 
   657  0217                     	;# 
   658  0219                     	;# 
   659  021A                     	;# 
   660  021B                     	;# 
   661  021C                     	;# 
   662  021D                     	;# 
   663  021D                     	;# 
   664  021E                     	;# 
   665  021F                     	;# 
   666  028C                     	;# 
   667  028D                     	;# 
   668  028E                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0295                     	;# 
   675  0295                     	;# 
   676  0296                     	;# 
   677  0297                     	;# 
   678  0298                     	;# 
   679  029F                     	;# 
   680  030C                     	;# 
   681  030D                     	;# 
   682  030E                     	;# 
   683  0311                     	;# 
   684  0311                     	;# 
   685  0312                     	;# 
   686  0313                     	;# 
   687  0314                     	;# 
   688  0315                     	;# 
   689  0315                     	;# 
   690  0316                     	;# 
   691  0317                     	;# 
   692  0318                     	;# 
   693  038C                     	;# 
   694  038D                     	;# 
   695  038E                     	;# 
   696  0391                     	;# 
   697  0392                     	;# 
   698  0393                     	;# 
   699  0394                     	;# 
   700  0395                     	;# 
   701  0396                     	;# 
   702  0397                     	;# 
   703  0398                     	;# 
   704  0399                     	;# 
   705  039A                     	;# 
   706  039C                     	;# 
   707  039D                     	;# 
   708  039E                     	;# 
   709  039F                     	;# 
   710  0411                     	;# 
   711  0411                     	;# 
   712  0412                     	;# 
   713  0413                     	;# 
   714  0414                     	;# 
   715  0415                     	;# 
   716  0416                     	;# 
   717  0417                     	;# 
   718  0418                     	;# 
   719  0418                     	;# 
   720  0419                     	;# 
   721  041A                     	;# 
   722  041B                     	;# 
   723  041C                     	;# 
   724  041D                     	;# 
   725  041E                     	;# 
   726  041F                     	;# 
   727  0498                     	;# 
   728  0498                     	;# 
   729  0499                     	;# 
   730  049A                     	;# 
   731  049B                     	;# 
   732  049B                     	;# 
   733  049C                     	;# 
   734  049D                     	;# 
   735  049E                     	;# 
   736  049F                     	;# 
   737  0617                     	;# 
   738  0618                     	;# 
   739  0619                     	;# 
   740  0619                     	;# 
   741  061A                     	;# 
   742  061B                     	;# 
   743  061C                     	;# 
   744  061C                     	;# 
   745  061F                     	;# 
   746  0691                     	;# 
   747  0692                     	;# 
   748  0693                     	;# 
   749  0694                     	;# 
   750  0695                     	;# 
   751  0696                     	;# 
   752  0697                     	;# 
   753  0698                     	;# 
   754  0699                     	;# 
   755  0711                     	;# 
   756  0712                     	;# 
   757  0713                     	;# 
   758  0714                     	;# 
   759  0715                     	;# 
   760  0716                     	;# 
   761  0717                     	;# 
   762  0718                     	;# 
   763  0719                     	;# 
   764  0891                     	;# 
   765  0891                     	;# 
   766  0891                     	;# 
   767  0891                     	;# 
   768  0891                     	;# 
   769  0891                     	;# 
   770  0892                     	;# 
   771  0892                     	;# 
   772  0892                     	;# 
   773  0893                     	;# 
   774  0893                     	;# 
   775  0893                     	;# 
   776  0893                     	;# 
   777  0893                     	;# 
   778  0893                     	;# 
   779  0894                     	;# 
   780  0894                     	;# 
   781  0894                     	;# 
   782  0895                     	;# 
   783  0895                     	;# 
   784  0895                     	;# 
   785  0896                     	;# 
   786  0896                     	;# 
   787  0896                     	;# 
   788  089B                     	;# 
   789  0911                     	;# 
   790  0912                     	;# 
   791  0913                     	;# 
   792  0914                     	;# 
   793  0915                     	;# 
   794  0916                     	;# 
   795  0918                     	;# 
   796  0919                     	;# 
   797  091A                     	;# 
   798  091B                     	;# 
   799  091C                     	;# 
   800  091D                     	;# 
   801  091E                     	;# 
   802  091F                     	;# 
   803  0E0F                     	;# 
   804  0E10                     	;# 
   805  0E11                     	;# 
   806  0E12                     	;# 
   807  0E13                     	;# 
   808  0E14                     	;# 
   809  0E15                     	;# 
   810  0E16                     	;# 
   811  0E17                     	;# 
   812  0E18                     	;# 
   813  0E19                     	;# 
   814  0E1A                     	;# 
   815  0E1B                     	;# 
   816  0E1C                     	;# 
   817  0E1D                     	;# 
   818  0E1E                     	;# 
   819  0E1F                     	;# 
   820  0E20                     	;# 
   821  0E21                     	;# 
   822  0E22                     	;# 
   823  0E24                     	;# 
   824  0E25                     	;# 
   825  0E28                     	;# 
   826  0E29                     	;# 
   827  0E2A                     	;# 
   828  0E2B                     	;# 
   829  0E2C                     	;# 
   830  0E2D                     	;# 
   831  0E2E                     	;# 
   832  0E2F                     	;# 
   833  0E90                     	;# 
   834  0E91                     	;# 
   835  0E92                     	;# 
   836  0E94                     	;# 
   837  0E95                     	;# 
   838  0E9C                     	;# 
   839  0E9D                     	;# 
   840  0E9E                     	;# 
   841  0E9F                     	;# 
   842  0EA0                     	;# 
   843  0EA1                     	;# 
   844  0EA2                     	;# 
   845  0EA3                     	;# 
   846  0EA4                     	;# 
   847  0EA5                     	;# 
   848  0EA6                     	;# 
   849  0EA7                     	;# 
   850  0F0F                     	;# 
   851  0F10                     	;# 
   852  0F11                     	;# 
   853  0F12                     	;# 
   854  0F13                     	;# 
   855  0F14                     	;# 
   856  0F15                     	;# 
   857  0F16                     	;# 
   858  0F17                     	;# 
   859  0F18                     	;# 
   860  0F19                     	;# 
   861  0F1A                     	;# 
   862  0F1B                     	;# 
   863  0F1C                     	;# 
   864  0F1D                     	;# 
   865  0F1E                     	;# 
   866  0F1F                     	;# 
   867  0F20                     	;# 
   868  0F21                     	;# 
   869  0F22                     	;# 
   870  0F23                     	;# 
   871  0F24                     	;# 
   872  0F25                     	;# 
   873  0F26                     	;# 
   874  0F27                     	;# 
   875  0F28                     	;# 
   876  0F29                     	;# 
   877  0F2A                     	;# 
   878  0F2B                     	;# 
   879  0F2C                     	;# 
   880  0F2D                     	;# 
   881  0F2E                     	;# 
   882  0F2F                     	;# 
   883  0F30                     	;# 
   884  0F31                     	;# 
   885  0F32                     	;# 
   886  0F33                     	;# 
   887  0F34                     	;# 
   888  0F35                     	;# 
   889  0F36                     	;# 
   890  0F37                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;# 
   902  0000                     	;# 
   903  0001                     	;# 
   904  0002                     	;# 
   905  0003                     	;# 
   906  0004                     	;# 
   907  0005                     	;# 
   908  0006                     	;# 
   909  0007                     	;# 
   910  0008                     	;# 
   911  0009                     	;# 
   912  000A                     	;# 
   913  000B                     	;# 
   914  000C                     	;# 
   915  000D                     	;# 
   916  000E                     	;# 
   917  0010                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0016                     	;# 
   926  0017                     	;# 
   927  0018                     	;# 
   928  0019                     	;# 
   929  0019                     	;# 
   930  001A                     	;# 
   931  001B                     	;# 
   932  001C                     	;# 
   933  001D                     	;# 
   934  001E                     	;# 
   935  001F                     	;# 
   936  008C                     	;# 
   937  008D                     	;# 
   938  008E                     	;# 
   939  0090                     	;# 
   940  0091                     	;# 
   941  0092                     	;# 
   942  0093                     	;# 
   943  0094                     	;# 
   944  0097                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  009F                     	;# 
   951  010C                     	;# 
   952  010D                     	;# 
   953  010E                     	;# 
   954  0111                     	;# 
   955  0112                     	;# 
   956  0113                     	;# 
   957  0114                     	;# 
   958  0115                     	;# 
   959  0116                     	;# 
   960  0117                     	;# 
   961  0118                     	;# 
   962  0119                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  018E                     	;# 
   966  0197                     	;# 
   967  0199                     	;# 
   968  0199                     	;# 
   969  0199                     	;# 
   970  019A                     	;# 
   971  019A                     	;# 
   972  019A                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019C                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019D                     	;# 
   983  019D                     	;# 
   984  019E                     	;# 
   985  019E                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  019F                     	;# 
   989  019F                     	;# 
   990  019F                     	;# 
   991  019F                     	;# 
   992  020C                     	;# 
   993  020D                     	;# 
   994  020E                     	;# 
   995  0211                     	;# 
   996  0211                     	;# 
   997  0212                     	;# 
   998  0212                     	;# 
   999  0213                     	;# 
  1000  0213                     	;# 
  1001  0214                     	;# 
  1002  0214                     	;# 
  1003  0215                     	;# 
  1004  0215                     	;# 
  1005  0215                     	;# 
  1006  0215                     	;# 
  1007  0216                     	;# 
  1008  0216                     	;# 
  1009  0217                     	;# 
  1010  0217                     	;# 
  1011  0219                     	;# 
  1012  021A                     	;# 
  1013  021B                     	;# 
  1014  021C                     	;# 
  1015  021D                     	;# 
  1016  021D                     	;# 
  1017  021E                     	;# 
  1018  021F                     	;# 
  1019  028C                     	;# 
  1020  028D                     	;# 
  1021  028E                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0294                     	;# 
  1027  0295                     	;# 
  1028  0295                     	;# 
  1029  0296                     	;# 
  1030  0297                     	;# 
  1031  0298                     	;# 
  1032  029F                     	;# 
  1033  030C                     	;# 
  1034  030D                     	;# 
  1035  030E                     	;# 
  1036  0311                     	;# 
  1037  0311                     	;# 
  1038  0312                     	;# 
  1039  0313                     	;# 
  1040  0314                     	;# 
  1041  0315                     	;# 
  1042  0315                     	;# 
  1043  0316                     	;# 
  1044  0317                     	;# 
  1045  0318                     	;# 
  1046  038C                     	;# 
  1047  038D                     	;# 
  1048  038E                     	;# 
  1049  0391                     	;# 
  1050  0392                     	;# 
  1051  0393                     	;# 
  1052  0394                     	;# 
  1053  0395                     	;# 
  1054  0396                     	;# 
  1055  0397                     	;# 
  1056  0398                     	;# 
  1057  0399                     	;# 
  1058  039A                     	;# 
  1059  039C                     	;# 
  1060  039D                     	;# 
  1061  039E                     	;# 
  1062  039F                     	;# 
  1063  0411                     	;# 
  1064  0411                     	;# 
  1065  0412                     	;# 
  1066  0413                     	;# 
  1067  0414                     	;# 
  1068  0415                     	;# 
  1069  0416                     	;# 
  1070  0417                     	;# 
  1071  0418                     	;# 
  1072  0418                     	;# 
  1073  0419                     	;# 
  1074  041A                     	;# 
  1075  041B                     	;# 
  1076  041C                     	;# 
  1077  041D                     	;# 
  1078  041E                     	;# 
  1079  041F                     	;# 
  1080  0498                     	;# 
  1081  0498                     	;# 
  1082  0499                     	;# 
  1083  049A                     	;# 
  1084  049B                     	;# 
  1085  049B                     	;# 
  1086  049C                     	;# 
  1087  049D                     	;# 
  1088  049E                     	;# 
  1089  049F                     	;# 
  1090  0617                     	;# 
  1091  0618                     	;# 
  1092  0619                     	;# 
  1093  0619                     	;# 
  1094  061A                     	;# 
  1095  061B                     	;# 
  1096  061C                     	;# 
  1097  061C                     	;# 
  1098  061F                     	;# 
  1099  0691                     	;# 
  1100  0692                     	;# 
  1101  0693                     	;# 
  1102  0694                     	;# 
  1103  0695                     	;# 
  1104  0696                     	;# 
  1105  0697                     	;# 
  1106  0698                     	;# 
  1107  0699                     	;# 
  1108  0711                     	;# 
  1109  0712                     	;# 
  1110  0713                     	;# 
  1111  0714                     	;# 
  1112  0715                     	;# 
  1113  0716                     	;# 
  1114  0717                     	;# 
  1115  0718                     	;# 
  1116  0719                     	;# 
  1117  0891                     	;# 
  1118  0891                     	;# 
  1119  0891                     	;# 
  1120  0891                     	;# 
  1121  0891                     	;# 
  1122  0891                     	;# 
  1123  0892                     	;# 
  1124  0892                     	;# 
  1125  0892                     	;# 
  1126  0893                     	;# 
  1127  0893                     	;# 
  1128  0893                     	;# 
  1129  0893                     	;# 
  1130  0893                     	;# 
  1131  0893                     	;# 
  1132  0894                     	;# 
  1133  0894                     	;# 
  1134  0894                     	;# 
  1135  0895                     	;# 
  1136  0895                     	;# 
  1137  0895                     	;# 
  1138  0896                     	;# 
  1139  0896                     	;# 
  1140  0896                     	;# 
  1141  089B                     	;# 
  1142  0911                     	;# 
  1143  0912                     	;# 
  1144  0913                     	;# 
  1145  0914                     	;# 
  1146  0915                     	;# 
  1147  0916                     	;# 
  1148  0918                     	;# 
  1149  0919                     	;# 
  1150  091A                     	;# 
  1151  091B                     	;# 
  1152  091C                     	;# 
  1153  091D                     	;# 
  1154  091E                     	;# 
  1155  091F                     	;# 
  1156  0E0F                     	;# 
  1157  0E10                     	;# 
  1158  0E11                     	;# 
  1159  0E12                     	;# 
  1160  0E13                     	;# 
  1161  0E14                     	;# 
  1162  0E15                     	;# 
  1163  0E16                     	;# 
  1164  0E17                     	;# 
  1165  0E18                     	;# 
  1166  0E19                     	;# 
  1167  0E1A                     	;# 
  1168  0E1B                     	;# 
  1169  0E1C                     	;# 
  1170  0E1D                     	;# 
  1171  0E1E                     	;# 
  1172  0E1F                     	;# 
  1173  0E20                     	;# 
  1174  0E21                     	;# 
  1175  0E22                     	;# 
  1176  0E24                     	;# 
  1177  0E25                     	;# 
  1178  0E28                     	;# 
  1179  0E29                     	;# 
  1180  0E2A                     	;# 
  1181  0E2B                     	;# 
  1182  0E2C                     	;# 
  1183  0E2D                     	;# 
  1184  0E2E                     	;# 
  1185  0E2F                     	;# 
  1186  0E90                     	;# 
  1187  0E91                     	;# 
  1188  0E92                     	;# 
  1189  0E94                     	;# 
  1190  0E95                     	;# 
  1191  0E9C                     	;# 
  1192  0E9D                     	;# 
  1193  0E9E                     	;# 
  1194  0E9F                     	;# 
  1195  0EA0                     	;# 
  1196  0EA1                     	;# 
  1197  0EA2                     	;# 
  1198  0EA3                     	;# 
  1199  0EA4                     	;# 
  1200  0EA5                     	;# 
  1201  0EA6                     	;# 
  1202  0EA7                     	;# 
  1203  0F0F                     	;# 
  1204  0F10                     	;# 
  1205  0F11                     	;# 
  1206  0F12                     	;# 
  1207  0F13                     	;# 
  1208  0F14                     	;# 
  1209  0F15                     	;# 
  1210  0F16                     	;# 
  1211  0F17                     	;# 
  1212  0F18                     	;# 
  1213  0F19                     	;# 
  1214  0F1A                     	;# 
  1215  0F1B                     	;# 
  1216  0F1C                     	;# 
  1217  0F1D                     	;# 
  1218  0F1E                     	;# 
  1219  0F1F                     	;# 
  1220  0F20                     	;# 
  1221  0F21                     	;# 
  1222  0F22                     	;# 
  1223  0F23                     	;# 
  1224  0F24                     	;# 
  1225  0F25                     	;# 
  1226  0F26                     	;# 
  1227  0F27                     	;# 
  1228  0F28                     	;# 
  1229  0F29                     	;# 
  1230  0F2A                     	;# 
  1231  0F2B                     	;# 
  1232  0F2C                     	;# 
  1233  0F2D                     	;# 
  1234  0F2E                     	;# 
  1235  0F2F                     	;# 
  1236  0F30                     	;# 
  1237  0F31                     	;# 
  1238  0F32                     	;# 
  1239  0F33                     	;# 
  1240  0F34                     	;# 
  1241  0F35                     	;# 
  1242  0F36                     	;# 
  1243  0F37                     	;# 
  1244  0FE4                     	;# 
  1245  0FE5                     	;# 
  1246  0FE6                     	;# 
  1247  0FE7                     	;# 
  1248  0FE8                     	;# 
  1249  0FE9                     	;# 
  1250  0FEA                     	;# 
  1251  0FEB                     	;# 
  1252  0FED                     	;# 
  1253  0FEE                     	;# 
  1254  0FEF                     	;# 
  1255  0000                     	;# 
  1256  0001                     	;# 
  1257  0002                     	;# 
  1258  0003                     	;# 
  1259  0004                     	;# 
  1260  0005                     	;# 
  1261  0006                     	;# 
  1262  0007                     	;# 
  1263  0008                     	;# 
  1264  0009                     	;# 
  1265  000A                     	;# 
  1266  000B                     	;# 
  1267  000C                     	;# 
  1268  000D                     	;# 
  1269  000E                     	;# 
  1270  0010                     	;# 
  1271  0011                     	;# 
  1272  0012                     	;# 
  1273  0013                     	;# 
  1274  0014                     	;# 
  1275  0015                     	;# 
  1276  0015                     	;# 
  1277  0016                     	;# 
  1278  0016                     	;# 
  1279  0017                     	;# 
  1280  0018                     	;# 
  1281  0019                     	;# 
  1282  0019                     	;# 
  1283  001A                     	;# 
  1284  001B                     	;# 
  1285  001C                     	;# 
  1286  001D                     	;# 
  1287  001E                     	;# 
  1288  001F                     	;# 
  1289  008C                     	;# 
  1290  008D                     	;# 
  1291  008E                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0094                     	;# 
  1297  0097                     	;# 
  1298  009B                     	;# 
  1299  009B                     	;# 
  1300  009C                     	;# 
  1301  009D                     	;# 
  1302  009E                     	;# 
  1303  009F                     	;# 
  1304  010C                     	;# 
  1305  010D                     	;# 
  1306  010E                     	;# 
  1307  0111                     	;# 
  1308  0112                     	;# 
  1309  0113                     	;# 
  1310  0114                     	;# 
  1311  0115                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  0118                     	;# 
  1315  0119                     	;# 
  1316  018C                     	;# 
  1317  018D                     	;# 
  1318  018E                     	;# 
  1319  0197                     	;# 
  1320  0199                     	;# 
  1321  0199                     	;# 
  1322  0199                     	;# 
  1323  019A                     	;# 
  1324  019A                     	;# 
  1325  019A                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019C                     	;# 
  1332  019C                     	;# 
  1333  019C                     	;# 
  1334  019D                     	;# 
  1335  019D                     	;# 
  1336  019D                     	;# 
  1337  019E                     	;# 
  1338  019E                     	;# 
  1339  019E                     	;# 
  1340  019F                     	;# 
  1341  019F                     	;# 
  1342  019F                     	;# 
  1343  019F                     	;# 
  1344  019F                     	;# 
  1345  020C                     	;# 
  1346  020D                     	;# 
  1347  020E                     	;# 
  1348  0211                     	;# 
  1349  0211                     	;# 
  1350  0212                     	;# 
  1351  0212                     	;# 
  1352  0213                     	;# 
  1353  0213                     	;# 
  1354  0214                     	;# 
  1355  0214                     	;# 
  1356  0215                     	;# 
  1357  0215                     	;# 
  1358  0215                     	;# 
  1359  0215                     	;# 
  1360  0216                     	;# 
  1361  0216                     	;# 
  1362  0217                     	;# 
  1363  0217                     	;# 
  1364  0219                     	;# 
  1365  021A                     	;# 
  1366  021B                     	;# 
  1367  021C                     	;# 
  1368  021D                     	;# 
  1369  021D                     	;# 
  1370  021E                     	;# 
  1371  021F                     	;# 
  1372  028C                     	;# 
  1373  028D                     	;# 
  1374  028E                     	;# 
  1375  0291                     	;# 
  1376  0291                     	;# 
  1377  0292                     	;# 
  1378  0293                     	;# 
  1379  0294                     	;# 
  1380  0295                     	;# 
  1381  0295                     	;# 
  1382  0296                     	;# 
  1383  0297                     	;# 
  1384  0298                     	;# 
  1385  029F                     	;# 
  1386  030C                     	;# 
  1387  030D                     	;# 
  1388  030E                     	;# 
  1389  0311                     	;# 
  1390  0311                     	;# 
  1391  0312                     	;# 
  1392  0313                     	;# 
  1393  0314                     	;# 
  1394  0315                     	;# 
  1395  0315                     	;# 
  1396  0316                     	;# 
  1397  0317                     	;# 
  1398  0318                     	;# 
  1399  038C                     	;# 
  1400  038D                     	;# 
  1401  038E                     	;# 
  1402  0391                     	;# 
  1403  0392                     	;# 
  1404  0393                     	;# 
  1405  0394                     	;# 
  1406  0395                     	;# 
  1407  0396                     	;# 
  1408  0397                     	;# 
  1409  0398                     	;# 
  1410  0399                     	;# 
  1411  039A                     	;# 
  1412  039C                     	;# 
  1413  039D                     	;# 
  1414  039E                     	;# 
  1415  039F                     	;# 
  1416  0411                     	;# 
  1417  0411                     	;# 
  1418  0412                     	;# 
  1419  0413                     	;# 
  1420  0414                     	;# 
  1421  0415                     	;# 
  1422  0416                     	;# 
  1423  0417                     	;# 
  1424  0418                     	;# 
  1425  0418                     	;# 
  1426  0419                     	;# 
  1427  041A                     	;# 
  1428  041B                     	;# 
  1429  041C                     	;# 
  1430  041D                     	;# 
  1431  041E                     	;# 
  1432  041F                     	;# 
  1433  0498                     	;# 
  1434  0498                     	;# 
  1435  0499                     	;# 
  1436  049A                     	;# 
  1437  049B                     	;# 
  1438  049B                     	;# 
  1439  049C                     	;# 
  1440  049D                     	;# 
  1441  049E                     	;# 
  1442  049F                     	;# 
  1443  0617                     	;# 
  1444  0618                     	;# 
  1445  0619                     	;# 
  1446  0619                     	;# 
  1447  061A                     	;# 
  1448  061B                     	;# 
  1449  061C                     	;# 
  1450  061C                     	;# 
  1451  061F                     	;# 
  1452  0691                     	;# 
  1453  0692                     	;# 
  1454  0693                     	;# 
  1455  0694                     	;# 
  1456  0695                     	;# 
  1457  0696                     	;# 
  1458  0697                     	;# 
  1459  0698                     	;# 
  1460  0699                     	;# 
  1461  0711                     	;# 
  1462  0712                     	;# 
  1463  0713                     	;# 
  1464  0714                     	;# 
  1465  0715                     	;# 
  1466  0716                     	;# 
  1467  0717                     	;# 
  1468  0718                     	;# 
  1469  0719                     	;# 
  1470  0891                     	;# 
  1471  0891                     	;# 
  1472  0891                     	;# 
  1473  0891                     	;# 
  1474  0891                     	;# 
  1475  0891                     	;# 
  1476  0892                     	;# 
  1477  0892                     	;# 
  1478  0892                     	;# 
  1479  0893                     	;# 
  1480  0893                     	;# 
  1481  0893                     	;# 
  1482  0893                     	;# 
  1483  0893                     	;# 
  1484  0893                     	;# 
  1485  0894                     	;# 
  1486  0894                     	;# 
  1487  0894                     	;# 
  1488  0895                     	;# 
  1489  0895                     	;# 
  1490  0895                     	;# 
  1491  0896                     	;# 
  1492  0896                     	;# 
  1493  0896                     	;# 
  1494  089B                     	;# 
  1495  0911                     	;# 
  1496  0912                     	;# 
  1497  0913                     	;# 
  1498  0914                     	;# 
  1499  0915                     	;# 
  1500  0916                     	;# 
  1501  0918                     	;# 
  1502  0919                     	;# 
  1503  091A                     	;# 
  1504  091B                     	;# 
  1505  091C                     	;# 
  1506  091D                     	;# 
  1507  091E                     	;# 
  1508  091F                     	;# 
  1509  0E0F                     	;# 
  1510  0E10                     	;# 
  1511  0E11                     	;# 
  1512  0E12                     	;# 
  1513  0E13                     	;# 
  1514  0E14                     	;# 
  1515  0E15                     	;# 
  1516  0E16                     	;# 
  1517  0E17                     	;# 
  1518  0E18                     	;# 
  1519  0E19                     	;# 
  1520  0E1A                     	;# 
  1521  0E1B                     	;# 
  1522  0E1C                     	;# 
  1523  0E1D                     	;# 
  1524  0E1E                     	;# 
  1525  0E1F                     	;# 
  1526  0E20                     	;# 
  1527  0E21                     	;# 
  1528  0E22                     	;# 
  1529  0E24                     	;# 
  1530  0E25                     	;# 
  1531  0E28                     	;# 
  1532  0E29                     	;# 
  1533  0E2A                     	;# 
  1534  0E2B                     	;# 
  1535  0E2C                     	;# 
  1536  0E2D                     	;# 
  1537  0E2E                     	;# 
  1538  0E2F                     	;# 
  1539  0E90                     	;# 
  1540  0E91                     	;# 
  1541  0E92                     	;# 
  1542  0E94                     	;# 
  1543  0E95                     	;# 
  1544  0E9C                     	;# 
  1545  0E9D                     	;# 
  1546  0E9E                     	;# 
  1547  0E9F                     	;# 
  1548  0EA0                     	;# 
  1549  0EA1                     	;# 
  1550  0EA2                     	;# 
  1551  0EA3                     	;# 
  1552  0EA4                     	;# 
  1553  0EA5                     	;# 
  1554  0EA6                     	;# 
  1555  0EA7                     	;# 
  1556  0F0F                     	;# 
  1557  0F10                     	;# 
  1558  0F11                     	;# 
  1559  0F12                     	;# 
  1560  0F13                     	;# 
  1561  0F14                     	;# 
  1562  0F15                     	;# 
  1563  0F16                     	;# 
  1564  0F17                     	;# 
  1565  0F18                     	;# 
  1566  0F19                     	;# 
  1567  0F1A                     	;# 
  1568  0F1B                     	;# 
  1569  0F1C                     	;# 
  1570  0F1D                     	;# 
  1571  0F1E                     	;# 
  1572  0F1F                     	;# 
  1573  0F20                     	;# 
  1574  0F21                     	;# 
  1575  0F22                     	;# 
  1576  0F23                     	;# 
  1577  0F24                     	;# 
  1578  0F25                     	;# 
  1579  0F26                     	;# 
  1580  0F27                     	;# 
  1581  0F28                     	;# 
  1582  0F29                     	;# 
  1583  0F2A                     	;# 
  1584  0F2B                     	;# 
  1585  0F2C                     	;# 
  1586  0F2D                     	;# 
  1587  0F2E                     	;# 
  1588  0F2F                     	;# 
  1589  0F30                     	;# 
  1590  0F31                     	;# 
  1591  0F32                     	;# 
  1592  0F33                     	;# 
  1593  0F34                     	;# 
  1594  0F35                     	;# 
  1595  0F36                     	;# 
  1596  0F37                     	;# 
  1597  0FE4                     	;# 
  1598  0FE5                     	;# 
  1599  0FE6                     	;# 
  1600  0FE7                     	;# 
  1601  0FE8                     	;# 
  1602  0FE9                     	;# 
  1603  0FEA                     	;# 
  1604  0FEB                     	;# 
  1605  0FED                     	;# 
  1606  0FEE                     	;# 
  1607  0FEF                     	;# 
  1608  0000                     	;# 
  1609  0001                     	;# 
  1610  0002                     	;# 
  1611  0003                     	;# 
  1612  0004                     	;# 
  1613  0005                     	;# 
  1614  0006                     	;# 
  1615  0007                     	;# 
  1616  0008                     	;# 
  1617  0009                     	;# 
  1618  000A                     	;# 
  1619  000B                     	;# 
  1620  000C                     	;# 
  1621  000D                     	;# 
  1622  000E                     	;# 
  1623  0010                     	;# 
  1624  0011                     	;# 
  1625  0012                     	;# 
  1626  0013                     	;# 
  1627  0014                     	;# 
  1628  0015                     	;# 
  1629  0015                     	;# 
  1630  0016                     	;# 
  1631  0016                     	;# 
  1632  0017                     	;# 
  1633  0018                     	;# 
  1634  0019                     	;# 
  1635  0019                     	;# 
  1636  001A                     	;# 
  1637  001B                     	;# 
  1638  001C                     	;# 
  1639  001D                     	;# 
  1640  001E                     	;# 
  1641  001F                     	;# 
  1642  008C                     	;# 
  1643  008D                     	;# 
  1644  008E                     	;# 
  1645  0090                     	;# 
  1646  0091                     	;# 
  1647  0092                     	;# 
  1648  0093                     	;# 
  1649  0094                     	;# 
  1650  0097                     	;# 
  1651  009B                     	;# 
  1652  009B                     	;# 
  1653  009C                     	;# 
  1654  009D                     	;# 
  1655  009E                     	;# 
  1656  009F                     	;# 
  1657  010C                     	;# 
  1658  010D                     	;# 
  1659  010E                     	;# 
  1660  0111                     	;# 
  1661  0112                     	;# 
  1662  0113                     	;# 
  1663  0114                     	;# 
  1664  0115                     	;# 
  1665  0116                     	;# 
  1666  0117                     	;# 
  1667  0118                     	;# 
  1668  0119                     	;# 
  1669  018C                     	;# 
  1670  018D                     	;# 
  1671  018E                     	;# 
  1672  0197                     	;# 
  1673  0199                     	;# 
  1674  0199                     	;# 
  1675  0199                     	;# 
  1676  019A                     	;# 
  1677  019A                     	;# 
  1678  019A                     	;# 
  1679  019B                     	;# 
  1680  019B                     	;# 
  1681  019B                     	;# 
  1682  019B                     	;# 
  1683  019B                     	;# 
  1684  019C                     	;# 
  1685  019C                     	;# 
  1686  019C                     	;# 
  1687  019D                     	;# 
  1688  019D                     	;# 
  1689  019D                     	;# 
  1690  019E                     	;# 
  1691  019E                     	;# 
  1692  019E                     	;# 
  1693  019F                     	;# 
  1694  019F                     	;# 
  1695  019F                     	;# 
  1696  019F                     	;# 
  1697  019F                     	;# 
  1698  020C                     	;# 
  1699  020D                     	;# 
  1700  020E                     	;# 
  1701  0211                     	;# 
  1702  0211                     	;# 
  1703  0212                     	;# 
  1704  0212                     	;# 
  1705  0213                     	;# 
  1706  0213                     	;# 
  1707  0214                     	;# 
  1708  0214                     	;# 
  1709  0215                     	;# 
  1710  0215                     	;# 
  1711  0215                     	;# 
  1712  0215                     	;# 
  1713  0216                     	;# 
  1714  0216                     	;# 
  1715  0217                     	;# 
  1716  0217                     	;# 
  1717  0219                     	;# 
  1718  021A                     	;# 
  1719  021B                     	;# 
  1720  021C                     	;# 
  1721  021D                     	;# 
  1722  021D                     	;# 
  1723  021E                     	;# 
  1724  021F                     	;# 
  1725  028C                     	;# 
  1726  028D                     	;# 
  1727  028E                     	;# 
  1728  0291                     	;# 
  1729  0291                     	;# 
  1730  0292                     	;# 
  1731  0293                     	;# 
  1732  0294                     	;# 
  1733  0295                     	;# 
  1734  0295                     	;# 
  1735  0296                     	;# 
  1736  0297                     	;# 
  1737  0298                     	;# 
  1738  029F                     	;# 
  1739  030C                     	;# 
  1740  030D                     	;# 
  1741  030E                     	;# 
  1742  0311                     	;# 
  1743  0311                     	;# 
  1744  0312                     	;# 
  1745  0313                     	;# 
  1746  0314                     	;# 
  1747  0315                     	;# 
  1748  0315                     	;# 
  1749  0316                     	;# 
  1750  0317                     	;# 
  1751  0318                     	;# 
  1752  038C                     	;# 
  1753  038D                     	;# 
  1754  038E                     	;# 
  1755  0391                     	;# 
  1756  0392                     	;# 
  1757  0393                     	;# 
  1758  0394                     	;# 
  1759  0395                     	;# 
  1760  0396                     	;# 
  1761  0397                     	;# 
  1762  0398                     	;# 
  1763  0399                     	;# 
  1764  039A                     	;# 
  1765  039C                     	;# 
  1766  039D                     	;# 
  1767  039E                     	;# 
  1768  039F                     	;# 
  1769  0411                     	;# 
  1770  0411                     	;# 
  1771  0412                     	;# 
  1772  0413                     	;# 
  1773  0414                     	;# 
  1774  0415                     	;# 
  1775  0416                     	;# 
  1776  0417                     	;# 
  1777  0418                     	;# 
  1778  0418                     	;# 
  1779  0419                     	;# 
  1780  041A                     	;# 
  1781  041B                     	;# 
  1782  041C                     	;# 
  1783  041D                     	;# 
  1784  041E                     	;# 
  1785  041F                     	;# 
  1786  0498                     	;# 
  1787  0498                     	;# 
  1788  0499                     	;# 
  1789  049A                     	;# 
  1790  049B                     	;# 
  1791  049B                     	;# 
  1792  049C                     	;# 
  1793  049D                     	;# 
  1794  049E                     	;# 
  1795  049F                     	;# 
  1796  0617                     	;# 
  1797  0618                     	;# 
  1798  0619                     	;# 
  1799  0619                     	;# 
  1800  061A                     	;# 
  1801  061B                     	;# 
  1802  061C                     	;# 
  1803  061C                     	;# 
  1804  061F                     	;# 
  1805  0691                     	;# 
  1806  0692                     	;# 
  1807  0693                     	;# 
  1808  0694                     	;# 
  1809  0695                     	;# 
  1810  0696                     	;# 
  1811  0697                     	;# 
  1812  0698                     	;# 
  1813  0699                     	;# 
  1814  0711                     	;# 
  1815  0712                     	;# 
  1816  0713                     	;# 
  1817  0714                     	;# 
  1818  0715                     	;# 
  1819  0716                     	;# 
  1820  0717                     	;# 
  1821  0718                     	;# 
  1822  0719                     	;# 
  1823  0891                     	;# 
  1824  0891                     	;# 
  1825  0891                     	;# 
  1826  0891                     	;# 
  1827  0891                     	;# 
  1828  0891                     	;# 
  1829  0892                     	;# 
  1830  0892                     	;# 
  1831  0892                     	;# 
  1832  0893                     	;# 
  1833  0893                     	;# 
  1834  0893                     	;# 
  1835  0893                     	;# 
  1836  0893                     	;# 
  1837  0893                     	;# 
  1838  0894                     	;# 
  1839  0894                     	;# 
  1840  0894                     	;# 
  1841  0895                     	;# 
  1842  0895                     	;# 
  1843  0895                     	;# 
  1844  0896                     	;# 
  1845  0896                     	;# 
  1846  0896                     	;# 
  1847  089B                     	;# 
  1848  0911                     	;# 
  1849  0912                     	;# 
  1850  0913                     	;# 
  1851  0914                     	;# 
  1852  0915                     	;# 
  1853  0916                     	;# 
  1854  0918                     	;# 
  1855  0919                     	;# 
  1856  091A                     	;# 
  1857  091B                     	;# 
  1858  091C                     	;# 
  1859  091D                     	;# 
  1860  091E                     	;# 
  1861  091F                     	;# 
  1862  0E0F                     	;# 
  1863  0E10                     	;# 
  1864  0E11                     	;# 
  1865  0E12                     	;# 
  1866  0E13                     	;# 
  1867  0E14                     	;# 
  1868  0E15                     	;# 
  1869  0E16                     	;# 
  1870  0E17                     	;# 
  1871  0E18                     	;# 
  1872  0E19                     	;# 
  1873  0E1A                     	;# 
  1874  0E1B                     	;# 
  1875  0E1C                     	;# 
  1876  0E1D                     	;# 
  1877  0E1E                     	;# 
  1878  0E1F                     	;# 
  1879  0E20                     	;# 
  1880  0E21                     	;# 
  1881  0E22                     	;# 
  1882  0E24                     	;# 
  1883  0E25                     	;# 
  1884  0E28                     	;# 
  1885  0E29                     	;# 
  1886  0E2A                     	;# 
  1887  0E2B                     	;# 
  1888  0E2C                     	;# 
  1889  0E2D                     	;# 
  1890  0E2E                     	;# 
  1891  0E2F                     	;# 
  1892  0E90                     	;# 
  1893  0E91                     	;# 
  1894  0E92                     	;# 
  1895  0E94                     	;# 
  1896  0E95                     	;# 
  1897  0E9C                     	;# 
  1898  0E9D                     	;# 
  1899  0E9E                     	;# 
  1900  0E9F                     	;# 
  1901  0EA0                     	;# 
  1902  0EA1                     	;# 
  1903  0EA2                     	;# 
  1904  0EA3                     	;# 
  1905  0EA4                     	;# 
  1906  0EA5                     	;# 
  1907  0EA6                     	;# 
  1908  0EA7                     	;# 
  1909  0F0F                     	;# 
  1910  0F10                     	;# 
  1911  0F11                     	;# 
  1912  0F12                     	;# 
  1913  0F13                     	;# 
  1914  0F14                     	;# 
  1915  0F15                     	;# 
  1916  0F16                     	;# 
  1917  0F17                     	;# 
  1918  0F18                     	;# 
  1919  0F19                     	;# 
  1920  0F1A                     	;# 
  1921  0F1B                     	;# 
  1922  0F1C                     	;# 
  1923  0F1D                     	;# 
  1924  0F1E                     	;# 
  1925  0F1F                     	;# 
  1926  0F20                     	;# 
  1927  0F21                     	;# 
  1928  0F22                     	;# 
  1929  0F23                     	;# 
  1930  0F24                     	;# 
  1931  0F25                     	;# 
  1932  0F26                     	;# 
  1933  0F27                     	;# 
  1934  0F28                     	;# 
  1935  0F29                     	;# 
  1936  0F2A                     	;# 
  1937  0F2B                     	;# 
  1938  0F2C                     	;# 
  1939  0F2D                     	;# 
  1940  0F2E                     	;# 
  1941  0F2F                     	;# 
  1942  0F30                     	;# 
  1943  0F31                     	;# 
  1944  0F32                     	;# 
  1945  0F33                     	;# 
  1946  0F34                     	;# 
  1947  0F35                     	;# 
  1948  0F36                     	;# 
  1949  0F37                     	;# 
  1950  0FE4                     	;# 
  1951  0FE5                     	;# 
  1952  0FE6                     	;# 
  1953  0FE7                     	;# 
  1954  0FE8                     	;# 
  1955  0FE9                     	;# 
  1956  0FEA                     	;# 
  1957  0FEB                     	;# 
  1958  0FED                     	;# 
  1959  0FEE                     	;# 
  1960  0FEF                     	;# 
  1961  0000                     	;# 
  1962  0001                     	;# 
  1963  0002                     	;# 
  1964  0003                     	;# 
  1965  0004                     	;# 
  1966  0005                     	;# 
  1967  0006                     	;# 
  1968  0007                     	;# 
  1969  0008                     	;# 
  1970  0009                     	;# 
  1971  000A                     	;# 
  1972  000B                     	;# 
  1973  000C                     	;# 
  1974  000D                     	;# 
  1975  000E                     	;# 
  1976  0010                     	;# 
  1977  0011                     	;# 
  1978  0012                     	;# 
  1979  0013                     	;# 
  1980  0014                     	;# 
  1981  0015                     	;# 
  1982  0015                     	;# 
  1983  0016                     	;# 
  1984  0016                     	;# 
  1985  0017                     	;# 
  1986  0018                     	;# 
  1987  0019                     	;# 
  1988  0019                     	;# 
  1989  001A                     	;# 
  1990  001B                     	;# 
  1991  001C                     	;# 
  1992  001D                     	;# 
  1993  001E                     	;# 
  1994  001F                     	;# 
  1995  008C                     	;# 
  1996  008D                     	;# 
  1997  008E                     	;# 
  1998  0090                     	;# 
  1999  0091                     	;# 
  2000  0092                     	;# 
  2001  0093                     	;# 
  2002  0094                     	;# 
  2003  0097                     	;# 
  2004  009B                     	;# 
  2005  009B                     	;# 
  2006  009C                     	;# 
  2007  009D                     	;# 
  2008  009E                     	;# 
  2009  009F                     	;# 
  2010  010C                     	;# 
  2011  010D                     	;# 
  2012  010E                     	;# 
  2013  0111                     	;# 
  2014  0112                     	;# 
  2015  0113                     	;# 
  2016  0114                     	;# 
  2017  0115                     	;# 
  2018  0116                     	;# 
  2019  0117                     	;# 
  2020  0118                     	;# 
  2021  0119                     	;# 
  2022  018C                     	;# 
  2023  018D                     	;# 
  2024  018E                     	;# 
  2025  0197                     	;# 
  2026  0199                     	;# 
  2027  0199                     	;# 
  2028  0199                     	;# 
  2029  019A                     	;# 
  2030  019A                     	;# 
  2031  019A                     	;# 
  2032  019B                     	;# 
  2033  019B                     	;# 
  2034  019B                     	;# 
  2035  019B                     	;# 
  2036  019B                     	;# 
  2037  019C                     	;# 
  2038  019C                     	;# 
  2039  019C                     	;# 
  2040  019D                     	;# 
  2041  019D                     	;# 
  2042  019D                     	;# 
  2043  019E                     	;# 
  2044  019E                     	;# 
  2045  019E                     	;# 
  2046  019F                     	;# 
  2047  019F                     	;# 
  2048  019F                     	;# 
  2049  019F                     	;# 
  2050  019F                     	;# 
  2051  020C                     	;# 
  2052  020D                     	;# 
  2053  020E                     	;# 
  2054  0211                     	;# 
  2055  0211                     	;# 
  2056  0212                     	;# 
  2057  0212                     	;# 
  2058  0213                     	;# 
  2059  0213                     	;# 
  2060  0214                     	;# 
  2061  0214                     	;# 
  2062  0215                     	;# 
  2063  0215                     	;# 
  2064  0215                     	;# 
  2065  0215                     	;# 
  2066  0216                     	;# 
  2067  0216                     	;# 
  2068  0217                     	;# 
  2069  0217                     	;# 
  2070  0219                     	;# 
  2071  021A                     	;# 
  2072  021B                     	;# 
  2073  021C                     	;# 
  2074  021D                     	;# 
  2075  021D                     	;# 
  2076  021E                     	;# 
  2077  021F                     	;# 
  2078  028C                     	;# 
  2079  028D                     	;# 
  2080  028E                     	;# 
  2081  0291                     	;# 
  2082  0291                     	;# 
  2083  0292                     	;# 
  2084  0293                     	;# 
  2085  0294                     	;# 
  2086  0295                     	;# 
  2087  0295                     	;# 
  2088  0296                     	;# 
  2089  0297                     	;# 
  2090  0298                     	;# 
  2091  029F                     	;# 
  2092  030C                     	;# 
  2093  030D                     	;# 
  2094  030E                     	;# 
  2095  0311                     	;# 
  2096  0311                     	;# 
  2097  0312                     	;# 
  2098  0313                     	;# 
  2099  0314                     	;# 
  2100  0315                     	;# 
  2101  0315                     	;# 
  2102  0316                     	;# 
  2103  0317                     	;# 
  2104  0318                     	;# 
  2105  038C                     	;# 
  2106  038D                     	;# 
  2107  038E                     	;# 
  2108  0391                     	;# 
  2109  0392                     	;# 
  2110  0393                     	;# 
  2111  0394                     	;# 
  2112  0395                     	;# 
  2113  0396                     	;# 
  2114  0397                     	;# 
  2115  0398                     	;# 
  2116  0399                     	;# 
  2117  039A                     	;# 
  2118  039C                     	;# 
  2119  039D                     	;# 
  2120  039E                     	;# 
  2121  039F                     	;# 
  2122  0411                     	;# 
  2123  0411                     	;# 
  2124  0412                     	;# 
  2125  0413                     	;# 
  2126  0414                     	;# 
  2127  0415                     	;# 
  2128  0416                     	;# 
  2129  0417                     	;# 
  2130  0418                     	;# 
  2131  0418                     	;# 
  2132  0419                     	;# 
  2133  041A                     	;# 
  2134  041B                     	;# 
  2135  041C                     	;# 
  2136  041D                     	;# 
  2137  041E                     	;# 
  2138  041F                     	;# 
  2139  0498                     	;# 
  2140  0498                     	;# 
  2141  0499                     	;# 
  2142  049A                     	;# 
  2143  049B                     	;# 
  2144  049B                     	;# 
  2145  049C                     	;# 
  2146  049D                     	;# 
  2147  049E                     	;# 
  2148  049F                     	;# 
  2149  0617                     	;# 
  2150  0618                     	;# 
  2151  0619                     	;# 
  2152  0619                     	;# 
  2153  061A                     	;# 
  2154  061B                     	;# 
  2155  061C                     	;# 
  2156  061C                     	;# 
  2157  061F                     	;# 
  2158  0691                     	;# 
  2159  0692                     	;# 
  2160  0693                     	;# 
  2161  0694                     	;# 
  2162  0695                     	;# 
  2163  0696                     	;# 
  2164  0697                     	;# 
  2165  0698                     	;# 
  2166  0699                     	;# 
  2167  0711                     	;# 
  2168  0712                     	;# 
  2169  0713                     	;# 
  2170  0714                     	;# 
  2171  0715                     	;# 
  2172  0716                     	;# 
  2173  0717                     	;# 
  2174  0718                     	;# 
  2175  0719                     	;# 
  2176  0891                     	;# 
  2177  0891                     	;# 
  2178  0891                     	;# 
  2179  0891                     	;# 
  2180  0891                     	;# 
  2181  0891                     	;# 
  2182  0892                     	;# 
  2183  0892                     	;# 
  2184  0892                     	;# 
  2185  0893                     	;# 
  2186  0893                     	;# 
  2187  0893                     	;# 
  2188  0893                     	;# 
  2189  0893                     	;# 
  2190  0893                     	;# 
  2191  0894                     	;# 
  2192  0894                     	;# 
  2193  0894                     	;# 
  2194  0895                     	;# 
  2195  0895                     	;# 
  2196  0895                     	;# 
  2197  0896                     	;# 
  2198  0896                     	;# 
  2199  0896                     	;# 
  2200  089B                     	;# 
  2201  0911                     	;# 
  2202  0912                     	;# 
  2203  0913                     	;# 
  2204  0914                     	;# 
  2205  0915                     	;# 
  2206  0916                     	;# 
  2207  0918                     	;# 
  2208  0919                     	;# 
  2209  091A                     	;# 
  2210  091B                     	;# 
  2211  091C                     	;# 
  2212  091D                     	;# 
  2213  091E                     	;# 
  2214  091F                     	;# 
  2215  0E0F                     	;# 
  2216  0E10                     	;# 
  2217  0E11                     	;# 
  2218  0E12                     	;# 
  2219  0E13                     	;# 
  2220  0E14                     	;# 
  2221  0E15                     	;# 
  2222  0E16                     	;# 
  2223  0E17                     	;# 
  2224  0E18                     	;# 
  2225  0E19                     	;# 
  2226  0E1A                     	;# 
  2227  0E1B                     	;# 
  2228  0E1C                     	;# 
  2229  0E1D                     	;# 
  2230  0E1E                     	;# 
  2231  0E1F                     	;# 
  2232  0E20                     	;# 
  2233  0E21                     	;# 
  2234  0E22                     	;# 
  2235  0E24                     	;# 
  2236  0E25                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2A                     	;# 
  2240  0E2B                     	;# 
  2241  0E2C                     	;# 
  2242  0E2D                     	;# 
  2243  0E2E                     	;# 
  2244  0E2F                     	;# 
  2245  0E90                     	;# 
  2246  0E91                     	;# 
  2247  0E92                     	;# 
  2248  0E94                     	;# 
  2249  0E95                     	;# 
  2250  0E9C                     	;# 
  2251  0E9D                     	;# 
  2252  0E9E                     	;# 
  2253  0E9F                     	;# 
  2254  0EA0                     	;# 
  2255  0EA1                     	;# 
  2256  0EA2                     	;# 
  2257  0EA3                     	;# 
  2258  0EA4                     	;# 
  2259  0EA5                     	;# 
  2260  0EA6                     	;# 
  2261  0EA7                     	;# 
  2262  0F0F                     	;# 
  2263  0F10                     	;# 
  2264  0F11                     	;# 
  2265  0F12                     	;# 
  2266  0F13                     	;# 
  2267  0F14                     	;# 
  2268  0F15                     	;# 
  2269  0F16                     	;# 
  2270  0F17                     	;# 
  2271  0F18                     	;# 
  2272  0F19                     	;# 
  2273  0F1A                     	;# 
  2274  0F1B                     	;# 
  2275  0F1C                     	;# 
  2276  0F1D                     	;# 
  2277  0F1E                     	;# 
  2278  0F1F                     	;# 
  2279  0F20                     	;# 
  2280  0F21                     	;# 
  2281  0F22                     	;# 
  2282  0F23                     	;# 
  2283  0F24                     	;# 
  2284  0F25                     	;# 
  2285  0F26                     	;# 
  2286  0F27                     	;# 
  2287  0F28                     	;# 
  2288  0F29                     	;# 
  2289  0F2A                     	;# 
  2290  0F2B                     	;# 
  2291  0F2C                     	;# 
  2292  0F2D                     	;# 
  2293  0F2E                     	;# 
  2294  0F2F                     	;# 
  2295  0F30                     	;# 
  2296  0F31                     	;# 
  2297  0F32                     	;# 
  2298  0F33                     	;# 
  2299  0F34                     	;# 
  2300  0F35                     	;# 
  2301  0F36                     	;# 
  2302  0F37                     	;# 
  2303  0FE4                     	;# 
  2304  0FE5                     	;# 
  2305  0FE6                     	;# 
  2306  0FE7                     	;# 
  2307  0FE8                     	;# 
  2308  0FE9                     	;# 
  2309  0FEA                     	;# 
  2310  0FEB                     	;# 
  2311  0FED                     	;# 
  2312  0FEE                     	;# 
  2313  0FEF                     	;# 
  2314  0000                     	;# 
  2315  0001                     	;# 
  2316  0002                     	;# 
  2317  0003                     	;# 
  2318  0004                     	;# 
  2319  0005                     	;# 
  2320  0006                     	;# 
  2321  0007                     	;# 
  2322  0008                     	;# 
  2323  0009                     	;# 
  2324  000A                     	;# 
  2325  000B                     	;# 
  2326  000C                     	;# 
  2327  000D                     	;# 
  2328  000E                     	;# 
  2329  0010                     	;# 
  2330  0011                     	;# 
  2331  0012                     	;# 
  2332  0013                     	;# 
  2333  0014                     	;# 
  2334  0015                     	;# 
  2335  0015                     	;# 
  2336  0016                     	;# 
  2337  0016                     	;# 
  2338  0017                     	;# 
  2339  0018                     	;# 
  2340  0019                     	;# 
  2341  0019                     	;# 
  2342  001A                     	;# 
  2343  001B                     	;# 
  2344  001C                     	;# 
  2345  001D                     	;# 
  2346  001E                     	;# 
  2347  001F                     	;# 
  2348  008C                     	;# 
  2349  008D                     	;# 
  2350  008E                     	;# 
  2351  0090                     	;# 
  2352  0091                     	;# 
  2353  0092                     	;# 
  2354  0093                     	;# 
  2355  0094                     	;# 
  2356  0097                     	;# 
  2357  009B                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  009F                     	;# 
  2363  010C                     	;# 
  2364  010D                     	;# 
  2365  010E                     	;# 
  2366  0111                     	;# 
  2367  0112                     	;# 
  2368  0113                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0117                     	;# 
  2373  0118                     	;# 
  2374  0119                     	;# 
  2375  018C                     	;# 
  2376  018D                     	;# 
  2377  018E                     	;# 
  2378  0197                     	;# 
  2379  0199                     	;# 
  2380  0199                     	;# 
  2381  0199                     	;# 
  2382  019A                     	;# 
  2383  019A                     	;# 
  2384  019A                     	;# 
  2385  019B                     	;# 
  2386  019B                     	;# 
  2387  019B                     	;# 
  2388  019B                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  019C                     	;# 
  2392  019C                     	;# 
  2393  019D                     	;# 
  2394  019D                     	;# 
  2395  019D                     	;# 
  2396  019E                     	;# 
  2397  019E                     	;# 
  2398  019E                     	;# 
  2399  019F                     	;# 
  2400  019F                     	;# 
  2401  019F                     	;# 
  2402  019F                     	;# 
  2403  019F                     	;# 
  2404  020C                     	;# 
  2405  020D                     	;# 
  2406  020E                     	;# 
  2407  0211                     	;# 
  2408  0211                     	;# 
  2409  0212                     	;# 
  2410  0212                     	;# 
  2411  0213                     	;# 
  2412  0213                     	;# 
  2413  0214                     	;# 
  2414  0214                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0215                     	;# 
  2418  0215                     	;# 
  2419  0216                     	;# 
  2420  0216                     	;# 
  2421  0217                     	;# 
  2422  0217                     	;# 
  2423  0219                     	;# 
  2424  021A                     	;# 
  2425  021B                     	;# 
  2426  021C                     	;# 
  2427  021D                     	;# 
  2428  021D                     	;# 
  2429  021E                     	;# 
  2430  021F                     	;# 
  2431  028C                     	;# 
  2432  028D                     	;# 
  2433  028E                     	;# 
  2434  0291                     	;# 
  2435  0291                     	;# 
  2436  0292                     	;# 
  2437  0293                     	;# 
  2438  0294                     	;# 
  2439  0295                     	;# 
  2440  0295                     	;# 
  2441  0296                     	;# 
  2442  0297                     	;# 
  2443  0298                     	;# 
  2444  029F                     	;# 
  2445  030C                     	;# 
  2446  030D                     	;# 
  2447  030E                     	;# 
  2448  0311                     	;# 
  2449  0311                     	;# 
  2450  0312                     	;# 
  2451  0313                     	;# 
  2452  0314                     	;# 
  2453  0315                     	;# 
  2454  0315                     	;# 
  2455  0316                     	;# 
  2456  0317                     	;# 
  2457  0318                     	;# 
  2458  038C                     	;# 
  2459  038D                     	;# 
  2460  038E                     	;# 
  2461  0391                     	;# 
  2462  0392                     	;# 
  2463  0393                     	;# 
  2464  0394                     	;# 
  2465  0395                     	;# 
  2466  0396                     	;# 
  2467  0397                     	;# 
  2468  0398                     	;# 
  2469  0399                     	;# 
  2470  039A                     	;# 
  2471  039C                     	;# 
  2472  039D                     	;# 
  2473  039E                     	;# 
  2474  039F                     	;# 
  2475  0411                     	;# 
  2476  0411                     	;# 
  2477  0412                     	;# 
  2478  0413                     	;# 
  2479  0414                     	;# 
  2480  0415                     	;# 
  2481  0416                     	;# 
  2482  0417                     	;# 
  2483  0418                     	;# 
  2484  0418                     	;# 
  2485  0419                     	;# 
  2486  041A                     	;# 
  2487  041B                     	;# 
  2488  041C                     	;# 
  2489  041D                     	;# 
  2490  041E                     	;# 
  2491  041F                     	;# 
  2492  0498                     	;# 
  2493  0498                     	;# 
  2494  0499                     	;# 
  2495  049A                     	;# 
  2496  049B                     	;# 
  2497  049B                     	;# 
  2498  049C                     	;# 
  2499  049D                     	;# 
  2500  049E                     	;# 
  2501  049F                     	;# 
  2502  0617                     	;# 
  2503  0618                     	;# 
  2504  0619                     	;# 
  2505  0619                     	;# 
  2506  061A                     	;# 
  2507  061B                     	;# 
  2508  061C                     	;# 
  2509  061C                     	;# 
  2510  061F                     	;# 
  2511  0691                     	;# 
  2512  0692                     	;# 
  2513  0693                     	;# 
  2514  0694                     	;# 
  2515  0695                     	;# 
  2516  0696                     	;# 
  2517  0697                     	;# 
  2518  0698                     	;# 
  2519  0699                     	;# 
  2520  0711                     	;# 
  2521  0712                     	;# 
  2522  0713                     	;# 
  2523  0714                     	;# 
  2524  0715                     	;# 
  2525  0716                     	;# 
  2526  0717                     	;# 
  2527  0718                     	;# 
  2528  0719                     	;# 
  2529  0891                     	;# 
  2530  0891                     	;# 
  2531  0891                     	;# 
  2532  0891                     	;# 
  2533  0891                     	;# 
  2534  0891                     	;# 
  2535  0892                     	;# 
  2536  0892                     	;# 
  2537  0892                     	;# 
  2538  0893                     	;# 
  2539  0893                     	;# 
  2540  0893                     	;# 
  2541  0893                     	;# 
  2542  0893                     	;# 
  2543  0893                     	;# 
  2544  0894                     	;# 
  2545  0894                     	;# 
  2546  0894                     	;# 
  2547  0895                     	;# 
  2548  0895                     	;# 
  2549  0895                     	;# 
  2550  0896                     	;# 
  2551  0896                     	;# 
  2552  0896                     	;# 
  2553  089B                     	;# 
  2554  0911                     	;# 
  2555  0912                     	;# 
  2556  0913                     	;# 
  2557  0914                     	;# 
  2558  0915                     	;# 
  2559  0916                     	;# 
  2560  0918                     	;# 
  2561  0919                     	;# 
  2562  091A                     	;# 
  2563  091B                     	;# 
  2564  091C                     	;# 
  2565  091D                     	;# 
  2566  091E                     	;# 
  2567  091F                     	;# 
  2568  0E0F                     	;# 
  2569  0E10                     	;# 
  2570  0E11                     	;# 
  2571  0E12                     	;# 
  2572  0E13                     	;# 
  2573  0E14                     	;# 
  2574  0E15                     	;# 
  2575  0E16                     	;# 
  2576  0E17                     	;# 
  2577  0E18                     	;# 
  2578  0E19                     	;# 
  2579  0E1A                     	;# 
  2580  0E1B                     	;# 
  2581  0E1C                     	;# 
  2582  0E1D                     	;# 
  2583  0E1E                     	;# 
  2584  0E1F                     	;# 
  2585  0E20                     	;# 
  2586  0E21                     	;# 
  2587  0E22                     	;# 
  2588  0E24                     	;# 
  2589  0E25                     	;# 
  2590  0E28                     	;# 
  2591  0E29                     	;# 
  2592  0E2A                     	;# 
  2593  0E2B                     	;# 
  2594  0E2C                     	;# 
  2595  0E2D                     	;# 
  2596  0E2E                     	;# 
  2597  0E2F                     	;# 
  2598  0E90                     	;# 
  2599  0E91                     	;# 
  2600  0E92                     	;# 
  2601  0E94                     	;# 
  2602  0E95                     	;# 
  2603  0E9C                     	;# 
  2604  0E9D                     	;# 
  2605  0E9E                     	;# 
  2606  0E9F                     	;# 
  2607  0EA0                     	;# 
  2608  0EA1                     	;# 
  2609  0EA2                     	;# 
  2610  0EA3                     	;# 
  2611  0EA4                     	;# 
  2612  0EA5                     	;# 
  2613  0EA6                     	;# 
  2614  0EA7                     	;# 
  2615  0F0F                     	;# 
  2616  0F10                     	;# 
  2617  0F11                     	;# 
  2618  0F12                     	;# 
  2619  0F13                     	;# 
  2620  0F14                     	;# 
  2621  0F15                     	;# 
  2622  0F16                     	;# 
  2623  0F17                     	;# 
  2624  0F18                     	;# 
  2625  0F19                     	;# 
  2626  0F1A                     	;# 
  2627  0F1B                     	;# 
  2628  0F1C                     	;# 
  2629  0F1D                     	;# 
  2630  0F1E                     	;# 
  2631  0F1F                     	;# 
  2632  0F20                     	;# 
  2633  0F21                     	;# 
  2634  0F22                     	;# 
  2635  0F23                     	;# 
  2636  0F24                     	;# 
  2637  0F25                     	;# 
  2638  0F26                     	;# 
  2639  0F27                     	;# 
  2640  0F28                     	;# 
  2641  0F29                     	;# 
  2642  0F2A                     	;# 
  2643  0F2B                     	;# 
  2644  0F2C                     	;# 
  2645  0F2D                     	;# 
  2646  0F2E                     	;# 
  2647  0F2F                     	;# 
  2648  0F30                     	;# 
  2649  0F31                     	;# 
  2650  0F32                     	;# 
  2651  0F33                     	;# 
  2652  0F34                     	;# 
  2653  0F35                     	;# 
  2654  0F36                     	;# 
  2655  0F37                     	;# 
  2656  0FE4                     	;# 
  2657  0FE5                     	;# 
  2658  0FE6                     	;# 
  2659  0FE7                     	;# 
  2660  0FE8                     	;# 
  2661  0FE9                     	;# 
  2662  0FEA                     	;# 
  2663  0FEB                     	;# 
  2664  0FED                     	;# 
  2665  0FEE                     	;# 
  2666  0FEF                     	;# 
  2667  0000                     	;# 
  2668  0001                     	;# 
  2669  0002                     	;# 
  2670  0003                     	;# 
  2671  0004                     	;# 
  2672  0005                     	;# 
  2673  0006                     	;# 
  2674  0007                     	;# 
  2675  0008                     	;# 
  2676  0009                     	;# 
  2677  000A                     	;# 
  2678  000B                     	;# 
  2679  000C                     	;# 
  2680  000D                     	;# 
  2681  000E                     	;# 
  2682  0010                     	;# 
  2683  0011                     	;# 
  2684  0012                     	;# 
  2685  0013                     	;# 
  2686  0014                     	;# 
  2687  0015                     	;# 
  2688  0015                     	;# 
  2689  0016                     	;# 
  2690  0016                     	;# 
  2691  0017                     	;# 
  2692  0018                     	;# 
  2693  0019                     	;# 
  2694  0019                     	;# 
  2695  001A                     	;# 
  2696  001B                     	;# 
  2697  001C                     	;# 
  2698  001D                     	;# 
  2699  001E                     	;# 
  2700  001F                     	;# 
  2701  008C                     	;# 
  2702  008D                     	;# 
  2703  008E                     	;# 
  2704  0090                     	;# 
  2705  0091                     	;# 
  2706  0092                     	;# 
  2707  0093                     	;# 
  2708  0094                     	;# 
  2709  0097                     	;# 
  2710  009B                     	;# 
  2711  009B                     	;# 
  2712  009C                     	;# 
  2713  009D                     	;# 
  2714  009E                     	;# 
  2715  009F                     	;# 
  2716  010C                     	;# 
  2717  010D                     	;# 
  2718  010E                     	;# 
  2719  0111                     	;# 
  2720  0112                     	;# 
  2721  0113                     	;# 
  2722  0114                     	;# 
  2723  0115                     	;# 
  2724  0116                     	;# 
  2725  0117                     	;# 
  2726  0118                     	;# 
  2727  0119                     	;# 
  2728  018C                     	;# 
  2729  018D                     	;# 
  2730  018E                     	;# 
  2731  0197                     	;# 
  2732  0199                     	;# 
  2733  0199                     	;# 
  2734  0199                     	;# 
  2735  019A                     	;# 
  2736  019A                     	;# 
  2737  019A                     	;# 
  2738  019B                     	;# 
  2739  019B                     	;# 
  2740  019B                     	;# 
  2741  019B                     	;# 
  2742  019B                     	;# 
  2743  019C                     	;# 
  2744  019C                     	;# 
  2745  019C                     	;# 
  2746  019D                     	;# 
  2747  019D                     	;# 
  2748  019D                     	;# 
  2749  019E                     	;# 
  2750  019E                     	;# 
  2751  019E                     	;# 
  2752  019F                     	;# 
  2753  019F                     	;# 
  2754  019F                     	;# 
  2755  019F                     	;# 
  2756  019F                     	;# 
  2757  020C                     	;# 
  2758  020D                     	;# 
  2759  020E                     	;# 
  2760  0211                     	;# 
  2761  0211                     	;# 
  2762  0212                     	;# 
  2763  0212                     	;# 
  2764  0213                     	;# 
  2765  0213                     	;# 
  2766  0214                     	;# 
  2767  0214                     	;# 
  2768  0215                     	;# 
  2769  0215                     	;# 
  2770  0215                     	;# 
  2771  0215                     	;# 
  2772  0216                     	;# 
  2773  0216                     	;# 
  2774  0217                     	;# 
  2775  0217                     	;# 
  2776  0219                     	;# 
  2777  021A                     	;# 
  2778  021B                     	;# 
  2779  021C                     	;# 
  2780  021D                     	;# 
  2781  021D                     	;# 
  2782  021E                     	;# 
  2783  021F                     	;# 
  2784  028C                     	;# 
  2785  028D                     	;# 
  2786  028E                     	;# 
  2787  0291                     	;# 
  2788  0291                     	;# 
  2789  0292                     	;# 
  2790  0293                     	;# 
  2791  0294                     	;# 
  2792  0295                     	;# 
  2793  0295                     	;# 
  2794  0296                     	;# 
  2795  0297                     	;# 
  2796  0298                     	;# 
  2797  029F                     	;# 
  2798  030C                     	;# 
  2799  030D                     	;# 
  2800  030E                     	;# 
  2801  0311                     	;# 
  2802  0311                     	;# 
  2803  0312                     	;# 
  2804  0313                     	;# 
  2805  0314                     	;# 
  2806  0315                     	;# 
  2807  0315                     	;# 
  2808  0316                     	;# 
  2809  0317                     	;# 
  2810  0318                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0391                     	;# 
  2815  0392                     	;# 
  2816  0393                     	;# 
  2817  0394                     	;# 
  2818  0395                     	;# 
  2819  0396                     	;# 
  2820  0397                     	;# 
  2821  0398                     	;# 
  2822  0399                     	;# 
  2823  039A                     	;# 
  2824  039C                     	;# 
  2825  039D                     	;# 
  2826  039E                     	;# 
  2827  039F                     	;# 
  2828  0411                     	;# 
  2829  0411                     	;# 
  2830  0412                     	;# 
  2831  0413                     	;# 
  2832  0414                     	;# 
  2833  0415                     	;# 
  2834  0416                     	;# 
  2835  0417                     	;# 
  2836  0418                     	;# 
  2837  0418                     	;# 
  2838  0419                     	;# 
  2839  041A                     	;# 
  2840  041B                     	;# 
  2841  041C                     	;# 
  2842  041D                     	;# 
  2843  041E                     	;# 
  2844  041F                     	;# 
  2845  0498                     	;# 
  2846  0498                     	;# 
  2847  0499                     	;# 
  2848  049A                     	;# 
  2849  049B                     	;# 
  2850  049B                     	;# 
  2851  049C                     	;# 
  2852  049D                     	;# 
  2853  049E                     	;# 
  2854  049F                     	;# 
  2855  0617                     	;# 
  2856  0618                     	;# 
  2857  0619                     	;# 
  2858  0619                     	;# 
  2859  061A                     	;# 
  2860  061B                     	;# 
  2861  061C                     	;# 
  2862  061C                     	;# 
  2863  061F                     	;# 
  2864  0691                     	;# 
  2865  0692                     	;# 
  2866  0693                     	;# 
  2867  0694                     	;# 
  2868  0695                     	;# 
  2869  0696                     	;# 
  2870  0697                     	;# 
  2871  0698                     	;# 
  2872  0699                     	;# 
  2873  0711                     	;# 
  2874  0712                     	;# 
  2875  0713                     	;# 
  2876  0714                     	;# 
  2877  0715                     	;# 
  2878  0716                     	;# 
  2879  0717                     	;# 
  2880  0718                     	;# 
  2881  0719                     	;# 
  2882  0891                     	;# 
  2883  0891                     	;# 
  2884  0891                     	;# 
  2885  0891                     	;# 
  2886  0891                     	;# 
  2887  0891                     	;# 
  2888  0892                     	;# 
  2889  0892                     	;# 
  2890  0892                     	;# 
  2891  0893                     	;# 
  2892  0893                     	;# 
  2893  0893                     	;# 
  2894  0893                     	;# 
  2895  0893                     	;# 
  2896  0893                     	;# 
  2897  0894                     	;# 
  2898  0894                     	;# 
  2899  0894                     	;# 
  2900  0895                     	;# 
  2901  0895                     	;# 
  2902  0895                     	;# 
  2903  0896                     	;# 
  2904  0896                     	;# 
  2905  0896                     	;# 
  2906  089B                     	;# 
  2907  0911                     	;# 
  2908  0912                     	;# 
  2909  0913                     	;# 
  2910  0914                     	;# 
  2911  0915                     	;# 
  2912  0916                     	;# 
  2913  0918                     	;# 
  2914  0919                     	;# 
  2915  091A                     	;# 
  2916  091B                     	;# 
  2917  091C                     	;# 
  2918  091D                     	;# 
  2919  091E                     	;# 
  2920  091F                     	;# 
  2921  0E0F                     	;# 
  2922  0E10                     	;# 
  2923  0E11                     	;# 
  2924  0E12                     	;# 
  2925  0E13                     	;# 
  2926  0E14                     	;# 
  2927  0E15                     	;# 
  2928  0E16                     	;# 
  2929  0E17                     	;# 
  2930  0E18                     	;# 
  2931  0E19                     	;# 
  2932  0E1A                     	;# 
  2933  0E1B                     	;# 
  2934  0E1C                     	;# 
  2935  0E1D                     	;# 
  2936  0E1E                     	;# 
  2937  0E1F                     	;# 
  2938  0E20                     	;# 
  2939  0E21                     	;# 
  2940  0E22                     	;# 
  2941  0E24                     	;# 
  2942  0E25                     	;# 
  2943  0E28                     	;# 
  2944  0E29                     	;# 
  2945  0E2A                     	;# 
  2946  0E2B                     	;# 
  2947  0E2C                     	;# 
  2948  0E2D                     	;# 
  2949  0E2E                     	;# 
  2950  0E2F                     	;# 
  2951  0E90                     	;# 
  2952  0E91                     	;# 
  2953  0E92                     	;# 
  2954  0E94                     	;# 
  2955  0E95                     	;# 
  2956  0E9C                     	;# 
  2957  0E9D                     	;# 
  2958  0E9E                     	;# 
  2959  0E9F                     	;# 
  2960  0EA0                     	;# 
  2961  0EA1                     	;# 
  2962  0EA2                     	;# 
  2963  0EA3                     	;# 
  2964  0EA4                     	;# 
  2965  0EA5                     	;# 
  2966  0EA6                     	;# 
  2967  0EA7                     	;# 
  2968  0F0F                     	;# 
  2969  0F10                     	;# 
  2970  0F11                     	;# 
  2971  0F12                     	;# 
  2972  0F13                     	;# 
  2973  0F14                     	;# 
  2974  0F15                     	;# 
  2975  0F16                     	;# 
  2976  0F17                     	;# 
  2977  0F18                     	;# 
  2978  0F19                     	;# 
  2979  0F1A                     	;# 
  2980  0F1B                     	;# 
  2981  0F1C                     	;# 
  2982  0F1D                     	;# 
  2983  0F1E                     	;# 
  2984  0F1F                     	;# 
  2985  0F20                     	;# 
  2986  0F21                     	;# 
  2987  0F22                     	;# 
  2988  0F23                     	;# 
  2989  0F24                     	;# 
  2990  0F25                     	;# 
  2991  0F26                     	;# 
  2992  0F27                     	;# 
  2993  0F28                     	;# 
  2994  0F29                     	;# 
  2995  0F2A                     	;# 
  2996  0F2B                     	;# 
  2997  0F2C                     	;# 
  2998  0F2D                     	;# 
  2999  0F2E                     	;# 
  3000  0F2F                     	;# 
  3001  0F30                     	;# 
  3002  0F31                     	;# 
  3003  0F32                     	;# 
  3004  0F33                     	;# 
  3005  0F34                     	;# 
  3006  0F35                     	;# 
  3007  0F36                     	;# 
  3008  0F37                     	;# 
  3009  0FE4                     	;# 
  3010  0FE5                     	;# 
  3011  0FE6                     	;# 
  3012  0FE7                     	;# 
  3013  0FE8                     	;# 
  3014  0FE9                     	;# 
  3015  0FEA                     	;# 
  3016  0FEB                     	;# 
  3017  0FED                     	;# 
  3018  0FEE                     	;# 
  3019  0FEF                     	;# 
  3020  0000                     	;# 
  3021  0001                     	;# 
  3022  0002                     	;# 
  3023  0003                     	;# 
  3024  0004                     	;# 
  3025  0005                     	;# 
  3026  0006                     	;# 
  3027  0007                     	;# 
  3028  0008                     	;# 
  3029  0009                     	;# 
  3030  000A                     	;# 
  3031  000B                     	;# 
  3032  000C                     	;# 
  3033  000D                     	;# 
  3034  000E                     	;# 
  3035  0010                     	;# 
  3036  0011                     	;# 
  3037  0012                     	;# 
  3038  0013                     	;# 
  3039  0014                     	;# 
  3040  0015                     	;# 
  3041  0015                     	;# 
  3042  0016                     	;# 
  3043  0016                     	;# 
  3044  0017                     	;# 
  3045  0018                     	;# 
  3046  0019                     	;# 
  3047  0019                     	;# 
  3048  001A                     	;# 
  3049  001B                     	;# 
  3050  001C                     	;# 
  3051  001D                     	;# 
  3052  001E                     	;# 
  3053  001F                     	;# 
  3054  008C                     	;# 
  3055  008D                     	;# 
  3056  008E                     	;# 
  3057  0090                     	;# 
  3058  0091                     	;# 
  3059  0092                     	;# 
  3060  0093                     	;# 
  3061  0094                     	;# 
  3062  0097                     	;# 
  3063  009B                     	;# 
  3064  009B                     	;# 
  3065  009C                     	;# 
  3066  009D                     	;# 
  3067  009E                     	;# 
  3068  009F                     	;# 
  3069  010C                     	;# 
  3070  010D                     	;# 
  3071  010E                     	;# 
  3072  0111                     	;# 
  3073  0112                     	;# 
  3074  0113                     	;# 
  3075  0114                     	;# 
  3076  0115                     	;# 
  3077  0116                     	;# 
  3078  0117                     	;# 
  3079  0118                     	;# 
  3080  0119                     	;# 
  3081  018C                     	;# 
  3082  018D                     	;# 
  3083  018E                     	;# 
  3084  0197                     	;# 
  3085  0199                     	;# 
  3086  0199                     	;# 
  3087  0199                     	;# 
  3088  019A                     	;# 
  3089  019A                     	;# 
  3090  019A                     	;# 
  3091  019B                     	;# 
  3092  019B                     	;# 
  3093  019B                     	;# 
  3094  019B                     	;# 
  3095  019B                     	;# 
  3096  019C                     	;# 
  3097  019C                     	;# 
  3098  019C                     	;# 
  3099  019D                     	;# 
  3100  019D                     	;# 
  3101  019D                     	;# 
  3102  019E                     	;# 
  3103  019E                     	;# 
  3104  019E                     	;# 
  3105  019F                     	;# 
  3106  019F                     	;# 
  3107  019F                     	;# 
  3108  019F                     	;# 
  3109  019F                     	;# 
  3110  020C                     	;# 
  3111  020D                     	;# 
  3112  020E                     	;# 
  3113  0211                     	;# 
  3114  0211                     	;# 
  3115  0212                     	;# 
  3116  0212                     	;# 
  3117  0213                     	;# 
  3118  0213                     	;# 
  3119  0214                     	;# 
  3120  0214                     	;# 
  3121  0215                     	;# 
  3122  0215                     	;# 
  3123  0215                     	;# 
  3124  0215                     	;# 
  3125  0216                     	;# 
  3126  0216                     	;# 
  3127  0217                     	;# 
  3128  0217                     	;# 
  3129  0219                     	;# 
  3130  021A                     	;# 
  3131  021B                     	;# 
  3132  021C                     	;# 
  3133  021D                     	;# 
  3134  021D                     	;# 
  3135  021E                     	;# 
  3136  021F                     	;# 
  3137  028C                     	;# 
  3138  028D                     	;# 
  3139  028E                     	;# 
  3140  0291                     	;# 
  3141  0291                     	;# 
  3142  0292                     	;# 
  3143  0293                     	;# 
  3144  0294                     	;# 
  3145  0295                     	;# 
  3146  0295                     	;# 
  3147  0296                     	;# 
  3148  0297                     	;# 
  3149  0298                     	;# 
  3150  029F                     	;# 
  3151  030C                     	;# 
  3152  030D                     	;# 
  3153  030E                     	;# 
  3154  0311                     	;# 
  3155  0311                     	;# 
  3156  0312                     	;# 
  3157  0313                     	;# 
  3158  0314                     	;# 
  3159  0315                     	;# 
  3160  0315                     	;# 
  3161  0316                     	;# 
  3162  0317                     	;# 
  3163  0318                     	;# 
  3164  038C                     	;# 
  3165  038D                     	;# 
  3166  038E                     	;# 
  3167  0391                     	;# 
  3168  0392                     	;# 
  3169  0393                     	;# 
  3170  0394                     	;# 
  3171  0395                     	;# 
  3172  0396                     	;# 
  3173  0397                     	;# 
  3174  0398                     	;# 
  3175  0399                     	;# 
  3176  039A                     	;# 
  3177  039C                     	;# 
  3178  039D                     	;# 
  3179  039E                     	;# 
  3180  039F                     	;# 
  3181  0411                     	;# 
  3182  0411                     	;# 
  3183  0412                     	;# 
  3184  0413                     	;# 
  3185  0414                     	;# 
  3186  0415                     	;# 
  3187  0416                     	;# 
  3188  0417                     	;# 
  3189  0418                     	;# 
  3190  0418                     	;# 
  3191  0419                     	;# 
  3192  041A                     	;# 
  3193  041B                     	;# 
  3194  041C                     	;# 
  3195  041D                     	;# 
  3196  041E                     	;# 
  3197  041F                     	;# 
  3198  0498                     	;# 
  3199  0498                     	;# 
  3200  0499                     	;# 
  3201  049A                     	;# 
  3202  049B                     	;# 
  3203  049B                     	;# 
  3204  049C                     	;# 
  3205  049D                     	;# 
  3206  049E                     	;# 
  3207  049F                     	;# 
  3208  0617                     	;# 
  3209  0618                     	;# 
  3210  0619                     	;# 
  3211  0619                     	;# 
  3212  061A                     	;# 
  3213  061B                     	;# 
  3214  061C                     	;# 
  3215  061C                     	;# 
  3216  061F                     	;# 
  3217  0691                     	;# 
  3218  0692                     	;# 
  3219  0693                     	;# 
  3220  0694                     	;# 
  3221  0695                     	;# 
  3222  0696                     	;# 
  3223  0697                     	;# 
  3224  0698                     	;# 
  3225  0699                     	;# 
  3226  0711                     	;# 
  3227  0712                     	;# 
  3228  0713                     	;# 
  3229  0714                     	;# 
  3230  0715                     	;# 
  3231  0716                     	;# 
  3232  0717                     	;# 
  3233  0718                     	;# 
  3234  0719                     	;# 
  3235  0891                     	;# 
  3236  0891                     	;# 
  3237  0891                     	;# 
  3238  0891                     	;# 
  3239  0891                     	;# 
  3240  0891                     	;# 
  3241  0892                     	;# 
  3242  0892                     	;# 
  3243  0892                     	;# 
  3244  0893                     	;# 
  3245  0893                     	;# 
  3246  0893                     	;# 
  3247  0893                     	;# 
  3248  0893                     	;# 
  3249  0893                     	;# 
  3250  0894                     	;# 
  3251  0894                     	;# 
  3252  0894                     	;# 
  3253  0895                     	;# 
  3254  0895                     	;# 
  3255  0895                     	;# 
  3256  0896                     	;# 
  3257  0896                     	;# 
  3258  0896                     	;# 
  3259  089B                     	;# 
  3260  0911                     	;# 
  3261  0912                     	;# 
  3262  0913                     	;# 
  3263  0914                     	;# 
  3264  0915                     	;# 
  3265  0916                     	;# 
  3266  0918                     	;# 
  3267  0919                     	;# 
  3268  091A                     	;# 
  3269  091B                     	;# 
  3270  091C                     	;# 
  3271  091D                     	;# 
  3272  091E                     	;# 
  3273  091F                     	;# 
  3274  0E0F                     	;# 
  3275  0E10                     	;# 
  3276  0E11                     	;# 
  3277  0E12                     	;# 
  3278  0E13                     	;# 
  3279  0E14                     	;# 
  3280  0E15                     	;# 
  3281  0E16                     	;# 
  3282  0E17                     	;# 
  3283  0E18                     	;# 
  3284  0E19                     	;# 
  3285  0E1A                     	;# 
  3286  0E1B                     	;# 
  3287  0E1C                     	;# 
  3288  0E1D                     	;# 
  3289  0E1E                     	;# 
  3290  0E1F                     	;# 
  3291  0E20                     	;# 
  3292  0E21                     	;# 
  3293  0E22                     	;# 
  3294  0E24                     	;# 
  3295  0E25                     	;# 
  3296  0E28                     	;# 
  3297  0E29                     	;# 
  3298  0E2A                     	;# 
  3299  0E2B                     	;# 
  3300  0E2C                     	;# 
  3301  0E2D                     	;# 
  3302  0E2E                     	;# 
  3303  0E2F                     	;# 
  3304  0E90                     	;# 
  3305  0E91                     	;# 
  3306  0E92                     	;# 
  3307  0E94                     	;# 
  3308  0E95                     	;# 
  3309  0E9C                     	;# 
  3310  0E9D                     	;# 
  3311  0E9E                     	;# 
  3312  0E9F                     	;# 
  3313  0EA0                     	;# 
  3314  0EA1                     	;# 
  3315  0EA2                     	;# 
  3316  0EA3                     	;# 
  3317  0EA4                     	;# 
  3318  0EA5                     	;# 
  3319  0EA6                     	;# 
  3320  0EA7                     	;# 
  3321  0F0F                     	;# 
  3322  0F10                     	;# 
  3323  0F11                     	;# 
  3324  0F12                     	;# 
  3325  0F13                     	;# 
  3326  0F14                     	;# 
  3327  0F15                     	;# 
  3328  0F16                     	;# 
  3329  0F17                     	;# 
  3330  0F18                     	;# 
  3331  0F19                     	;# 
  3332  0F1A                     	;# 
  3333  0F1B                     	;# 
  3334  0F1C                     	;# 
  3335  0F1D                     	;# 
  3336  0F1E                     	;# 
  3337  0F1F                     	;# 
  3338  0F20                     	;# 
  3339  0F21                     	;# 
  3340  0F22                     	;# 
  3341  0F23                     	;# 
  3342  0F24                     	;# 
  3343  0F25                     	;# 
  3344  0F26                     	;# 
  3345  0F27                     	;# 
  3346  0F28                     	;# 
  3347  0F29                     	;# 
  3348  0F2A                     	;# 
  3349  0F2B                     	;# 
  3350  0F2C                     	;# 
  3351  0F2D                     	;# 
  3352  0F2E                     	;# 
  3353  0F2F                     	;# 
  3354  0F30                     	;# 
  3355  0F31                     	;# 
  3356  0F32                     	;# 
  3357  0F33                     	;# 
  3358  0F34                     	;# 
  3359  0F35                     	;# 
  3360  0F36                     	;# 
  3361  0F37                     	;# 
  3362  0FE4                     	;# 
  3363  0FE5                     	;# 
  3364  0FE6                     	;# 
  3365  0FE7                     	;# 
  3366  0FE8                     	;# 
  3367  0FE9                     	;# 
  3368  0FEA                     	;# 
  3369  0FEB                     	;# 
  3370  0FED                     	;# 
  3371  0FEE                     	;# 
  3372  0FEF                     	;# 
  3373  0000                     	;# 
  3374  0001                     	;# 
  3375  0002                     	;# 
  3376  0003                     	;# 
  3377  0004                     	;# 
  3378  0005                     	;# 
  3379  0006                     	;# 
  3380  0007                     	;# 
  3381  0008                     	;# 
  3382  0009                     	;# 
  3383  000A                     	;# 
  3384  000B                     	;# 
  3385  000C                     	;# 
  3386  000D                     	;# 
  3387  000E                     	;# 
  3388  0010                     	;# 
  3389  0011                     	;# 
  3390  0012                     	;# 
  3391  0013                     	;# 
  3392  0014                     	;# 
  3393  0015                     	;# 
  3394  0015                     	;# 
  3395  0016                     	;# 
  3396  0016                     	;# 
  3397  0017                     	;# 
  3398  0018                     	;# 
  3399  0019                     	;# 
  3400  0019                     	;# 
  3401  001A                     	;# 
  3402  001B                     	;# 
  3403  001C                     	;# 
  3404  001D                     	;# 
  3405  001E                     	;# 
  3406  001F                     	;# 
  3407  008C                     	;# 
  3408  008D                     	;# 
  3409  008E                     	;# 
  3410  0090                     	;# 
  3411  0091                     	;# 
  3412  0092                     	;# 
  3413  0093                     	;# 
  3414  0094                     	;# 
  3415  0097                     	;# 
  3416  009B                     	;# 
  3417  009B                     	;# 
  3418  009C                     	;# 
  3419  009D                     	;# 
  3420  009E                     	;# 
  3421  009F                     	;# 
  3422  010C                     	;# 
  3423  010D                     	;# 
  3424  010E                     	;# 
  3425  0111                     	;# 
  3426  0112                     	;# 
  3427  0113                     	;# 
  3428  0114                     	;# 
  3429  0115                     	;# 
  3430  0116                     	;# 
  3431  0117                     	;# 
  3432  0118                     	;# 
  3433  0119                     	;# 
  3434  018C                     	;# 
  3435  018D                     	;# 
  3436  018E                     	;# 
  3437  0197                     	;# 
  3438  0199                     	;# 
  3439  0199                     	;# 
  3440  0199                     	;# 
  3441  019A                     	;# 
  3442  019A                     	;# 
  3443  019A                     	;# 
  3444  019B                     	;# 
  3445  019B                     	;# 
  3446  019B                     	;# 
  3447  019B                     	;# 
  3448  019B                     	;# 
  3449  019C                     	;# 
  3450  019C                     	;# 
  3451  019C                     	;# 
  3452  019D                     	;# 
  3453  019D                     	;# 
  3454  019D                     	;# 
  3455  019E                     	;# 
  3456  019E                     	;# 
  3457  019E                     	;# 
  3458  019F                     	;# 
  3459  019F                     	;# 
  3460  019F                     	;# 
  3461  019F                     	;# 
  3462  019F                     	;# 
  3463  020C                     	;# 
  3464  020D                     	;# 
  3465  020E                     	;# 
  3466  0211                     	;# 
  3467  0211                     	;# 
  3468  0212                     	;# 
  3469  0212                     	;# 
  3470  0213                     	;# 
  3471  0213                     	;# 
  3472  0214                     	;# 
  3473  0214                     	;# 
  3474  0215                     	;# 
  3475  0215                     	;# 
  3476  0215                     	;# 
  3477  0215                     	;# 
  3478  0216                     	;# 
  3479  0216                     	;# 
  3480  0217                     	;# 
  3481  0217                     	;# 
  3482  0219                     	;# 
  3483  021A                     	;# 
  3484  021B                     	;# 
  3485  021C                     	;# 
  3486  021D                     	;# 
  3487  021D                     	;# 
  3488  021E                     	;# 
  3489  021F                     	;# 
  3490  028C                     	;# 
  3491  028D                     	;# 
  3492  028E                     	;# 
  3493  0291                     	;# 
  3494  0291                     	;# 
  3495  0292                     	;# 
  3496  0293                     	;# 
  3497  0294                     	;# 
  3498  0295                     	;# 
  3499  0295                     	;# 
  3500  0296                     	;# 
  3501  0297                     	;# 
  3502  0298                     	;# 
  3503  029F                     	;# 
  3504  030C                     	;# 
  3505  030D                     	;# 
  3506  030E                     	;# 
  3507  0311                     	;# 
  3508  0311                     	;# 
  3509  0312                     	;# 
  3510  0313                     	;# 
  3511  0314                     	;# 
  3512  0315                     	;# 
  3513  0315                     	;# 
  3514  0316                     	;# 
  3515  0317                     	;# 
  3516  0318                     	;# 
  3517  038C                     	;# 
  3518  038D                     	;# 
  3519  038E                     	;# 
  3520  0391                     	;# 
  3521  0392                     	;# 
  3522  0393                     	;# 
  3523  0394                     	;# 
  3524  0395                     	;# 
  3525  0396                     	;# 
  3526  0397                     	;# 
  3527  0398                     	;# 
  3528  0399                     	;# 
  3529  039A                     	;# 
  3530  039C                     	;# 
  3531  039D                     	;# 
  3532  039E                     	;# 
  3533  039F                     	;# 
  3534  0411                     	;# 
  3535  0411                     	;# 
  3536  0412                     	;# 
  3537  0413                     	;# 
  3538  0414                     	;# 
  3539  0415                     	;# 
  3540  0416                     	;# 
  3541  0417                     	;# 
  3542  0418                     	;# 
  3543  0418                     	;# 
  3544  0419                     	;# 
  3545  041A                     	;# 
  3546  041B                     	;# 
  3547  041C                     	;# 
  3548  041D                     	;# 
  3549  041E                     	;# 
  3550  041F                     	;# 
  3551  0498                     	;# 
  3552  0498                     	;# 
  3553  0499                     	;# 
  3554  049A                     	;# 
  3555  049B                     	;# 
  3556  049B                     	;# 
  3557  049C                     	;# 
  3558  049D                     	;# 
  3559  049E                     	;# 
  3560  049F                     	;# 
  3561  0617                     	;# 
  3562  0618                     	;# 
  3563  0619                     	;# 
  3564  0619                     	;# 
  3565  061A                     	;# 
  3566  061B                     	;# 
  3567  061C                     	;# 
  3568  061C                     	;# 
  3569  061F                     	;# 
  3570  0691                     	;# 
  3571  0692                     	;# 
  3572  0693                     	;# 
  3573  0694                     	;# 
  3574  0695                     	;# 
  3575  0696                     	;# 
  3576  0697                     	;# 
  3577  0698                     	;# 
  3578  0699                     	;# 
  3579  0711                     	;# 
  3580  0712                     	;# 
  3581  0713                     	;# 
  3582  0714                     	;# 
  3583  0715                     	;# 
  3584  0716                     	;# 
  3585  0717                     	;# 
  3586  0718                     	;# 
  3587  0719                     	;# 
  3588  0891                     	;# 
  3589  0891                     	;# 
  3590  0891                     	;# 
  3591  0891                     	;# 
  3592  0891                     	;# 
  3593  0891                     	;# 
  3594  0892                     	;# 
  3595  0892                     	;# 
  3596  0892                     	;# 
  3597  0893                     	;# 
  3598  0893                     	;# 
  3599  0893                     	;# 
  3600  0893                     	;# 
  3601  0893                     	;# 
  3602  0893                     	;# 
  3603  0894                     	;# 
  3604  0894                     	;# 
  3605  0894                     	;# 
  3606  0895                     	;# 
  3607  0895                     	;# 
  3608  0895                     	;# 
  3609  0896                     	;# 
  3610  0896                     	;# 
  3611  0896                     	;# 
  3612  089B                     	;# 
  3613  0911                     	;# 
  3614  0912                     	;# 
  3615  0913                     	;# 
  3616  0914                     	;# 
  3617  0915                     	;# 
  3618  0916                     	;# 
  3619  0918                     	;# 
  3620  0919                     	;# 
  3621  091A                     	;# 
  3622  091B                     	;# 
  3623  091C                     	;# 
  3624  091D                     	;# 
  3625  091E                     	;# 
  3626  091F                     	;# 
  3627  0E0F                     	;# 
  3628  0E10                     	;# 
  3629  0E11                     	;# 
  3630  0E12                     	;# 
  3631  0E13                     	;# 
  3632  0E14                     	;# 
  3633  0E15                     	;# 
  3634  0E16                     	;# 
  3635  0E17                     	;# 
  3636  0E18                     	;# 
  3637  0E19                     	;# 
  3638  0E1A                     	;# 
  3639  0E1B                     	;# 
  3640  0E1C                     	;# 
  3641  0E1D                     	;# 
  3642  0E1E                     	;# 
  3643  0E1F                     	;# 
  3644  0E20                     	;# 
  3645  0E21                     	;# 
  3646  0E22                     	;# 
  3647  0E24                     	;# 
  3648  0E25                     	;# 
  3649  0E28                     	;# 
  3650  0E29                     	;# 
  3651  0E2A                     	;# 
  3652  0E2B                     	;# 
  3653  0E2C                     	;# 
  3654  0E2D                     	;# 
  3655  0E2E                     	;# 
  3656  0E2F                     	;# 
  3657  0E90                     	;# 
  3658  0E91                     	;# 
  3659  0E92                     	;# 
  3660  0E94                     	;# 
  3661  0E95                     	;# 
  3662  0E9C                     	;# 
  3663  0E9D                     	;# 
  3664  0E9E                     	;# 
  3665  0E9F                     	;# 
  3666  0EA0                     	;# 
  3667  0EA1                     	;# 
  3668  0EA2                     	;# 
  3669  0EA3                     	;# 
  3670  0EA4                     	;# 
  3671  0EA5                     	;# 
  3672  0EA6                     	;# 
  3673  0EA7                     	;# 
  3674  0F0F                     	;# 
  3675  0F10                     	;# 
  3676  0F11                     	;# 
  3677  0F12                     	;# 
  3678  0F13                     	;# 
  3679  0F14                     	;# 
  3680  0F15                     	;# 
  3681  0F16                     	;# 
  3682  0F17                     	;# 
  3683  0F18                     	;# 
  3684  0F19                     	;# 
  3685  0F1A                     	;# 
  3686  0F1B                     	;# 
  3687  0F1C                     	;# 
  3688  0F1D                     	;# 
  3689  0F1E                     	;# 
  3690  0F1F                     	;# 
  3691  0F20                     	;# 
  3692  0F21                     	;# 
  3693  0F22                     	;# 
  3694  0F23                     	;# 
  3695  0F24                     	;# 
  3696  0F25                     	;# 
  3697  0F26                     	;# 
  3698  0F27                     	;# 
  3699  0F28                     	;# 
  3700  0F29                     	;# 
  3701  0F2A                     	;# 
  3702  0F2B                     	;# 
  3703  0F2C                     	;# 
  3704  0F2D                     	;# 
  3705  0F2E                     	;# 
  3706  0F2F                     	;# 
  3707  0F30                     	;# 
  3708  0F31                     	;# 
  3709  0F32                     	;# 
  3710  0F33                     	;# 
  3711  0F34                     	;# 
  3712  0F35                     	;# 
  3713  0F36                     	;# 
  3714  0F37                     	;# 
  3715  0FE4                     	;# 
  3716  0FE5                     	;# 
  3717  0FE6                     	;# 
  3718  0FE7                     	;# 
  3719  0FE8                     	;# 
  3720  0FE9                     	;# 
  3721  0FEA                     	;# 
  3722  0FEB                     	;# 
  3723  0FED                     	;# 
  3724  0FEE                     	;# 
  3725  0FEF                     	;# 
  3726  0000                     	;# 
  3727  0001                     	;# 
  3728  0002                     	;# 
  3729  0003                     	;# 
  3730  0004                     	;# 
  3731  0005                     	;# 
  3732  0006                     	;# 
  3733  0007                     	;# 
  3734  0008                     	;# 
  3735  0009                     	;# 
  3736  000A                     	;# 
  3737  000B                     	;# 
  3738  000C                     	;# 
  3739  000D                     	;# 
  3740  000E                     	;# 
  3741  0010                     	;# 
  3742  0011                     	;# 
  3743  0012                     	;# 
  3744  0013                     	;# 
  3745  0014                     	;# 
  3746  0015                     	;# 
  3747  0015                     	;# 
  3748  0016                     	;# 
  3749  0016                     	;# 
  3750  0017                     	;# 
  3751  0018                     	;# 
  3752  0019                     	;# 
  3753  0019                     	;# 
  3754  001A                     	;# 
  3755  001B                     	;# 
  3756  001C                     	;# 
  3757  001D                     	;# 
  3758  001E                     	;# 
  3759  001F                     	;# 
  3760  008C                     	;# 
  3761  008D                     	;# 
  3762  008E                     	;# 
  3763  0090                     	;# 
  3764  0091                     	;# 
  3765  0092                     	;# 
  3766  0093                     	;# 
  3767  0094                     	;# 
  3768  0097                     	;# 
  3769  009B                     	;# 
  3770  009B                     	;# 
  3771  009C                     	;# 
  3772  009D                     	;# 
  3773  009E                     	;# 
  3774  009F                     	;# 
  3775  010C                     	;# 
  3776  010D                     	;# 
  3777  010E                     	;# 
  3778  0111                     	;# 
  3779  0112                     	;# 
  3780  0113                     	;# 
  3781  0114                     	;# 
  3782  0115                     	;# 
  3783  0116                     	;# 
  3784  0117                     	;# 
  3785  0118                     	;# 
  3786  0119                     	;# 
  3787  018C                     	;# 
  3788  018D                     	;# 
  3789  018E                     	;# 
  3790  0197                     	;# 
  3791  0199                     	;# 
  3792  0199                     	;# 
  3793  0199                     	;# 
  3794  019A                     	;# 
  3795  019A                     	;# 
  3796  019A                     	;# 
  3797  019B                     	;# 
  3798  019B                     	;# 
  3799  019B                     	;# 
  3800  019B                     	;# 
  3801  019B                     	;# 
  3802  019C                     	;# 
  3803  019C                     	;# 
  3804  019C                     	;# 
  3805  019D                     	;# 
  3806  019D                     	;# 
  3807  019D                     	;# 
  3808  019E                     	;# 
  3809  019E                     	;# 
  3810  019E                     	;# 
  3811  019F                     	;# 
  3812  019F                     	;# 
  3813  019F                     	;# 
  3814  019F                     	;# 
  3815  019F                     	;# 
  3816  020C                     	;# 
  3817  020D                     	;# 
  3818  020E                     	;# 
  3819  0211                     	;# 
  3820  0211                     	;# 
  3821  0212                     	;# 
  3822  0212                     	;# 
  3823  0213                     	;# 
  3824  0213                     	;# 
  3825  0214                     	;# 
  3826  0214                     	;# 
  3827  0215                     	;# 
  3828  0215                     	;# 
  3829  0215                     	;# 
  3830  0215                     	;# 
  3831  0216                     	;# 
  3832  0216                     	;# 
  3833  0217                     	;# 
  3834  0217                     	;# 
  3835  0219                     	;# 
  3836  021A                     	;# 
  3837  021B                     	;# 
  3838  021C                     	;# 
  3839  021D                     	;# 
  3840  021D                     	;# 
  3841  021E                     	;# 
  3842  021F                     	;# 
  3843  028C                     	;# 
  3844  028D                     	;# 
  3845  028E                     	;# 
  3846  0291                     	;# 
  3847  0291                     	;# 
  3848  0292                     	;# 
  3849  0293                     	;# 
  3850  0294                     	;# 
  3851  0295                     	;# 
  3852  0295                     	;# 
  3853  0296                     	;# 
  3854  0297                     	;# 
  3855  0298                     	;# 
  3856  029F                     	;# 
  3857  030C                     	;# 
  3858  030D                     	;# 
  3859  030E                     	;# 
  3860  0311                     	;# 
  3861  0311                     	;# 
  3862  0312                     	;# 
  3863  0313                     	;# 
  3864  0314                     	;# 
  3865  0315                     	;# 
  3866  0315                     	;# 
  3867  0316                     	;# 
  3868  0317                     	;# 
  3869  0318                     	;# 
  3870  038C                     	;# 
  3871  038D                     	;# 
  3872  038E                     	;# 
  3873  0391                     	;# 
  3874  0392                     	;# 
  3875  0393                     	;# 
  3876  0394                     	;# 
  3877  0395                     	;# 
  3878  0396                     	;# 
  3879  0397                     	;# 
  3880  0398                     	;# 
  3881  0399                     	;# 
  3882  039A                     	;# 
  3883  039C                     	;# 
  3884  039D                     	;# 
  3885  039E                     	;# 
  3886  039F                     	;# 
  3887  0411                     	;# 
  3888  0411                     	;# 
  3889  0412                     	;# 
  3890  0413                     	;# 
  3891  0414                     	;# 
  3892  0415                     	;# 
  3893  0416                     	;# 
  3894  0417                     	;# 
  3895  0418                     	;# 
  3896  0418                     	;# 
  3897  0419                     	;# 
  3898  041A                     	;# 
  3899  041B                     	;# 
  3900  041C                     	;# 
  3901  041D                     	;# 
  3902  041E                     	;# 
  3903  041F                     	;# 
  3904  0498                     	;# 
  3905  0498                     	;# 
  3906  0499                     	;# 
  3907  049A                     	;# 
  3908  049B                     	;# 
  3909  049B                     	;# 
  3910  049C                     	;# 
  3911  049D                     	;# 
  3912  049E                     	;# 
  3913  049F                     	;# 
  3914  0617                     	;# 
  3915  0618                     	;# 
  3916  0619                     	;# 
  3917  0619                     	;# 
  3918  061A                     	;# 
  3919  061B                     	;# 
  3920  061C                     	;# 
  3921  061C                     	;# 
  3922  061F                     	;# 
  3923  0691                     	;# 
  3924  0692                     	;# 
  3925  0693                     	;# 
  3926  0694                     	;# 
  3927  0695                     	;# 
  3928  0696                     	;# 
  3929  0697                     	;# 
  3930  0698                     	;# 
  3931  0699                     	;# 
  3932  0711                     	;# 
  3933  0712                     	;# 
  3934  0713                     	;# 
  3935  0714                     	;# 
  3936  0715                     	;# 
  3937  0716                     	;# 
  3938  0717                     	;# 
  3939  0718                     	;# 
  3940  0719                     	;# 
  3941  0891                     	;# 
  3942  0891                     	;# 
  3943  0891                     	;# 
  3944  0891                     	;# 
  3945  0891                     	;# 
  3946  0891                     	;# 
  3947  0892                     	;# 
  3948  0892                     	;# 
  3949  0892                     	;# 
  3950  0893                     	;# 
  3951  0893                     	;# 
  3952  0893                     	;# 
  3953  0893                     	;# 
  3954  0893                     	;# 
  3955  0893                     	;# 
  3956  0894                     	;# 
  3957  0894                     	;# 
  3958  0894                     	;# 
  3959  0895                     	;# 
  3960  0895                     	;# 
  3961  0895                     	;# 
  3962  0896                     	;# 
  3963  0896                     	;# 
  3964  0896                     	;# 
  3965  089B                     	;# 
  3966  0911                     	;# 
  3967  0912                     	;# 
  3968  0913                     	;# 
  3969  0914                     	;# 
  3970  0915                     	;# 
  3971  0916                     	;# 
  3972  0918                     	;# 
  3973  0919                     	;# 
  3974  091A                     	;# 
  3975  091B                     	;# 
  3976  091C                     	;# 
  3977  091D                     	;# 
  3978  091E                     	;# 
  3979  091F                     	;# 
  3980  0E0F                     	;# 
  3981  0E10                     	;# 
  3982  0E11                     	;# 
  3983  0E12                     	;# 
  3984  0E13                     	;# 
  3985  0E14                     	;# 
  3986  0E15                     	;# 
  3987  0E16                     	;# 
  3988  0E17                     	;# 
  3989  0E18                     	;# 
  3990  0E19                     	;# 
  3991  0E1A                     	;# 
  3992  0E1B                     	;# 
  3993  0E1C                     	;# 
  3994  0E1D                     	;# 
  3995  0E1E                     	;# 
  3996  0E1F                     	;# 
  3997  0E20                     	;# 
  3998  0E21                     	;# 
  3999  0E22                     	;# 
  4000  0E24                     	;# 
  4001  0E25                     	;# 
  4002  0E28                     	;# 
  4003  0E29                     	;# 
  4004  0E2A                     	;# 
  4005  0E2B                     	;# 
  4006  0E2C                     	;# 
  4007  0E2D                     	;# 
  4008  0E2E                     	;# 
  4009  0E2F                     	;# 
  4010  0E90                     	;# 
  4011  0E91                     	;# 
  4012  0E92                     	;# 
  4013  0E94                     	;# 
  4014  0E95                     	;# 
  4015  0E9C                     	;# 
  4016  0E9D                     	;# 
  4017  0E9E                     	;# 
  4018  0E9F                     	;# 
  4019  0EA0                     	;# 
  4020  0EA1                     	;# 
  4021  0EA2                     	;# 
  4022  0EA3                     	;# 
  4023  0EA4                     	;# 
  4024  0EA5                     	;# 
  4025  0EA6                     	;# 
  4026  0EA7                     	;# 
  4027  0F0F                     	;# 
  4028  0F10                     	;# 
  4029  0F11                     	;# 
  4030  0F12                     	;# 
  4031  0F13                     	;# 
  4032  0F14                     	;# 
  4033  0F15                     	;# 
  4034  0F16                     	;# 
  4035  0F17                     	;# 
  4036  0F18                     	;# 
  4037  0F19                     	;# 
  4038  0F1A                     	;# 
  4039  0F1B                     	;# 
  4040  0F1C                     	;# 
  4041  0F1D                     	;# 
  4042  0F1E                     	;# 
  4043  0F1F                     	;# 
  4044  0F20                     	;# 
  4045  0F21                     	;# 
  4046  0F22                     	;# 
  4047  0F23                     	;# 
  4048  0F24                     	;# 
  4049  0F25                     	;# 
  4050  0F26                     	;# 
  4051  0F27                     	;# 
  4052  0F28                     	;# 
  4053  0F29                     	;# 
  4054  0F2A                     	;# 
  4055  0F2B                     	;# 
  4056  0F2C                     	;# 
  4057  0F2D                     	;# 
  4058  0F2E                     	;# 
  4059  0F2F                     	;# 
  4060  0F30                     	;# 
  4061  0F31                     	;# 
  4062  0F32                     	;# 
  4063  0F33                     	;# 
  4064  0F34                     	;# 
  4065  0F35                     	;# 
  4066  0F36                     	;# 
  4067  0F37                     	;# 
  4068  0FE4                     	;# 
  4069  0FE5                     	;# 
  4070  0FE6                     	;# 
  4071  0FE7                     	;# 
  4072  0FE8                     	;# 
  4073  0FE9                     	;# 
  4074  0FEA                     	;# 
  4075  0FEB                     	;# 
  4076  0FED                     	;# 
  4077  0FEE                     	;# 
  4078  0FEF                     	;# 
  4079  0000                     	;# 
  4080  0001                     	;# 
  4081  0002                     	;# 
  4082  0003                     	;# 
  4083  0004                     	;# 
  4084  0005                     	;# 
  4085  0006                     	;# 
  4086  0007                     	;# 
  4087  0008                     	;# 
  4088  0009                     	;# 
  4089  000A                     	;# 
  4090  000B                     	;# 
  4091  000C                     	;# 
  4092  000D                     	;# 
  4093  000E                     	;# 
  4094  0010                     	;# 
  4095  0011                     	;# 
  4096  0012                     	;# 
  4097  0013                     	;# 
  4098  0014                     	;# 
  4099  0015                     	;# 
  4100  0015                     	;# 
  4101  0016                     	;# 
  4102  0016                     	;# 
  4103  0017                     	;# 
  4104  0018                     	;# 
  4105  0019                     	;# 
  4106  0019                     	;# 
  4107  001A                     	;# 
  4108  001B                     	;# 
  4109  001C                     	;# 
  4110  001D                     	;# 
  4111  001E                     	;# 
  4112  001F                     	;# 
  4113  008C                     	;# 
  4114  008D                     	;# 
  4115  008E                     	;# 
  4116  0090                     	;# 
  4117  0091                     	;# 
  4118  0092                     	;# 
  4119  0093                     	;# 
  4120  0094                     	;# 
  4121  0097                     	;# 
  4122  009B                     	;# 
  4123  009B                     	;# 
  4124  009C                     	;# 
  4125  009D                     	;# 
  4126  009E                     	;# 
  4127  009F                     	;# 
  4128  010C                     	;# 
  4129  010D                     	;# 
  4130  010E                     	;# 
  4131  0111                     	;# 
  4132  0112                     	;# 
  4133  0113                     	;# 
  4134  0114                     	;# 
  4135  0115                     	;# 
  4136  0116                     	;# 
  4137  0117                     	;# 
  4138  0118                     	;# 
  4139  0119                     	;# 
  4140  018C                     	;# 
  4141  018D                     	;# 
  4142  018E                     	;# 
  4143  0197                     	;# 
  4144  0199                     	;# 
  4145  0199                     	;# 
  4146  0199                     	;# 
  4147  019A                     	;# 
  4148  019A                     	;# 
  4149  019A                     	;# 
  4150  019B                     	;# 
  4151  019B                     	;# 
  4152  019B                     	;# 
  4153  019B                     	;# 
  4154  019B                     	;# 
  4155  019C                     	;# 
  4156  019C                     	;# 
  4157  019C                     	;# 
  4158  019D                     	;# 
  4159  019D                     	;# 
  4160  019D                     	;# 
  4161  019E                     	;# 
  4162  019E                     	;# 
  4163  019E                     	;# 
  4164  019F                     	;# 
  4165  019F                     	;# 
  4166  019F                     	;# 
  4167  019F                     	;# 
  4168  019F                     	;# 
  4169  020C                     	;# 
  4170  020D                     	;# 
  4171  020E                     	;# 
  4172  0211                     	;# 
  4173  0211                     	;# 
  4174  0212                     	;# 
  4175  0212                     	;# 
  4176  0213                     	;# 
  4177  0213                     	;# 
  4178  0214                     	;# 
  4179  0214                     	;# 
  4180  0215                     	;# 
  4181  0215                     	;# 
  4182  0215                     	;# 
  4183  0215                     	;# 
  4184  0216                     	;# 
  4185  0216                     	;# 
  4186  0217                     	;# 
  4187  0217                     	;# 
  4188  0219                     	;# 
  4189  021A                     	;# 
  4190  021B                     	;# 
  4191  021C                     	;# 
  4192  021D                     	;# 
  4193  021D                     	;# 
  4194  021E                     	;# 
  4195  021F                     	;# 
  4196  028C                     	;# 
  4197  028D                     	;# 
  4198  028E                     	;# 
  4199  0291                     	;# 
  4200  0291                     	;# 
  4201  0292                     	;# 
  4202  0293                     	;# 
  4203  0294                     	;# 
  4204  0295                     	;# 
  4205  0295                     	;# 
  4206  0296                     	;# 
  4207  0297                     	;# 
  4208  0298                     	;# 
  4209  029F                     	;# 
  4210  030C                     	;# 
  4211  030D                     	;# 
  4212  030E                     	;# 
  4213  0311                     	;# 
  4214  0311                     	;# 
  4215  0312                     	;# 
  4216  0313                     	;# 
  4217  0314                     	;# 
  4218  0315                     	;# 
  4219  0315                     	;# 
  4220  0316                     	;# 
  4221  0317                     	;# 
  4222  0318                     	;# 
  4223  038C                     	;# 
  4224  038D                     	;# 
  4225  038E                     	;# 
  4226  0391                     	;# 
  4227  0392                     	;# 
  4228  0393                     	;# 
  4229  0394                     	;# 
  4230  0395                     	;# 
  4231  0396                     	;# 
  4232  0397                     	;# 
  4233  0398                     	;# 
  4234  0399                     	;# 
  4235  039A                     	;# 
  4236  039C                     	;# 
  4237  039D                     	;# 
  4238  039E                     	;# 
  4239  039F                     	;# 
  4240  0411                     	;# 
  4241  0411                     	;# 
  4242  0412                     	;# 
  4243  0413                     	;# 
  4244  0414                     	;# 
  4245  0415                     	;# 
  4246  0416                     	;# 
  4247  0417                     	;# 
  4248  0418                     	;# 
  4249  0418                     	;# 
  4250  0419                     	;# 
  4251  041A                     	;# 
  4252  041B                     	;# 
  4253  041C                     	;# 
  4254  041D                     	;# 
  4255  041E                     	;# 
  4256  041F                     	;# 
  4257  0498                     	;# 
  4258  0498                     	;# 
  4259  0499                     	;# 
  4260  049A                     	;# 
  4261  049B                     	;# 
  4262  049B                     	;# 
  4263  049C                     	;# 
  4264  049D                     	;# 
  4265  049E                     	;# 
  4266  049F                     	;# 
  4267  0617                     	;# 
  4268  0618                     	;# 
  4269  0619                     	;# 
  4270  0619                     	;# 
  4271  061A                     	;# 
  4272  061B                     	;# 
  4273  061C                     	;# 
  4274  061C                     	;# 
  4275  061F                     	;# 
  4276  0691                     	;# 
  4277  0692                     	;# 
  4278  0693                     	;# 
  4279  0694                     	;# 
  4280  0695                     	;# 
  4281  0696                     	;# 
  4282  0697                     	;# 
  4283  0698                     	;# 
  4284  0699                     	;# 
  4285  0711                     	;# 
  4286  0712                     	;# 
  4287  0713                     	;# 
  4288  0714                     	;# 
  4289  0715                     	;# 
  4290  0716                     	;# 
  4291  0717                     	;# 
  4292  0718                     	;# 
  4293  0719                     	;# 
  4294  0891                     	;# 
  4295  0891                     	;# 
  4296  0891                     	;# 
  4297  0891                     	;# 
  4298  0891                     	;# 
  4299  0891                     	;# 
  4300  0892                     	;# 
  4301  0892                     	;# 
  4302  0892                     	;# 
  4303  0893                     	;# 
  4304  0893                     	;# 
  4305  0893                     	;# 
  4306  0893                     	;# 
  4307  0893                     	;# 
  4308  0893                     	;# 
  4309  0894                     	;# 
  4310  0894                     	;# 
  4311  0894                     	;# 
  4312  0895                     	;# 
  4313  0895                     	;# 
  4314  0895                     	;# 
  4315  0896                     	;# 
  4316  0896                     	;# 
  4317  0896                     	;# 
  4318  089B                     	;# 
  4319  0911                     	;# 
  4320  0912                     	;# 
  4321  0913                     	;# 
  4322  0914                     	;# 
  4323  0915                     	;# 
  4324  0916                     	;# 
  4325  0918                     	;# 
  4326  0919                     	;# 
  4327  091A                     	;# 
  4328  091B                     	;# 
  4329  091C                     	;# 
  4330  091D                     	;# 
  4331  091E                     	;# 
  4332  091F                     	;# 
  4333  0E0F                     	;# 
  4334  0E10                     	;# 
  4335  0E11                     	;# 
  4336  0E12                     	;# 
  4337  0E13                     	;# 
  4338  0E14                     	;# 
  4339  0E15                     	;# 
  4340  0E16                     	;# 
  4341  0E17                     	;# 
  4342  0E18                     	;# 
  4343  0E19                     	;# 
  4344  0E1A                     	;# 
  4345  0E1B                     	;# 
  4346  0E1C                     	;# 
  4347  0E1D                     	;# 
  4348  0E1E                     	;# 
  4349  0E1F                     	;# 
  4350  0E20                     	;# 
  4351  0E21                     	;# 
  4352  0E22                     	;# 
  4353  0E24                     	;# 
  4354  0E25                     	;# 
  4355  0E28                     	;# 
  4356  0E29                     	;# 
  4357  0E2A                     	;# 
  4358  0E2B                     	;# 
  4359  0E2C                     	;# 
  4360  0E2D                     	;# 
  4361  0E2E                     	;# 
  4362  0E2F                     	;# 
  4363  0E90                     	;# 
  4364  0E91                     	;# 
  4365  0E92                     	;# 
  4366  0E94                     	;# 
  4367  0E95                     	;# 
  4368  0E9C                     	;# 
  4369  0E9D                     	;# 
  4370  0E9E                     	;# 
  4371  0E9F                     	;# 
  4372  0EA0                     	;# 
  4373  0EA1                     	;# 
  4374  0EA2                     	;# 
  4375  0EA3                     	;# 
  4376  0EA4                     	;# 
  4377  0EA5                     	;# 
  4378  0EA6                     	;# 
  4379  0EA7                     	;# 
  4380  0F0F                     	;# 
  4381  0F10                     	;# 
  4382  0F11                     	;# 
  4383  0F12                     	;# 
  4384  0F13                     	;# 
  4385  0F14                     	;# 
  4386  0F15                     	;# 
  4387  0F16                     	;# 
  4388  0F17                     	;# 
  4389  0F18                     	;# 
  4390  0F19                     	;# 
  4391  0F1A                     	;# 
  4392  0F1B                     	;# 
  4393  0F1C                     	;# 
  4394  0F1D                     	;# 
  4395  0F1E                     	;# 
  4396  0F1F                     	;# 
  4397  0F20                     	;# 
  4398  0F21                     	;# 
  4399  0F22                     	;# 
  4400  0F23                     	;# 
  4401  0F24                     	;# 
  4402  0F25                     	;# 
  4403  0F26                     	;# 
  4404  0F27                     	;# 
  4405  0F28                     	;# 
  4406  0F29                     	;# 
  4407  0F2A                     	;# 
  4408  0F2B                     	;# 
  4409  0F2C                     	;# 
  4410  0F2D                     	;# 
  4411  0F2E                     	;# 
  4412  0F2F                     	;# 
  4413  0F30                     	;# 
  4414  0F31                     	;# 
  4415  0F32                     	;# 
  4416  0F33                     	;# 
  4417  0F34                     	;# 
  4418  0F35                     	;# 
  4419  0F36                     	;# 
  4420  0F37                     	;# 
  4421  0FE4                     	;# 
  4422  0FE5                     	;# 
  4423  0FE6                     	;# 
  4424  0FE7                     	;# 
  4425  0FE8                     	;# 
  4426  0FE9                     	;# 
  4427  0FEA                     	;# 
  4428  0FEB                     	;# 
  4429  0FED                     	;# 
  4430  0FEE                     	;# 
  4431  0FEF                     	;# 
  4432  0000                     	;# 
  4433  0001                     	;# 
  4434  0002                     	;# 
  4435  0003                     	;# 
  4436  0004                     	;# 
  4437  0005                     	;# 
  4438  0006                     	;# 
  4439  0007                     	;# 
  4440  0008                     	;# 
  4441  0009                     	;# 
  4442  000A                     	;# 
  4443  000B                     	;# 
  4444  000C                     	;# 
  4445  000D                     	;# 
  4446  000E                     	;# 
  4447  0010                     	;# 
  4448  0011                     	;# 
  4449  0012                     	;# 
  4450  0013                     	;# 
  4451  0014                     	;# 
  4452  0015                     	;# 
  4453  0015                     	;# 
  4454  0016                     	;# 
  4455  0016                     	;# 
  4456  0017                     	;# 
  4457  0018                     	;# 
  4458  0019                     	;# 
  4459  0019                     	;# 
  4460  001A                     	;# 
  4461  001B                     	;# 
  4462  001C                     	;# 
  4463  001D                     	;# 
  4464  001E                     	;# 
  4465  001F                     	;# 
  4466  008C                     	;# 
  4467  008D                     	;# 
  4468  008E                     	;# 
  4469  0090                     	;# 
  4470  0091                     	;# 
  4471  0092                     	;# 
  4472  0093                     	;# 
  4473  0094                     	;# 
  4474  0097                     	;# 
  4475  009B                     	;# 
  4476  009B                     	;# 
  4477  009C                     	;# 
  4478  009D                     	;# 
  4479  009E                     	;# 
  4480  009F                     	;# 
  4481  010C                     	;# 
  4482  010D                     	;# 
  4483  010E                     	;# 
  4484  0111                     	;# 
  4485  0112                     	;# 
  4486  0113                     	;# 
  4487  0114                     	;# 
  4488  0115                     	;# 
  4489  0116                     	;# 
  4490  0117                     	;# 
  4491  0118                     	;# 
  4492  0119                     	;# 
  4493  018C                     	;# 
  4494  018D                     	;# 
  4495  018E                     	;# 
  4496  0197                     	;# 
  4497  0199                     	;# 
  4498  0199                     	;# 
  4499  0199                     	;# 
  4500  019A                     	;# 
  4501  019A                     	;# 
  4502  019A                     	;# 
  4503  019B                     	;# 
  4504  019B                     	;# 
  4505  019B                     	;# 
  4506  019B                     	;# 
  4507  019B                     	;# 
  4508  019C                     	;# 
  4509  019C                     	;# 
  4510  019C                     	;# 
  4511  019D                     	;# 
  4512  019D                     	;# 
  4513  019D                     	;# 
  4514  019E                     	;# 
  4515  019E                     	;# 
  4516  019E                     	;# 
  4517  019F                     	;# 
  4518  019F                     	;# 
  4519  019F                     	;# 
  4520  019F                     	;# 
  4521  019F                     	;# 
  4522  020C                     	;# 
  4523  020D                     	;# 
  4524  020E                     	;# 
  4525  0211                     	;# 
  4526  0211                     	;# 
  4527  0212                     	;# 
  4528  0212                     	;# 
  4529  0213                     	;# 
  4530  0213                     	;# 
  4531  0214                     	;# 
  4532  0214                     	;# 
  4533  0215                     	;# 
  4534  0215                     	;# 
  4535  0215                     	;# 
  4536  0215                     	;# 
  4537  0216                     	;# 
  4538  0216                     	;# 
  4539  0217                     	;# 
  4540  0217                     	;# 
  4541  0219                     	;# 
  4542  021A                     	;# 
  4543  021B                     	;# 
  4544  021C                     	;# 
  4545  021D                     	;# 
  4546  021D                     	;# 
  4547  021E                     	;# 
  4548  021F                     	;# 
  4549  028C                     	;# 
  4550  028D                     	;# 
  4551  028E                     	;# 
  4552  0291                     	;# 
  4553  0291                     	;# 
  4554  0292                     	;# 
  4555  0293                     	;# 
  4556  0294                     	;# 
  4557  0295                     	;# 
  4558  0295                     	;# 
  4559  0296                     	;# 
  4560  0297                     	;# 
  4561  0298                     	;# 
  4562  029F                     	;# 
  4563  030C                     	;# 
  4564  030D                     	;# 
  4565  030E                     	;# 
  4566  0311                     	;# 
  4567  0311                     	;# 
  4568  0312                     	;# 
  4569  0313                     	;# 
  4570  0314                     	;# 
  4571  0315                     	;# 
  4572  0315                     	;# 
  4573  0316                     	;# 
  4574  0317                     	;# 
  4575  0318                     	;# 
  4576  038C                     	;# 
  4577  038D                     	;# 
  4578  038E                     	;# 
  4579  0391                     	;# 
  4580  0392                     	;# 
  4581  0393                     	;# 
  4582  0394                     	;# 
  4583  0395                     	;# 
  4584  0396                     	;# 
  4585  0397                     	;# 
  4586  0398                     	;# 
  4587  0399                     	;# 
  4588  039A                     	;# 
  4589  039C                     	;# 
  4590  039D                     	;# 
  4591  039E                     	;# 
  4592  039F                     	;# 
  4593  0411                     	;# 
  4594  0411                     	;# 
  4595  0412                     	;# 
  4596  0413                     	;# 
  4597  0414                     	;# 
  4598  0415                     	;# 
  4599  0416                     	;# 
  4600  0417                     	;# 
  4601  0418                     	;# 
  4602  0418                     	;# 
  4603  0419                     	;# 
  4604  041A                     	;# 
  4605  041B                     	;# 
  4606  041C                     	;# 
  4607  041D                     	;# 
  4608  041E                     	;# 
  4609  041F                     	;# 
  4610  0498                     	;# 
  4611  0498                     	;# 
  4612  0499                     	;# 
  4613  049A                     	;# 
  4614  049B                     	;# 
  4615  049B                     	;# 
  4616  049C                     	;# 
  4617  049D                     	;# 
  4618  049E                     	;# 
  4619  049F                     	;# 
  4620  0617                     	;# 
  4621  0618                     	;# 
  4622  0619                     	;# 
  4623  0619                     	;# 
  4624  061A                     	;# 
  4625  061B                     	;# 
  4626  061C                     	;# 
  4627  061C                     	;# 
  4628  061F                     	;# 
  4629  0691                     	;# 
  4630  0692                     	;# 
  4631  0693                     	;# 
  4632  0694                     	;# 
  4633  0695                     	;# 
  4634  0696                     	;# 
  4635  0697                     	;# 
  4636  0698                     	;# 
  4637  0699                     	;# 
  4638  0711                     	;# 
  4639  0712                     	;# 
  4640  0713                     	;# 
  4641  0714                     	;# 
  4642  0715                     	;# 
  4643  0716                     	;# 
  4644  0717                     	;# 
  4645  0718                     	;# 
  4646  0719                     	;# 
  4647  0891                     	;# 
  4648  0891                     	;# 
  4649  0891                     	;# 
  4650  0891                     	;# 
  4651  0891                     	;# 
  4652  0891                     	;# 
  4653  0892                     	;# 
  4654  0892                     	;# 
  4655  0892                     	;# 
  4656  0893                     	;# 
  4657  0893                     	;# 
  4658  0893                     	;# 
  4659  0893                     	;# 
  4660  0893                     	;# 
  4661  0893                     	;# 
  4662  0894                     	;# 
  4663  0894                     	;# 
  4664  0894                     	;# 
  4665  0895                     	;# 
  4666  0895                     	;# 
  4667  0895                     	;# 
  4668  0896                     	;# 
  4669  0896                     	;# 
  4670  0896                     	;# 
  4671  089B                     	;# 
  4672  0911                     	;# 
  4673  0912                     	;# 
  4674  0913                     	;# 
  4675  0914                     	;# 
  4676  0915                     	;# 
  4677  0916                     	;# 
  4678  0918                     	;# 
  4679  0919                     	;# 
  4680  091A                     	;# 
  4681  091B                     	;# 
  4682  091C                     	;# 
  4683  091D                     	;# 
  4684  091E                     	;# 
  4685  091F                     	;# 
  4686  0E0F                     	;# 
  4687  0E10                     	;# 
  4688  0E11                     	;# 
  4689  0E12                     	;# 
  4690  0E13                     	;# 
  4691  0E14                     	;# 
  4692  0E15                     	;# 
  4693  0E16                     	;# 
  4694  0E17                     	;# 
  4695  0E18                     	;# 
  4696  0E19                     	;# 
  4697  0E1A                     	;# 
  4698  0E1B                     	;# 
  4699  0E1C                     	;# 
  4700  0E1D                     	;# 
  4701  0E1E                     	;# 
  4702  0E1F                     	;# 
  4703  0E20                     	;# 
  4704  0E21                     	;# 
  4705  0E22                     	;# 
  4706  0E24                     	;# 
  4707  0E25                     	;# 
  4708  0E28                     	;# 
  4709  0E29                     	;# 
  4710  0E2A                     	;# 
  4711  0E2B                     	;# 
  4712  0E2C                     	;# 
  4713  0E2D                     	;# 
  4714  0E2E                     	;# 
  4715  0E2F                     	;# 
  4716  0E90                     	;# 
  4717  0E91                     	;# 
  4718  0E92                     	;# 
  4719  0E94                     	;# 
  4720  0E95                     	;# 
  4721  0E9C                     	;# 
  4722  0E9D                     	;# 
  4723  0E9E                     	;# 
  4724  0E9F                     	;# 
  4725  0EA0                     	;# 
  4726  0EA1                     	;# 
  4727  0EA2                     	;# 
  4728  0EA3                     	;# 
  4729  0EA4                     	;# 
  4730  0EA5                     	;# 
  4731  0EA6                     	;# 
  4732  0EA7                     	;# 
  4733  0F0F                     	;# 
  4734  0F10                     	;# 
  4735  0F11                     	;# 
  4736  0F12                     	;# 
  4737  0F13                     	;# 
  4738  0F14                     	;# 
  4739  0F15                     	;# 
  4740  0F16                     	;# 
  4741  0F17                     	;# 
  4742  0F18                     	;# 
  4743  0F19                     	;# 
  4744  0F1A                     	;# 
  4745  0F1B                     	;# 
  4746  0F1C                     	;# 
  4747  0F1D                     	;# 
  4748  0F1E                     	;# 
  4749  0F1F                     	;# 
  4750  0F20                     	;# 
  4751  0F21                     	;# 
  4752  0F22                     	;# 
  4753  0F23                     	;# 
  4754  0F24                     	;# 
  4755  0F25                     	;# 
  4756  0F26                     	;# 
  4757  0F27                     	;# 
  4758  0F28                     	;# 
  4759  0F29                     	;# 
  4760  0F2A                     	;# 
  4761  0F2B                     	;# 
  4762  0F2C                     	;# 
  4763  0F2D                     	;# 
  4764  0F2E                     	;# 
  4765  0F2F                     	;# 
  4766  0F30                     	;# 
  4767  0F31                     	;# 
  4768  0F32                     	;# 
  4769  0F33                     	;# 
  4770  0F34                     	;# 
  4771  0F35                     	;# 
  4772  0F36                     	;# 
  4773  0F37                     	;# 
  4774  0FE4                     	;# 
  4775  0FE5                     	;# 
  4776  0FE6                     	;# 
  4777  0FE7                     	;# 
  4778  0FE8                     	;# 
  4779  0FE9                     	;# 
  4780  0FEA                     	;# 
  4781  0FEB                     	;# 
  4782  0FED                     	;# 
  4783  0FEE                     	;# 
  4784  0FEF                     	;# 
  4785  0000                     	;# 
  4786  0001                     	;# 
  4787  0002                     	;# 
  4788  0003                     	;# 
  4789  0004                     	;# 
  4790  0005                     	;# 
  4791  0006                     	;# 
  4792  0007                     	;# 
  4793  0008                     	;# 
  4794  0009                     	;# 
  4795  000A                     	;# 
  4796  000B                     	;# 
  4797  000C                     	;# 
  4798  000D                     	;# 
  4799  000E                     	;# 
  4800  0010                     	;# 
  4801  0011                     	;# 
  4802  0012                     	;# 
  4803  0013                     	;# 
  4804  0014                     	;# 
  4805  0015                     	;# 
  4806  0015                     	;# 
  4807  0016                     	;# 
  4808  0016                     	;# 
  4809  0017                     	;# 
  4810  0018                     	;# 
  4811  0019                     	;# 
  4812  0019                     	;# 
  4813  001A                     	;# 
  4814  001B                     	;# 
  4815  001C                     	;# 
  4816  001D                     	;# 
  4817  001E                     	;# 
  4818  001F                     	;# 
  4819  008C                     	;# 
  4820  008D                     	;# 
  4821  008E                     	;# 
  4822  0090                     	;# 
  4823  0091                     	;# 
  4824  0092                     	;# 
  4825  0093                     	;# 
  4826  0094                     	;# 
  4827  0097                     	;# 
  4828  009B                     	;# 
  4829  009B                     	;# 
  4830  009C                     	;# 
  4831  009D                     	;# 
  4832  009E                     	;# 
  4833  009F                     	;# 
  4834  010C                     	;# 
  4835  010D                     	;# 
  4836  010E                     	;# 
  4837  0111                     	;# 
  4838  0112                     	;# 
  4839  0113                     	;# 
  4840  0114                     	;# 
  4841  0115                     	;# 
  4842  0116                     	;# 
  4843  0117                     	;# 
  4844  0118                     	;# 
  4845  0119                     	;# 
  4846  018C                     	;# 
  4847  018D                     	;# 
  4848  018E                     	;# 
  4849  0197                     	;# 
  4850  0199                     	;# 
  4851  0199                     	;# 
  4852  0199                     	;# 
  4853  019A                     	;# 
  4854  019A                     	;# 
  4855  019A                     	;# 
  4856  019B                     	;# 
  4857  019B                     	;# 
  4858  019B                     	;# 
  4859  019B                     	;# 
  4860  019B                     	;# 
  4861  019C                     	;# 
  4862  019C                     	;# 
  4863  019C                     	;# 
  4864  019D                     	;# 
  4865  019D                     	;# 
  4866  019D                     	;# 
  4867  019E                     	;# 
  4868  019E                     	;# 
  4869  019E                     	;# 
  4870  019F                     	;# 
  4871  019F                     	;# 
  4872  019F                     	;# 
  4873  019F                     	;# 
  4874  019F                     	;# 
  4875  020C                     	;# 
  4876  020D                     	;# 
  4877  020E                     	;# 
  4878  0211                     	;# 
  4879  0211                     	;# 
  4880  0212                     	;# 
  4881  0212                     	;# 
  4882  0213                     	;# 
  4883  0213                     	;# 
  4884  0214                     	;# 
  4885  0214                     	;# 
  4886  0215                     	;# 
  4887  0215                     	;# 
  4888  0215                     	;# 
  4889  0215                     	;# 
  4890  0216                     	;# 
  4891  0216                     	;# 
  4892  0217                     	;# 
  4893  0217                     	;# 
  4894  0219                     	;# 
  4895  021A                     	;# 
  4896  021B                     	;# 
  4897  021C                     	;# 
  4898  021D                     	;# 
  4899  021D                     	;# 
  4900  021E                     	;# 
  4901  021F                     	;# 
  4902  028C                     	;# 
  4903  028D                     	;# 
  4904  028E                     	;# 
  4905  0291                     	;# 
  4906  0291                     	;# 
  4907  0292                     	;# 
  4908  0293                     	;# 
  4909  0294                     	;# 
  4910  0295                     	;# 
  4911  0295                     	;# 
  4912  0296                     	;# 
  4913  0297                     	;# 
  4914  0298                     	;# 
  4915  029F                     	;# 
  4916  030C                     	;# 
  4917  030D                     	;# 
  4918  030E                     	;# 
  4919  0311                     	;# 
  4920  0311                     	;# 
  4921  0312                     	;# 
  4922  0313                     	;# 
  4923  0314                     	;# 
  4924  0315                     	;# 
  4925  0315                     	;# 
  4926  0316                     	;# 
  4927  0317                     	;# 
  4928  0318                     	;# 
  4929  038C                     	;# 
  4930  038D                     	;# 
  4931  038E                     	;# 
  4932  0391                     	;# 
  4933  0392                     	;# 
  4934  0393                     	;# 
  4935  0394                     	;# 
  4936  0395                     	;# 
  4937  0396                     	;# 
  4938  0397                     	;# 
  4939  0398                     	;# 
  4940  0399                     	;# 
  4941  039A                     	;# 
  4942  039C                     	;# 
  4943  039D                     	;# 
  4944  039E                     	;# 
  4945  039F                     	;# 
  4946  0411                     	;# 
  4947  0411                     	;# 
  4948  0412                     	;# 
  4949  0413                     	;# 
  4950  0414                     	;# 
  4951  0415                     	;# 
  4952  0416                     	;# 
  4953  0417                     	;# 
  4954  0418                     	;# 
  4955  0418                     	;# 
  4956  0419                     	;# 
  4957  041A                     	;# 
  4958  041B                     	;# 
  4959  041C                     	;# 
  4960  041D                     	;# 
  4961  041E                     	;# 
  4962  041F                     	;# 
  4963  0498                     	;# 
  4964  0498                     	;# 
  4965  0499                     	;# 
  4966  049A                     	;# 
  4967  049B                     	;# 
  4968  049B                     	;# 
  4969  049C                     	;# 
  4970  049D                     	;# 
  4971  049E                     	;# 
  4972  049F                     	;# 
  4973  0617                     	;# 
  4974  0618                     	;# 
  4975  0619                     	;# 
  4976  0619                     	;# 
  4977  061A                     	;# 
  4978  061B                     	;# 
  4979  061C                     	;# 
  4980  061C                     	;# 
  4981  061F                     	;# 
  4982  0691                     	;# 
  4983  0692                     	;# 
  4984  0693                     	;# 
  4985  0694                     	;# 
  4986  0695                     	;# 
  4987  0696                     	;# 
  4988  0697                     	;# 
  4989  0698                     	;# 
  4990  0699                     	;# 
  4991  0711                     	;# 
  4992  0712                     	;# 
  4993  0713                     	;# 
  4994  0714                     	;# 
  4995  0715                     	;# 
  4996  0716                     	;# 
  4997  0717                     	;# 
  4998  0718                     	;# 
  4999  0719                     	;# 
  5000  0891                     	;# 
  5001  0891                     	;# 
  5002  0891                     	;# 
  5003  0891                     	;# 
  5004  0891                     	;# 
  5005  0891                     	;# 
  5006  0892                     	;# 
  5007  0892                     	;# 
  5008  0892                     	;# 
  5009  0893                     	;# 
  5010  0893                     	;# 
  5011  0893                     	;# 
  5012  0893                     	;# 
  5013  0893                     	;# 
  5014  0893                     	;# 
  5015  0894                     	;# 
  5016  0894                     	;# 
  5017  0894                     	;# 
  5018  0895                     	;# 
  5019  0895                     	;# 
  5020  0895                     	;# 
  5021  0896                     	;# 
  5022  0896                     	;# 
  5023  0896                     	;# 
  5024  089B                     	;# 
  5025  0911                     	;# 
  5026  0912                     	;# 
  5027  0913                     	;# 
  5028  0914                     	;# 
  5029  0915                     	;# 
  5030  0916                     	;# 
  5031  0918                     	;# 
  5032  0919                     	;# 
  5033  091A                     	;# 
  5034  091B                     	;# 
  5035  091C                     	;# 
  5036  091D                     	;# 
  5037  091E                     	;# 
  5038  091F                     	;# 
  5039  0E0F                     	;# 
  5040  0E10                     	;# 
  5041  0E11                     	;# 
  5042  0E12                     	;# 
  5043  0E13                     	;# 
  5044  0E14                     	;# 
  5045  0E15                     	;# 
  5046  0E16                     	;# 
  5047  0E17                     	;# 
  5048  0E18                     	;# 
  5049  0E19                     	;# 
  5050  0E1A                     	;# 
  5051  0E1B                     	;# 
  5052  0E1C                     	;# 
  5053  0E1D                     	;# 
  5054  0E1E                     	;# 
  5055  0E1F                     	;# 
  5056  0E20                     	;# 
  5057  0E21                     	;# 
  5058  0E22                     	;# 
  5059  0E24                     	;# 
  5060  0E25                     	;# 
  5061  0E28                     	;# 
  5062  0E29                     	;# 
  5063  0E2A                     	;# 
  5064  0E2B                     	;# 
  5065  0E2C                     	;# 
  5066  0E2D                     	;# 
  5067  0E2E                     	;# 
  5068  0E2F                     	;# 
  5069  0E90                     	;# 
  5070  0E91                     	;# 
  5071  0E92                     	;# 
  5072  0E94                     	;# 
  5073  0E95                     	;# 
  5074  0E9C                     	;# 
  5075  0E9D                     	;# 
  5076  0E9E                     	;# 
  5077  0E9F                     	;# 
  5078  0EA0                     	;# 
  5079  0EA1                     	;# 
  5080  0EA2                     	;# 
  5081  0EA3                     	;# 
  5082  0EA4                     	;# 
  5083  0EA5                     	;# 
  5084  0EA6                     	;# 
  5085  0EA7                     	;# 
  5086  0F0F                     	;# 
  5087  0F10                     	;# 
  5088  0F11                     	;# 
  5089  0F12                     	;# 
  5090  0F13                     	;# 
  5091  0F14                     	;# 
  5092  0F15                     	;# 
  5093  0F16                     	;# 
  5094  0F17                     	;# 
  5095  0F18                     	;# 
  5096  0F19                     	;# 
  5097  0F1A                     	;# 
  5098  0F1B                     	;# 
  5099  0F1C                     	;# 
  5100  0F1D                     	;# 
  5101  0F1E                     	;# 
  5102  0F1F                     	;# 
  5103  0F20                     	;# 
  5104  0F21                     	;# 
  5105  0F22                     	;# 
  5106  0F23                     	;# 
  5107  0F24                     	;# 
  5108  0F25                     	;# 
  5109  0F26                     	;# 
  5110  0F27                     	;# 
  5111  0F28                     	;# 
  5112  0F29                     	;# 
  5113  0F2A                     	;# 
  5114  0F2B                     	;# 
  5115  0F2C                     	;# 
  5116  0F2D                     	;# 
  5117  0F2E                     	;# 
  5118  0F2F                     	;# 
  5119  0F30                     	;# 
  5120  0F31                     	;# 
  5121  0F32                     	;# 
  5122  0F33                     	;# 
  5123  0F34                     	;# 
  5124  0F35                     	;# 
  5125  0F36                     	;# 
  5126  0F37                     	;# 
  5127  0FE4                     	;# 
  5128  0FE5                     	;# 
  5129  0FE6                     	;# 
  5130  0FE7                     	;# 
  5131  0FE8                     	;# 
  5132  0FE9                     	;# 
  5133  0FEA                     	;# 
  5134  0FEB                     	;# 
  5135  0FED                     	;# 
  5136  0FEE                     	;# 
  5137  0FEF                     	;# 
  5138                           
  5139                           	psect	idataBANK1
  5140  0800                     __pidataBANK1:	
  5141                           
  5142                           ;initializer for _on
  5143  0800  3401               	retlw	1
  5144                           
  5145                           	psect	idataBANK2
  5146  0002                     __pidataBANK2:	
  5147                           
  5148                           ;initializer for _val
  5149  0002  3404               	retlw	4
  5150                           
  5151                           ;initializer for _start
  5152  0003  3401               	retlw	1
  5153                           
  5154                           	psect	idataBANK3
  5155  11CF                     __pidataBANK3:	
  5156                           
  5157                           ;initializer for _names
  5158  11CF  343D               	retlw	low (STR_1| (0+32768))
  5159  11D0  3498               	retlw	high (STR_1| (0+32768))
  5160  11D1  3430               	retlw	low (STR_2| (0+32768))
  5161  11D2  3498               	retlw	high (STR_2| (0+32768))
  5162  11D3  3420               	retlw	low (STR_3| (0+32768))
  5163  11D4  3498               	retlw	high (STR_3| (0+32768))
  5164  11D5  3449               	retlw	low (STR_4| (0+32768))
  5165  11D6  3498               	retlw	high (STR_4| (0+32768))
  5166                           
  5167                           	psect	stringtext1
  5168  1800                     __pstringtext1:	
  5169  1800                     _fsmStateTable:	
  5170  1800  3460               	retlw	low _do_I2C_IDLE
  5171  1801  3411               	retlw	high _do_I2C_IDLE
  5172  1802  34A7               	retlw	low _do_I2C_SEND_ADR_READ
  5173  1803  3411               	retlw	high _do_I2C_SEND_ADR_READ
  5174  1804  348A               	retlw	low _do_I2C_SEND_ADR_WRITE
  5175  1805  3411               	retlw	high _do_I2C_SEND_ADR_WRITE
  5176  1806  34BB               	retlw	low _do_I2C_TX
  5177  1807  3408               	retlw	high _do_I2C_TX
  5178  1808  34BA               	retlw	low _do_I2C_RX
  5179  1809  3417               	retlw	high _do_I2C_RX
  5180  180A  3465               	retlw	low _do_I2C_RCEN
  5181  180B  3411               	retlw	high _do_I2C_RCEN
  5182  180C  34CF               	retlw	low _do_I2C_TX_EMPTY
  5183  180D  3407               	retlw	high _do_I2C_TX_EMPTY
  5184  180E  3433               	retlw	low _do_I2C_SEND_RESTART_READ
  5185  180F  3411               	retlw	high _do_I2C_SEND_RESTART_READ
  5186  1810  3437               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5187  1811  3411               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5188  1812  343B               	retlw	low _do_I2C_SEND_RESTART
  5189  1813  3411               	retlw	high _do_I2C_SEND_RESTART
  5190  1814  343F               	retlw	low _do_I2C_SEND_STOP
  5191  1815  3411               	retlw	high _do_I2C_SEND_STOP
  5192  1816  3443               	retlw	low _do_I2C_DO_ACK
  5193  1817  3411               	retlw	high _do_I2C_DO_ACK
  5194  1818  3447               	retlw	low _do_I2C_DO_NACK_STOP
  5195  1819  3411               	retlw	high _do_I2C_DO_NACK_STOP
  5196  181A  344B               	retlw	low _do_I2C_DO_NACK_RESTART
  5197  181B  3411               	retlw	high _do_I2C_DO_NACK_RESTART
  5198  181C  3483               	retlw	low _do_I2C_RESET
  5199  181D  3411               	retlw	high _do_I2C_RESET
  5200  181E  348A               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5201  181F  3415               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5202  1820                     __end_of_fsmStateTable:	
>>>>>>> b288aef trying to integrate UART
  5203                           
<<<<<<< Upstream, based on origin/master
  5204  0070                     ?_i2c1_driver_sendNACK:	
  5205                           ; 1 bytes @ 0x0
  5206                           
  5207  0070                     ??_i2c1_driver_isNACK:	
  5208                           ; 1 bytes @ 0x0
  5209                           
  5210  0070                     ?_i2c1_driver_getRXData:	
  5211                           ; 1 bytes @ 0x0
  5212                           
  5213  0070                     ?_mssp1_setIRQ:	
  5214                           ; 1 bytes @ 0x0
  5215                           
  5216  0070                     ??_mssp1_setIRQ:	
  5217                           ; 1 bytes @ 0x0
  5218                           
  5219  0070                     ?_i2c1_driver_clearBusCollision:	
  5220                           ; 1 bytes @ 0x0
  5221                           
  5222  0070                     ??_i2c1_driver_clearBusCollision:	
  5223                           ; 1 bytes @ 0x0
  5224                           
  5225  0070                     ?_PIN_MANAGER_IOC:	
  5226                           ; 1 bytes @ 0x0
  5227                           
  5228  0070                     ??_PIN_MANAGER_IOC:	
  5229                           ; 1 bytes @ 0x0
  5230                           
  5231  0070                     ?_PMD_Initialize:	
  5232                           ; 1 bytes @ 0x0
  5233                           
  5234  0070                     ?_PIN_MANAGER_Initialize:	
  5235                           ; 1 bytes @ 0x0
  5236                           
  5237  0070                     ?_OSCILLATOR_Initialize:	
  5238                           ; 1 bytes @ 0x0
  5239                           
  5240  0070                     ?_WDT_Initialize:	
  5241                           ; 1 bytes @ 0x0
  5242                           
  5243  0070                     ?_SPI2_Initialize:	
  5244                           ; 1 bytes @ 0x0
  5245                           
  5246  0070                     ?_PWM1_Initialize:	
  5247                           ; 1 bytes @ 0x0
  5248                           
  5249  0070                     ?_ADC_Initialize:	
  5250                           ; 1 bytes @ 0x0
  5251                           
  5252  0070                     ?_TMR2_Initialize:	
  5253                           ; 1 bytes @ 0x0
  5254                           
  5255  0070                     ?_Display_Clear:	
  5256                           ; 1 bytes @ 0x0
  5257                           
  5258  0070                     ?_PIR_Sensor:	
  5259                           ; 1 bytes @ 0x0
  5260                           
  5261  0070                     ?_initialize:	
  5262                           ; 1 bytes @ 0x0
  5263                           
  5264  0070                     ?_enableGestureSensor:	
  5265                           ; 1 bytes @ 0x0
  5266                           
  5267  0070                     ?_Get_ADC:	
  5268                           ; 1 bytes @ 0x0
  5269                           
  5270  0070                     ?_isGestureAvailable:	
  5271                           ; 1 bytes @ 0x0
  5272                           
  5273  0070                     ?_handleGesture:	
  5274                           ; 1 bytes @ 0x0
  5275                           
  5276  0070                     ?_PWM_Output_Enable:	
  5277                           ; 1 bytes @ 0x0
  5278                           
  5279  0070                     ?_PWM_Output_Disable:	
  5280                           ; 1 bytes @ 0x0
  5281                           
  5282  0070                     ?_wireReadDataByte:	
  5283                           ; 1 bytes @ 0x0
  5284                           
  5285  0070                     ?_setLEDDrive:	
  5286                           ; 1 bytes @ 0x0
  5287                           
  5288  0070                     ?_setProximityGain:	
  5289                           ; 1 bytes @ 0x0
  5290                           
  5291  0070                     ?_setAmbientLightGain:	
  5292                           ; 1 bytes @ 0x0
  5293                           
  5294  0070                     ?_setProxIntLowThresh:	
  5295                           ; 1 bytes @ 0x0
  5296                           
  5297  0070                     ?_setProxIntHighThresh:	
  5298                           ; 1 bytes @ 0x0
  5299                           
  5300  0070                     ?_setGestureEnterThresh:	
  5301                           ; 1 bytes @ 0x0
  5302                           
  5303  0070                     ?_setGestureExitThresh:	
  5304                           ; 1 bytes @ 0x0
  5305                           
  5306  0070                     ?_setGestureGain:	
  5307                           ; 1 bytes @ 0x0
  5308                           
  5309  0070                     ?_setGestureLEDDrive:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312  0070                     ?_setGestureWaitTime:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315  0070                     ?_setGestureIntEnable:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318  0070                     ?_getMode:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321  0070                     ?_resetGestureParameters:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324  0070                     ?_setLEDBoost:	
  5325                           ; 1 bytes @ 0x0
  5326                           
  5327  0070                     ?_setGestureMode:	
  5328                           ; 1 bytes @ 0x0
  5329                           
  5330  0070                     ?_enablePower:	
  5331                           ; 1 bytes @ 0x0
  5332                           
  5333  0070                     ?_processGestureData:	
  5334                           ; 1 bytes @ 0x0
  5335                           
  5336  0070                     ?_decodeGesture:	
  5337                           ; 1 bytes @ 0x0
  5338                           
  5339  0070                     ?_I2C_Start:	
  5340                           ; 1 bytes @ 0x0
  5341                           
  5342  0070                     ?_I2C_Write_Byte:	
  5343                           ; 1 bytes @ 0x0
  5344                           
  5345  0070                     ?_I2C_ReStart:	
  5346                           ; 1 bytes @ 0x0
=======
  5204                           	psect	nvBANK3
  5205  01EF                     __pnvBANK3:	
  5206  01EF                     _eusartTxBufferRemaining:	
  5207  01EF                     	ds	1
  5208                           
  5209                           	psect	nvBANK4
  5210  0264                     __pnvBANK4:	
  5211  0264                     _EUSART_ErrorHandler:	
  5212  0264                     	ds	2
  5213  0266                     _EUSART_OverrunErrorHandler:	
  5214  0266                     	ds	2
  5215  0268                     _EUSART_FramingErrorHandler:	
  5216  0268                     	ds	2
  5217  026A                     _EUSART_RxDefaultInterruptHandler:	
  5218  026A                     	ds	2
  5219  026C                     _EUSART_TxDefaultInterruptHandler:	
  5220  026C                     	ds	2
  5221  001F                     _T2CONbits	set	31
  5222  001F                     _T2CON	set	31
  5223  001D                     _TMR2	set	29
  5224  001E                     _PR2	set	30
  5225  000E                     _PORTCbits	set	14
  5226  0011                     _PIR1bits	set	17
  5227  000B                     _INTCONbits	set	11
  5228  0010                     _PIR0bits	set	16
  5229  009D                     _ADCON0bits	set	157
  5230  009C                     _ADRESH	set	156
  5231  009B                     _ADRESL	set	155
  5232  009F                     _ADACT	set	159
  5233  009E                     _ADCON1	set	158
  5234  009D                     _ADCON0	set	157
  5235  008E                     _TRISC	set	142
  5236  008D                     _TRISB	set	141
  5237  008C                     _TRISA	set	140
  5238  0097                     _WDTCON	set	151
  5239  0091                     _PIE1bits	set	145
  5240  0090                     _PIE0bits	set	144
  5241  010E                     _LATCbits	set	270
  5242  010E                     _LATC	set	270
  5243  010D                     _LATB	set	269
  5244  010C                     _LATA	set	268
  5245  0199                     _RC1REG	set	409
  5246  019D                     _RC1STAbits	set	413
  5247  019A                     _TX1REG	set	410
  5248  019E                     _TX1STAbits	set	414
  5249  019C                     _SP1BRGH	set	412
  5250  019B                     _SP1BRGL	set	411
  5251  019E                     _TX1STA	set	414
  5252  019D                     _RC1STA	set	413
  5253  019F                     _BAUD1CON	set	415
  5254  019A                     _TXREG1	set	410
  5255  019E                     _TXSTA1bits	set	414
  5256  018C                     _ANSELA	set	396
  5257  018D                     _ANSELB	set	397
  5258  018E                     _ANSELC	set	398
  5259  021C                     _SSP2STATbits	set	540
  5260  0219                     _SSP2BUF	set	537
  5261  021D                     _SSP2CON1bits	set	541
  5262  021A                     _SSP2ADD	set	538
  5263  021D                     _SSP2CON1	set	541
  5264  021C                     _SSP2STAT	set	540
  5265  0214                     _SSP1STATbits	set	532
  5266  0213                     _SSP1MSK	set	531
  5267  0211                     _SSP1BUF	set	529
  5268  0216                     _SSP1CON2bits	set	534
  5269  0212                     _SSP1ADD	set	530
  5270  0216                     _SSP1CON2	set	534
  5271  0215                     _SSP1CON1	set	533
  5272  0214                     _SSP1STAT	set	532
  5273  0215                     _SSP1CON1bits	set	533
  5274  020E                     _WPUC	set	526
  5275  020C                     _WPUA	set	524
  5276  020D                     _WPUB	set	525
  5277  0293                     _CCP1CONbits	set	659
  5278  029F                     _CCPTMRSbits	set	671
  5279  0291                     _CCPR1L	set	657
  5280  0292                     _CCPR1H	set	658
  5281  0293                     _CCP1CON	set	659
  5282  028E                     _ODCONC	set	654
  5283  028D                     _ODCONB	set	653
  5284  028C                     _ODCONA	set	652
  5285  030E                     _SLRCONC	set	782
  5286  030D                     _SLRCONB	set	781
  5287  030C                     _SLRCONA	set	780
  5288  0916                     _PMD5	set	2326
  5289  0915                     _PMD4	set	2325
  5290  0914                     _PMD3	set	2324
  5291  0913                     _PMD2	set	2323
  5292  0912                     _PMD1	set	2322
  5293  0911                     _PMD0	set	2321
  5294  091E                     _OSCTUNE	set	2334
  5295  091F                     _OSCFRQ	set	2335
  5296  091D                     _OSCEN	set	2333
  5297  091B                     _OSCCON3	set	2331
  5298  0919                     _OSCCON1	set	2329
  5299  0E1D                     _SSP2CLKPPS	set	3613
  5300  0E21                     _SSP1DATPPS	set	3617
  5301  0E20                     _SSP1CLKPPS	set	3616
  5302  0E1E                     _SSP2DATPPS	set	3614
  5303  0E24                     _RXPPS	set	3620
  5304  0EA6                     _RC6PPS	set	3750
  5305  0EA5                     _RC5PPS	set	3749
  5306  0EA2                     _RC2PPS	set	3746
  5307  0E9D                     _RB5PPS	set	3741
  5308  0E9F                     _RB7PPS	set	3743
  5309  0E9E                     _RB6PPS	set	3742
  5310                           
  5311                           	psect	stringtext2
  5312  1820                     __pstringtext2:	
  5313  1820                     STR_3:	
  5314  1820  3441               	retlw	65	;'A'
  5315  1821  346C               	retlw	108	;'l'
  5316  1822  3465               	retlw	101	;'e'
  5317  1823  3478               	retlw	120	;'x'
  5318  1824  3461               	retlw	97	;'a'
  5319  1825  346E               	retlw	110	;'n'
  5320  1826  3464               	retlw	100	;'d'
  5321  1827  3472               	retlw	114	;'r'
  5322  1828  3461               	retlw	97	;'a'
  5323  1829  3420               	retlw	32	;' '
  5324  182A  3446               	retlw	70	;'F'
  5325  182B  3479               	retlw	121	;'y'
  5326  182C  3466               	retlw	102	;'f'
  5327  182D  3466               	retlw	102	;'f'
  5328  182E  3465               	retlw	101	;'e'
  5329  182F  3400               	retlw	0
  5330                           
  5331                           	psect	stringtext3
  5332  1830                     __pstringtext3:	
  5333  1830                     STR_2:	
  5334  1830  344E               	retlw	78	;'N'
  5335  1831  346F               	retlw	111	;'o'
  5336  1832  3465               	retlw	101	;'e'
  5337  1833  346C               	retlw	108	;'l'
  5338  1834  346C               	retlw	108	;'l'
  5339  1835  3465               	retlw	101	;'e'
  5340  1836  3420               	retlw	32	;' '
  5341  1837  3443               	retlw	67	;'C'
  5342  1838  3472               	retlw	114	;'r'
  5343  1839  3461               	retlw	97	;'a'
  5344  183A  346E               	retlw	110	;'n'
  5345  183B  3465               	retlw	101	;'e'
  5346  183C  3400               	retlw	0
>>>>>>> b288aef trying to integrate UART
  5347                           
<<<<<<< Upstream, based on origin/master
  5348  0070                     ?_I2C_Read_Byte:	
  5349                           ; 1 bytes @ 0x0
  5350                           
  5351  0070                     ?_I2C_Send_NACK:	
  5352                           ; 1 bytes @ 0x0
  5353                           
  5354  0070                     ?_I2C_Stop:	
  5355                           ; 1 bytes @ 0x0
  5356                           
  5357  0070                     ?_do_I2C_RESET:	
  5358                           ; 1 bytes @ 0x0
  5359                           
  5360  0070                     ??_do_I2C_RESET:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363  0070                     ?_do_I2C_IDLE:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366  0070                     ??_do_I2C_IDLE:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369  0070                     ?_do_I2C_SEND_RESTART_READ:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372  0070                     ??_do_I2C_SEND_RESTART_READ:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381  0070                     ?_do_I2C_SEND_RESTART:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384  0070                     ??_do_I2C_SEND_RESTART:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387  0070                     ?_do_I2C_SEND_STOP:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390  0070                     ??_do_I2C_SEND_STOP:	
  5391                           ; 1 bytes @ 0x0
  5392                           
  5393  0070                     ?_do_I2C_SEND_ADR_READ:	
  5394                           ; 1 bytes @ 0x0
  5395                           
  5396  0070                     ??_do_I2C_SEND_ADR_READ:	
  5397                           ; 1 bytes @ 0x0
  5398                           
  5399  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  5400                           ; 1 bytes @ 0x0
  5401                           
  5402  0070                     ??_do_I2C_SEND_ADR_WRITE:	
  5403                           ; 1 bytes @ 0x0
  5404                           
  5405  0070                     ?_do_I2C_RCEN:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408  0070                     ??_do_I2C_RCEN:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411  0070                     ?_do_I2C_DO_ACK:	
  5412                           ; 1 bytes @ 0x0
  5413                           
  5414  0070                     ??_do_I2C_DO_ACK:	
  5415                           ; 1 bytes @ 0x0
  5416                           
  5417  0070                     ?_do_I2C_DO_NACK_STOP:	
  5418                           ; 1 bytes @ 0x0
  5419                           
  5420  0070                     ??_do_I2C_DO_NACK_STOP:	
  5421                           ; 1 bytes @ 0x0
  5422                           
  5423  0070                     ?_do_I2C_DO_NACK_RESTART:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426  0070                     ??_do_I2C_DO_NACK_RESTART:	
  5427                           ; 1 bytes @ 0x0
  5428                           
  5429  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  5430                           ; 1 bytes @ 0x0
  5431                           
  5432  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  5433                           ; 1 bytes @ 0x0
=======
  5348                           	psect	stringtext4
  5349  183D                     __pstringtext4:	
  5350  183D                     STR_1:	
  5351  183D  344A               	retlw	74	;'J'
  5352  183E  3475               	retlw	117	;'u'
  5353  183F  3473               	retlw	115	;'s'
  5354  1840  3474               	retlw	116	;'t'
  5355  1841  3469               	retlw	105	;'i'
  5356  1842  346E               	retlw	110	;'n'
  5357  1843  3420               	retlw	32	;' '
  5358  1844  3443               	retlw	67	;'C'
  5359  1845  3468               	retlw	104	;'h'
  5360  1846  3461               	retlw	97	;'a'
  5361  1847  346E               	retlw	110	;'n'
  5362  1848  3400               	retlw	0
  5363                           
  5364                           	psect	stringtext5
  5365  1849                     __pstringtext5:	
  5366  1849                     STR_4:	
  5367  1849  344A               	retlw	74	;'J'
  5368  184A  3465               	retlw	101	;'e'
  5369  184B  3466               	retlw	102	;'f'
  5370  184C  3466               	retlw	102	;'f'
  5371  184D  3420               	retlw	32	;' '
  5372  184E  3447               	retlw	71	;'G'
  5373  184F  3465               	retlw	101	;'e'
  5374  1850  3469               	retlw	105	;'i'
  5375  1851  3473               	retlw	115	;'s'
  5376  1852  3473               	retlw	115	;'s'
  5377  1853  3400               	retlw	0
  5378                           
  5379                           	psect	stringtext6
  5380  1854                     __pstringtext6:	
  5381  1854                     STR_5:	
  5382  1854  3425               	retlw	37	;'%'
  5383  1855  3464               	retlw	100	;'d'
  5384  1856  3400               	retlw	0
  5385                           
  5386                           	psect	stringtext7
  5387  0000                     __pstringtext7:	
  5388  1854                     
  5389                           ; #config settings
  5390  0000                     
  5391                           	psect	cinit
  5392  0049                     start_initialization:	
  5393  0049                     __initialization:	
  5394                           
  5395                           ; Initialize objects allocated to BANK1
  5396  0049  0021               	movlb	1	; select bank1
  5397  004A  3188  2000  3180   	fcall	__pidataBANK1	;fetch initializer
  5398  004D  00EF               	movwf	__pdataBANK1& (0+127)
  5399                           
  5400                           ; Initialize objects allocated to BANK2
  5401  004E  0022               	movlb	2	; select bank2
  5402  004F  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  5403  0052  00EE               	movwf	__pdataBANK2& (0+127)
  5404  0053  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  5405  0056  00EF               	movwf	(__pdataBANK2+1)& (0+127)
  5406                           
  5407                           ; Initialize objects allocated to BANK3
  5408  0057  30CF               	movlw	low __pidataBANK3
  5409  0058  0084               	movwf	4
  5410  0059  3091               	movlw	(high __pidataBANK3)| (0+128)
  5411  005A  0085               	movwf	5
  5412  005B  30E7               	movlw	low __pdataBANK3
  5413  005C  0086               	movwf	6
  5414  005D  3001               	movlw	high __pdataBANK3
  5415  005E  0087               	movwf	7
  5416  005F  3008               	movlw	8
  5417  0060  3191  217D  3180   	fcall	init_ram
  5418                           
  5419                           ; Clear objects allocated to COMMON
  5420  0063  01F0               	clrf	__pbssCOMMON& (0+127)
  5421  0064  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  5422  0065  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  5423  0066  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  5424  0067  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  5425  0068  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  5426                           
  5427                           ; Clear objects allocated to BANK1
  5428  0069  30E6               	movlw	low __pbssBANK1
  5429  006A  0084               	movwf	4
  5430  006B  3000               	movlw	high __pbssBANK1
  5431  006C  0085               	movwf	5
  5432  006D  3009               	movlw	9
  5433  006E  3191  2177  3180   	fcall	clear_ram0
>>>>>>> b288aef trying to integrate UART
  5434                           
<<<<<<< Upstream, based on origin/master
  5435  0070                     ?_do_I2C_TX:	
  5436                           ; 1 bytes @ 0x0
  5437                           
  5438  0070                     ??_do_I2C_TX:	
  5439                           ; 1 bytes @ 0x0
  5440                           
  5441  0070                     ?_do_I2C_RX:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444  0070                     ??_do_I2C_RX:	
  5445                           ; 1 bytes @ 0x0
  5446                           
  5447  0070                     ?_do_I2C_TX_EMPTY:	
  5448                           ; 1 bytes @ 0x0
  5449                           
  5450  0070                     ??_do_I2C_TX_EMPTY:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  0070                     ?_INTERRUPT_InterruptManager:	
  5454                           ; 1 bytes @ 0x0
  5455                           
  5456  0070                     ?_SYSTEM_Initialize:	
  5457                           ; 1 bytes @ 0x0
=======
  5435                           ; Clear objects allocated to BANK2
  5436  0071  3060               	movlw	low __pbssBANK2
  5437  0072  0084               	movwf	4
  5438  0073  3001               	movlw	high __pbssBANK2
  5439  0074  0085               	movwf	5
  5440  0075  300E               	movlw	14
  5441  0076  3191  2177  3180   	fcall	clear_ram0
  5442                           
  5443                           ; Clear objects allocated to BANK3
  5444  0079  30A0               	movlw	low __pbssBANK3
  5445  007A  0084               	movwf	4
  5446  007B  3001               	movlw	high __pbssBANK3
  5447  007C  0085               	movwf	5
  5448  007D  3047               	movlw	71
  5449  007E  3191  2177  3180   	fcall	clear_ram0
  5450                           
  5451                           ; Clear objects allocated to BANK4
  5452  0081  3020               	movlw	low __pbssBANK4
  5453  0082  0084               	movwf	4
  5454  0083  3002               	movlw	high __pbssBANK4
  5455  0084  0085               	movwf	5
  5456  0085  3044               	movlw	68
  5457  0086  3191  2177  3180   	fcall	clear_ram0
>>>>>>> b288aef trying to integrate UART
  5458                           
<<<<<<< Upstream, based on origin/master
  5459  0070                     ?_SPI2_Exchange8bit:	
  5460                           ; 1 bytes @ 0x0
  5461                           
  5462  0070                     ?_main:	
  5463                           ; 1 bytes @ 0x0
  5464                           
  5465  0070                     ?_SPI_Write:	
  5466                           ; 1 bytes @ 0x0
  5467                           
  5468  0070                     ?i1_i2c1_driver_restart:	
  5469                           ; 1 bytes @ 0x0
  5470                           
  5471  0070                     ??i1_i2c1_driver_restart:	
  5472                           ; 1 bytes @ 0x0
=======
  5459                           ; Clear objects allocated to BANK5
  5460  0089  30A0               	movlw	low __pbssBANK5
  5461  008A  0084               	movwf	4
  5462  008B  3002               	movlw	high __pbssBANK5
  5463  008C  0085               	movwf	5
  5464  008D  3020               	movlw	32
  5465  008E  3191  2177         	fcall	clear_ram0
  5466  0090                     end_of_initialization:	
  5467                           ;End of C runtime variable initialization code
  5468                           
  5469  0090                     __end_of__initialization:	
  5470  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5471  0091  0020               	movlb	0
  5472  0092  3189  29A9         	ljmp	_main	;jump to C main() function
>>>>>>> b288aef trying to integrate UART
  5473                           
<<<<<<< Upstream, based on origin/master
  5474  0070                     ?i1_i2c1_driver_stop:	
  5475                           ; 1 bytes @ 0x0
  5476                           
  5477  0070                     ??i1_i2c1_driver_stop:	
  5478                           ; 1 bytes @ 0x0
  5479                           
  5480  0070                     ?i1_i2c1_driver_startRX:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483  0070                     ??i1_i2c1_driver_startRX:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486  0070                     ?i1_i2c1_driver_getRXData:	
  5487                           ; 1 bytes @ 0x0
  5488                           
  5489  0070                     ??i1_i2c1_driver_getRXData:	
  5490                           ; 1 bytes @ 0x0
  5491                           
  5492  0070                     ?i1_i2c1_driver_TXData:	
  5493                           ; 1 bytes @ 0x0
  5494                           
  5495  0070                     ??i1_i2c1_driver_TXData:	
  5496                           ; 1 bytes @ 0x0
  5497                           
  5498  0070                     ?i1_i2c1_driver_sendNACK:	
  5499                           ; 1 bytes @ 0x0
  5500                           
  5501  0070                     ??i1_i2c1_driver_sendNACK:	
  5502                           ; 1 bytes @ 0x0
  5503                           
  5504  0070                     returnStop@p:	
  5505                           ; 1 bytes @ 0x0
  5506                           
  5507  0070                     returnReset@p:	
  5508                           ; 1 bytes @ 0x0
  5509                           
  5510  0070                     i1i2c1_driver_TXData@d:	
  5511                           ; 1 bytes @ 0x0
  5512                           
  5513                           
  5514                           ; 1 bytes @ 0x0
  5515  0070                     	ds	1
  5516  0071                     ??_returnStop:	
  5517  0071                     ??_returnReset:	
  5518                           ; 1 bytes @ 0x1
  5519                           
  5520                           
  5521                           ; 1 bytes @ 0x1
  5522  0071                     	ds	2
  5523  0073                     ??_i2c_ISR:	
  5524                           
  5525                           ; 1 bytes @ 0x3
  5526  0073                     	ds	3
  5527  0076                     ??_INTERRUPT_InterruptManager:	
  5528                           
  5529                           	psect	cstackBANK0
  5530  0020                     __pcstackBANK0:	
  5531                           ; 1 bytes @ 0x6
  5532                           
  5533  0020                     ??_i2c1_driver_open:	
  5534  0020                     ??_i2c1_driver_start:	
  5535                           ; 1 bytes @ 0x0
  5536                           
  5537  0020                     ??_i2c1_driver_restart:	
  5538                           ; 1 bytes @ 0x0
  5539                           
  5540  0020                     ??_i2c1_driver_stop:	
  5541                           ; 1 bytes @ 0x0
  5542                           
  5543  0020                     ??_i2c1_driver_TXData:	
  5544                           ; 1 bytes @ 0x0
  5545                           
  5546  0020                     ??_i2c1_driver_startRX:	
  5547                           ; 1 bytes @ 0x0
  5548                           
  5549  0020                     ??_i2c1_driver_sendNACK:	
  5550                           ; 1 bytes @ 0x0
  5551                           
  5552  0020                     ??_i2c1_driver_getRXData:	
  5553                           ; 1 bytes @ 0x0
  5554                           
  5555  0020                     ??_PMD_Initialize:	
  5556                           ; 1 bytes @ 0x0
  5557                           
  5558  0020                     ??_PIN_MANAGER_Initialize:	
  5559                           ; 1 bytes @ 0x0
  5560                           
  5561  0020                     ??_OSCILLATOR_Initialize:	
  5562                           ; 1 bytes @ 0x0
  5563                           
  5564  0020                     ??_WDT_Initialize:	
  5565                           ; 1 bytes @ 0x0
  5566                           
  5567  0020                     ??_SPI2_Initialize:	
  5568                           ; 1 bytes @ 0x0
  5569                           
  5570  0020                     ??_PWM1_Initialize:	
  5571                           ; 1 bytes @ 0x0
  5572                           
  5573  0020                     ??_ADC_Initialize:	
  5574                           ; 1 bytes @ 0x0
=======
  5474                           	psect	bssCOMMON
  5475  0070                     __pbssCOMMON:	
  5476  0070                     _gesture_lr_delta_:	
  5477  0070                     	ds	2
  5478  0072                     _gesture_ud_delta_:	
  5479  0072                     	ds	2
  5480  0074                     _eusartRxTail:	
  5481  0074                     	ds	1
  5482  0075                     _eusartRxHead:	
  5483  0075                     	ds	1
  5484                           
  5485                           	psect	bssBANK1
  5486  00E6                     __pbssBANK1:	
  5487  00E6                     _name:	
  5488  00E6                     	ds	2
  5489  00E8                     _gesture_lr_count_:	
  5490  00E8                     	ds	2
  5491  00EA                     _gesture_ud_count_:	
  5492  00EA                     	ds	2
  5493  00EC                     _eusartTxTail:	
  5494  00EC                     	ds	1
  5495  00ED                     _eusartTxHead:	
  5496  00ED                     	ds	1
  5497  00EE                     _adcResult:	
  5498  00EE                     	ds	1
  5499                           
  5500                           	psect	dataBANK1
  5501  00EF                     __pdataBANK1:	
  5502  00EF                     _on:	
  5503  00EF                     	ds	1
  5504                           
  5505                           	psect	bssBANK2
  5506  0160                     __pbssBANK2:	
  5507  0160                     _prec:	
  5508  0160                     	ds	2
  5509  0162                     _flags:	
  5510  0162                     	ds	2
  5511  0164                     _brightness:	
  5512  0164                     	ds	2
  5513  0166                     _eusartRxLastError:	
  5514  0166                     	ds	1
  5515  0167                     _eusartRxCount:	
  5516  0167                     	ds	1
  5517  0168                     _b_i2c_error_flag:	
  5518  0168                     	ds	1
  5519  0169                     _handleGestureFlag:	
  5520  0169                     	ds	1
  5521  016A                     _state:	
  5522  016A                     	ds	1
  5523  016B                     _prox:	
  5524  016B                     	ds	1
  5525  016C                     _printed:	
  5526  016C                     	ds	1
  5527  016D                     _button:	
  5528  016D                     	ds	1
  5529                           
  5530                           	psect	dataBANK2
  5531  016E                     __pdataBANK2:	
  5532  016E                     _val:	
  5533  016E                     	ds	1
  5534  016F                     _start:	
  5535  016F                     	ds	1
  5536                           
  5537                           	psect	bssBANK3
  5538  01A0                     __pbssBANK3:	
  5539  01A0                     _i2c_status:	
  5540  01A0                     	ds	29
  5541  01BD                     _eusartRxStatusBuffer:	
  5542  01BD                     	ds	8
  5543  01C5                     _eusartRxBuffer:	
  5544  01C5                     	ds	8
  5545  01CD                     _eusartTxBuffer:	
  5546  01CD                     	ds	8
  5547  01D5                     _nout:	
  5548  01D5                     	ds	2
  5549  01D7                     _width:	
  5550  01D7                     	ds	2
  5551  01D9                     _adcResult2:	
  5552  01D9                     	ds	2
  5553  01DB                     _gesture_motion_:	
  5554  01DB                     	ds	2
  5555  01DD                     _gesture_state_:	
  5556  01DD                     	ds	2
  5557  01DF                     _gesture_far_count_:	
  5558  01DF                     	ds	2
  5559  01E1                     _gesture_near_count_:	
  5560  01E1                     	ds	2
  5561  01E3                     _i2c1_driver_i2cISR:	
  5562  01E3                     	ds	2
  5563  01E5                     _i2c1_driver_busCollisionISR:	
  5564  01E5                     	ds	2
  5565                           
  5566                           	psect	dataBANK3
  5567  01E7                     __pdataBANK3:	
  5568  01E7                     _names:	
  5569  01E7                     	ds	8
  5570                           
  5571                           	psect	bssBANK4
  5572  0220                     __pbssBANK4:	
  5573  0220                     _gesture_data_:	
  5574  0220                     	ds	68
>>>>>>> b288aef trying to integrate UART
  5575                           
<<<<<<< Upstream, based on origin/master
  5576  0020                     ??_TMR2_Initialize:	
  5577                           ; 1 bytes @ 0x0
  5578                           
  5579  0020                     ??_PIR_Sensor:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582  0020                     ??_PWM_Output_Enable:	
  5583                           ; 1 bytes @ 0x0
  5584                           
  5585  0020                     ??_PWM_Output_Disable:	
  5586                           ; 1 bytes @ 0x0
  5587                           
  5588  0020                     ??_resetGestureParameters:	
  5589                           ; 1 bytes @ 0x0
=======
  5576                           	psect	bssBANK5
  5577  02A0                     __pbssBANK5:	
  5578  02A0                     _dbuf:	
  5579  02A0                     	ds	32
  5580                           
  5581                           	psect	inittext
  5582  117D                     init_ram:	
  5583  117D  00FE               	movwf	126
  5584  117E                     initloop:	
  5585  117E  0012               	moviw fsr0++
  5586  117F  001E               	movwi fsr1++
  5587  1180  0BFE               	decfsz	126,f
  5588  1181  297E               	goto	initloop
  5589  1182  3400               	retlw	0
>>>>>>> b288aef trying to integrate UART
  5590                           
<<<<<<< Upstream, based on origin/master
  5591  0020                     ??_decodeGesture:	
  5592                           ; 1 bytes @ 0x0
  5593                           
  5594  0020                     ??_I2C_Start:	
  5595                           ; 1 bytes @ 0x0
  5596                           
  5597  0020                     ??_I2C_ReStart:	
  5598                           ; 1 bytes @ 0x0
  5599                           
  5600  0020                     ??_I2C_Send_NACK:	
  5601                           ; 1 bytes @ 0x0
  5602                           
  5603  0020                     ??_I2C_Stop:	
  5604                           ; 1 bytes @ 0x0
  5605                           
  5606  0020                     ??_SYSTEM_Initialize:	
  5607                           ; 1 bytes @ 0x0
  5608                           
  5609  0020                     ??_i2c1_driver_isBufferFull:	
  5610                           ; 1 bytes @ 0x0
  5611                           
  5612  0020                     ??_SPI2_Exchange8bit:	
  5613                           ; 1 bytes @ 0x0
  5614                           
  5615  0020                     ?_strlen:	
  5616                           ; 1 bytes @ 0x0
=======
  5591                           	psect	clrtext
  5592  1177                     clear_ram0:	
  5593                           ;	Called with FSR0 containing the base address, and
  5594                           ;	WREG with the size to clear
  5595                           
  5596  1177  0064               	clrwdt	;clear the watchdog before getting into this loop
  5597  1178                     clrloop0:	
  5598  1178  0180               	clrf	0	;clear RAM location pointed to by FSR
  5599  1179  3101               	addfsr 0,1
  5600  117A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5601  117B  2978               	goto	clrloop0	;have we reached the end yet?
  5602  117C  3400               	retlw	0	;all done for this memory range, return
  5603                           
  5604                           	psect	cstackBANK2
  5605  0120                     __pcstackBANK2:	
  5606  0120                     readGesture@fifo_data:	
  5607                           
  5608                           ; 64 bytes @ 0x0
  5609  0120                     	ds	64
  5610                           
  5611                           	psect	cstackBANK1
  5612  00A0                     __pcstackBANK1:	
  5613  00A0                     vfprintf@fp:	
  5614  00A0                     readGesture@fifo_data2:	
  5615                           ; 1 bytes @ 0x0
  5616                           
>>>>>>> b288aef trying to integrate UART
  5617                           
<<<<<<< Upstream, based on origin/master
  5618  0020                     ?_ADC_GetConversion:	
  5619                           ; 2 bytes @ 0x0
  5620                           
  5621  0020                     ?___wmul:	
  5622                           ; 2 bytes @ 0x0
  5623                           
  5624  0020                     i2c1_driver_TXData@d:	
  5625                           ; 2 bytes @ 0x0
  5626                           
  5627  0020                     SPI2_Exchange8bit@data:	
  5628                           ; 1 bytes @ 0x0
  5629                           
  5630  0020                     ___wmul@multiplier:	
  5631                           ; 1 bytes @ 0x0
=======
  5618                           ; 64 bytes @ 0x0
  5619  00A0                     	ds	1
  5620  00A1                     vfprintf@cfmt:	
  5621                           
  5622                           ; 2 bytes @ 0x1
  5623  00A1                     	ds	2
  5624  00A3                     ?_sprintf:	
  5625  00A3                     sprintf@fmt:	
  5626                           ; 2 bytes @ 0x3
  5627                           
  5628                           
  5629                           ; 2 bytes @ 0x3
  5630  00A3                     	ds	6
  5631  00A9                     sprintf@ap:	
>>>>>>> b288aef trying to integrate UART
  5632                           
<<<<<<< Upstream, based on origin/master
  5633  0020                     strlen@s:	
  5634                           ; 2 bytes @ 0x0
  5635                           
  5636                           
  5637                           ; 2 bytes @ 0x0
  5638  0020                     	ds	1
  5639  0021                     ??_I2C_Write_Byte:	
  5640  0021                     ??_I2C_Read_Byte:	
  5641                           ; 1 bytes @ 0x1
  5642                           
  5643  0021                     ??_SPI_Write:	
  5644                           ; 1 bytes @ 0x1
  5645                           
  5646                           
  5647                           ; 1 bytes @ 0x1
  5648  0021                     	ds	1
  5649  0022                     ??_strlen:	
  5650  0022                     ??_ADC_GetConversion:	
  5651                           ; 1 bytes @ 0x2
  5652                           
  5653  0022                     SPI_Write@incoming:	
  5654                           ; 1 bytes @ 0x2
  5655                           
  5656  0022                     _decodeGesture$1540:	
  5657                           ; 1 bytes @ 0x2
  5658                           
  5659  0022                     ___wmul@multiplicand:	
  5660                           ; 2 bytes @ 0x2
  5661                           
  5662                           
  5663                           ; 2 bytes @ 0x2
  5664  0022                     	ds	1
  5665  0023                     ??_Display_Clear:	
  5666  0023                     ADC_GetConversion@channel:	
  5667                           ; 1 bytes @ 0x3
  5668                           
  5669  0023                     I2C_Write_Byte@Byte:	
  5670                           ; 1 bytes @ 0x3
  5671                           
  5672  0023                     strlen@a:	
  5673                           ; 1 bytes @ 0x3
  5674                           
  5675                           
  5676                           ; 2 bytes @ 0x3
  5677  0023                     	ds	1
  5678  0024                     ??___wmul:	
  5679  0024                     _decodeGesture$1541:	
  5680                           ; 1 bytes @ 0x4
  5681                           
  5682  0024                     I2C_Write_Byte@count:	
  5683                           ; 2 bytes @ 0x4
=======
  5633                           ; 1 bytes @ 0x9
  5634  00A9                     	ds	1
  5635  00AA                     sprintf@s:	
  5636                           
  5637                           ; 1 bytes @ 0xA
  5638  00AA                     	ds	1
  5639  00AB                     sprintf@f:	
  5640                           
  5641                           ; 5 bytes @ 0xB
  5642  00AB                     	ds	5
  5643  00B0                     ??_UART_Byte:	
  5644                           
  5645                           ; 1 bytes @ 0x10
  5646  00B0                     	ds	2
  5647  00B2                     UART_Byte@bits:	
  5648                           
  5649                           ; 7 bytes @ 0x12
  5650  00B2                     	ds	7
  5651  00B9                     UART_Byte@onStr:	
  5652                           
  5653                           ; 1 bytes @ 0x19
  5654  00B9                     	ds	1
  5655  00BA                     UART_Byte@proxStr:	
  5656                           
  5657                           ; 1 bytes @ 0x1A
  5658  00BA                     	ds	1
  5659  00BB                     UART_Byte@profileStr:	
  5660                           
  5661                           ; 1 bytes @ 0x1B
  5662  00BB                     	ds	1
  5663  00BC                     UART_Byte@brightStr:	
  5664                           
  5665                           ; 1 bytes @ 0x1C
  5666  00BC                     	ds	36
  5667  00E0                     ??_main:	
  5668                           
  5669                           ; 1 bytes @ 0x40
  5670  00E0                     	ds	5
  5671  00E5                     main@startSystem:	
  5672                           
  5673                           ; 1 bytes @ 0x45
  5674  00E5                     	ds	1
  5675                           
  5676                           	psect	cstackCOMMON
  5677  0076                     __pcstackCOMMON:	
  5678  0076                     ?_i2c1_driver_open:	
  5679  0076                     ?_i2c1_driver_isNACK:	
  5680                           ; 1 bit 
  5681                           
  5682  0076                     ?_i2c1_driver_isBufferFull:	
  5683                           ; 1 bit 
>>>>>>> b288aef trying to integrate UART
  5684                           
<<<<<<< Upstream, based on origin/master
  5685  0024                     ___wmul@product:	
  5686                           ; 2 bytes @ 0x4
=======
  5685  0076                     ?_returnStop:	
  5686                           ; 1 bit 
>>>>>>> b288aef trying to integrate UART
  5687                           
<<<<<<< Upstream, based on origin/master
  5688                           
  5689                           ; 2 bytes @ 0x4
  5690  0024                     	ds	1
  5691  0025                     ?_Display_Name:	
  5692  0025                     Display_Name@string1:	
  5693                           ; 1 bytes @ 0x5
  5694                           
  5695                           
  5696                           ; 2 bytes @ 0x5
  5697  0025                     	ds	1
  5698  0026                     ??_wireReadDataByte:	
  5699  0026                     ?_wireWriteDataByte:	
  5700                           ; 1 bytes @ 0x6
  5701                           
  5702  0026                     ?_wireReadDataBlock:	
  5703                           ; 2 bytes @ 0x6
  5704                           
  5705  0026                     ?___awdiv:	
  5706                           ; 2 bytes @ 0x6
  5707                           
  5708  0026                     wireWriteDataByte@val:	
  5709                           ; 2 bytes @ 0x6
  5710                           
  5711  0026                     _decodeGesture$1542:	
  5712                           ; 1 bytes @ 0x6
  5713                           
  5714  0026                     wireReadDataBlock@val:	
  5715                           ; 2 bytes @ 0x6
  5716                           
  5717  0026                     ___awdiv@divisor:	
  5718                           ; 2 bytes @ 0x6
  5719                           
  5720                           
  5721                           ; 2 bytes @ 0x6
  5722  0026                     	ds	1
  5723  0027                     ??_Display_Name:	
  5724  0027                     wireReadDataByte@reg:	
  5725                           ; 1 bytes @ 0x7
  5726                           
  5727                           
  5728                           ; 1 bytes @ 0x7
  5729  0027                     	ds	1
  5730  0028                     wireReadDataByte@val:	
  5731  0028                     Display_Name@length:	
  5732                           ; 1 bytes @ 0x8
  5733                           
  5734  0028                     _decodeGesture$1543:	
  5735                           ; 2 bytes @ 0x8
  5736                           
  5737  0028                     wireReadDataBlock@len:	
  5738                           ; 2 bytes @ 0x8
  5739                           
  5740  0028                     ___awdiv@dividend:	
  5741                           ; 2 bytes @ 0x8
  5742                           
  5743                           
  5744                           ; 2 bytes @ 0x8
  5745  0028                     	ds	1
  5746  0029                     ??_isGestureAvailable:	
  5747  0029                     ??_wireWriteDataByte:	
  5748                           ; 1 bytes @ 0x9
  5749                           
  5750  0029                     ??_getMode:	
  5751                           ; 1 bytes @ 0x9
  5752                           
  5753  0029                     wireWriteDataByte@reg:	
  5754                           ; 1 bytes @ 0x9
  5755                           
  5756                           
  5757                           ; 1 bytes @ 0x9
  5758  0029                     	ds	1
  5759  002A                     ??_setLEDDrive:	
  5760  002A                     ??_setProximityGain:	
  5761                           ; 1 bytes @ 0xA
  5762                           
  5763  002A                     ??_setAmbientLightGain:	
  5764                           ; 1 bytes @ 0xA
=======
  5688  0076                     ?_returnReset:	
  5689                           ; 1 bytes @ 0x0
  5690                           
  5691  0076                     ?_mssp1_clearIRQ:	
  5692                           ; 1 bytes @ 0x0
  5693                           
  5694  0076                     ??_mssp1_clearIRQ:	
  5695                           ; 1 bytes @ 0x0
  5696                           
  5697  0076                     ?_i2c_busCollisionISR:	
  5698                           ; 1 bytes @ 0x0
  5699                           
  5700  0076                     ??_i2c_busCollisionISR:	
  5701                           ; 1 bytes @ 0x0
  5702                           
  5703  0076                     ?_i2c_ISR:	
  5704                           ; 1 bytes @ 0x0
  5705                           
  5706  0076                     ?_i2c1_driver_start:	
  5707                           ; 1 bytes @ 0x0
  5708                           
  5709  0076                     ?_i2c1_driver_resetBus:	
  5710                           ; 1 bytes @ 0x0
  5711                           
  5712  0076                     ??_i2c1_driver_resetBus:	
  5713                           ; 1 bytes @ 0x0
  5714                           
  5715  0076                     ?_i2c1_driver_restart:	
  5716                           ; 1 bytes @ 0x0
  5717                           
  5718  0076                     ?_i2c1_driver_stop:	
  5719                           ; 1 bytes @ 0x0
  5720                           
  5721  0076                     ?_i2c1_driver_TXData:	
  5722                           ; 1 bytes @ 0x0
  5723                           
  5724  0076                     ?_i2c1_driver_startRX:	
  5725                           ; 1 bytes @ 0x0
  5726                           
  5727  0076                     ?_i2c1_driver_sendACK:	
  5728                           ; 1 bytes @ 0x0
  5729                           
  5730  0076                     ??_i2c1_driver_sendACK:	
  5731                           ; 1 bytes @ 0x0
  5732                           
  5733  0076                     ?_i2c1_driver_sendNACK:	
  5734                           ; 1 bytes @ 0x0
  5735                           
  5736  0076                     ??_i2c1_driver_isNACK:	
  5737                           ; 1 bytes @ 0x0
  5738                           
  5739  0076                     ?_i2c1_driver_getRXData:	
  5740                           ; 1 bytes @ 0x0
  5741                           
  5742  0076                     ?_mssp1_setIRQ:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745  0076                     ??_mssp1_setIRQ:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748  0076                     ?_i2c1_driver_clearBusCollision:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751  0076                     ??_i2c1_driver_clearBusCollision:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754  0076                     ?_PIN_MANAGER_IOC:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757  0076                     ??_PIN_MANAGER_IOC:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760  0076                     ?_PMD_Initialize:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763  0076                     ?_PIN_MANAGER_Initialize:	
  5764                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5765                           
<<<<<<< Upstream, based on origin/master
  5766  002A                     ??_setProxIntLowThresh:	
  5767                           ; 1 bytes @ 0xA
=======
  5766  0076                     ?_OSCILLATOR_Initialize:	
  5767                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5768                           
<<<<<<< Upstream, based on origin/master
  5769  002A                     ??_setProxIntHighThresh:	
  5770                           ; 1 bytes @ 0xA
=======
  5769  0076                     ?_WDT_Initialize:	
  5770                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5771                           
<<<<<<< Upstream, based on origin/master
  5772  002A                     ?_setLightIntLowThreshold:	
  5773                           ; 1 bytes @ 0xA
=======
  5772  0076                     ?_SPI2_Initialize:	
  5773                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5774                           
<<<<<<< Upstream, based on origin/master
  5775  002A                     ?_setLightIntHighThreshold:	
  5776                           ; 1 bytes @ 0xA
=======
  5775  0076                     ?_PWM1_Initialize:	
  5776                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5777                           
<<<<<<< Upstream, based on origin/master
  5778  002A                     ??_setGestureEnterThresh:	
  5779                           ; 1 bytes @ 0xA
=======
  5778  0076                     ?_ADC_Initialize:	
  5779                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5780                           
<<<<<<< Upstream, based on origin/master
  5781  002A                     ??_setGestureExitThresh:	
  5782                           ; 1 bytes @ 0xA
=======
  5781  0076                     ?_TMR2_Initialize:	
  5782                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5783                           
<<<<<<< Upstream, based on origin/master
  5784  002A                     ??_setGestureGain:	
  5785                           ; 1 bytes @ 0xA
=======
  5784  0076                     ?_EUSART_Initialize:	
  5785                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5786                           
<<<<<<< Upstream, based on origin/master
  5787  002A                     ??_setGestureLEDDrive:	
  5788                           ; 1 bytes @ 0xA
=======
  5787  0076                     ?_Display_Clear:	
  5788                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5789                           
<<<<<<< Upstream, based on origin/master
  5790  002A                     ??_setGestureWaitTime:	
  5791                           ; 1 bytes @ 0xA
=======
  5790  0076                     ?_On_Off:	
  5791                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5792                           
<<<<<<< Upstream, based on origin/master
  5793  002A                     ??_setGestureIntEnable:	
  5794                           ; 1 bytes @ 0xA
=======
  5793  0076                     ?_PIR_Sensor:	
  5794                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5795                           
<<<<<<< Upstream, based on origin/master
  5796  002A                     ??_setLEDBoost:	
  5797                           ; 1 bytes @ 0xA
=======
  5796  0076                     ?_initialize:	
  5797                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5798                           
<<<<<<< Upstream, based on origin/master
  5799  002A                     ??_setGestureMode:	
  5800                           ; 1 bytes @ 0xA
=======
  5799  0076                     ?_enableGestureSensor:	
  5800                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5801                           
<<<<<<< Upstream, based on origin/master
  5802  002A                     ??_wireReadDataBlock:	
  5803                           ; 1 bytes @ 0xA
=======
  5802  0076                     ?_UART_Byte:	
  5803                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5804                           
<<<<<<< Upstream, based on origin/master
  5805  002A                     ??___awdiv:	
  5806                           ; 1 bytes @ 0xA
=======
  5805  0076                     ?_Get_ADC:	
  5806                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5807                           
<<<<<<< Upstream, based on origin/master
  5808  002A                     getMode@enable_value:	
  5809                           ; 1 bytes @ 0xA
=======
  5808  0076                     ?_isGestureAvailable:	
  5809                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5810                           
<<<<<<< Upstream, based on origin/master
  5811  002A                     isGestureAvailable@val:	
  5812                           ; 1 bytes @ 0xA
=======
  5811  0076                     ?_handleGesture:	
  5812                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5813                           
<<<<<<< Upstream, based on origin/master
  5814  002A                     Display_Name@i:	
  5815                           ; 1 bytes @ 0xA
=======
  5814  0076                     ?_PWM_Output_Enable:	
  5815                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5816                           
<<<<<<< Upstream, based on origin/master
  5817  002A                     setLightIntLowThreshold@threshold:	
  5818                           ; 2 bytes @ 0xA
=======
  5817  0076                     ?_PWM_Output_Disable:	
  5818                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5819                           
<<<<<<< Upstream, based on origin/master
  5820  002A                     setLightIntHighThreshold@threshold:	
  5821                           ; 2 bytes @ 0xA
=======
  5820  0076                     ?_wireReadDataByte:	
  5821                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5822                           
<<<<<<< Upstream, based on origin/master
  5823  002A                     _decodeGesture$1544:	
  5824                           ; 2 bytes @ 0xA
=======
  5823  0076                     ?_setLEDDrive:	
  5824                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5825                           
<<<<<<< Upstream, based on origin/master
  5826                           
  5827                           ; 2 bytes @ 0xA
  5828  002A                     	ds	1
  5829  002B                     ?_setMode:	
  5830  002B                     setMode@enable:	
  5831                           ; 1 bytes @ 0xB
  5832                           
  5833  002B                     setAmbientLightGain@drive:	
  5834                           ; 1 bytes @ 0xB
  5835                           
  5836  002B                     setProxIntLowThresh@threshold:	
  5837                           ; 1 bytes @ 0xB
  5838                           
  5839  002B                     setProxIntHighThresh@threshold:	
  5840                           ; 1 bytes @ 0xB
  5841                           
  5842  002B                     setGestureEnterThresh@threshold:	
  5843                           ; 1 bytes @ 0xB
  5844                           
  5845  002B                     setGestureExitThresh@threshold:	
  5846                           ; 1 bytes @ 0xB
  5847                           
  5848  002B                     setGestureWaitTime@time:	
  5849                           ; 1 bytes @ 0xB
  5850                           
  5851  002B                     setGestureIntEnable@val:	
  5852                           ; 1 bytes @ 0xB
  5853                           
  5854  002B                     setGestureMode@mode:	
  5855                           ; 1 bytes @ 0xB
  5856                           
  5857  002B                     ___awdiv@counter:	
  5858                           ; 1 bytes @ 0xB
  5859                           
  5860                           
  5861                           ; 1 bytes @ 0xB
  5862  002B                     	ds	1
  5863  002C                     ??_Get_ADC:	
  5864  002C                     ??_setMode:	
  5865                           ; 1 bytes @ 0xC
  5866                           
  5867  002C                     ??_setLightIntLowThreshold:	
  5868                           ; 1 bytes @ 0xC
  5869                           
  5870  002C                     ??_setLightIntHighThreshold:	
  5871                           ; 1 bytes @ 0xC
  5872                           
  5873  002C                     setLEDDrive@val:	
  5874                           ; 1 bytes @ 0xC
  5875                           
  5876  002C                     setProximityGain@val:	
  5877                           ; 1 bytes @ 0xC
  5878                           
  5879  002C                     setAmbientLightGain@val:	
  5880                           ; 1 bytes @ 0xC
  5881                           
  5882  002C                     setGestureGain@val:	
  5883                           ; 1 bytes @ 0xC
  5884                           
  5885  002C                     setGestureLEDDrive@val:	
  5886                           ; 1 bytes @ 0xC
  5887                           
  5888  002C                     setGestureWaitTime@val:	
  5889                           ; 1 bytes @ 0xC
  5890                           
  5891  002C                     setGestureIntEnable@enable:	
  5892                           ; 1 bytes @ 0xC
  5893                           
  5894  002C                     setLEDBoost@val:	
  5895                           ; 1 bytes @ 0xC
  5896                           
  5897  002C                     setGestureMode@val:	
  5898                           ; 1 bytes @ 0xC
  5899                           
  5900  002C                     ___awdiv@sign:	
  5901                           ; 1 bytes @ 0xC
  5902                           
  5903  002C                     _decodeGesture$1545:	
  5904                           ; 1 bytes @ 0xC
  5905                           
  5906                           
  5907                           ; 2 bytes @ 0xC
  5908  002C                     	ds	1
  5909  002D                     setLEDDrive@drive:	
  5910  002D                     setProximityGain@drive:	
  5911                           ; 1 bytes @ 0xD
  5912                           
  5913  002D                     setLightIntLowThreshold@val_low:	
  5914                           ; 1 bytes @ 0xD
=======
  5826  0076                     ?_setProximityGain:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0076                     ?_setAmbientLightGain:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0076                     ?_setProxIntLowThresh:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0076                     ?_setProxIntHighThresh:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0076                     ?_setGestureEnterThresh:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0076                     ?_setGestureExitThresh:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0076                     ?_setGestureGain:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0076                     ?_setGestureLEDDrive:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0076                     ?_setGestureWaitTime:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0076                     ?_setGestureIntEnable:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0076                     ?_getMode:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0076                     ?_resetGestureParameters:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0076                     ?_setLEDBoost:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0076                     ?_setGestureMode:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0076                     ?_enablePower:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0076                     ?_processGestureData:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0076                     ?_decodeGesture:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0076                     ?_I2C_Start:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0076                     ?_I2C_Write_Byte:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0076                     ?_I2C_ReStart:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0076                     ?_I2C_Read_Byte:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0076                     ?_I2C_Send_NACK:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0076                     ?_I2C_Stop:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0076                     ?_EUSART_Receive_ISR:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0076                     ?_EUSART_Transmit_ISR:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0076                     ??_EUSART_Transmit_ISR:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0076                     ?_EUSART_DefaultFramingErrorHandler:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0076                     ??_EUSART_DefaultFramingErrorHandler:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0076                     ?_EUSART_DefaultOverrunErrorHandler:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0076                     ??_EUSART_DefaultOverrunErrorHandler:	
  5914                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5915                           
<<<<<<< Upstream, based on origin/master
  5916  002D                     setLightIntHighThreshold@val_low:	
  5917                           ; 1 bytes @ 0xD
=======
  5916  0076                     ?_EUSART_DefaultErrorHandler:	
  5917                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5918                           
<<<<<<< Upstream, based on origin/master
  5919  002D                     setGestureGain@gain:	
  5920                           ; 1 bytes @ 0xD
=======
  5919  0076                     ?_EUSART_RxDataHandler:	
  5920                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5921                           
<<<<<<< Upstream, based on origin/master
  5922  002D                     setGestureLEDDrive@drive:	
  5923                           ; 1 bytes @ 0xD
=======
  5922  0076                     ??_EUSART_RxDataHandler:	
  5923                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5924                           
<<<<<<< Upstream, based on origin/master
  5925  002D                     setLEDBoost@boost:	
  5926                           ; 1 bytes @ 0xD
=======
  5925  0076                     ?_do_I2C_RESET:	
  5926                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5927                           
<<<<<<< Upstream, based on origin/master
  5928  002D                     ___awdiv@quotient:	
  5929                           ; 1 bytes @ 0xD
=======
  5928  0076                     ??_do_I2C_RESET:	
  5929                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5930                           
<<<<<<< Upstream, based on origin/master
  5931                           
  5932                           ; 2 bytes @ 0xD
  5933  002D                     	ds	1
  5934  002E                     setMode@reg_val:	
  5935  002E                     setLightIntLowThreshold@val_high:	
  5936                           ; 1 bytes @ 0xE
  5937                           
  5938  002E                     setLightIntHighThreshold@val_high:	
  5939                           ; 1 bytes @ 0xE
  5940                           
  5941  002E                     _decodeGesture$1546:	
  5942                           ; 1 bytes @ 0xE
  5943                           
  5944                           
  5945                           ; 2 bytes @ 0xE
  5946  002E                     	ds	1
  5947  002F                     ??_processGestureData:	
  5948  002F                     setMode@mode:	
  5949                           ; 1 bytes @ 0xF
  5950                           
  5951  002F                     wireReadDataBlock@reg:	
  5952                           ; 1 bytes @ 0xF
  5953                           
  5954  002F                     Get_ADC@val:	
  5955                           ; 1 bytes @ 0xF
  5956                           
  5957                           
  5958                           ; 2 bytes @ 0xF
  5959  002F                     	ds	1
  5960  0030                     ??_initialize:	
  5961  0030                     ??_enableGestureSensor:	
  5962                           ; 1 bytes @ 0x10
  5963                           
  5964  0030                     ??_enablePower:	
  5965                           ; 1 bytes @ 0x10
=======
  5931  0076                     ?_do_I2C_IDLE:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0076                     ??_do_I2C_IDLE:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0076                     ?_do_I2C_SEND_RESTART_READ:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0076                     ??_do_I2C_SEND_RESTART_READ:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0076                     ?_do_I2C_SEND_RESTART_WRITE:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0076                     ??_do_I2C_SEND_RESTART_WRITE:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0076                     ?_do_I2C_SEND_RESTART:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0076                     ??_do_I2C_SEND_RESTART:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0076                     ?_do_I2C_SEND_STOP:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0076                     ??_do_I2C_SEND_STOP:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0076                     ?_do_I2C_SEND_ADR_READ:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0076                     ??_do_I2C_SEND_ADR_READ:	
  5965                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5966                           
<<<<<<< Upstream, based on origin/master
  5967  0030                     wireReadDataBlock@j:	
  5968                           ; 1 bytes @ 0x10
=======
  5967  0076                     ?_do_I2C_SEND_ADR_WRITE:	
  5968                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5969                           
<<<<<<< Upstream, based on origin/master
  5970  0030                     _decodeGesture$1547:	
  5971                           ; 1 bytes @ 0x10
=======
  5970  0076                     ??_do_I2C_SEND_ADR_WRITE:	
  5971                           ; 1 bytes @ 0x0
>>>>>>> b288aef trying to integrate UART
  5972                           
<<<<<<< Upstream, based on origin/master
  5973                           
  5974                           ; 2 bytes @ 0x10
  5975  0030                     	ds	1
  5976  0031                     initialize@id:	
  5977  0031                     enableGestureSensor@interrupts:	
  5978                           ; 1 bytes @ 0x11
  5979                           
  5980  0031                     processGestureData@ud_ratio_first:	
  5981                           ; 1 bytes @ 0x11
  5982                           
  5983                           
  5984                           ; 2 bytes @ 0x11
  5985  0031                     	ds	2
  5986  0033                     processGestureData@lr_ratio_first:	
  5987                           
  5988                           ; 2 bytes @ 0x13
  5989  0033                     	ds	2
  5990  0035                     processGestureData@ud_ratio_last:	
  5991                           
  5992                           ; 2 bytes @ 0x15
  5993  0035                     	ds	2
  5994  0037                     processGestureData@lr_ratio_last:	
  5995                           
  5996                           ; 2 bytes @ 0x17
  5997  0037                     	ds	2
  5998  0039                     _processGestureData$1535:	
  5999                           
  6000                           ; 2 bytes @ 0x19
  6001  0039                     	ds	2
  6002  003B                     _processGestureData$1536:	
  6003                           
  6004                           ; 2 bytes @ 0x1B
  6005  003B                     	ds	2
  6006  003D                     _processGestureData$1537:	
  6007                           
  6008                           ; 2 bytes @ 0x1D
  6009  003D                     	ds	2
  6010  003F                     _processGestureData$1538:	
  6011                           
  6012                           ; 2 bytes @ 0x1F
  6013  003F                     	ds	2
  6014  0041                     processGestureData@u_last:	
  6015                           
  6016                           ; 1 bytes @ 0x21
  6017  0041                     	ds	1
  6018  0042                     processGestureData@d_last:	
  6019                           
  6020                           ; 1 bytes @ 0x22
  6021  0042                     	ds	1
  6022  0043                     processGestureData@l_last:	
  6023                           
  6024                           ; 1 bytes @ 0x23
  6025  0043                     	ds	1
  6026  0044                     processGestureData@r_last:	
  6027                           
  6028                           ; 1 bytes @ 0x24
  6029  0044                     	ds	1
  6030  0045                     processGestureData@u_first:	
  6031                           
  6032                           ; 1 bytes @ 0x25
  6033  0045                     	ds	1
  6034  0046                     processGestureData@d_first:	
  6035                           
  6036                           ; 1 bytes @ 0x26
  6037  0046                     	ds	1
  6038  0047                     processGestureData@l_first:	
  6039                           
  6040                           ; 1 bytes @ 0x27
  6041  0047                     	ds	1
  6042  0048                     processGestureData@r_first:	
  6043                           
  6044                           ; 1 bytes @ 0x28
  6045  0048                     	ds	1
  6046  0049                     processGestureData@ud_delta:	
  6047                           
  6048                           ; 2 bytes @ 0x29
  6049  0049                     	ds	2
  6050  004B                     processGestureData@lr_delta:	
  6051                           
  6052                           ; 2 bytes @ 0x2B
  6053  004B                     	ds	2
  6054  004D                     processGestureData@i:	
  6055                           
  6056                           ; 2 bytes @ 0x2D
  6057  004D                     	ds	2
  6058  004F                     ?_readGesture:	
  6059                           
  6060                           ; 2 bytes @ 0x2F
  6061  004F                     	ds	2
  6062  0051                     ??_readGesture:	
  6063                           
  6064                           ; 1 bytes @ 0x31
  6065  0051                     	ds	2
  6066  0053                     readGesture@motion:	
  6067                           
  6068                           ; 2 bytes @ 0x33
  6069  0053                     	ds	2
  6070  0055                     readGesture@gstatus:	
  6071                           
  6072                           ; 1 bytes @ 0x35
  6073  0055                     	ds	1
  6074  0056                     readGesture@bytes_read:	
  6075                           
  6076                           ; 2 bytes @ 0x36
  6077  0056                     	ds	2
  6078  0058                     readGesture@fifo_level:	
  6079                           
  6080                           ; 1 bytes @ 0x38
  6081  0058                     	ds	1
  6082  0059                     readGesture@i:	
  6083                           
  6084                           ; 2 bytes @ 0x39
  6085  0059                     	ds	2
  6086  005B                     ??_handleGesture:	
  6087                           
  6088                           ; 1 bytes @ 0x3B
  6089  005B                     	ds	1
  6090  005C                     ??_main:	
  6091                           
  6092                           	psect	maintext
  6093  0D52                     __pmaintext:	
  6094                           ; 1 bytes @ 0x3C
  6095 ;;
  6096 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6097 ;;
  6098 ;; *************** function _main *****************
  6099 ;; Defined at:
  6100 ;;		line 110 in file "main.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  count           2    0        unsigned int 
  6105 ;;  temp            2    0        int 
  6106 ;;  startSystem     1    0        _Bool 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : B1F/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;Total ram usage:        3 bytes
  6121 ;; Hardware stack levels required when called:   12
  6122 ;; This function calls:
  6123 ;;		_Display_Clear
  6124 ;;		_Display_Name
  6125 ;;		_Get_ADC
  6126 ;;		_PIR_Sensor
  6127 ;;		_SYSTEM_Initialize
  6128 ;;		_enableGestureSensor
  6129 ;;		_handleGesture
  6130 ;;		_initialize
  6131 ;;		_isGestureAvailable
  6132 ;; This function is called by:
  6133 ;;		Startup code after reset
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _main
  6139  0D52                     _main:	
  6140                           
  6141                           ;main.c: 113:     SYSTEM_Initialize();
  6142                           
  6143                           ;incstack = 0
  6144                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6145  0D52  318A  223E  318D   	fcall	_SYSTEM_Initialize
  6146                           
  6147                           ;main.c: 119:     (INTCONbits.GIE = 1);
  6148  0D55  178B               	bsf	11,7	;volatile
  6149                           
  6150                           ;main.c: 122:     (INTCONbits.PEIE = 1);
  6151  0D56  170B               	bsf	11,6	;volatile
  6152                           
  6153                           ;main.c: 125:     Display_Clear();
  6154  0D57  3189  21A1  318D   	fcall	_Display_Clear
  6155                           
  6156                           ;main.c: 127:     if(PIR_Sensor()) {
  6157  0D5A  3189  210D  318D   	fcall	_PIR_Sensor
  6158  0D5D  3A00               	xorlw	0
  6159  0D5E  1903               	skipnz
  6160  0D5F  2D67               	goto	l7124
  6161                           
  6162                           ;main.c: 128:         if(initialize()){
  6163  0D60  3184  24CA  318D   	fcall	_initialize
  6164                           
  6165                           ;main.c: 131:         if(enableGestureSensor(0)){
  6166  0D63  3000               	movlw	0
  6167  0D64  318F  279C  318D   	fcall	_enableGestureSensor
  6168  0D67                     l7124:	
  6169                           ;main.c: 144:         if(startSystem) {
  6170                           
  6171                           ;main.c: 136:     _Bool startSystem;;main.c: 137:     int temp;;main.c: 138:     while (
      +                          1)
  6172                           
  6173                           
  6174                           ;main.c: 145:             if(start == 1) {
  6175  0D67  0020               	movlb	0	; select bank0
  6176  0D68  036E               	decf	_start,w
  6177  0D69  1D03               	btfss	3,2
  6178  0D6A  2D79               	goto	l7130
  6179                           
  6180                           ;main.c: 146:                 Display_Name(names[name]);
  6181  0D6B  355C               	lslf	_name,w
  6182  0D6C  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  6183  0D6D  0086               	movwf	6
  6184  0D6E  3001               	movlw	1	; select bank2/3
  6185  0D6F  0087               	movwf	7
  6186  0D70  3F40               	moviw [0]fsr1
  6187  0D71  00A5               	movwf	Display_Name@string1
  6188  0D72  3F41               	moviw [1]fsr1
  6189  0D73  00A6               	movwf	Display_Name@string1+1
  6190  0D74  318E  26A0  318D   	fcall	_Display_Name
  6191                           
  6192                           ;main.c: 147:                 start = 0;
  6193  0D77  0020               	movlb	0	; select bank0
  6194  0D78  01EE               	clrf	_start
  6195  0D79                     l7130:	
  6196                           
  6197                           ;main.c: 149:             Get_ADC();
  6198  0D79  3186  26D3  318D   	fcall	_Get_ADC
  6199                           
  6200                           ;main.c: 151:             if( isGestureAvailable()){
  6201  0D7C  3189  21B2  318D   	fcall	_isGestureAvailable
  6202  0D7F  3A00               	xorlw	0
  6203  0D80  1903               	skipnz
  6204  0D81  2D67               	goto	l7124
  6205                           
  6206                           ;main.c: 152:                 handleGesture();
  6207  0D82  318F  2742  318D   	fcall	_handleGesture
  6208  0D85  2D67               	goto	l7124
  6209  0D86                     __end_of_main:	
  6210                           
  6211                           	psect	text1
  6212  04CA                     __ptext1:	
  6213 ;; *************** function _initialize *****************
  6214 ;; Defined at:
  6215 ;;		line 20 in file "APDS9960.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  id              1   17[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      _Bool 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, pclath, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:        2 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:   10
  6236 ;; This function calls:
  6237 ;;		_i2c1_driver_open
  6238 ;;		_setAmbientLightGain
  6239 ;;		_setGestureEnterThresh
  6240 ;;		_setGestureExitThresh
  6241 ;;		_setGestureGain
  6242 ;;		_setGestureIntEnable
  6243 ;;		_setGestureLEDDrive
  6244 ;;		_setGestureWaitTime
  6245 ;;		_setLEDDrive
  6246 ;;		_setLightIntHighThreshold
  6247 ;;		_setLightIntLowThreshold
  6248 ;;		_setMode
  6249 ;;		_setProxIntHighThresh
  6250 ;;		_setProxIntLowThresh
  6251 ;;		_setProximityGain
  6252 ;;		_wireReadDataByte
  6253 ;;		_wireWriteDataByte
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _initialize
  6261  04CA                     _initialize:	
  6262                           
  6263                           ;APDS9960.c: 25:     i2c1_driver_open();
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  6267  04CA  3189  2163  3184   	fcall	_i2c1_driver_open
  6268                           
  6269                           ;APDS9960.c: 31:     id = wireReadDataByte(0x92);
  6270  04CD  3092               	movlw	146
  6271  04CE  318A  22FD  3184   	fcall	_wireReadDataByte
  6272  04D1  0020               	movlb	0	; select bank0
  6273  04D2  00B0               	movwf	??_initialize
  6274  04D3  0830               	movf	??_initialize,w
  6275  04D4  00B1               	movwf	initialize@id
  6276                           
  6277                           ;APDS9960.c: 33:     if( !(id == 0xAB ||id == 0x9C ) )
  6278  04D5  30AB               	movlw	171
  6279  04D6  0631               	xorwf	initialize@id,w
  6280  04D7  1903               	btfsc	3,2
  6281  04D8  2CDF               	goto	l6754
  6282  04D9  309C               	movlw	156
  6283  04DA  0631               	xorwf	initialize@id,w
  6284  04DB  1903               	btfsc	3,2
  6285  04DC  2CDF               	goto	l6754
  6286  04DD                     l6750:	
  6287                           
  6288                           ;APDS9960.c: 34:     {;APDS9960.c: 35:      return 0;
  6289  04DD  3000               	movlw	0
  6290  04DE  0008               	return
  6291  04DF                     l6754:	
  6292                           
  6293                           ;APDS9960.c: 39:     setMode(7, 0);
  6294  04DF  01AB               	clrf	setMode@enable
  6295  04E0  3007               	movlw	7
  6296  04E1  318E  2651  3184   	fcall	_setMode
  6297                           
  6298                           ;APDS9960.c: 41:     wireWriteDataByte(0x81, 219);
  6299  04E4  30DB               	movlw	219
  6300  04E5  0020               	movlb	0	; select bank0
  6301  04E6  00B0               	movwf	??_initialize
  6302  04E7  0830               	movf	??_initialize,w
  6303  04E8  00A6               	movwf	wireWriteDataByte@val
  6304  04E9  3081               	movlw	129
  6305  04EA  318A  226E  3184   	fcall	_wireWriteDataByte
  6306                           
  6307                           ;APDS9960.c: 42:     wireWriteDataByte(0x83, 246);
  6308  04ED  30F6               	movlw	246
  6309  04EE  0020               	movlb	0	; select bank0
  6310  04EF  00B0               	movwf	??_initialize
  6311  04F0  0830               	movf	??_initialize,w
  6312  04F1  00A6               	movwf	wireWriteDataByte@val
  6313  04F2  3083               	movlw	131
  6314  04F3  318A  226E  3184   	fcall	_wireWriteDataByte
  6315                           
  6316                           ;APDS9960.c: 43:     wireWriteDataByte(0x8E, 0x87);
  6317  04F6  3087               	movlw	135
  6318  04F7  0020               	movlb	0	; select bank0
  6319  04F8  00B0               	movwf	??_initialize
  6320  04F9  0830               	movf	??_initialize,w
  6321  04FA  00A6               	movwf	wireWriteDataByte@val
  6322  04FB  308E               	movlw	142
  6323  04FC  318A  226E  3184   	fcall	_wireWriteDataByte
  6324                           
  6325                           ;APDS9960.c: 44:     wireWriteDataByte(0x9D, 0) ;
  6326  04FF  0020               	movlb	0	; select bank0
  6327  0500  01A6               	clrf	wireWriteDataByte@val
  6328  0501  309D               	movlw	157
  6329  0502  318A  226E  3184   	fcall	_wireWriteDataByte
  6330                           
  6331                           ;APDS9960.c: 45:     wireWriteDataByte(0x9E, 0) ;
  6332  0505  0020               	movlb	0	; select bank0
  6333  0506  01A6               	clrf	wireWriteDataByte@val
  6334  0507  309E               	movlw	158
  6335  0508  318A  226E  3184   	fcall	_wireWriteDataByte
  6336                           
  6337                           ;APDS9960.c: 46:     wireWriteDataByte(0x8D, 0x60) ;
  6338  050B  3060               	movlw	96
  6339  050C  0020               	movlb	0	; select bank0
  6340  050D  00B0               	movwf	??_initialize
  6341  050E  0830               	movf	??_initialize,w
  6342  050F  00A6               	movwf	wireWriteDataByte@val
  6343  0510  308D               	movlw	141
  6344  0511  318A  226E  3184   	fcall	_wireWriteDataByte
  6345                           
  6346                           ;APDS9960.c: 47:     setLEDDrive(0);
  6347  0514  3000               	movlw	0
  6348  0515  318B  23E3  3184   	fcall	_setLEDDrive
  6349                           
  6350                           ;APDS9960.c: 48:     setProximityGain(2);
  6351  0518  3002               	movlw	2
  6352  0519  318C  240C  3184   	fcall	_setProximityGain
  6353                           
  6354                           ;APDS9960.c: 49:     setAmbientLightGain(1);
  6355  051C  3001               	movlw	1
  6356  051D  318A  22DF  3184   	fcall	_setAmbientLightGain
  6357                           
  6358                           ;APDS9960.c: 51:     if( !setProxIntLowThresh(0) ) {
  6359  0520  3000               	movlw	0
  6360  0521  3189  21FE  3184   	fcall	_setProxIntLowThresh
  6361  0524  3A00               	xorlw	0
  6362  0525  1903               	btfsc	3,2
  6363  0526  2CDD               	goto	l6750
  6364                           
  6365                           ;APDS9960.c: 54:     if( !setProxIntHighThresh(50) ) {
  6366  0527  3032               	movlw	50
  6367  0528  3189  21EB  3184   	fcall	_setProxIntHighThresh
  6368  052B  3A00               	xorlw	0
  6369  052C  1903               	btfsc	3,2
  6370  052D  2CDD               	goto	l6750
=======
  5973  0076                     ?_do_I2C_RCEN:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0076                     ??_do_I2C_RCEN:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0076                     ?_do_I2C_DO_ACK:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0076                     ??_do_I2C_DO_ACK:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0076                     ?_do_I2C_DO_NACK_STOP:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0076                     ??_do_I2C_DO_NACK_STOP:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0076                     ?_do_I2C_DO_NACK_RESTART:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0076                     ??_do_I2C_DO_NACK_RESTART:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0076                     ?_do_I2C_DO_ADDRESS_NACK:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0076                     ??_do_I2C_DO_ADDRESS_NACK:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0076                     ?_do_I2C_TX:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0076                     ??_do_I2C_TX:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0076                     ?_do_I2C_RX:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0076                     ??_do_I2C_RX:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0076                     ?_do_I2C_TX_EMPTY:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0076                     ??_do_I2C_TX_EMPTY:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0076                     ?_INTERRUPT_InterruptManager:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0076                     ?_SYSTEM_Initialize:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0076                     ?_SPI2_Exchange8bit:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0076                     ?_main:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0076                     ?_SPI_Write:	
  6034                           ; 1 bytes @ 0x0
  6035                           
  6036  0076                     ?_EUSART_Write:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039  0076                     ?_putch:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042  0076                     ?i1_i2c1_driver_restart:	
  6043                           ; 1 bytes @ 0x0
  6044                           
  6045  0076                     ??i1_i2c1_driver_restart:	
  6046                           ; 1 bytes @ 0x0
  6047                           
  6048  0076                     ?i1_i2c1_driver_stop:	
  6049                           ; 1 bytes @ 0x0
  6050                           
  6051  0076                     ??i1_i2c1_driver_stop:	
  6052                           ; 1 bytes @ 0x0
  6053                           
  6054  0076                     ?i1_i2c1_driver_startRX:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0076                     ??i1_i2c1_driver_startRX:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0076                     ?i1_i2c1_driver_getRXData:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0076                     ??i1_i2c1_driver_getRXData:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0076                     ?i1_i2c1_driver_TXData:	
  6067                           ; 1 bytes @ 0x0
  6068                           
  6069  0076                     ??i1_i2c1_driver_TXData:	
  6070                           ; 1 bytes @ 0x0
  6071                           
  6072  0076                     ?i1_i2c1_driver_sendNACK:	
  6073                           ; 1 bytes @ 0x0
  6074                           
  6075  0076                     ??i1_i2c1_driver_sendNACK:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0076                     returnStop@p:	
  6079                           ; 1 bytes @ 0x0
  6080                           
  6081  0076                     returnReset@p:	
  6082                           ; 1 bytes @ 0x0
  6083                           
  6084  0076                     i1i2c1_driver_TXData@d:	
  6085                           ; 1 bytes @ 0x0
  6086                           
  6087                           
  6088                           ; 1 bytes @ 0x0
  6089  0076                     	ds	1
  6090  0077                     ??_returnStop:	
  6091  0077                     ??_returnReset:	
  6092                           ; 1 bytes @ 0x1
  6093                           
  6094  0077                     ??_EUSART_Receive_ISR:	
  6095                           ; 1 bytes @ 0x1
  6096                           
  6097  0077                     ??_EUSART_DefaultErrorHandler:	
  6098                           ; 1 bytes @ 0x1
  6099                           
  6100                           
  6101                           ; 1 bytes @ 0x1
  6102  0077                     	ds	2
  6103  0079                     ??_i2c_ISR:	
  6104                           
  6105                           ; 1 bytes @ 0x3
  6106  0079                     	ds	3
  6107  007C                     ??_INTERRUPT_InterruptManager:	
  6108                           
  6109                           	psect	cstackBANK0
  6110  0020                     __pcstackBANK0:	
  6111                           ; 1 bytes @ 0x6
  6112                           
  6113  0020                     ??_i2c1_driver_open:	
  6114  0020                     ??_i2c1_driver_start:	
  6115                           ; 1 bytes @ 0x0
  6116                           
  6117  0020                     ??_i2c1_driver_restart:	
  6118                           ; 1 bytes @ 0x0
  6119                           
  6120  0020                     ??_i2c1_driver_stop:	
  6121                           ; 1 bytes @ 0x0
  6122                           
  6123  0020                     ??_i2c1_driver_TXData:	
  6124                           ; 1 bytes @ 0x0
  6125                           
  6126  0020                     ??_i2c1_driver_startRX:	
  6127                           ; 1 bytes @ 0x0
  6128                           
  6129  0020                     ??_i2c1_driver_sendNACK:	
  6130                           ; 1 bytes @ 0x0
  6131                           
  6132  0020                     ??_i2c1_driver_getRXData:	
  6133                           ; 1 bytes @ 0x0
  6134                           
  6135  0020                     ??_PMD_Initialize:	
  6136                           ; 1 bytes @ 0x0
  6137                           
  6138  0020                     ??_PIN_MANAGER_Initialize:	
  6139                           ; 1 bytes @ 0x0
  6140                           
  6141  0020                     ??_OSCILLATOR_Initialize:	
  6142                           ; 1 bytes @ 0x0
  6143                           
  6144  0020                     ??_WDT_Initialize:	
  6145                           ; 1 bytes @ 0x0
  6146                           
  6147  0020                     ??_SPI2_Initialize:	
  6148                           ; 1 bytes @ 0x0
  6149                           
  6150  0020                     ??_PWM1_Initialize:	
  6151                           ; 1 bytes @ 0x0
  6152                           
  6153  0020                     ??_ADC_Initialize:	
  6154                           ; 1 bytes @ 0x0
  6155                           
  6156  0020                     ??_TMR2_Initialize:	
  6157                           ; 1 bytes @ 0x0
  6158                           
  6159  0020                     ??_PIR_Sensor:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0020                     ??_PWM_Output_Enable:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0020                     ??_PWM_Output_Disable:	
  6166                           ; 1 bytes @ 0x0
  6167                           
  6168  0020                     ??_resetGestureParameters:	
  6169                           ; 1 bytes @ 0x0
  6170                           
  6171  0020                     ??_decodeGesture:	
  6172                           ; 1 bytes @ 0x0
  6173                           
  6174  0020                     ??_I2C_Start:	
  6175                           ; 1 bytes @ 0x0
  6176                           
  6177  0020                     ??_I2C_ReStart:	
  6178                           ; 1 bytes @ 0x0
  6179                           
  6180  0020                     ??_I2C_Send_NACK:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183  0020                     ??_I2C_Stop:	
  6184                           ; 1 bytes @ 0x0
  6185                           
  6186  0020                     ?_EUSART_SetRxInterruptHandler:	
  6187                           ; 1 bytes @ 0x0
  6188                           
  6189  0020                     ?_EUSART_SetTxInterruptHandler:	
  6190                           ; 1 bytes @ 0x0
  6191                           
  6192  0020                     ?_EUSART_SetFramingErrorHandler:	
  6193                           ; 1 bytes @ 0x0
  6194                           
  6195  0020                     ?_EUSART_SetOverrunErrorHandler:	
  6196                           ; 1 bytes @ 0x0
  6197                           
  6198  0020                     ?_EUSART_SetErrorHandler:	
  6199                           ; 1 bytes @ 0x0
  6200                           
  6201  0020                     ??_i2c1_driver_isBufferFull:	
  6202                           ; 1 bytes @ 0x0
  6203                           
  6204  0020                     ??_SPI2_Exchange8bit:	
  6205                           ; 1 bytes @ 0x0
  6206                           
  6207  0020                     ??_EUSART_Write:	
  6208                           ; 1 bytes @ 0x0
  6209                           
  6210  0020                     ?_strlen:	
  6211                           ; 1 bytes @ 0x0
  6212                           
  6213  0020                     ?_ADC_GetConversion:	
  6214                           ; 2 bytes @ 0x0
  6215                           
  6216  0020                     ?___wmul:	
  6217                           ; 2 bytes @ 0x0
  6218                           
  6219  0020                     ?___aodiv:	
  6220                           ; 2 bytes @ 0x0
  6221                           
  6222  0020                     ?___aomod:	
  6223                           ; 8 bytes @ 0x0
  6224                           
  6225  0020                     i2c1_driver_TXData@d:	
  6226                           ; 8 bytes @ 0x0
  6227                           
  6228  0020                     SPI2_Exchange8bit@data:	
  6229                           ; 1 bytes @ 0x0
  6230                           
  6231  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6232                           ; 1 bytes @ 0x0
  6233                           
  6234  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6235                           ; 2 bytes @ 0x0
  6236                           
  6237  0020                     EUSART_SetErrorHandler@interruptHandler:	
  6238                           ; 2 bytes @ 0x0
  6239                           
  6240  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  6241                           ; 2 bytes @ 0x0
  6242                           
  6243  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  6244                           ; 2 bytes @ 0x0
  6245                           
  6246  0020                     ___wmul@multiplier:	
  6247                           ; 2 bytes @ 0x0
  6248                           
  6249  0020                     strlen@s:	
  6250                           ; 2 bytes @ 0x0
  6251                           
  6252  0020                     ___aodiv@divisor:	
  6253                           ; 2 bytes @ 0x0
  6254                           
  6255  0020                     ___aomod@divisor:	
  6256                           ; 8 bytes @ 0x0
  6257                           
  6258                           
  6259                           ; 8 bytes @ 0x0
  6260  0020                     	ds	1
  6261  0021                     ??_I2C_Write_Byte:	
  6262  0021                     ??_I2C_Read_Byte:	
  6263                           ; 1 bytes @ 0x1
  6264                           
  6265  0021                     ??_SPI_Write:	
  6266                           ; 1 bytes @ 0x1
  6267                           
  6268  0021                     EUSART_Write@txData:	
  6269                           ; 1 bytes @ 0x1
  6270                           
  6271                           
  6272                           ; 1 bytes @ 0x1
  6273  0021                     	ds	1
  6274  0022                     ??_EUSART_Initialize:	
  6275  0022                     ??_strlen:	
  6276                           ; 1 bytes @ 0x2
  6277                           
  6278  0022                     ??_ADC_GetConversion:	
  6279                           ; 1 bytes @ 0x2
  6280                           
  6281  0022                     ??_EUSART_SetRxInterruptHandler:	
  6282                           ; 1 bytes @ 0x2
  6283                           
  6284  0022                     ??_EUSART_SetTxInterruptHandler:	
  6285                           ; 1 bytes @ 0x2
  6286                           
  6287  0022                     ??_EUSART_SetFramingErrorHandler:	
  6288                           ; 1 bytes @ 0x2
  6289                           
  6290  0022                     ??_EUSART_SetOverrunErrorHandler:	
  6291                           ; 1 bytes @ 0x2
  6292                           
  6293  0022                     ??_EUSART_SetErrorHandler:	
  6294                           ; 1 bytes @ 0x2
  6295                           
  6296  0022                     ??_putch:	
  6297                           ; 1 bytes @ 0x2
  6298                           
  6299  0022                     SPI_Write@incoming:	
  6300                           ; 1 bytes @ 0x2
  6301                           
  6302  0022                     putch@txData:	
  6303                           ; 1 bytes @ 0x2
  6304                           
  6305  0022                     _decodeGesture$1446:	
  6306                           ; 1 bytes @ 0x2
  6307                           
  6308  0022                     ___wmul@multiplicand:	
  6309                           ; 2 bytes @ 0x2
  6310                           
  6311                           
  6312                           ; 2 bytes @ 0x2
  6313  0022                     	ds	1
  6314  0023                     ??_Display_Clear:	
  6315  0023                     ??_SYSTEM_Initialize:	
  6316                           ; 1 bytes @ 0x3
  6317                           
  6318  0023                     ?_fputc:	
  6319                           ; 1 bytes @ 0x3
  6320                           
  6321  0023                     I2C_Write_Byte@Byte:	
  6322                           ; 2 bytes @ 0x3
  6323                           
  6324  0023                     ADC_GetConversion@channel:	
  6325                           ; 1 bytes @ 0x3
  6326                           
  6327  0023                     fputc@c:	
  6328                           ; 1 bytes @ 0x3
  6329                           
  6330  0023                     strlen@a:	
  6331                           ; 2 bytes @ 0x3
  6332                           
  6333                           
  6334                           ; 2 bytes @ 0x3
  6335  0023                     	ds	1
  6336  0024                     ??_On_Off:	
  6337  0024                     ??___wmul:	
  6338                           ; 1 bytes @ 0x4
  6339                           
  6340  0024                     _decodeGesture$1447:	
  6341                           ; 1 bytes @ 0x4
  6342                           
  6343  0024                     I2C_Write_Byte@count:	
  6344                           ; 2 bytes @ 0x4
  6345                           
  6346  0024                     ___wmul@product:	
  6347                           ; 2 bytes @ 0x4
  6348                           
  6349                           
  6350                           ; 2 bytes @ 0x4
  6351  0024                     	ds	1
  6352  0025                     ?_Display_Name:	
  6353  0025                     ?_strcpy:	
  6354                           ; 1 bytes @ 0x5
  6355                           
  6356  0025                     fputc@fp:	
  6357                           ; 1 bytes @ 0x5
  6358                           
  6359  0025                     strcpy@src:	
  6360                           ; 1 bytes @ 0x5
  6361                           
  6362  0025                     Display_Name@string1:	
  6363                           ; 1 bytes @ 0x5
  6364                           
  6365                           
  6366                           ; 2 bytes @ 0x5
  6367  0025                     	ds	1
  6368  0026                     ??_strcpy:	
  6369  0026                     ??_wireReadDataByte:	
  6370                           ; 1 bytes @ 0x6
>>>>>>> b288aef trying to integrate UART
  6371                           
<<<<<<< Upstream, based on origin/master
  6372                           ;APDS9960.c: 59:     if( !setLightIntLowThreshold(0xFFFF) ) {
  6373  052E  30FF               	movlw	255
  6374  052F  0020               	movlb	0	; select bank0
  6375  0530  00AA               	movwf	setLightIntLowThreshold@threshold
  6376  0531  30FF               	movlw	255
  6377  0532  00AB               	movwf	setLightIntLowThreshold@threshold+1
  6378  0533  318B  23BC  3184   	fcall	_setLightIntLowThreshold
  6379  0536  3A00               	xorlw	0
  6380  0537  1903               	btfsc	3,2
  6381  0538  2CDD               	goto	l6750
  6382                           
  6383                           ;APDS9960.c: 62:     if( !setLightIntHighThreshold(0) ) {
  6384  0539  3000               	movlw	0
  6385  053A  0020               	movlb	0	; select bank0
  6386  053B  00AA               	movwf	setLightIntHighThreshold@threshold
  6387  053C  00AB               	movwf	setLightIntHighThreshold@threshold+1
  6388  053D  318B  2395  3184   	fcall	_setLightIntHighThreshold
  6389  0540  3A00               	xorlw	0
  6390  0541  1903               	btfsc	3,2
  6391  0542  2CDD               	goto	l6750
  6392                           
  6393                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  6394  0543  3011               	movlw	17
  6395  0544  0020               	movlb	0	; select bank0
  6396  0545  00B0               	movwf	??_initialize
  6397  0546  0830               	movf	??_initialize,w
  6398  0547  00A6               	movwf	wireWriteDataByte@val
  6399  0548  308C               	movlw	140
  6400  0549  318A  226E  3184   	fcall	_wireWriteDataByte
  6401  054C  0020               	movlb	0	; select bank0
  6402  054D  0826               	movf	?_wireWriteDataByte,w
  6403  054E  0427               	iorwf	?_wireWriteDataByte+1,w
  6404  054F  1903               	btfsc	3,2
  6405  0550  2CDD               	goto	l6750
  6406                           
  6407                           ;APDS9960.c: 71:     if( !wireWriteDataByte(0x90, 0x01) ) {
  6408  0551  01A6               	clrf	wireWriteDataByte@val
  6409  0552  0AA6               	incf	wireWriteDataByte@val,f
  6410  0553  3090               	movlw	144
  6411  0554  318A  226E  3184   	fcall	_wireWriteDataByte
  6412  0557  0020               	movlb	0	; select bank0
  6413  0558  0826               	movf	?_wireWriteDataByte,w
  6414  0559  0427               	iorwf	?_wireWriteDataByte+1,w
  6415  055A  1903               	btfsc	3,2
  6416  055B  2CDD               	goto	l6750
  6417                           
  6418                           ;APDS9960.c: 74:     if( !wireWriteDataByte(0x9F, 0) ) {
  6419  055C  01A6               	clrf	wireWriteDataByte@val
  6420  055D  309F               	movlw	159
  6421  055E  318A  226E  3184   	fcall	_wireWriteDataByte
  6422  0561  0020               	movlb	0	; select bank0
  6423  0562  0826               	movf	?_wireWriteDataByte,w
  6424  0563  0427               	iorwf	?_wireWriteDataByte+1,w
  6425  0564  1903               	btfsc	3,2
  6426  0565  2CDD               	goto	l6750
  6427                           
  6428                           ;APDS9960.c: 78:     if( !setGestureEnterThresh(40) ) {
  6429  0566  3028               	movlw	40
  6430  0567  3189  21C5  3184   	fcall	_setGestureEnterThresh
  6431  056A  3A00               	xorlw	0
  6432  056B  1903               	btfsc	3,2
  6433  056C  2CDD               	goto	l6750
  6434                           
  6435                           ;APDS9960.c: 82:     if( !setGestureExitThresh(30) ) {
  6436  056D  301E               	movlw	30
  6437  056E  3189  21D8  3184   	fcall	_setGestureExitThresh
  6438  0571  3A00               	xorlw	0
  6439  0572  1903               	btfsc	3,2
  6440  0573  2CDD               	goto	l6750
  6441                           
  6442                           ;APDS9960.c: 85:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  6443  0574  3040               	movlw	64
  6444  0575  0020               	movlb	0	; select bank0
  6445  0576  00B0               	movwf	??_initialize
  6446  0577  0830               	movf	??_initialize,w
  6447  0578  00A6               	movwf	wireWriteDataByte@val
  6448  0579  30A2               	movlw	162
  6449  057A  318A  226E  3184   	fcall	_wireWriteDataByte
  6450  057D  0020               	movlb	0	; select bank0
  6451  057E  0826               	movf	?_wireWriteDataByte,w
  6452  057F  0427               	iorwf	?_wireWriteDataByte+1,w
  6453  0580  1903               	btfsc	3,2
  6454  0581  2CDD               	goto	l6750
  6455                           
  6456                           ;APDS9960.c: 88:     if( !setGestureGain(2) ) {
  6457  0582  3002               	movlw	2
  6458  0583  318C  24EE  3184   	fcall	_setGestureGain
  6459  0586  3A00               	xorlw	0
  6460  0587  1903               	btfsc	3,2
  6461  0588  2CDD               	goto	l6750
  6462                           
  6463                           ;APDS9960.c: 91:     if( !setGestureLEDDrive(0) ) {
  6464  0589  3000               	movlw	0
  6465  058A  318D  2520  3184   	fcall	_setGestureLEDDrive
  6466  058D  3A00               	xorlw	0
  6467  058E  1903               	btfsc	3,2
  6468  058F  2CDD               	goto	l6750
  6469                           
  6470                           ;APDS9960.c: 95:     if( !setGestureWaitTime(1) ) {
  6471  0590  3001               	movlw	1
  6472  0591  318B  236E  3184   	fcall	_setGestureWaitTime
  6473  0594  3A00               	xorlw	0
  6474  0595  1903               	btfsc	3,2
  6475  0596  2CDD               	goto	l6750
  6476                           
  6477                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA4, 0) ) {
  6478  0597  0020               	movlb	0	; select bank0
  6479  0598  01A6               	clrf	wireWriteDataByte@val
  6480  0599  30A4               	movlw	164
  6481  059A  318A  226E  3184   	fcall	_wireWriteDataByte
  6482  059D  0020               	movlb	0	; select bank0
  6483  059E  0826               	movf	?_wireWriteDataByte,w
  6484  059F  0427               	iorwf	?_wireWriteDataByte+1,w
  6485  05A0  1903               	btfsc	3,2
  6486  05A1  2CDD               	goto	l6750
  6487                           
  6488                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA5, 0) ) {
  6489  05A2  01A6               	clrf	wireWriteDataByte@val
  6490  05A3  30A5               	movlw	165
  6491  05A4  318A  226E  3184   	fcall	_wireWriteDataByte
  6492  05A7  0020               	movlb	0	; select bank0
  6493  05A8  0826               	movf	?_wireWriteDataByte,w
  6494  05A9  0427               	iorwf	?_wireWriteDataByte+1,w
  6495  05AA  1903               	btfsc	3,2
  6496  05AB  2CDD               	goto	l6750
  6497                           
  6498                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA7, 0) ) {
  6499  05AC  01A6               	clrf	wireWriteDataByte@val
  6500  05AD  30A7               	movlw	167
  6501  05AE  318A  226E  3184   	fcall	_wireWriteDataByte
  6502  05B1  0020               	movlb	0	; select bank0
  6503  05B2  0826               	movf	?_wireWriteDataByte,w
  6504  05B3  0427               	iorwf	?_wireWriteDataByte+1,w
  6505  05B4  1903               	btfsc	3,2
  6506  05B5  2CDD               	goto	l6750
  6507                           
  6508                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xA9, 0) ) {
  6509  05B6  01A6               	clrf	wireWriteDataByte@val
  6510  05B7  30A9               	movlw	169
  6511  05B8  318A  226E  3184   	fcall	_wireWriteDataByte
  6512  05BB  0020               	movlb	0	; select bank0
  6513  05BC  0826               	movf	?_wireWriteDataByte,w
  6514  05BD  0427               	iorwf	?_wireWriteDataByte+1,w
  6515  05BE  1903               	btfsc	3,2
  6516  05BF  2CDD               	goto	l6750
  6517                           
  6518                           ;APDS9960.c: 110:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  6519  05C0  30C9               	movlw	201
  6520  05C1  00B0               	movwf	??_initialize
  6521  05C2  0830               	movf	??_initialize,w
  6522  05C3  00A6               	movwf	wireWriteDataByte@val
  6523  05C4  30A6               	movlw	166
  6524  05C5  318A  226E  3184   	fcall	_wireWriteDataByte
  6525  05C8  0020               	movlb	0	; select bank0
  6526  05C9  0826               	movf	?_wireWriteDataByte,w
  6527  05CA  0427               	iorwf	?_wireWriteDataByte+1,w
  6528  05CB  1903               	btfsc	3,2
  6529  05CC  2CDD               	goto	l6750
  6530                           
  6531                           ;APDS9960.c: 113:     if( !wireWriteDataByte(0xAA, 0) ) {
  6532  05CD  01A6               	clrf	wireWriteDataByte@val
  6533  05CE  30AA               	movlw	170
  6534  05CF  318A  226E  3184   	fcall	_wireWriteDataByte
  6535  05D2  0020               	movlb	0	; select bank0
  6536  05D3  0826               	movf	?_wireWriteDataByte,w
  6537  05D4  0427               	iorwf	?_wireWriteDataByte+1,w
  6538  05D5  1903               	btfsc	3,2
  6539  05D6  2CDD               	goto	l6750
  6540                           
  6541                           ;APDS9960.c: 116:     if( !setGestureIntEnable(0) ) {
  6542  05D7  3000               	movlw	0
  6543  05D8  318C  2460  3184   	fcall	_setGestureIntEnable
  6544  05DB  3A00               	xorlw	0
  6545  05DC  1903               	btfsc	3,2
  6546  05DD  2CDD               	goto	l6750
  6547                           
  6548                           ;APDS9960.c: 120:     return 1;
  6549  05DE  3001               	movlw	1
  6550  05DF  0008               	return
  6551  05E0                     __end_of_initialize:	
  6552                           
  6553                           	psect	text2
  6554  0C0C                     __ptext2:	
  6555 ;; *************** function _setProximityGain *****************
  6556 ;; Defined at:
  6557 ;;		line 192 in file "APDS9960.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  drive           1    wreg     unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  drive           1   13[BANK0 ] unsigned char 
  6562 ;;  val             1   12[BANK0 ] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      _Bool 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0, pclath, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;Total ram usage:        4 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    8
  6579 ;; This function calls:
  6580 ;;		_wireReadDataByte
  6581 ;;		_wireWriteDataByte
  6582 ;; This function is called by:
  6583 ;;		_initialize
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           
  6588                           ;psect for function _setProximityGain
  6589  0C0C                     _setProximityGain:	
  6590                           
  6591                           ;incstack = 0
  6592                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  6593                           ;setProximityGain@drive stored from wreg
  6594  0C0C  0020               	movlb	0	; select bank0
  6595  0C0D  00AD               	movwf	setProximityGain@drive
  6596                           
  6597                           ;APDS9960.c: 192: _Bool setProximityGain(uint8_t drive);APDS9960.c: 193: {;APDS9960.c: 1
      +                          94:     uint8_t val;;APDS9960.c: 197:     val=wireReadDataByte(0x8F);
  6598  0C0E  308F               	movlw	143
  6599  0C0F  318A  22FD  318C   	fcall	_wireReadDataByte
  6600  0C12  0020               	movlb	0	; select bank0
  6601  0C13  00AA               	movwf	??_setProximityGain
  6602  0C14  082A               	movf	??_setProximityGain,w
  6603  0C15  00AC               	movwf	setProximityGain@val
  6604                           
  6605                           ;APDS9960.c: 199:     drive &= 0b00000011;
  6606  0C16  3003               	movlw	3
  6607  0C17  00AA               	movwf	??_setProximityGain
  6608  0C18  082A               	movf	??_setProximityGain,w
  6609  0C19  05AD               	andwf	setProximityGain@drive,f
  6610                           
  6611                           ;APDS9960.c: 200:     drive = drive << 2;
  6612  0C1A  082D               	movf	setProximityGain@drive,w
  6613  0C1B  00AA               	movwf	??_setProximityGain
  6614  0C1C  3001               	movlw	1
  6615  0C1D                     u5615:	
  6616  0C1D  35AA               	lslf	??_setProximityGain,f
  6617  0C1E  3EFF               	addlw	-1
  6618  0C1F  1D03               	skipz
  6619  0C20  2C1D               	goto	u5615
  6620  0C21  352A               	lslf	??_setProximityGain,w
  6621  0C22  00AB               	movwf	??_setProximityGain+1
  6622  0C23  082B               	movf	??_setProximityGain+1,w
  6623  0C24  00AD               	movwf	setProximityGain@drive
=======
  6372  0026                     ??_fputc:	
  6373                           ; 1 bytes @ 0x6
  6374                           
  6375  0026                     ?_wireWriteDataByte:	
  6376                           ; 1 bytes @ 0x6
  6377                           
  6378  0026                     ?_wireReadDataBlock:	
  6379                           ; 2 bytes @ 0x6
  6380                           
  6381  0026                     ?___awdiv:	
  6382                           ; 2 bytes @ 0x6
  6383                           
  6384  0026                     wireWriteDataByte@val:	
  6385                           ; 2 bytes @ 0x6
  6386                           
  6387  0026                     _decodeGesture$1448:	
  6388                           ; 1 bytes @ 0x6
  6389                           
  6390  0026                     wireReadDataBlock@val:	
  6391                           ; 2 bytes @ 0x6
  6392                           
  6393  0026                     ___awdiv@divisor:	
  6394                           ; 2 bytes @ 0x6
  6395                           
  6396                           
  6397                           ; 2 bytes @ 0x6
  6398  0026                     	ds	1
  6399  0027                     ??_Display_Name:	
  6400  0027                     wireReadDataByte@reg:	
  6401                           ; 1 bytes @ 0x7
  6402                           
  6403  0027                     strcpy@s:	
  6404                           ; 1 bytes @ 0x7
  6405                           
  6406  0027                     On_Off@val:	
  6407                           ; 1 bytes @ 0x7
  6408                           
  6409                           
  6410                           ; 2 bytes @ 0x7
  6411  0027                     	ds	1
  6412  0028                     wireReadDataByte@val:	
  6413  0028                     strcpy@d:	
  6414                           ; 1 bytes @ 0x8
  6415                           
  6416  0028                     Display_Name@length:	
  6417                           ; 1 bytes @ 0x8
  6418                           
  6419  0028                     _decodeGesture$1449:	
  6420                           ; 2 bytes @ 0x8
  6421                           
  6422  0028                     wireReadDataBlock@len:	
  6423                           ; 2 bytes @ 0x8
  6424                           
  6425  0028                     ___awdiv@dividend:	
  6426                           ; 2 bytes @ 0x8
  6427                           
  6428  0028                     ___aodiv@dividend:	
  6429                           ; 2 bytes @ 0x8
  6430                           
  6431  0028                     ___aomod@dividend:	
  6432                           ; 8 bytes @ 0x8
  6433                           
  6434                           
  6435                           ; 8 bytes @ 0x8
  6436  0028                     	ds	1
  6437  0029                     ??_isGestureAvailable:	
  6438  0029                     ??_wireWriteDataByte:	
  6439                           ; 1 bytes @ 0x9
  6440                           
  6441  0029                     ??_getMode:	
  6442                           ; 1 bytes @ 0x9
  6443                           
  6444  0029                     wireWriteDataByte@reg:	
  6445                           ; 1 bytes @ 0x9
  6446                           
  6447  0029                     strcpy@dest:	
  6448                           ; 1 bytes @ 0x9
  6449                           
  6450                           
  6451                           ; 1 bytes @ 0x9
  6452  0029                     	ds	1
  6453  002A                     ?_strcat:	
  6454  002A                     ??_setLEDDrive:	
  6455                           ; 1 bytes @ 0xA
  6456                           
  6457  002A                     ??_setProximityGain:	
  6458                           ; 1 bytes @ 0xA
  6459                           
  6460  002A                     ??_setAmbientLightGain:	
  6461                           ; 1 bytes @ 0xA
  6462                           
  6463  002A                     ??_setProxIntLowThresh:	
  6464                           ; 1 bytes @ 0xA
  6465                           
  6466  002A                     ??_setProxIntHighThresh:	
  6467                           ; 1 bytes @ 0xA
  6468                           
  6469  002A                     ?_setLightIntLowThreshold:	
  6470                           ; 1 bytes @ 0xA
  6471                           
  6472  002A                     ?_setLightIntHighThreshold:	
  6473                           ; 1 bytes @ 0xA
  6474                           
  6475  002A                     ??_setGestureEnterThresh:	
  6476                           ; 1 bytes @ 0xA
  6477                           
  6478  002A                     ??_setGestureExitThresh:	
  6479                           ; 1 bytes @ 0xA
  6480                           
  6481  002A                     ??_setGestureGain:	
  6482                           ; 1 bytes @ 0xA
  6483                           
  6484  002A                     ??_setGestureLEDDrive:	
  6485                           ; 1 bytes @ 0xA
  6486                           
  6487  002A                     ??_setGestureWaitTime:	
  6488                           ; 1 bytes @ 0xA
  6489                           
  6490  002A                     ??_setGestureIntEnable:	
  6491                           ; 1 bytes @ 0xA
  6492                           
  6493  002A                     ??_setLEDBoost:	
  6494                           ; 1 bytes @ 0xA
  6495                           
  6496  002A                     ??_setGestureMode:	
  6497                           ; 1 bytes @ 0xA
  6498                           
  6499  002A                     ??_wireReadDataBlock:	
  6500                           ; 1 bytes @ 0xA
  6501                           
  6502  002A                     ??___awdiv:	
  6503                           ; 1 bytes @ 0xA
  6504                           
  6505  002A                     getMode@enable_value:	
  6506                           ; 1 bytes @ 0xA
  6507                           
  6508  002A                     isGestureAvailable@val:	
  6509                           ; 1 bytes @ 0xA
  6510                           
  6511  002A                     strcat@src:	
  6512                           ; 1 bytes @ 0xA
  6513                           
  6514  002A                     Display_Name@i:	
  6515                           ; 1 bytes @ 0xA
  6516                           
  6517  002A                     setLightIntLowThreshold@threshold:	
  6518                           ; 2 bytes @ 0xA
  6519                           
  6520  002A                     setLightIntHighThreshold@threshold:	
  6521                           ; 2 bytes @ 0xA
  6522                           
  6523  002A                     _decodeGesture$1450:	
  6524                           ; 2 bytes @ 0xA
  6525                           
  6526                           
  6527                           ; 2 bytes @ 0xA
  6528  002A                     	ds	1
  6529  002B                     ??_strcat:	
  6530  002B                     ?_setMode:	
  6531                           ; 1 bytes @ 0xB
  6532                           
  6533  002B                     ?_fputs:	
  6534                           ; 1 bytes @ 0xB
  6535                           
  6536  002B                     setMode@enable:	
  6537                           ; 2 bytes @ 0xB
  6538                           
  6539  002B                     setAmbientLightGain@drive:	
  6540                           ; 1 bytes @ 0xB
  6541                           
  6542  002B                     setProxIntLowThresh@threshold:	
  6543                           ; 1 bytes @ 0xB
  6544                           
  6545  002B                     setProxIntHighThresh@threshold:	
  6546                           ; 1 bytes @ 0xB
  6547                           
  6548  002B                     setGestureEnterThresh@threshold:	
  6549                           ; 1 bytes @ 0xB
  6550                           
  6551  002B                     setGestureExitThresh@threshold:	
  6552                           ; 1 bytes @ 0xB
  6553                           
  6554  002B                     setGestureWaitTime@time:	
  6555                           ; 1 bytes @ 0xB
  6556                           
  6557  002B                     setGestureIntEnable@val:	
  6558                           ; 1 bytes @ 0xB
  6559                           
  6560  002B                     setGestureMode@mode:	
  6561                           ; 1 bytes @ 0xB
  6562                           
  6563  002B                     ___awdiv@counter:	
  6564                           ; 1 bytes @ 0xB
  6565                           
  6566  002B                     fputs@fp:	
  6567                           ; 1 bytes @ 0xB
  6568                           
  6569                           
  6570                           ; 1 bytes @ 0xB
  6571  002B                     	ds	1
  6572  002C                     ??_Get_ADC:	
  6573  002C                     ??_setMode:	
  6574                           ; 1 bytes @ 0xC
  6575                           
  6576  002C                     ??_setLightIntLowThreshold:	
  6577                           ; 1 bytes @ 0xC
  6578                           
  6579  002C                     ??_setLightIntHighThreshold:	
  6580                           ; 1 bytes @ 0xC
  6581                           
  6582  002C                     ??_fputs:	
  6583                           ; 1 bytes @ 0xC
  6584                           
  6585  002C                     setLEDDrive@val:	
  6586                           ; 1 bytes @ 0xC
  6587                           
  6588  002C                     setProximityGain@val:	
  6589                           ; 1 bytes @ 0xC
  6590                           
  6591  002C                     setAmbientLightGain@val:	
  6592                           ; 1 bytes @ 0xC
  6593                           
  6594  002C                     setGestureGain@val:	
  6595                           ; 1 bytes @ 0xC
  6596                           
  6597  002C                     setGestureLEDDrive@val:	
  6598                           ; 1 bytes @ 0xC
  6599                           
  6600  002C                     setGestureWaitTime@val:	
  6601                           ; 1 bytes @ 0xC
  6602                           
  6603  002C                     setGestureIntEnable@enable:	
  6604                           ; 1 bytes @ 0xC
  6605                           
  6606  002C                     setLEDBoost@val:	
  6607                           ; 1 bytes @ 0xC
  6608                           
  6609  002C                     setGestureMode@val:	
  6610                           ; 1 bytes @ 0xC
  6611                           
  6612  002C                     ___awdiv@sign:	
  6613                           ; 1 bytes @ 0xC
  6614                           
  6615  002C                     _decodeGesture$1451:	
  6616                           ; 1 bytes @ 0xC
  6617                           
  6618                           
  6619                           ; 2 bytes @ 0xC
  6620  002C                     	ds	1
  6621  002D                     setLEDDrive@drive:	
  6622  002D                     setProximityGain@drive:	
  6623                           ; 1 bytes @ 0xD
>>>>>>> b288aef trying to integrate UART
  6624                           
<<<<<<< Upstream, based on origin/master
  6625                           ;APDS9960.c: 201:     val &= 0b11110011;
  6626  0C25  30F3               	movlw	243
  6627  0C26  00AA               	movwf	??_setProximityGain
  6628  0C27  082A               	movf	??_setProximityGain,w
  6629  0C28  05AC               	andwf	setProximityGain@val,f
  6630                           
  6631                           ;APDS9960.c: 202:     val |= drive;
  6632  0C29  082D               	movf	setProximityGain@drive,w
  6633  0C2A  00AA               	movwf	??_setProximityGain
  6634  0C2B  082A               	movf	??_setProximityGain,w
  6635  0C2C  04AC               	iorwf	setProximityGain@val,f
  6636                           
  6637                           ;APDS9960.c: 205:     if( !wireWriteDataByte(0x8F, val) ) {
  6638  0C2D  082C               	movf	setProximityGain@val,w
  6639  0C2E  00AA               	movwf	??_setProximityGain
  6640  0C2F  082A               	movf	??_setProximityGain,w
  6641  0C30  00A6               	movwf	wireWriteDataByte@val
  6642  0C31  308F               	movlw	143
  6643  0C32  318A  226E         	fcall	_wireWriteDataByte
  6644  0C34  0008               	return
  6645  0C35                     __end_of_setProximityGain:	
  6646                           
  6647                           	psect	text3
  6648  09FE                     __ptext3:	
  6649 ;; *************** function _setProxIntLowThresh *****************
  6650 ;; Defined at:
  6651 ;;		line 234 in file "APDS9960.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  threshold       1    wreg     unsigned char 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  threshold       1   11[BANK0 ] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      _Bool 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, pclath, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;Total ram usage:        2 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    8
  6672 ;; This function calls:
  6673 ;;		_wireWriteDataByte
  6674 ;; This function is called by:
  6675 ;;		_initialize
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           
  6680                           ;psect for function _setProxIntLowThresh
  6681  09FE                     _setProxIntLowThresh:	
  6682                           
  6683                           ;incstack = 0
  6684                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  6685                           ;setProxIntLowThresh@threshold stored from wreg
  6686  09FE  0020               	movlb	0	; select bank0
  6687  09FF  00AB               	movwf	setProxIntLowThresh@threshold
  6688                           
  6689                           ;APDS9960.c: 234: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 235: {;APDS99
      +                          60.c: 236:     if( !wireWriteDataByte(0x89, threshold) ) {
  6690  0A00  082B               	movf	setProxIntLowThresh@threshold,w
  6691  0A01  00AA               	movwf	??_setProxIntLowThresh
  6692  0A02  082A               	movf	??_setProxIntLowThresh,w
  6693  0A03  00A6               	movwf	wireWriteDataByte@val
  6694  0A04  3089               	movlw	137
  6695  0A05  318A  226E  3189   	fcall	_wireWriteDataByte
  6696  0A08  0020               	movlb	0	; select bank0
  6697  0A09  0826               	movf	?_wireWriteDataByte,w
  6698  0A0A  0427               	iorwf	?_wireWriteDataByte+1,w
  6699  0A0B  1D03               	btfss	3,2
  6700  0A0C  2A0F               	goto	l6494
  6701                           
  6702                           ;APDS9960.c: 237:         return 0;
  6703  0A0D  3000               	movlw	0
  6704  0A0E  0008               	return
  6705  0A0F                     l6494:	
  6706                           
  6707                           ;APDS9960.c: 240:     return 1;
  6708  0A0F  3001               	movlw	1
  6709  0A10  0008               	return
  6710  0A11                     __end_of_setProxIntLowThresh:	
  6711                           
  6712                           	psect	text4
  6713  09EB                     __ptext4:	
  6714 ;; *************** function _setProxIntHighThresh *****************
  6715 ;; Defined at:
  6716 ;;		line 244 in file "APDS9960.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  threshold       1    wreg     unsigned char 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  threshold       1   11[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      _Bool 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;Total ram usage:        2 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    8
  6737 ;; This function calls:
  6738 ;;		_wireWriteDataByte
  6739 ;; This function is called by:
  6740 ;;		_initialize
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           
  6745                           ;psect for function _setProxIntHighThresh
  6746  09EB                     _setProxIntHighThresh:	
  6747                           
  6748                           ;incstack = 0
  6749                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  6750                           ;setProxIntHighThresh@threshold stored from wreg
  6751  09EB  0020               	movlb	0	; select bank0
  6752  09EC  00AB               	movwf	setProxIntHighThresh@threshold
  6753                           
  6754                           ;APDS9960.c: 244: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 245: {;APDS9
      +                          960.c: 246:     if( !wireWriteDataByte(0x8B, threshold) ) {
  6755  09ED  082B               	movf	setProxIntHighThresh@threshold,w
  6756  09EE  00AA               	movwf	??_setProxIntHighThresh
  6757  09EF  082A               	movf	??_setProxIntHighThresh,w
  6758  09F0  00A6               	movwf	wireWriteDataByte@val
  6759  09F1  308B               	movlw	139
  6760  09F2  318A  226E  3189   	fcall	_wireWriteDataByte
  6761  09F5  0020               	movlb	0	; select bank0
  6762  09F6  0826               	movf	?_wireWriteDataByte,w
  6763  09F7  0427               	iorwf	?_wireWriteDataByte+1,w
  6764  09F8  1D03               	btfss	3,2
  6765  09F9  29FC               	goto	l6504
  6766                           
  6767                           ;APDS9960.c: 247:         return 0;
  6768  09FA  3000               	movlw	0
  6769  09FB  0008               	return
  6770  09FC                     l6504:	
  6771                           
  6772                           ;APDS9960.c: 250:     return 1;
  6773  09FC  3001               	movlw	1
  6774  09FD  0008               	return
  6775  09FE                     __end_of_setProxIntHighThresh:	
  6776                           
  6777                           	psect	text5
  6778  0BBC                     __ptext5:	
  6779 ;; *************** function _setLightIntLowThreshold *****************
  6780 ;; Defined at:
  6781 ;;		line 254 in file "APDS9960.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  threshold       2   10[BANK0 ] unsigned short 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  val_high        1   14[BANK0 ] unsigned char 
  6786 ;;  val_low         1   13[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      _Bool 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;Total ram usage:        5 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    8
  6803 ;; This function calls:
  6804 ;;		_wireWriteDataByte
  6805 ;; This function is called by:
  6806 ;;		_initialize
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function _setLightIntLowThreshold
  6812  0BBC                     _setLightIntLowThreshold:	
  6813                           
  6814                           ;APDS9960.c: 254: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 255: {;A
=======
  6625  002D                     setLightIntLowThreshold@val_low:	
  6626                           ; 1 bytes @ 0xD
  6627                           
  6628  002D                     setLightIntHighThreshold@val_low:	
  6629                           ; 1 bytes @ 0xD
  6630                           
  6631  002D                     setGestureGain@gain:	
  6632                           ; 1 bytes @ 0xD
  6633                           
  6634  002D                     setGestureLEDDrive@drive:	
  6635                           ; 1 bytes @ 0xD
  6636                           
  6637  002D                     setLEDBoost@boost:	
  6638                           ; 1 bytes @ 0xD
  6639                           
  6640  002D                     ___awdiv@quotient:	
  6641                           ; 1 bytes @ 0xD
  6642                           
  6643                           
  6644                           ; 2 bytes @ 0xD
  6645  002D                     	ds	1
  6646  002E                     setMode@reg_val:	
  6647  002E                     setLightIntLowThreshold@val_high:	
  6648                           ; 1 bytes @ 0xE
  6649                           
  6650  002E                     setLightIntHighThreshold@val_high:	
  6651                           ; 1 bytes @ 0xE
  6652                           
  6653  002E                     strcat@dest:	
  6654                           ; 1 bytes @ 0xE
  6655                           
  6656  002E                     _decodeGesture$1452:	
  6657                           ; 1 bytes @ 0xE
  6658                           
  6659                           
  6660                           ; 2 bytes @ 0xE
  6661  002E                     	ds	1
  6662  002F                     ??_processGestureData:	
  6663  002F                     setMode@mode:	
  6664                           ; 1 bytes @ 0xF
  6665                           
  6666  002F                     wireReadDataBlock@reg:	
  6667                           ; 1 bytes @ 0xF
  6668                           
  6669  002F                     fputs@c:	
  6670                           ; 1 bytes @ 0xF
  6671                           
  6672  002F                     Get_ADC@val:	
  6673                           ; 1 bytes @ 0xF
  6674                           
  6675                           
  6676                           ; 2 bytes @ 0xF
  6677  002F                     	ds	1
  6678  0030                     ??_initialize:	
  6679  0030                     ??_enableGestureSensor:	
  6680                           ; 1 bytes @ 0x10
  6681                           
  6682  0030                     ??_enablePower:	
  6683                           ; 1 bytes @ 0x10
  6684                           
  6685  0030                     ??___aodiv:	
  6686                           ; 1 bytes @ 0x10
  6687                           
  6688  0030                     ??___aomod:	
  6689                           ; 1 bytes @ 0x10
  6690                           
  6691  0030                     wireReadDataBlock@j:	
  6692                           ; 1 bytes @ 0x10
  6693                           
  6694  0030                     _decodeGesture$1453:	
  6695                           ; 1 bytes @ 0x10
  6696                           
  6697  0030                     fputs@i:	
  6698                           ; 2 bytes @ 0x10
  6699                           
  6700                           
  6701                           ; 2 bytes @ 0x10
  6702  0030                     	ds	1
  6703  0031                     initialize@id:	
  6704  0031                     enableGestureSensor@interrupts:	
  6705                           ; 1 bytes @ 0x11
  6706                           
  6707  0031                     ___aodiv@counter:	
  6708                           ; 1 bytes @ 0x11
  6709                           
  6710  0031                     ___aomod@counter:	
  6711                           ; 1 bytes @ 0x11
  6712                           
  6713  0031                     processGestureData@ud_ratio_first:	
  6714                           ; 1 bytes @ 0x11
  6715                           
  6716                           
  6717                           ; 2 bytes @ 0x11
  6718  0031                     	ds	1
  6719  0032                     ___aodiv@sign:	
  6720  0032                     ___aomod@sign:	
  6721                           ; 1 bytes @ 0x12
  6722                           
  6723  0032                     fputs@s:	
  6724                           ; 1 bytes @ 0x12
  6725                           
  6726                           
  6727                           ; 1 bytes @ 0x12
  6728  0032                     	ds	1
  6729  0033                     ?_abs:	
  6730  0033                     ?_pad:	
  6731                           ; 2 bytes @ 0x13
  6732                           
  6733  0033                     pad@buf:	
  6734                           ; 2 bytes @ 0x13
  6735                           
  6736  0033                     processGestureData@lr_ratio_first:	
  6737                           ; 1 bytes @ 0x13
  6738                           
  6739  0033                     abs@a:	
  6740                           ; 2 bytes @ 0x13
  6741                           
  6742  0033                     ___aodiv@quotient:	
  6743                           ; 2 bytes @ 0x13
  6744                           
  6745                           
  6746                           ; 8 bytes @ 0x13
  6747  0033                     	ds	1
  6748  0034                     pad@p:	
  6749                           
  6750                           ; 2 bytes @ 0x14
  6751  0034                     	ds	1
  6752  0035                     ??_abs:	
  6753  0035                     processGestureData@ud_ratio_last:	
  6754                           ; 1 bytes @ 0x15
  6755                           
  6756                           
  6757                           ; 2 bytes @ 0x15
  6758  0035                     	ds	1
  6759  0036                     ??_pad:	
  6760                           
  6761                           ; 1 bytes @ 0x16
  6762  0036                     	ds	1
  6763  0037                     processGestureData@lr_ratio_last:	
  6764  0037                     pad@i:	
  6765                           ; 2 bytes @ 0x17
  6766                           
  6767                           
  6768                           ; 2 bytes @ 0x17
  6769  0037                     	ds	2
  6770  0039                     _processGestureData$1441:	
  6771  0039                     pad@w:	
  6772                           ; 2 bytes @ 0x19
  6773                           
  6774                           
  6775                           ; 2 bytes @ 0x19
  6776  0039                     	ds	2
  6777  003B                     pad@fp:	
  6778  003B                     _processGestureData$1442:	
  6779                           ; 1 bytes @ 0x1B
  6780                           
  6781                           
  6782                           ; 2 bytes @ 0x1B
  6783  003B                     	ds	1
  6784  003C                     ?_dtoa:	
  6785  003C                     dtoa@d:	
  6786                           ; 2 bytes @ 0x1C
  6787                           
  6788                           
  6789                           ; 8 bytes @ 0x1C
  6790  003C                     	ds	1
  6791  003D                     _processGestureData$1443:	
  6792                           
  6793                           ; 2 bytes @ 0x1D
  6794  003D                     	ds	2
  6795  003F                     _processGestureData$1444:	
  6796                           
  6797                           ; 2 bytes @ 0x1F
  6798  003F                     	ds	2
  6799  0041                     processGestureData@u_last:	
  6800                           
  6801                           ; 1 bytes @ 0x21
  6802  0041                     	ds	1
  6803  0042                     processGestureData@d_last:	
  6804                           
  6805                           ; 1 bytes @ 0x22
  6806  0042                     	ds	1
  6807  0043                     processGestureData@l_last:	
  6808                           
  6809                           ; 1 bytes @ 0x23
  6810  0043                     	ds	1
  6811  0044                     ??_dtoa:	
  6812  0044                     processGestureData@r_last:	
  6813                           ; 1 bytes @ 0x24
  6814                           
  6815                           
  6816                           ; 1 bytes @ 0x24
  6817  0044                     	ds	1
  6818  0045                     processGestureData@u_first:	
  6819                           
  6820                           ; 1 bytes @ 0x25
  6821  0045                     	ds	1
  6822  0046                     processGestureData@d_first:	
  6823                           
  6824                           ; 1 bytes @ 0x26
  6825  0046                     	ds	1
  6826  0047                     processGestureData@l_first:	
  6827  0047                     dtoa@fp:	
  6828                           ; 1 bytes @ 0x27
  6829                           
  6830                           
  6831                           ; 1 bytes @ 0x27
  6832  0047                     	ds	1
  6833  0048                     processGestureData@r_first:	
  6834  0048                     _dtoa$2131:	
  6835                           ; 1 bytes @ 0x28
  6836                           
  6837                           
  6838                           ; 2 bytes @ 0x28
  6839  0048                     	ds	1
  6840  0049                     processGestureData@ud_delta:	
  6841                           
  6842                           ; 2 bytes @ 0x29
  6843  0049                     	ds	1
  6844  004A                     dtoa@p:	
  6845                           
  6846                           ; 2 bytes @ 0x2A
  6847  004A                     	ds	1
  6848  004B                     processGestureData@lr_delta:	
  6849                           
  6850                           ; 2 bytes @ 0x2B
  6851  004B                     	ds	1
  6852  004C                     dtoa@w:	
  6853                           
  6854                           ; 2 bytes @ 0x2C
  6855  004C                     	ds	1
  6856  004D                     processGestureData@i:	
  6857                           
  6858                           ; 2 bytes @ 0x2D
  6859  004D                     	ds	1
  6860  004E                     dtoa@s:	
  6861                           
  6862                           ; 2 bytes @ 0x2E
  6863  004E                     	ds	1
  6864  004F                     ?_readGesture:	
  6865                           
  6866                           ; 2 bytes @ 0x2F
  6867  004F                     	ds	1
  6868  0050                     dtoa@n:	
  6869                           
  6870                           ; 8 bytes @ 0x30
  6871  0050                     	ds	1
  6872  0051                     ??_readGesture:	
  6873                           
  6874                           ; 1 bytes @ 0x31
  6875  0051                     	ds	2
  6876  0053                     readGesture@motion:	
  6877                           
  6878                           ; 2 bytes @ 0x33
  6879  0053                     	ds	2
  6880  0055                     readGesture@gstatus:	
  6881                           
  6882                           ; 1 bytes @ 0x35
  6883  0055                     	ds	1
  6884  0056                     readGesture@bytes_read:	
  6885                           
  6886                           ; 2 bytes @ 0x36
  6887  0056                     	ds	2
  6888  0058                     readGesture@fifo_level:	
  6889  0058                     dtoa@i:	
  6890                           ; 1 bytes @ 0x38
  6891                           
  6892                           
  6893                           ; 2 bytes @ 0x38
  6894  0058                     	ds	1
  6895  0059                     readGesture@i:	
  6896                           
  6897                           ; 2 bytes @ 0x39
  6898  0059                     	ds	1
  6899  005A                     ?_vfpfcnvrt:	
  6900  005A                     vfpfcnvrt@fmt:	
  6901                           ; 2 bytes @ 0x3A
  6902                           
  6903                           
  6904                           ; 1 bytes @ 0x3A
  6905  005A                     	ds	1
  6906  005B                     ??_handleGesture:	
  6907  005B                     vfpfcnvrt@ap:	
  6908                           ; 1 bytes @ 0x3B
  6909                           
  6910                           
  6911                           ; 1 bytes @ 0x3B
  6912  005B                     	ds	1
  6913  005C                     ??_vfpfcnvrt:	
  6914                           
  6915                           ; 1 bytes @ 0x3C
  6916  005C                     	ds	5
  6917  0061                     vfpfcnvrt@ll:	
  6918                           
  6919                           ; 8 bytes @ 0x41
  6920  0061                     	ds	8
  6921  0069                     vfpfcnvrt@fp:	
  6922                           
  6923                           ; 1 bytes @ 0x49
  6924  0069                     	ds	1
  6925  006A                     ?_vfprintf:	
  6926  006A                     vfprintf@fmt:	
  6927                           ; 2 bytes @ 0x4A
  6928                           
  6929                           
  6930                           ; 2 bytes @ 0x4A
  6931  006A                     	ds	2
  6932  006C                     vfprintf@ap:	
  6933                           
  6934                           ; 1 bytes @ 0x4C
  6935  006C                     	ds	1
  6936  006D                     ??_vfprintf:	
  6937                           
  6938                           ; 1 bytes @ 0x4D
  6939  006D                     	ds	2
  6940  006F                     ??_sprintf:	
  6941                           
  6942                           ; 1 bytes @ 0x4F
  6943  006F                     	ds	1
  6944                           
  6945                           	psect	maintext
  6946  09A9                     __pmaintext:	
  6947 ;;
  6948 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6949 ;;
  6950 ;; *************** function _main *****************
  6951 ;; Defined at:
  6952 ;;		line 115 in file "main.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  temp            2    0        int 
  6957 ;;  count           2    0        unsigned int 
  6958 ;;  startSystem     1   69[BANK1 ] _Bool 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : B1F/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;Total ram usage:        6 bytes
  6973 ;; Hardware stack levels required when called:   15
  6974 ;; This function calls:
  6975 ;;		_Display_Clear
  6976 ;;		_Display_Name
  6977 ;;		_Get_ADC
  6978 ;;		_On_Off
  6979 ;;		_PIR_Sensor
  6980 ;;		_SYSTEM_Initialize
  6981 ;;		_UART_Byte
  6982 ;;		_enableGestureSensor
  6983 ;;		_handleGesture
  6984 ;;		_initialize
  6985 ;;		_isGestureAvailable
  6986 ;; This function is called by:
  6987 ;;		Startup code after reset
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           
  6992                           ;psect for function _main
  6993  09A9                     _main:	
  6994                           
  6995                           ;main.c: 118:     SYSTEM_Initialize();
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6999  09A9  3193  236A  3189   	fcall	_SYSTEM_Initialize
  7000                           
  7001                           ;main.c: 124:     (INTCONbits.GIE = 1);
  7002  09AC  178B               	bsf	11,7	;volatile
  7003                           
  7004                           ;main.c: 127:     (INTCONbits.PEIE = 1);
  7005  09AD  170B               	bsf	11,6	;volatile
  7006                           
  7007                           ;main.c: 130:     Display_Clear();
  7008  09AE  3192  2257  3189   	fcall	_Display_Clear
  7009  09B1                     l8405:	
  7010                           ;main.c: 132:     while(On_Off() != 1);
  7011                           
  7012  09B1  3197  277D  3189   	fcall	_On_Off
  7013  09B4  3A01               	xorlw	1
  7014  09B5  1D03               	skipz
  7015  09B6  29B1               	goto	l8405
  7016                           
  7017                           ;main.c: 133:     if(PIR_Sensor()) {
  7018  09B7  3192  2222  3189   	fcall	_PIR_Sensor
  7019  09BA  3A00               	xorlw	0
  7020  09BB  1903               	skipnz
  7021  09BC  29C4               	goto	l707
  7022                           
  7023                           ;main.c: 134:         initialize();
  7024  09BD  3186  2652  3189   	fcall	_initialize
  7025                           
  7026                           ;main.c: 135:         enableGestureSensor(0);
  7027  09C0  3000               	movlw	0
  7028  09C1  318A  229E  3189   	fcall	_enableGestureSensor
  7029  09C4                     l707:	
  7030                           ;main.c: 137:     _Bool startSystem;;main.c: 138:     int temp;;main.c: 139:     while (
      +                          1)
  7031                           
  7032                           ;main.c: 136:     }
  7033                           
  7034                           
  7035                           ;main.c: 140:     {;main.c: 141:         On_Off();
  7036  09C4  3197  277D  3189   	fcall	_On_Off
  7037                           
  7038                           ;main.c: 142:         UART_Byte();
  7039  09C7  3187  2761  3189   	fcall	_UART_Byte
  7040                           
  7041                           ;main.c: 143:         if(on) {
  7042  09CA  0021               	movlb	1	; select bank1
  7043  09CB  086F               	movf	_on^(0+128),w
  7044  09CC  1903               	btfsc	3,2
  7045  09CD  29C4               	goto	l707
  7046                           
  7047                           ;main.c: 144:             startSystem = PIR_Sensor();
  7048  09CE  3192  2222  3189   	fcall	_PIR_Sensor
  7049  09D1  0021               	movlb	1	; select bank1
  7050  09D2  00E0               	movwf	??_main^(0+128)
  7051  09D3  0860               	movf	??_main^(0+128),w
  7052  09D4  00E5               	movwf	main@startSystem^(0+128)
  7053                           
  7054                           ;main.c: 145:             if(startSystem) {
  7055  09D5  0865               	movf	main@startSystem^(0+128),w
  7056  09D6  1903               	btfsc	3,2
  7057  09D7  29C4               	goto	l707
  7058                           
  7059                           ;main.c: 147:                 if(start == 1) {
  7060  09D8  0022               	movlb	2	; select bank2
  7061  09D9  036F               	decf	_start^(0+256),w
  7062  09DA  1D03               	btfss	3,2
  7063  09DB  29EC               	goto	l8427
  7064                           
  7065                           ;main.c: 148:                     Display_Name(names[name]);
  7066  09DC  0021               	movlb	1	; select bank1
  7067  09DD  3566               	lslf	_name^(0+128),w
  7068  09DE  3EE7               	addlw	(low (_names| (0+256)))& (0+255)
  7069  09DF  0086               	movwf	6
  7070  09E0  3001               	movlw	1	; select bank3/4
  7071  09E1  0087               	movwf	7
  7072  09E2  3F40               	moviw [0]fsr1
  7073  09E3  0020               	movlb	0	; select bank0
  7074  09E4  00A5               	movwf	Display_Name@string1
  7075  09E5  3F41               	moviw [1]fsr1
  7076  09E6  00A6               	movwf	Display_Name@string1+1
  7077  09E7  3189  2159  3189   	fcall	_Display_Name
  7078                           
  7079                           ;main.c: 149:                     start = 0;
  7080  09EA  0022               	movlb	2	; select bank2
  7081  09EB  01EF               	clrf	_start^(0+256)
  7082  09EC                     l8427:	
  7083                           
  7084                           ;main.c: 151:                 Get_ADC();
  7085  09EC  318E  26F6  3189   	fcall	_Get_ADC
  7086                           
  7087                           ;main.c: 153:                 if( isGestureAvailable()){
  7088  09EF  3192  2268  3189   	fcall	_isGestureAvailable
  7089  09F2  3A00               	xorlw	0
  7090  09F3  1903               	skipnz
  7091  09F4  29C4               	goto	l707
  7092                           
  7093                           ;main.c: 154:                     handleGesture();
  7094  09F5  318A  22FA  3189   	fcall	_handleGesture
  7095  09F8  29C4               	goto	l707
  7096  09F9                     __end_of_main:	
  7097                           
  7098                           	psect	text1
  7099  0652                     __ptext1:	
  7100 ;; *************** function _initialize *****************
  7101 ;; Defined at:
  7102 ;;		line 20 in file "APDS9960.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  id              1   17[BANK0 ] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      _Bool 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0, pclath, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;Total ram usage:        2 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:   10
  7123 ;; This function calls:
  7124 ;;		_i2c1_driver_open
  7125 ;;		_setAmbientLightGain
  7126 ;;		_setGestureEnterThresh
  7127 ;;		_setGestureExitThresh
  7128 ;;		_setGestureGain
  7129 ;;		_setGestureIntEnable
  7130 ;;		_setGestureLEDDrive
  7131 ;;		_setGestureWaitTime
  7132 ;;		_setLEDDrive
  7133 ;;		_setLightIntHighThreshold
  7134 ;;		_setLightIntLowThreshold
  7135 ;;		_setMode
  7136 ;;		_setProxIntHighThresh
  7137 ;;		_setProxIntLowThresh
  7138 ;;		_setProximityGain
  7139 ;;		_wireReadDataByte
  7140 ;;		_wireWriteDataByte
  7141 ;; This function is called by:
  7142 ;;		_main
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           
  7147                           ;psect for function _initialize
  7148  0652                     _initialize:	
  7149                           
  7150                           ;APDS9960.c: 25:     i2c1_driver_open();
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  7154  0652  3192  220D  3186   	fcall	_i2c1_driver_open
  7155                           
  7156                           ;APDS9960.c: 31:     id = wireReadDataByte(0x92);
  7157  0655  3092               	movlw	146
  7158  0656  3194  2455  3186   	fcall	_wireReadDataByte
  7159  0659  0020               	movlb	0	; select bank0
  7160  065A  00B0               	movwf	??_initialize
  7161  065B  0830               	movf	??_initialize,w
  7162  065C  00B1               	movwf	initialize@id
  7163                           
  7164                           ;APDS9960.c: 33:     if( !(id == 0xAB ||id == 0x9C ) )
  7165  065D  30AB               	movlw	171
  7166  065E  0631               	xorwf	initialize@id,w
  7167  065F  1903               	btfsc	3,2
  7168  0660  2E65               	goto	l8101
  7169  0661  309C               	movlw	156
  7170  0662  0631               	xorwf	initialize@id,w
  7171  0663  1D03               	btfss	3,2
  7172  0664  0008               	return
  7173  0665                     l8101:	
  7174                           
  7175                           ;APDS9960.c: 39:     setMode(7, 0);
  7176  0665  01AB               	clrf	setMode@enable
  7177  0666  3007               	movlw	7
  7178  0667  3189  210A  3186   	fcall	_setMode
  7179                           
  7180                           ;APDS9960.c: 41:     wireWriteDataByte(0x81, 219);
  7181  066A  30DB               	movlw	219
  7182  066B  0020               	movlb	0	; select bank0
  7183  066C  00B0               	movwf	??_initialize
  7184  066D  0830               	movf	??_initialize,w
  7185  066E  00A6               	movwf	wireWriteDataByte@val
  7186  066F  3081               	movlw	129
  7187  0670  3193  2385  3186   	fcall	_wireWriteDataByte
  7188                           
  7189                           ;APDS9960.c: 42:     wireWriteDataByte(0x83, 246);
  7190  0673  30F6               	movlw	246
  7191  0674  0020               	movlb	0	; select bank0
  7192  0675  00B0               	movwf	??_initialize
  7193  0676  0830               	movf	??_initialize,w
  7194  0677  00A6               	movwf	wireWriteDataByte@val
  7195  0678  3083               	movlw	131
  7196  0679  3193  2385  3186   	fcall	_wireWriteDataByte
  7197                           
  7198                           ;APDS9960.c: 43:     wireWriteDataByte(0x8E, 0x87);
  7199  067C  3087               	movlw	135
  7200  067D  0020               	movlb	0	; select bank0
  7201  067E  00B0               	movwf	??_initialize
  7202  067F  0830               	movf	??_initialize,w
  7203  0680  00A6               	movwf	wireWriteDataByte@val
  7204  0681  308E               	movlw	142
  7205  0682  3193  2385  3186   	fcall	_wireWriteDataByte
  7206                           
  7207                           ;APDS9960.c: 44:     wireWriteDataByte(0x9D, 0) ;
  7208  0685  0020               	movlb	0	; select bank0
  7209  0686  01A6               	clrf	wireWriteDataByte@val
  7210  0687  309D               	movlw	157
  7211  0688  3193  2385  3186   	fcall	_wireWriteDataByte
  7212                           
  7213                           ;APDS9960.c: 45:     wireWriteDataByte(0x9E, 0) ;
  7214  068B  0020               	movlb	0	; select bank0
  7215  068C  01A6               	clrf	wireWriteDataByte@val
  7216  068D  309E               	movlw	158
  7217  068E  3193  2385  3186   	fcall	_wireWriteDataByte
  7218                           
  7219                           ;APDS9960.c: 46:     wireWriteDataByte(0x8D, 0x60) ;
  7220  0691  3060               	movlw	96
  7221  0692  0020               	movlb	0	; select bank0
  7222  0693  00B0               	movwf	??_initialize
  7223  0694  0830               	movf	??_initialize,w
  7224  0695  00A6               	movwf	wireWriteDataByte@val
  7225  0696  308D               	movlw	141
  7226  0697  3193  2385  3186   	fcall	_wireWriteDataByte
  7227                           
  7228                           ;APDS9960.c: 47:     setLEDDrive(0);
  7229  069A  3000               	movlw	0
  7230  069B  3195  2561  3186   	fcall	_setLEDDrive
  7231                           
  7232                           ;APDS9960.c: 48:     setProximityGain(2);
  7233  069E  3002               	movlw	2
  7234  069F  3188  2001  3186   	fcall	_setProximityGain
  7235                           
  7236                           ;APDS9960.c: 49:     setAmbientLightGain(1);
  7237  06A2  3001               	movlw	1
  7238  06A3  3193  23F6  3186   	fcall	_setAmbientLightGain
  7239                           
  7240                           ;APDS9960.c: 51:     if( !setProxIntLowThresh(0) ) {
  7241  06A6  3000               	movlw	0
  7242  06A7  3192  22B4  3186   	fcall	_setProxIntLowThresh
  7243  06AA  3A00               	xorlw	0
  7244  06AB  1903               	btfsc	3,2
  7245  06AC  0008               	return
  7246                           
  7247                           ;APDS9960.c: 54:     if( !setProxIntHighThresh(50) ) {
  7248  06AD  3032               	movlw	50
  7249  06AE  3192  22A1  3186   	fcall	_setProxIntHighThresh
  7250  06B1  3A00               	xorlw	0
  7251  06B2  1903               	btfsc	3,2
  7252  06B3  0008               	return
  7253                           
  7254                           ;APDS9960.c: 59:     if( !setLightIntLowThreshold(0xFFFF) ) {
  7255  06B4  30FF               	movlw	255
  7256  06B5  0020               	movlb	0	; select bank0
  7257  06B6  00AA               	movwf	setLightIntLowThreshold@threshold
  7258  06B7  30FF               	movlw	255
  7259  06B8  00AB               	movwf	setLightIntLowThreshold@threshold+1
  7260  06B9  3195  253A  3186   	fcall	_setLightIntLowThreshold
  7261  06BC  3A00               	xorlw	0
  7262  06BD  1903               	btfsc	3,2
  7263  06BE  0008               	return
  7264                           
  7265                           ;APDS9960.c: 62:     if( !setLightIntHighThreshold(0) ) {
  7266  06BF  3000               	movlw	0
  7267  06C0  0020               	movlb	0	; select bank0
  7268  06C1  00AA               	movwf	setLightIntHighThreshold@threshold
  7269  06C2  00AB               	movwf	setLightIntHighThreshold@threshold+1
  7270  06C3  3195  2513  3186   	fcall	_setLightIntHighThreshold
  7271  06C6  3A00               	xorlw	0
  7272  06C7  1903               	btfsc	3,2
  7273  06C8  0008               	return
  7274                           
  7275                           ;APDS9960.c: 66:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  7276  06C9  3011               	movlw	17
  7277  06CA  0020               	movlb	0	; select bank0
  7278  06CB  00B0               	movwf	??_initialize
  7279  06CC  0830               	movf	??_initialize,w
  7280  06CD  00A6               	movwf	wireWriteDataByte@val
  7281  06CE  308C               	movlw	140
  7282  06CF  3193  2385  3186   	fcall	_wireWriteDataByte
  7283  06D2  0020               	movlb	0	; select bank0
  7284  06D3  0826               	movf	?_wireWriteDataByte,w
  7285  06D4  0427               	iorwf	?_wireWriteDataByte+1,w
  7286  06D5  1903               	btfsc	3,2
  7287  06D6  0008               	return
  7288                           
  7289                           ;APDS9960.c: 71:     if( !wireWriteDataByte(0x90, 0x01) ) {
  7290  06D7  01A6               	clrf	wireWriteDataByte@val
  7291  06D8  0AA6               	incf	wireWriteDataByte@val,f
  7292  06D9  3090               	movlw	144
  7293  06DA  3193  2385  3186   	fcall	_wireWriteDataByte
  7294  06DD  0020               	movlb	0	; select bank0
  7295  06DE  0826               	movf	?_wireWriteDataByte,w
  7296  06DF  0427               	iorwf	?_wireWriteDataByte+1,w
  7297  06E0  1903               	btfsc	3,2
  7298  06E1  0008               	return
  7299                           
  7300                           ;APDS9960.c: 74:     if( !wireWriteDataByte(0x9F, 0) ) {
  7301  06E2  01A6               	clrf	wireWriteDataByte@val
  7302  06E3  309F               	movlw	159
  7303  06E4  3193  2385  3186   	fcall	_wireWriteDataByte
  7304  06E7  0020               	movlb	0	; select bank0
  7305  06E8  0826               	movf	?_wireWriteDataByte,w
  7306  06E9  0427               	iorwf	?_wireWriteDataByte+1,w
  7307  06EA  1903               	btfsc	3,2
  7308  06EB  0008               	return
  7309                           
  7310                           ;APDS9960.c: 78:     if( !setGestureEnterThresh(40) ) {
  7311  06EC  3028               	movlw	40
  7312  06ED  3192  227B  3186   	fcall	_setGestureEnterThresh
  7313  06F0  3A00               	xorlw	0
  7314  06F1  1903               	btfsc	3,2
  7315  06F2  0008               	return
  7316                           
  7317                           ;APDS9960.c: 82:     if( !setGestureExitThresh(30) ) {
  7318  06F3  301E               	movlw	30
  7319  06F4  3192  228E  3186   	fcall	_setGestureExitThresh
  7320  06F7  3A00               	xorlw	0
  7321  06F8  1903               	btfsc	3,2
  7322  06F9  0008               	return
  7323                           
  7324                           ;APDS9960.c: 85:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  7325  06FA  3040               	movlw	64
  7326  06FB  0020               	movlb	0	; select bank0
  7327  06FC  00B0               	movwf	??_initialize
  7328  06FD  0830               	movf	??_initialize,w
  7329  06FE  00A6               	movwf	wireWriteDataByte@val
  7330  06FF  30A2               	movlw	162
  7331  0700  3193  2385  3186   	fcall	_wireWriteDataByte
  7332  0703  0020               	movlb	0	; select bank0
  7333  0704  0826               	movf	?_wireWriteDataByte,w
  7334  0705  0427               	iorwf	?_wireWriteDataByte+1,w
  7335  0706  1903               	btfsc	3,2
  7336  0707  0008               	return
  7337                           
  7338                           ;APDS9960.c: 88:     if( !setGestureGain(2) ) {
  7339  0708  3002               	movlw	2
  7340  0709  3196  263E  3186   	fcall	_setGestureGain
  7341  070C  3A00               	xorlw	0
  7342  070D  1903               	btfsc	3,2
  7343  070E  0008               	return
  7344                           
  7345                           ;APDS9960.c: 91:     if( !setGestureLEDDrive(0) ) {
  7346  070F  3000               	movlw	0
  7347  0710  3196  2670  3186   	fcall	_setGestureLEDDrive
  7348  0713  3A00               	xorlw	0
  7349  0714  1903               	btfsc	3,2
  7350  0715  0008               	return
  7351                           
  7352                           ;APDS9960.c: 95:     if( !setGestureWaitTime(1) ) {
  7353  0716  3001               	movlw	1
  7354  0717  3194  24EC  3186   	fcall	_setGestureWaitTime
  7355  071A  3A00               	xorlw	0
  7356  071B  1903               	btfsc	3,2
  7357  071C  0008               	return
  7358                           
  7359                           ;APDS9960.c: 98:     if( !wireWriteDataByte(0xA4, 0) ) {
  7360  071D  0020               	movlb	0	; select bank0
  7361  071E  01A6               	clrf	wireWriteDataByte@val
  7362  071F  30A4               	movlw	164
  7363  0720  3193  2385  3186   	fcall	_wireWriteDataByte
  7364  0723  0020               	movlb	0	; select bank0
  7365  0724  0826               	movf	?_wireWriteDataByte,w
  7366  0725  0427               	iorwf	?_wireWriteDataByte+1,w
  7367  0726  1903               	btfsc	3,2
  7368  0727  0008               	return
  7369                           
  7370                           ;APDS9960.c: 101:     if( !wireWriteDataByte(0xA5, 0) ) {
  7371  0728  01A6               	clrf	wireWriteDataByte@val
  7372  0729  30A5               	movlw	165
  7373  072A  3193  2385  3186   	fcall	_wireWriteDataByte
  7374  072D  0020               	movlb	0	; select bank0
  7375  072E  0826               	movf	?_wireWriteDataByte,w
  7376  072F  0427               	iorwf	?_wireWriteDataByte+1,w
  7377  0730  1903               	btfsc	3,2
  7378  0731  0008               	return
  7379                           
  7380                           ;APDS9960.c: 104:     if( !wireWriteDataByte(0xA7, 0) ) {
  7381  0732  01A6               	clrf	wireWriteDataByte@val
  7382  0733  30A7               	movlw	167
  7383  0734  3193  2385  3186   	fcall	_wireWriteDataByte
  7384  0737  0020               	movlb	0	; select bank0
  7385  0738  0826               	movf	?_wireWriteDataByte,w
  7386  0739  0427               	iorwf	?_wireWriteDataByte+1,w
  7387  073A  1903               	btfsc	3,2
  7388  073B  0008               	return
  7389                           
  7390                           ;APDS9960.c: 107:     if( !wireWriteDataByte(0xA9, 0) ) {
  7391  073C  01A6               	clrf	wireWriteDataByte@val
  7392  073D  30A9               	movlw	169
  7393  073E  3193  2385  3186   	fcall	_wireWriteDataByte
  7394  0741  0020               	movlb	0	; select bank0
  7395  0742  0826               	movf	?_wireWriteDataByte,w
  7396  0743  0427               	iorwf	?_wireWriteDataByte+1,w
  7397  0744  1903               	btfsc	3,2
  7398  0745  0008               	return
  7399                           
  7400                           ;APDS9960.c: 110:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  7401  0746  30C9               	movlw	201
  7402  0747  00B0               	movwf	??_initialize
  7403  0748  0830               	movf	??_initialize,w
  7404  0749  00A6               	movwf	wireWriteDataByte@val
  7405  074A  30A6               	movlw	166
  7406  074B  3193  2385  3186   	fcall	_wireWriteDataByte
  7407  074E  0020               	movlb	0	; select bank0
  7408  074F  0826               	movf	?_wireWriteDataByte,w
  7409  0750  0427               	iorwf	?_wireWriteDataByte+1,w
  7410  0751  1903               	btfsc	3,2
  7411  0752  0008               	return
  7412                           
  7413                           ;APDS9960.c: 113:     if( !wireWriteDataByte(0xAA, 0) ) {
  7414  0753  01A6               	clrf	wireWriteDataByte@val
  7415  0754  30AA               	movlw	170
  7416  0755  3193  2385  3186   	fcall	_wireWriteDataByte
  7417  0758  0020               	movlb	0	; select bank0
  7418  0759  0826               	movf	?_wireWriteDataByte,w
  7419  075A  0427               	iorwf	?_wireWriteDataByte+1,w
  7420  075B  1903               	btfsc	3,2
  7421  075C  0008               	return
  7422                           
  7423                           ;APDS9960.c: 116:     if( !setGestureIntEnable(0) ) {
  7424  075D  3000               	movlw	0
  7425  075E  3195  25B5         	fcall	_setGestureIntEnable
  7426  0760  0008               	return
  7427  0761                     __end_of_initialize:	
  7428                           
  7429                           	psect	text2
  7430  0801                     __ptext2:	
  7431 ;; *************** function _setProximityGain *****************
  7432 ;; Defined at:
  7433 ;;		line 192 in file "APDS9960.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  drive           1    wreg     unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  drive           1   13[BANK0 ] unsigned char 
  7438 ;;  val             1   12[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      _Bool 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;Total ram usage:        4 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    8
  7455 ;; This function calls:
  7456 ;;		_wireReadDataByte
  7457 ;;		_wireWriteDataByte
  7458 ;; This function is called by:
  7459 ;;		_initialize
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           
  7464                           ;psect for function _setProximityGain
  7465  0801                     _setProximityGain:	
  7466                           
  7467                           ;incstack = 0
  7468                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  7469                           ;setProximityGain@drive stored from wreg
  7470  0801  0020               	movlb	0	; select bank0
  7471  0802  00AD               	movwf	setProximityGain@drive
  7472                           
  7473                           ;APDS9960.c: 192: _Bool setProximityGain(uint8_t drive);APDS9960.c: 193: {;APDS9960.c: 1
      +                          94:     uint8_t val;;APDS9960.c: 197:     val=wireReadDataByte(0x8F);
  7474  0803  308F               	movlw	143
  7475  0804  3194  2455  3188   	fcall	_wireReadDataByte
  7476  0807  0020               	movlb	0	; select bank0
  7477  0808  00AA               	movwf	??_setProximityGain
  7478  0809  082A               	movf	??_setProximityGain,w
  7479  080A  00AC               	movwf	setProximityGain@val
  7480                           
  7481                           ;APDS9960.c: 199:     drive &= 0b00000011;
  7482  080B  3003               	movlw	3
  7483  080C  00AA               	movwf	??_setProximityGain
  7484  080D  082A               	movf	??_setProximityGain,w
  7485  080E  05AD               	andwf	setProximityGain@drive,f
  7486                           
  7487                           ;APDS9960.c: 200:     drive = drive << 2;
  7488  080F  082D               	movf	setProximityGain@drive,w
  7489  0810  00AA               	movwf	??_setProximityGain
  7490  0811  3001               	movlw	1
  7491  0812                     u7585:	
  7492  0812  35AA               	lslf	??_setProximityGain,f
  7493  0813  3EFF               	addlw	-1
  7494  0814  1D03               	skipz
  7495  0815  2812               	goto	u7585
  7496  0816  352A               	lslf	??_setProximityGain,w
  7497  0817  00AB               	movwf	??_setProximityGain+1
  7498  0818  082B               	movf	??_setProximityGain+1,w
  7499  0819  00AD               	movwf	setProximityGain@drive
  7500                           
  7501                           ;APDS9960.c: 201:     val &= 0b11110011;
  7502  081A  30F3               	movlw	243
  7503  081B  00AA               	movwf	??_setProximityGain
  7504  081C  082A               	movf	??_setProximityGain,w
  7505  081D  05AC               	andwf	setProximityGain@val,f
  7506                           
  7507                           ;APDS9960.c: 202:     val |= drive;
  7508  081E  082D               	movf	setProximityGain@drive,w
  7509  081F  00AA               	movwf	??_setProximityGain
  7510  0820  082A               	movf	??_setProximityGain,w
  7511  0821  04AC               	iorwf	setProximityGain@val,f
  7512                           
  7513                           ;APDS9960.c: 205:     if( !wireWriteDataByte(0x8F, val) ) {
  7514  0822  082C               	movf	setProximityGain@val,w
  7515  0823  00AA               	movwf	??_setProximityGain
  7516  0824  082A               	movf	??_setProximityGain,w
  7517  0825  00A6               	movwf	wireWriteDataByte@val
  7518  0826  308F               	movlw	143
  7519  0827  3193  2385         	fcall	_wireWriteDataByte
  7520  0829  0008               	return
  7521  082A                     __end_of_setProximityGain:	
  7522                           
  7523                           	psect	text3
  7524  12B4                     __ptext3:	
  7525 ;; *************** function _setProxIntLowThresh *****************
  7526 ;; Defined at:
  7527 ;;		line 234 in file "APDS9960.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  threshold       1    wreg     unsigned char 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  threshold       1   11[BANK0 ] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      _Bool 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0, pclath, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;Total ram usage:        2 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    8
  7548 ;; This function calls:
  7549 ;;		_wireWriteDataByte
  7550 ;; This function is called by:
  7551 ;;		_initialize
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _setProxIntLowThresh
  7557  12B4                     _setProxIntLowThresh:	
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  7561                           ;setProxIntLowThresh@threshold stored from wreg
  7562  12B4  0020               	movlb	0	; select bank0
  7563  12B5  00AB               	movwf	setProxIntLowThresh@threshold
  7564                           
  7565                           ;APDS9960.c: 234: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 235: {;APDS99
      +                          60.c: 236:     if( !wireWriteDataByte(0x89, threshold) ) {
  7566  12B6  082B               	movf	setProxIntLowThresh@threshold,w
  7567  12B7  00AA               	movwf	??_setProxIntLowThresh
  7568  12B8  082A               	movf	??_setProxIntLowThresh,w
  7569  12B9  00A6               	movwf	wireWriteDataByte@val
  7570  12BA  3089               	movlw	137
  7571  12BB  3193  2385  3192   	fcall	_wireWriteDataByte
  7572  12BE  0020               	movlb	0	; select bank0
  7573  12BF  0826               	movf	?_wireWriteDataByte,w
  7574  12C0  0427               	iorwf	?_wireWriteDataByte+1,w
  7575  12C1  1D03               	btfss	3,2
  7576  12C2  2AC5               	goto	l7819
  7577                           
  7578                           ;APDS9960.c: 237:         return 0;
  7579  12C3  3000               	movlw	0
  7580  12C4  0008               	return
  7581  12C5                     l7819:	
  7582                           
  7583                           ;APDS9960.c: 240:     return 1;
  7584  12C5  3001               	movlw	1
  7585  12C6  0008               	return
  7586  12C7                     __end_of_setProxIntLowThresh:	
  7587                           
  7588                           	psect	text4
  7589  12A1                     __ptext4:	
  7590 ;; *************** function _setProxIntHighThresh *****************
  7591 ;; Defined at:
  7592 ;;		line 244 in file "APDS9960.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  threshold       1    wreg     unsigned char 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  threshold       1   11[BANK0 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      _Bool 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;Total ram usage:        2 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    8
  7613 ;; This function calls:
  7614 ;;		_wireWriteDataByte
  7615 ;; This function is called by:
  7616 ;;		_initialize
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _setProxIntHighThresh
  7622  12A1                     _setProxIntHighThresh:	
  7623                           
  7624                           ;incstack = 0
  7625                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  7626                           ;setProxIntHighThresh@threshold stored from wreg
  7627  12A1  0020               	movlb	0	; select bank0
  7628  12A2  00AB               	movwf	setProxIntHighThresh@threshold
  7629                           
  7630                           ;APDS9960.c: 244: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 245: {;APDS9
      +                          960.c: 246:     if( !wireWriteDataByte(0x8B, threshold) ) {
  7631  12A3  082B               	movf	setProxIntHighThresh@threshold,w
  7632  12A4  00AA               	movwf	??_setProxIntHighThresh
  7633  12A5  082A               	movf	??_setProxIntHighThresh,w
  7634  12A6  00A6               	movwf	wireWriteDataByte@val
  7635  12A7  308B               	movlw	139
  7636  12A8  3193  2385  3192   	fcall	_wireWriteDataByte
  7637  12AB  0020               	movlb	0	; select bank0
  7638  12AC  0826               	movf	?_wireWriteDataByte,w
  7639  12AD  0427               	iorwf	?_wireWriteDataByte+1,w
  7640  12AE  1D03               	btfss	3,2
  7641  12AF  2AB2               	goto	l7829
  7642                           
  7643                           ;APDS9960.c: 247:         return 0;
  7644  12B0  3000               	movlw	0
  7645  12B1  0008               	return
  7646  12B2                     l7829:	
  7647                           
  7648                           ;APDS9960.c: 250:     return 1;
  7649  12B2  3001               	movlw	1
  7650  12B3  0008               	return
  7651  12B4                     __end_of_setProxIntHighThresh:	
  7652                           
  7653                           	psect	text5
  7654  153A                     __ptext5:	
  7655 ;; *************** function _setLightIntLowThreshold *****************
  7656 ;; Defined at:
  7657 ;;		line 254 in file "APDS9960.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  threshold       2   10[BANK0 ] unsigned short 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  val_high        1   14[BANK0 ] unsigned char 
  7662 ;;  val_low         1   13[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      _Bool 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, pclath, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;Total ram usage:        5 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    8
  7679 ;; This function calls:
  7680 ;;		_wireWriteDataByte
  7681 ;; This function is called by:
  7682 ;;		_initialize
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function _setLightIntLowThreshold
  7688  153A                     _setLightIntLowThreshold:	
  7689                           
  7690                           ;APDS9960.c: 254: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 255: {;A
>>>>>>> b288aef trying to integrate UART
      +                          PDS9960.c: 256:     uint8_t val_low;;APDS9960.c: 257:     uint8_t val_high;;APDS9960.c: 
      +                          260:     val_low = threshold & 0x00FF;
<<<<<<< Upstream, based on origin/master
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  6818  0BBC  0020               	movlb	0	; select bank0
  6819  0BBD  082A               	movf	setLightIntLowThreshold@threshold,w
  6820  0BBE  00AC               	movwf	??_setLightIntLowThreshold
  6821  0BBF  082C               	movf	??_setLightIntLowThreshold,w
  6822  0BC0  00AD               	movwf	setLightIntLowThreshold@val_low
  6823                           
  6824                           ;APDS9960.c: 261:     val_high = (threshold & 0xFF00) >> 8;
  6825  0BC1  082B               	movf	setLightIntLowThreshold@threshold+1,w
  6826  0BC2  00AC               	movwf	??_setLightIntLowThreshold
  6827  0BC3  082C               	movf	??_setLightIntLowThreshold,w
  6828  0BC4  00AE               	movwf	setLightIntLowThreshold@val_high
  6829                           
  6830                           ;APDS9960.c: 264:     if( !wireWriteDataByte(0x84, val_low) ) {
  6831  0BC5  082D               	movf	setLightIntLowThreshold@val_low,w
  6832  0BC6  00AC               	movwf	??_setLightIntLowThreshold
  6833  0BC7  082C               	movf	??_setLightIntLowThreshold,w
  6834  0BC8  00A6               	movwf	wireWriteDataByte@val
  6835  0BC9  3084               	movlw	132
  6836  0BCA  318A  226E  318B   	fcall	_wireWriteDataByte
  6837  0BCD  0020               	movlb	0	; select bank0
  6838  0BCE  0826               	movf	?_wireWriteDataByte,w
  6839  0BCF  0427               	iorwf	?_wireWriteDataByte+1,w
  6840  0BD0  1D03               	btfss	3,2
  6841  0BD1  2BD4               	goto	l6518
  6842  0BD2                     l6514:	
  6843                           
  6844                           ;APDS9960.c: 265:         return 0;
  6845  0BD2  3000               	movlw	0
  6846  0BD3  0008               	return
  6847  0BD4                     l6518:	
  6848                           
  6849                           ;APDS9960.c: 269:     if( !wireWriteDataByte(0x85, val_high) ) {
  6850  0BD4  082E               	movf	setLightIntLowThreshold@val_high,w
  6851  0BD5  00AC               	movwf	??_setLightIntLowThreshold
  6852  0BD6  082C               	movf	??_setLightIntLowThreshold,w
  6853  0BD7  00A6               	movwf	wireWriteDataByte@val
  6854  0BD8  3085               	movlw	133
  6855  0BD9  318A  226E  318B   	fcall	_wireWriteDataByte
  6856  0BDC  0020               	movlb	0	; select bank0
  6857  0BDD  0826               	movf	?_wireWriteDataByte,w
  6858  0BDE  0427               	iorwf	?_wireWriteDataByte+1,w
  6859  0BDF  1903               	btfsc	3,2
  6860  0BE0  2BD2               	goto	l6514
  6861                           
  6862                           ;APDS9960.c: 273:     return 1;
  6863  0BE1  3001               	movlw	1
  6864  0BE2  0008               	return
  6865  0BE3                     __end_of_setLightIntLowThreshold:	
  6866                           
  6867                           	psect	text6
  6868  0B95                     __ptext6:	
  6869 ;; *************** function _setLightIntHighThreshold *****************
  6870 ;; Defined at:
  6871 ;;		line 277 in file "APDS9960.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  threshold       2   10[BANK0 ] unsigned short 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  val_high        1   14[BANK0 ] unsigned char 
  6876 ;;  val_low         1   13[BANK0 ] unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      _Bool 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0, pclath, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  7694  153A  0020               	movlb	0	; select bank0
  7695  153B  082A               	movf	setLightIntLowThreshold@threshold,w
  7696  153C  00AC               	movwf	??_setLightIntLowThreshold
  7697  153D  082C               	movf	??_setLightIntLowThreshold,w
  7698  153E  00AD               	movwf	setLightIntLowThreshold@val_low
  7699                           
  7700                           ;APDS9960.c: 261:     val_high = (threshold & 0xFF00) >> 8;
  7701  153F  082B               	movf	setLightIntLowThreshold@threshold+1,w
  7702  1540  00AC               	movwf	??_setLightIntLowThreshold
  7703  1541  082C               	movf	??_setLightIntLowThreshold,w
  7704  1542  00AE               	movwf	setLightIntLowThreshold@val_high
  7705                           
  7706                           ;APDS9960.c: 264:     if( !wireWriteDataByte(0x84, val_low) ) {
  7707  1543  082D               	movf	setLightIntLowThreshold@val_low,w
  7708  1544  00AC               	movwf	??_setLightIntLowThreshold
  7709  1545  082C               	movf	??_setLightIntLowThreshold,w
  7710  1546  00A6               	movwf	wireWriteDataByte@val
  7711  1547  3084               	movlw	132
  7712  1548  3193  2385  3195   	fcall	_wireWriteDataByte
  7713  154B  0020               	movlb	0	; select bank0
  7714  154C  0826               	movf	?_wireWriteDataByte,w
  7715  154D  0427               	iorwf	?_wireWriteDataByte+1,w
  7716  154E  1D03               	btfss	3,2
  7717  154F  2D52               	goto	l7843
  7718  1550                     l7839:	
  7719                           
  7720                           ;APDS9960.c: 265:         return 0;
  7721  1550  3000               	movlw	0
  7722  1551  0008               	return
  7723  1552                     l7843:	
  7724                           
  7725                           ;APDS9960.c: 269:     if( !wireWriteDataByte(0x85, val_high) ) {
  7726  1552  082E               	movf	setLightIntLowThreshold@val_high,w
  7727  1553  00AC               	movwf	??_setLightIntLowThreshold
  7728  1554  082C               	movf	??_setLightIntLowThreshold,w
  7729  1555  00A6               	movwf	wireWriteDataByte@val
  7730  1556  3085               	movlw	133
  7731  1557  3193  2385  3195   	fcall	_wireWriteDataByte
  7732  155A  0020               	movlb	0	; select bank0
  7733  155B  0826               	movf	?_wireWriteDataByte,w
  7734  155C  0427               	iorwf	?_wireWriteDataByte+1,w
  7735  155D  1903               	btfsc	3,2
  7736  155E  2D50               	goto	l7839
  7737                           
  7738                           ;APDS9960.c: 273:     return 1;
  7739  155F  3001               	movlw	1
  7740  1560  0008               	return
  7741  1561                     __end_of_setLightIntLowThreshold:	
  7742                           
  7743                           	psect	text6
  7744  1513                     __ptext6:	
  7745 ;; *************** function _setLightIntHighThreshold *****************
  7746 ;; Defined at:
  7747 ;;		line 277 in file "APDS9960.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  threshold       2   10[BANK0 ] unsigned short 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  val_high        1   14[BANK0 ] unsigned char 
  7752 ;;  val_low         1   13[BANK0 ] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      _Bool 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0, pclath, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  6886 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  7762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  7763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  7764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6889 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
=======
  7765 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6890 ;;Total ram usage:        5 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    8
  6893 ;; This function calls:
  6894 ;;		_wireWriteDataByte
  6895 ;; This function is called by:
  6896 ;;		_initialize
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function _setLightIntHighThreshold
  6902  0B95                     _setLightIntHighThreshold:	
  6903                           
  6904                           ;APDS9960.c: 277: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 278: {;
=======
  7766 ;;Total ram usage:        5 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    8
  7769 ;; This function calls:
  7770 ;;		_wireWriteDataByte
  7771 ;; This function is called by:
  7772 ;;		_initialize
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _setLightIntHighThreshold
  7778  1513                     _setLightIntHighThreshold:	
  7779                           
  7780                           ;APDS9960.c: 277: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 278: {;
>>>>>>> b288aef trying to integrate UART
      +                          APDS9960.c: 279:     uint8_t val_low;;APDS9960.c: 280:     uint8_t val_high;;APDS9960.c:
      +                           283:     val_low = threshold & 0x00FF;
<<<<<<< Upstream, based on origin/master
  6905                           
  6906                           ;incstack = 0
  6907                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  6908  0B95  0020               	movlb	0	; select bank0
  6909  0B96  082A               	movf	setLightIntHighThreshold@threshold,w
  6910  0B97  00AC               	movwf	??_setLightIntHighThreshold
  6911  0B98  082C               	movf	??_setLightIntHighThreshold,w
  6912  0B99  00AD               	movwf	setLightIntHighThreshold@val_low
  6913                           
  6914                           ;APDS9960.c: 284:     val_high = (threshold & 0xFF00) >> 8;
  6915  0B9A  082B               	movf	setLightIntHighThreshold@threshold+1,w
  6916  0B9B  00AC               	movwf	??_setLightIntHighThreshold
  6917  0B9C  082C               	movf	??_setLightIntHighThreshold,w
  6918  0B9D  00AE               	movwf	setLightIntHighThreshold@val_high
  6919                           
  6920                           ;APDS9960.c: 287:     if( !wireWriteDataByte(0x86, val_low) ) {
  6921  0B9E  082D               	movf	setLightIntHighThreshold@val_low,w
  6922  0B9F  00AC               	movwf	??_setLightIntHighThreshold
  6923  0BA0  082C               	movf	??_setLightIntHighThreshold,w
  6924  0BA1  00A6               	movwf	wireWriteDataByte@val
  6925  0BA2  3086               	movlw	134
  6926  0BA3  318A  226E  318B   	fcall	_wireWriteDataByte
  6927  0BA6  0020               	movlb	0	; select bank0
  6928  0BA7  0826               	movf	?_wireWriteDataByte,w
  6929  0BA8  0427               	iorwf	?_wireWriteDataByte+1,w
  6930  0BA9  1D03               	btfss	3,2
  6931  0BAA  2BAD               	goto	l6538
  6932  0BAB                     l6534:	
  6933                           
  6934                           ;APDS9960.c: 288:         return 0;
  6935  0BAB  3000               	movlw	0
  6936  0BAC  0008               	return
  6937  0BAD                     l6538:	
  6938                           
  6939                           ;APDS9960.c: 292:     if( !wireWriteDataByte(0x87, val_high) ) {
  6940  0BAD  082E               	movf	setLightIntHighThreshold@val_high,w
  6941  0BAE  00AC               	movwf	??_setLightIntHighThreshold
  6942  0BAF  082C               	movf	??_setLightIntHighThreshold,w
  6943  0BB0  00A6               	movwf	wireWriteDataByte@val
  6944  0BB1  3087               	movlw	135
  6945  0BB2  318A  226E  318B   	fcall	_wireWriteDataByte
  6946  0BB5  0020               	movlb	0	; select bank0
  6947  0BB6  0826               	movf	?_wireWriteDataByte,w
  6948  0BB7  0427               	iorwf	?_wireWriteDataByte+1,w
  6949  0BB8  1903               	btfsc	3,2
  6950  0BB9  2BAB               	goto	l6534
  6951                           
  6952                           ;APDS9960.c: 296:     return 1;
  6953  0BBA  3001               	movlw	1
  6954  0BBB  0008               	return
  6955  0BBC                     __end_of_setLightIntHighThreshold:	
  6956                           
  6957                           	psect	text7
  6958  0BE3                     __ptext7:	
  6959 ;; *************** function _setLEDDrive *****************
  6960 ;; Defined at:
  6961 ;;		line 170 in file "APDS9960.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  drive           1    wreg     unsigned char 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  drive           1   13[BANK0 ] unsigned char 
  6966 ;;  val             1   12[BANK0 ] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      _Bool 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0, pclath, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  7781                           
  7782                           ;incstack = 0
  7783                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  7784  1513  0020               	movlb	0	; select bank0
  7785  1514  082A               	movf	setLightIntHighThreshold@threshold,w
  7786  1515  00AC               	movwf	??_setLightIntHighThreshold
  7787  1516  082C               	movf	??_setLightIntHighThreshold,w
  7788  1517  00AD               	movwf	setLightIntHighThreshold@val_low
  7789                           
  7790                           ;APDS9960.c: 284:     val_high = (threshold & 0xFF00) >> 8;
  7791  1518  082B               	movf	setLightIntHighThreshold@threshold+1,w
  7792  1519  00AC               	movwf	??_setLightIntHighThreshold
  7793  151A  082C               	movf	??_setLightIntHighThreshold,w
  7794  151B  00AE               	movwf	setLightIntHighThreshold@val_high
  7795                           
  7796                           ;APDS9960.c: 287:     if( !wireWriteDataByte(0x86, val_low) ) {
  7797  151C  082D               	movf	setLightIntHighThreshold@val_low,w
  7798  151D  00AC               	movwf	??_setLightIntHighThreshold
  7799  151E  082C               	movf	??_setLightIntHighThreshold,w
  7800  151F  00A6               	movwf	wireWriteDataByte@val
  7801  1520  3086               	movlw	134
  7802  1521  3193  2385  3195   	fcall	_wireWriteDataByte
  7803  1524  0020               	movlb	0	; select bank0
  7804  1525  0826               	movf	?_wireWriteDataByte,w
  7805  1526  0427               	iorwf	?_wireWriteDataByte+1,w
  7806  1527  1D03               	btfss	3,2
  7807  1528  2D2B               	goto	l7863
  7808  1529                     l7859:	
  7809                           
  7810                           ;APDS9960.c: 288:         return 0;
  7811  1529  3000               	movlw	0
  7812  152A  0008               	return
  7813  152B                     l7863:	
  7814                           
  7815                           ;APDS9960.c: 292:     if( !wireWriteDataByte(0x87, val_high) ) {
  7816  152B  082E               	movf	setLightIntHighThreshold@val_high,w
  7817  152C  00AC               	movwf	??_setLightIntHighThreshold
  7818  152D  082C               	movf	??_setLightIntHighThreshold,w
  7819  152E  00A6               	movwf	wireWriteDataByte@val
  7820  152F  3087               	movlw	135
  7821  1530  3193  2385  3195   	fcall	_wireWriteDataByte
  7822  1533  0020               	movlb	0	; select bank0
  7823  1534  0826               	movf	?_wireWriteDataByte,w
  7824  1535  0427               	iorwf	?_wireWriteDataByte+1,w
  7825  1536  1903               	btfsc	3,2
  7826  1537  2D29               	goto	l7859
  7827                           
  7828                           ;APDS9960.c: 296:     return 1;
  7829  1538  3001               	movlw	1
  7830  1539  0008               	return
  7831  153A                     __end_of_setLightIntHighThreshold:	
  7832                           
  7833                           	psect	text7
  7834  1561                     __ptext7:	
  7835 ;; *************** function _setLEDDrive *****************
  7836 ;; Defined at:
  7837 ;;		line 170 in file "APDS9960.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  drive           1    wreg     unsigned char 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  drive           1   13[BANK0 ] unsigned char 
  7842 ;;  val             1   12[BANK0 ] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      _Bool 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, pclath, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  7853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
  7854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
  7855 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  6980 ;;Total ram usage:        4 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    8
  6983 ;; This function calls:
  6984 ;;		_wireReadDataByte
  6985 ;;		_wireWriteDataByte
  6986 ;; This function is called by:
  6987 ;;		_initialize
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           
  6992                           ;psect for function _setLEDDrive
  6993  0BE3                     _setLEDDrive:	
  6994                           
  6995                           ;incstack = 0
  6996                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  6997                           ;setLEDDrive@drive stored from wreg
  6998  0BE3  0020               	movlb	0	; select bank0
  6999  0BE4  00AD               	movwf	setLEDDrive@drive
  7000                           
  7001                           ;APDS9960.c: 170: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 171: {;APDS9960.c: 172:  
=======
  7856 ;;Total ram usage:        4 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    8
  7859 ;; This function calls:
  7860 ;;		_wireReadDataByte
  7861 ;;		_wireWriteDataByte
  7862 ;; This function is called by:
  7863 ;;		_initialize
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           
  7868                           ;psect for function _setLEDDrive
  7869  1561                     _setLEDDrive:	
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  7873                           ;setLEDDrive@drive stored from wreg
  7874  1561  0020               	movlb	0	; select bank0
  7875  1562  00AD               	movwf	setLEDDrive@drive
  7876                           
  7877                           ;APDS9960.c: 170: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 171: {;APDS9960.c: 172:  
>>>>>>> b288aef trying to integrate UART
      +                             uint8_t val;;APDS9960.c: 175:     val=wireReadDataByte(0x8F);
<<<<<<< Upstream, based on origin/master
  7002  0BE5  308F               	movlw	143
  7003  0BE6  318A  22FD  318B   	fcall	_wireReadDataByte
  7004  0BE9  0020               	movlb	0	; select bank0
  7005  0BEA  00AA               	movwf	??_setLEDDrive
  7006  0BEB  082A               	movf	??_setLEDDrive,w
  7007  0BEC  00AC               	movwf	setLEDDrive@val
  7008                           
  7009                           ;APDS9960.c: 178:     drive &= 0b00000011;
  7010  0BED  3003               	movlw	3
  7011  0BEE  00AA               	movwf	??_setLEDDrive
  7012  0BEF  082A               	movf	??_setLEDDrive,w
  7013  0BF0  05AD               	andwf	setLEDDrive@drive,f
  7014                           
  7015                           ;APDS9960.c: 179:     drive = drive << 6;
  7016  0BF1  082D               	movf	setLEDDrive@drive,w
  7017  0BF2  00AA               	movwf	??_setLEDDrive
  7018  0BF3  3005               	movlw	5
  7019  0BF4                     u5605:	
  7020  0BF4  35AA               	lslf	??_setLEDDrive,f
  7021  0BF5  3EFF               	addlw	-1
  7022  0BF6  1D03               	skipz
  7023  0BF7  2BF4               	goto	u5605
  7024  0BF8  352A               	lslf	??_setLEDDrive,w
  7025  0BF9  00AB               	movwf	??_setLEDDrive+1
  7026  0BFA  082B               	movf	??_setLEDDrive+1,w
  7027  0BFB  00AD               	movwf	setLEDDrive@drive
  7028                           
  7029                           ;APDS9960.c: 180:     val &= 0b00111111;
  7030  0BFC  303F               	movlw	63
  7031  0BFD  00AA               	movwf	??_setLEDDrive
  7032  0BFE  082A               	movf	??_setLEDDrive,w
  7033  0BFF  05AC               	andwf	setLEDDrive@val,f
  7034                           
  7035                           ;APDS9960.c: 181:     val |= drive;
  7036  0C00  082D               	movf	setLEDDrive@drive,w
  7037  0C01  00AA               	movwf	??_setLEDDrive
  7038  0C02  082A               	movf	??_setLEDDrive,w
  7039  0C03  04AC               	iorwf	setLEDDrive@val,f
  7040                           
  7041                           ;APDS9960.c: 184:     if( !wireWriteDataByte(0x8F, val) ) {
  7042  0C04  082C               	movf	setLEDDrive@val,w
  7043  0C05  00AA               	movwf	??_setLEDDrive
  7044  0C06  082A               	movf	??_setLEDDrive,w
  7045  0C07  00A6               	movwf	wireWriteDataByte@val
  7046  0C08  308F               	movlw	143
  7047  0C09  318A  226E         	fcall	_wireWriteDataByte
  7048  0C0B  0008               	return
  7049  0C0C                     __end_of_setLEDDrive:	
  7050                           
  7051                           	psect	text8
  7052  0B6E                     __ptext8:	
  7053 ;; *************** function _setGestureWaitTime *****************
  7054 ;; Defined at:
  7055 ;;		line 366 in file "APDS9960.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  time            1    wreg     unsigned char 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  time            1   11[BANK0 ] unsigned char 
  7060 ;;  val             1   12[BANK0 ] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      _Bool 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0, pclath, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  7878  1563  308F               	movlw	143
  7879  1564  3194  2455  3195   	fcall	_wireReadDataByte
  7880  1567  0020               	movlb	0	; select bank0
  7881  1568  00AA               	movwf	??_setLEDDrive
  7882  1569  082A               	movf	??_setLEDDrive,w
  7883  156A  00AC               	movwf	setLEDDrive@val
  7884                           
  7885                           ;APDS9960.c: 178:     drive &= 0b00000011;
  7886  156B  3003               	movlw	3
  7887  156C  00AA               	movwf	??_setLEDDrive
  7888  156D  082A               	movf	??_setLEDDrive,w
  7889  156E  05AD               	andwf	setLEDDrive@drive,f
  7890                           
  7891                           ;APDS9960.c: 179:     drive = drive << 6;
  7892  156F  082D               	movf	setLEDDrive@drive,w
  7893  1570  00AA               	movwf	??_setLEDDrive
  7894  1571  3005               	movlw	5
  7895  1572                     u7575:	
  7896  1572  35AA               	lslf	??_setLEDDrive,f
  7897  1573  3EFF               	addlw	-1
  7898  1574  1D03               	skipz
  7899  1575  2D72               	goto	u7575
  7900  1576  352A               	lslf	??_setLEDDrive,w
  7901  1577  00AB               	movwf	??_setLEDDrive+1
  7902  1578  082B               	movf	??_setLEDDrive+1,w
  7903  1579  00AD               	movwf	setLEDDrive@drive
  7904                           
  7905                           ;APDS9960.c: 180:     val &= 0b00111111;
  7906  157A  303F               	movlw	63
  7907  157B  00AA               	movwf	??_setLEDDrive
  7908  157C  082A               	movf	??_setLEDDrive,w
  7909  157D  05AC               	andwf	setLEDDrive@val,f
  7910                           
  7911                           ;APDS9960.c: 181:     val |= drive;
  7912  157E  082D               	movf	setLEDDrive@drive,w
  7913  157F  00AA               	movwf	??_setLEDDrive
  7914  1580  082A               	movf	??_setLEDDrive,w
  7915  1581  04AC               	iorwf	setLEDDrive@val,f
  7916                           
  7917                           ;APDS9960.c: 184:     if( !wireWriteDataByte(0x8F, val) ) {
  7918  1582  082C               	movf	setLEDDrive@val,w
  7919  1583  00AA               	movwf	??_setLEDDrive
  7920  1584  082A               	movf	??_setLEDDrive,w
  7921  1585  00A6               	movwf	wireWriteDataByte@val
  7922  1586  308F               	movlw	143
  7923  1587  3193  2385         	fcall	_wireWriteDataByte
  7924  1589  0008               	return
  7925  158A                     __end_of_setLEDDrive:	
  7926                           
  7927                           	psect	text8
  7928  14EC                     __ptext8:	
  7929 ;; *************** function _setGestureWaitTime *****************
  7930 ;; Defined at:
  7931 ;;		line 366 in file "APDS9960.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  time            1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  time            1   11[BANK0 ] unsigned char 
  7936 ;;  val             1   12[BANK0 ] unsigned char 
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      _Bool 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, pclath, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7071 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  7947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  7948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
  7949 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7074 ;;Total ram usage:        3 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    8
  7077 ;; This function calls:
  7078 ;;		_wireReadDataByte
  7079 ;;		_wireWriteDataByte
  7080 ;; This function is called by:
  7081 ;;		_initialize
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           
  7086                           ;psect for function _setGestureWaitTime
  7087  0B6E                     _setGestureWaitTime:	
  7088                           
  7089                           ;incstack = 0
  7090                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  7091                           ;setGestureWaitTime@time stored from wreg
  7092  0B6E  0020               	movlb	0	; select bank0
  7093  0B6F  00AB               	movwf	setGestureWaitTime@time
  7094                           
  7095                           ;APDS9960.c: 366: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 367: {;APDS9960.c: 
=======
  7950 ;;Total ram usage:        3 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    8
  7953 ;; This function calls:
  7954 ;;		_wireReadDataByte
  7955 ;;		_wireWriteDataByte
  7956 ;; This function is called by:
  7957 ;;		_initialize
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _setGestureWaitTime
  7963  14EC                     _setGestureWaitTime:	
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  7967                           ;setGestureWaitTime@time stored from wreg
  7968  14EC  0020               	movlb	0	; select bank0
  7969  14ED  00AB               	movwf	setGestureWaitTime@time
  7970                           
  7971                           ;APDS9960.c: 366: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 367: {;APDS9960.c: 
>>>>>>> b288aef trying to integrate UART
      +                          368:     uint8_t val;;APDS9960.c: 371:     val = wireReadDataByte(0xA3);
<<<<<<< Upstream, based on origin/master
  7096  0B70  30A3               	movlw	163
  7097  0B71  318A  22FD  318B   	fcall	_wireReadDataByte
  7098  0B74  0020               	movlb	0	; select bank0
  7099  0B75  00AA               	movwf	??_setGestureWaitTime
  7100  0B76  082A               	movf	??_setGestureWaitTime,w
  7101  0B77  00AC               	movwf	setGestureWaitTime@val
  7102                           
  7103                           ;APDS9960.c: 374:     time &= 0b00000111;
  7104  0B78  3007               	movlw	7
  7105  0B79  00AA               	movwf	??_setGestureWaitTime
  7106  0B7A  082A               	movf	??_setGestureWaitTime,w
  7107  0B7B  05AB               	andwf	setGestureWaitTime@time,f
  7108                           
  7109                           ;APDS9960.c: 375:     val &= 0b11111000;
  7110  0B7C  30F8               	movlw	248
  7111  0B7D  00AA               	movwf	??_setGestureWaitTime
  7112  0B7E  082A               	movf	??_setGestureWaitTime,w
  7113  0B7F  05AC               	andwf	setGestureWaitTime@val,f
  7114                           
  7115                           ;APDS9960.c: 376:     val |= time;
  7116  0B80  082B               	movf	setGestureWaitTime@time,w
  7117  0B81  00AA               	movwf	??_setGestureWaitTime
  7118  0B82  082A               	movf	??_setGestureWaitTime,w
  7119  0B83  04AC               	iorwf	setGestureWaitTime@val,f
  7120                           
  7121                           ;APDS9960.c: 379:     if( !wireWriteDataByte(0xA3, val) ) {
  7122  0B84  082C               	movf	setGestureWaitTime@val,w
  7123  0B85  00AA               	movwf	??_setGestureWaitTime
  7124  0B86  082A               	movf	??_setGestureWaitTime,w
  7125  0B87  00A6               	movwf	wireWriteDataByte@val
  7126  0B88  30A3               	movlw	163
  7127  0B89  318A  226E  318B   	fcall	_wireWriteDataByte
  7128  0B8C  0020               	movlb	0	; select bank0
  7129  0B8D  0826               	movf	?_wireWriteDataByte,w
  7130  0B8E  0427               	iorwf	?_wireWriteDataByte+1,w
  7131  0B8F  1D03               	btfss	3,2
  7132  0B90  2B93               	goto	l6618
  7133                           
  7134                           ;APDS9960.c: 380:         return 0;
  7135  0B91  3000               	movlw	0
  7136  0B92  0008               	return
  7137  0B93                     l6618:	
  7138                           
  7139                           ;APDS9960.c: 383:     return 1;
  7140  0B93  3001               	movlw	1
  7141  0B94  0008               	return
  7142  0B95                     __end_of_setGestureWaitTime:	
  7143                           
  7144                           	psect	text9
  7145  0D20                     __ptext9:	
  7146 ;; *************** function _setGestureLEDDrive *****************
  7147 ;; Defined at:
  7148 ;;		line 343 in file "APDS9960.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  drive           1    wreg     unsigned char 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  drive           1   13[BANK0 ] unsigned char 
  7153 ;;  val             1   12[BANK0 ] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      _Bool 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0, pclath, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  7972  14EE  30A3               	movlw	163
  7973  14EF  3194  2455  3194   	fcall	_wireReadDataByte
  7974  14F2  0020               	movlb	0	; select bank0
  7975  14F3  00AA               	movwf	??_setGestureWaitTime
  7976  14F4  082A               	movf	??_setGestureWaitTime,w
  7977  14F5  00AC               	movwf	setGestureWaitTime@val
  7978                           
  7979                           ;APDS9960.c: 374:     time &= 0b00000111;
  7980  14F6  3007               	movlw	7
  7981  14F7  00AA               	movwf	??_setGestureWaitTime
  7982  14F8  082A               	movf	??_setGestureWaitTime,w
  7983  14F9  05AB               	andwf	setGestureWaitTime@time,f
  7984                           
  7985                           ;APDS9960.c: 375:     val &= 0b11111000;
  7986  14FA  30F8               	movlw	248
  7987  14FB  00AA               	movwf	??_setGestureWaitTime
  7988  14FC  082A               	movf	??_setGestureWaitTime,w
  7989  14FD  05AC               	andwf	setGestureWaitTime@val,f
  7990                           
  7991                           ;APDS9960.c: 376:     val |= time;
  7992  14FE  082B               	movf	setGestureWaitTime@time,w
  7993  14FF  00AA               	movwf	??_setGestureWaitTime
  7994  1500  082A               	movf	??_setGestureWaitTime,w
  7995  1501  04AC               	iorwf	setGestureWaitTime@val,f
  7996                           
  7997                           ;APDS9960.c: 379:     if( !wireWriteDataByte(0xA3, val) ) {
  7998  1502  082C               	movf	setGestureWaitTime@val,w
  7999  1503  00AA               	movwf	??_setGestureWaitTime
  8000  1504  082A               	movf	??_setGestureWaitTime,w
  8001  1505  00A6               	movwf	wireWriteDataByte@val
  8002  1506  30A3               	movlw	163
  8003  1507  3193  2385  3194   	fcall	_wireWriteDataByte
  8004  150A  0020               	movlb	0	; select bank0
  8005  150B  0826               	movf	?_wireWriteDataByte,w
  8006  150C  0427               	iorwf	?_wireWriteDataByte+1,w
  8007  150D  1D03               	btfss	3,2
  8008  150E  2D11               	goto	l7943
  8009                           
  8010                           ;APDS9960.c: 380:         return 0;
  8011  150F  3000               	movlw	0
  8012  1510  0008               	return
  8013  1511                     l7943:	
  8014                           
  8015                           ;APDS9960.c: 383:     return 1;
  8016  1511  3001               	movlw	1
  8017  1512  0008               	return
  8018  1513                     __end_of_setGestureWaitTime:	
  8019                           
  8020                           	psect	text9
  8021  1670                     __ptext9:	
  8022 ;; *************** function _setGestureLEDDrive *****************
  8023 ;; Defined at:
  8024 ;;		line 343 in file "APDS9960.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  drive           1    wreg     unsigned char 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  drive           1   13[BANK0 ] unsigned char 
  8029 ;;  val             1   12[BANK0 ] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      _Bool 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0, pclath, cstack
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
  8042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7167 ;;Total ram usage:        4 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    8
  7170 ;; This function calls:
  7171 ;;		_wireReadDataByte
  7172 ;;		_wireWriteDataByte
  7173 ;; This function is called by:
  7174 ;;		_initialize
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           
  7179                           ;psect for function _setGestureLEDDrive
  7180  0D20                     _setGestureLEDDrive:	
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  7184                           ;setGestureLEDDrive@drive stored from wreg
  7185  0D20  0020               	movlb	0	; select bank0
  7186  0D21  00AD               	movwf	setGestureLEDDrive@drive
  7187                           
  7188                           ;APDS9960.c: 343: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 344: {;APDS9960.c:
=======
  8043 ;;Total ram usage:        4 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    8
  8046 ;; This function calls:
  8047 ;;		_wireReadDataByte
  8048 ;;		_wireWriteDataByte
  8049 ;; This function is called by:
  8050 ;;		_initialize
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _setGestureLEDDrive
  8056  1670                     _setGestureLEDDrive:	
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  8060                           ;setGestureLEDDrive@drive stored from wreg
  8061  1670  0020               	movlb	0	; select bank0
  8062  1671  00AD               	movwf	setGestureLEDDrive@drive
  8063                           
  8064                           ;APDS9960.c: 343: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 344: {;APDS9960.c:
>>>>>>> b288aef trying to integrate UART
      +                           345:     uint8_t val;;APDS9960.c: 348:     val = wireReadDataByte(0xA3);
<<<<<<< Upstream, based on origin/master
  7189  0D22  30A3               	movlw	163
  7190  0D23  318A  22FD  318D   	fcall	_wireReadDataByte
  7191  0D26  0020               	movlb	0	; select bank0
  7192  0D27  00AA               	movwf	??_setGestureLEDDrive
  7193  0D28  082A               	movf	??_setGestureLEDDrive,w
  7194  0D29  00AC               	movwf	setGestureLEDDrive@val
  7195                           
  7196                           ;APDS9960.c: 352:     drive &= 0b00000011;
  7197  0D2A  3003               	movlw	3
  7198  0D2B  00AA               	movwf	??_setGestureLEDDrive
  7199  0D2C  082A               	movf	??_setGestureLEDDrive,w
  7200  0D2D  05AD               	andwf	setGestureLEDDrive@drive,f
  7201                           
  7202                           ;APDS9960.c: 353:     drive = drive << 3;
  7203  0D2E  082D               	movf	setGestureLEDDrive@drive,w
  7204  0D2F  00AA               	movwf	??_setGestureLEDDrive
  7205  0D30  3002               	movlw	2
  7206  0D31                     u5725:	
  7207  0D31  35AA               	lslf	??_setGestureLEDDrive,f
  7208  0D32  3EFF               	addlw	-1
  7209  0D33  1D03               	skipz
  7210  0D34  2D31               	goto	u5725
  7211  0D35  352A               	lslf	??_setGestureLEDDrive,w
  7212  0D36  00AB               	movwf	??_setGestureLEDDrive+1
  7213  0D37  082B               	movf	??_setGestureLEDDrive+1,w
  7214  0D38  00AD               	movwf	setGestureLEDDrive@drive
  7215                           
  7216                           ;APDS9960.c: 354:     val &= 0b11100111;
  7217  0D39  30E7               	movlw	231
  7218  0D3A  00AA               	movwf	??_setGestureLEDDrive
  7219  0D3B  082A               	movf	??_setGestureLEDDrive,w
  7220  0D3C  05AC               	andwf	setGestureLEDDrive@val,f
  7221                           
  7222                           ;APDS9960.c: 355:     val |= drive;
  7223  0D3D  082D               	movf	setGestureLEDDrive@drive,w
  7224  0D3E  00AA               	movwf	??_setGestureLEDDrive
  7225  0D3F  082A               	movf	??_setGestureLEDDrive,w
  7226  0D40  04AC               	iorwf	setGestureLEDDrive@val,f
  7227                           
  7228                           ;APDS9960.c: 358:     if( !wireWriteDataByte(0xA3, val) ) {
  7229  0D41  082C               	movf	setGestureLEDDrive@val,w
  7230  0D42  00AA               	movwf	??_setGestureLEDDrive
  7231  0D43  082A               	movf	??_setGestureLEDDrive,w
  7232  0D44  00A6               	movwf	wireWriteDataByte@val
  7233  0D45  30A3               	movlw	163
  7234  0D46  318A  226E  318D   	fcall	_wireWriteDataByte
  7235  0D49  0020               	movlb	0	; select bank0
  7236  0D4A  0826               	movf	?_wireWriteDataByte,w
  7237  0D4B  0427               	iorwf	?_wireWriteDataByte+1,w
  7238  0D4C  1D03               	btfss	3,2
  7239  0D4D  2D50               	goto	l6600
  7240                           
  7241                           ;APDS9960.c: 359:         return 0;
  7242  0D4E  3000               	movlw	0
  7243  0D4F  0008               	return
  7244  0D50                     l6600:	
  7245                           
  7246                           ;APDS9960.c: 362:     return 1;
  7247  0D50  3001               	movlw	1
  7248  0D51  0008               	return
  7249  0D52                     __end_of_setGestureLEDDrive:	
  7250                           
  7251                           	psect	text10
  7252  0CEE                     __ptext10:	
  7253 ;; *************** function _setGestureGain *****************
  7254 ;; Defined at:
  7255 ;;		line 320 in file "APDS9960.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  gain            1    wreg     unsigned char 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  gain            1   13[BANK0 ] unsigned char 
  7260 ;;  val             1   12[BANK0 ] unsigned char 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      _Bool 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8065  1672  30A3               	movlw	163
  8066  1673  3194  2455  3196   	fcall	_wireReadDataByte
  8067  1676  0020               	movlb	0	; select bank0
  8068  1677  00AA               	movwf	??_setGestureLEDDrive
  8069  1678  082A               	movf	??_setGestureLEDDrive,w
  8070  1679  00AC               	movwf	setGestureLEDDrive@val
  8071                           
  8072                           ;APDS9960.c: 352:     drive &= 0b00000011;
  8073  167A  3003               	movlw	3
  8074  167B  00AA               	movwf	??_setGestureLEDDrive
  8075  167C  082A               	movf	??_setGestureLEDDrive,w
  8076  167D  05AD               	andwf	setGestureLEDDrive@drive,f
  8077                           
  8078                           ;APDS9960.c: 353:     drive = drive << 3;
  8079  167E  082D               	movf	setGestureLEDDrive@drive,w
  8080  167F  00AA               	movwf	??_setGestureLEDDrive
  8081  1680  3002               	movlw	2
  8082  1681                     u7695:	
  8083  1681  35AA               	lslf	??_setGestureLEDDrive,f
  8084  1682  3EFF               	addlw	-1
  8085  1683  1D03               	skipz
  8086  1684  2E81               	goto	u7695
  8087  1685  352A               	lslf	??_setGestureLEDDrive,w
  8088  1686  00AB               	movwf	??_setGestureLEDDrive+1
  8089  1687  082B               	movf	??_setGestureLEDDrive+1,w
  8090  1688  00AD               	movwf	setGestureLEDDrive@drive
  8091                           
  8092                           ;APDS9960.c: 354:     val &= 0b11100111;
  8093  1689  30E7               	movlw	231
  8094  168A  00AA               	movwf	??_setGestureLEDDrive
  8095  168B  082A               	movf	??_setGestureLEDDrive,w
  8096  168C  05AC               	andwf	setGestureLEDDrive@val,f
  8097                           
  8098                           ;APDS9960.c: 355:     val |= drive;
  8099  168D  082D               	movf	setGestureLEDDrive@drive,w
  8100  168E  00AA               	movwf	??_setGestureLEDDrive
  8101  168F  082A               	movf	??_setGestureLEDDrive,w
  8102  1690  04AC               	iorwf	setGestureLEDDrive@val,f
  8103                           
  8104                           ;APDS9960.c: 358:     if( !wireWriteDataByte(0xA3, val) ) {
  8105  1691  082C               	movf	setGestureLEDDrive@val,w
  8106  1692  00AA               	movwf	??_setGestureLEDDrive
  8107  1693  082A               	movf	??_setGestureLEDDrive,w
  8108  1694  00A6               	movwf	wireWriteDataByte@val
  8109  1695  30A3               	movlw	163
  8110  1696  3193  2385  3196   	fcall	_wireWriteDataByte
  8111  1699  0020               	movlb	0	; select bank0
  8112  169A  0826               	movf	?_wireWriteDataByte,w
  8113  169B  0427               	iorwf	?_wireWriteDataByte+1,w
  8114  169C  1D03               	btfss	3,2
  8115  169D  2EA0               	goto	l7925
  8116                           
  8117                           ;APDS9960.c: 359:         return 0;
  8118  169E  3000               	movlw	0
  8119  169F  0008               	return
  8120  16A0                     l7925:	
  8121                           
  8122                           ;APDS9960.c: 362:     return 1;
  8123  16A0  3001               	movlw	1
  8124  16A1  0008               	return
  8125  16A2                     __end_of_setGestureLEDDrive:	
  8126                           
  8127                           	psect	text10
  8128  163E                     __ptext10:	
  8129 ;; *************** function _setGestureGain *****************
  8130 ;; Defined at:
  8131 ;;		line 320 in file "APDS9960.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;  gain            1    wreg     unsigned char 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  gain            1   13[BANK0 ] unsigned char 
  8136 ;;  val             1   12[BANK0 ] unsigned char 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      _Bool 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2, status,0, pclath, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8147 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7273 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
  8149 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7274 ;;Total ram usage:        4 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    8
  7277 ;; This function calls:
  7278 ;;		_wireReadDataByte
  7279 ;;		_wireWriteDataByte
  7280 ;; This function is called by:
  7281 ;;		_initialize
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _setGestureGain
  7287  0CEE                     _setGestureGain:	
  7288                           
  7289                           ;incstack = 0
  7290                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  7291                           ;setGestureGain@gain stored from wreg
  7292  0CEE  0020               	movlb	0	; select bank0
  7293  0CEF  00AD               	movwf	setGestureGain@gain
  7294                           
  7295                           ;APDS9960.c: 320: _Bool setGestureGain(uint8_t gain);APDS9960.c: 321: {;APDS9960.c: 322:
=======
  8150 ;;Total ram usage:        4 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    8
  8153 ;; This function calls:
  8154 ;;		_wireReadDataByte
  8155 ;;		_wireWriteDataByte
  8156 ;; This function is called by:
  8157 ;;		_initialize
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function _setGestureGain
  8163  163E                     _setGestureGain:	
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  8167                           ;setGestureGain@gain stored from wreg
  8168  163E  0020               	movlb	0	; select bank0
  8169  163F  00AD               	movwf	setGestureGain@gain
  8170                           
  8171                           ;APDS9960.c: 320: _Bool setGestureGain(uint8_t gain);APDS9960.c: 321: {;APDS9960.c: 322:
>>>>>>> b288aef trying to integrate UART
      +                               uint8_t val;;APDS9960.c: 325:     val = wireReadDataByte(0xA3);
<<<<<<< Upstream, based on origin/master
  7296  0CF0  30A3               	movlw	163
  7297  0CF1  318A  22FD  318C   	fcall	_wireReadDataByte
  7298  0CF4  0020               	movlb	0	; select bank0
  7299  0CF5  00AA               	movwf	??_setGestureGain
  7300  0CF6  082A               	movf	??_setGestureGain,w
  7301  0CF7  00AC               	movwf	setGestureGain@val
  7302                           
  7303                           ;APDS9960.c: 329:     gain &= 0b00000011;
  7304  0CF8  3003               	movlw	3
  7305  0CF9  00AA               	movwf	??_setGestureGain
  7306  0CFA  082A               	movf	??_setGestureGain,w
  7307  0CFB  05AD               	andwf	setGestureGain@gain,f
  7308                           
  7309                           ;APDS9960.c: 330:     gain = gain << 5;
  7310  0CFC  082D               	movf	setGestureGain@gain,w
  7311  0CFD  00AA               	movwf	??_setGestureGain
  7312  0CFE  3004               	movlw	4
  7313  0CFF                     u5705:	
  7314  0CFF  35AA               	lslf	??_setGestureGain,f
  7315  0D00  3EFF               	addlw	-1
  7316  0D01  1D03               	skipz
  7317  0D02  2CFF               	goto	u5705
  7318  0D03  352A               	lslf	??_setGestureGain,w
  7319  0D04  00AB               	movwf	??_setGestureGain+1
  7320  0D05  082B               	movf	??_setGestureGain+1,w
  7321  0D06  00AD               	movwf	setGestureGain@gain
  7322                           
  7323                           ;APDS9960.c: 331:     val &= 0b10011111;
  7324  0D07  309F               	movlw	159
  7325  0D08  00AA               	movwf	??_setGestureGain
  7326  0D09  082A               	movf	??_setGestureGain,w
  7327  0D0A  05AC               	andwf	setGestureGain@val,f
  7328                           
  7329                           ;APDS9960.c: 332:     val |= gain;
  7330  0D0B  082D               	movf	setGestureGain@gain,w
  7331  0D0C  00AA               	movwf	??_setGestureGain
  7332  0D0D  082A               	movf	??_setGestureGain,w
  7333  0D0E  04AC               	iorwf	setGestureGain@val,f
  7334                           
  7335                           ;APDS9960.c: 335:     if( !wireWriteDataByte(0xA3, val) ) {
  7336  0D0F  082C               	movf	setGestureGain@val,w
  7337  0D10  00AA               	movwf	??_setGestureGain
  7338  0D11  082A               	movf	??_setGestureGain,w
  7339  0D12  00A6               	movwf	wireWriteDataByte@val
  7340  0D13  30A3               	movlw	163
  7341  0D14  318A  226E  318C   	fcall	_wireWriteDataByte
  7342  0D17  0020               	movlb	0	; select bank0
  7343  0D18  0826               	movf	?_wireWriteDataByte,w
  7344  0D19  0427               	iorwf	?_wireWriteDataByte+1,w
  7345  0D1A  1D03               	btfss	3,2
  7346  0D1B  2D1E               	goto	l6582
  7347                           
  7348                           ;APDS9960.c: 336:         return 0;
  7349  0D1C  3000               	movlw	0
  7350  0D1D  0008               	return
  7351  0D1E                     l6582:	
  7352                           
  7353                           ;APDS9960.c: 339:     return 1;
  7354  0D1E  3001               	movlw	1
  7355  0D1F  0008               	return
  7356  0D20                     __end_of_setGestureGain:	
  7357                           
  7358                           	psect	text11
  7359  09D8                     __ptext11:	
  7360 ;; *************** function _setGestureExitThresh *****************
  7361 ;; Defined at:
  7362 ;;		line 310 in file "APDS9960.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  threshold       1    wreg     unsigned char 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  threshold       1   11[BANK0 ] unsigned char 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      _Bool 
  7369 ;; Registers used:
  7370 ;;		wreg, status,2, status,0, pclath, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8172  1640  30A3               	movlw	163
  8173  1641  3194  2455  3196   	fcall	_wireReadDataByte
  8174  1644  0020               	movlb	0	; select bank0
  8175  1645  00AA               	movwf	??_setGestureGain
  8176  1646  082A               	movf	??_setGestureGain,w
  8177  1647  00AC               	movwf	setGestureGain@val
  8178                           
  8179                           ;APDS9960.c: 329:     gain &= 0b00000011;
  8180  1648  3003               	movlw	3
  8181  1649  00AA               	movwf	??_setGestureGain
  8182  164A  082A               	movf	??_setGestureGain,w
  8183  164B  05AD               	andwf	setGestureGain@gain,f
  8184                           
  8185                           ;APDS9960.c: 330:     gain = gain << 5;
  8186  164C  082D               	movf	setGestureGain@gain,w
  8187  164D  00AA               	movwf	??_setGestureGain
  8188  164E  3004               	movlw	4
  8189  164F                     u7675:	
  8190  164F  35AA               	lslf	??_setGestureGain,f
  8191  1650  3EFF               	addlw	-1
  8192  1651  1D03               	skipz
  8193  1652  2E4F               	goto	u7675
  8194  1653  352A               	lslf	??_setGestureGain,w
  8195  1654  00AB               	movwf	??_setGestureGain+1
  8196  1655  082B               	movf	??_setGestureGain+1,w
  8197  1656  00AD               	movwf	setGestureGain@gain
  8198                           
  8199                           ;APDS9960.c: 331:     val &= 0b10011111;
  8200  1657  309F               	movlw	159
  8201  1658  00AA               	movwf	??_setGestureGain
  8202  1659  082A               	movf	??_setGestureGain,w
  8203  165A  05AC               	andwf	setGestureGain@val,f
  8204                           
  8205                           ;APDS9960.c: 332:     val |= gain;
  8206  165B  082D               	movf	setGestureGain@gain,w
  8207  165C  00AA               	movwf	??_setGestureGain
  8208  165D  082A               	movf	??_setGestureGain,w
  8209  165E  04AC               	iorwf	setGestureGain@val,f
  8210                           
  8211                           ;APDS9960.c: 335:     if( !wireWriteDataByte(0xA3, val) ) {
  8212  165F  082C               	movf	setGestureGain@val,w
  8213  1660  00AA               	movwf	??_setGestureGain
  8214  1661  082A               	movf	??_setGestureGain,w
  8215  1662  00A6               	movwf	wireWriteDataByte@val
  8216  1663  30A3               	movlw	163
  8217  1664  3193  2385  3196   	fcall	_wireWriteDataByte
  8218  1667  0020               	movlb	0	; select bank0
  8219  1668  0826               	movf	?_wireWriteDataByte,w
  8220  1669  0427               	iorwf	?_wireWriteDataByte+1,w
  8221  166A  1D03               	btfss	3,2
  8222  166B  2E6E               	goto	l7907
  8223                           
  8224                           ;APDS9960.c: 336:         return 0;
  8225  166C  3000               	movlw	0
  8226  166D  0008               	return
  8227  166E                     l7907:	
  8228                           
  8229                           ;APDS9960.c: 339:     return 1;
  8230  166E  3001               	movlw	1
  8231  166F  0008               	return
  8232  1670                     __end_of_setGestureGain:	
  8233                           
  8234                           	psect	text11
  8235  128E                     __ptext11:	
  8236 ;; *************** function _setGestureExitThresh *****************
  8237 ;; Defined at:
  8238 ;;		line 310 in file "APDS9960.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  threshold       1    wreg     unsigned char 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  threshold       1   11[BANK0 ] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      _Bool 
  8245 ;; Registers used:
  8246 ;;		wreg, status,2, status,0, pclath, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7380 ;;Total ram usage:        2 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    8
  7383 ;; This function calls:
  7384 ;;		_wireWriteDataByte
  7385 ;; This function is called by:
  7386 ;;		_initialize
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           
  7391                           ;psect for function _setGestureExitThresh
  7392  09D8                     _setGestureExitThresh:	
  7393                           
  7394                           ;incstack = 0
  7395                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  7396                           ;setGestureExitThresh@threshold stored from wreg
  7397  09D8  0020               	movlb	0	; select bank0
  7398  09D9  00AB               	movwf	setGestureExitThresh@threshold
  7399                           
  7400                           ;APDS9960.c: 310: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 311: {;APDS9
=======
  8256 ;;Total ram usage:        2 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    8
  8259 ;; This function calls:
  8260 ;;		_wireWriteDataByte
  8261 ;; This function is called by:
  8262 ;;		_initialize
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           
  8267                           ;psect for function _setGestureExitThresh
  8268  128E                     _setGestureExitThresh:	
  8269                           
  8270                           ;incstack = 0
  8271                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  8272                           ;setGestureExitThresh@threshold stored from wreg
  8273  128E  0020               	movlb	0	; select bank0
  8274  128F  00AB               	movwf	setGestureExitThresh@threshold
  8275                           
  8276                           ;APDS9960.c: 310: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 311: {;APDS9
>>>>>>> b288aef trying to integrate UART
      +                          960.c: 312:     if( !wireWriteDataByte(0xA1, threshold) ) {
<<<<<<< Upstream, based on origin/master
  7401  09DA  082B               	movf	setGestureExitThresh@threshold,w
  7402  09DB  00AA               	movwf	??_setGestureExitThresh
  7403  09DC  082A               	movf	??_setGestureExitThresh,w
  7404  09DD  00A6               	movwf	wireWriteDataByte@val
  7405  09DE  30A1               	movlw	161
  7406  09DF  318A  226E  3189   	fcall	_wireWriteDataByte
  7407  09E2  0020               	movlb	0	; select bank0
  7408  09E3  0826               	movf	?_wireWriteDataByte,w
  7409  09E4  0427               	iorwf	?_wireWriteDataByte+1,w
  7410  09E5  1D03               	btfss	3,2
  7411  09E6  29E9               	goto	l6564
  7412                           
  7413                           ;APDS9960.c: 313:         return 0;
  7414  09E7  3000               	movlw	0
  7415  09E8  0008               	return
  7416  09E9                     l6564:	
  7417                           
  7418                           ;APDS9960.c: 316:     return 1;
  7419  09E9  3001               	movlw	1
  7420  09EA  0008               	return
  7421  09EB                     __end_of_setGestureExitThresh:	
  7422                           
  7423                           	psect	text12
  7424  09C5                     __ptext12:	
  7425 ;; *************** function _setGestureEnterThresh *****************
  7426 ;; Defined at:
  7427 ;;		line 300 in file "APDS9960.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  threshold       1    wreg     unsigned char 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  threshold       1   11[BANK0 ] unsigned char 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      _Bool 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, pclath, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8277  1290  082B               	movf	setGestureExitThresh@threshold,w
  8278  1291  00AA               	movwf	??_setGestureExitThresh
  8279  1292  082A               	movf	??_setGestureExitThresh,w
  8280  1293  00A6               	movwf	wireWriteDataByte@val
  8281  1294  30A1               	movlw	161
  8282  1295  3193  2385  3192   	fcall	_wireWriteDataByte
  8283  1298  0020               	movlb	0	; select bank0
  8284  1299  0826               	movf	?_wireWriteDataByte,w
  8285  129A  0427               	iorwf	?_wireWriteDataByte+1,w
  8286  129B  1D03               	btfss	3,2
  8287  129C  2A9F               	goto	l7889
  8288                           
  8289                           ;APDS9960.c: 313:         return 0;
  8290  129D  3000               	movlw	0
  8291  129E  0008               	return
  8292  129F                     l7889:	
  8293                           
  8294                           ;APDS9960.c: 316:     return 1;
  8295  129F  3001               	movlw	1
  8296  12A0  0008               	return
  8297  12A1                     __end_of_setGestureExitThresh:	
  8298                           
  8299                           	psect	text12
  8300  127B                     __ptext12:	
  8301 ;; *************** function _setGestureEnterThresh *****************
  8302 ;; Defined at:
  8303 ;;		line 300 in file "APDS9960.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  threshold       1    wreg     unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  threshold       1   11[BANK0 ] unsigned char 
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      _Bool 
  8310 ;; Registers used:
  8311 ;;		wreg, status,2, status,0, pclath, cstack
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7445 ;;Total ram usage:        2 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    8
  7448 ;; This function calls:
  7449 ;;		_wireWriteDataByte
  7450 ;; This function is called by:
  7451 ;;		_initialize
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           
  7456                           ;psect for function _setGestureEnterThresh
  7457  09C5                     _setGestureEnterThresh:	
  7458                           
  7459                           ;incstack = 0
  7460                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  7461                           ;setGestureEnterThresh@threshold stored from wreg
  7462  09C5  0020               	movlb	0	; select bank0
  7463  09C6  00AB               	movwf	setGestureEnterThresh@threshold
  7464                           
  7465                           ;APDS9960.c: 300: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 301: {;APDS
=======
  8321 ;;Total ram usage:        2 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    8
  8324 ;; This function calls:
  8325 ;;		_wireWriteDataByte
  8326 ;; This function is called by:
  8327 ;;		_initialize
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           
  8332                           ;psect for function _setGestureEnterThresh
  8333  127B                     _setGestureEnterThresh:	
  8334                           
  8335                           ;incstack = 0
  8336                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  8337                           ;setGestureEnterThresh@threshold stored from wreg
  8338  127B  0020               	movlb	0	; select bank0
  8339  127C  00AB               	movwf	setGestureEnterThresh@threshold
  8340                           
  8341                           ;APDS9960.c: 300: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 301: {;APDS
>>>>>>> b288aef trying to integrate UART
      +                          9960.c: 302:     if( !wireWriteDataByte(0xA0, threshold) ) {
<<<<<<< Upstream, based on origin/master
  7466  09C7  082B               	movf	setGestureEnterThresh@threshold,w
  7467  09C8  00AA               	movwf	??_setGestureEnterThresh
  7468  09C9  082A               	movf	??_setGestureEnterThresh,w
  7469  09CA  00A6               	movwf	wireWriteDataByte@val
  7470  09CB  30A0               	movlw	160
  7471  09CC  318A  226E  3189   	fcall	_wireWriteDataByte
  7472  09CF  0020               	movlb	0	; select bank0
  7473  09D0  0826               	movf	?_wireWriteDataByte,w
  7474  09D1  0427               	iorwf	?_wireWriteDataByte+1,w
  7475  09D2  1D03               	btfss	3,2
  7476  09D3  29D6               	goto	l6554
  7477                           
  7478                           ;APDS9960.c: 303:         return 0;
  7479  09D4  3000               	movlw	0
  7480  09D5  0008               	return
  7481  09D6                     l6554:	
  7482                           
  7483                           ;APDS9960.c: 306:     return 1;
  7484  09D6  3001               	movlw	1
  7485  09D7  0008               	return
  7486  09D8                     __end_of_setGestureEnterThresh:	
  7487                           
  7488                           	psect	text13
  7489  0ADF                     __ptext13:	
  7490 ;; *************** function _setAmbientLightGain *****************
  7491 ;; Defined at:
  7492 ;;		line 213 in file "APDS9960.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  drive           1    wreg     unsigned char 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  drive           1   11[BANK0 ] unsigned char 
  7497 ;;  val             1   12[BANK0 ] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      _Bool 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0, pclath, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8342  127D  082B               	movf	setGestureEnterThresh@threshold,w
  8343  127E  00AA               	movwf	??_setGestureEnterThresh
  8344  127F  082A               	movf	??_setGestureEnterThresh,w
  8345  1280  00A6               	movwf	wireWriteDataByte@val
  8346  1281  30A0               	movlw	160
  8347  1282  3193  2385  3192   	fcall	_wireWriteDataByte
  8348  1285  0020               	movlb	0	; select bank0
  8349  1286  0826               	movf	?_wireWriteDataByte,w
  8350  1287  0427               	iorwf	?_wireWriteDataByte+1,w
  8351  1288  1D03               	btfss	3,2
  8352  1289  2A8C               	goto	l7879
  8353                           
  8354                           ;APDS9960.c: 303:         return 0;
  8355  128A  3000               	movlw	0
  8356  128B  0008               	return
  8357  128C                     l7879:	
  8358                           
  8359                           ;APDS9960.c: 306:     return 1;
  8360  128C  3001               	movlw	1
  8361  128D  0008               	return
  8362  128E                     __end_of_setGestureEnterThresh:	
  8363                           
  8364                           	psect	text13
  8365  13F6                     __ptext13:	
  8366 ;; *************** function _setAmbientLightGain *****************
  8367 ;; Defined at:
  8368 ;;		line 213 in file "APDS9960.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  drive           1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  drive           1   11[BANK0 ] unsigned char 
  8373 ;;  val             1   12[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      _Bool 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0, pclath, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
  8386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7511 ;;Total ram usage:        3 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    8
  7514 ;; This function calls:
  7515 ;;		_wireReadDataByte
  7516 ;;		_wireWriteDataByte
  7517 ;; This function is called by:
  7518 ;;		_initialize
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           
  7523                           ;psect for function _setAmbientLightGain
  7524  0ADF                     _setAmbientLightGain:	
  7525                           
  7526                           ;incstack = 0
  7527                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  7528                           ;setAmbientLightGain@drive stored from wreg
  7529  0ADF  0020               	movlb	0	; select bank0
  7530  0AE0  00AB               	movwf	setAmbientLightGain@drive
  7531                           
  7532                           ;APDS9960.c: 213: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 214: {;APDS9960.c
=======
  8387 ;;Total ram usage:        3 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    8
  8390 ;; This function calls:
  8391 ;;		_wireReadDataByte
  8392 ;;		_wireWriteDataByte
  8393 ;; This function is called by:
  8394 ;;		_initialize
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _setAmbientLightGain
  8400  13F6                     _setAmbientLightGain:	
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  8404                           ;setAmbientLightGain@drive stored from wreg
  8405  13F6  0020               	movlb	0	; select bank0
  8406  13F7  00AB               	movwf	setAmbientLightGain@drive
  8407                           
  8408                           ;APDS9960.c: 213: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 214: {;APDS9960.c
>>>>>>> b288aef trying to integrate UART
      +                          : 215:     uint8_t val;;APDS9960.c: 218:     val= wireReadDataByte(0x8F);
<<<<<<< Upstream, based on origin/master
  7533  0AE1  308F               	movlw	143
  7534  0AE2  318A  22FD  318A   	fcall	_wireReadDataByte
  7535  0AE5  0020               	movlb	0	; select bank0
  7536  0AE6  00AA               	movwf	??_setAmbientLightGain
  7537  0AE7  082A               	movf	??_setAmbientLightGain,w
  7538  0AE8  00AC               	movwf	setAmbientLightGain@val
  7539                           
  7540                           ;APDS9960.c: 221:     drive &= 0b00000011;
  7541  0AE9  3003               	movlw	3
  7542  0AEA  00AA               	movwf	??_setAmbientLightGain
  7543  0AEB  082A               	movf	??_setAmbientLightGain,w
  7544  0AEC  05AB               	andwf	setAmbientLightGain@drive,f
  7545                           
  7546                           ;APDS9960.c: 222:     val &= 0b11111100;
  7547  0AED  30FC               	movlw	252
  7548  0AEE  00AA               	movwf	??_setAmbientLightGain
  7549  0AEF  082A               	movf	??_setAmbientLightGain,w
  7550  0AF0  05AC               	andwf	setAmbientLightGain@val,f
  7551                           
  7552                           ;APDS9960.c: 223:     val |= drive;
  7553  0AF1  082B               	movf	setAmbientLightGain@drive,w
  7554  0AF2  00AA               	movwf	??_setAmbientLightGain
  7555  0AF3  082A               	movf	??_setAmbientLightGain,w
  7556  0AF4  04AC               	iorwf	setAmbientLightGain@val,f
  7557                           
  7558                           ;APDS9960.c: 226:     if( !wireWriteDataByte(0x8F, val) ) {
  7559  0AF5  082C               	movf	setAmbientLightGain@val,w
  7560  0AF6  00AA               	movwf	??_setAmbientLightGain
  7561  0AF7  082A               	movf	??_setAmbientLightGain,w
  7562  0AF8  00A6               	movwf	wireWriteDataByte@val
  7563  0AF9  308F               	movlw	143
  7564  0AFA  318A  226E         	fcall	_wireWriteDataByte
  7565  0AFC  0008               	return
  7566  0AFD                     __end_of_setAmbientLightGain:	
  7567                           
  7568                           	psect	text14
  7569  0963                     __ptext14:	
  7570 ;; *************** function _i2c1_driver_open *****************
  7571 ;; Defined at:
  7572 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;		None
  7577 ;; Return value:  Size  Location     Type
  7578 ;;		None               void
  7579 ;; Registers used:
  7580 ;;		wreg, status,2
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8409  13F8  308F               	movlw	143
  8410  13F9  3194  2455  3193   	fcall	_wireReadDataByte
  8411  13FC  0020               	movlb	0	; select bank0
  8412  13FD  00AA               	movwf	??_setAmbientLightGain
  8413  13FE  082A               	movf	??_setAmbientLightGain,w
  8414  13FF  00AC               	movwf	setAmbientLightGain@val
  8415                           
  8416                           ;APDS9960.c: 221:     drive &= 0b00000011;
  8417  1400  3003               	movlw	3
  8418  1401  00AA               	movwf	??_setAmbientLightGain
  8419  1402  082A               	movf	??_setAmbientLightGain,w
  8420  1403  05AB               	andwf	setAmbientLightGain@drive,f
  8421                           
  8422                           ;APDS9960.c: 222:     val &= 0b11111100;
  8423  1404  30FC               	movlw	252
  8424  1405  00AA               	movwf	??_setAmbientLightGain
  8425  1406  082A               	movf	??_setAmbientLightGain,w
  8426  1407  05AC               	andwf	setAmbientLightGain@val,f
  8427                           
  8428                           ;APDS9960.c: 223:     val |= drive;
  8429  1408  082B               	movf	setAmbientLightGain@drive,w
  8430  1409  00AA               	movwf	??_setAmbientLightGain
  8431  140A  082A               	movf	??_setAmbientLightGain,w
  8432  140B  04AC               	iorwf	setAmbientLightGain@val,f
  8433                           
  8434                           ;APDS9960.c: 226:     if( !wireWriteDataByte(0x8F, val) ) {
  8435  140C  082C               	movf	setAmbientLightGain@val,w
  8436  140D  00AA               	movwf	??_setAmbientLightGain
  8437  140E  082A               	movf	??_setAmbientLightGain,w
  8438  140F  00A6               	movwf	wireWriteDataByte@val
  8439  1410  308F               	movlw	143
  8440  1411  3193  2385         	fcall	_wireWriteDataByte
  8441  1413  0008               	return
  8442  1414                     __end_of_setAmbientLightGain:	
  8443                           
  8444                           	psect	text14
  8445  120D                     __ptext14:	
  8446 ;; *************** function _i2c1_driver_open *****************
  8447 ;; Defined at:
  8448 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;		None               void
  8455 ;; Registers used:
  8456 ;;		wreg, status,2
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7590 ;;Total ram usage:        0 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    5
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_initialize
  7597 ;;		_i2c_open
  7598 ;;		_InitI2C
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function _i2c1_driver_open
  7604  0963                     _i2c1_driver_open:	
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7608  0963  0024               	movlb	4	; select bank4
  7609  0964  1A95               	btfsc	21,5	;volatile
  7610  0965  0008               	return
  7611  0966  0194               	clrf	20	;volatile
  7612  0967  3028               	movlw	40
  7613  0968  0095               	movwf	21	;volatile
  7614  0969  0196               	clrf	22	;volatile
  7615  096A  3003               	movlw	3
  7616  096B  0092               	movwf	18	;volatile
  7617  096C  0008               	return
  7618  096D                     __end_of_i2c1_driver_open:	
  7619                           
  7620                           	psect	text15
  7621  0F42                     __ptext15:	
  7622 ;; *************** function _handleGesture *****************
  7623 ;; Defined at:
  7624 ;;		line 161 in file "main.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;		None
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    5
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_initialize
  8473 ;;		_i2c_open
  8474 ;;		_InitI2C
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           
  8479                           ;psect for function _i2c1_driver_open
  8480  120D                     _i2c1_driver_open:	
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8484  120D  0024               	movlb	4	; select bank4
  8485  120E  1A95               	btfsc	21,5	;volatile
  8486  120F  0008               	return
  8487  1210  0194               	clrf	20	;volatile
  8488  1211  3028               	movlw	40
  8489  1212  0095               	movwf	21	;volatile
  8490  1213  0196               	clrf	22	;volatile
  8491  1214  3003               	movlw	3
  8492  1215  0092               	movwf	18	;volatile
  8493  1216  0008               	return
  8494  1217                     __end_of_i2c1_driver_open:	
  8495                           
  8496                           	psect	text15
  8497  0AFA                     __ptext15:	
  8498 ;; *************** function _handleGesture *****************
  8499 ;; Defined at:
  8500 ;;		line 163 in file "main.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7641 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
=======
  8517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7642 ;;Total ram usage:        1 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:   10
  7645 ;; This function calls:
  7646 ;;		_Display_Name
  7647 ;;		_readGesture
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function _handleGesture
  7655  0F42                     _handleGesture:	
  7656                           
  7657                           ;main.c: 167:     switch(readGesture()) {
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _handleGesture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7661  0F42  2F7C               	goto	l7028
  7662  0F43                     l7006:	
  7663                           
  7664                           ;main.c: 175:             printed = 0;
  7665  0F43  01ED               	clrf	_printed
  7666                           
  7667                           ;main.c: 178:             name++;
  7668  0F44  3001               	movlw	1
  7669  0F45  07DC               	addwf	_name,f
  7670  0F46  3000               	movlw	0
  7671  0F47  3DDD               	addwfc	_name+1,f
  7672                           
  7673                           ;main.c: 179:             if(name > 3) {
  7674  0F48  085D               	movf	_name+1,w
  7675  0F49  3A80               	xorlw	128
  7676  0F4A  00DB               	movwf	??_handleGesture
  7677  0F4B  3080               	movlw	128
  7678  0F4C  025B               	subwf	??_handleGesture,w
  7679  0F4D  1D03               	skipz
  7680  0F4E  2F51               	goto	u6325
  7681  0F4F  3004               	movlw	4
  7682  0F50  025C               	subwf	_name,w
  7683  0F51                     u6325:	
  7684  0F51  1C03               	skipc
  7685  0F52  2F56               	goto	l7014
  7686                           
  7687                           ;main.c: 180:                 name = 0;
  7688  0F53  0020               	movlb	0	; select bank0
  7689  0F54  01DC               	clrf	_name
  7690  0F55  01DD               	clrf	_name+1
  7691  0F56                     l7014:	
  7692                           
  7693                           ;main.c: 182:             Display_Name(names[name]);
  7694  0F56  0020               	movlb	0	; select bank0
  7695  0F57  355C               	lslf	_name,w
  7696  0F58  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  7697  0F59  0086               	movwf	6
  7698  0F5A  3001               	movlw	1	; select bank2/3
  7699  0F5B  0087               	movwf	7
  7700  0F5C  3F40               	moviw [0]fsr1
  7701  0F5D  00A5               	movwf	Display_Name@string1
  7702  0F5E  3F41               	moviw [1]fsr1
  7703  0F5F  00A6               	movwf	Display_Name@string1+1
  7704  0F60  318E  26A0  318F   	fcall	_Display_Name
  7705                           
  7706                           ;main.c: 183:             break;
  7707  0F63  2F99               	goto	l7030
  7708  0F64                     l7016:	
  7709                           
  7710                           ;main.c: 185:             printed = 0;
  7711  0F64  01ED               	clrf	_printed
  7712                           
  7713                           ;main.c: 186:             --name;
  7714  0F65  30FF               	movlw	255
  7715  0F66  07DC               	addwf	_name,f
  7716  0F67  30FF               	movlw	255
  7717  0F68  3DDD               	addwfc	_name+1,f
  7718                           
  7719                           ;main.c: 187:             if(name < 0) {
  7720  0F69  1FDD               	btfss	_name+1,7
  7721  0F6A  2F6F               	goto	l7024
  7722                           
  7723                           ;main.c: 188:                 name = 3;
  7724  0F6B  3003               	movlw	3
  7725  0F6C  00DC               	movwf	_name
  7726  0F6D  3000               	movlw	0
  7727  0F6E  00DD               	movwf	_name+1
  7728  0F6F                     l7024:	
  7729                           
  7730                           ;main.c: 190:             Display_Name(names[name]);
  7731  0F6F  355C               	lslf	_name,w
  7732  0F70  3E60               	addlw	(low (_names| (0+256)))& (0+255)
  7733  0F71  0086               	movwf	6
  7734  0F72  3001               	movlw	1	; select bank2/3
  7735  0F73  0087               	movwf	7
  7736  0F74  3F40               	moviw [0]fsr1
  7737  0F75  00A5               	movwf	Display_Name@string1
  7738  0F76  3F41               	moviw [1]fsr1
  7739  0F77  00A6               	movwf	Display_Name@string1+1
  7740  0F78  318E  26A0  318F   	fcall	_Display_Name
  7741                           
  7742                           ;main.c: 191:             break;
  7743  0F7B  2F99               	goto	l7030
  7744  0F7C                     l7028:	
  7745  0F7C  3185  25E0  318F   	fcall	_readGesture
  7746                           
  7747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
=======
  8518 ;;Total ram usage:        1 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:   10
  8521 ;; This function calls:
  8522 ;;		_Display_Name
  8523 ;;		_readGesture
  8524 ;; This function is called by:
  8525 ;;		_main
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           
  8530                           ;psect for function _handleGesture
  8531  0AFA                     _handleGesture:	
  8532                           
  8533                           ;main.c: 169:     switch(readGesture()) {
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _handleGesture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8537  0AFA  2B3C               	goto	l8317
  8538  0AFB                     l8295:	
  8539                           
  8540                           ;main.c: 177:             printed = 0;
  8541  0AFB  0022               	movlb	2	; select bank2
  8542  0AFC  01EC               	clrf	_printed^(0+256)
  8543                           
  8544                           ;main.c: 180:             name++;
  8545  0AFD  3001               	movlw	1
  8546  0AFE  0021               	movlb	1	; select bank1
  8547  0AFF  07E6               	addwf	_name^(0+128),f
  8548  0B00  3000               	movlw	0
  8549  0B01  3DE7               	addwfc	(_name+1)^(0+128),f
  8550                           
  8551                           ;main.c: 181:             if(name > 3) {
  8552  0B02  0867               	movf	(_name+1)^(0+128),w
  8553  0B03  3A80               	xorlw	128
  8554  0B04  0020               	movlb	0	; select bank0
  8555  0B05  00DB               	movwf	??_handleGesture
  8556  0B06  3080               	movlw	128
  8557  0B07  025B               	subwf	??_handleGesture,w
  8558  0B08  1D03               	skipz
  8559  0B09  2B0D               	goto	u8345
  8560  0B0A  3004               	movlw	4
  8561  0B0B  0021               	movlb	1	; select bank1
  8562  0B0C  0266               	subwf	_name^(0+128),w
  8563  0B0D                     u8345:	
  8564  0B0D  1C03               	skipc
  8565  0B0E  2B12               	goto	l8303
  8566                           
  8567                           ;main.c: 182:                 name = 0;
  8568  0B0F  0021               	movlb	1	; select bank1
  8569  0B10  01E6               	clrf	_name^(0+128)
  8570  0B11  01E7               	clrf	(_name+1)^(0+128)
  8571  0B12                     l8303:	
  8572                           
  8573                           ;main.c: 184:             Display_Name(names[name]);
  8574  0B12  0021               	movlb	1	; select bank1
  8575  0B13  3566               	lslf	_name^(0+128),w
  8576  0B14  3EE7               	addlw	(low (_names| (0+256)))& (0+255)
  8577  0B15  0086               	movwf	6
  8578  0B16  3001               	movlw	1	; select bank3/4
  8579  0B17  0087               	movwf	7
  8580  0B18  3F40               	moviw [0]fsr1
  8581  0B19  0020               	movlb	0	; select bank0
  8582  0B1A  00A5               	movwf	Display_Name@string1
  8583  0B1B  3F41               	moviw [1]fsr1
  8584  0B1C  00A6               	movwf	Display_Name@string1+1
  8585  0B1D  3189  2159  318A   	fcall	_Display_Name
  8586                           
  8587                           ;main.c: 185:             break;
  8588  0B20  2B59               	goto	l8319
  8589  0B21                     l8305:	
  8590                           
  8591                           ;main.c: 187:             printed = 0;
  8592  0B21  0022               	movlb	2	; select bank2
  8593  0B22  01EC               	clrf	_printed^(0+256)
  8594                           
  8595                           ;main.c: 188:             --name;
  8596  0B23  30FF               	movlw	255
  8597  0B24  0021               	movlb	1	; select bank1
  8598  0B25  07E6               	addwf	_name^(0+128),f
  8599  0B26  30FF               	movlw	255
  8600  0B27  3DE7               	addwfc	(_name+1)^(0+128),f
  8601                           
  8602                           ;main.c: 189:             if(name < 0) {
  8603  0B28  1FE7               	btfss	(_name+1)^(0+128),7
  8604  0B29  2B2E               	goto	l8313
  8605                           
  8606                           ;main.c: 190:                 name = 3;
  8607  0B2A  3003               	movlw	3
  8608  0B2B  00E6               	movwf	_name^(0+128)
  8609  0B2C  3000               	movlw	0
  8610  0B2D  00E7               	movwf	(_name^(0+128)+1)
  8611  0B2E                     l8313:	
  8612                           
  8613                           ;main.c: 192:             Display_Name(names[name]);
  8614  0B2E  3566               	lslf	_name^(0+128),w
  8615  0B2F  3EE7               	addlw	(low (_names| (0+256)))& (0+255)
  8616  0B30  0086               	movwf	6
  8617  0B31  3001               	movlw	1	; select bank3/4
  8618  0B32  0087               	movwf	7
  8619  0B33  3F40               	moviw [0]fsr1
  8620  0B34  0020               	movlb	0	; select bank0
  8621  0B35  00A5               	movwf	Display_Name@string1
  8622  0B36  3F41               	moviw [1]fsr1
  8623  0B37  00A6               	movwf	Display_Name@string1+1
  8624  0B38  3189  2159  318A   	fcall	_Display_Name
  8625                           
  8626                           ;main.c: 193:             break;
  8627  0B3B  2B59               	goto	l8319
  8628  0B3C                     l8317:	
  8629  0B3C  318D  250C  318A   	fcall	_readGesture
  8630                           
  8631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
>>>>>>> b288aef trying to integrate UART
      +                          itches
<<<<<<< Upstream, based on origin/master
  7748                           ; Switch size 1, requested type "simple"
  7749                           ; Number of cases is 1, Range of values is 0 to 0
  7750                           ; switch strategies available:
  7751                           ; Name         Instructions Cycles
  7752                           ; simple_byte            4     3 (average)
  7753                           ; direct_byte            8     6 (fixed)
  7754                           ; jumptable            260     6 (fixed)
  7755                           ;	Chosen strategy is simple_byte
  7756  0F7F  0020               	movlb	0	; select bank0
  7757  0F80  0850               	movf	?_readGesture+1,w
  7758  0F81  3A00               	xorlw	0	; case 0
  7759  0F82  1903               	skipnz
  7760  0F83  2F85               	goto	l7290
  7761  0F84  2F99               	goto	l7030
  7762  0F85                     l7290:	
  7763                           
  7764                           ; Switch size 1, requested type "simple"
  7765                           ; Number of cases is 6, Range of values is 1 to 6
  7766                           ; switch strategies available:
  7767                           ; Name         Instructions Cycles
  7768                           ; simple_byte           19    10 (average)
  7769                           ; direct_byte           21     9 (fixed)
  7770                           ; jumptable            263     9 (fixed)
  7771                           ;	Chosen strategy is simple_byte
  7772  0F85  084F               	movf	?_readGesture,w
  7773  0F86  3A01               	xorlw	1	; case 1
  7774  0F87  1903               	skipnz
  7775  0F88  2F43               	goto	l7006
  7776  0F89  3A03               	xorlw	3	; case 2
  7777  0F8A  1903               	skipnz
  7778  0F8B  2F64               	goto	l7016
  7779  0F8C  3A01               	xorlw	1	; case 3
  7780  0F8D  1903               	skipnz
  7781  0F8E  2F99               	goto	l7030
  7782  0F8F  3A07               	xorlw	7	; case 4
  7783  0F90  1903               	skipnz
  7784  0F91  2F99               	goto	l7030
  7785  0F92  3A01               	xorlw	1	; case 5
  7786  0F93  1903               	skipnz
  7787  0F94  2F99               	goto	l7030
  7788  0F95  3A03               	xorlw	3	; case 6
  7789  0F96  1903               	skipnz
  7790  0F97  2F99               	goto	l7030
  7791  0F98  2F99               	goto	l7030
  7792  0F99                     l7030:	
  7793                           
  7794                           ;main.c: 203:     printed = 0;
  7795  0F99  0020               	movlb	0	; select bank0
  7796  0F9A  01ED               	clrf	_printed
  7797  0F9B  0008               	return
  7798  0F9C                     __end_of_handleGesture:	
  7799                           
  7800                           	psect	text16
  7801  05E0                     __ptext16:	
  7802 ;; *************** function _readGesture *****************
  7803 ;; Defined at:
  7804 ;;		line 556 in file "APDS9960.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  fifo_data      64    0[BANK2 ] unsigned char [64]
  7809 ;;  fifo_data2     64    0[BANK1 ] unsigned char [64]
  7810 ;;  i               2   57[BANK0 ] int 
  7811 ;;  bytes_read      2   54[BANK0 ] int 
  7812 ;;  motion          2   51[BANK0 ] int 
  7813 ;;  fifo_level      1   56[BANK0 ] unsigned char 
  7814 ;;  gstatus         1   53[BANK0 ] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2   47[BANK0 ] int 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8632                           ; Switch size 1, requested type "simple"
  8633                           ; Number of cases is 1, Range of values is 0 to 0
  8634                           ; switch strategies available:
  8635                           ; Name         Instructions Cycles
  8636                           ; simple_byte            4     3 (average)
  8637                           ; direct_byte            8     6 (fixed)
  8638                           ; jumptable            260     6 (fixed)
  8639                           ;	Chosen strategy is simple_byte
  8640  0B3F  0020               	movlb	0	; select bank0
  8641  0B40  0850               	movf	?_readGesture+1,w
  8642  0B41  3A00               	xorlw	0	; case 0
  8643  0B42  1903               	skipnz
  8644  0B43  2B45               	goto	l8587
  8645  0B44  2B59               	goto	l8319
  8646  0B45                     l8587:	
  8647                           
  8648                           ; Switch size 1, requested type "simple"
  8649                           ; Number of cases is 6, Range of values is 1 to 6
  8650                           ; switch strategies available:
  8651                           ; Name         Instructions Cycles
  8652                           ; simple_byte           19    10 (average)
  8653                           ; direct_byte           21     9 (fixed)
  8654                           ; jumptable            263     9 (fixed)
  8655                           ;	Chosen strategy is simple_byte
  8656  0B45  084F               	movf	?_readGesture,w
  8657  0B46  3A01               	xorlw	1	; case 1
  8658  0B47  1903               	skipnz
  8659  0B48  2AFB               	goto	l8295
  8660  0B49  3A03               	xorlw	3	; case 2
  8661  0B4A  1903               	skipnz
  8662  0B4B  2B21               	goto	l8305
  8663  0B4C  3A01               	xorlw	1	; case 3
  8664  0B4D  1903               	skipnz
  8665  0B4E  2B59               	goto	l8319
  8666  0B4F  3A07               	xorlw	7	; case 4
  8667  0B50  1903               	skipnz
  8668  0B51  2B59               	goto	l8319
  8669  0B52  3A01               	xorlw	1	; case 5
  8670  0B53  1903               	skipnz
  8671  0B54  2B59               	goto	l8319
  8672  0B55  3A03               	xorlw	3	; case 6
  8673  0B56  1903               	skipnz
  8674  0B57  2B59               	goto	l8319
  8675  0B58  2B59               	goto	l8319
  8676  0B59                     l8319:	
  8677                           
  8678                           ;main.c: 201:     printed = 0;
  8679  0B59  0022               	movlb	2	; select bank2
  8680  0B5A  01EC               	clrf	_printed^(0+256)
  8681  0B5B  0008               	return
  8682  0B5C                     __end_of_handleGesture:	
  8683                           
  8684                           	psect	text16
  8685  0D0C                     __ptext16:	
  8686 ;; *************** function _readGesture *****************
  8687 ;; Defined at:
  8688 ;;		line 556 in file "APDS9960.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;		None
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  fifo_data      64    0[BANK2 ] unsigned char [64]
  8693 ;;  fifo_data2     64    0[BANK1 ] unsigned char [64]
  8694 ;;  i               2   57[BANK0 ] int 
  8695 ;;  bytes_read      2   54[BANK0 ] int 
  8696 ;;  motion          2   51[BANK0 ] int 
  8697 ;;  fifo_level      1   56[BANK0 ] unsigned char 
  8698 ;;  gstatus         1   53[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  2   47[BANK0 ] int 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  7824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7825 ;;      Locals:         0       8      64      64       0       0       0       0       0       0       0       0       
=======
  8709 ;;      Locals:         0       8      64      64       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
  8710 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7827 ;;      Totals:         0      12      64      64       0       0       0       0       0       0       0       0       
=======
  8711 ;;      Totals:         0      12      64      64       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  7828 ;;Total ram usage:      140 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    9
  7831 ;; This function calls:
  7832 ;;		_decodeGesture
  7833 ;;		_getMode
  7834 ;;		_isGestureAvailable
  7835 ;;		_processGestureData
  7836 ;;		_resetGestureParameters
  7837 ;;		_wireReadDataBlock
  7838 ;;		_wireReadDataByte
  7839 ;; This function is called by:
  7840 ;;		_handleGesture
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function _readGesture
  7846  05E0                     _readGesture:	
  7847                           
  7848                           ;APDS9960.c: 559:     int bytes_read = 0;
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in _readGesture: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7852  05E0  0020               	movlb	0	; select bank0
  7853  05E1  01D6               	clrf	readGesture@bytes_read
  7854  05E2  01D7               	clrf	readGesture@bytes_read+1
  7855                           
  7856                           ;APDS9960.c: 560:     uint8_t fifo_data[64];;APDS9960.c: 561:     uint8_t fifo_data2[64]
=======
  8712 ;;Total ram usage:      140 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    9
  8715 ;; This function calls:
  8716 ;;		_decodeGesture
  8717 ;;		_getMode
  8718 ;;		_isGestureAvailable
  8719 ;;		_processGestureData
  8720 ;;		_resetGestureParameters
  8721 ;;		_wireReadDataBlock
  8722 ;;		_wireReadDataByte
  8723 ;; This function is called by:
  8724 ;;		_handleGesture
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           
  8729                           ;psect for function _readGesture
  8730  0D0C                     _readGesture:	
  8731                           
  8732                           ;APDS9960.c: 559:     int bytes_read = 0;
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _readGesture: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8736  0D0C  0020               	movlb	0	; select bank0
  8737  0D0D  01D6               	clrf	readGesture@bytes_read
  8738  0D0E  01D7               	clrf	readGesture@bytes_read+1
  8739                           
  8740                           ;APDS9960.c: 560:     uint8_t fifo_data[64];;APDS9960.c: 561:     uint8_t fifo_data2[64]
>>>>>>> b288aef trying to integrate UART
      +                          ;;APDS9960.c: 562:     uint8_t gstatus;;APDS9960.c: 563:     int motion;;APDS9960.c: 564
      +                          :     int i;;APDS9960.c: 567:     if( !isGestureAvailable() || !(getMode() & 0b01000001)
      +                           ) {
<<<<<<< Upstream, based on origin/master
  7857  05E3  3189  21B2  3185   	fcall	_isGestureAvailable
  7858  05E6  3A00               	xorlw	0
  7859  05E7  1903               	skipnz
  7860  05E8  2DEF               	goto	l6396
  7861  05E9  3189  215A  3185   	fcall	_getMode
  7862  05EC  3941               	andlw	65
  7863  05ED  1D03               	btfss	3,2
  7864  05EE  2EA4               	goto	l6400
  7865  05EF                     l6396:	
  7866                           
  7867                           ;APDS9960.c: 568:         return DIR_NONE;
  7868  05EF  0020               	movlb	0	; select bank0
  7869  05F0  01CF               	clrf	?_readGesture
  7870  05F1  01D0               	clrf	?_readGesture+1
  7871  05F2  0008               	return
  7872  05F3                     l6406:	
  7873                           ;APDS9960.c: 569:     }
  7874                           
  7875                           
  7876                           ;APDS9960.c: 584:         {;APDS9960.c: 586:          fifo_level= wireReadDataByte(0xAE)
=======
  8741  0D0F  3192  2268  318D   	fcall	_isGestureAvailable
  8742  0D12  3A00               	xorlw	0
  8743  0D13  1903               	skipnz
  8744  0D14  2D1B               	goto	l7695
  8745  0D15  3192  2204  318D   	fcall	_getMode
  8746  0D18  3941               	andlw	65
  8747  0D19  1D03               	btfss	3,2
  8748  0D1A  2DD0               	goto	l7699
  8749  0D1B                     l7695:	
  8750                           
  8751                           ;APDS9960.c: 568:         return DIR_NONE;
  8752  0D1B  0020               	movlb	0	; select bank0
  8753  0D1C  01CF               	clrf	?_readGesture
  8754  0D1D  01D0               	clrf	?_readGesture+1
  8755  0D1E  0008               	return
  8756  0D1F                     l7705:	
  8757                           ;APDS9960.c: 569:     }
  8758                           
  8759                           
  8760                           ;APDS9960.c: 584:         {;APDS9960.c: 586:          fifo_level= wireReadDataByte(0xAE)
>>>>>>> b288aef trying to integrate UART
      +                          ;
<<<<<<< Upstream, based on origin/master
  7877  05F3  30AE               	movlw	174
  7878  05F4  318A  22FD  3185   	fcall	_wireReadDataByte
  7879  05F7  0020               	movlb	0	; select bank0
  7880  05F8  00D1               	movwf	??_readGesture
  7881  05F9  0851               	movf	??_readGesture,w
  7882  05FA  00D8               	movwf	readGesture@fifo_level
  7883                           
  7884                           ;APDS9960.c: 590:             if( fifo_level > 0) {
  7885  05FB  0858               	movf	readGesture@fifo_level,w
  7886  05FC  1903               	btfsc	3,2
  7887  05FD  2EA4               	goto	l6400
  7888                           
  7889                           ;APDS9960.c: 592:               if(fifo_level < 17)
  7890  05FE  3011               	movlw	17
  7891  05FF  0258               	subwf	readGesture@fifo_level,w
  7892  0600  1803               	skipnc
  7893  0601  2E06               	goto	l6414
  7894                           
  7895                           ;APDS9960.c: 593:               {;APDS9960.c: 594:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  7896  0602  3020               	movlw	low readGesture@fifo_data
  7897  0603  00A6               	movwf	wireReadDataBlock@val
  7898  0604  3001               	movlw	high readGesture@fifo_data
  7899  0605  2E09               	goto	L1
  7900  0606                     l6414:	
  7901                           ;APDS9960.c: 597:               } else
  7902                           
  7903                           
  7904                           ;APDS9960.c: 598:               {;APDS9960.c: 599:                 bytes_read = wireRead
=======
  8761  0D1F  30AE               	movlw	174
  8762  0D20  3194  2455  318D   	fcall	_wireReadDataByte
  8763  0D23  0020               	movlb	0	; select bank0
  8764  0D24  00D1               	movwf	??_readGesture
  8765  0D25  0851               	movf	??_readGesture,w
  8766  0D26  00D8               	movwf	readGesture@fifo_level
  8767                           
  8768                           ;APDS9960.c: 590:             if( fifo_level > 0) {
  8769  0D27  0858               	movf	readGesture@fifo_level,w
  8770  0D28  1903               	btfsc	3,2
  8771  0D29  2DD0               	goto	l7699
  8772                           
  8773                           ;APDS9960.c: 592:               if(fifo_level < 17)
  8774  0D2A  3011               	movlw	17
  8775  0D2B  0258               	subwf	readGesture@fifo_level,w
  8776  0D2C  1803               	skipnc
  8777  0D2D  2D32               	goto	l7713
  8778                           
  8779                           ;APDS9960.c: 593:               {;APDS9960.c: 594:                 bytes_read = wireRead
>>>>>>> b288aef trying to integrate UART
      +                          DataBlock( 0xFC,
<<<<<<< Upstream, based on origin/master
  7905  0606  30A0               	movlw	low readGesture@fifo_data2
  7906  0607  00A6               	movwf	wireReadDataBlock@val
  7907  0608  3000               	movlw	high readGesture@fifo_data2
  7908  0609                     L1:	
  7909  0609  00A7               	movwf	wireReadDataBlock@val+1
  7910  060A  0858               	movf	readGesture@fifo_level,w
  7911  060B  00D1               	movwf	??_readGesture
  7912  060C  01D2               	clrf	??_readGesture+1
  7913  060D  35D1               	lslf	??_readGesture,f
  7914  060E  0DD2               	rlf	??_readGesture+1,f
  7915  060F  35D1               	lslf	??_readGesture,f
  7916  0610  0DD2               	rlf	??_readGesture+1,f
  7917  0611  0851               	movf	??_readGesture,w
  7918  0612  00A8               	movwf	wireReadDataBlock@len
  7919  0613  0852               	movf	??_readGesture+1,w
  7920  0614  00A9               	movwf	wireReadDataBlock@len+1
  7921  0615  30FC               	movlw	252
  7922  0616  3187  27B3  3185   	fcall	_wireReadDataBlock
  7923  0619  0020               	movlb	0	; select bank0
  7924  061A  0827               	movf	?_wireReadDataBlock+1,w
  7925  061B  00D7               	movwf	readGesture@bytes_read+1
  7926  061C  0826               	movf	?_wireReadDataBlock,w
  7927  061D  00D6               	movwf	readGesture@bytes_read
  7928                           
  7929                           ;APDS9960.c: 605:                 if( bytes_read == -1 )
  7930  061E  0A56               	incf	readGesture@bytes_read,w
  7931  061F  1D03               	skipz
  7932  0620  2E29               	goto	l6422
  7933  0621  0A57               	incf	readGesture@bytes_read+1,w
  7934  0622  1D03               	btfss	3,2
  7935  0623  2E29               	goto	l6422
  7936                           
  7937                           ;APDS9960.c: 606:                 {;APDS9960.c: 607:                     return 0xFF;
  7938  0624  30FF               	movlw	255
  7939  0625  00CF               	movwf	?_readGesture
  7940  0626  3000               	movlw	0
  7941  0627  00D0               	movwf	?_readGesture+1
  7942  0628  0008               	return
  7943  0629                     l6422:	
  7944                           
  7945                           ;APDS9960.c: 612:                 if( bytes_read >= 4 )
  7946  0629  0857               	movf	readGesture@bytes_read+1,w
  7947  062A  3A80               	xorlw	128
  7948  062B  00D1               	movwf	??_readGesture
  7949  062C  3080               	movlw	128
  7950  062D  0251               	subwf	??_readGesture,w
  7951  062E  1D03               	skipz
  7952  062F  2E32               	goto	u5575
  7953  0630  3004               	movlw	4
  7954  0631  0256               	subwf	readGesture@bytes_read,w
  7955  0632                     u5575:	
  7956  0632  1C03               	skipc
  7957  0633  2EA4               	goto	l6400
  7958                           
  7959                           ;APDS9960.c: 613:                 {;APDS9960.c: 615:                     for( i = 0; i <
=======
  8780  0D2E  3020               	movlw	low readGesture@fifo_data
  8781  0D2F  00A6               	movwf	wireReadDataBlock@val
  8782  0D30  3001               	movlw	high readGesture@fifo_data
  8783  0D31  2D35               	goto	L1
  8784  0D32                     l7713:	
  8785                           ;APDS9960.c: 597:               } else
  8786                           
  8787                           
  8788                           ;APDS9960.c: 598:               {;APDS9960.c: 599:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  8789  0D32  30A0               	movlw	low readGesture@fifo_data2
  8790  0D33  00A6               	movwf	wireReadDataBlock@val
  8791  0D34  3000               	movlw	high readGesture@fifo_data2
  8792  0D35                     L1:	
  8793  0D35  00A7               	movwf	wireReadDataBlock@val+1
  8794  0D36  0858               	movf	readGesture@fifo_level,w
  8795  0D37  00D1               	movwf	??_readGesture
  8796  0D38  01D2               	clrf	??_readGesture+1
  8797  0D39  35D1               	lslf	??_readGesture,f
  8798  0D3A  0DD2               	rlf	??_readGesture+1,f
  8799  0D3B  35D1               	lslf	??_readGesture,f
  8800  0D3C  0DD2               	rlf	??_readGesture+1,f
  8801  0D3D  0851               	movf	??_readGesture,w
  8802  0D3E  00A8               	movwf	wireReadDataBlock@len
  8803  0D3F  0852               	movf	??_readGesture+1,w
  8804  0D40  00A9               	movwf	wireReadDataBlock@len+1
  8805  0D41  30FC               	movlw	252
  8806  0D42  3188  2071  318D   	fcall	_wireReadDataBlock
  8807  0D45  0020               	movlb	0	; select bank0
  8808  0D46  0827               	movf	?_wireReadDataBlock+1,w
  8809  0D47  00D7               	movwf	readGesture@bytes_read+1
  8810  0D48  0826               	movf	?_wireReadDataBlock,w
  8811  0D49  00D6               	movwf	readGesture@bytes_read
  8812                           
  8813                           ;APDS9960.c: 605:                 if( bytes_read == -1 )
  8814  0D4A  0A56               	incf	readGesture@bytes_read,w
  8815  0D4B  1D03               	skipz
  8816  0D4C  2D55               	goto	l7721
  8817  0D4D  0A57               	incf	readGesture@bytes_read+1,w
  8818  0D4E  1D03               	btfss	3,2
  8819  0D4F  2D55               	goto	l7721
  8820                           
  8821                           ;APDS9960.c: 606:                 {;APDS9960.c: 607:                     return 0xFF;
  8822  0D50  30FF               	movlw	255
  8823  0D51  00CF               	movwf	?_readGesture
  8824  0D52  3000               	movlw	0
  8825  0D53  00D0               	movwf	?_readGesture+1
  8826  0D54  0008               	return
  8827  0D55                     l7721:	
  8828                           
  8829                           ;APDS9960.c: 612:                 if( bytes_read >= 4 )
  8830  0D55  0857               	movf	readGesture@bytes_read+1,w
  8831  0D56  3A80               	xorlw	128
  8832  0D57  00D1               	movwf	??_readGesture
  8833  0D58  3080               	movlw	128
  8834  0D59  0251               	subwf	??_readGesture,w
  8835  0D5A  1D03               	skipz
  8836  0D5B  2D5E               	goto	u7535
  8837  0D5C  3004               	movlw	4
  8838  0D5D  0256               	subwf	readGesture@bytes_read,w
  8839  0D5E                     u7535:	
  8840  0D5E  1C03               	skipc
  8841  0D5F  2DD0               	goto	l7699
  8842                           
  8843                           ;APDS9960.c: 613:                 {;APDS9960.c: 615:                     for( i = 0; i <
>>>>>>> b288aef trying to integrate UART
      +                           bytes_read; i += 4 ) {
<<<<<<< Upstream, based on origin/master
  7960  0634  0020               	movlb	0	; select bank0
  7961  0635  01D9               	clrf	readGesture@i
  7962  0636  01DA               	clrf	readGesture@i+1
  7963  0637                     l6434:	
  7964  0637  085A               	movf	readGesture@i+1,w
  7965  0638  3A80               	xorlw	128
  7966  0639  00D1               	movwf	??_readGesture
  7967  063A  0857               	movf	readGesture@bytes_read+1,w
  7968  063B  3A80               	xorlw	128
  7969  063C  0251               	subwf	??_readGesture,w
  7970  063D  1D03               	skipz
  7971  063E  2E41               	goto	u5585
  7972  063F  0856               	movf	readGesture@bytes_read,w
  7973  0640  0259               	subwf	readGesture@i,w
  7974  0641                     u5585:	
  7975  0641  1803               	btfsc	3,0
  7976  0642  2E98               	goto	l6436
  7977                           
  7978                           ;APDS9960.c: 616:                         gesture_data_.u_data[gesture_data_.index] = fi
=======
  8844  0D60  0020               	movlb	0	; select bank0
  8845  0D61  01D9               	clrf	readGesture@i
  8846  0D62  01DA               	clrf	readGesture@i+1
  8847  0D63                     l7733:	
  8848  0D63  085A               	movf	readGesture@i+1,w
  8849  0D64  3A80               	xorlw	128
  8850  0D65  00D1               	movwf	??_readGesture
  8851  0D66  0857               	movf	readGesture@bytes_read+1,w
  8852  0D67  3A80               	xorlw	128
  8853  0D68  0251               	subwf	??_readGesture,w
  8854  0D69  1D03               	skipz
  8855  0D6A  2D6D               	goto	u7545
  8856  0D6B  0856               	movf	readGesture@bytes_read,w
  8857  0D6C  0259               	subwf	readGesture@i,w
  8858  0D6D                     u7545:	
  8859  0D6D  1803               	btfsc	3,0
  8860  0D6E  2DC4               	goto	l7735
  8861                           
  8862                           ;APDS9960.c: 616:                         gesture_data_.u_data[gesture_data_.index] = fi
>>>>>>> b288aef trying to integrate UART
      +                          fo_data[i + 0];
<<<<<<< Upstream, based on origin/master
  7979  0643  0020               	movlb	0	; select bank0
  7980  0644  0859               	movf	readGesture@i,w
  7981  0645  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7982  0646  0086               	movwf	6
  7983  0647  3001               	movlw	1	; select bank2/3
  7984  0648  0087               	movwf	7
  7985  0649  0801               	movf	1,w
  7986  064A  00D1               	movwf	??_readGesture
  7987  064B  0024               	movlb	4	; select bank4
  7988  064C  0860               	movf	(_gesture_data_^(0+512)+64),w
  7989  064D  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7990  064E  0086               	movwf	6
  7991  064F  3002               	movlw	2	; select bank4/5
  7992  0650  0087               	movwf	7
  7993  0651  0020               	movlb	0	; select bank0
  7994  0652  0851               	movf	??_readGesture,w
  7995  0653  0081               	movwf	1
  7996                           
  7997                           ;APDS9960.c: 618:                         gesture_data_.d_data[gesture_data_.index] = fi
=======
  8863  0D6F  0020               	movlb	0	; select bank0
  8864  0D70  0859               	movf	readGesture@i,w
  8865  0D71  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8866  0D72  0086               	movwf	6
  8867  0D73  3001               	movlw	1	; select bank2/3
  8868  0D74  0087               	movwf	7
  8869  0D75  0801               	movf	1,w
  8870  0D76  00D1               	movwf	??_readGesture
  8871  0D77  0024               	movlb	4	; select bank4
  8872  0D78  0860               	movf	(_gesture_data_^(0+512)+64),w
  8873  0D79  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8874  0D7A  0086               	movwf	6
  8875  0D7B  3002               	movlw	2	; select bank4/5
  8876  0D7C  0087               	movwf	7
  8877  0D7D  0020               	movlb	0	; select bank0
  8878  0D7E  0851               	movf	??_readGesture,w
  8879  0D7F  0081               	movwf	1
  8880                           
  8881                           ;APDS9960.c: 618:                         gesture_data_.d_data[gesture_data_.index] = fi
>>>>>>> b288aef trying to integrate UART
      +                          fo_data[i + 1];
<<<<<<< Upstream, based on origin/master
  7998  0654  0859               	movf	readGesture@i,w
  7999  0655  3E01               	addlw	1
  8000  0656  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8001  0657  0086               	movwf	6
  8002  0658  3001               	movlw	1	; select bank2/3
  8003  0659  0087               	movwf	7
  8004  065A  0801               	movf	1,w
  8005  065B  00D1               	movwf	??_readGesture
  8006  065C  0024               	movlb	4	; select bank4
  8007  065D  0860               	movf	(_gesture_data_^(0+512)+64),w
  8008  065E  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8009  065F  0086               	movwf	6
  8010  0660  3002               	movlw	2	; select bank4/5
  8011  0661  0087               	movwf	7
  8012  0662  0020               	movlb	0	; select bank0
  8013  0663  0851               	movf	??_readGesture,w
  8014  0664  0081               	movwf	1
  8015                           
  8016                           ;APDS9960.c: 620:                         gesture_data_.l_data[gesture_data_.index] = fi
=======
  8882  0D80  0859               	movf	readGesture@i,w
  8883  0D81  3E01               	addlw	1
  8884  0D82  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8885  0D83  0086               	movwf	6
  8886  0D84  3001               	movlw	1	; select bank2/3
  8887  0D85  0087               	movwf	7
  8888  0D86  0801               	movf	1,w
  8889  0D87  00D1               	movwf	??_readGesture
  8890  0D88  0024               	movlb	4	; select bank4
  8891  0D89  0860               	movf	(_gesture_data_^(0+512)+64),w
  8892  0D8A  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8893  0D8B  0086               	movwf	6
  8894  0D8C  3002               	movlw	2	; select bank4/5
  8895  0D8D  0087               	movwf	7
  8896  0D8E  0020               	movlb	0	; select bank0
  8897  0D8F  0851               	movf	??_readGesture,w
  8898  0D90  0081               	movwf	1
  8899                           
  8900                           ;APDS9960.c: 620:                         gesture_data_.l_data[gesture_data_.index] = fi
>>>>>>> b288aef trying to integrate UART
      +                          fo_data[i + 2];
<<<<<<< Upstream, based on origin/master
  8017  0665  0859               	movf	readGesture@i,w
  8018  0666  3E02               	addlw	2
  8019  0667  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8020  0668  0086               	movwf	6
  8021  0669  3001               	movlw	1	; select bank2/3
  8022  066A  0087               	movwf	7
  8023  066B  0801               	movf	1,w
  8024  066C  00D1               	movwf	??_readGesture
  8025  066D  0024               	movlb	4	; select bank4
  8026  066E  0860               	movf	(_gesture_data_^(0+512)+64),w
  8027  066F  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8028  0670  0086               	movwf	6
  8029  0671  3002               	movlw	2	; select bank4/5
  8030  0672  0087               	movwf	7
  8031  0673  0020               	movlb	0	; select bank0
  8032  0674  0851               	movf	??_readGesture,w
  8033  0675  0081               	movwf	1
  8034                           
  8035                           ;APDS9960.c: 622:                         gesture_data_.r_data[gesture_data_.index] = fi
=======
  8901  0D91  0859               	movf	readGesture@i,w
  8902  0D92  3E02               	addlw	2
  8903  0D93  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8904  0D94  0086               	movwf	6
  8905  0D95  3001               	movlw	1	; select bank2/3
  8906  0D96  0087               	movwf	7
  8907  0D97  0801               	movf	1,w
  8908  0D98  00D1               	movwf	??_readGesture
  8909  0D99  0024               	movlb	4	; select bank4
  8910  0D9A  0860               	movf	(_gesture_data_^(0+512)+64),w
  8911  0D9B  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8912  0D9C  0086               	movwf	6
  8913  0D9D  3002               	movlw	2	; select bank4/5
  8914  0D9E  0087               	movwf	7
  8915  0D9F  0020               	movlb	0	; select bank0
  8916  0DA0  0851               	movf	??_readGesture,w
  8917  0DA1  0081               	movwf	1
  8918                           
  8919                           ;APDS9960.c: 622:                         gesture_data_.r_data[gesture_data_.index] = fi
>>>>>>> b288aef trying to integrate UART
      +                          fo_data[i + 3];
<<<<<<< Upstream, based on origin/master
  8036  0676  0859               	movf	readGesture@i,w
  8037  0677  3E03               	addlw	3
  8038  0678  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8039  0679  0086               	movwf	6
  8040  067A  3001               	movlw	1	; select bank2/3
  8041  067B  0087               	movwf	7
  8042  067C  0801               	movf	1,w
  8043  067D  00D1               	movwf	??_readGesture
  8044  067E  0024               	movlb	4	; select bank4
  8045  067F  0860               	movf	(_gesture_data_^(0+512)+64),w
  8046  0680  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8047  0681  0086               	movwf	6
  8048  0682  3002               	movlw	2	; select bank4/5
  8049  0683  0087               	movwf	7
  8050  0684  0020               	movlb	0	; select bank0
  8051  0685  0851               	movf	??_readGesture,w
  8052  0686  0081               	movwf	1
  8053                           
  8054                           ;APDS9960.c: 624:                         gesture_data_.index++;
  8055  0687  3001               	movlw	1
  8056  0688  00D1               	movwf	??_readGesture
  8057  0689  0851               	movf	??_readGesture,w
  8058  068A  0024               	movlb	4	; select bank4
  8059  068B  07E0               	addwf	(_gesture_data_^(0+512)+64),f
  8060                           
  8061                           ;APDS9960.c: 625:                         gesture_data_.total_gestures++;
  8062  068C  3001               	movlw	1
  8063  068D  0020               	movlb	0	; select bank0
  8064  068E  00D1               	movwf	??_readGesture
  8065  068F  0851               	movf	??_readGesture,w
  8066  0690  0024               	movlb	4	; select bank4
  8067  0691  07E1               	addwf	(_gesture_data_^(0+512)+65),f
  8068                           
  8069                           ;APDS9960.c: 626:                     }
  8070  0692  3004               	movlw	4
  8071  0693  0020               	movlb	0	; select bank0
  8072  0694  07D9               	addwf	readGesture@i,f
  8073  0695  3000               	movlw	0
  8074  0696  3DDA               	addwfc	readGesture@i+1,f
  8075  0697  2E37               	goto	l6434
  8076  0698                     l6436:	
  8077                           
  8078                           ;APDS9960.c: 629:                     if( processGestureData() )
  8079  0698  3180  206B  3185   	fcall	_processGestureData
  8080  069B  3A00               	xorlw	0
  8081  069C  1903               	skipnz
  8082  069D  2EA1               	goto	l6440
  8083                           
  8084                           ;APDS9960.c: 630:                     {;APDS9960.c: 632:                         if( dec
=======
  8920  0DA2  0859               	movf	readGesture@i,w
  8921  0DA3  3E03               	addlw	3
  8922  0DA4  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  8923  0DA5  0086               	movwf	6
  8924  0DA6  3001               	movlw	1	; select bank2/3
  8925  0DA7  0087               	movwf	7
  8926  0DA8  0801               	movf	1,w
  8927  0DA9  00D1               	movwf	??_readGesture
  8928  0DAA  0024               	movlb	4	; select bank4
  8929  0DAB  0860               	movf	(_gesture_data_^(0+512)+64),w
  8930  0DAC  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8931  0DAD  0086               	movwf	6
  8932  0DAE  3002               	movlw	2	; select bank4/5
  8933  0DAF  0087               	movwf	7
  8934  0DB0  0020               	movlb	0	; select bank0
  8935  0DB1  0851               	movf	??_readGesture,w
  8936  0DB2  0081               	movwf	1
  8937                           
  8938                           ;APDS9960.c: 624:                         gesture_data_.index++;
  8939  0DB3  3001               	movlw	1
  8940  0DB4  00D1               	movwf	??_readGesture
  8941  0DB5  0851               	movf	??_readGesture,w
  8942  0DB6  0024               	movlb	4	; select bank4
  8943  0DB7  07E0               	addwf	(_gesture_data_^(0+512)+64),f
  8944                           
  8945                           ;APDS9960.c: 625:                         gesture_data_.total_gestures++;
  8946  0DB8  3001               	movlw	1
  8947  0DB9  0020               	movlb	0	; select bank0
  8948  0DBA  00D1               	movwf	??_readGesture
  8949  0DBB  0851               	movf	??_readGesture,w
  8950  0DBC  0024               	movlb	4	; select bank4
  8951  0DBD  07E1               	addwf	(_gesture_data_^(0+512)+65),f
  8952                           
  8953                           ;APDS9960.c: 626:                     }
  8954  0DBE  3004               	movlw	4
  8955  0DBF  0020               	movlb	0	; select bank0
  8956  0DC0  07D9               	addwf	readGesture@i,f
  8957  0DC1  3000               	movlw	0
  8958  0DC2  3DDA               	addwfc	readGesture@i+1,f
  8959  0DC3  2D63               	goto	l7733
  8960  0DC4                     l7735:	
  8961                           
  8962                           ;APDS9960.c: 629:                     if( processGestureData() )
  8963  0DC4  3180  2094  318D   	fcall	_processGestureData
  8964  0DC7  3A00               	xorlw	0
  8965  0DC8  1903               	skipnz
  8966  0DC9  2DCD               	goto	l7739
  8967                           
  8968                           ;APDS9960.c: 630:                     {;APDS9960.c: 632:                         if( dec
>>>>>>> b288aef trying to integrate UART
      +                          odeGesture() ) {
<<<<<<< Upstream, based on origin/master
  8085  069E  3183  233A  3185   	fcall	_decodeGesture
  8086  06A1                     l6440:	
  8087                           
  8088                           ;APDS9960.c: 638:                     gesture_data_.index = 0;
  8089  06A1  0024               	movlb	4	; select bank4
  8090  06A2  01E0               	clrf	(_gesture_data_^(0+512)+64)
  8091                           
  8092                           ;APDS9960.c: 639:                     gesture_data_.total_gestures = 0;
  8093  06A3  01E1               	clrf	(_gesture_data_^(0+512)+65)
  8094  06A4                     l6400:	
  8095                           
  8096                           ;APDS9960.c: 575:         _delay((unsigned long)((30)*(500000/4000.0)));
  8097  06A4  3005               	movlw	5
  8098  06A5  0020               	movlb	0	; select bank0
  8099  06A6  00D1               	movwf	??_readGesture
  8100  06A7  30DD               	movlw	221
  8101  06A8                     u6467:	
  8102  06A8  0B89               	decfsz	9,f
  8103  06A9  2EA8               	goto	u6467
  8104  06AA  0BD1               	decfsz	??_readGesture,f
  8105  06AB  2EA8               	goto	u6467
  8106  06AC  3200               	nop2
  8107                           
  8108                           ;APDS9960.c: 578:         gstatus = wireReadDataByte(0xAF);
  8109  06AD  30AF               	movlw	175
  8110  06AE  318A  22FD  3185   	fcall	_wireReadDataByte
  8111  06B1  0020               	movlb	0	; select bank0
  8112  06B2  00D1               	movwf	??_readGesture
  8113  06B3  0851               	movf	??_readGesture,w
  8114  06B4  00D5               	movwf	readGesture@gstatus
  8115                           
  8116                           ;APDS9960.c: 583:         if( (gstatus & 0b00000001) == 0b00000001 )
  8117  06B5  1855               	btfsc	readGesture@gstatus,0
  8118  06B6  2DF3               	goto	l6406
  8119                           
  8120                           ;APDS9960.c: 645:             _delay((unsigned long)((30)*(500000/4000.0)));
  8121  06B7  3005               	movlw	5
  8122  06B8  0020               	movlb	0	; select bank0
  8123  06B9  00D1               	movwf	??_readGesture
  8124  06BA  30DD               	movlw	221
  8125  06BB                     u6477:	
  8126  06BB  0B89               	decfsz	9,f
  8127  06BC  2EBB               	goto	u6477
  8128  06BD  0BD1               	decfsz	??_readGesture,f
  8129  06BE  2EBB               	goto	u6477
  8130  06BF  3200               	nop2
  8131                           
  8132                           ;APDS9960.c: 646:             decodeGesture();
  8133  06C0  3183  233A  3185   	fcall	_decodeGesture
  8134                           
  8135                           ;APDS9960.c: 647:             motion = gesture_motion_;
  8136  06C3  0022               	movlb	2	; select bank2
  8137  06C4  0869               	movf	(_gesture_motion_+1)^(0+256),w
  8138  06C5  0020               	movlb	0	; select bank0
  8139  06C6  00D4               	movwf	readGesture@motion+1
  8140  06C7  0022               	movlb	2	; select bank2
  8141  06C8  0868               	movf	_gesture_motion_^(0+256),w
  8142  06C9  0020               	movlb	0	; select bank0
  8143  06CA  00D3               	movwf	readGesture@motion
  8144                           
  8145                           ;APDS9960.c: 649:             resetGestureParameters();
  8146  06CB  318A  2256         	fcall	_resetGestureParameters
  8147                           
  8148                           ;APDS9960.c: 651:             return motion;
  8149  06CD  0020               	movlb	0	; select bank0
  8150  06CE  0854               	movf	readGesture@motion+1,w
  8151  06CF  00D0               	movwf	?_readGesture+1
  8152  06D0  0853               	movf	readGesture@motion,w
  8153  06D1  00CF               	movwf	?_readGesture
  8154  06D2  0008               	return
  8155  06D3                     __end_of_readGesture:	
  8156                           
  8157                           	psect	text17
  8158  07B3                     __ptext17:	
  8159 ;; *************** function _wireReadDataBlock *****************
  8160 ;; Defined at:
  8161 ;;		line 847 in file "APDS9960.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  reg             1    wreg     unsigned char 
  8164 ;;  val             2    6[BANK0 ] PTR unsigned char 
  8165 ;;		 -> readGesture@fifo_data2(64), readGesture@fifo_data(64), 
  8166 ;;  len             2    8[BANK0 ] unsigned int 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  reg             1   15[BANK0 ] unsigned char 
  8169 ;;  j               1   16[BANK0 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  2    6[BANK0 ] int 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  8969  0DCA  3183  236E  318D   	fcall	_decodeGesture
  8970  0DCD                     l7739:	
  8971                           
  8972                           ;APDS9960.c: 638:                     gesture_data_.index = 0;
  8973  0DCD  0024               	movlb	4	; select bank4
  8974  0DCE  01E0               	clrf	(_gesture_data_^(0+512)+64)
  8975                           
  8976                           ;APDS9960.c: 639:                     gesture_data_.total_gestures = 0;
  8977  0DCF  01E1               	clrf	(_gesture_data_^(0+512)+65)
  8978  0DD0                     l7699:	
  8979                           
  8980                           ;APDS9960.c: 575:         _delay((unsigned long)((30)*(500000/4000.0)));
  8981  0DD0  3005               	movlw	5
  8982  0DD1  0020               	movlb	0	; select bank0
  8983  0DD2  00D1               	movwf	??_readGesture
  8984  0DD3  30DD               	movlw	221
  8985  0DD4                     u8517:	
  8986  0DD4  0B89               	decfsz	9,f
  8987  0DD5  2DD4               	goto	u8517
  8988  0DD6  0BD1               	decfsz	??_readGesture,f
  8989  0DD7  2DD4               	goto	u8517
  8990  0DD8  3200               	nop2
  8991                           
  8992                           ;APDS9960.c: 578:         gstatus = wireReadDataByte(0xAF);
  8993  0DD9  30AF               	movlw	175
  8994  0DDA  3194  2455  318D   	fcall	_wireReadDataByte
  8995  0DDD  0020               	movlb	0	; select bank0
  8996  0DDE  00D1               	movwf	??_readGesture
  8997  0DDF  0851               	movf	??_readGesture,w
  8998  0DE0  00D5               	movwf	readGesture@gstatus
  8999                           
  9000                           ;APDS9960.c: 583:         if( (gstatus & 0b00000001) == 0b00000001 )
  9001  0DE1  1855               	btfsc	readGesture@gstatus,0
  9002  0DE2  2D1F               	goto	l7705
  9003                           
  9004                           ;APDS9960.c: 645:             _delay((unsigned long)((30)*(500000/4000.0)));
  9005  0DE3  3005               	movlw	5
  9006  0DE4  0020               	movlb	0	; select bank0
  9007  0DE5  00D1               	movwf	??_readGesture
  9008  0DE6  30DD               	movlw	221
  9009  0DE7                     u8527:	
  9010  0DE7  0B89               	decfsz	9,f
  9011  0DE8  2DE7               	goto	u8527
  9012  0DE9  0BD1               	decfsz	??_readGesture,f
  9013  0DEA  2DE7               	goto	u8527
  9014  0DEB  3200               	nop2
  9015                           
  9016                           ;APDS9960.c: 646:             decodeGesture();
  9017  0DEC  3183  236E  318D   	fcall	_decodeGesture
  9018                           
  9019                           ;APDS9960.c: 647:             motion = gesture_motion_;
  9020  0DEF  0023               	movlb	3	; select bank3
  9021  0DF0  085C               	movf	(_gesture_motion_+1)^(0+384),w
  9022  0DF1  0020               	movlb	0	; select bank0
  9023  0DF2  00D4               	movwf	readGesture@motion+1
  9024  0DF3  0023               	movlb	3	; select bank3
  9025  0DF4  085B               	movf	_gesture_motion_^(0+384),w
  9026  0DF5  0020               	movlb	0	; select bank0
  9027  0DF6  00D3               	movwf	readGesture@motion
  9028                           
  9029                           ;APDS9960.c: 649:             resetGestureParameters();
  9030  0DF7  3192  22DC         	fcall	_resetGestureParameters
  9031                           
  9032                           ;APDS9960.c: 651:             return motion;
  9033  0DF9  0020               	movlb	0	; select bank0
  9034  0DFA  0854               	movf	readGesture@motion+1,w
  9035  0DFB  00D0               	movwf	?_readGesture+1
  9036  0DFC  0853               	movf	readGesture@motion,w
  9037  0DFD  00CF               	movwf	?_readGesture
  9038  0DFE  0008               	return
  9039  0DFF                     __end_of_readGesture:	
  9040                           
  9041                           	psect	text17
  9042  0871                     __ptext17:	
  9043 ;; *************** function _wireReadDataBlock *****************
  9044 ;; Defined at:
  9045 ;;		line 847 in file "APDS9960.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  reg             1    wreg     unsigned char 
  9048 ;;  val             2    6[BANK0 ] PTR unsigned char 
  9049 ;;		 -> readGesture@fifo_data2(64), readGesture@fifo_data(64), 
  9050 ;;  len             2    8[BANK0 ] unsigned int 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  reg             1   15[BANK0 ] unsigned char 
  9053 ;;  j               1   16[BANK0 ] unsigned char 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2    6[BANK0 ] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  8179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
  9063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
  9064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8181 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
=======
  9065 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8182 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
=======
  9066 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8183 ;;Total ram usage:       11 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    7
  8186 ;; This function calls:
  8187 ;;		_I2C_ReStart
  8188 ;;		_I2C_Read_Byte
  8189 ;;		_I2C_Send_NACK
  8190 ;;		_I2C_Start
  8191 ;;		_I2C_Stop
  8192 ;;		_I2C_Write_Byte
  8193 ;; This function is called by:
  8194 ;;		_readGesture
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           
  8199                           ;psect for function _wireReadDataBlock
  8200  07B3                     _wireReadDataBlock:	
  8201                           
  8202                           ;incstack = 0
  8203                           ; Regs used in _wireReadDataBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8204                           ;wireReadDataBlock@reg stored from wreg
  8205  07B3  0020               	movlb	0	; select bank0
  8206  07B4  00AF               	movwf	wireReadDataBlock@reg
  8207                           
  8208                           ;APDS9960.c: 851:     I2C_Start();
  8209  07B5  3188  20A7  3187   	fcall	_I2C_Start
  8210                           
  8211                           ;APDS9960.c: 852:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  8212  07B8  3072               	movlw	114
  8213  07B9  318A  2289  3187   	fcall	_I2C_Write_Byte
  8214                           
  8215                           ;APDS9960.c: 854:     I2C_Write_Byte(reg);
  8216  07BC  0020               	movlb	0	; select bank0
  8217  07BD  082F               	movf	wireReadDataBlock@reg,w
  8218  07BE  318A  2289  3187   	fcall	_I2C_Write_Byte
  8219                           
  8220                           ;APDS9960.c: 856:     for(j= 0; j < len ; j++)
  8221  07C1  0020               	movlb	0	; select bank0
  8222  07C2  01B0               	clrf	wireReadDataBlock@j
  8223  07C3                     l5978:	
  8224  07C3  0830               	movf	wireReadDataBlock@j,w
  8225  07C4  00AA               	movwf	??_wireReadDataBlock
  8226  07C5  01AB               	clrf	??_wireReadDataBlock+1
  8227  07C6  0829               	movf	wireReadDataBlock@len+1,w
  8228  07C7  022B               	subwf	??_wireReadDataBlock+1,w
  8229  07C8  1D03               	skipz
  8230  07C9  2FCC               	goto	u4735
  8231  07CA  0828               	movf	wireReadDataBlock@len,w
  8232  07CB  022A               	subwf	??_wireReadDataBlock,w
  8233  07CC                     u4735:	
  8234  07CC  1803               	btfsc	3,0
  8235  07CD  2FF2               	goto	l5980
  8236                           
  8237                           ;APDS9960.c: 857:     {;APDS9960.c: 859:       I2C_ReStart();
  8238  07CE  3188  2098  3187   	fcall	_I2C_ReStart
  8239                           
  8240                           ;APDS9960.c: 860:       I2C_Write_Byte((0x39 << 1) | 0x01);
  8241  07D1  3073               	movlw	115
  8242  07D2  318A  2289  3187   	fcall	_I2C_Write_Byte
  8243                           
  8244                           ;APDS9960.c: 861:       val[j]=I2C_Read_Byte();
  8245  07D5  3189  216D  3187   	fcall	_I2C_Read_Byte
  8246  07D8  0020               	movlb	0	; select bank0
  8247  07D9  00AA               	movwf	??_wireReadDataBlock
  8248  07DA  0830               	movf	wireReadDataBlock@j,w
  8249  07DB  00AB               	movwf	??_wireReadDataBlock+1
  8250  07DC  01AC               	clrf	??_wireReadDataBlock+2
  8251  07DD  082B               	movf	??_wireReadDataBlock+1,w
  8252  07DE  0726               	addwf	wireReadDataBlock@val,w
  8253  07DF  00AD               	movwf	??_wireReadDataBlock+3
  8254  07E0  082C               	movf	??_wireReadDataBlock+2,w
  8255  07E1  3D27               	addwfc	wireReadDataBlock@val+1,w
  8256  07E2  00AE               	movwf	??_wireReadDataBlock+4
  8257  07E3  082D               	movf	??_wireReadDataBlock+3,w
  8258  07E4  0086               	movwf	6
  8259  07E5  082E               	movf	??_wireReadDataBlock+4,w
  8260  07E6  0087               	movwf	7
  8261  07E7  082A               	movf	??_wireReadDataBlock,w
  8262  07E8  0081               	movwf	1
  8263                           
  8264                           ;APDS9960.c: 862:       I2C_Send_NACK();
  8265  07E9  3188  20A1  3187   	fcall	_I2C_Send_NACK
  8266                           
  8267                           ;APDS9960.c: 864:     }
  8268  07EC  3001               	movlw	1
  8269  07ED  0020               	movlb	0	; select bank0
  8270  07EE  00AA               	movwf	??_wireReadDataBlock
  8271  07EF  082A               	movf	??_wireReadDataBlock,w
  8272  07F0  07B0               	addwf	wireReadDataBlock@j,f
  8273  07F1  2FC3               	goto	l5978
  8274  07F2                     l5980:	
  8275                           
  8276                           ;APDS9960.c: 866:     I2C_Stop();
  8277  07F2  3187  27FD         	fcall	_I2C_Stop
  8278                           
  8279                           ;APDS9960.c: 867:     return (int)j;
  8280  07F4  0020               	movlb	0	; select bank0
  8281  07F5  0830               	movf	wireReadDataBlock@j,w
  8282  07F6  00AA               	movwf	??_wireReadDataBlock
  8283  07F7  01AB               	clrf	??_wireReadDataBlock+1
  8284  07F8  082A               	movf	??_wireReadDataBlock,w
  8285  07F9  00A6               	movwf	?_wireReadDataBlock
  8286  07FA  082B               	movf	??_wireReadDataBlock+1,w
  8287  07FB  00A7               	movwf	?_wireReadDataBlock+1
  8288  07FC  0008               	return
  8289  07FD                     __end_of_wireReadDataBlock:	
  8290                           
  8291                           	psect	text18
  8292  006B                     __ptext18:	
  8293 ;; *************** function _processGestureData *****************
  8294 ;; Defined at:
  8295 ;;		line 657 in file "APDS9960.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  i               2   45[BANK0 ] int 
  8300 ;;  lr_delta        2   43[BANK0 ] int 
  8301 ;;  ud_delta        2   41[BANK0 ] int 
  8302 ;;  lr_ratio_las    2   23[BANK0 ] int 
  8303 ;;  ud_ratio_las    2   21[BANK0 ] int 
  8304 ;;  lr_ratio_fir    2   19[BANK0 ] int 
  8305 ;;  ud_ratio_fir    2   17[BANK0 ] int 
  8306 ;;  r_first         1   40[BANK0 ] unsigned char 
  8307 ;;  l_first         1   39[BANK0 ] unsigned char 
  8308 ;;  d_first         1   38[BANK0 ] unsigned char 
  8309 ;;  u_first         1   37[BANK0 ] unsigned char 
  8310 ;;  r_last          1   36[BANK0 ] unsigned char 
  8311 ;;  l_last          1   35[BANK0 ] unsigned char 
  8312 ;;  d_last          1   34[BANK0 ] unsigned char 
  8313 ;;  u_last          1   33[BANK0 ] unsigned char 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      _Bool 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  9067 ;;Total ram usage:       11 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    7
  9070 ;; This function calls:
  9071 ;;		_I2C_ReStart
  9072 ;;		_I2C_Read_Byte
  9073 ;;		_I2C_Send_NACK
  9074 ;;		_I2C_Start
  9075 ;;		_I2C_Stop
  9076 ;;		_I2C_Write_Byte
  9077 ;; This function is called by:
  9078 ;;		_readGesture
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _wireReadDataBlock
  9084  0871                     _wireReadDataBlock:	
  9085                           
  9086                           ;incstack = 0
  9087                           ; Regs used in _wireReadDataBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9088                           ;wireReadDataBlock@reg stored from wreg
  9089  0871  0020               	movlb	0	; select bank0
  9090  0872  00AF               	movwf	wireReadDataBlock@reg
  9091                           
  9092                           ;APDS9960.c: 851:     I2C_Start();
  9093  0873  3191  211E  3188   	fcall	_I2C_Start
  9094                           
  9095                           ;APDS9960.c: 852:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  9096  0876  3072               	movlw	114
  9097  0877  3193  23A0  3188   	fcall	_I2C_Write_Byte
  9098                           
  9099                           ;APDS9960.c: 854:     I2C_Write_Byte(reg);
  9100  087A  0020               	movlb	0	; select bank0
  9101  087B  082F               	movf	wireReadDataBlock@reg,w
  9102  087C  3193  23A0  3188   	fcall	_I2C_Write_Byte
  9103                           
  9104                           ;APDS9960.c: 856:     for(j= 0; j < len ; j++)
  9105  087F  0020               	movlb	0	; select bank0
  9106  0880  01B0               	clrf	wireReadDataBlock@j
  9107  0881                     l7239:	
  9108  0881  0830               	movf	wireReadDataBlock@j,w
  9109  0882  00AA               	movwf	??_wireReadDataBlock
  9110  0883  01AB               	clrf	??_wireReadDataBlock+1
  9111  0884  0829               	movf	wireReadDataBlock@len+1,w
  9112  0885  022B               	subwf	??_wireReadDataBlock+1,w
  9113  0886  1D03               	skipz
  9114  0887  288A               	goto	u6695
  9115  0888  0828               	movf	wireReadDataBlock@len,w
  9116  0889  022A               	subwf	??_wireReadDataBlock,w
  9117  088A                     u6695:	
  9118  088A  1803               	btfsc	3,0
  9119  088B  28B0               	goto	l7241
  9120                           
  9121                           ;APDS9960.c: 857:     {;APDS9960.c: 859:       I2C_ReStart();
  9122  088C  3191  210F  3188   	fcall	_I2C_ReStart
  9123                           
  9124                           ;APDS9960.c: 860:       I2C_Write_Byte((0x39 << 1) | 0x01);
  9125  088F  3073               	movlw	115
  9126  0890  3193  23A0  3188   	fcall	_I2C_Write_Byte
  9127                           
  9128                           ;APDS9960.c: 861:       val[j]=I2C_Read_Byte();
  9129  0893  3192  2217  3188   	fcall	_I2C_Read_Byte
  9130  0896  0020               	movlb	0	; select bank0
  9131  0897  00AA               	movwf	??_wireReadDataBlock
  9132  0898  0830               	movf	wireReadDataBlock@j,w
  9133  0899  00AB               	movwf	??_wireReadDataBlock+1
  9134  089A  01AC               	clrf	??_wireReadDataBlock+2
  9135  089B  082B               	movf	??_wireReadDataBlock+1,w
  9136  089C  0726               	addwf	wireReadDataBlock@val,w
  9137  089D  00AD               	movwf	??_wireReadDataBlock+3
  9138  089E  082C               	movf	??_wireReadDataBlock+2,w
  9139  089F  3D27               	addwfc	wireReadDataBlock@val+1,w
  9140  08A0  00AE               	movwf	??_wireReadDataBlock+4
  9141  08A1  082D               	movf	??_wireReadDataBlock+3,w
  9142  08A2  0086               	movwf	6
  9143  08A3  082E               	movf	??_wireReadDataBlock+4,w
  9144  08A4  0087               	movwf	7
  9145  08A5  082A               	movf	??_wireReadDataBlock,w
  9146  08A6  0081               	movwf	1
  9147                           
  9148                           ;APDS9960.c: 862:       I2C_Send_NACK();
  9149  08A7  3191  2118  3188   	fcall	_I2C_Send_NACK
  9150                           
  9151                           ;APDS9960.c: 864:     }
  9152  08AA  3001               	movlw	1
  9153  08AB  0020               	movlb	0	; select bank0
  9154  08AC  00AA               	movwf	??_wireReadDataBlock
  9155  08AD  082A               	movf	??_wireReadDataBlock,w
  9156  08AE  07B0               	addwf	wireReadDataBlock@j,f
  9157  08AF  2881               	goto	l7239
  9158  08B0                     l7241:	
  9159                           
  9160                           ;APDS9960.c: 866:     I2C_Stop();
  9161  08B0  3191  2124         	fcall	_I2C_Stop
  9162                           
  9163                           ;APDS9960.c: 867:     return (int)j;
  9164  08B2  0020               	movlb	0	; select bank0
  9165  08B3  0830               	movf	wireReadDataBlock@j,w
  9166  08B4  00AA               	movwf	??_wireReadDataBlock
  9167  08B5  01AB               	clrf	??_wireReadDataBlock+1
  9168  08B6  082A               	movf	??_wireReadDataBlock,w
  9169  08B7  00A6               	movwf	?_wireReadDataBlock
  9170  08B8  082B               	movf	??_wireReadDataBlock+1,w
  9171  08B9  00A7               	movwf	?_wireReadDataBlock+1
  9172  08BA  0008               	return
  9173  08BB                     __end_of_wireReadDataBlock:	
  9174                           
  9175                           	psect	text18
  9176  0094                     __ptext18:	
  9177 ;; *************** function _processGestureData *****************
  9178 ;; Defined at:
  9179 ;;		line 657 in file "APDS9960.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  i               2   45[BANK0 ] int 
  9184 ;;  lr_delta        2   43[BANK0 ] int 
  9185 ;;  ud_delta        2   41[BANK0 ] int 
  9186 ;;  lr_ratio_las    2   23[BANK0 ] int 
  9187 ;;  ud_ratio_las    2   21[BANK0 ] int 
  9188 ;;  lr_ratio_fir    2   19[BANK0 ] int 
  9189 ;;  ud_ratio_fir    2   17[BANK0 ] int 
  9190 ;;  r_first         1   40[BANK0 ] unsigned char 
  9191 ;;  l_first         1   39[BANK0 ] unsigned char 
  9192 ;;  d_first         1   38[BANK0 ] unsigned char 
  9193 ;;  u_first         1   37[BANK0 ] unsigned char 
  9194 ;;  r_last          1   36[BANK0 ] unsigned char 
  9195 ;;  l_last          1   35[BANK0 ] unsigned char 
  9196 ;;  d_last          1   34[BANK0 ] unsigned char 
  9197 ;;  u_last          1   33[BANK0 ] unsigned char 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      _Bool 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8324 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
=======
  9208 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
  9209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8326 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
=======
  9210 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
  8327 ;;Total ram usage:       32 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    6
  8330 ;; This function calls:
  8331 ;;		___awdiv
  8332 ;;		___wmul
  8333 ;; This function is called by:
  8334 ;;		_readGesture
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _processGestureData
  8340  006B                     _processGestureData:	
  8341                           
  8342                           ;APDS9960.c: 659:     uint8_t u_first = 0;
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in _processGestureData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8346  006B  0020               	movlb	0	; select bank0
  8347  006C  01C5               	clrf	processGestureData@u_first
  8348                           
  8349                           ;APDS9960.c: 660:     uint8_t d_first = 0;
  8350  006D  01C6               	clrf	processGestureData@d_first
  8351                           
  8352                           ;APDS9960.c: 661:     uint8_t l_first = 0;
  8353  006E  01C7               	clrf	processGestureData@l_first
  8354                           
  8355                           ;APDS9960.c: 662:     uint8_t r_first = 0;
  8356  006F  01C8               	clrf	processGestureData@r_first
  8357                           
  8358                           ;APDS9960.c: 663:     uint8_t u_last = 0;
  8359  0070  01C1               	clrf	processGestureData@u_last
  8360                           
  8361                           ;APDS9960.c: 664:     uint8_t d_last = 0;
  8362  0071  01C2               	clrf	processGestureData@d_last
  8363                           
  8364                           ;APDS9960.c: 665:     uint8_t l_last = 0;
  8365  0072  01C3               	clrf	processGestureData@l_last
  8366                           
  8367                           ;APDS9960.c: 666:     uint8_t r_last = 0;
  8368  0073  01C4               	clrf	processGestureData@r_last
  8369                           
  8370                           ;APDS9960.c: 667:     int ud_ratio_first;;APDS9960.c: 668:     int lr_ratio_first;;APDS9
=======
  9211 ;;Total ram usage:       32 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    6
  9214 ;; This function calls:
  9215 ;;		___awdiv
  9216 ;;		___wmul
  9217 ;; This function is called by:
  9218 ;;		_readGesture
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _processGestureData
  9224  0094                     _processGestureData:	
  9225                           
  9226                           ;APDS9960.c: 659:     uint8_t u_first = 0;
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _processGestureData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9230  0094  0020               	movlb	0	; select bank0
  9231  0095  01C5               	clrf	processGestureData@u_first
  9232                           
  9233                           ;APDS9960.c: 660:     uint8_t d_first = 0;
  9234  0096  01C6               	clrf	processGestureData@d_first
  9235                           
  9236                           ;APDS9960.c: 661:     uint8_t l_first = 0;
  9237  0097  01C7               	clrf	processGestureData@l_first
  9238                           
  9239                           ;APDS9960.c: 662:     uint8_t r_first = 0;
  9240  0098  01C8               	clrf	processGestureData@r_first
  9241                           
  9242                           ;APDS9960.c: 663:     uint8_t u_last = 0;
  9243  0099  01C1               	clrf	processGestureData@u_last
  9244                           
  9245                           ;APDS9960.c: 664:     uint8_t d_last = 0;
  9246  009A  01C2               	clrf	processGestureData@d_last
  9247                           
  9248                           ;APDS9960.c: 665:     uint8_t l_last = 0;
  9249  009B  01C3               	clrf	processGestureData@l_last
  9250                           
  9251                           ;APDS9960.c: 666:     uint8_t r_last = 0;
  9252  009C  01C4               	clrf	processGestureData@r_last
  9253                           
  9254                           ;APDS9960.c: 667:     int ud_ratio_first;;APDS9960.c: 668:     int lr_ratio_first;;APDS9
>>>>>>> b288aef trying to integrate UART
      +                          960.c: 669:     int ud_ratio_last;;APDS9960.c: 670:     int lr_ratio_last;;APDS9960.c: 6
      +                          71:     int ud_delta;;APDS9960.c: 672:     int lr_delta;;APDS9960.c: 673:     int i;;APD
      +                          S9960.c: 676:     if( gesture_data_.total_gestures <= 4 ) {
<<<<<<< Upstream, based on origin/master
  8371  0074  3005               	movlw	5
  8372  0075  0024               	movlb	4	; select bank4
  8373  0076  0261               	subwf	(_gesture_data_^(0+512)+65),w
  8374  0077  1803               	skipnc
  8375  0078  287B               	goto	l5994
  8376  0079                     l5990:	
  8377                           
  8378                           ;APDS9960.c: 677:         return 0;
  8379  0079  3000               	movlw	0
  8380  007A  0008               	return
  8381  007B                     l5994:	
  8382                           
  8383                           ;APDS9960.c: 681:     if( (gesture_data_.total_gestures <= 32) && (gesture_data_.total_g
=======
  9255  009D  3005               	movlw	5
  9256  009E  0024               	movlb	4	; select bank4
  9257  009F  0261               	subwf	(_gesture_data_^(0+512)+65),w
  9258  00A0  1803               	skipnc
  9259  00A1  28A4               	goto	l7255
  9260  00A2                     l7251:	
  9261                           
  9262                           ;APDS9960.c: 677:         return 0;
  9263  00A2  3000               	movlw	0
  9264  00A3  0008               	return
  9265  00A4                     l7255:	
  9266                           
  9267                           ;APDS9960.c: 681:     if( (gesture_data_.total_gestures <= 32) && (gesture_data_.total_g
>>>>>>> b288aef trying to integrate UART
      +                          estures > 0) ) {
<<<<<<< Upstream, based on origin/master
  8384  007B  3021               	movlw	33
  8385  007C  0261               	subwf	(_gesture_data_^(0+512)+65),w
  8386  007D  1803               	skipnc
  8387  007E  2945               	goto	l6044
  8388  007F  0861               	movf	(_gesture_data_^(0+512)+65),w
  8389  0080  1903               	btfsc	3,2
  8390  0081  2945               	goto	l6044
  8391                           
  8392                           ;APDS9960.c: 682: ;APDS9960.c: 685:         for( i = 0; i < gesture_data_.total_gestures
=======
  9268  00A4  3021               	movlw	33
  9269  00A5  0261               	subwf	(_gesture_data_^(0+512)+65),w
  9270  00A6  1803               	skipnc
  9271  00A7  296E               	goto	l7305
  9272  00A8  0861               	movf	(_gesture_data_^(0+512)+65),w
  9273  00A9  1903               	btfsc	3,2
  9274  00AA  296E               	goto	l7305
  9275                           
  9276                           ;APDS9960.c: 682: ;APDS9960.c: 685:         for( i = 0; i < gesture_data_.total_gestures
>>>>>>> b288aef trying to integrate UART
      +                          ; i++ ) {
<<<<<<< Upstream, based on origin/master
  8393  0082  0020               	movlb	0	; select bank0
  8394  0083  01CD               	clrf	processGestureData@i
  8395  0084  01CE               	clrf	processGestureData@i+1
  8396  0085  288A               	goto	l1063
  8397  0086                     l6010:	
  8398                           ;APDS9960.c: 695:                 break;
  8399                           
  8400                           
  8401                           ;APDS9960.c: 697:         }
  8402  0086  3001               	movlw	1
  8403  0087  07CD               	addwf	processGestureData@i,f
  8404  0088  3000               	movlw	0
  8405  0089  3DCE               	addwfc	processGestureData@i+1,f
  8406  008A                     l1063:	
  8407  008A  084E               	movf	processGestureData@i+1,w
  8408  008B  3A80               	xorlw	128
  8409  008C  00AF               	movwf	??_processGestureData
  8410  008D  3080               	movlw	128
  8411  008E  022F               	subwf	??_processGestureData,w
  8412  008F  1D03               	skipz
  8413  0090  2895               	goto	u4815
  8414  0091  0024               	movlb	4	; select bank4
  8415  0092  0861               	movf	(_gesture_data_^(0+512)+65),w
  8416  0093  0020               	movlb	0	; select bank0
  8417  0094  024D               	subwf	processGestureData@i,w
  8418  0095                     u4815:	
  8419  0095  1803               	btfsc	3,0
  8420  0096  28E0               	goto	l6012
  8421                           
  8422                           ;APDS9960.c: 686:             if( (gesture_data_.u_data[i] > 10) &&
  8423  0097  0020               	movlb	0	; select bank0
  8424  0098  084D               	movf	processGestureData@i,w
  8425  0099  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8426  009A  0086               	movwf	6
  8427  009B  3002               	movlw	2	; select bank4/5
  8428  009C  0087               	movwf	7
  8429  009D  300B               	movlw	11
  8430  009E  0201               	subwf	1,w
  8431  009F  1C03               	skipc
  8432  00A0  2886               	goto	l6010
  8433  00A1  084D               	movf	processGestureData@i,w
  8434  00A2  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8435  00A3  0086               	movwf	6
  8436  00A4  3002               	movlw	2	; select bank4/5
  8437  00A5  0087               	movwf	7
  8438  00A6  300B               	movlw	11
  8439  00A7  0201               	subwf	1,w
  8440  00A8  1C03               	skipc
  8441  00A9  2886               	goto	l6010
  8442  00AA  084D               	movf	processGestureData@i,w
  8443  00AB  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8444  00AC  0086               	movwf	6
  8445  00AD  3002               	movlw	2	; select bank4/5
  8446  00AE  0087               	movwf	7
  8447  00AF  300B               	movlw	11
  8448  00B0  0201               	subwf	1,w
  8449  00B1  1C03               	skipc
  8450  00B2  2886               	goto	l6010
  8451  00B3  084D               	movf	processGestureData@i,w
  8452  00B4  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8453  00B5  0086               	movwf	6
  8454  00B6  3002               	movlw	2	; select bank4/5
  8455  00B7  0087               	movwf	7
  8456  00B8  300B               	movlw	11
  8457  00B9  0201               	subwf	1,w
  8458  00BA  1C03               	skipc
  8459  00BB  2886               	goto	l6010
  8460                           
  8461                           ;APDS9960.c: 689:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 691:   
      +                                        u_first = gesture_data_.u_data[i];
  8462  00BC  084D               	movf	processGestureData@i,w
  8463  00BD  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8464  00BE  0086               	movwf	6
  8465  00BF  3002               	movlw	2	; select bank4/5
  8466  00C0  0087               	movwf	7
  8467  00C1  0801               	movf	1,w
  8468  00C2  00AF               	movwf	??_processGestureData
  8469  00C3  082F               	movf	??_processGestureData,w
  8470  00C4  00C5               	movwf	processGestureData@u_first
  8471                           
  8472                           ;APDS9960.c: 692:                 d_first = gesture_data_.d_data[i];
  8473  00C5  084D               	movf	processGestureData@i,w
  8474  00C6  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8475  00C7  0086               	movwf	6
  8476  00C8  3002               	movlw	2	; select bank4/5
  8477  00C9  0087               	movwf	7
  8478  00CA  0801               	movf	1,w
  8479  00CB  00AF               	movwf	??_processGestureData
  8480  00CC  082F               	movf	??_processGestureData,w
  8481  00CD  00C6               	movwf	processGestureData@d_first
  8482                           
  8483                           ;APDS9960.c: 693:                 l_first = gesture_data_.l_data[i];
  8484  00CE  084D               	movf	processGestureData@i,w
  8485  00CF  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8486  00D0  0086               	movwf	6
  8487  00D1  3002               	movlw	2	; select bank4/5
  8488  00D2  0087               	movwf	7
  8489  00D3  0801               	movf	1,w
  8490  00D4  00AF               	movwf	??_processGestureData
  8491  00D5  082F               	movf	??_processGestureData,w
  8492  00D6  00C7               	movwf	processGestureData@l_first
  8493                           
  8494                           ;APDS9960.c: 694:                 r_first = gesture_data_.r_data[i];
  8495  00D7  084D               	movf	processGestureData@i,w
  8496  00D8  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8497  00D9  0086               	movwf	6
  8498  00DA  3002               	movlw	2	; select bank4/5
  8499  00DB  0087               	movwf	7
  8500  00DC  0801               	movf	1,w
  8501  00DD  00AF               	movwf	??_processGestureData
  8502  00DE  082F               	movf	??_processGestureData,w
  8503  00DF  00C8               	movwf	processGestureData@r_first
  8504  00E0                     l6012:	
  8505                           
  8506                           ;APDS9960.c: 700:         if( (u_first == 0) || (d_first == 0) || (l_first == 0) || (r_f
      +                          irst == 0) ) {
  8507  00E0  0020               	movlb	0	; select bank0
  8508  00E1  0845               	movf	processGestureData@u_first,w
  8509  00E2  1903               	btfsc	3,2
  8510  00E3  2879               	goto	l5990
  8511  00E4  0846               	movf	processGestureData@d_first,w
  8512  00E5  1903               	btfsc	3,2
  8513  00E6  2879               	goto	l5990
  8514  00E7  0847               	movf	processGestureData@l_first,w
  8515  00E8  1903               	btfsc	3,2
  8516  00E9  2879               	goto	l5990
  8517  00EA  0848               	movf	processGestureData@r_first,w
  8518  00EB  1903               	btfsc	3,2
  8519  00EC  2879               	goto	l5990
  8520                           
  8521                           ;APDS9960.c: 706:         for( i = gesture_data_.total_gestures - 1; i >= 0; i-- ) {
  8522  00ED  0024               	movlb	4	; select bank4
  8523  00EE  0861               	movf	(_gesture_data_^(0+512)+65),w
  8524  00EF  3EFF               	addlw	255
  8525  00F0  0020               	movlb	0	; select bank0
  8526  00F1  00CD               	movwf	processGestureData@i
  8527  00F2  30FF               	movlw	255
  8528  00F3  1803               	skipnc
  8529  00F4  3000               	movlw	0
  8530  00F5  00CE               	movwf	processGestureData@i+1
  8531                           
  8532                           ;APDS9960.c: 717:                 break;
  8533  00F6  28FB               	goto	l6026
  8534  00F7                     l6040:	
  8535                           
  8536                           ;APDS9960.c: 719:         }
  8537  00F7  30FF               	movlw	255
  8538  00F8  07CD               	addwf	processGestureData@i,f
  8539  00F9  30FF               	movlw	255
  8540  00FA  3DCE               	addwfc	processGestureData@i+1,f
  8541  00FB                     l6026:	
  8542  00FB  1BCE               	btfsc	processGestureData@i+1,7
  8543  00FC  2945               	goto	l6044
  8544                           
  8545                           ;APDS9960.c: 708:             if( (gesture_data_.u_data[i] > 10) &&
  8546  00FD  084D               	movf	processGestureData@i,w
  8547  00FE  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8548  00FF  0086               	movwf	6
  8549  0100  3002               	movlw	2	; select bank4/5
  8550  0101  0087               	movwf	7
  8551  0102  300B               	movlw	11
  8552  0103  0201               	subwf	1,w
  8553  0104  1C03               	skipc
  8554  0105  28F7               	goto	l6040
  8555  0106  084D               	movf	processGestureData@i,w
  8556  0107  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8557  0108  0086               	movwf	6
  8558  0109  3002               	movlw	2	; select bank4/5
  8559  010A  0087               	movwf	7
  8560  010B  300B               	movlw	11
  8561  010C  0201               	subwf	1,w
  8562  010D  1C03               	skipc
  8563  010E  28F7               	goto	l6040
  8564  010F  084D               	movf	processGestureData@i,w
  8565  0110  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8566  0111  0086               	movwf	6
  8567  0112  3002               	movlw	2	; select bank4/5
  8568  0113  0087               	movwf	7
  8569  0114  300B               	movlw	11
  8570  0115  0201               	subwf	1,w
  8571  0116  1C03               	skipc
  8572  0117  28F7               	goto	l6040
  8573  0118  084D               	movf	processGestureData@i,w
  8574  0119  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8575  011A  0086               	movwf	6
  8576  011B  3002               	movlw	2	; select bank4/5
  8577  011C  0087               	movwf	7
  8578  011D  300B               	movlw	11
  8579  011E  0201               	subwf	1,w
  8580  011F  1C03               	skipc
  8581  0120  28F7               	goto	l6040
  8582                           
  8583                           ;APDS9960.c: 711:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 713:   
      +                                        u_last = gesture_data_.u_data[i];
  8584  0121  084D               	movf	processGestureData@i,w
  8585  0122  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  8586  0123  0086               	movwf	6
  8587  0124  3002               	movlw	2	; select bank4/5
  8588  0125  0087               	movwf	7
  8589  0126  0801               	movf	1,w
  8590  0127  00AF               	movwf	??_processGestureData
  8591  0128  082F               	movf	??_processGestureData,w
  8592  0129  00C1               	movwf	processGestureData@u_last
  8593                           
  8594                           ;APDS9960.c: 714:                 d_last = gesture_data_.d_data[i];
  8595  012A  084D               	movf	processGestureData@i,w
  8596  012B  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  8597  012C  0086               	movwf	6
  8598  012D  3002               	movlw	2	; select bank4/5
  8599  012E  0087               	movwf	7
  8600  012F  0801               	movf	1,w
  8601  0130  00AF               	movwf	??_processGestureData
  8602  0131  082F               	movf	??_processGestureData,w
  8603  0132  00C2               	movwf	processGestureData@d_last
  8604                           
  8605                           ;APDS9960.c: 715:                 l_last = gesture_data_.l_data[i];
  8606  0133  084D               	movf	processGestureData@i,w
  8607  0134  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  8608  0135  0086               	movwf	6
  8609  0136  3002               	movlw	2	; select bank4/5
  8610  0137  0087               	movwf	7
  8611  0138  0801               	movf	1,w
  8612  0139  00AF               	movwf	??_processGestureData
  8613  013A  082F               	movf	??_processGestureData,w
  8614  013B  00C3               	movwf	processGestureData@l_last
  8615                           
  8616                           ;APDS9960.c: 716:                 r_last = gesture_data_.r_data[i];
  8617  013C  084D               	movf	processGestureData@i,w
  8618  013D  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  8619  013E  0086               	movwf	6
  8620  013F  3002               	movlw	2	; select bank4/5
  8621  0140  0087               	movwf	7
  8622  0141  0801               	movf	1,w
  8623  0142  00AF               	movwf	??_processGestureData
  8624  0143  082F               	movf	??_processGestureData,w
  8625  0144  00C4               	movwf	processGestureData@r_last
  8626  0145                     l6044:	
  8627                           
  8628                           ;APDS9960.c: 723:     ud_ratio_first = ((u_first - d_first) * 100) / (u_first + d_first)
      +                          ;
  8629  0145  0020               	movlb	0	; select bank0
  8630  0146  0845               	movf	processGestureData@u_first,w
  8631  0147  0746               	addwf	processGestureData@d_first,w
  8632  0148  00A6               	movwf	___awdiv@divisor
  8633  0149  01A7               	clrf	___awdiv@divisor+1
  8634  014A  0DA7               	rlf	___awdiv@divisor+1,f
  8635  014B  0846               	movf	processGestureData@d_first,w
  8636  014C  0245               	subwf	processGestureData@u_first,w
  8637  014D  00A0               	movwf	___wmul@multiplier
  8638  014E  01A1               	clrf	___wmul@multiplier+1
  8639  014F  1C03               	skipc
  8640  0150  03A1               	decf	___wmul@multiplier+1,f
  8641  0151  3064               	movlw	100
  8642  0152  00A2               	movwf	___wmul@multiplicand
  8643  0153  3000               	movlw	0
  8644  0154  00A3               	movwf	___wmul@multiplicand+1
  8645  0155  318A  22A5  3180   	fcall	___wmul
  8646  0158  0020               	movlb	0	; select bank0
  8647  0159  0821               	movf	?___wmul+1,w
  8648  015A  00A9               	movwf	___awdiv@dividend+1
  8649  015B  0820               	movf	?___wmul,w
  8650  015C  00A8               	movwf	___awdiv@dividend
  8651  015D  318E  26F0  3180   	fcall	___awdiv
  8652  0160  0020               	movlb	0	; select bank0
  8653  0161  0827               	movf	?___awdiv+1,w
  8654  0162  00B2               	movwf	processGestureData@ud_ratio_first+1
  8655  0163  0826               	movf	?___awdiv,w
  8656  0164  00B1               	movwf	processGestureData@ud_ratio_first
  8657                           
  8658                           ;APDS9960.c: 724:     lr_ratio_first = ((l_first - r_first) * 100) / (l_first + r_first)
      +                          ;
  8659  0165  0847               	movf	processGestureData@l_first,w
  8660  0166  0748               	addwf	processGestureData@r_first,w
  8661  0167  00A6               	movwf	___awdiv@divisor
  8662  0168  01A7               	clrf	___awdiv@divisor+1
  8663  0169  0DA7               	rlf	___awdiv@divisor+1,f
  8664  016A  0848               	movf	processGestureData@r_first,w
  8665  016B  0247               	subwf	processGestureData@l_first,w
  8666  016C  00A0               	movwf	___wmul@multiplier
  8667  016D  01A1               	clrf	___wmul@multiplier+1
  8668  016E  1C03               	skipc
  8669  016F  03A1               	decf	___wmul@multiplier+1,f
  8670  0170  3064               	movlw	100
  8671  0171  00A2               	movwf	___wmul@multiplicand
  8672  0172  3000               	movlw	0
  8673  0173  00A3               	movwf	___wmul@multiplicand+1
  8674  0174  318A  22A5  3180   	fcall	___wmul
  8675  0177  0020               	movlb	0	; select bank0
  8676  0178  0821               	movf	?___wmul+1,w
  8677  0179  00A9               	movwf	___awdiv@dividend+1
  8678  017A  0820               	movf	?___wmul,w
  8679  017B  00A8               	movwf	___awdiv@dividend
  8680  017C  318E  26F0  3180   	fcall	___awdiv
  8681  017F  0020               	movlb	0	; select bank0
  8682  0180  0827               	movf	?___awdiv+1,w
  8683  0181  00B4               	movwf	processGestureData@lr_ratio_first+1
  8684  0182  0826               	movf	?___awdiv,w
  8685  0183  00B3               	movwf	processGestureData@lr_ratio_first
  8686                           
  8687                           ;APDS9960.c: 725:     ud_ratio_last = ((u_last - d_last) * 100) / (u_last + d_last);
  8688  0184  0841               	movf	processGestureData@u_last,w
  8689  0185  0742               	addwf	processGestureData@d_last,w
  8690  0186  00A6               	movwf	___awdiv@divisor
  8691  0187  01A7               	clrf	___awdiv@divisor+1
  8692  0188  0DA7               	rlf	___awdiv@divisor+1,f
  8693  0189  0842               	movf	processGestureData@d_last,w
  8694  018A  0241               	subwf	processGestureData@u_last,w
  8695  018B  00A0               	movwf	___wmul@multiplier
  8696  018C  01A1               	clrf	___wmul@multiplier+1
  8697  018D  1C03               	skipc
  8698  018E  03A1               	decf	___wmul@multiplier+1,f
  8699  018F  3064               	movlw	100
  8700  0190  00A2               	movwf	___wmul@multiplicand
  8701  0191  3000               	movlw	0
  8702  0192  00A3               	movwf	___wmul@multiplicand+1
  8703  0193  318A  22A5  3180   	fcall	___wmul
  8704  0196  0020               	movlb	0	; select bank0
  8705  0197  0821               	movf	?___wmul+1,w
  8706  0198  00A9               	movwf	___awdiv@dividend+1
  8707  0199  0820               	movf	?___wmul,w
  8708  019A  00A8               	movwf	___awdiv@dividend
  8709  019B  318E  26F0  3180   	fcall	___awdiv
  8710  019E  0020               	movlb	0	; select bank0
  8711  019F  0827               	movf	?___awdiv+1,w
  8712  01A0  00B6               	movwf	processGestureData@ud_ratio_last+1
  8713  01A1  0826               	movf	?___awdiv,w
  8714  01A2  00B5               	movwf	processGestureData@ud_ratio_last
  8715                           
  8716                           ;APDS9960.c: 726:     lr_ratio_last = ((l_last - r_last) * 100) / (l_last + r_last);
  8717  01A3  0843               	movf	processGestureData@l_last,w
  8718  01A4  0744               	addwf	processGestureData@r_last,w
  8719  01A5  00A6               	movwf	___awdiv@divisor
  8720  01A6  01A7               	clrf	___awdiv@divisor+1
  8721  01A7  0DA7               	rlf	___awdiv@divisor+1,f
  8722  01A8  0844               	movf	processGestureData@r_last,w
  8723  01A9  0243               	subwf	processGestureData@l_last,w
  8724  01AA  00A0               	movwf	___wmul@multiplier
  8725  01AB  01A1               	clrf	___wmul@multiplier+1
  8726  01AC  1C03               	skipc
  8727  01AD  03A1               	decf	___wmul@multiplier+1,f
  8728  01AE  3064               	movlw	100
  8729  01AF  00A2               	movwf	___wmul@multiplicand
  8730  01B0  3000               	movlw	0
  8731  01B1  00A3               	movwf	___wmul@multiplicand+1
  8732  01B2  318A  22A5  3180   	fcall	___wmul
  8733  01B5  0020               	movlb	0	; select bank0
  8734  01B6  0821               	movf	?___wmul+1,w
  8735  01B7  00A9               	movwf	___awdiv@dividend+1
  8736  01B8  0820               	movf	?___wmul,w
  8737  01B9  00A8               	movwf	___awdiv@dividend
  8738  01BA  318E  26F0  3180   	fcall	___awdiv
  8739  01BD  0020               	movlb	0	; select bank0
  8740  01BE  0827               	movf	?___awdiv+1,w
  8741  01BF  00B8               	movwf	processGestureData@lr_ratio_last+1
  8742  01C0  0826               	movf	?___awdiv,w
  8743  01C1  00B7               	movwf	processGestureData@lr_ratio_last
  8744                           
  8745                           ;APDS9960.c: 729:     ud_delta = ud_ratio_last - ud_ratio_first;
  8746  01C2  0831               	movf	processGestureData@ud_ratio_first,w
  8747  01C3  0235               	subwf	processGestureData@ud_ratio_last,w
  8748  01C4  00C9               	movwf	processGestureData@ud_delta
  8749  01C5  0832               	movf	processGestureData@ud_ratio_first+1,w
  8750  01C6  3B36               	subwfb	processGestureData@ud_ratio_last+1,w
  8751  01C7  00CA               	movwf	processGestureData@ud_delta+1
  8752                           
  8753                           ;APDS9960.c: 730:     lr_delta = lr_ratio_last - lr_ratio_first;
  8754  01C8  0833               	movf	processGestureData@lr_ratio_first,w
  8755  01C9  0237               	subwf	processGestureData@lr_ratio_last,w
  8756  01CA  00CB               	movwf	processGestureData@lr_delta
  8757  01CB  0834               	movf	processGestureData@lr_ratio_first+1,w
  8758  01CC  3B38               	subwfb	processGestureData@lr_ratio_last+1,w
  8759  01CD  00CC               	movwf	processGestureData@lr_delta+1
  8760                           
  8761                           ;APDS9960.c: 733:     gesture_ud_delta_ += ud_delta;
  8762  01CE  0849               	movf	processGestureData@ud_delta,w
  8763  01CF  07E8               	addwf	_gesture_ud_delta_,f
  8764  01D0  084A               	movf	processGestureData@ud_delta+1,w
  8765  01D1  3DE9               	addwfc	_gesture_ud_delta_+1,f
  8766                           
  8767                           ;APDS9960.c: 734:     gesture_lr_delta_ += lr_delta;
  8768  01D2  084B               	movf	processGestureData@lr_delta,w
  8769  01D3  07E6               	addwf	_gesture_lr_delta_,f
  8770  01D4  084C               	movf	processGestureData@lr_delta+1,w
  8771  01D5  3DE7               	addwfc	_gesture_lr_delta_+1,f
  8772                           
  8773                           ;APDS9960.c: 737:     if( gesture_ud_delta_ >= 50 ) {
  8774  01D6  0869               	movf	_gesture_ud_delta_+1,w
  8775  01D7  3A80               	xorlw	128
  8776  01D8  00AF               	movwf	??_processGestureData
  8777  01D9  3080               	movlw	128
  8778  01DA  022F               	subwf	??_processGestureData,w
  8779  01DB  1D03               	skipz
  8780  01DC  29DF               	goto	u4915
  8781  01DD  3032               	movlw	50
  8782  01DE  0268               	subwf	_gesture_ud_delta_,w
  8783  01DF                     u4915:	
  8784  01DF  1C03               	skipc
  8785  01E0  29E6               	goto	l6058
  8786                           
  8787                           ;APDS9960.c: 738:         gesture_ud_count_ = 1;
  8788  01E1  3001               	movlw	1
  8789  01E2  0020               	movlb	0	; select bank0
  8790  01E3  00E4               	movwf	_gesture_ud_count_
  8791  01E4  3000               	movlw	0
  8792  01E5  29F6               	goto	L2
  8793  01E6                     l6058:	
  8794                           ;APDS9960.c: 739:     } else if( gesture_ud_delta_ <= -50 ) {
  8795                           
  8796  01E6  0020               	movlb	0	; select bank0
  8797  01E7  0869               	movf	_gesture_ud_delta_+1,w
  8798  01E8  3A80               	xorlw	128
  8799  01E9  00AF               	movwf	??_processGestureData
  8800  01EA  307F               	movlw	127
  8801  01EB  022F               	subwf	??_processGestureData,w
  8802  01EC  1D03               	skipz
  8803  01ED  29F0               	goto	u4925
  8804  01EE  30CF               	movlw	207
  8805  01EF  0268               	subwf	_gesture_ud_delta_,w
  8806  01F0                     u4925:	
  8807  01F0  1803               	skipnc
  8808  01F1  29F8               	goto	l6062
  8809                           
  8810                           ;APDS9960.c: 740:         gesture_ud_count_ = -1;
  8811  01F2  30FF               	movlw	255
  8812  01F3  0020               	movlb	0	; select bank0
  8813  01F4  00E4               	movwf	_gesture_ud_count_
  8814  01F5  30FF               	movlw	255
  8815  01F6                     L2:	
  8816  01F6  00E5               	movwf	_gesture_ud_count_+1
  8817                           
  8818                           ;APDS9960.c: 741:     } else {
  8819  01F7  29FB               	goto	l6064
  8820  01F8                     l6062:	
  8821                           
  8822                           ;APDS9960.c: 742:         gesture_ud_count_ = 0;
  8823  01F8  0020               	movlb	0	; select bank0
  8824  01F9  01E4               	clrf	_gesture_ud_count_
  8825  01FA  01E5               	clrf	_gesture_ud_count_+1
  8826  01FB                     l6064:	
  8827                           
  8828                           ;APDS9960.c: 746:     if( gesture_lr_delta_ >= 50 ) {
  8829  01FB  0867               	movf	_gesture_lr_delta_+1,w
  8830  01FC  3A80               	xorlw	128
  8831  01FD  00AF               	movwf	??_processGestureData
  8832  01FE  3080               	movlw	128
  8833  01FF  022F               	subwf	??_processGestureData,w
  8834  0200  1D03               	skipz
  8835  0201  2A04               	goto	u4935
  8836  0202  3032               	movlw	50
  8837  0203  0266               	subwf	_gesture_lr_delta_,w
  8838  0204                     u4935:	
  8839  0204  1C03               	skipc
  8840  0205  2A0B               	goto	l6068
  8841                           
  8842                           ;APDS9960.c: 747:         gesture_lr_count_ = 1;
  8843  0206  3001               	movlw	1
  8844  0207  0020               	movlb	0	; select bank0
  8845  0208  00E2               	movwf	_gesture_lr_count_
  8846  0209  3000               	movlw	0
  8847  020A  2A1B               	goto	L3
  8848  020B                     l6068:	
  8849                           ;APDS9960.c: 748:     } else if( gesture_lr_delta_ <= -50 ) {
  8850                           
  8851  020B  0020               	movlb	0	; select bank0
  8852  020C  0867               	movf	_gesture_lr_delta_+1,w
  8853  020D  3A80               	xorlw	128
  8854  020E  00AF               	movwf	??_processGestureData
  8855  020F  307F               	movlw	127
  8856  0210  022F               	subwf	??_processGestureData,w
  8857  0211  1D03               	skipz
  8858  0212  2A15               	goto	u4945
  8859  0213  30CF               	movlw	207
  8860  0214  0266               	subwf	_gesture_lr_delta_,w
  8861  0215                     u4945:	
  8862  0215  1803               	skipnc
  8863  0216  2A1D               	goto	l6072
  8864                           
  8865                           ;APDS9960.c: 749:         gesture_lr_count_ = -1;
  8866  0217  30FF               	movlw	255
  8867  0218  0020               	movlb	0	; select bank0
  8868  0219  00E2               	movwf	_gesture_lr_count_
  8869  021A  30FF               	movlw	255
  8870  021B                     L3:	
  8871  021B  00E3               	movwf	_gesture_lr_count_+1
  8872                           
  8873                           ;APDS9960.c: 750:     } else {
  8874  021C  2A20               	goto	l6074
  8875  021D                     l6072:	
  8876                           
  8877                           ;APDS9960.c: 751:         gesture_lr_count_ = 0;
  8878  021D  0020               	movlb	0	; select bank0
  8879  021E  01E2               	clrf	_gesture_lr_count_
  8880  021F  01E3               	clrf	_gesture_lr_count_+1
  8881  0220                     l6074:	
  8882                           
  8883                           ;APDS9960.c: 755:     if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 0) ) {
  8884  0220  0864               	movf	_gesture_ud_count_,w
  8885  0221  0465               	iorwf	_gesture_ud_count_+1,w
  8886  0222  1D03               	btfss	3,2
  8887  0223  2AC7               	goto	l6118
  8888  0224  0862               	movf	_gesture_lr_count_,w
  8889  0225  0463               	iorwf	_gesture_lr_count_+1,w
  8890  0226  1D03               	btfss	3,2
  8891  0227  2AC7               	goto	l6118
  8892                           
  8893                           ;APDS9960.c: 756:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  8894  0228  084A               	movf	processGestureData@ud_delta+1,w
  8895  0229  3A80               	xorlw	128
  8896  022A  00AF               	movwf	??_processGestureData
  8897  022B  3080               	movlw	128
  8898  022C  022F               	subwf	??_processGestureData,w
  8899  022D  1D03               	skipz
  8900  022E  2A31               	goto	u4975
  8901  022F  3001               	movlw	1
  8902  0230  0249               	subwf	processGestureData@ud_delta,w
  8903  0231                     u4975:	
  8904  0231  1803               	skipnc
  8905  0232  2A40               	goto	l6082
  8906  0233  0020               	movlb	0	; select bank0
  8907  0234  0949               	comf	processGestureData@ud_delta,w
  8908  0235  00AF               	movwf	??_processGestureData
  8909  0236  094A               	comf	processGestureData@ud_delta+1,w
  8910  0237  00B0               	movwf	??_processGestureData+1
  8911  0238  0AAF               	incf	??_processGestureData,f
  8912  0239  1903               	skipnz
  8913  023A  0AB0               	incf	??_processGestureData+1,f
  8914  023B  082F               	movf	??_processGestureData,w
  8915  023C  00B9               	movwf	_processGestureData$1535
  8916  023D  0830               	movf	??_processGestureData+1,w
  8917  023E  00BA               	movwf	_processGestureData$1535+1
  8918  023F  2A45               	goto	l1086
  8919  0240                     l6082:	
  8920  0240  0020               	movlb	0	; select bank0
  8921  0241  084A               	movf	processGestureData@ud_delta+1,w
  8922  0242  00BA               	movwf	_processGestureData$1535+1
  8923  0243  0849               	movf	processGestureData@ud_delta,w
  8924  0244  00B9               	movwf	_processGestureData$1535
  8925  0245                     l1086:	
  8926  0245  083A               	movf	_processGestureData$1535+1,w
  8927  0246  3A80               	xorlw	128
  8928  0247  00AF               	movwf	??_processGestureData
  8929  0248  3080               	movlw	128
  8930  0249  022F               	subwf	??_processGestureData,w
  8931  024A  1D03               	skipz
  8932  024B  2A4E               	goto	u4985
  8933  024C  3014               	movlw	20
  8934  024D  0239               	subwf	_processGestureData$1535,w
  8935  024E                     u4985:	
  8936  024E  1803               	skipnc
  8937  024F  2879               	goto	l5990
  8938  0250  0020               	movlb	0	; select bank0
  8939  0251  084C               	movf	processGestureData@lr_delta+1,w
  8940  0252  3A80               	xorlw	128
  8941  0253  00AF               	movwf	??_processGestureData
  8942  0254  3080               	movlw	128
  8943  0255  022F               	subwf	??_processGestureData,w
  8944  0256  1D03               	skipz
  8945  0257  2A5A               	goto	u4995
  8946  0258  3001               	movlw	1
  8947  0259  024B               	subwf	processGestureData@lr_delta,w
  8948  025A                     u4995:	
  8949  025A  1803               	skipnc
  8950  025B  2A69               	goto	l6088
  8951  025C  0020               	movlb	0	; select bank0
  8952  025D  094B               	comf	processGestureData@lr_delta,w
  8953  025E  00AF               	movwf	??_processGestureData
  8954  025F  094C               	comf	processGestureData@lr_delta+1,w
  8955  0260  00B0               	movwf	??_processGestureData+1
  8956  0261  0AAF               	incf	??_processGestureData,f
  8957  0262  1903               	skipnz
  8958  0263  0AB0               	incf	??_processGestureData+1,f
  8959  0264  082F               	movf	??_processGestureData,w
  8960  0265  00BB               	movwf	_processGestureData$1536
  8961  0266  0830               	movf	??_processGestureData+1,w
  8962  0267  00BC               	movwf	_processGestureData$1536+1
  8963  0268  2A6E               	goto	l1090
  8964  0269                     l6088:	
  8965  0269  0020               	movlb	0	; select bank0
  8966  026A  084C               	movf	processGestureData@lr_delta+1,w
  8967  026B  00BC               	movwf	_processGestureData$1536+1
  8968  026C  084B               	movf	processGestureData@lr_delta,w
  8969  026D  00BB               	movwf	_processGestureData$1536
  8970  026E                     l1090:	
  8971  026E  083C               	movf	_processGestureData$1536+1,w
  8972  026F  3A80               	xorlw	128
  8973  0270  00AF               	movwf	??_processGestureData
  8974  0271  3080               	movlw	128
  8975  0272  022F               	subwf	??_processGestureData,w
  8976  0273  1D03               	skipz
  8977  0274  2A77               	goto	u5005
  8978  0275  3014               	movlw	20
  8979  0276  023B               	subwf	_processGestureData$1536,w
  8980  0277                     u5005:	
  8981  0277  1803               	skipnc
  8982  0278  2879               	goto	l5990
  8983                           
  8984                           ;APDS9960.c: 757: ;APDS9960.c: 759:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  8985  0279  0020               	movlb	0	; select bank0
  8986  027A  0849               	movf	processGestureData@ud_delta,w
  8987  027B  044A               	iorwf	processGestureData@ud_delta+1,w
  8988  027C  1D03               	btfss	3,2
  8989  027D  2A87               	goto	l6096
  8990  027E  084B               	movf	processGestureData@lr_delta,w
  8991  027F  044C               	iorwf	processGestureData@lr_delta+1,w
  8992  0280  1D03               	btfss	3,2
  8993  0281  2A87               	goto	l6096
  8994                           
  8995                           ;APDS9960.c: 760:                 gesture_near_count_++;
  8996  0282  3001               	movlw	1
  8997  0283  07E0               	addwf	_gesture_near_count_,f
  8998  0284  3000               	movlw	0
  8999  0285  3DE1               	addwfc	_gesture_near_count_+1,f
  9000                           
  9001                           ;APDS9960.c: 761:             } else if( (ud_delta != 0) || (lr_delta != 0) ) {
  9002  0286  2A94               	goto	l1092
  9003  0287                     l6096:	
  9004  0287  0849               	movf	processGestureData@ud_delta,w
  9005  0288  044A               	iorwf	processGestureData@ud_delta+1,w
  9006  0289  1D03               	btfss	3,2
  9007  028A  2A8F               	goto	l6100
  9008  028B  084B               	movf	processGestureData@lr_delta,w
  9009  028C  044C               	iorwf	processGestureData@lr_delta+1,w
  9010  028D  1903               	btfsc	3,2
  9011  028E  2A94               	goto	l1092
  9012  028F                     l6100:	
  9013                           
  9014                           ;APDS9960.c: 762:                 gesture_far_count_++;
  9015  028F  3001               	movlw	1
  9016  0290  0021               	movlb	1	; select bank1
  9017  0291  07E2               	addwf	_gesture_far_count_^(0+128),f
  9018  0292  3000               	movlw	0
  9019  0293  3DE3               	addwfc	(_gesture_far_count_+1)^(0+128),f
  9020  0294                     l1092:	
  9021                           
  9022                           ;APDS9960.c: 765:             if( (gesture_near_count_ >= 10) && (gesture_far_count_ >= 
      +                          2) ) {
  9023  0294  0020               	movlb	0	; select bank0
  9024  0295  0861               	movf	_gesture_near_count_+1,w
  9025  0296  3A80               	xorlw	128
  9026  0297  00AF               	movwf	??_processGestureData
  9027  0298  3080               	movlw	128
  9028  0299  022F               	subwf	??_processGestureData,w
  9029  029A  1D03               	skipz
  9030  029B  2A9E               	goto	u5055
  9031  029C  300A               	movlw	10
  9032  029D  0260               	subwf	_gesture_near_count_,w
  9033  029E                     u5055:	
  9034  029E  1C03               	skipc
  9035  029F  2879               	goto	l5990
  9036  02A0  0021               	movlb	1	; select bank1
  9037  02A1  0863               	movf	(_gesture_far_count_+1)^(0+128),w
  9038  02A2  3A80               	xorlw	128
  9039  02A3  0020               	movlb	0	; select bank0
  9040  02A4  00AF               	movwf	??_processGestureData
  9041  02A5  3080               	movlw	128
  9042  02A6  022F               	subwf	??_processGestureData,w
  9043  02A7  1D03               	skipz
  9044  02A8  2AAC               	goto	u5065
  9045  02A9  3002               	movlw	2
  9046  02AA  0021               	movlb	1	; select bank1
  9047  02AB  0262               	subwf	_gesture_far_count_^(0+128),w
  9048  02AC                     u5065:	
  9049  02AC  1C03               	skipc
  9050  02AD  2879               	goto	l5990
  9051                           
  9052                           ;APDS9960.c: 766:                 if( (ud_delta == 0) && (lr_delta == 0) ) {
  9053  02AE  0020               	movlb	0	; select bank0
  9054  02AF  0849               	movf	processGestureData@ud_delta,w
  9055  02B0  044A               	iorwf	processGestureData@ud_delta+1,w
  9056  02B1  1D03               	btfss	3,2
  9057  02B2  2AB9               	goto	l6110
  9058  02B3  084B               	movf	processGestureData@lr_delta,w
  9059  02B4  044C               	iorwf	processGestureData@lr_delta+1,w
  9060  02B5  1D03               	btfss	3,2
  9061  02B6  2AB9               	goto	l6110
  9062                           
  9063                           ;APDS9960.c: 767:                     gesture_state_ = NEAR_STATE;
  9064  02B7  3001               	movlw	1
  9065  02B8  2AC2               	goto	L4
  9066  02B9                     l6110:	
  9067                           ;APDS9960.c: 768:                 } else if( (ud_delta != 0) && (lr_delta != 0) ) {
  9068                           
  9069  02B9  0849               	movf	processGestureData@ud_delta,w
  9070  02BA  044A               	iorwf	processGestureData@ud_delta+1,w
  9071  02BB  1903               	btfsc	3,2
  9072  02BC  2AC5               	goto	l1098
  9073  02BD  084B               	movf	processGestureData@lr_delta,w
  9074  02BE  044C               	iorwf	processGestureData@lr_delta+1,w
  9075  02BF  1903               	btfsc	3,2
  9076  02C0  2AC5               	goto	l1098
  9077                           
  9078                           ;APDS9960.c: 769:                     gesture_state_ = FAR_STATE;
  9079  02C1  3002               	movlw	2
  9080  02C2                     L4:	
  9081  02C2  00DE               	movwf	_gesture_state_
  9082  02C3  3000               	movlw	0
  9083  02C4  00DF               	movwf	_gesture_state_+1
  9084  02C5                     l1098:	
  9085                           
  9086                           ;APDS9960.c: 771:                 return 1;
  9087  02C5  3001               	movlw	1
  9088  02C6  0008               	return
  9089  02C7                     l6118:	
  9090                           
  9091                           ;APDS9960.c: 775:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  9092  02C7  084A               	movf	processGestureData@ud_delta+1,w
  9093  02C8  3A80               	xorlw	128
  9094  02C9  00AF               	movwf	??_processGestureData
  9095  02CA  3080               	movlw	128
  9096  02CB  022F               	subwf	??_processGestureData,w
  9097  02CC  1D03               	skipz
  9098  02CD  2AD0               	goto	u5115
  9099  02CE  3001               	movlw	1
  9100  02CF  0249               	subwf	processGestureData@ud_delta,w
  9101  02D0                     u5115:	
  9102  02D0  1803               	skipnc
  9103  02D1  2ADF               	goto	l6122
  9104  02D2  0020               	movlb	0	; select bank0
  9105  02D3  0949               	comf	processGestureData@ud_delta,w
  9106  02D4  00AF               	movwf	??_processGestureData
  9107  02D5  094A               	comf	processGestureData@ud_delta+1,w
  9108  02D6  00B0               	movwf	??_processGestureData+1
  9109  02D7  0AAF               	incf	??_processGestureData,f
  9110  02D8  1903               	skipnz
  9111  02D9  0AB0               	incf	??_processGestureData+1,f
  9112  02DA  082F               	movf	??_processGestureData,w
  9113  02DB  00BD               	movwf	_processGestureData$1537
  9114  02DC  0830               	movf	??_processGestureData+1,w
  9115  02DD  00BE               	movwf	_processGestureData$1537+1
  9116  02DE  2AE4               	goto	l1105
  9117  02DF                     l6122:	
  9118  02DF  0020               	movlb	0	; select bank0
  9119  02E0  084A               	movf	processGestureData@ud_delta+1,w
  9120  02E1  00BE               	movwf	_processGestureData$1537+1
  9121  02E2  0849               	movf	processGestureData@ud_delta,w
  9122  02E3  00BD               	movwf	_processGestureData$1537
  9123  02E4                     l1105:	
  9124  02E4  083E               	movf	_processGestureData$1537+1,w
  9125  02E5  3A80               	xorlw	128
  9126  02E6  00AF               	movwf	??_processGestureData
  9127  02E7  3080               	movlw	128
  9128  02E8  022F               	subwf	??_processGestureData,w
  9129  02E9  1D03               	skipz
  9130  02EA  2AED               	goto	u5125
  9131  02EB  3014               	movlw	20
  9132  02EC  023D               	subwf	_processGestureData$1537,w
  9133  02ED                     u5125:	
  9134  02ED  1803               	skipnc
  9135  02EE  2879               	goto	l5990
  9136  02EF  0020               	movlb	0	; select bank0
  9137  02F0  084C               	movf	processGestureData@lr_delta+1,w
  9138  02F1  3A80               	xorlw	128
  9139  02F2  00AF               	movwf	??_processGestureData
  9140  02F3  3080               	movlw	128
  9141  02F4  022F               	subwf	??_processGestureData,w
  9142  02F5  1D03               	skipz
  9143  02F6  2AF9               	goto	u5135
  9144  02F7  3001               	movlw	1
  9145  02F8  024B               	subwf	processGestureData@lr_delta,w
  9146  02F9                     u5135:	
  9147  02F9  1803               	skipnc
  9148  02FA  2B08               	goto	l6128
  9149  02FB  0020               	movlb	0	; select bank0
  9150  02FC  094B               	comf	processGestureData@lr_delta,w
  9151  02FD  00AF               	movwf	??_processGestureData
  9152  02FE  094C               	comf	processGestureData@lr_delta+1,w
  9153  02FF  00B0               	movwf	??_processGestureData+1
  9154  0300  0AAF               	incf	??_processGestureData,f
  9155  0301  1903               	skipnz
  9156  0302  0AB0               	incf	??_processGestureData+1,f
  9157  0303  082F               	movf	??_processGestureData,w
  9158  0304  00BF               	movwf	_processGestureData$1538
  9159  0305  0830               	movf	??_processGestureData+1,w
  9160  0306  00C0               	movwf	_processGestureData$1538+1
  9161  0307  2B0D               	goto	l1109
  9162  0308                     l6128:	
  9163  0308  0020               	movlb	0	; select bank0
  9164  0309  084C               	movf	processGestureData@lr_delta+1,w
  9165  030A  00C0               	movwf	_processGestureData$1538+1
  9166  030B  084B               	movf	processGestureData@lr_delta,w
  9167  030C  00BF               	movwf	_processGestureData$1538
  9168  030D                     l1109:	
  9169  030D  0840               	movf	_processGestureData$1538+1,w
  9170  030E  3A80               	xorlw	128
  9171  030F  00AF               	movwf	??_processGestureData
  9172  0310  3080               	movlw	128
  9173  0311  022F               	subwf	??_processGestureData,w
  9174  0312  1D03               	skipz
  9175  0313  2B16               	goto	u5145
  9176  0314  3014               	movlw	20
  9177  0315  023F               	subwf	_processGestureData$1538,w
  9178  0316                     u5145:	
  9179  0316  1803               	skipnc
  9180  0317  2879               	goto	l5990
  9181                           
  9182                           ;APDS9960.c: 776: ;APDS9960.c: 778:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  9183  0318  0020               	movlb	0	; select bank0
  9184  0319  0849               	movf	processGestureData@ud_delta,w
  9185  031A  044A               	iorwf	processGestureData@ud_delta+1,w
  9186  031B  1D03               	btfss	3,2
  9187  031C  2B25               	goto	l1110
  9188  031D  084B               	movf	processGestureData@lr_delta,w
  9189  031E  044C               	iorwf	processGestureData@lr_delta+1,w
  9190  031F  1D03               	btfss	3,2
  9191  0320  2B25               	goto	l1110
  9192                           
  9193                           ;APDS9960.c: 779:                 gesture_near_count_++;
  9194  0321  3001               	movlw	1
  9195  0322  07E0               	addwf	_gesture_near_count_,f
  9196  0323  3000               	movlw	0
  9197  0324  3DE1               	addwfc	_gesture_near_count_+1,f
  9198  0325                     l1110:	
  9199                           ;APDS9960.c: 780:             }
  9200                           
  9201                           
  9202                           ;APDS9960.c: 782:             if( gesture_near_count_ >= 10 ) {
  9203  0325  0861               	movf	_gesture_near_count_+1,w
  9204  0326  3A80               	xorlw	128
  9205  0327  00AF               	movwf	??_processGestureData
  9206  0328  3080               	movlw	128
  9207  0329  022F               	subwf	??_processGestureData,w
  9208  032A  1D03               	skipz
  9209  032B  2B2E               	goto	u5175
  9210  032C  300A               	movlw	10
  9211  032D  0260               	subwf	_gesture_near_count_,w
  9212  032E                     u5175:	
  9213  032E  1C03               	skipc
  9214  032F  2879               	goto	l5990
  9215                           
  9216                           ;APDS9960.c: 783:                 gesture_ud_count_ = 0;
  9217  0330  0020               	movlb	0	; select bank0
  9218  0331  01E4               	clrf	_gesture_ud_count_
  9219  0332  01E5               	clrf	_gesture_ud_count_+1
  9220                           
  9221                           ;APDS9960.c: 784:                 gesture_lr_count_ = 0;
  9222  0333  01E2               	clrf	_gesture_lr_count_
  9223  0334  01E3               	clrf	_gesture_lr_count_+1
  9224                           
  9225                           ;APDS9960.c: 785:                 gesture_ud_delta_ = 0;
  9226  0335  01E8               	clrf	_gesture_ud_delta_
  9227  0336  01E9               	clrf	_gesture_ud_delta_+1
  9228                           
  9229                           ;APDS9960.c: 786:                 gesture_lr_delta_ = 0;
  9230  0337  01E6               	clrf	_gesture_lr_delta_
  9231  0338  01E7               	clrf	_gesture_lr_delta_+1
  9232  0339  2879               	goto	l5990
  9233  033A                     __end_of_processGestureData:	
  9234                           
  9235                           	psect	text19
  9236  0AA5                     __ptext19:	
  9237 ;; *************** function ___wmul *****************
  9238 ;; Defined at:
  9239 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9242 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  product         2    4[BANK0 ] unsigned int 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  2    0[BANK0 ] unsigned int 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;Total ram usage:        6 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    5
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_processGestureData
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function ___wmul
  9270  0AA5                     ___wmul:	
  9271                           
  9272                           ;incstack = 0
  9273                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9274  0AA5  0020               	movlb	0	; select bank0
  9275  0AA6  01A4               	clrf	___wmul@product
  9276  0AA7  01A5               	clrf	___wmul@product+1
  9277  0AA8                     l5828:	
  9278  0AA8  1C20               	btfss	___wmul@multiplier,0
  9279  0AA9  2AAE               	goto	l1398
  9280  0AAA  0822               	movf	___wmul@multiplicand,w
  9281  0AAB  07A4               	addwf	___wmul@product,f
  9282  0AAC  0823               	movf	___wmul@multiplicand+1,w
  9283  0AAD  3DA5               	addwfc	___wmul@product+1,f
  9284  0AAE                     l1398:	
  9285  0AAE  3001               	movlw	1
  9286  0AAF                     u4505:	
  9287  0AAF  35A2               	lslf	___wmul@multiplicand,f
  9288  0AB0  0DA3               	rlf	___wmul@multiplicand+1,f
  9289  0AB1  0B89               	decfsz	9,f
  9290  0AB2  2AAF               	goto	u4505
  9291  0AB3  3001               	movlw	1
  9292  0AB4                     u4515:	
  9293  0AB4  36A1               	lsrf	___wmul@multiplier+1,f
  9294  0AB5  0CA0               	rrf	___wmul@multiplier,f
  9295  0AB6  0B89               	decfsz	9,f
  9296  0AB7  2AB4               	goto	u4515
  9297  0AB8  0820               	movf	___wmul@multiplier,w
  9298  0AB9  0421               	iorwf	___wmul@multiplier+1,w
  9299  0ABA  1D03               	btfss	3,2
  9300  0ABB  2AA8               	goto	l5828
  9301  0ABC  0825               	movf	___wmul@product+1,w
  9302  0ABD  00A1               	movwf	?___wmul+1
  9303  0ABE  0824               	movf	___wmul@product,w
  9304  0ABF  00A0               	movwf	?___wmul
  9305  0AC0  0008               	return
  9306  0AC1                     __end_of___wmul:	
  9307                           
  9308                           	psect	text20
  9309  0EF0                     __ptext20:	
  9310 ;; *************** function ___awdiv *****************
  9311 ;; Defined at:
  9312 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  divisor         2    6[BANK0 ] int 
  9315 ;;  dividend        2    8[BANK0 ] int 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  quotient        2   13[BANK0 ] int 
  9318 ;;  sign            1   12[BANK0 ] unsigned char 
  9319 ;;  counter         1   11[BANK0 ] unsigned char 
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  2    6[BANK0 ] int 
  9322 ;; Registers used:
  9323 ;;		wreg, status,2, status,0
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;Total ram usage:        9 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    5
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_processGestureData
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           
  9344                           ;psect for function ___awdiv
  9345  0EF0                     ___awdiv:	
  9346                           
  9347                           ;incstack = 0
  9348                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9349  0EF0  0020               	movlb	0	; select bank0
  9350  0EF1  01AC               	clrf	___awdiv@sign
  9351  0EF2  1FA7               	btfss	___awdiv@divisor+1,7
  9352  0EF3  2EFB               	goto	l5848
  9353  0EF4  09A6               	comf	___awdiv@divisor,f
  9354  0EF5  09A7               	comf	___awdiv@divisor+1,f
  9355  0EF6  0AA6               	incf	___awdiv@divisor,f
  9356  0EF7  1903               	skipnz
  9357  0EF8  0AA7               	incf	___awdiv@divisor+1,f
  9358  0EF9  01AC               	clrf	___awdiv@sign
  9359  0EFA  0AAC               	incf	___awdiv@sign,f
  9360  0EFB                     l5848:	
  9361  0EFB  1FA9               	btfss	___awdiv@dividend+1,7
  9362  0EFC  2F06               	goto	l5854
  9363  0EFD  09A8               	comf	___awdiv@dividend,f
  9364  0EFE  09A9               	comf	___awdiv@dividend+1,f
  9365  0EFF  0AA8               	incf	___awdiv@dividend,f
  9366  0F00  1903               	skipnz
  9367  0F01  0AA9               	incf	___awdiv@dividend+1,f
  9368  0F02  3001               	movlw	1
  9369  0F03  00AA               	movwf	??___awdiv
  9370  0F04  082A               	movf	??___awdiv,w
  9371  0F05  06AC               	xorwf	___awdiv@sign,f
  9372  0F06                     l5854:	
  9373  0F06  01AD               	clrf	___awdiv@quotient
  9374  0F07  01AE               	clrf	___awdiv@quotient+1
  9375  0F08  0826               	movf	___awdiv@divisor,w
  9376  0F09  0427               	iorwf	___awdiv@divisor+1,w
  9377  0F0A  1903               	btfsc	3,2
  9378  0F0B  2F35               	goto	l5876
  9379  0F0C  01AB               	clrf	___awdiv@counter
  9380  0F0D  0AAB               	incf	___awdiv@counter,f
  9381  0F0E                     l5864:	
  9382  0F0E  1BA7               	btfsc	___awdiv@divisor+1,7
  9383  0F0F  2F1A               	goto	l5866
  9384  0F10  3001               	movlw	1
  9385  0F11                     u4565:	
  9386  0F11  35A6               	lslf	___awdiv@divisor,f
  9387  0F12  0DA7               	rlf	___awdiv@divisor+1,f
  9388  0F13  0B89               	decfsz	9,f
  9389  0F14  2F11               	goto	u4565
  9390  0F15  3001               	movlw	1
  9391  0F16  00AA               	movwf	??___awdiv
  9392  0F17  082A               	movf	??___awdiv,w
  9393  0F18  07AB               	addwf	___awdiv@counter,f
  9394  0F19  2F0E               	goto	l5864
  9395  0F1A                     l5866:	
  9396  0F1A  3001               	movlw	1
  9397  0F1B                     u4585:	
  9398  0F1B  35AD               	lslf	___awdiv@quotient,f
  9399  0F1C  0DAE               	rlf	___awdiv@quotient+1,f
  9400  0F1D  0B89               	decfsz	9,f
  9401  0F1E  2F1B               	goto	u4585
  9402  0F1F  0827               	movf	___awdiv@divisor+1,w
  9403  0F20  0229               	subwf	___awdiv@dividend+1,w
  9404  0F21  1D03               	skipz
  9405  0F22  2F25               	goto	u4595
  9406  0F23  0826               	movf	___awdiv@divisor,w
  9407  0F24  0228               	subwf	___awdiv@dividend,w
  9408  0F25                     u4595:	
  9409  0F25  1C03               	skipc
  9410  0F26  2F2C               	goto	l5872
  9411  0F27  0826               	movf	___awdiv@divisor,w
  9412  0F28  02A8               	subwf	___awdiv@dividend,f
  9413  0F29  0827               	movf	___awdiv@divisor+1,w
  9414  0F2A  3BA9               	subwfb	___awdiv@dividend+1,f
  9415  0F2B  142D               	bsf	___awdiv@quotient,0
  9416  0F2C                     l5872:	
  9417  0F2C  3001               	movlw	1
  9418  0F2D                     u4605:	
  9419  0F2D  36A7               	lsrf	___awdiv@divisor+1,f
  9420  0F2E  0CA6               	rrf	___awdiv@divisor,f
  9421  0F2F  0B89               	decfsz	9,f
  9422  0F30  2F2D               	goto	u4605
  9423  0F31  3001               	movlw	1
  9424  0F32  02AB               	subwf	___awdiv@counter,f
  9425  0F33  1D03               	btfss	3,2
  9426  0F34  2F1A               	goto	l5866
  9427  0F35                     l5876:	
  9428  0F35  082C               	movf	___awdiv@sign,w
  9429  0F36  1903               	btfsc	3,2
  9430  0F37  2F3D               	goto	l5880
  9431  0F38  09AD               	comf	___awdiv@quotient,f
  9432  0F39  09AE               	comf	___awdiv@quotient+1,f
  9433  0F3A  0AAD               	incf	___awdiv@quotient,f
  9434  0F3B  1903               	skipnz
  9435  0F3C  0AAE               	incf	___awdiv@quotient+1,f
  9436  0F3D                     l5880:	
  9437  0F3D  082E               	movf	___awdiv@quotient+1,w
  9438  0F3E  00A7               	movwf	?___awdiv+1
  9439  0F3F  082D               	movf	___awdiv@quotient,w
  9440  0F40  00A6               	movwf	?___awdiv
  9441  0F41  0008               	return
  9442  0F42                     __end_of___awdiv:	
  9443                           
  9444                           	psect	text21
  9445  09B2                     __ptext21:	
  9446 ;; *************** function _isGestureAvailable *****************
  9447 ;; Defined at:
  9448 ;;		line 537 in file "APDS9960.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  val             1   10[BANK0 ] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      _Bool 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0, pclath, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;Total ram usage:        2 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    8
  9469 ;; This function calls:
  9470 ;;		_wireReadDataByte
  9471 ;; This function is called by:
  9472 ;;		_main
  9473 ;;		_readGesture
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function _isGestureAvailable
  9479  09B2                     _isGestureAvailable:	
  9480                           
  9481                           ;APDS9960.c: 539:     uint8_t val;;APDS9960.c: 542:     val=wireReadDataByte(0xAF);
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
  9485  09B2  30AF               	movlw	175
  9486  09B3  318A  22FD  3189   	fcall	_wireReadDataByte
  9487  09B6  0020               	movlb	0	; select bank0
  9488  09B7  00A9               	movwf	??_isGestureAvailable
  9489  09B8  0829               	movf	??_isGestureAvailable,w
  9490  09B9  00AA               	movwf	isGestureAvailable@val
  9491                           
  9492                           ;APDS9960.c: 545:     val &= 0b00000001;
  9493  09BA  3001               	movlw	1
  9494  09BB  00A9               	movwf	??_isGestureAvailable
  9495  09BC  0829               	movf	??_isGestureAvailable,w
  9496  09BD  05AA               	andwf	isGestureAvailable@val,f
  9497                           
  9498                           ;APDS9960.c: 548:     if( val == 1) {
  9499  09BE  032A               	decf	isGestureAvailable@val,w
  9500  09BF  1D03               	btfss	3,2
  9501  09C0  29C3               	goto	l5896
  9502                           
  9503                           ;APDS9960.c: 549:         return 1;
  9504  09C1  3001               	movlw	1
  9505  09C2  0008               	return
  9506  09C3                     l5896:	
  9507                           
  9508                           ;APDS9960.c: 551:         return 0;
  9509  09C3  3000               	movlw	0
  9510  09C4  0008               	return
  9511  09C5                     __end_of_isGestureAvailable:	
  9512                           
  9513                           	psect	text22
  9514  033A                     __ptext22:	
  9515 ;; *************** function _decodeGesture *****************
  9516 ;; Defined at:
  9517 ;;		line 795 in file "APDS9960.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      _Bool 
  9524 ;; Registers used:
  9525 ;;		wreg, status,2, status,0
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;Total ram usage:       18 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:    5
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		_readGesture
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function _decodeGesture
  9547  033A                     _decodeGesture:	
  9548                           
  9549                           ;APDS9960.c: 798:     if( gesture_state_ == NEAR_STATE ) {
  9550                           
  9551                           ;incstack = 0
  9552                           ; Regs used in _decodeGesture: [wreg+status,2+status,0]
  9553  033A  0020               	movlb	0	; select bank0
  9554  033B  035E               	decf	_gesture_state_,w
  9555  033C  045F               	iorwf	_gesture_state_+1,w
  9556  033D  1D03               	btfss	3,2
  9557  033E  2B46               	goto	l6150
  9558                           
  9559                           ;APDS9960.c: 799:         gesture_motion_ = DIR_NEAR;
  9560  033F  3005               	movlw	5
  9561  0340  0022               	movlb	2	; select bank2
  9562  0341  00E8               	movwf	_gesture_motion_^(0+256)
  9563  0342  3000               	movlw	0
  9564  0343  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9565                           
  9566                           ;APDS9960.c: 800:         return 1;
  9567  0344  3001               	movlw	1
  9568  0345  0008               	return
  9569  0346                     l6150:	
  9570  0346  3002               	movlw	2
  9571  0347  065E               	xorwf	_gesture_state_,w
  9572  0348  045F               	iorwf	_gesture_state_+1,w
  9573  0349  1D03               	btfss	3,2
  9574  034A  2B52               	goto	l6156
  9575                           
  9576                           ;APDS9960.c: 802:         gesture_motion_ = DIR_FAR;
  9577  034B  3006               	movlw	6
  9578  034C  0022               	movlb	2	; select bank2
  9579  034D  00E8               	movwf	_gesture_motion_^(0+256)
  9580  034E  3000               	movlw	0
  9581  034F  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9582                           
  9583                           ;APDS9960.c: 803:         return 1;
  9584  0350  3001               	movlw	1
  9585  0351  0008               	return
  9586  0352                     l6156:	
  9587                           
  9588                           ;APDS9960.c: 807:     if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 0) ) {
  9589  0352  0A64               	incf	_gesture_ud_count_,w
  9590  0353  1D03               	skipz
  9591  0354  2B5E               	goto	l6162
  9592  0355  0A65               	incf	_gesture_ud_count_+1,w
  9593  0356  1D03               	btfss	3,2
  9594  0357  2B5E               	goto	l6162
  9595  0358  0862               	movf	_gesture_lr_count_,w
  9596  0359  0463               	iorwf	_gesture_lr_count_+1,w
  9597  035A  1D03               	btfss	3,2
  9598  035B  2B5E               	goto	l6162
  9599  035C                     l6160:	
  9600                           
  9601                           ;APDS9960.c: 808:         gesture_motion_ = DIR_UP;
  9602  035C  3003               	movlw	3
  9603  035D  2B7D               	goto	L7
  9604  035E                     l6162:	
  9605                           ;APDS9960.c: 809:     } else if( (gesture_ud_count_ == 1) && (gesture_lr_count_ == 0) ) 
      +                          {
  9606                           
  9607  035E  0364               	decf	_gesture_ud_count_,w
  9608  035F  0465               	iorwf	_gesture_ud_count_+1,w
  9609  0360  1D03               	btfss	3,2
  9610  0361  2B68               	goto	l6168
  9611  0362  0862               	movf	_gesture_lr_count_,w
  9612  0363  0463               	iorwf	_gesture_lr_count_+1,w
  9613  0364  1D03               	btfss	3,2
  9614  0365  2B68               	goto	l6168
  9615  0366                     l6166:	
  9616                           
  9617                           ;APDS9960.c: 810:         gesture_motion_ = DIR_DOWN;
  9618  0366  3004               	movlw	4
  9619  0367  2B7D               	goto	L7
  9620  0368                     l6168:	
  9621                           ;APDS9960.c: 811:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 1) ) 
      +                          {
  9622                           
  9623  0368  0864               	movf	_gesture_ud_count_,w
  9624  0369  0465               	iorwf	_gesture_ud_count_+1,w
  9625  036A  1D03               	btfss	3,2
  9626  036B  2B72               	goto	l6174
  9627  036C  0362               	decf	_gesture_lr_count_,w
  9628  036D  0463               	iorwf	_gesture_lr_count_+1,w
  9629  036E  1D03               	btfss	3,2
  9630  036F  2B72               	goto	l6174
  9631  0370                     l6172:	
  9632                           
  9633                           ;APDS9960.c: 812:         gesture_motion_ = DIR_RIGHT;
  9634  0370  3002               	movlw	2
  9635  0371  2B7D               	goto	L7
  9636  0372                     l6174:	
  9637                           ;APDS9960.c: 813:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == -1) )
      +                           {
  9638                           
  9639  0372  0864               	movf	_gesture_ud_count_,w
  9640  0373  0465               	iorwf	_gesture_ud_count_+1,w
  9641  0374  1D03               	btfss	3,2
  9642  0375  2B82               	goto	l6180
  9643  0376  0A62               	incf	_gesture_lr_count_,w
  9644  0377  1D03               	skipz
  9645  0378  2B82               	goto	l6180
  9646  0379  0A63               	incf	_gesture_lr_count_+1,w
  9647  037A  1D03               	btfss	3,2
  9648  037B  2B82               	goto	l6180
  9649  037C                     l6178:	
  9650                           
  9651                           ;APDS9960.c: 814:         gesture_motion_ = DIR_LEFT;
  9652  037C  3001               	movlw	1
  9653  037D                     L7:	
  9654  037D  0022               	movlb	2	; select bank2
  9655  037E  00E8               	movwf	_gesture_motion_^(0+256)
  9656  037F  3000               	movlw	0
  9657  0380  00E9               	movwf	(_gesture_motion_^(0+256)+1)
  9658                           
  9659                           ;APDS9960.c: 815:     } else if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 1) )
=======
  9277  00AB  0020               	movlb	0	; select bank0
  9278  00AC  01CD               	clrf	processGestureData@i
  9279  00AD  01CE               	clrf	processGestureData@i+1
  9280  00AE  28B3               	goto	l1038
  9281  00AF                     l7271:	
  9282                           ;APDS9960.c: 695:                 break;
  9283                           
  9284                           
  9285                           ;APDS9960.c: 697:         }
  9286  00AF  3001               	movlw	1
  9287  00B0  07CD               	addwf	processGestureData@i,f
  9288  00B1  3000               	movlw	0
  9289  00B2  3DCE               	addwfc	processGestureData@i+1,f
  9290  00B3                     l1038:	
  9291  00B3  084E               	movf	processGestureData@i+1,w
  9292  00B4  3A80               	xorlw	128
  9293  00B5  00AF               	movwf	??_processGestureData
  9294  00B6  3080               	movlw	128
  9295  00B7  022F               	subwf	??_processGestureData,w
  9296  00B8  1D03               	skipz
  9297  00B9  28BE               	goto	u6775
  9298  00BA  0024               	movlb	4	; select bank4
  9299  00BB  0861               	movf	(_gesture_data_^(0+512)+65),w
  9300  00BC  0020               	movlb	0	; select bank0
  9301  00BD  024D               	subwf	processGestureData@i,w
  9302  00BE                     u6775:	
  9303  00BE  1803               	btfsc	3,0
  9304  00BF  2909               	goto	l7273
  9305                           
  9306                           ;APDS9960.c: 686:             if( (gesture_data_.u_data[i] > 10) &&
  9307  00C0  0020               	movlb	0	; select bank0
  9308  00C1  084D               	movf	processGestureData@i,w
  9309  00C2  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  9310  00C3  0086               	movwf	6
  9311  00C4  3002               	movlw	2	; select bank4/5
  9312  00C5  0087               	movwf	7
  9313  00C6  300B               	movlw	11
  9314  00C7  0201               	subwf	1,w
  9315  00C8  1C03               	skipc
  9316  00C9  28AF               	goto	l7271
  9317  00CA  084D               	movf	processGestureData@i,w
  9318  00CB  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  9319  00CC  0086               	movwf	6
  9320  00CD  3002               	movlw	2	; select bank4/5
  9321  00CE  0087               	movwf	7
  9322  00CF  300B               	movlw	11
  9323  00D0  0201               	subwf	1,w
  9324  00D1  1C03               	skipc
  9325  00D2  28AF               	goto	l7271
  9326  00D3  084D               	movf	processGestureData@i,w
  9327  00D4  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  9328  00D5  0086               	movwf	6
  9329  00D6  3002               	movlw	2	; select bank4/5
  9330  00D7  0087               	movwf	7
  9331  00D8  300B               	movlw	11
  9332  00D9  0201               	subwf	1,w
  9333  00DA  1C03               	skipc
  9334  00DB  28AF               	goto	l7271
  9335  00DC  084D               	movf	processGestureData@i,w
  9336  00DD  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  9337  00DE  0086               	movwf	6
  9338  00DF  3002               	movlw	2	; select bank4/5
  9339  00E0  0087               	movwf	7
  9340  00E1  300B               	movlw	11
  9341  00E2  0201               	subwf	1,w
  9342  00E3  1C03               	skipc
  9343  00E4  28AF               	goto	l7271
  9344                           
  9345                           ;APDS9960.c: 689:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 691:   
      +                                        u_first = gesture_data_.u_data[i];
  9346  00E5  084D               	movf	processGestureData@i,w
  9347  00E6  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  9348  00E7  0086               	movwf	6
  9349  00E8  3002               	movlw	2	; select bank4/5
  9350  00E9  0087               	movwf	7
  9351  00EA  0801               	movf	1,w
  9352  00EB  00AF               	movwf	??_processGestureData
  9353  00EC  082F               	movf	??_processGestureData,w
  9354  00ED  00C5               	movwf	processGestureData@u_first
  9355                           
  9356                           ;APDS9960.c: 692:                 d_first = gesture_data_.d_data[i];
  9357  00EE  084D               	movf	processGestureData@i,w
  9358  00EF  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  9359  00F0  0086               	movwf	6
  9360  00F1  3002               	movlw	2	; select bank4/5
  9361  00F2  0087               	movwf	7
  9362  00F3  0801               	movf	1,w
  9363  00F4  00AF               	movwf	??_processGestureData
  9364  00F5  082F               	movf	??_processGestureData,w
  9365  00F6  00C6               	movwf	processGestureData@d_first
  9366                           
  9367                           ;APDS9960.c: 693:                 l_first = gesture_data_.l_data[i];
  9368  00F7  084D               	movf	processGestureData@i,w
  9369  00F8  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  9370  00F9  0086               	movwf	6
  9371  00FA  3002               	movlw	2	; select bank4/5
  9372  00FB  0087               	movwf	7
  9373  00FC  0801               	movf	1,w
  9374  00FD  00AF               	movwf	??_processGestureData
  9375  00FE  082F               	movf	??_processGestureData,w
  9376  00FF  00C7               	movwf	processGestureData@l_first
  9377                           
  9378                           ;APDS9960.c: 694:                 r_first = gesture_data_.r_data[i];
  9379  0100  084D               	movf	processGestureData@i,w
  9380  0101  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  9381  0102  0086               	movwf	6
  9382  0103  3002               	movlw	2	; select bank4/5
  9383  0104  0087               	movwf	7
  9384  0105  0801               	movf	1,w
  9385  0106  00AF               	movwf	??_processGestureData
  9386  0107  082F               	movf	??_processGestureData,w
  9387  0108  00C8               	movwf	processGestureData@r_first
  9388  0109                     l7273:	
  9389                           
  9390                           ;APDS9960.c: 700:         if( (u_first == 0) || (d_first == 0) || (l_first == 0) || (r_f
      +                          irst == 0) ) {
  9391  0109  0020               	movlb	0	; select bank0
  9392  010A  0845               	movf	processGestureData@u_first,w
  9393  010B  1903               	btfsc	3,2
  9394  010C  28A2               	goto	l7251
  9395  010D  0846               	movf	processGestureData@d_first,w
  9396  010E  1903               	btfsc	3,2
  9397  010F  28A2               	goto	l7251
  9398  0110  0847               	movf	processGestureData@l_first,w
  9399  0111  1903               	btfsc	3,2
  9400  0112  28A2               	goto	l7251
  9401  0113  0848               	movf	processGestureData@r_first,w
  9402  0114  1903               	btfsc	3,2
  9403  0115  28A2               	goto	l7251
  9404                           
  9405                           ;APDS9960.c: 706:         for( i = gesture_data_.total_gestures - 1; i >= 0; i-- ) {
  9406  0116  0024               	movlb	4	; select bank4
  9407  0117  0861               	movf	(_gesture_data_^(0+512)+65),w
  9408  0118  3EFF               	addlw	255
  9409  0119  0020               	movlb	0	; select bank0
  9410  011A  00CD               	movwf	processGestureData@i
  9411  011B  30FF               	movlw	255
  9412  011C  1803               	skipnc
  9413  011D  3000               	movlw	0
  9414  011E  00CE               	movwf	processGestureData@i+1
  9415                           
  9416                           ;APDS9960.c: 717:                 break;
  9417  011F  2924               	goto	l7287
  9418  0120                     l7301:	
  9419                           
  9420                           ;APDS9960.c: 719:         }
  9421  0120  30FF               	movlw	255
  9422  0121  07CD               	addwf	processGestureData@i,f
  9423  0122  30FF               	movlw	255
  9424  0123  3DCE               	addwfc	processGestureData@i+1,f
  9425  0124                     l7287:	
  9426  0124  1BCE               	btfsc	processGestureData@i+1,7
  9427  0125  296E               	goto	l7305
  9428                           
  9429                           ;APDS9960.c: 708:             if( (gesture_data_.u_data[i] > 10) &&
  9430  0126  084D               	movf	processGestureData@i,w
  9431  0127  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  9432  0128  0086               	movwf	6
  9433  0129  3002               	movlw	2	; select bank4/5
  9434  012A  0087               	movwf	7
  9435  012B  300B               	movlw	11
  9436  012C  0201               	subwf	1,w
  9437  012D  1C03               	skipc
  9438  012E  2920               	goto	l7301
  9439  012F  084D               	movf	processGestureData@i,w
  9440  0130  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  9441  0131  0086               	movwf	6
  9442  0132  3002               	movlw	2	; select bank4/5
  9443  0133  0087               	movwf	7
  9444  0134  300B               	movlw	11
  9445  0135  0201               	subwf	1,w
  9446  0136  1C03               	skipc
  9447  0137  2920               	goto	l7301
  9448  0138  084D               	movf	processGestureData@i,w
  9449  0139  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  9450  013A  0086               	movwf	6
  9451  013B  3002               	movlw	2	; select bank4/5
  9452  013C  0087               	movwf	7
  9453  013D  300B               	movlw	11
  9454  013E  0201               	subwf	1,w
  9455  013F  1C03               	skipc
  9456  0140  2920               	goto	l7301
  9457  0141  084D               	movf	processGestureData@i,w
  9458  0142  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  9459  0143  0086               	movwf	6
  9460  0144  3002               	movlw	2	; select bank4/5
  9461  0145  0087               	movwf	7
  9462  0146  300B               	movlw	11
  9463  0147  0201               	subwf	1,w
  9464  0148  1C03               	skipc
  9465  0149  2920               	goto	l7301
  9466                           
  9467                           ;APDS9960.c: 711:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 713:   
      +                                        u_last = gesture_data_.u_data[i];
  9468  014A  084D               	movf	processGestureData@i,w
  9469  014B  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  9470  014C  0086               	movwf	6
  9471  014D  3002               	movlw	2	; select bank4/5
  9472  014E  0087               	movwf	7
  9473  014F  0801               	movf	1,w
  9474  0150  00AF               	movwf	??_processGestureData
  9475  0151  082F               	movf	??_processGestureData,w
  9476  0152  00C1               	movwf	processGestureData@u_last
  9477                           
  9478                           ;APDS9960.c: 714:                 d_last = gesture_data_.d_data[i];
  9479  0153  084D               	movf	processGestureData@i,w
  9480  0154  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  9481  0155  0086               	movwf	6
  9482  0156  3002               	movlw	2	; select bank4/5
  9483  0157  0087               	movwf	7
  9484  0158  0801               	movf	1,w
  9485  0159  00AF               	movwf	??_processGestureData
  9486  015A  082F               	movf	??_processGestureData,w
  9487  015B  00C2               	movwf	processGestureData@d_last
  9488                           
  9489                           ;APDS9960.c: 715:                 l_last = gesture_data_.l_data[i];
  9490  015C  084D               	movf	processGestureData@i,w
  9491  015D  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  9492  015E  0086               	movwf	6
  9493  015F  3002               	movlw	2	; select bank4/5
  9494  0160  0087               	movwf	7
  9495  0161  0801               	movf	1,w
  9496  0162  00AF               	movwf	??_processGestureData
  9497  0163  082F               	movf	??_processGestureData,w
  9498  0164  00C3               	movwf	processGestureData@l_last
  9499                           
  9500                           ;APDS9960.c: 716:                 r_last = gesture_data_.r_data[i];
  9501  0165  084D               	movf	processGestureData@i,w
  9502  0166  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  9503  0167  0086               	movwf	6
  9504  0168  3002               	movlw	2	; select bank4/5
  9505  0169  0087               	movwf	7
  9506  016A  0801               	movf	1,w
  9507  016B  00AF               	movwf	??_processGestureData
  9508  016C  082F               	movf	??_processGestureData,w
  9509  016D  00C4               	movwf	processGestureData@r_last
  9510  016E                     l7305:	
  9511                           
  9512                           ;APDS9960.c: 723:     ud_ratio_first = ((u_first - d_first) * 100) / (u_first + d_first)
      +                          ;
  9513  016E  0020               	movlb	0	; select bank0
  9514  016F  0845               	movf	processGestureData@u_first,w
  9515  0170  0746               	addwf	processGestureData@d_first,w
  9516  0171  00A6               	movwf	___awdiv@divisor
  9517  0172  01A7               	clrf	___awdiv@divisor+1
  9518  0173  0DA7               	rlf	___awdiv@divisor+1,f
  9519  0174  0846               	movf	processGestureData@d_first,w
  9520  0175  0245               	subwf	processGestureData@u_first,w
  9521  0176  00A0               	movwf	___wmul@multiplier
  9522  0177  01A1               	clrf	___wmul@multiplier+1
  9523  0178  1C03               	skipc
  9524  0179  03A1               	decf	___wmul@multiplier+1,f
  9525  017A  3064               	movlw	100
  9526  017B  00A2               	movwf	___wmul@multiplicand
  9527  017C  3000               	movlw	0
  9528  017D  00A3               	movwf	___wmul@multiplicand+1
  9529  017E  3193  23BC  3180   	fcall	___wmul
  9530  0181  0020               	movlb	0	; select bank0
  9531  0182  0821               	movf	?___wmul+1,w
  9532  0183  00A9               	movwf	___awdiv@dividend+1
  9533  0184  0820               	movf	?___wmul,w
  9534  0185  00A8               	movwf	___awdiv@dividend
  9535  0186  3189  21F9  3180   	fcall	___awdiv
  9536  0189  0020               	movlb	0	; select bank0
  9537  018A  0827               	movf	?___awdiv+1,w
  9538  018B  00B2               	movwf	processGestureData@ud_ratio_first+1
  9539  018C  0826               	movf	?___awdiv,w
  9540  018D  00B1               	movwf	processGestureData@ud_ratio_first
  9541                           
  9542                           ;APDS9960.c: 724:     lr_ratio_first = ((l_first - r_first) * 100) / (l_first + r_first)
      +                          ;
  9543  018E  0847               	movf	processGestureData@l_first,w
  9544  018F  0748               	addwf	processGestureData@r_first,w
  9545  0190  00A6               	movwf	___awdiv@divisor
  9546  0191  01A7               	clrf	___awdiv@divisor+1
  9547  0192  0DA7               	rlf	___awdiv@divisor+1,f
  9548  0193  0848               	movf	processGestureData@r_first,w
  9549  0194  0247               	subwf	processGestureData@l_first,w
  9550  0195  00A0               	movwf	___wmul@multiplier
  9551  0196  01A1               	clrf	___wmul@multiplier+1
  9552  0197  1C03               	skipc
  9553  0198  03A1               	decf	___wmul@multiplier+1,f
  9554  0199  3064               	movlw	100
  9555  019A  00A2               	movwf	___wmul@multiplicand
  9556  019B  3000               	movlw	0
  9557  019C  00A3               	movwf	___wmul@multiplicand+1
  9558  019D  3193  23BC  3180   	fcall	___wmul
  9559  01A0  0020               	movlb	0	; select bank0
  9560  01A1  0821               	movf	?___wmul+1,w
  9561  01A2  00A9               	movwf	___awdiv@dividend+1
  9562  01A3  0820               	movf	?___wmul,w
  9563  01A4  00A8               	movwf	___awdiv@dividend
  9564  01A5  3189  21F9  3180   	fcall	___awdiv
  9565  01A8  0020               	movlb	0	; select bank0
  9566  01A9  0827               	movf	?___awdiv+1,w
  9567  01AA  00B4               	movwf	processGestureData@lr_ratio_first+1
  9568  01AB  0826               	movf	?___awdiv,w
  9569  01AC  00B3               	movwf	processGestureData@lr_ratio_first
  9570                           
  9571                           ;APDS9960.c: 725:     ud_ratio_last = ((u_last - d_last) * 100) / (u_last + d_last);
  9572  01AD  0841               	movf	processGestureData@u_last,w
  9573  01AE  0742               	addwf	processGestureData@d_last,w
  9574  01AF  00A6               	movwf	___awdiv@divisor
  9575  01B0  01A7               	clrf	___awdiv@divisor+1
  9576  01B1  0DA7               	rlf	___awdiv@divisor+1,f
  9577  01B2  0842               	movf	processGestureData@d_last,w
  9578  01B3  0241               	subwf	processGestureData@u_last,w
  9579  01B4  00A0               	movwf	___wmul@multiplier
  9580  01B5  01A1               	clrf	___wmul@multiplier+1
  9581  01B6  1C03               	skipc
  9582  01B7  03A1               	decf	___wmul@multiplier+1,f
  9583  01B8  3064               	movlw	100
  9584  01B9  00A2               	movwf	___wmul@multiplicand
  9585  01BA  3000               	movlw	0
  9586  01BB  00A3               	movwf	___wmul@multiplicand+1
  9587  01BC  3193  23BC  3180   	fcall	___wmul
  9588  01BF  0020               	movlb	0	; select bank0
  9589  01C0  0821               	movf	?___wmul+1,w
  9590  01C1  00A9               	movwf	___awdiv@dividend+1
  9591  01C2  0820               	movf	?___wmul,w
  9592  01C3  00A8               	movwf	___awdiv@dividend
  9593  01C4  3189  21F9  3180   	fcall	___awdiv
  9594  01C7  0020               	movlb	0	; select bank0
  9595  01C8  0827               	movf	?___awdiv+1,w
  9596  01C9  00B6               	movwf	processGestureData@ud_ratio_last+1
  9597  01CA  0826               	movf	?___awdiv,w
  9598  01CB  00B5               	movwf	processGestureData@ud_ratio_last
  9599                           
  9600                           ;APDS9960.c: 726:     lr_ratio_last = ((l_last - r_last) * 100) / (l_last + r_last);
  9601  01CC  0843               	movf	processGestureData@l_last,w
  9602  01CD  0744               	addwf	processGestureData@r_last,w
  9603  01CE  00A6               	movwf	___awdiv@divisor
  9604  01CF  01A7               	clrf	___awdiv@divisor+1
  9605  01D0  0DA7               	rlf	___awdiv@divisor+1,f
  9606  01D1  0844               	movf	processGestureData@r_last,w
  9607  01D2  0243               	subwf	processGestureData@l_last,w
  9608  01D3  00A0               	movwf	___wmul@multiplier
  9609  01D4  01A1               	clrf	___wmul@multiplier+1
  9610  01D5  1C03               	skipc
  9611  01D6  03A1               	decf	___wmul@multiplier+1,f
  9612  01D7  3064               	movlw	100
  9613  01D8  00A2               	movwf	___wmul@multiplicand
  9614  01D9  3000               	movlw	0
  9615  01DA  00A3               	movwf	___wmul@multiplicand+1
  9616  01DB  3193  23BC  3180   	fcall	___wmul
  9617  01DE  0020               	movlb	0	; select bank0
  9618  01DF  0821               	movf	?___wmul+1,w
  9619  01E0  00A9               	movwf	___awdiv@dividend+1
  9620  01E1  0820               	movf	?___wmul,w
  9621  01E2  00A8               	movwf	___awdiv@dividend
  9622  01E3  3189  21F9  3180   	fcall	___awdiv
  9623  01E6  0020               	movlb	0	; select bank0
  9624  01E7  0827               	movf	?___awdiv+1,w
  9625  01E8  00B8               	movwf	processGestureData@lr_ratio_last+1
  9626  01E9  0826               	movf	?___awdiv,w
  9627  01EA  00B7               	movwf	processGestureData@lr_ratio_last
  9628                           
  9629                           ;APDS9960.c: 729:     ud_delta = ud_ratio_last - ud_ratio_first;
  9630  01EB  0831               	movf	processGestureData@ud_ratio_first,w
  9631  01EC  0235               	subwf	processGestureData@ud_ratio_last,w
  9632  01ED  00C9               	movwf	processGestureData@ud_delta
  9633  01EE  0832               	movf	processGestureData@ud_ratio_first+1,w
  9634  01EF  3B36               	subwfb	processGestureData@ud_ratio_last+1,w
  9635  01F0  00CA               	movwf	processGestureData@ud_delta+1
  9636                           
  9637                           ;APDS9960.c: 730:     lr_delta = lr_ratio_last - lr_ratio_first;
  9638  01F1  0833               	movf	processGestureData@lr_ratio_first,w
  9639  01F2  0237               	subwf	processGestureData@lr_ratio_last,w
  9640  01F3  00CB               	movwf	processGestureData@lr_delta
  9641  01F4  0834               	movf	processGestureData@lr_ratio_first+1,w
  9642  01F5  3B38               	subwfb	processGestureData@lr_ratio_last+1,w
  9643  01F6  00CC               	movwf	processGestureData@lr_delta+1
  9644                           
  9645                           ;APDS9960.c: 733:     gesture_ud_delta_ += ud_delta;
  9646  01F7  0849               	movf	processGestureData@ud_delta,w
  9647  01F8  07F2               	addwf	_gesture_ud_delta_,f
  9648  01F9  084A               	movf	processGestureData@ud_delta+1,w
  9649  01FA  3DF3               	addwfc	_gesture_ud_delta_+1,f
  9650                           
  9651                           ;APDS9960.c: 734:     gesture_lr_delta_ += lr_delta;
  9652  01FB  084B               	movf	processGestureData@lr_delta,w
  9653  01FC  07F0               	addwf	_gesture_lr_delta_,f
  9654  01FD  084C               	movf	processGestureData@lr_delta+1,w
  9655  01FE  3DF1               	addwfc	_gesture_lr_delta_+1,f
  9656                           
  9657                           ;APDS9960.c: 737:     if( gesture_ud_delta_ >= 50 ) {
  9658  01FF  0873               	movf	_gesture_ud_delta_+1,w
  9659  0200  3A80               	xorlw	128
  9660  0201  00AF               	movwf	??_processGestureData
  9661  0202  3080               	movlw	128
  9662  0203  022F               	subwf	??_processGestureData,w
  9663  0204  1D03               	skipz
  9664  0205  2A08               	goto	u6875
  9665  0206  3032               	movlw	50
  9666  0207  0272               	subwf	_gesture_ud_delta_,w
  9667  0208                     u6875:	
  9668  0208  1C03               	skipc
  9669  0209  2A0F               	goto	l7319
  9670                           
  9671                           ;APDS9960.c: 738:         gesture_ud_count_ = 1;
  9672  020A  3001               	movlw	1
  9673  020B  0021               	movlb	1	; select bank1
  9674  020C  00EA               	movwf	_gesture_ud_count_^(0+128)
  9675  020D  3000               	movlw	0
  9676  020E  2A1F               	goto	L2
  9677  020F                     l7319:	
  9678                           ;APDS9960.c: 739:     } else if( gesture_ud_delta_ <= -50 ) {
  9679                           
  9680  020F  0873               	movf	_gesture_ud_delta_+1,w
  9681  0210  3A80               	xorlw	128
  9682  0211  0020               	movlb	0	; select bank0
  9683  0212  00AF               	movwf	??_processGestureData
  9684  0213  307F               	movlw	127
  9685  0214  022F               	subwf	??_processGestureData,w
  9686  0215  1D03               	skipz
  9687  0216  2A19               	goto	u6885
  9688  0217  30CF               	movlw	207
  9689  0218  0272               	subwf	_gesture_ud_delta_,w
  9690  0219                     u6885:	
  9691  0219  1803               	skipnc
  9692  021A  2A21               	goto	l7323
  9693                           
  9694                           ;APDS9960.c: 740:         gesture_ud_count_ = -1;
  9695  021B  30FF               	movlw	255
  9696  021C  0021               	movlb	1	; select bank1
  9697  021D  00EA               	movwf	_gesture_ud_count_^(0+128)
  9698  021E  30FF               	movlw	255
  9699  021F                     L2:	
  9700  021F  00EB               	movwf	(_gesture_ud_count_^(0+128)+1)
  9701                           
  9702                           ;APDS9960.c: 741:     } else {
  9703  0220  2A24               	goto	l7325
  9704  0221                     l7323:	
  9705                           
  9706                           ;APDS9960.c: 742:         gesture_ud_count_ = 0;
  9707  0221  0021               	movlb	1	; select bank1
  9708  0222  01EA               	clrf	_gesture_ud_count_^(0+128)
  9709  0223  01EB               	clrf	(_gesture_ud_count_+1)^(0+128)
  9710  0224                     l7325:	
  9711                           
  9712                           ;APDS9960.c: 746:     if( gesture_lr_delta_ >= 50 ) {
  9713  0224  0871               	movf	_gesture_lr_delta_+1,w
  9714  0225  3A80               	xorlw	128
  9715  0226  0020               	movlb	0	; select bank0
  9716  0227  00AF               	movwf	??_processGestureData
  9717  0228  3080               	movlw	128
  9718  0229  022F               	subwf	??_processGestureData,w
  9719  022A  1D03               	skipz
  9720  022B  2A2E               	goto	u6895
  9721  022C  3032               	movlw	50
  9722  022D  0270               	subwf	_gesture_lr_delta_,w
  9723  022E                     u6895:	
  9724  022E  1C03               	skipc
  9725  022F  2A35               	goto	l7329
  9726                           
  9727                           ;APDS9960.c: 747:         gesture_lr_count_ = 1;
  9728  0230  3001               	movlw	1
  9729  0231  0021               	movlb	1	; select bank1
  9730  0232  00E8               	movwf	_gesture_lr_count_^(0+128)
  9731  0233  3000               	movlw	0
  9732  0234  2A45               	goto	L3
  9733  0235                     l7329:	
  9734                           ;APDS9960.c: 748:     } else if( gesture_lr_delta_ <= -50 ) {
  9735                           
  9736  0235  0871               	movf	_gesture_lr_delta_+1,w
  9737  0236  3A80               	xorlw	128
  9738  0237  0020               	movlb	0	; select bank0
  9739  0238  00AF               	movwf	??_processGestureData
  9740  0239  307F               	movlw	127
  9741  023A  022F               	subwf	??_processGestureData,w
  9742  023B  1D03               	skipz
  9743  023C  2A3F               	goto	u6905
  9744  023D  30CF               	movlw	207
  9745  023E  0270               	subwf	_gesture_lr_delta_,w
  9746  023F                     u6905:	
  9747  023F  1803               	skipnc
  9748  0240  2A47               	goto	l7333
  9749                           
  9750                           ;APDS9960.c: 749:         gesture_lr_count_ = -1;
  9751  0241  30FF               	movlw	255
  9752  0242  0021               	movlb	1	; select bank1
  9753  0243  00E8               	movwf	_gesture_lr_count_^(0+128)
  9754  0244  30FF               	movlw	255
  9755  0245                     L3:	
  9756  0245  00E9               	movwf	(_gesture_lr_count_^(0+128)+1)
  9757                           
  9758                           ;APDS9960.c: 750:     } else {
  9759  0246  2A4A               	goto	l7335
  9760  0247                     l7333:	
  9761                           
  9762                           ;APDS9960.c: 751:         gesture_lr_count_ = 0;
  9763  0247  0021               	movlb	1	; select bank1
  9764  0248  01E8               	clrf	_gesture_lr_count_^(0+128)
  9765  0249  01E9               	clrf	(_gesture_lr_count_+1)^(0+128)
  9766  024A                     l7335:	
  9767                           
  9768                           ;APDS9960.c: 755:     if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 0) ) {
  9769  024A  086A               	movf	_gesture_ud_count_^(0+128),w
  9770  024B  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
  9771  024C  1D03               	btfss	3,2
  9772  024D  2AF6               	goto	l7379
  9773  024E  0868               	movf	_gesture_lr_count_^(0+128),w
  9774  024F  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
  9775  0250  1D03               	btfss	3,2
  9776  0251  2AF6               	goto	l7379
  9777                           
  9778                           ;APDS9960.c: 756:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  9779  0252  0020               	movlb	0	; select bank0
  9780  0253  084A               	movf	processGestureData@ud_delta+1,w
  9781  0254  3A80               	xorlw	128
  9782  0255  00AF               	movwf	??_processGestureData
  9783  0256  3080               	movlw	128
  9784  0257  022F               	subwf	??_processGestureData,w
  9785  0258  1D03               	skipz
  9786  0259  2A5C               	goto	u6935
  9787  025A  3001               	movlw	1
  9788  025B  0249               	subwf	processGestureData@ud_delta,w
  9789  025C                     u6935:	
  9790  025C  1803               	skipnc
  9791  025D  2A6B               	goto	l7343
  9792  025E  0020               	movlb	0	; select bank0
  9793  025F  0949               	comf	processGestureData@ud_delta,w
  9794  0260  00AF               	movwf	??_processGestureData
  9795  0261  094A               	comf	processGestureData@ud_delta+1,w
  9796  0262  00B0               	movwf	??_processGestureData+1
  9797  0263  0AAF               	incf	??_processGestureData,f
  9798  0264  1903               	skipnz
  9799  0265  0AB0               	incf	??_processGestureData+1,f
  9800  0266  082F               	movf	??_processGestureData,w
  9801  0267  00B9               	movwf	_processGestureData$1441
  9802  0268  0830               	movf	??_processGestureData+1,w
  9803  0269  00BA               	movwf	_processGestureData$1441+1
  9804  026A  2A70               	goto	l1061
  9805  026B                     l7343:	
  9806  026B  0020               	movlb	0	; select bank0
  9807  026C  084A               	movf	processGestureData@ud_delta+1,w
  9808  026D  00BA               	movwf	_processGestureData$1441+1
  9809  026E  0849               	movf	processGestureData@ud_delta,w
  9810  026F  00B9               	movwf	_processGestureData$1441
  9811  0270                     l1061:	
  9812  0270  083A               	movf	_processGestureData$1441+1,w
  9813  0271  3A80               	xorlw	128
  9814  0272  00AF               	movwf	??_processGestureData
  9815  0273  3080               	movlw	128
  9816  0274  022F               	subwf	??_processGestureData,w
  9817  0275  1D03               	skipz
  9818  0276  2A79               	goto	u6945
  9819  0277  3014               	movlw	20
  9820  0278  0239               	subwf	_processGestureData$1441,w
  9821  0279                     u6945:	
  9822  0279  1803               	skipnc
  9823  027A  28A2               	goto	l7251
  9824  027B  0020               	movlb	0	; select bank0
  9825  027C  084C               	movf	processGestureData@lr_delta+1,w
  9826  027D  3A80               	xorlw	128
  9827  027E  00AF               	movwf	??_processGestureData
  9828  027F  3080               	movlw	128
  9829  0280  022F               	subwf	??_processGestureData,w
  9830  0281  1D03               	skipz
  9831  0282  2A85               	goto	u6955
  9832  0283  3001               	movlw	1
  9833  0284  024B               	subwf	processGestureData@lr_delta,w
  9834  0285                     u6955:	
  9835  0285  1803               	skipnc
  9836  0286  2A94               	goto	l7349
  9837  0287  0020               	movlb	0	; select bank0
  9838  0288  094B               	comf	processGestureData@lr_delta,w
  9839  0289  00AF               	movwf	??_processGestureData
  9840  028A  094C               	comf	processGestureData@lr_delta+1,w
  9841  028B  00B0               	movwf	??_processGestureData+1
  9842  028C  0AAF               	incf	??_processGestureData,f
  9843  028D  1903               	skipnz
  9844  028E  0AB0               	incf	??_processGestureData+1,f
  9845  028F  082F               	movf	??_processGestureData,w
  9846  0290  00BB               	movwf	_processGestureData$1442
  9847  0291  0830               	movf	??_processGestureData+1,w
  9848  0292  00BC               	movwf	_processGestureData$1442+1
  9849  0293  2A99               	goto	l1065
  9850  0294                     l7349:	
  9851  0294  0020               	movlb	0	; select bank0
  9852  0295  084C               	movf	processGestureData@lr_delta+1,w
  9853  0296  00BC               	movwf	_processGestureData$1442+1
  9854  0297  084B               	movf	processGestureData@lr_delta,w
  9855  0298  00BB               	movwf	_processGestureData$1442
  9856  0299                     l1065:	
  9857  0299  083C               	movf	_processGestureData$1442+1,w
  9858  029A  3A80               	xorlw	128
  9859  029B  00AF               	movwf	??_processGestureData
  9860  029C  3080               	movlw	128
  9861  029D  022F               	subwf	??_processGestureData,w
  9862  029E  1D03               	skipz
  9863  029F  2AA2               	goto	u6965
  9864  02A0  3014               	movlw	20
  9865  02A1  023B               	subwf	_processGestureData$1442,w
  9866  02A2                     u6965:	
  9867  02A2  1803               	skipnc
  9868  02A3  28A2               	goto	l7251
  9869                           
  9870                           ;APDS9960.c: 757: ;APDS9960.c: 759:             if( (ud_delta == 0) && (lr_delta == 0) )
>>>>>>> b288aef trying to integrate UART
      +                           {
<<<<<<< Upstream, based on origin/master
  9660  0381  2CC8               	goto	l6256
  9661  0382                     l6180:	
  9662  0382  0A64               	incf	_gesture_ud_count_,w
  9663  0383  1D03               	skipz
  9664  0384  2BD3               	goto	l6198
  9665  0385  0A65               	incf	_gesture_ud_count_+1,w
  9666  0386  1D03               	btfss	3,2
  9667  0387  2BD3               	goto	l6198
  9668  0388  0362               	decf	_gesture_lr_count_,w
  9669  0389  0463               	iorwf	_gesture_lr_count_+1,w
  9670  038A  1D03               	btfss	3,2
  9671  038B  2BD3               	goto	l6198
  9672                           
  9673                           ;APDS9960.c: 816:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9674  038C  0869               	movf	_gesture_ud_delta_+1,w
  9675  038D  3A80               	xorlw	128
  9676  038E  00A0               	movwf	??_decodeGesture
  9677  038F  3080               	movlw	128
  9678  0390  0220               	subwf	??_decodeGesture,w
  9679  0391  1D03               	skipz
  9680  0392  2B95               	goto	u5305
  9681  0393  3001               	movlw	1
  9682  0394  0268               	subwf	_gesture_ud_delta_,w
  9683  0395                     u5305:	
  9684  0395  1803               	skipnc
  9685  0396  2BA4               	goto	l6188
  9686  0397  0020               	movlb	0	; select bank0
  9687  0398  0968               	comf	_gesture_ud_delta_,w
  9688  0399  00A0               	movwf	??_decodeGesture
  9689  039A  0969               	comf	_gesture_ud_delta_+1,w
  9690  039B  00A1               	movwf	??_decodeGesture+1
  9691  039C  0AA0               	incf	??_decodeGesture,f
  9692  039D  1903               	skipnz
  9693  039E  0AA1               	incf	??_decodeGesture+1,f
  9694  039F  0820               	movf	??_decodeGesture,w
  9695  03A0  00A2               	movwf	_decodeGesture$1540
  9696  03A1  0821               	movf	??_decodeGesture+1,w
  9697  03A2  00A3               	movwf	_decodeGesture$1540+1
  9698  03A3  2BA9               	goto	l1131
  9699  03A4                     l6188:	
  9700  03A4  0020               	movlb	0	; select bank0
  9701  03A5  0869               	movf	_gesture_ud_delta_+1,w
  9702  03A6  00A3               	movwf	_decodeGesture$1540+1
  9703  03A7  0868               	movf	_gesture_ud_delta_,w
  9704  03A8  00A2               	movwf	_decodeGesture$1540
  9705  03A9                     l1131:	
  9706  03A9  0867               	movf	_gesture_lr_delta_+1,w
  9707  03AA  3A80               	xorlw	128
  9708  03AB  00A0               	movwf	??_decodeGesture
  9709  03AC  3080               	movlw	128
  9710  03AD  0220               	subwf	??_decodeGesture,w
  9711  03AE  1D03               	skipz
  9712  03AF  2BB2               	goto	u5315
  9713  03B0  3001               	movlw	1
  9714  03B1  0266               	subwf	_gesture_lr_delta_,w
  9715  03B2                     u5315:	
  9716  03B2  1803               	skipnc
  9717  03B3  2BC1               	goto	l6192
  9718  03B4  0020               	movlb	0	; select bank0
  9719  03B5  0966               	comf	_gesture_lr_delta_,w
  9720  03B6  00A0               	movwf	??_decodeGesture
  9721  03B7  0967               	comf	_gesture_lr_delta_+1,w
  9722  03B8  00A1               	movwf	??_decodeGesture+1
  9723  03B9  0AA0               	incf	??_decodeGesture,f
  9724  03BA  1903               	skipnz
  9725  03BB  0AA1               	incf	??_decodeGesture+1,f
  9726  03BC  0820               	movf	??_decodeGesture,w
  9727  03BD  00A4               	movwf	_decodeGesture$1541
  9728  03BE  0821               	movf	??_decodeGesture+1,w
  9729  03BF  00A5               	movwf	_decodeGesture$1541+1
  9730  03C0  2BC6               	goto	l1135
  9731  03C1                     l6192:	
  9732  03C1  0020               	movlb	0	; select bank0
  9733  03C2  0867               	movf	_gesture_lr_delta_+1,w
  9734  03C3  00A5               	movwf	_decodeGesture$1541+1
  9735  03C4  0866               	movf	_gesture_lr_delta_,w
  9736  03C5  00A4               	movwf	_decodeGesture$1541
  9737  03C6                     l1135:	
  9738  03C6  0825               	movf	_decodeGesture$1541+1,w
  9739  03C7  3A80               	xorlw	128
  9740  03C8  00A0               	movwf	??_decodeGesture
  9741  03C9  0823               	movf	_decodeGesture$1540+1,w
  9742  03CA  3A80               	xorlw	128
  9743  03CB  0220               	subwf	??_decodeGesture,w
  9744  03CC  1D03               	skipz
  9745  03CD  2BD0               	goto	u5325
  9746  03CE  0822               	movf	_decodeGesture$1540,w
  9747  03CF  0224               	subwf	_decodeGesture$1541,w
  9748  03D0                     u5325:	
  9749  03D0  1C03               	btfss	3,0
  9750  03D1  2B5C               	goto	l6160
  9751  03D2  2B70               	goto	l6172
  9752  03D3                     l6198:	
  9753  03D3  0364               	decf	_gesture_ud_count_,w
  9754  03D4  0465               	iorwf	_gesture_ud_count_+1,w
  9755  03D5  1D03               	btfss	3,2
  9756  03D6  2C24               	goto	l6216
  9757  03D7  0A62               	incf	_gesture_lr_count_,w
  9758  03D8  1D03               	skipz
  9759  03D9  2C24               	goto	l6216
  9760  03DA  0A63               	incf	_gesture_lr_count_+1,w
  9761  03DB  1D03               	btfss	3,2
  9762  03DC  2C24               	goto	l6216
  9763                           
  9764                           ;APDS9960.c: 822:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9765  03DD  0869               	movf	_gesture_ud_delta_+1,w
  9766  03DE  3A80               	xorlw	128
  9767  03DF  00A0               	movwf	??_decodeGesture
  9768  03E0  3080               	movlw	128
  9769  03E1  0220               	subwf	??_decodeGesture,w
  9770  03E2  1D03               	skipz
  9771  03E3  2BE6               	goto	u5355
  9772  03E4  3001               	movlw	1
  9773  03E5  0268               	subwf	_gesture_ud_delta_,w
  9774  03E6                     u5355:	
  9775  03E6  1803               	skipnc
  9776  03E7  2BF5               	goto	l6206
  9777  03E8  0020               	movlb	0	; select bank0
  9778  03E9  0968               	comf	_gesture_ud_delta_,w
  9779  03EA  00A0               	movwf	??_decodeGesture
  9780  03EB  0969               	comf	_gesture_ud_delta_+1,w
  9781  03EC  00A1               	movwf	??_decodeGesture+1
  9782  03ED  0AA0               	incf	??_decodeGesture,f
  9783  03EE  1903               	skipnz
  9784  03EF  0AA1               	incf	??_decodeGesture+1,f
  9785  03F0  0820               	movf	??_decodeGesture,w
  9786  03F1  00A6               	movwf	_decodeGesture$1542
  9787  03F2  0821               	movf	??_decodeGesture+1,w
  9788  03F3  00A7               	movwf	_decodeGesture$1542+1
  9789  03F4  2BFA               	goto	l1143
  9790  03F5                     l6206:	
  9791  03F5  0020               	movlb	0	; select bank0
  9792  03F6  0869               	movf	_gesture_ud_delta_+1,w
  9793  03F7  00A7               	movwf	_decodeGesture$1542+1
  9794  03F8  0868               	movf	_gesture_ud_delta_,w
  9795  03F9  00A6               	movwf	_decodeGesture$1542
  9796  03FA                     l1143:	
  9797  03FA  0867               	movf	_gesture_lr_delta_+1,w
  9798  03FB  3A80               	xorlw	128
  9799  03FC  00A0               	movwf	??_decodeGesture
  9800  03FD  3080               	movlw	128
  9801  03FE  0220               	subwf	??_decodeGesture,w
  9802  03FF  1D03               	skipz
  9803  0400  2C03               	goto	u5365
  9804  0401  3001               	movlw	1
  9805  0402  0266               	subwf	_gesture_lr_delta_,w
  9806  0403                     u5365:	
  9807  0403  1803               	skipnc
  9808  0404  2C12               	goto	l6210
  9809  0405  0020               	movlb	0	; select bank0
  9810  0406  0966               	comf	_gesture_lr_delta_,w
  9811  0407  00A0               	movwf	??_decodeGesture
  9812  0408  0967               	comf	_gesture_lr_delta_+1,w
  9813  0409  00A1               	movwf	??_decodeGesture+1
  9814  040A  0AA0               	incf	??_decodeGesture,f
  9815  040B  1903               	skipnz
  9816  040C  0AA1               	incf	??_decodeGesture+1,f
  9817  040D  0820               	movf	??_decodeGesture,w
  9818  040E  00A8               	movwf	_decodeGesture$1543
  9819  040F  0821               	movf	??_decodeGesture+1,w
  9820  0410  00A9               	movwf	_decodeGesture$1543+1
  9821  0411  2C17               	goto	l1147
  9822  0412                     l6210:	
  9823  0412  0020               	movlb	0	; select bank0
  9824  0413  0867               	movf	_gesture_lr_delta_+1,w
  9825  0414  00A9               	movwf	_decodeGesture$1543+1
  9826  0415  0866               	movf	_gesture_lr_delta_,w
  9827  0416  00A8               	movwf	_decodeGesture$1543
  9828  0417                     l1147:	
  9829  0417  0829               	movf	_decodeGesture$1543+1,w
  9830  0418  3A80               	xorlw	128
  9831  0419  00A0               	movwf	??_decodeGesture
  9832  041A  0827               	movf	_decodeGesture$1542+1,w
  9833  041B  3A80               	xorlw	128
  9834  041C  0220               	subwf	??_decodeGesture,w
  9835  041D  1D03               	skipz
  9836  041E  2C21               	goto	u5375
  9837  041F  0826               	movf	_decodeGesture$1542,w
  9838  0420  0228               	subwf	_decodeGesture$1543,w
  9839  0421                     u5375:	
  9840  0421  1C03               	btfss	3,0
  9841  0422  2B66               	goto	l6166
  9842  0423  2B7C               	goto	l6178
  9843  0424                     l6216:	
  9844  0424  0A64               	incf	_gesture_ud_count_,w
  9845  0425  1D03               	skipz
  9846  0426  2C77               	goto	l6234
  9847  0427  0A65               	incf	_gesture_ud_count_+1,w
  9848  0428  1D03               	btfss	3,2
  9849  0429  2C77               	goto	l6234
  9850  042A  0A62               	incf	_gesture_lr_count_,w
  9851  042B  1D03               	skipz
  9852  042C  2C77               	goto	l6234
  9853  042D  0A63               	incf	_gesture_lr_count_+1,w
  9854  042E  1D03               	btfss	3,2
  9855  042F  2C77               	goto	l6234
  9856                           
  9857                           ;APDS9960.c: 828:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9858  0430  0869               	movf	_gesture_ud_delta_+1,w
  9859  0431  3A80               	xorlw	128
  9860  0432  00A0               	movwf	??_decodeGesture
  9861  0433  3080               	movlw	128
  9862  0434  0220               	subwf	??_decodeGesture,w
  9863  0435  1D03               	skipz
  9864  0436  2C39               	goto	u5405
  9865  0437  3001               	movlw	1
  9866  0438  0268               	subwf	_gesture_ud_delta_,w
  9867  0439                     u5405:	
  9868  0439  1803               	skipnc
  9869  043A  2C48               	goto	l6224
  9870  043B  0020               	movlb	0	; select bank0
  9871  043C  0968               	comf	_gesture_ud_delta_,w
  9872  043D  00A0               	movwf	??_decodeGesture
  9873  043E  0969               	comf	_gesture_ud_delta_+1,w
  9874  043F  00A1               	movwf	??_decodeGesture+1
  9875  0440  0AA0               	incf	??_decodeGesture,f
  9876  0441  1903               	skipnz
  9877  0442  0AA1               	incf	??_decodeGesture+1,f
  9878  0443  0820               	movf	??_decodeGesture,w
  9879  0444  00AA               	movwf	_decodeGesture$1544
  9880  0445  0821               	movf	??_decodeGesture+1,w
  9881  0446  00AB               	movwf	_decodeGesture$1544+1
  9882  0447  2C4D               	goto	l1155
  9883  0448                     l6224:	
  9884  0448  0020               	movlb	0	; select bank0
  9885  0449  0869               	movf	_gesture_ud_delta_+1,w
  9886  044A  00AB               	movwf	_decodeGesture$1544+1
  9887  044B  0868               	movf	_gesture_ud_delta_,w
  9888  044C  00AA               	movwf	_decodeGesture$1544
  9889  044D                     l1155:	
  9890  044D  0867               	movf	_gesture_lr_delta_+1,w
  9891  044E  3A80               	xorlw	128
  9892  044F  00A0               	movwf	??_decodeGesture
  9893  0450  3080               	movlw	128
  9894  0451  0220               	subwf	??_decodeGesture,w
  9895  0452  1D03               	skipz
  9896  0453  2C56               	goto	u5415
  9897  0454  3001               	movlw	1
  9898  0455  0266               	subwf	_gesture_lr_delta_,w
  9899  0456                     u5415:	
  9900  0456  1803               	skipnc
  9901  0457  2C65               	goto	l6228
  9902  0458  0020               	movlb	0	; select bank0
  9903  0459  0966               	comf	_gesture_lr_delta_,w
  9904  045A  00A0               	movwf	??_decodeGesture
  9905  045B  0967               	comf	_gesture_lr_delta_+1,w
  9906  045C  00A1               	movwf	??_decodeGesture+1
  9907  045D  0AA0               	incf	??_decodeGesture,f
  9908  045E  1903               	skipnz
  9909  045F  0AA1               	incf	??_decodeGesture+1,f
  9910  0460  0820               	movf	??_decodeGesture,w
  9911  0461  00AC               	movwf	_decodeGesture$1545
  9912  0462  0821               	movf	??_decodeGesture+1,w
  9913  0463  00AD               	movwf	_decodeGesture$1545+1
  9914  0464  2C6A               	goto	l1159
  9915  0465                     l6228:	
  9916  0465  0020               	movlb	0	; select bank0
  9917  0466  0867               	movf	_gesture_lr_delta_+1,w
  9918  0467  00AD               	movwf	_decodeGesture$1545+1
  9919  0468  0866               	movf	_gesture_lr_delta_,w
  9920  0469  00AC               	movwf	_decodeGesture$1545
  9921  046A                     l1159:	
  9922  046A  082D               	movf	_decodeGesture$1545+1,w
  9923  046B  3A80               	xorlw	128
  9924  046C  00A0               	movwf	??_decodeGesture
  9925  046D  082B               	movf	_decodeGesture$1544+1,w
  9926  046E  3A80               	xorlw	128
  9927  046F  0220               	subwf	??_decodeGesture,w
  9928  0470  1D03               	skipz
  9929  0471  2C74               	goto	u5425
  9930  0472  082A               	movf	_decodeGesture$1544,w
  9931  0473  022C               	subwf	_decodeGesture$1545,w
  9932  0474                     u5425:	
  9933  0474  1C03               	btfss	3,0
  9934  0475  2B5C               	goto	l6160
  9935  0476  2B7C               	goto	l6178
  9936  0477                     l6234:	
  9937  0477  0364               	decf	_gesture_ud_count_,w
  9938  0478  0465               	iorwf	_gesture_ud_count_+1,w
  9939  0479  1D03               	btfss	3,2
  9940  047A  2CC6               	goto	l6252
  9941  047B  0362               	decf	_gesture_lr_count_,w
  9942  047C  0463               	iorwf	_gesture_lr_count_+1,w
  9943  047D  1D03               	btfss	3,2
  9944  047E  2CC6               	goto	l6252
  9945                           
  9946                           ;APDS9960.c: 834:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  9947  047F  0869               	movf	_gesture_ud_delta_+1,w
  9948  0480  3A80               	xorlw	128
  9949  0481  00A0               	movwf	??_decodeGesture
  9950  0482  3080               	movlw	128
  9951  0483  0220               	subwf	??_decodeGesture,w
  9952  0484  1D03               	skipz
  9953  0485  2C88               	goto	u5455
  9954  0486  3001               	movlw	1
  9955  0487  0268               	subwf	_gesture_ud_delta_,w
  9956  0488                     u5455:	
  9957  0488  1803               	skipnc
  9958  0489  2C97               	goto	l6242
  9959  048A  0020               	movlb	0	; select bank0
  9960  048B  0968               	comf	_gesture_ud_delta_,w
  9961  048C  00A0               	movwf	??_decodeGesture
  9962  048D  0969               	comf	_gesture_ud_delta_+1,w
  9963  048E  00A1               	movwf	??_decodeGesture+1
  9964  048F  0AA0               	incf	??_decodeGesture,f
  9965  0490  1903               	skipnz
  9966  0491  0AA1               	incf	??_decodeGesture+1,f
  9967  0492  0820               	movf	??_decodeGesture,w
  9968  0493  00AE               	movwf	_decodeGesture$1546
  9969  0494  0821               	movf	??_decodeGesture+1,w
  9970  0495  00AF               	movwf	_decodeGesture$1546+1
  9971  0496  2C9C               	goto	l1167
  9972  0497                     l6242:	
  9973  0497  0020               	movlb	0	; select bank0
  9974  0498  0869               	movf	_gesture_ud_delta_+1,w
  9975  0499  00AF               	movwf	_decodeGesture$1546+1
  9976  049A  0868               	movf	_gesture_ud_delta_,w
  9977  049B  00AE               	movwf	_decodeGesture$1546
  9978  049C                     l1167:	
  9979  049C  0867               	movf	_gesture_lr_delta_+1,w
  9980  049D  3A80               	xorlw	128
  9981  049E  00A0               	movwf	??_decodeGesture
  9982  049F  3080               	movlw	128
  9983  04A0  0220               	subwf	??_decodeGesture,w
  9984  04A1  1D03               	skipz
  9985  04A2  2CA5               	goto	u5465
  9986  04A3  3001               	movlw	1
  9987  04A4  0266               	subwf	_gesture_lr_delta_,w
  9988  04A5                     u5465:	
  9989  04A5  1803               	skipnc
  9990  04A6  2CB4               	goto	l6246
  9991  04A7  0020               	movlb	0	; select bank0
  9992  04A8  0966               	comf	_gesture_lr_delta_,w
  9993  04A9  00A0               	movwf	??_decodeGesture
  9994  04AA  0967               	comf	_gesture_lr_delta_+1,w
  9995  04AB  00A1               	movwf	??_decodeGesture+1
  9996  04AC  0AA0               	incf	??_decodeGesture,f
  9997  04AD  1903               	skipnz
  9998  04AE  0AA1               	incf	??_decodeGesture+1,f
  9999  04AF  0820               	movf	??_decodeGesture,w
 10000  04B0  00B0               	movwf	_decodeGesture$1547
 10001  04B1  0821               	movf	??_decodeGesture+1,w
 10002  04B2  00B1               	movwf	_decodeGesture$1547+1
 10003  04B3  2CB9               	goto	l1171
 10004  04B4                     l6246:	
 10005  04B4  0020               	movlb	0	; select bank0
 10006  04B5  0867               	movf	_gesture_lr_delta_+1,w
 10007  04B6  00B1               	movwf	_decodeGesture$1547+1
 10008  04B7  0866               	movf	_gesture_lr_delta_,w
 10009  04B8  00B0               	movwf	_decodeGesture$1547
 10010  04B9                     l1171:	
 10011  04B9  0831               	movf	_decodeGesture$1547+1,w
 10012  04BA  3A80               	xorlw	128
 10013  04BB  00A0               	movwf	??_decodeGesture
 10014  04BC  082F               	movf	_decodeGesture$1546+1,w
 10015  04BD  3A80               	xorlw	128
 10016  04BE  0220               	subwf	??_decodeGesture,w
 10017  04BF  1D03               	skipz
 10018  04C0  2CC3               	goto	u5475
 10019  04C1  082E               	movf	_decodeGesture$1546,w
 10020  04C2  0230               	subwf	_decodeGesture$1547,w
 10021  04C3                     u5475:	
 10022  04C3  1C03               	btfss	3,0
 10023  04C4  2B66               	goto	l6166
 10024  04C5  2B70               	goto	l6172
 10025  04C6                     l6252:	
 10026                           
 10027                           ;APDS9960.c: 840:         return 0;
 10028  04C6  3000               	movlw	0
 10029  04C7  0008               	return
 10030  04C8                     l6256:	
 10031                           
 10032                           ;APDS9960.c: 843:     return 1;
 10033  04C8  3001               	movlw	1
 10034  04C9  0008               	return
 10035  04CA                     __end_of_decodeGesture:	
 10036                           
 10037                           	psect	text23
 10038  0F9C                     __ptext23:	
 10039 ;; *************** function _enableGestureSensor *****************
 10040 ;; Defined at:
 10041 ;;		line 409 in file "APDS9960.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  interrupts      1    wreg     _Bool 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  interrupts      1   17[BANK0 ] _Bool 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      _Bool 
 10048 ;; Registers used:
 10049 ;;		wreg, status,2, status,0, pclath, cstack
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;Total ram usage:        2 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; Hardware stack levels required when called:   11
 10062 ;; This function calls:
 10063 ;;		_enablePower
 10064 ;;		_resetGestureParameters
 10065 ;;		_setGestureIntEnable
 10066 ;;		_setGestureMode
 10067 ;;		_setLEDBoost
 10068 ;;		_setMode
 10069 ;;		_wireWriteDataByte
 10070 ;; This function is called by:
 10071 ;;		_main
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _enableGestureSensor
 10077  0F9C                     _enableGestureSensor:	
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
 10081                           ;enableGestureSensor@interrupts stored from wreg
 10082  0F9C  0020               	movlb	0	; select bank0
 10083  0F9D  00B1               	movwf	enableGestureSensor@interrupts
 10084                           
 10085                           ;APDS9960.c: 409: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 410: {;APDS9
      +                          960.c: 418:     resetGestureParameters();
 10086  0F9E  318A  2256  318F   	fcall	_resetGestureParameters
 10087                           
 10088                           ;APDS9960.c: 419:     if( !wireWriteDataByte(0x83, 0xFF) ) {
 10089  0FA1  30FF               	movlw	255
 10090  0FA2  0020               	movlb	0	; select bank0
 10091  0FA3  00B0               	movwf	??_enableGestureSensor
 10092  0FA4  0830               	movf	??_enableGestureSensor,w
 10093  0FA5  00A6               	movwf	wireWriteDataByte@val
 10094  0FA6  3083               	movlw	131
 10095  0FA7  318A  226E  318F   	fcall	_wireWriteDataByte
 10096  0FAA  0020               	movlb	0	; select bank0
 10097  0FAB  0826               	movf	?_wireWriteDataByte,w
 10098  0FAC  0427               	iorwf	?_wireWriteDataByte+1,w
 10099  0FAD  1903               	btfsc	3,2
 10100  0FAE  2FB2               	goto	l6882
 10101  0FAF  2FB4               	goto	l6886
 10102  0FB0                     l6900:	
 10103                           
 10104                           ;APDS9960.c: 429:         if( !setGestureIntEnable(1) ) {
 10105  0FB0  3001               	movlw	1
 10106  0FB1  2FCD               	goto	L8
 10107  0FB2                     l6882:	
 10108                           
 10109                           ;APDS9960.c: 420:         return 0;
 10110  0FB2  3000               	movlw	0
 10111  0FB3  0008               	return
 10112  0FB4                     l6886:	
 10113                           
 10114                           ;APDS9960.c: 422:     if( !wireWriteDataByte(0x8E, 0x89) ) {
 10115  0FB4  3089               	movlw	137
 10116  0FB5  00B0               	movwf	??_enableGestureSensor
 10117  0FB6  0830               	movf	??_enableGestureSensor,w
 10118  0FB7  00A6               	movwf	wireWriteDataByte@val
 10119  0FB8  308E               	movlw	142
 10120  0FB9  318A  226E  318F   	fcall	_wireWriteDataByte
 10121  0FBC  0020               	movlb	0	; select bank0
 10122  0FBD  0826               	movf	?_wireWriteDataByte,w
 10123  0FBE  0427               	iorwf	?_wireWriteDataByte+1,w
 10124  0FBF  1903               	btfsc	3,2
 10125  0FC0  2FB2               	goto	l6882
 10126                           
 10127                           ;APDS9960.c: 425:     if( !setLEDBoost(3) ) {
 10128  0FC1  3003               	movlw	3
 10129  0FC2  318C  24BC  318F   	fcall	_setLEDBoost
 10130  0FC5  3A00               	xorlw	0
 10131  0FC6  1903               	btfsc	3,2
 10132  0FC7  2FB2               	goto	l6882
 10133                           
 10134                           ;APDS9960.c: 428:     if( interrupts ) {
 10135  0FC8  0020               	movlb	0	; select bank0
 10136  0FC9  0831               	movf	enableGestureSensor@interrupts,w
 10137  0FCA  1D03               	btfss	3,2
 10138  0FCB  2FB0               	goto	l6900
 10139                           
 10140                           ;APDS9960.c: 433:         if( !setGestureIntEnable(0) ) {
 10141  0FCC  3000               	movlw	0
 10142  0FCD                     L8:	
 10143  0FCD  318C  2460  318F   	fcall	_setGestureIntEnable
 10144  0FD0  3A00               	xorlw	0
 10145  0FD1  1903               	btfsc	3,2
 10146  0FD2  2FB2               	goto	l6882
 10147                           
 10148                           ;APDS9960.c: 437:     if( !setGestureMode(1) ) {
 10149  0FD3  3001               	movlw	1
 10150  0FD4  318B  2347  318F   	fcall	_setGestureMode
 10151  0FD7  3A00               	xorlw	0
 10152  0FD8  1903               	btfsc	3,2
 10153  0FD9  2FB2               	goto	l6882
 10154                           
 10155                           ;APDS9960.c: 440:     if( !enablePower() ){
 10156  0FDA  3189  2184  318F   	fcall	_enablePower
 10157  0FDD  3A00               	xorlw	0
 10158  0FDE  1903               	btfsc	3,2
 10159  0FDF  2FB2               	goto	l6882
 10160                           
 10161                           ;APDS9960.c: 443:     if( !setMode(3, 1) ) {
 10162  0FE0  0020               	movlb	0	; select bank0
 10163  0FE1  01AB               	clrf	setMode@enable
 10164  0FE2  0AAB               	incf	setMode@enable,f
 10165  0FE3  3003               	movlw	3
 10166  0FE4  318E  2651  318F   	fcall	_setMode
 10167  0FE7  3A00               	xorlw	0
 10168  0FE8  1903               	btfsc	3,2
 10169  0FE9  2FB2               	goto	l6882
 10170                           
 10171                           ;APDS9960.c: 446:     if( !setMode(2, 1) ) {
 10172  0FEA  0020               	movlb	0	; select bank0
 10173  0FEB  01AB               	clrf	setMode@enable
 10174  0FEC  0AAB               	incf	setMode@enable,f
 10175  0FED  3002               	movlw	2
 10176  0FEE  318E  2651  318F   	fcall	_setMode
 10177  0FF1  3A00               	xorlw	0
 10178  0FF2  1903               	btfsc	3,2
 10179  0FF3  2FB2               	goto	l6882
 10180                           
 10181                           ;APDS9960.c: 449:     if( !setMode(6, 1) ) {
 10182  0FF4  0020               	movlb	0	; select bank0
 10183  0FF5  01AB               	clrf	setMode@enable
 10184  0FF6  0AAB               	incf	setMode@enable,f
 10185  0FF7  3006               	movlw	6
 10186  0FF8  318E  2651  318F   	fcall	_setMode
 10187  0FFB  3A00               	xorlw	0
 10188  0FFC  1903               	btfsc	3,2
 10189  0FFD  2FB2               	goto	l6882
 10190                           
 10191                           ;APDS9960.c: 453:     return 1;
 10192  0FFE  3001               	movlw	1
 10193  0FFF  0008               	return
 10194  1000                     __end_of_enableGestureSensor:	
 10195                           
 10196                           	psect	text24
 10197  0CBC                     __ptext24:	
 10198 ;; *************** function _setLEDBoost *****************
 10199 ;; Defined at:
 10200 ;;		line 484 in file "APDS9960.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  boost           1    wreg     unsigned char 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;  boost           1   13[BANK0 ] unsigned char 
 10205 ;;  val             1   12[BANK0 ] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      _Bool 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0, pclath, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  9871  02A4  0020               	movlb	0	; select bank0
  9872  02A5  0849               	movf	processGestureData@ud_delta,w
  9873  02A6  044A               	iorwf	processGestureData@ud_delta+1,w
  9874  02A7  1D03               	btfss	3,2
  9875  02A8  2AB3               	goto	l7357
  9876  02A9  084B               	movf	processGestureData@lr_delta,w
  9877  02AA  044C               	iorwf	processGestureData@lr_delta+1,w
  9878  02AB  1D03               	btfss	3,2
  9879  02AC  2AB3               	goto	l7357
  9880                           
  9881                           ;APDS9960.c: 760:                 gesture_near_count_++;
  9882  02AD  3001               	movlw	1
  9883  02AE  0023               	movlb	3	; select bank3
  9884  02AF  07E1               	addwf	_gesture_near_count_^(0+384),f
  9885  02B0  3000               	movlw	0
  9886  02B1  3DE2               	addwfc	(_gesture_near_count_+1)^(0+384),f
  9887                           
  9888                           ;APDS9960.c: 761:             } else if( (ud_delta != 0) || (lr_delta != 0) ) {
  9889  02B2  2AC0               	goto	l1067
  9890  02B3                     l7357:	
  9891  02B3  0849               	movf	processGestureData@ud_delta,w
  9892  02B4  044A               	iorwf	processGestureData@ud_delta+1,w
  9893  02B5  1D03               	btfss	3,2
  9894  02B6  2ABB               	goto	l7361
  9895  02B7  084B               	movf	processGestureData@lr_delta,w
  9896  02B8  044C               	iorwf	processGestureData@lr_delta+1,w
  9897  02B9  1903               	btfsc	3,2
  9898  02BA  2AC0               	goto	l1067
  9899  02BB                     l7361:	
  9900                           
  9901                           ;APDS9960.c: 762:                 gesture_far_count_++;
  9902  02BB  3001               	movlw	1
  9903  02BC  0023               	movlb	3	; select bank3
  9904  02BD  07DF               	addwf	_gesture_far_count_^(0+384),f
  9905  02BE  3000               	movlw	0
  9906  02BF  3DE0               	addwfc	(_gesture_far_count_+1)^(0+384),f
  9907  02C0                     l1067:	
  9908                           
  9909                           ;APDS9960.c: 765:             if( (gesture_near_count_ >= 10) && (gesture_far_count_ >= 
      +                          2) ) {
  9910  02C0  0023               	movlb	3	; select bank3
  9911  02C1  0862               	movf	(_gesture_near_count_+1)^(0+384),w
  9912  02C2  3A80               	xorlw	128
  9913  02C3  0020               	movlb	0	; select bank0
  9914  02C4  00AF               	movwf	??_processGestureData
  9915  02C5  3080               	movlw	128
  9916  02C6  022F               	subwf	??_processGestureData,w
  9917  02C7  1D03               	skipz
  9918  02C8  2ACC               	goto	u7015
  9919  02C9  300A               	movlw	10
  9920  02CA  0023               	movlb	3	; select bank3
  9921  02CB  0261               	subwf	_gesture_near_count_^(0+384),w
  9922  02CC                     u7015:	
  9923  02CC  1C03               	skipc
  9924  02CD  28A2               	goto	l7251
  9925  02CE  0023               	movlb	3	; select bank3
  9926  02CF  0860               	movf	(_gesture_far_count_+1)^(0+384),w
  9927  02D0  3A80               	xorlw	128
  9928  02D1  0020               	movlb	0	; select bank0
  9929  02D2  00AF               	movwf	??_processGestureData
  9930  02D3  3080               	movlw	128
  9931  02D4  022F               	subwf	??_processGestureData,w
  9932  02D5  1D03               	skipz
  9933  02D6  2ADA               	goto	u7025
  9934  02D7  3002               	movlw	2
  9935  02D8  0023               	movlb	3	; select bank3
  9936  02D9  025F               	subwf	_gesture_far_count_^(0+384),w
  9937  02DA                     u7025:	
  9938  02DA  1C03               	skipc
  9939  02DB  28A2               	goto	l7251
  9940                           
  9941                           ;APDS9960.c: 766:                 if( (ud_delta == 0) && (lr_delta == 0) ) {
  9942  02DC  0020               	movlb	0	; select bank0
  9943  02DD  0849               	movf	processGestureData@ud_delta,w
  9944  02DE  044A               	iorwf	processGestureData@ud_delta+1,w
  9945  02DF  1D03               	btfss	3,2
  9946  02E0  2AE7               	goto	l7371
  9947  02E1  084B               	movf	processGestureData@lr_delta,w
  9948  02E2  044C               	iorwf	processGestureData@lr_delta+1,w
  9949  02E3  1D03               	btfss	3,2
  9950  02E4  2AE7               	goto	l7371
  9951                           
  9952                           ;APDS9960.c: 767:                     gesture_state_ = NEAR_STATE;
  9953  02E5  3001               	movlw	1
  9954  02E6  2AF0               	goto	L4
  9955  02E7                     l7371:	
  9956                           ;APDS9960.c: 768:                 } else if( (ud_delta != 0) && (lr_delta != 0) ) {
  9957                           
  9958  02E7  0849               	movf	processGestureData@ud_delta,w
  9959  02E8  044A               	iorwf	processGestureData@ud_delta+1,w
  9960  02E9  1903               	btfsc	3,2
  9961  02EA  2AF4               	goto	l1073
  9962  02EB  084B               	movf	processGestureData@lr_delta,w
  9963  02EC  044C               	iorwf	processGestureData@lr_delta+1,w
  9964  02ED  1903               	btfsc	3,2
  9965  02EE  2AF4               	goto	l1073
  9966                           
  9967                           ;APDS9960.c: 769:                     gesture_state_ = FAR_STATE;
  9968  02EF  3002               	movlw	2
  9969  02F0                     L4:	
  9970  02F0  0023               	movlb	3	; select bank3
  9971  02F1  00DD               	movwf	_gesture_state_^(0+384)
  9972  02F2  3000               	movlw	0
  9973  02F3  00DE               	movwf	(_gesture_state_^(0+384)+1)
  9974  02F4                     l1073:	
  9975                           
  9976                           ;APDS9960.c: 771:                 return 1;
  9977  02F4  3001               	movlw	1
  9978  02F5  0008               	return
  9979  02F6                     l7379:	
  9980                           
  9981                           ;APDS9960.c: 775:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  9982  02F6  0020               	movlb	0	; select bank0
  9983  02F7  084A               	movf	processGestureData@ud_delta+1,w
  9984  02F8  3A80               	xorlw	128
  9985  02F9  00AF               	movwf	??_processGestureData
  9986  02FA  3080               	movlw	128
  9987  02FB  022F               	subwf	??_processGestureData,w
  9988  02FC  1D03               	skipz
  9989  02FD  2B00               	goto	u7075
  9990  02FE  3001               	movlw	1
  9991  02FF  0249               	subwf	processGestureData@ud_delta,w
  9992  0300                     u7075:	
  9993  0300  1803               	skipnc
  9994  0301  2B0F               	goto	l7383
  9995  0302  0020               	movlb	0	; select bank0
  9996  0303  0949               	comf	processGestureData@ud_delta,w
  9997  0304  00AF               	movwf	??_processGestureData
  9998  0305  094A               	comf	processGestureData@ud_delta+1,w
  9999  0306  00B0               	movwf	??_processGestureData+1
 10000  0307  0AAF               	incf	??_processGestureData,f
 10001  0308  1903               	skipnz
 10002  0309  0AB0               	incf	??_processGestureData+1,f
 10003  030A  082F               	movf	??_processGestureData,w
 10004  030B  00BD               	movwf	_processGestureData$1443
 10005  030C  0830               	movf	??_processGestureData+1,w
 10006  030D  00BE               	movwf	_processGestureData$1443+1
 10007  030E  2B14               	goto	l1080
 10008  030F                     l7383:	
 10009  030F  0020               	movlb	0	; select bank0
 10010  0310  084A               	movf	processGestureData@ud_delta+1,w
 10011  0311  00BE               	movwf	_processGestureData$1443+1
 10012  0312  0849               	movf	processGestureData@ud_delta,w
 10013  0313  00BD               	movwf	_processGestureData$1443
 10014  0314                     l1080:	
 10015  0314  083E               	movf	_processGestureData$1443+1,w
 10016  0315  3A80               	xorlw	128
 10017  0316  00AF               	movwf	??_processGestureData
 10018  0317  3080               	movlw	128
 10019  0318  022F               	subwf	??_processGestureData,w
 10020  0319  1D03               	skipz
 10021  031A  2B1D               	goto	u7085
 10022  031B  3014               	movlw	20
 10023  031C  023D               	subwf	_processGestureData$1443,w
 10024  031D                     u7085:	
 10025  031D  1803               	skipnc
 10026  031E  28A2               	goto	l7251
 10027  031F  0020               	movlb	0	; select bank0
 10028  0320  084C               	movf	processGestureData@lr_delta+1,w
 10029  0321  3A80               	xorlw	128
 10030  0322  00AF               	movwf	??_processGestureData
 10031  0323  3080               	movlw	128
 10032  0324  022F               	subwf	??_processGestureData,w
 10033  0325  1D03               	skipz
 10034  0326  2B29               	goto	u7095
 10035  0327  3001               	movlw	1
 10036  0328  024B               	subwf	processGestureData@lr_delta,w
 10037  0329                     u7095:	
 10038  0329  1803               	skipnc
 10039  032A  2B38               	goto	l7389
 10040  032B  0020               	movlb	0	; select bank0
 10041  032C  094B               	comf	processGestureData@lr_delta,w
 10042  032D  00AF               	movwf	??_processGestureData
 10043  032E  094C               	comf	processGestureData@lr_delta+1,w
 10044  032F  00B0               	movwf	??_processGestureData+1
 10045  0330  0AAF               	incf	??_processGestureData,f
 10046  0331  1903               	skipnz
 10047  0332  0AB0               	incf	??_processGestureData+1,f
 10048  0333  082F               	movf	??_processGestureData,w
 10049  0334  00BF               	movwf	_processGestureData$1444
 10050  0335  0830               	movf	??_processGestureData+1,w
 10051  0336  00C0               	movwf	_processGestureData$1444+1
 10052  0337  2B3D               	goto	l1084
 10053  0338                     l7389:	
 10054  0338  0020               	movlb	0	; select bank0
 10055  0339  084C               	movf	processGestureData@lr_delta+1,w
 10056  033A  00C0               	movwf	_processGestureData$1444+1
 10057  033B  084B               	movf	processGestureData@lr_delta,w
 10058  033C  00BF               	movwf	_processGestureData$1444
 10059  033D                     l1084:	
 10060  033D  0840               	movf	_processGestureData$1444+1,w
 10061  033E  3A80               	xorlw	128
 10062  033F  00AF               	movwf	??_processGestureData
 10063  0340  3080               	movlw	128
 10064  0341  022F               	subwf	??_processGestureData,w
 10065  0342  1D03               	skipz
 10066  0343  2B46               	goto	u7105
 10067  0344  3014               	movlw	20
 10068  0345  023F               	subwf	_processGestureData$1444,w
 10069  0346                     u7105:	
 10070  0346  1803               	skipnc
 10071  0347  28A2               	goto	l7251
 10072                           
 10073                           ;APDS9960.c: 776: ;APDS9960.c: 778:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
 10074  0348  0020               	movlb	0	; select bank0
 10075  0349  0849               	movf	processGestureData@ud_delta,w
 10076  034A  044A               	iorwf	processGestureData@ud_delta+1,w
 10077  034B  1D03               	btfss	3,2
 10078  034C  2B56               	goto	l1085
 10079  034D  084B               	movf	processGestureData@lr_delta,w
 10080  034E  044C               	iorwf	processGestureData@lr_delta+1,w
 10081  034F  1D03               	btfss	3,2
 10082  0350  2B56               	goto	l1085
 10083                           
 10084                           ;APDS9960.c: 779:                 gesture_near_count_++;
 10085  0351  3001               	movlw	1
 10086  0352  0023               	movlb	3	; select bank3
 10087  0353  07E1               	addwf	_gesture_near_count_^(0+384),f
 10088  0354  3000               	movlw	0
 10089  0355  3DE2               	addwfc	(_gesture_near_count_+1)^(0+384),f
 10090  0356                     l1085:	
 10091                           ;APDS9960.c: 780:             }
 10092                           
 10093                           
 10094                           ;APDS9960.c: 782:             if( gesture_near_count_ >= 10 ) {
 10095  0356  0023               	movlb	3	; select bank3
 10096  0357  0862               	movf	(_gesture_near_count_+1)^(0+384),w
 10097  0358  3A80               	xorlw	128
 10098  0359  0020               	movlb	0	; select bank0
 10099  035A  00AF               	movwf	??_processGestureData
 10100  035B  3080               	movlw	128
 10101  035C  022F               	subwf	??_processGestureData,w
 10102  035D  1D03               	skipz
 10103  035E  2B62               	goto	u7135
 10104  035F  300A               	movlw	10
 10105  0360  0023               	movlb	3	; select bank3
 10106  0361  0261               	subwf	_gesture_near_count_^(0+384),w
 10107  0362                     u7135:	
 10108  0362  1C03               	skipc
 10109  0363  28A2               	goto	l7251
 10110                           
 10111                           ;APDS9960.c: 783:                 gesture_ud_count_ = 0;
 10112  0364  0021               	movlb	1	; select bank1
 10113  0365  01EA               	clrf	_gesture_ud_count_^(0+128)
 10114  0366  01EB               	clrf	(_gesture_ud_count_+1)^(0+128)
 10115                           
 10116                           ;APDS9960.c: 784:                 gesture_lr_count_ = 0;
 10117  0367  01E8               	clrf	_gesture_lr_count_^(0+128)
 10118  0368  01E9               	clrf	(_gesture_lr_count_+1)^(0+128)
 10119                           
 10120                           ;APDS9960.c: 785:                 gesture_ud_delta_ = 0;
 10121  0369  01F2               	clrf	_gesture_ud_delta_
 10122  036A  01F3               	clrf	_gesture_ud_delta_+1
 10123                           
 10124                           ;APDS9960.c: 786:                 gesture_lr_delta_ = 0;
 10125  036B  01F0               	clrf	_gesture_lr_delta_
 10126  036C  01F1               	clrf	_gesture_lr_delta_+1
 10127  036D  28A2               	goto	l7251
 10128  036E                     __end_of_processGestureData:	
 10129                           
 10130                           	psect	text19
 10131  13BC                     __ptext19:	
 10132 ;; *************** function ___wmul *****************
 10133 ;; Defined at:
 10134 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10137 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  product         2    4[BANK0 ] unsigned int 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  2    0[BANK0 ] unsigned int 
 10142 ;; Registers used:
 10143 ;;		wreg, status,2, status,0
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;Total ram usage:        6 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    5
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_processGestureData
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           
 10164                           ;psect for function ___wmul
 10165  13BC                     ___wmul:	
 10166                           
 10167                           ;incstack = 0
 10168                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10169  13BC  0020               	movlb	0	; select bank0
 10170  13BD  01A4               	clrf	___wmul@product
 10171  13BE  01A5               	clrf	___wmul@product+1
 10172  13BF                     l7143:	
 10173  13BF  1C20               	btfss	___wmul@multiplier,0
 10174  13C0  2BC5               	goto	l1690
 10175  13C1  0822               	movf	___wmul@multiplicand,w
 10176  13C2  07A4               	addwf	___wmul@product,f
 10177  13C3  0823               	movf	___wmul@multiplicand+1,w
 10178  13C4  3DA5               	addwfc	___wmul@product+1,f
 10179  13C5                     l1690:	
 10180  13C5  3001               	movlw	1
 10181  13C6                     u6575:	
 10182  13C6  35A2               	lslf	___wmul@multiplicand,f
 10183  13C7  0DA3               	rlf	___wmul@multiplicand+1,f
 10184  13C8  0B89               	decfsz	9,f
 10185  13C9  2BC6               	goto	u6575
 10186  13CA  3001               	movlw	1
 10187  13CB                     u6585:	
 10188  13CB  36A1               	lsrf	___wmul@multiplier+1,f
 10189  13CC  0CA0               	rrf	___wmul@multiplier,f
 10190  13CD  0B89               	decfsz	9,f
 10191  13CE  2BCB               	goto	u6585
 10192  13CF  0820               	movf	___wmul@multiplier,w
 10193  13D0  0421               	iorwf	___wmul@multiplier+1,w
 10194  13D1  1D03               	btfss	3,2
 10195  13D2  2BBF               	goto	l7143
 10196  13D3  0825               	movf	___wmul@product+1,w
 10197  13D4  00A1               	movwf	?___wmul+1
 10198  13D5  0824               	movf	___wmul@product,w
 10199  13D6  00A0               	movwf	?___wmul
 10200  13D7  0008               	return
 10201  13D8                     __end_of___wmul:	
 10202                           
 10203                           	psect	text20
 10204  09F9                     __ptext20:	
 10205 ;; *************** function ___awdiv *****************
 10206 ;; Defined at:
 10207 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  divisor         2    6[BANK0 ] int 
 10210 ;;  dividend        2    8[BANK0 ] int 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;  quotient        2   13[BANK0 ] int 
 10213 ;;  sign            1   12[BANK0 ] unsigned char 
 10214 ;;  counter         1   11[BANK0 ] unsigned char 
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  2    6[BANK0 ] int 
 10217 ;; Registers used:
 10218 ;;		wreg, status,2, status,0
 10219 ;; Tracked objects:
 10220 ;;		On entry : 0/0
 10221 ;;		On exit  : 0/0
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 10224 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
 10225 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
 10226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10218 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
 10227 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10219 ;;Total ram usage:        4 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    8
 10222 ;; This function calls:
 10223 ;;		_wireReadDataByte
 10224 ;;		_wireWriteDataByte
 10225 ;; This function is called by:
 10226 ;;		_enableGestureSensor
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           
 10231                           ;psect for function _setLEDBoost
 10232  0CBC                     _setLEDBoost:	
 10233                           
 10234                           ;incstack = 0
 10235                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
 10236                           ;setLEDBoost@boost stored from wreg
 10237  0CBC  0020               	movlb	0	; select bank0
 10238  0CBD  00AD               	movwf	setLEDBoost@boost
 10239                           
 10240                           ;APDS9960.c: 484: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 485: {;APDS9960.c: 486:  
      +                             uint8_t val;;APDS9960.c: 489:     val=wireReadDataByte(0x90);
 10241  0CBE  3090               	movlw	144
 10242  0CBF  318A  22FD  318C   	fcall	_wireReadDataByte
 10243  0CC2  0020               	movlb	0	; select bank0
 10244  0CC3  00AA               	movwf	??_setLEDBoost
 10245  0CC4  082A               	movf	??_setLEDBoost,w
 10246  0CC5  00AC               	movwf	setLEDBoost@val
 10247                           
 10248                           ;APDS9960.c: 492:     boost &= 0b00000011;
 10249  0CC6  3003               	movlw	3
 10250  0CC7  00AA               	movwf	??_setLEDBoost
 10251  0CC8  082A               	movf	??_setLEDBoost,w
 10252  0CC9  05AD               	andwf	setLEDBoost@boost,f
 10253                           
 10254                           ;APDS9960.c: 493:     boost = boost << 4;
 10255  0CCA  082D               	movf	setLEDBoost@boost,w
 10256  0CCB  00AA               	movwf	??_setLEDBoost
 10257  0CCC  3003               	movlw	3
 10258  0CCD                     u5765:	
 10259  0CCD  35AA               	lslf	??_setLEDBoost,f
 10260  0CCE  3EFF               	addlw	-1
 10261  0CCF  1D03               	skipz
 10262  0CD0  2CCD               	goto	u5765
 10263  0CD1  352A               	lslf	??_setLEDBoost,w
 10264  0CD2  00AB               	movwf	??_setLEDBoost+1
 10265  0CD3  082B               	movf	??_setLEDBoost+1,w
 10266  0CD4  00AD               	movwf	setLEDBoost@boost
 10267                           
 10268                           ;APDS9960.c: 494:     val &= 0b11001111;
 10269  0CD5  30CF               	movlw	207
 10270  0CD6  00AA               	movwf	??_setLEDBoost
 10271  0CD7  082A               	movf	??_setLEDBoost,w
 10272  0CD8  05AC               	andwf	setLEDBoost@val,f
 10273                           
 10274                           ;APDS9960.c: 495:     val |= boost;
 10275  0CD9  082D               	movf	setLEDBoost@boost,w
 10276  0CDA  00AA               	movwf	??_setLEDBoost
 10277  0CDB  082A               	movf	??_setLEDBoost,w
 10278  0CDC  04AC               	iorwf	setLEDBoost@val,f
 10279                           
 10280                           ;APDS9960.c: 498:     if( !wireWriteDataByte(0x90, val) ) {
 10281  0CDD  082C               	movf	setLEDBoost@val,w
 10282  0CDE  00AA               	movwf	??_setLEDBoost
 10283  0CDF  082A               	movf	??_setLEDBoost,w
 10284  0CE0  00A6               	movwf	wireWriteDataByte@val
 10285  0CE1  3090               	movlw	144
 10286  0CE2  318A  226E  318C   	fcall	_wireWriteDataByte
 10287  0CE5  0020               	movlb	0	; select bank0
 10288  0CE6  0826               	movf	?_wireWriteDataByte,w
 10289  0CE7  0427               	iorwf	?_wireWriteDataByte+1,w
 10290  0CE8  1D03               	btfss	3,2
 10291  0CE9  2CEC               	goto	l6654
 10292                           
 10293                           ;APDS9960.c: 499:         return 0;
 10294  0CEA  3000               	movlw	0
 10295  0CEB  0008               	return
 10296  0CEC                     l6654:	
 10297                           
 10298                           ;APDS9960.c: 502:     return 1;
 10299  0CEC  3001               	movlw	1
 10300  0CED  0008               	return
 10301  0CEE                     __end_of_setLEDBoost:	
 10302                           
 10303                           	psect	text25
 10304  0B47                     __ptext25:	
 10305 ;; *************** function _setGestureMode *****************
 10306 ;; Defined at:
 10307 ;;		line 506 in file "APDS9960.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  mode            1    wreg     unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  mode            1   11[BANK0 ] unsigned char 
 10312 ;;  val             1   12[BANK0 ] unsigned char 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      _Bool 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0, pclath, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 10228 ;;Total ram usage:        9 bytes
 10229 ;; Hardware stack levels used:    1
 10230 ;; Hardware stack levels required when called:    5
 10231 ;; This function calls:
 10232 ;;		Nothing
 10233 ;; This function is called by:
 10234 ;;		_processGestureData
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           
 10239                           ;psect for function ___awdiv
 10240  09F9                     ___awdiv:	
 10241                           
 10242                           ;incstack = 0
 10243                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10244  09F9  0020               	movlb	0	; select bank0
 10245  09FA  01AC               	clrf	___awdiv@sign
 10246  09FB  1FA7               	btfss	___awdiv@divisor+1,7
 10247  09FC  2A04               	goto	l4909
 10248  09FD  09A6               	comf	___awdiv@divisor,f
 10249  09FE  09A7               	comf	___awdiv@divisor+1,f
 10250  09FF  0AA6               	incf	___awdiv@divisor,f
 10251  0A00  1903               	skipnz
 10252  0A01  0AA7               	incf	___awdiv@divisor+1,f
 10253  0A02  01AC               	clrf	___awdiv@sign
 10254  0A03  0AAC               	incf	___awdiv@sign,f
 10255  0A04                     l4909:	
 10256  0A04  1FA9               	btfss	___awdiv@dividend+1,7
 10257  0A05  2A0F               	goto	l4915
 10258  0A06  09A8               	comf	___awdiv@dividend,f
 10259  0A07  09A9               	comf	___awdiv@dividend+1,f
 10260  0A08  0AA8               	incf	___awdiv@dividend,f
 10261  0A09  1903               	skipnz
 10262  0A0A  0AA9               	incf	___awdiv@dividend+1,f
 10263  0A0B  3001               	movlw	1
 10264  0A0C  00AA               	movwf	??___awdiv
 10265  0A0D  082A               	movf	??___awdiv,w
 10266  0A0E  06AC               	xorwf	___awdiv@sign,f
 10267  0A0F                     l4915:	
 10268  0A0F  01AD               	clrf	___awdiv@quotient
 10269  0A10  01AE               	clrf	___awdiv@quotient+1
 10270  0A11  0826               	movf	___awdiv@divisor,w
 10271  0A12  0427               	iorwf	___awdiv@divisor+1,w
 10272  0A13  1903               	btfsc	3,2
 10273  0A14  2A3E               	goto	l4937
 10274  0A15  01AB               	clrf	___awdiv@counter
 10275  0A16  0AAB               	incf	___awdiv@counter,f
 10276  0A17                     l4925:	
 10277  0A17  1BA7               	btfsc	___awdiv@divisor+1,7
 10278  0A18  2A23               	goto	l4927
 10279  0A19  3001               	movlw	1
 10280  0A1A                     u3665:	
 10281  0A1A  35A6               	lslf	___awdiv@divisor,f
 10282  0A1B  0DA7               	rlf	___awdiv@divisor+1,f
 10283  0A1C  0B89               	decfsz	9,f
 10284  0A1D  2A1A               	goto	u3665
 10285  0A1E  3001               	movlw	1
 10286  0A1F  00AA               	movwf	??___awdiv
 10287  0A20  082A               	movf	??___awdiv,w
 10288  0A21  07AB               	addwf	___awdiv@counter,f
 10289  0A22  2A17               	goto	l4925
 10290  0A23                     l4927:	
 10291  0A23  3001               	movlw	1
 10292  0A24                     u3685:	
 10293  0A24  35AD               	lslf	___awdiv@quotient,f
 10294  0A25  0DAE               	rlf	___awdiv@quotient+1,f
 10295  0A26  0B89               	decfsz	9,f
 10296  0A27  2A24               	goto	u3685
 10297  0A28  0827               	movf	___awdiv@divisor+1,w
 10298  0A29  0229               	subwf	___awdiv@dividend+1,w
 10299  0A2A  1D03               	skipz
 10300  0A2B  2A2E               	goto	u3695
 10301  0A2C  0826               	movf	___awdiv@divisor,w
 10302  0A2D  0228               	subwf	___awdiv@dividend,w
 10303  0A2E                     u3695:	
 10304  0A2E  1C03               	skipc
 10305  0A2F  2A35               	goto	l4933
 10306  0A30  0826               	movf	___awdiv@divisor,w
 10307  0A31  02A8               	subwf	___awdiv@dividend,f
 10308  0A32  0827               	movf	___awdiv@divisor+1,w
 10309  0A33  3BA9               	subwfb	___awdiv@dividend+1,f
 10310  0A34  142D               	bsf	___awdiv@quotient,0
 10311  0A35                     l4933:	
 10312  0A35  3001               	movlw	1
 10313  0A36                     u3705:	
 10314  0A36  36A7               	lsrf	___awdiv@divisor+1,f
 10315  0A37  0CA6               	rrf	___awdiv@divisor,f
 10316  0A38  0B89               	decfsz	9,f
 10317  0A39  2A36               	goto	u3705
 10318  0A3A  3001               	movlw	1
 10319  0A3B  02AB               	subwf	___awdiv@counter,f
 10320  0A3C  1D03               	btfss	3,2
 10321  0A3D  2A23               	goto	l4927
 10322  0A3E                     l4937:	
 10323  0A3E  082C               	movf	___awdiv@sign,w
 10324  0A3F  1903               	btfsc	3,2
 10325  0A40  2A46               	goto	l4941
 10326  0A41  09AD               	comf	___awdiv@quotient,f
 10327  0A42  09AE               	comf	___awdiv@quotient+1,f
 10328  0A43  0AAD               	incf	___awdiv@quotient,f
 10329  0A44  1903               	skipnz
 10330  0A45  0AAE               	incf	___awdiv@quotient+1,f
 10331  0A46                     l4941:	
 10332  0A46  082E               	movf	___awdiv@quotient+1,w
 10333  0A47  00A7               	movwf	?___awdiv+1
 10334  0A48  082D               	movf	___awdiv@quotient,w
 10335  0A49  00A6               	movwf	?___awdiv
 10336  0A4A  0008               	return
 10337  0A4B                     __end_of___awdiv:	
 10338                           
 10339                           	psect	text21
 10340  1268                     __ptext21:	
 10341 ;; *************** function _isGestureAvailable *****************
 10342 ;; Defined at:
 10343 ;;		line 537 in file "APDS9960.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  val             1   10[BANK0 ] unsigned char 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      _Bool 
 10350 ;; Registers used:
 10351 ;;		wreg, status,2, status,0, pclath, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
 10358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
 10359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
 10360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10326 ;;Total ram usage:        3 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    8
 10329 ;; This function calls:
 10330 ;;		_wireReadDataByte
 10331 ;;		_wireWriteDataByte
 10332 ;; This function is called by:
 10333 ;;		_enableGestureSensor
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           
 10338                           ;psect for function _setGestureMode
 10339  0B47                     _setGestureMode:	
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
 10343                           ;setGestureMode@mode stored from wreg
 10344  0B47  0020               	movlb	0	; select bank0
 10345  0B48  00AB               	movwf	setGestureMode@mode
 10346                           
 10347                           ;APDS9960.c: 506: _Bool setGestureMode(uint8_t mode);APDS9960.c: 507: {;APDS9960.c: 508:
      +                               uint8_t val;;APDS9960.c: 511:     val = wireReadDataByte(0xAB);
 10348  0B49  30AB               	movlw	171
 10349  0B4A  318A  22FD  318B   	fcall	_wireReadDataByte
 10350  0B4D  0020               	movlb	0	; select bank0
 10351  0B4E  00AA               	movwf	??_setGestureMode
 10352  0B4F  082A               	movf	??_setGestureMode,w
 10353  0B50  00AC               	movwf	setGestureMode@val
 10354                           
 10355                           ;APDS9960.c: 514:     mode &= 0b00000001;
 10356  0B51  3001               	movlw	1
 10357  0B52  00AA               	movwf	??_setGestureMode
 10358  0B53  082A               	movf	??_setGestureMode,w
 10359  0B54  05AB               	andwf	setGestureMode@mode,f
 10360                           
 10361                           ;APDS9960.c: 515:     val &= 0b11111110;
 10362  0B55  30FE               	movlw	254
 10363  0B56  00AA               	movwf	??_setGestureMode
 10364  0B57  082A               	movf	??_setGestureMode,w
 10365  0B58  05AC               	andwf	setGestureMode@val,f
 10366                           
 10367                           ;APDS9960.c: 516:     val |= mode;
 10368  0B59  082B               	movf	setGestureMode@mode,w
 10369  0B5A  00AA               	movwf	??_setGestureMode
 10370  0B5B  082A               	movf	??_setGestureMode,w
 10371  0B5C  04AC               	iorwf	setGestureMode@val,f
 10372                           
 10373                           ;APDS9960.c: 519:     if( !wireWriteDataByte(0xAB, val) ) {
 10374  0B5D  082C               	movf	setGestureMode@val,w
 10375  0B5E  00AA               	movwf	??_setGestureMode
 10376  0B5F  082A               	movf	??_setGestureMode,w
 10377  0B60  00A6               	movwf	wireWriteDataByte@val
 10378  0B61  30AB               	movlw	171
 10379  0B62  318A  226E  318B   	fcall	_wireWriteDataByte
 10380  0B65  0020               	movlb	0	; select bank0
 10381  0B66  0826               	movf	?_wireWriteDataByte,w
 10382  0B67  0427               	iorwf	?_wireWriteDataByte+1,w
 10383  0B68  1D03               	btfss	3,2
 10384  0B69  2B6C               	goto	l6672
 10385                           
 10386                           ;APDS9960.c: 520:         return 0;
 10387  0B6A  3000               	movlw	0
 10388  0B6B  0008               	return
 10389  0B6C                     l6672:	
 10390                           
 10391                           ;APDS9960.c: 523:     return 1;
 10392  0B6C  3001               	movlw	1
 10393  0B6D  0008               	return
 10394  0B6E                     __end_of_setGestureMode:	
 10395                           
 10396                           	psect	text26
 10397  0C60                     __ptext26:	
 10398 ;; *************** function _setGestureIntEnable *****************
 10399 ;; Defined at:
 10400 ;;		line 387 in file "APDS9960.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  enable          1    wreg     unsigned char 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  enable          1   12[BANK0 ] unsigned char 
 10405 ;;  val             1   11[BANK0 ] unsigned char 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      _Bool 
 10408 ;; Registers used:
 10409 ;;		wreg, status,2, status,0, pclath, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 10361 ;;Total ram usage:        2 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    8
 10364 ;; This function calls:
 10365 ;;		_wireReadDataByte
 10366 ;; This function is called by:
 10367 ;;		_main
 10368 ;;		_readGesture
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           
 10373                           ;psect for function _isGestureAvailable
 10374  1268                     _isGestureAvailable:	
 10375                           
 10376                           ;APDS9960.c: 539:     uint8_t val;;APDS9960.c: 542:     val=wireReadDataByte(0xAF);
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
 10380  1268  30AF               	movlw	175
 10381  1269  3194  2455  3192   	fcall	_wireReadDataByte
 10382  126C  0020               	movlb	0	; select bank0
 10383  126D  00A9               	movwf	??_isGestureAvailable
 10384  126E  0829               	movf	??_isGestureAvailable,w
 10385  126F  00AA               	movwf	isGestureAvailable@val
 10386                           
 10387                           ;APDS9960.c: 545:     val &= 0b00000001;
 10388  1270  3001               	movlw	1
 10389  1271  00A9               	movwf	??_isGestureAvailable
 10390  1272  0829               	movf	??_isGestureAvailable,w
 10391  1273  05AA               	andwf	isGestureAvailable@val,f
 10392                           
 10393                           ;APDS9960.c: 548:     if( val == 1) {
 10394  1274  032A               	decf	isGestureAvailable@val,w
 10395  1275  1D03               	btfss	3,2
 10396  1276  2A79               	goto	l7167
 10397                           
 10398                           ;APDS9960.c: 549:         return 1;
 10399  1277  3001               	movlw	1
 10400  1278  0008               	return
 10401  1279                     l7167:	
 10402                           
 10403                           ;APDS9960.c: 551:         return 0;
 10404  1279  3000               	movlw	0
 10405  127A  0008               	return
 10406  127B                     __end_of_isGestureAvailable:	
 10407                           
 10408                           	psect	text22
 10409  036E                     __ptext22:	
 10410 ;; *************** function _decodeGesture *****************
 10411 ;; Defined at:
 10412 ;;		line 795 in file "APDS9960.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      _Bool 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 10415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
=======
 10427 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
=======
 10428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10418 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
 10429 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10419 ;;Total ram usage:        3 bytes
 10420 ;; Hardware stack levels used:    1
 10421 ;; Hardware stack levels required when called:    8
 10422 ;; This function calls:
 10423 ;;		_wireReadDataByte
 10424 ;;		_wireWriteDataByte
 10425 ;; This function is called by:
 10426 ;;		_initialize
 10427 ;;		_enableGestureSensor
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _setGestureIntEnable
 10433  0C60                     _setGestureIntEnable:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
 10437                           ;setGestureIntEnable@enable stored from wreg
 10438  0C60  0020               	movlb	0	; select bank0
 10439  0C61  00AC               	movwf	setGestureIntEnable@enable
 10440                           
 10441                           ;APDS9960.c: 387: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 388: {;APDS9960.
      +                          c: 389:     uint8_t val;;APDS9960.c: 392:     val = wireReadDataByte(0xAB);
 10442  0C62  30AB               	movlw	171
 10443  0C63  318A  22FD  318C   	fcall	_wireReadDataByte
 10444  0C66  0020               	movlb	0	; select bank0
 10445  0C67  00AA               	movwf	??_setGestureIntEnable
 10446  0C68  082A               	movf	??_setGestureIntEnable,w
 10447  0C69  00AB               	movwf	setGestureIntEnable@val
 10448                           
 10449                           ;APDS9960.c: 395:     enable &= 0b00000001;
 10450  0C6A  3001               	movlw	1
 10451  0C6B  00AA               	movwf	??_setGestureIntEnable
 10452  0C6C  082A               	movf	??_setGestureIntEnable,w
 10453  0C6D  05AC               	andwf	setGestureIntEnable@enable,f
 10454                           
 10455                           ;APDS9960.c: 396:     enable = enable << 1;
 10456  0C6E  352C               	lslf	setGestureIntEnable@enable,w
 10457  0C6F  00AA               	movwf	??_setGestureIntEnable
 10458  0C70  082A               	movf	??_setGestureIntEnable,w
 10459  0C71  00AC               	movwf	setGestureIntEnable@enable
 10460                           
 10461                           ;APDS9960.c: 397:     val &= 0b11111101;
 10462  0C72  30FD               	movlw	253
 10463  0C73  00AA               	movwf	??_setGestureIntEnable
 10464  0C74  082A               	movf	??_setGestureIntEnable,w
 10465  0C75  05AB               	andwf	setGestureIntEnable@val,f
 10466                           
 10467                           ;APDS9960.c: 398:     val |= enable;
 10468  0C76  082C               	movf	setGestureIntEnable@enable,w
 10469  0C77  00AA               	movwf	??_setGestureIntEnable
 10470  0C78  082A               	movf	??_setGestureIntEnable,w
 10471  0C79  04AB               	iorwf	setGestureIntEnable@val,f
 10472                           
 10473                           ;APDS9960.c: 401:     if( !wireWriteDataByte(0xAB, val) ) {
 10474  0C7A  082B               	movf	setGestureIntEnable@val,w
 10475  0C7B  00AA               	movwf	??_setGestureIntEnable
 10476  0C7C  082A               	movf	??_setGestureIntEnable,w
 10477  0C7D  00A6               	movwf	wireWriteDataByte@val
 10478  0C7E  30AB               	movlw	171
 10479  0C7F  318A  226E  318C   	fcall	_wireWriteDataByte
 10480  0C82  0020               	movlb	0	; select bank0
 10481  0C83  0826               	movf	?_wireWriteDataByte,w
 10482  0C84  0427               	iorwf	?_wireWriteDataByte+1,w
 10483  0C85  1D03               	btfss	3,2
 10484  0C86  2C89               	goto	l6636
 10485                           
 10486                           ;APDS9960.c: 402:         return 0;
 10487  0C87  3000               	movlw	0
 10488  0C88  0008               	return
 10489  0C89                     l6636:	
 10490                           
 10491                           ;APDS9960.c: 405:     return 1;
 10492  0C89  3001               	movlw	1
 10493  0C8A  0008               	return
 10494  0C8B                     __end_of_setGestureIntEnable:	
 10495                           
 10496                           	psect	text27
 10497  0A56                     __ptext27:	
 10498 ;; *************** function _resetGestureParameters *****************
 10499 ;; Defined at:
 10500 ;;		line 457 in file "APDS9960.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;		None
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      void 
 10507 ;; Registers used:
 10508 ;;		status,2
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;Total ram usage:        0 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    5
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_enableGestureSensor
 10525 ;;		_readGesture
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _resetGestureParameters
 10531  0A56                     _resetGestureParameters:	
 10532                           
 10533                           ;APDS9960.c: 460:     gesture_data_.index = 0;
 10534                           
 10535                           ;incstack = 0
 10536                           ; Regs used in _resetGestureParameters: [status,2]
 10537  0A56  0024               	movlb	4	; select bank4
 10538  0A57  01E0               	clrf	(_gesture_data_^(0+512)+64)
 10539                           
 10540                           ;APDS9960.c: 461:     gesture_data_.total_gestures = 0;
 10541  0A58  01E1               	clrf	(_gesture_data_^(0+512)+65)
 10542                           
 10543                           ;APDS9960.c: 463:     gesture_ud_delta_ = 0;
 10544  0A59  0020               	movlb	0	; select bank0
 10545  0A5A  01E8               	clrf	_gesture_ud_delta_
 10546  0A5B  01E9               	clrf	_gesture_ud_delta_+1
 10547                           
 10548                           ;APDS9960.c: 464:     gesture_lr_delta_ = 0;
 10549  0A5C  01E6               	clrf	_gesture_lr_delta_
 10550  0A5D  01E7               	clrf	_gesture_lr_delta_+1
 10551                           
 10552                           ;APDS9960.c: 466:     gesture_ud_count_ = 0;
 10553  0A5E  01E4               	clrf	_gesture_ud_count_
 10554  0A5F  01E5               	clrf	_gesture_ud_count_+1
 10555                           
 10556                           ;APDS9960.c: 467:     gesture_lr_count_ = 0;
 10557  0A60  01E2               	clrf	_gesture_lr_count_
 10558  0A61  01E3               	clrf	_gesture_lr_count_+1
 10559                           
 10560                           ;APDS9960.c: 469:     gesture_near_count_ = 0;
 10561  0A62  01E0               	clrf	_gesture_near_count_
 10562  0A63  01E1               	clrf	_gesture_near_count_+1
 10563                           
 10564                           ;APDS9960.c: 470:     gesture_far_count_ = 0;
 10565  0A64  0021               	movlb	1	; select bank1
 10566  0A65  01E2               	clrf	_gesture_far_count_^(0+128)
 10567  0A66  01E3               	clrf	(_gesture_far_count_+1)^(0+128)
 10568                           
 10569                           ;APDS9960.c: 472:     gesture_state_ = 0;
 10570  0A67  0020               	movlb	0	; select bank0
 10571  0A68  01DE               	clrf	_gesture_state_
 10572  0A69  01DF               	clrf	_gesture_state_+1
 10573                           
 10574                           ;APDS9960.c: 473:     gesture_motion_ = DIR_NONE;
 10575  0A6A  0022               	movlb	2	; select bank2
 10576  0A6B  01E8               	clrf	_gesture_motion_^(0+256)
 10577  0A6C  01E9               	clrf	(_gesture_motion_+1)^(0+256)
 10578  0A6D  0008               	return
 10579  0A6E                     __end_of_resetGestureParameters:	
 10580                           
 10581                           	psect	text28
 10582  0984                     __ptext28:	
 10583 ;; *************** function _enablePower *****************
 10584 ;; Defined at:
 10585 ;;		line 527 in file "APDS9960.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;		None
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1    wreg      _Bool 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0, pclath, cstack
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;Total ram usage:        0 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:   10
 10606 ;; This function calls:
 10607 ;;		_setMode
 10608 ;; This function is called by:
 10609 ;;		_enableGestureSensor
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           
 10614                           ;psect for function _enablePower
 10615  0984                     _enablePower:	
 10616                           
 10617                           ;APDS9960.c: 529:     if( !setMode(0, 1) ) {
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
 10621  0984  0020               	movlb	0	; select bank0
 10622  0985  01AB               	clrf	setMode@enable
 10623  0986  0AAB               	incf	setMode@enable,f
 10624  0987  3000               	movlw	0
 10625  0988  318E  2651  3189   	fcall	_setMode
 10626  098B  3A00               	xorlw	0
 10627  098C  1D03               	skipz
 10628  098D  2990               	goto	l6682
 10629                           
 10630                           ;APDS9960.c: 530:         return 0;
 10631  098E  3000               	movlw	0
 10632  098F  0008               	return
 10633  0990                     l6682:	
 10634                           
 10635                           ;APDS9960.c: 533:     return 1;
 10636  0990  3001               	movlw	1
 10637  0991  0008               	return
 10638  0992                     __end_of_enablePower:	
 10639                           
 10640                           	psect	text29
 10641  0E51                     __ptext29:	
 10642 ;; *************** function _setMode *****************
 10643 ;; Defined at:
 10644 ;;		line 124 in file "APDS9960.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  mode            1    wreg     unsigned char 
 10647 ;;  enable          1   11[BANK0 ] unsigned char 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  mode            1   15[BANK0 ] unsigned char 
 10650 ;;  reg_val         1   14[BANK0 ] unsigned char 
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  1    wreg      _Bool 
 10653 ;; Registers used:
 10654 ;;		wreg, status,2, status,0, pclath, cstack
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10660 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;Total ram usage:        5 bytes
 10665 ;; Hardware stack levels used:    1
 10666 ;; Hardware stack levels required when called:    9
 10667 ;; This function calls:
 10668 ;;		_getMode
 10669 ;;		_wireWriteDataByte
 10670 ;; This function is called by:
 10671 ;;		_initialize
 10672 ;;		_enableGestureSensor
 10673 ;;		_enablePower
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _setMode
 10679  0E51                     _setMode:	
 10680                           
 10681                           ;incstack = 0
 10682                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
 10683                           ;setMode@mode stored from wreg
 10684  0E51  0020               	movlb	0	; select bank0
 10685  0E52  00AF               	movwf	setMode@mode
 10686                           
 10687                           ;APDS9960.c: 124: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 125: {;APDS996
      +                          0.c: 126:     uint8_t reg_val;;APDS9960.c: 129:     reg_val = getMode();
 10688  0E53  3189  215A  318E   	fcall	_getMode
 10689  0E56  0020               	movlb	0	; select bank0
 10690  0E57  00AC               	movwf	??_setMode
 10691  0E58  082C               	movf	??_setMode,w
 10692  0E59  00AE               	movwf	setMode@reg_val
 10693                           
 10694                           ;APDS9960.c: 130:     if( reg_val == 0xFF ) {
 10695  0E5A  0A2E               	incf	setMode@reg_val,w
 10696  0E5B  1D03               	btfss	3,2
 10697  0E5C  2E5F               	goto	l5928
 10698  0E5D                     l5924:	
 10699                           
 10700                           ;APDS9960.c: 131:         return 0;
 10701  0E5D  3000               	movlw	0
 10702  0E5E  0008               	return
 10703  0E5F                     l5928:	
 10704                           
 10705                           ;APDS9960.c: 135:     enable = enable & 0x01;
 10706  0E5F  082B               	movf	setMode@enable,w
 10707  0E60  3901               	andlw	1
 10708  0E61  00AC               	movwf	??_setMode
 10709  0E62  082C               	movf	??_setMode,w
 10710  0E63  00AB               	movwf	setMode@enable
 10711                           
 10712                           ;APDS9960.c: 136:     if( mode >= 0 && mode <= 6 ) {
 10713  0E64  3007               	movlw	7
 10714  0E65  022F               	subwf	setMode@mode,w
 10715  0E66  1803               	skipnc
 10716  0E67  2E84               	goto	l5938
 10717                           
 10718                           ;APDS9960.c: 137:         if (enable) {
 10719  0E68  082B               	movf	setMode@enable,w
 10720  0E69  1903               	btfsc	3,2
 10721  0E6A  2E77               	goto	l5936
 10722                           
 10723                           ;APDS9960.c: 138:             reg_val |= (1 << mode);
 10724  0E6B  3001               	movlw	1
 10725  0E6C  00AC               	movwf	??_setMode
 10726  0E6D  0A2F               	incf	setMode@mode,w
 10727  0E6E  2E70               	goto	u4684
 10728  0E6F                     u4685:	
 10729  0E6F  35AC               	lslf	??_setMode,f
 10730  0E70                     u4684:	
 10731  0E70  0B89               	decfsz	9,f
 10732  0E71  2E6F               	goto	u4685
 10733  0E72  082C               	movf	??_setMode,w
 10734  0E73  00AD               	movwf	??_setMode+1
 10735  0E74  082D               	movf	??_setMode+1,w
 10736  0E75  04AE               	iorwf	setMode@reg_val,f
 10737                           
 10738                           ;APDS9960.c: 139:         } else {
 10739  0E76  2E91               	goto	l5946
 10740  0E77                     l5936:	
 10741                           
 10742                           ;APDS9960.c: 140:             reg_val &= ~(1 << mode);
 10743  0E77  3001               	movlw	1
 10744  0E78  00AC               	movwf	??_setMode
 10745  0E79  0A2F               	incf	setMode@mode,w
 10746  0E7A  2E7C               	goto	u4694
 10747  0E7B                     u4695:	
 10748  0E7B  35AC               	lslf	??_setMode,f
 10749  0E7C                     u4694:	
 10750  0E7C  0B89               	decfsz	9,f
 10751  0E7D  2E7B               	goto	u4695
 10752  0E7E  082C               	movf	??_setMode,w
 10753  0E7F  3AFF               	xorlw	255
 10754  0E80  00AD               	movwf	??_setMode+1
 10755  0E81  082D               	movf	??_setMode+1,w
 10756  0E82  05AE               	andwf	setMode@reg_val,f
 10757  0E83  2E91               	goto	l5946
 10758  0E84                     l5938:	
 10759  0E84  3007               	movlw	7
 10760  0E85  062F               	xorwf	setMode@mode,w
 10761  0E86  1D03               	btfss	3,2
 10762  0E87  2E91               	goto	l5946
 10763                           
 10764                           ;APDS9960.c: 143:         if (enable) {
 10765  0E88  082B               	movf	setMode@enable,w
 10766  0E89  1903               	btfsc	3,2
 10767  0E8A  2E90               	goto	l5944
 10768                           
 10769                           ;APDS9960.c: 144:             reg_val = 0x7F;
 10770  0E8B  307F               	movlw	127
 10771  0E8C  00AC               	movwf	??_setMode
 10772  0E8D  082C               	movf	??_setMode,w
 10773  0E8E  00AE               	movwf	setMode@reg_val
 10774                           
 10775                           ;APDS9960.c: 145:         } else {
 10776  0E8F  2E91               	goto	l5946
 10777  0E90                     l5944:	
 10778                           
 10779                           ;APDS9960.c: 146:             reg_val = 0x00;
 10780  0E90  01AE               	clrf	setMode@reg_val
 10781  0E91                     l5946:	
 10782                           
 10783                           ;APDS9960.c: 151:     if( !wireWriteDataByte(0x80, reg_val) ) {
 10784  0E91  082E               	movf	setMode@reg_val,w
 10785  0E92  00AC               	movwf	??_setMode
 10786  0E93  082C               	movf	??_setMode,w
 10787  0E94  00A6               	movwf	wireWriteDataByte@val
 10788  0E95  3080               	movlw	128
 10789  0E96  318A  226E  318E   	fcall	_wireWriteDataByte
 10790  0E99  0020               	movlb	0	; select bank0
 10791  0E9A  0826               	movf	?_wireWriteDataByte,w
 10792  0E9B  0427               	iorwf	?_wireWriteDataByte+1,w
 10793  0E9C  1903               	btfsc	3,2
 10794  0E9D  2E5D               	goto	l5924
 10795                           
 10796                           ;APDS9960.c: 155:     return 1;
 10797  0E9E  3001               	movlw	1
 10798  0E9F  0008               	return
 10799  0EA0                     __end_of_setMode:	
 10800                           
 10801                           	psect	text30
 10802  0A6E                     __ptext30:	
 10803 ;; *************** function _wireWriteDataByte *****************
 10804 ;; Defined at:
 10805 ;;		line 871 in file "APDS9960.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  reg             1    wreg     unsigned char 
 10808 ;;  val             1    6[BANK0 ] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  reg             1    9[BANK0 ] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  2    6[BANK0 ] int 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, pclath, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 10430 ;;Total ram usage:       18 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    5
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_readGesture
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _decodeGesture
 10442  036E                     _decodeGesture:	
 10443                           
 10444                           ;APDS9960.c: 798:     if( gesture_state_ == NEAR_STATE ) {
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _decodeGesture: [wreg+status,2+status,0]
 10448  036E  0023               	movlb	3	; select bank3
 10449  036F  035D               	decf	_gesture_state_^(0+384),w
 10450  0370  045E               	iorwf	(_gesture_state_+1)^(0+384),w
 10451  0371  1D03               	btfss	3,2
 10452  0372  2B79               	goto	l7411
 10453                           
 10454                           ;APDS9960.c: 799:         gesture_motion_ = DIR_NEAR;
 10455  0373  3005               	movlw	5
 10456  0374  00DB               	movwf	_gesture_motion_^(0+384)
 10457  0375  3000               	movlw	0
 10458  0376  00DC               	movwf	(_gesture_motion_^(0+384)+1)
 10459                           
 10460                           ;APDS9960.c: 800:         return 1;
 10461  0377  3001               	movlw	1
 10462  0378  0008               	return
 10463  0379                     l7411:	
 10464  0379  3002               	movlw	2
 10465  037A  065D               	xorwf	_gesture_state_^(0+384),w
 10466  037B  045E               	iorwf	(_gesture_state_+1)^(0+384),w
 10467  037C  1D03               	btfss	3,2
 10468  037D  2B84               	goto	l7417
 10469                           
 10470                           ;APDS9960.c: 802:         gesture_motion_ = DIR_FAR;
 10471  037E  3006               	movlw	6
 10472  037F  00DB               	movwf	_gesture_motion_^(0+384)
 10473  0380  3000               	movlw	0
 10474  0381  00DC               	movwf	(_gesture_motion_^(0+384)+1)
 10475                           
 10476                           ;APDS9960.c: 803:         return 1;
 10477  0382  3001               	movlw	1
 10478  0383  0008               	return
 10479  0384                     l7417:	
 10480                           
 10481                           ;APDS9960.c: 807:     if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 0) ) {
 10482  0384  0021               	movlb	1	; select bank1
 10483  0385  0A6A               	incf	_gesture_ud_count_^(0+128),w
 10484  0386  1D03               	skipz
 10485  0387  2B91               	goto	l7423
 10486  0388  0A6B               	incf	(_gesture_ud_count_+1)^(0+128),w
 10487  0389  1D03               	btfss	3,2
 10488  038A  2B91               	goto	l7423
 10489  038B  0868               	movf	_gesture_lr_count_^(0+128),w
 10490  038C  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
 10491  038D  1D03               	btfss	3,2
 10492  038E  2B91               	goto	l7423
 10493  038F                     l7421:	
 10494                           
 10495                           ;APDS9960.c: 808:         gesture_motion_ = DIR_UP;
 10496  038F  3003               	movlw	3
 10497  0390  2BB0               	goto	L7
 10498  0391                     l7423:	
 10499                           ;APDS9960.c: 809:     } else if( (gesture_ud_count_ == 1) && (gesture_lr_count_ == 0) ) 
      +                          {
 10500                           
 10501  0391  036A               	decf	_gesture_ud_count_^(0+128),w
 10502  0392  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
 10503  0393  1D03               	btfss	3,2
 10504  0394  2B9B               	goto	l7429
 10505  0395  0868               	movf	_gesture_lr_count_^(0+128),w
 10506  0396  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
 10507  0397  1D03               	btfss	3,2
 10508  0398  2B9B               	goto	l7429
 10509  0399                     l7427:	
 10510                           
 10511                           ;APDS9960.c: 810:         gesture_motion_ = DIR_DOWN;
 10512  0399  3004               	movlw	4
 10513  039A  2BB0               	goto	L7
 10514  039B                     l7429:	
 10515                           ;APDS9960.c: 811:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 1) ) 
      +                          {
 10516                           
 10517  039B  086A               	movf	_gesture_ud_count_^(0+128),w
 10518  039C  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
 10519  039D  1D03               	btfss	3,2
 10520  039E  2BA5               	goto	l7435
 10521  039F  0368               	decf	_gesture_lr_count_^(0+128),w
 10522  03A0  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
 10523  03A1  1D03               	btfss	3,2
 10524  03A2  2BA5               	goto	l7435
 10525  03A3                     l7433:	
 10526                           
 10527                           ;APDS9960.c: 812:         gesture_motion_ = DIR_RIGHT;
 10528  03A3  3002               	movlw	2
 10529  03A4  2BB0               	goto	L7
 10530  03A5                     l7435:	
 10531                           ;APDS9960.c: 813:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == -1) )
      +                           {
 10532                           
 10533  03A5  086A               	movf	_gesture_ud_count_^(0+128),w
 10534  03A6  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
 10535  03A7  1D03               	btfss	3,2
 10536  03A8  2BB5               	goto	l7441
 10537  03A9  0A68               	incf	_gesture_lr_count_^(0+128),w
 10538  03AA  1D03               	skipz
 10539  03AB  2BB5               	goto	l7441
 10540  03AC  0A69               	incf	(_gesture_lr_count_+1)^(0+128),w
 10541  03AD  1D03               	btfss	3,2
 10542  03AE  2BB5               	goto	l7441
 10543  03AF                     l7439:	
 10544                           
 10545                           ;APDS9960.c: 814:         gesture_motion_ = DIR_LEFT;
 10546  03AF  3001               	movlw	1
 10547  03B0                     L7:	
 10548  03B0  0023               	movlb	3	; select bank3
 10549  03B1  00DB               	movwf	_gesture_motion_^(0+384)
 10550  03B2  3000               	movlw	0
 10551  03B3  00DC               	movwf	(_gesture_motion_^(0+384)+1)
 10552                           
 10553                           ;APDS9960.c: 815:     } else if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 1) )
      +                           {
 10554  03B4  2CFF               	goto	l7517
 10555  03B5                     l7441:	
 10556  03B5  0A6A               	incf	_gesture_ud_count_^(0+128),w
 10557  03B6  1D03               	skipz
 10558  03B7  2C07               	goto	l7459
 10559  03B8  0A6B               	incf	(_gesture_ud_count_+1)^(0+128),w
 10560  03B9  1D03               	btfss	3,2
 10561  03BA  2C07               	goto	l7459
 10562  03BB  0368               	decf	_gesture_lr_count_^(0+128),w
 10563  03BC  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
 10564  03BD  1D03               	btfss	3,2
 10565  03BE  2C07               	goto	l7459
 10566                           
 10567                           ;APDS9960.c: 816:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
 10568  03BF  0873               	movf	_gesture_ud_delta_+1,w
 10569  03C0  3A80               	xorlw	128
 10570  03C1  0020               	movlb	0	; select bank0
 10571  03C2  00A0               	movwf	??_decodeGesture
 10572  03C3  3080               	movlw	128
 10573  03C4  0220               	subwf	??_decodeGesture,w
 10574  03C5  1D03               	skipz
 10575  03C6  2BC9               	goto	u7265
 10576  03C7  3001               	movlw	1
 10577  03C8  0272               	subwf	_gesture_ud_delta_,w
 10578  03C9                     u7265:	
 10579  03C9  1803               	skipnc
 10580  03CA  2BD8               	goto	l7449
 10581  03CB  0972               	comf	_gesture_ud_delta_,w
 10582  03CC  0020               	movlb	0	; select bank0
 10583  03CD  00A0               	movwf	??_decodeGesture
 10584  03CE  0973               	comf	_gesture_ud_delta_+1,w
 10585  03CF  00A1               	movwf	??_decodeGesture+1
 10586  03D0  0AA0               	incf	??_decodeGesture,f
 10587  03D1  1903               	skipnz
 10588  03D2  0AA1               	incf	??_decodeGesture+1,f
 10589  03D3  0820               	movf	??_decodeGesture,w
 10590  03D4  00A2               	movwf	_decodeGesture$1446
 10591  03D5  0821               	movf	??_decodeGesture+1,w
 10592  03D6  00A3               	movwf	_decodeGesture$1446+1
 10593  03D7  2BDD               	goto	l1106
 10594  03D8                     l7449:	
 10595  03D8  0873               	movf	_gesture_ud_delta_+1,w
 10596  03D9  0020               	movlb	0	; select bank0
 10597  03DA  00A3               	movwf	_decodeGesture$1446+1
 10598  03DB  0872               	movf	_gesture_ud_delta_,w
 10599  03DC  00A2               	movwf	_decodeGesture$1446
 10600  03DD                     l1106:	
 10601  03DD  0871               	movf	_gesture_lr_delta_+1,w
 10602  03DE  3A80               	xorlw	128
 10603  03DF  00A0               	movwf	??_decodeGesture
 10604  03E0  3080               	movlw	128
 10605  03E1  0220               	subwf	??_decodeGesture,w
 10606  03E2  1D03               	skipz
 10607  03E3  2BE6               	goto	u7275
 10608  03E4  3001               	movlw	1
 10609  03E5  0270               	subwf	_gesture_lr_delta_,w
 10610  03E6                     u7275:	
 10611  03E6  1803               	skipnc
 10612  03E7  2BF5               	goto	l7453
 10613  03E8  0970               	comf	_gesture_lr_delta_,w
 10614  03E9  0020               	movlb	0	; select bank0
 10615  03EA  00A0               	movwf	??_decodeGesture
 10616  03EB  0971               	comf	_gesture_lr_delta_+1,w
 10617  03EC  00A1               	movwf	??_decodeGesture+1
 10618  03ED  0AA0               	incf	??_decodeGesture,f
 10619  03EE  1903               	skipnz
 10620  03EF  0AA1               	incf	??_decodeGesture+1,f
 10621  03F0  0820               	movf	??_decodeGesture,w
 10622  03F1  00A4               	movwf	_decodeGesture$1447
 10623  03F2  0821               	movf	??_decodeGesture+1,w
 10624  03F3  00A5               	movwf	_decodeGesture$1447+1
 10625  03F4  2BFA               	goto	l1110
 10626  03F5                     l7453:	
 10627  03F5  0871               	movf	_gesture_lr_delta_+1,w
 10628  03F6  0020               	movlb	0	; select bank0
 10629  03F7  00A5               	movwf	_decodeGesture$1447+1
 10630  03F8  0870               	movf	_gesture_lr_delta_,w
 10631  03F9  00A4               	movwf	_decodeGesture$1447
 10632  03FA                     l1110:	
 10633  03FA  0825               	movf	_decodeGesture$1447+1,w
 10634  03FB  3A80               	xorlw	128
 10635  03FC  00A0               	movwf	??_decodeGesture
 10636  03FD  0823               	movf	_decodeGesture$1446+1,w
 10637  03FE  3A80               	xorlw	128
 10638  03FF  0220               	subwf	??_decodeGesture,w
 10639  0400  1D03               	skipz
 10640  0401  2C04               	goto	u7285
 10641  0402  0822               	movf	_decodeGesture$1446,w
 10642  0403  0224               	subwf	_decodeGesture$1447,w
 10643  0404                     u7285:	
 10644  0404  1C03               	btfss	3,0
 10645  0405  2B8F               	goto	l7421
 10646  0406  2BA3               	goto	l7433
 10647  0407                     l7459:	
 10648  0407  036A               	decf	_gesture_ud_count_^(0+128),w
 10649  0408  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
 10650  0409  1D03               	btfss	3,2
 10651  040A  2C59               	goto	l7477
 10652  040B  0A68               	incf	_gesture_lr_count_^(0+128),w
 10653  040C  1D03               	skipz
 10654  040D  2C59               	goto	l7477
 10655  040E  0A69               	incf	(_gesture_lr_count_+1)^(0+128),w
 10656  040F  1D03               	btfss	3,2
 10657  0410  2C59               	goto	l7477
 10658                           
 10659                           ;APDS9960.c: 822:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
 10660  0411  0873               	movf	_gesture_ud_delta_+1,w
 10661  0412  3A80               	xorlw	128
 10662  0413  0020               	movlb	0	; select bank0
 10663  0414  00A0               	movwf	??_decodeGesture
 10664  0415  3080               	movlw	128
 10665  0416  0220               	subwf	??_decodeGesture,w
 10666  0417  1D03               	skipz
 10667  0418  2C1B               	goto	u7315
 10668  0419  3001               	movlw	1
 10669  041A  0272               	subwf	_gesture_ud_delta_,w
 10670  041B                     u7315:	
 10671  041B  1803               	skipnc
 10672  041C  2C2A               	goto	l7467
 10673  041D  0972               	comf	_gesture_ud_delta_,w
 10674  041E  0020               	movlb	0	; select bank0
 10675  041F  00A0               	movwf	??_decodeGesture
 10676  0420  0973               	comf	_gesture_ud_delta_+1,w
 10677  0421  00A1               	movwf	??_decodeGesture+1
 10678  0422  0AA0               	incf	??_decodeGesture,f
 10679  0423  1903               	skipnz
 10680  0424  0AA1               	incf	??_decodeGesture+1,f
 10681  0425  0820               	movf	??_decodeGesture,w
 10682  0426  00A6               	movwf	_decodeGesture$1448
 10683  0427  0821               	movf	??_decodeGesture+1,w
 10684  0428  00A7               	movwf	_decodeGesture$1448+1
 10685  0429  2C2F               	goto	l1118
 10686  042A                     l7467:	
 10687  042A  0873               	movf	_gesture_ud_delta_+1,w
 10688  042B  0020               	movlb	0	; select bank0
 10689  042C  00A7               	movwf	_decodeGesture$1448+1
 10690  042D  0872               	movf	_gesture_ud_delta_,w
 10691  042E  00A6               	movwf	_decodeGesture$1448
 10692  042F                     l1118:	
 10693  042F  0871               	movf	_gesture_lr_delta_+1,w
 10694  0430  3A80               	xorlw	128
 10695  0431  00A0               	movwf	??_decodeGesture
 10696  0432  3080               	movlw	128
 10697  0433  0220               	subwf	??_decodeGesture,w
 10698  0434  1D03               	skipz
 10699  0435  2C38               	goto	u7325
 10700  0436  3001               	movlw	1
 10701  0437  0270               	subwf	_gesture_lr_delta_,w
 10702  0438                     u7325:	
 10703  0438  1803               	skipnc
 10704  0439  2C47               	goto	l7471
 10705  043A  0970               	comf	_gesture_lr_delta_,w
 10706  043B  0020               	movlb	0	; select bank0
 10707  043C  00A0               	movwf	??_decodeGesture
 10708  043D  0971               	comf	_gesture_lr_delta_+1,w
 10709  043E  00A1               	movwf	??_decodeGesture+1
 10710  043F  0AA0               	incf	??_decodeGesture,f
 10711  0440  1903               	skipnz
 10712  0441  0AA1               	incf	??_decodeGesture+1,f
 10713  0442  0820               	movf	??_decodeGesture,w
 10714  0443  00A8               	movwf	_decodeGesture$1449
 10715  0444  0821               	movf	??_decodeGesture+1,w
 10716  0445  00A9               	movwf	_decodeGesture$1449+1
 10717  0446  2C4C               	goto	l1122
 10718  0447                     l7471:	
 10719  0447  0871               	movf	_gesture_lr_delta_+1,w
 10720  0448  0020               	movlb	0	; select bank0
 10721  0449  00A9               	movwf	_decodeGesture$1449+1
 10722  044A  0870               	movf	_gesture_lr_delta_,w
 10723  044B  00A8               	movwf	_decodeGesture$1449
 10724  044C                     l1122:	
 10725  044C  0829               	movf	_decodeGesture$1449+1,w
 10726  044D  3A80               	xorlw	128
 10727  044E  00A0               	movwf	??_decodeGesture
 10728  044F  0827               	movf	_decodeGesture$1448+1,w
 10729  0450  3A80               	xorlw	128
 10730  0451  0220               	subwf	??_decodeGesture,w
 10731  0452  1D03               	skipz
 10732  0453  2C56               	goto	u7335
 10733  0454  0826               	movf	_decodeGesture$1448,w
 10734  0455  0228               	subwf	_decodeGesture$1449,w
 10735  0456                     u7335:	
 10736  0456  1C03               	btfss	3,0
 10737  0457  2B99               	goto	l7427
 10738  0458  2BAF               	goto	l7439
 10739  0459                     l7477:	
 10740  0459  0A6A               	incf	_gesture_ud_count_^(0+128),w
 10741  045A  1D03               	skipz
 10742  045B  2CAD               	goto	l7495
 10743  045C  0A6B               	incf	(_gesture_ud_count_+1)^(0+128),w
 10744  045D  1D03               	btfss	3,2
 10745  045E  2CAD               	goto	l7495
 10746  045F  0A68               	incf	_gesture_lr_count_^(0+128),w
 10747  0460  1D03               	skipz
 10748  0461  2CAD               	goto	l7495
 10749  0462  0A69               	incf	(_gesture_lr_count_+1)^(0+128),w
 10750  0463  1D03               	btfss	3,2
 10751  0464  2CAD               	goto	l7495
 10752                           
 10753                           ;APDS9960.c: 828:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
 10754  0465  0873               	movf	_gesture_ud_delta_+1,w
 10755  0466  3A80               	xorlw	128
 10756  0467  0020               	movlb	0	; select bank0
 10757  0468  00A0               	movwf	??_decodeGesture
 10758  0469  3080               	movlw	128
 10759  046A  0220               	subwf	??_decodeGesture,w
 10760  046B  1D03               	skipz
 10761  046C  2C6F               	goto	u7365
 10762  046D  3001               	movlw	1
 10763  046E  0272               	subwf	_gesture_ud_delta_,w
 10764  046F                     u7365:	
 10765  046F  1803               	skipnc
 10766  0470  2C7E               	goto	l7485
 10767  0471  0972               	comf	_gesture_ud_delta_,w
 10768  0472  0020               	movlb	0	; select bank0
 10769  0473  00A0               	movwf	??_decodeGesture
 10770  0474  0973               	comf	_gesture_ud_delta_+1,w
 10771  0475  00A1               	movwf	??_decodeGesture+1
 10772  0476  0AA0               	incf	??_decodeGesture,f
 10773  0477  1903               	skipnz
 10774  0478  0AA1               	incf	??_decodeGesture+1,f
 10775  0479  0820               	movf	??_decodeGesture,w
 10776  047A  00AA               	movwf	_decodeGesture$1450
 10777  047B  0821               	movf	??_decodeGesture+1,w
 10778  047C  00AB               	movwf	_decodeGesture$1450+1
 10779  047D  2C83               	goto	l1130
 10780  047E                     l7485:	
 10781  047E  0873               	movf	_gesture_ud_delta_+1,w
 10782  047F  0020               	movlb	0	; select bank0
 10783  0480  00AB               	movwf	_decodeGesture$1450+1
 10784  0481  0872               	movf	_gesture_ud_delta_,w
 10785  0482  00AA               	movwf	_decodeGesture$1450
 10786  0483                     l1130:	
 10787  0483  0871               	movf	_gesture_lr_delta_+1,w
 10788  0484  3A80               	xorlw	128
 10789  0485  00A0               	movwf	??_decodeGesture
 10790  0486  3080               	movlw	128
 10791  0487  0220               	subwf	??_decodeGesture,w
 10792  0488  1D03               	skipz
 10793  0489  2C8C               	goto	u7375
 10794  048A  3001               	movlw	1
 10795  048B  0270               	subwf	_gesture_lr_delta_,w
 10796  048C                     u7375:	
 10797  048C  1803               	skipnc
 10798  048D  2C9B               	goto	l7489
 10799  048E  0970               	comf	_gesture_lr_delta_,w
 10800  048F  0020               	movlb	0	; select bank0
 10801  0490  00A0               	movwf	??_decodeGesture
 10802  0491  0971               	comf	_gesture_lr_delta_+1,w
 10803  0492  00A1               	movwf	??_decodeGesture+1
 10804  0493  0AA0               	incf	??_decodeGesture,f
 10805  0494  1903               	skipnz
 10806  0495  0AA1               	incf	??_decodeGesture+1,f
 10807  0496  0820               	movf	??_decodeGesture,w
 10808  0497  00AC               	movwf	_decodeGesture$1451
 10809  0498  0821               	movf	??_decodeGesture+1,w
 10810  0499  00AD               	movwf	_decodeGesture$1451+1
 10811  049A  2CA0               	goto	l1134
 10812  049B                     l7489:	
 10813  049B  0871               	movf	_gesture_lr_delta_+1,w
 10814  049C  0020               	movlb	0	; select bank0
 10815  049D  00AD               	movwf	_decodeGesture$1451+1
 10816  049E  0870               	movf	_gesture_lr_delta_,w
 10817  049F  00AC               	movwf	_decodeGesture$1451
 10818  04A0                     l1134:	
 10819  04A0  082D               	movf	_decodeGesture$1451+1,w
 10820  04A1  3A80               	xorlw	128
 10821  04A2  00A0               	movwf	??_decodeGesture
 10822  04A3  082B               	movf	_decodeGesture$1450+1,w
 10823  04A4  3A80               	xorlw	128
 10824  04A5  0220               	subwf	??_decodeGesture,w
 10825  04A6  1D03               	skipz
 10826  04A7  2CAA               	goto	u7385
 10827  04A8  082A               	movf	_decodeGesture$1450,w
 10828  04A9  022C               	subwf	_decodeGesture$1451,w
 10829  04AA                     u7385:	
 10830  04AA  1C03               	btfss	3,0
 10831  04AB  2B8F               	goto	l7421
 10832  04AC  2BAF               	goto	l7439
 10833  04AD                     l7495:	
 10834  04AD  036A               	decf	_gesture_ud_count_^(0+128),w
 10835  04AE  046B               	iorwf	(_gesture_ud_count_+1)^(0+128),w
 10836  04AF  1D03               	btfss	3,2
 10837  04B0  2CFD               	goto	l7513
 10838  04B1  0368               	decf	_gesture_lr_count_^(0+128),w
 10839  04B2  0469               	iorwf	(_gesture_lr_count_+1)^(0+128),w
 10840  04B3  1D03               	btfss	3,2
 10841  04B4  2CFD               	goto	l7513
 10842                           
 10843                           ;APDS9960.c: 834:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
 10844  04B5  0873               	movf	_gesture_ud_delta_+1,w
 10845  04B6  3A80               	xorlw	128
 10846  04B7  0020               	movlb	0	; select bank0
 10847  04B8  00A0               	movwf	??_decodeGesture
 10848  04B9  3080               	movlw	128
 10849  04BA  0220               	subwf	??_decodeGesture,w
 10850  04BB  1D03               	skipz
 10851  04BC  2CBF               	goto	u7415
 10852  04BD  3001               	movlw	1
 10853  04BE  0272               	subwf	_gesture_ud_delta_,w
 10854  04BF                     u7415:	
 10855  04BF  1803               	skipnc
 10856  04C0  2CCE               	goto	l7503
 10857  04C1  0972               	comf	_gesture_ud_delta_,w
 10858  04C2  0020               	movlb	0	; select bank0
 10859  04C3  00A0               	movwf	??_decodeGesture
 10860  04C4  0973               	comf	_gesture_ud_delta_+1,w
 10861  04C5  00A1               	movwf	??_decodeGesture+1
 10862  04C6  0AA0               	incf	??_decodeGesture,f
 10863  04C7  1903               	skipnz
 10864  04C8  0AA1               	incf	??_decodeGesture+1,f
 10865  04C9  0820               	movf	??_decodeGesture,w
 10866  04CA  00AE               	movwf	_decodeGesture$1452
 10867  04CB  0821               	movf	??_decodeGesture+1,w
 10868  04CC  00AF               	movwf	_decodeGesture$1452+1
 10869  04CD  2CD3               	goto	l1142
 10870  04CE                     l7503:	
 10871  04CE  0873               	movf	_gesture_ud_delta_+1,w
 10872  04CF  0020               	movlb	0	; select bank0
 10873  04D0  00AF               	movwf	_decodeGesture$1452+1
 10874  04D1  0872               	movf	_gesture_ud_delta_,w
 10875  04D2  00AE               	movwf	_decodeGesture$1452
 10876  04D3                     l1142:	
 10877  04D3  0871               	movf	_gesture_lr_delta_+1,w
 10878  04D4  3A80               	xorlw	128
 10879  04D5  00A0               	movwf	??_decodeGesture
 10880  04D6  3080               	movlw	128
 10881  04D7  0220               	subwf	??_decodeGesture,w
 10882  04D8  1D03               	skipz
 10883  04D9  2CDC               	goto	u7425
 10884  04DA  3001               	movlw	1
 10885  04DB  0270               	subwf	_gesture_lr_delta_,w
 10886  04DC                     u7425:	
 10887  04DC  1803               	skipnc
 10888  04DD  2CEB               	goto	l7507
 10889  04DE  0970               	comf	_gesture_lr_delta_,w
 10890  04DF  0020               	movlb	0	; select bank0
 10891  04E0  00A0               	movwf	??_decodeGesture
 10892  04E1  0971               	comf	_gesture_lr_delta_+1,w
 10893  04E2  00A1               	movwf	??_decodeGesture+1
 10894  04E3  0AA0               	incf	??_decodeGesture,f
 10895  04E4  1903               	skipnz
 10896  04E5  0AA1               	incf	??_decodeGesture+1,f
 10897  04E6  0820               	movf	??_decodeGesture,w
 10898  04E7  00B0               	movwf	_decodeGesture$1453
 10899  04E8  0821               	movf	??_decodeGesture+1,w
 10900  04E9  00B1               	movwf	_decodeGesture$1453+1
 10901  04EA  2CF0               	goto	l1146
 10902  04EB                     l7507:	
 10903  04EB  0871               	movf	_gesture_lr_delta_+1,w
 10904  04EC  0020               	movlb	0	; select bank0
 10905  04ED  00B1               	movwf	_decodeGesture$1453+1
 10906  04EE  0870               	movf	_gesture_lr_delta_,w
 10907  04EF  00B0               	movwf	_decodeGesture$1453
 10908  04F0                     l1146:	
 10909  04F0  0831               	movf	_decodeGesture$1453+1,w
 10910  04F1  3A80               	xorlw	128
 10911  04F2  00A0               	movwf	??_decodeGesture
 10912  04F3  082F               	movf	_decodeGesture$1452+1,w
 10913  04F4  3A80               	xorlw	128
 10914  04F5  0220               	subwf	??_decodeGesture,w
 10915  04F6  1D03               	skipz
 10916  04F7  2CFA               	goto	u7435
 10917  04F8  082E               	movf	_decodeGesture$1452,w
 10918  04F9  0230               	subwf	_decodeGesture$1453,w
 10919  04FA                     u7435:	
 10920  04FA  1C03               	btfss	3,0
 10921  04FB  2B99               	goto	l7427
 10922  04FC  2BA3               	goto	l7433
 10923  04FD                     l7513:	
 10924                           
 10925                           ;APDS9960.c: 840:         return 0;
 10926  04FD  3000               	movlw	0
 10927  04FE  0008               	return
 10928  04FF                     l7517:	
 10929                           
 10930                           ;APDS9960.c: 843:     return 1;
 10931  04FF  3001               	movlw	1
 10932  0500  0008               	return
 10933  0501                     __end_of_decodeGesture:	
 10934                           
 10935                           	psect	text23
 10936  0A9E                     __ptext23:	
 10937 ;; *************** function _enableGestureSensor *****************
 10938 ;; Defined at:
 10939 ;;		line 409 in file "APDS9960.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  interrupts      1    wreg     _Bool 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  interrupts      1   17[BANK0 ] _Bool 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      _Bool 
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0, pclath, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 10820 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
 10953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
=======
 10954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 10955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
=======
 10956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 10824 ;;Total ram usage:        4 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    7
 10827 ;; This function calls:
 10828 ;;		_I2C_Start
 10829 ;;		_I2C_Stop
 10830 ;;		_I2C_Write_Byte
 10831 ;; This function is called by:
 10832 ;;		_initialize
 10833 ;;		_setMode
 10834 ;;		_setLEDDrive
 10835 ;;		_setProximityGain
 10836 ;;		_setAmbientLightGain
 10837 ;;		_setProxIntLowThresh
 10838 ;;		_setProxIntHighThresh
 10839 ;;		_setLightIntLowThreshold
 10840 ;;		_setLightIntHighThreshold
 10841 ;;		_setGestureEnterThresh
 10842 ;;		_setGestureExitThresh
 10843 ;;		_setGestureGain
 10844 ;;		_setGestureLEDDrive
 10845 ;;		_setGestureWaitTime
 10846 ;;		_setGestureIntEnable
 10847 ;;		_enableGestureSensor
 10848 ;;		_setLEDBoost
 10849 ;;		_setGestureMode
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function _wireWriteDataByte
 10855  0A6E                     _wireWriteDataByte:	
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
 10859                           ;wireWriteDataByte@reg stored from wreg
 10860  0A6E  0020               	movlb	0	; select bank0
 10861  0A6F  00A9               	movwf	wireWriteDataByte@reg
 10862                           
 10863                           ;APDS9960.c: 871: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 872: {;APDS9960.c: 882:     I2C_Start();
 10864  0A70  3188  20A7  318A   	fcall	_I2C_Start
 10865                           
 10866                           ;APDS9960.c: 883:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 10867  0A73  3072               	movlw	114
 10868  0A74  318A  2289  318A   	fcall	_I2C_Write_Byte
 10869                           
 10870                           ;APDS9960.c: 884:     I2C_Write_Byte(reg);
 10871  0A77  0020               	movlb	0	; select bank0
 10872  0A78  0829               	movf	wireWriteDataByte@reg,w
 10873  0A79  318A  2289  318A   	fcall	_I2C_Write_Byte
 10874                           
 10875                           ;APDS9960.c: 885:     I2C_Write_Byte(val);
 10876  0A7C  0020               	movlb	0	; select bank0
 10877  0A7D  0826               	movf	wireWriteDataByte@val,w
 10878  0A7E  318A  2289  318A   	fcall	_I2C_Write_Byte
 10879                           
 10880                           ;APDS9960.c: 886:     I2C_Stop();
 10881  0A81  3187  27FD         	fcall	_I2C_Stop
 10882                           
 10883                           ;APDS9960.c: 889:     return 1;
 10884  0A83  3001               	movlw	1
 10885  0A84  0020               	movlb	0	; select bank0
 10886  0A85  00A6               	movwf	?_wireWriteDataByte
 10887  0A86  3000               	movlw	0
 10888  0A87  00A7               	movwf	?_wireWriteDataByte+1
 10889  0A88  0008               	return
 10890  0A89                     __end_of_wireWriteDataByte:	
 10891                           
 10892                           	psect	text31
 10893  095A                     __ptext31:	
 10894 ;; *************** function _getMode *****************
 10895 ;; Defined at:
 10896 ;;		line 159 in file "APDS9960.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;		None
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  enable_value    1   10[BANK0 ] unsigned char 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1    wreg      unsigned char 
 10903 ;; Registers used:
 10904 ;;		wreg, status,2, status,0, pclath, cstack
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;Total ram usage:        2 bytes
 10915 ;; Hardware stack levels used:    1
 10916 ;; Hardware stack levels required when called:    8
 10917 ;; This function calls:
 10918 ;;		_wireReadDataByte
 10919 ;; This function is called by:
 10920 ;;		_setMode
 10921 ;;		_readGesture
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           
 10926                           ;psect for function _getMode
 10927  095A                     _getMode:	
 10928                           
 10929                           ;APDS9960.c: 161:     uint8_t enable_value;;APDS9960.c: 164:     enable_value = wireRead
      +                          DataByte(0x80);
 10930                           
 10931                           ;incstack = 0
 10932                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
 10933  095A  3080               	movlw	128
 10934  095B  318A  22FD         	fcall	_wireReadDataByte
 10935  095D  0020               	movlb	0	; select bank0
 10936  095E  00A9               	movwf	??_getMode
 10937  095F  0829               	movf	??_getMode,w
 10938  0960  00AA               	movwf	getMode@enable_value
 10939                           
 10940                           ;APDS9960.c: 166:     return enable_value;
 10941  0961  082A               	movf	getMode@enable_value,w
 10942  0962  0008               	return
 10943  0963                     __end_of_getMode:	
 10944                           
 10945                           	psect	text32
 10946  0AFD                     __ptext32:	
 10947 ;; *************** function _wireReadDataByte *****************
 10948 ;; Defined at:
 10949 ;;		line 893 in file "APDS9960.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  reg             1    wreg     unsigned char 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  reg             1    7[BANK0 ] unsigned char 
 10954 ;;  val             1    8[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      unsigned char 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0, pclath, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:        3 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    7
 10971 ;; This function calls:
 10972 ;;		_I2C_ReStart
 10973 ;;		_I2C_Read_Byte
 10974 ;;		_I2C_Send_NACK
 10975 ;;		_I2C_Start
 10976 ;;		_I2C_Stop
 10977 ;;		_I2C_Write_Byte
 10978 ;; This function is called by:
 10979 ;;		_initialize
 10980 ;;		_getMode
 10981 ;;		_setLEDDrive
 10982 ;;		_setProximityGain
 10983 ;;		_setAmbientLightGain
 10984 ;;		_setGestureGain
 10985 ;;		_setGestureLEDDrive
 10986 ;;		_setGestureWaitTime
 10987 ;;		_setGestureIntEnable
 10988 ;;		_setLEDBoost
 10989 ;;		_setGestureMode
 10990 ;;		_isGestureAvailable
 10991 ;;		_readGesture
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           
 10996                           ;psect for function _wireReadDataByte
 10997  0AFD                     _wireReadDataByte:	
 10998                           
 10999                           ;incstack = 0
 11000                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
 11001                           ;wireReadDataByte@reg stored from wreg
 11002  0AFD  0020               	movlb	0	; select bank0
 11003  0AFE  00A7               	movwf	wireReadDataByte@reg
 11004                           
 11005                           ;APDS9960.c: 893:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 894: {;
      +                          APDS9960.c: 908:     unsigned char val;;APDS9960.c: 909:     I2C_Start();
 11006  0AFF  3188  20A7  318A   	fcall	_I2C_Start
 11007                           
 11008                           ;APDS9960.c: 910:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 11009  0B02  3072               	movlw	114
 11010  0B03  318A  2289  318A   	fcall	_I2C_Write_Byte
 11011                           
 11012                           ;APDS9960.c: 911:     I2C_Write_Byte(reg);
 11013  0B06  0020               	movlb	0	; select bank0
 11014  0B07  0827               	movf	wireReadDataByte@reg,w
 11015  0B08  318A  2289  318A   	fcall	_I2C_Write_Byte
 11016                           
 11017                           ;APDS9960.c: 912:     I2C_ReStart();
 11018  0B0B  3188  2098  318A   	fcall	_I2C_ReStart
 11019                           
 11020                           ;APDS9960.c: 914:     I2C_Write_Byte((0x39 << 1) | 0x01);
 11021  0B0E  3073               	movlw	115
 11022  0B0F  318A  2289  318A   	fcall	_I2C_Write_Byte
 11023                           
 11024                           ;APDS9960.c: 915:     val=I2C_Read_Byte();
 11025  0B12  3189  216D  318A   	fcall	_I2C_Read_Byte
 11026  0B15  0020               	movlb	0	; select bank0
 11027  0B16  00A6               	movwf	??_wireReadDataByte
 11028  0B17  0826               	movf	??_wireReadDataByte,w
 11029  0B18  00A8               	movwf	wireReadDataByte@val
 11030                           
 11031                           ;APDS9960.c: 916:     I2C_Send_NACK();
 11032  0B19  3188  20A1  318A   	fcall	_I2C_Send_NACK
 11033                           
 11034                           ;APDS9960.c: 917:     I2C_Stop();
 11035  0B1C  3187  27FD         	fcall	_I2C_Stop
 11036                           
 11037                           ;APDS9960.c: 919:     return val;
 11038  0B1E  0020               	movlb	0	; select bank0
 11039  0B1F  0828               	movf	wireReadDataByte@val,w
 11040  0B20  0008               	return
 11041  0B21                     __end_of_wireReadDataByte:	
 11042                           
 11043                           	psect	text33
 11044  0A89                     __ptext33:	
 11045 ;; *************** function _I2C_Write_Byte *****************
 11046 ;; Defined at:
 11047 ;;		line 75 in file "i2c.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  Byte            1    wreg     unsigned char 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  Byte            1    3[BANK0 ] unsigned char 
 11052 ;;  count           2    4[BANK0 ] unsigned int 
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0, pclath, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 10957 ;;Total ram usage:        2 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:   11
 10960 ;; This function calls:
 10961 ;;		_enablePower
 10962 ;;		_resetGestureParameters
 10963 ;;		_setGestureIntEnable
 10964 ;;		_setGestureMode
 10965 ;;		_setLEDBoost
 10966 ;;		_setMode
 10967 ;;		_wireWriteDataByte
 10968 ;; This function is called by:
 10969 ;;		_main
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           
 10974                           ;psect for function _enableGestureSensor
 10975  0A9E                     _enableGestureSensor:	
 10976                           
 10977                           ;incstack = 0
 10978                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
 10979                           ;enableGestureSensor@interrupts stored from wreg
 10980  0A9E  0020               	movlb	0	; select bank0
 10981  0A9F  00B1               	movwf	enableGestureSensor@interrupts
 10982                           
 10983                           ;APDS9960.c: 409: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 410: {;APDS9
      +                          960.c: 418:     resetGestureParameters();
 10984  0AA0  3192  22DC  318A   	fcall	_resetGestureParameters
 10985                           
 10986                           ;APDS9960.c: 419:     if( !wireWriteDataByte(0x83, 0xFF) ) {
 10987  0AA3  30FF               	movlw	255
 10988  0AA4  0020               	movlb	0	; select bank0
 10989  0AA5  00B0               	movwf	??_enableGestureSensor
 10990  0AA6  0830               	movf	??_enableGestureSensor,w
 10991  0AA7  00A6               	movwf	wireWriteDataByte@val
 10992  0AA8  3083               	movlw	131
 10993  0AA9  3193  2385  318A   	fcall	_wireWriteDataByte
 10994  0AAC  0020               	movlb	0	; select bank0
 10995  0AAD  0826               	movf	?_wireWriteDataByte,w
 10996  0AAE  0427               	iorwf	?_wireWriteDataByte+1,w
 10997  0AAF  1903               	btfsc	3,2
 10998  0AB0  0008               	return
 10999                           
 11000                           ;APDS9960.c: 422:     if( !wireWriteDataByte(0x8E, 0x89) ) {
 11001  0AB1  3089               	movlw	137
 11002  0AB2  00B0               	movwf	??_enableGestureSensor
 11003  0AB3  0830               	movf	??_enableGestureSensor,w
 11004  0AB4  00A6               	movwf	wireWriteDataByte@val
 11005  0AB5  308E               	movlw	142
 11006  0AB6  3193  2385  318A   	fcall	_wireWriteDataByte
 11007  0AB9  0020               	movlb	0	; select bank0
 11008  0ABA  0826               	movf	?_wireWriteDataByte,w
 11009  0ABB  0427               	iorwf	?_wireWriteDataByte+1,w
 11010  0ABC  1903               	btfsc	3,2
 11011  0ABD  0008               	return
 11012                           
 11013                           ;APDS9960.c: 425:     if( !setLEDBoost(3) ) {
 11014  0ABE  3003               	movlw	3
 11015  0ABF  3196  260C  318A   	fcall	_setLEDBoost
 11016  0AC2  3A00               	xorlw	0
 11017  0AC3  1903               	btfsc	3,2
 11018  0AC4  0008               	return
 11019                           
 11020                           ;APDS9960.c: 428:     if( interrupts ) {
 11021  0AC5  0020               	movlb	0	; select bank0
 11022  0AC6  0831               	movf	enableGestureSensor@interrupts,w
 11023  0AC7  1903               	btfsc	3,2
 11024  0AC8  2ACB               	goto	l8201
 11025                           
 11026                           ;APDS9960.c: 429:         if( !setGestureIntEnable(1) ) {
 11027  0AC9  3001               	movlw	1
 11028  0ACA  2ACC               	goto	L8
 11029  0ACB                     l8201:	
 11030                           
 11031                           ;APDS9960.c: 433:         if( !setGestureIntEnable(0) ) {
 11032  0ACB  3000               	movlw	0
 11033  0ACC                     L8:	
 11034  0ACC  3195  25B5  318A   	fcall	_setGestureIntEnable
 11035  0ACF  3A00               	xorlw	0
 11036  0AD0  1903               	btfsc	3,2
 11037  0AD1  0008               	return
 11038                           
 11039                           ;APDS9960.c: 437:     if( !setGestureMode(1) ) {
 11040  0AD2  3001               	movlw	1
 11041  0AD3  3194  24C5  318A   	fcall	_setGestureMode
 11042  0AD6  3A00               	xorlw	0
 11043  0AD7  1903               	btfsc	3,2
 11044  0AD8  0008               	return
 11045                           
 11046                           ;APDS9960.c: 440:     if( !enablePower() ){
 11047  0AD9  3192  223A  318A   	fcall	_enablePower
 11048  0ADC  3A00               	xorlw	0
 11049  0ADD  1903               	btfsc	3,2
 11050  0ADE  0008               	return
 11051                           
 11052                           ;APDS9960.c: 443:     if( !setMode(3, 1) ) {
 11053  0ADF  0020               	movlb	0	; select bank0
 11054  0AE0  01AB               	clrf	setMode@enable
 11055  0AE1  0AAB               	incf	setMode@enable,f
 11056  0AE2  3003               	movlw	3
 11057  0AE3  3189  210A  318A   	fcall	_setMode
 11058  0AE6  3A00               	xorlw	0
 11059  0AE7  1903               	btfsc	3,2
 11060  0AE8  0008               	return
 11061                           
 11062                           ;APDS9960.c: 446:     if( !setMode(2, 1) ) {
 11063  0AE9  0020               	movlb	0	; select bank0
 11064  0AEA  01AB               	clrf	setMode@enable
 11065  0AEB  0AAB               	incf	setMode@enable,f
 11066  0AEC  3002               	movlw	2
 11067  0AED  3189  210A  318A   	fcall	_setMode
 11068  0AF0  3A00               	xorlw	0
 11069  0AF1  1903               	btfsc	3,2
 11070  0AF2  0008               	return
 11071                           
 11072                           ;APDS9960.c: 449:     if( !setMode(6, 1) ) {
 11073  0AF3  0020               	movlb	0	; select bank0
 11074  0AF4  01AB               	clrf	setMode@enable
 11075  0AF5  0AAB               	incf	setMode@enable,f
 11076  0AF6  3006               	movlw	6
 11077  0AF7  3189  210A         	fcall	_setMode
 11078  0AF9  0008               	return
 11079  0AFA                     __end_of_enableGestureSensor:	
 11080                           
 11081                           	psect	text24
 11082  160C                     __ptext24:	
 11083 ;; *************** function _setLEDBoost *****************
 11084 ;; Defined at:
 11085 ;;		line 484 in file "APDS9960.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  boost           1    wreg     unsigned char 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  boost           1   13[BANK0 ] unsigned char 
 11090 ;;  val             1   12[BANK0 ] unsigned char 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      _Bool 
 11093 ;; Registers used:
 11094 ;;		wreg, status,2, status,0, pclath, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
=======
 11101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11064 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
=======
 11102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11065 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
=======
 11103 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11066 ;;Total ram usage:        5 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    6
 11069 ;; This function calls:
 11070 ;;		_i2c1_driver_TXData
 11071 ;; This function is called by:
 11072 ;;		_wireReadDataBlock
 11073 ;;		_wireWriteDataByte
 11074 ;;		_wireReadDataByte
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           
 11079                           ;psect for function _I2C_Write_Byte
 11080  0A89                     _I2C_Write_Byte:	
 11081                           
 11082                           ;incstack = 0
 11083                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
 11084                           ;I2C_Write_Byte@Byte stored from wreg
 11085  0A89  0020               	movlb	0	; select bank0
 11086  0A8A  00A3               	movwf	I2C_Write_Byte@Byte
 11087                           
 11088                           ;i2c.c: 75: void I2C_Write_Byte(unsigned char Byte);i2c.c: 76: {;i2c.c: 80:     i2c1_dri
      +                          ver_TXData(Byte);
 11089  0A8B  0823               	movf	I2C_Write_Byte@Byte,w
 11090  0A8C  3188  20ED  318A   	fcall	_i2c1_driver_TXData
 11091                           
 11092                           ;i2c.c: 83:     unsigned int count = 0;
 11093  0A8F  0020               	movlb	0	; select bank0
 11094  0A90  01A4               	clrf	I2C_Write_Byte@count
 11095  0A91  01A5               	clrf	I2C_Write_Byte@count+1
 11096  0A92                     l1234:	
 11097                           ;i2c.c: 84:     while(SSP1CON2bits.ACKSTAT);
 11098                           
 11099  0A92  0024               	movlb	4	; select bank4
 11100  0A93  1B16               	btfsc	22,6	;volatile
 11101  0A94  2A92               	goto	l1234
 11102  0A95                     l5768:	
 11103  0A95  0020               	movlb	0	; select bank0
 11104  0A96  0825               	movf	I2C_Write_Byte@count+1,w
 11105  0A97  00A2               	movwf	??_I2C_Write_Byte+1
 11106  0A98  0824               	movf	I2C_Write_Byte@count,w
 11107  0A99  00A1               	movwf	??_I2C_Write_Byte
 11108  0A9A  0AA4               	incf	I2C_Write_Byte@count,f
 11109  0A9B  1903               	skipnz
 11110  0A9C  0AA5               	incf	I2C_Write_Byte@count+1,f
 11111  0A9D  3000               	movlw	0
 11112  0A9E  0222               	subwf	??_I2C_Write_Byte+1,w
 11113  0A9F  3005               	movlw	5
 11114  0AA0  1903               	skipnz
 11115  0AA1  0221               	subwf	??_I2C_Write_Byte,w
 11116  0AA2  1803               	btfsc	3,0
 11117  0AA3  0008               	return
 11118  0AA4  2A95               	goto	l5768
 11119  0AA5                     __end_of_I2C_Write_Byte:	
 11120                           
 11121                           	psect	text34
 11122  08ED                     __ptext34:	
 11123 ;; *************** function _i2c1_driver_TXData *****************
 11124 ;; Defined at:
 11125 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  d               1    wreg     unsigned char 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  d               1    0[BANK0 ] unsigned char 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      void 
 11132 ;; Registers used:
 11133 ;;		wreg
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;Total ram usage:        1 bytes
 11144 ;; Hardware stack levels used:    1
 11145 ;; Hardware stack levels required when called:    5
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_I2C_Write_Byte
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           
 11154                           ;psect for function _i2c1_driver_TXData
 11155  08ED                     _i2c1_driver_TXData:	
 11156                           
 11157                           ;incstack = 0
 11158                           ; Regs used in _i2c1_driver_TXData: [wreg]
 11159                           ;i2c1_driver_TXData@d stored from wreg
 11160  08ED  0020               	movlb	0	; select bank0
 11161  08EE  00A0               	movwf	i2c1_driver_TXData@d
 11162                           
 11163                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
 11164  08EF  0820               	movf	i2c1_driver_TXData@d,w
 11165  08F0  0024               	movlb	4	; select bank4
 11166  08F1  0091               	movwf	17	;volatile
 11167  08F2  0008               	return
 11168  08F3                     __end_of_i2c1_driver_TXData:	
 11169                           
 11170                           	psect	text35
 11171  07FD                     __ptext35:	
 11172 ;; *************** function _I2C_Stop *****************
 11173 ;; Defined at:
 11174 ;;		line 50 in file "i2c.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;		None
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		status,2, status,0, pclath, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11104 ;;Total ram usage:        4 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    8
 11107 ;; This function calls:
 11108 ;;		_wireReadDataByte
 11109 ;;		_wireWriteDataByte
 11110 ;; This function is called by:
 11111 ;;		_enableGestureSensor
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _setLEDBoost
 11117  160C                     _setLEDBoost:	
 11118                           
 11119                           ;incstack = 0
 11120                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
 11121                           ;setLEDBoost@boost stored from wreg
 11122  160C  0020               	movlb	0	; select bank0
 11123  160D  00AD               	movwf	setLEDBoost@boost
 11124                           
 11125                           ;APDS9960.c: 484: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 485: {;APDS9960.c: 486:  
      +                             uint8_t val;;APDS9960.c: 489:     val=wireReadDataByte(0x90);
 11126  160E  3090               	movlw	144
 11127  160F  3194  2455  3196   	fcall	_wireReadDataByte
 11128  1612  0020               	movlb	0	; select bank0
 11129  1613  00AA               	movwf	??_setLEDBoost
 11130  1614  082A               	movf	??_setLEDBoost,w
 11131  1615  00AC               	movwf	setLEDBoost@val
 11132                           
 11133                           ;APDS9960.c: 492:     boost &= 0b00000011;
 11134  1616  3003               	movlw	3
 11135  1617  00AA               	movwf	??_setLEDBoost
 11136  1618  082A               	movf	??_setLEDBoost,w
 11137  1619  05AD               	andwf	setLEDBoost@boost,f
 11138                           
 11139                           ;APDS9960.c: 493:     boost = boost << 4;
 11140  161A  082D               	movf	setLEDBoost@boost,w
 11141  161B  00AA               	movwf	??_setLEDBoost
 11142  161C  3003               	movlw	3
 11143  161D                     u7735:	
 11144  161D  35AA               	lslf	??_setLEDBoost,f
 11145  161E  3EFF               	addlw	-1
 11146  161F  1D03               	skipz
 11147  1620  2E1D               	goto	u7735
 11148  1621  352A               	lslf	??_setLEDBoost,w
 11149  1622  00AB               	movwf	??_setLEDBoost+1
 11150  1623  082B               	movf	??_setLEDBoost+1,w
 11151  1624  00AD               	movwf	setLEDBoost@boost
 11152                           
 11153                           ;APDS9960.c: 494:     val &= 0b11001111;
 11154  1625  30CF               	movlw	207
 11155  1626  00AA               	movwf	??_setLEDBoost
 11156  1627  082A               	movf	??_setLEDBoost,w
 11157  1628  05AC               	andwf	setLEDBoost@val,f
 11158                           
 11159                           ;APDS9960.c: 495:     val |= boost;
 11160  1629  082D               	movf	setLEDBoost@boost,w
 11161  162A  00AA               	movwf	??_setLEDBoost
 11162  162B  082A               	movf	??_setLEDBoost,w
 11163  162C  04AC               	iorwf	setLEDBoost@val,f
 11164                           
 11165                           ;APDS9960.c: 498:     if( !wireWriteDataByte(0x90, val) ) {
 11166  162D  082C               	movf	setLEDBoost@val,w
 11167  162E  00AA               	movwf	??_setLEDBoost
 11168  162F  082A               	movf	??_setLEDBoost,w
 11169  1630  00A6               	movwf	wireWriteDataByte@val
 11170  1631  3090               	movlw	144
 11171  1632  3193  2385  3196   	fcall	_wireWriteDataByte
 11172  1635  0020               	movlb	0	; select bank0
 11173  1636  0826               	movf	?_wireWriteDataByte,w
 11174  1637  0427               	iorwf	?_wireWriteDataByte+1,w
 11175  1638  1D03               	btfss	3,2
 11176  1639  2E3C               	goto	l7979
 11177                           
 11178                           ;APDS9960.c: 499:         return 0;
 11179  163A  3000               	movlw	0
 11180  163B  0008               	return
 11181  163C                     l7979:	
 11182                           
 11183                           ;APDS9960.c: 502:     return 1;
 11184  163C  3001               	movlw	1
 11185  163D  0008               	return
 11186  163E                     __end_of_setLEDBoost:	
 11187                           
 11188                           	psect	text25
 11189  14C5                     __ptext25:	
 11190 ;; *************** function _setGestureMode *****************
 11191 ;; Defined at:
 11192 ;;		line 506 in file "APDS9960.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  mode            1    wreg     unsigned char 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  mode            1   11[BANK0 ] unsigned char 
 11197 ;;  val             1   12[BANK0 ] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      _Bool 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0, pclath, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11209 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11192 ;;Total ram usage:        0 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    6
 11195 ;; This function calls:
 11196 ;;		_i2c1_driver_stop
 11197 ;; This function is called by:
 11198 ;;		_wireReadDataBlock
 11199 ;;		_wireWriteDataByte
 11200 ;;		_wireReadDataByte
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           
 11205                           ;psect for function _I2C_Stop
 11206  07FD                     _I2C_Stop:	
 11207                           
 11208                           ;i2c.c: 52:  i2c1_driver_stop();
 11209                           
 11210                           ;incstack = 0
 11211                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
 11212  07FD  3188  20AA         	fcall	_i2c1_driver_stop
 11213  07FF  0008               	return
 11214  0800                     __end_of_I2C_Stop:	
 11215                           
 11216                           	psect	text36
 11217  08AA                     __ptext36:	
 11218 ;; *************** function _i2c1_driver_stop *****************
 11219 ;; Defined at:
 11220 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		None
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used:    1
 11240 ;; Hardware stack levels required when called:    5
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_I2C_Stop
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           
 11249                           ;psect for function _i2c1_driver_stop
 11250  08AA                     _i2c1_driver_stop:	
 11251                           
 11252                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _i2c1_driver_stop: []
 11256  08AA  0024               	movlb	4	; select bank4
 11257  08AB  1516               	bsf	22,2	;volatile
 11258  08AC  0008               	return
 11259  08AD                     __end_of_i2c1_driver_stop:	
 11260                           
 11261                           	psect	text37
 11262  08A7                     __ptext37:	
 11263 ;; *************** function _I2C_Start *****************
 11264 ;; Defined at:
 11265 ;;		line 35 in file "i2c.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		status,2, status,0, pclath, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11211 ;;Total ram usage:        3 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    8
 11214 ;; This function calls:
 11215 ;;		_wireReadDataByte
 11216 ;;		_wireWriteDataByte
 11217 ;; This function is called by:
 11218 ;;		_enableGestureSensor
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           
 11223                           ;psect for function _setGestureMode
 11224  14C5                     _setGestureMode:	
 11225                           
 11226                           ;incstack = 0
 11227                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
 11228                           ;setGestureMode@mode stored from wreg
 11229  14C5  0020               	movlb	0	; select bank0
 11230  14C6  00AB               	movwf	setGestureMode@mode
 11231                           
 11232                           ;APDS9960.c: 506: _Bool setGestureMode(uint8_t mode);APDS9960.c: 507: {;APDS9960.c: 508:
      +                               uint8_t val;;APDS9960.c: 511:     val = wireReadDataByte(0xAB);
 11233  14C7  30AB               	movlw	171
 11234  14C8  3194  2455  3194   	fcall	_wireReadDataByte
 11235  14CB  0020               	movlb	0	; select bank0
 11236  14CC  00AA               	movwf	??_setGestureMode
 11237  14CD  082A               	movf	??_setGestureMode,w
 11238  14CE  00AC               	movwf	setGestureMode@val
 11239                           
 11240                           ;APDS9960.c: 514:     mode &= 0b00000001;
 11241  14CF  3001               	movlw	1
 11242  14D0  00AA               	movwf	??_setGestureMode
 11243  14D1  082A               	movf	??_setGestureMode,w
 11244  14D2  05AB               	andwf	setGestureMode@mode,f
 11245                           
 11246                           ;APDS9960.c: 515:     val &= 0b11111110;
 11247  14D3  30FE               	movlw	254
 11248  14D4  00AA               	movwf	??_setGestureMode
 11249  14D5  082A               	movf	??_setGestureMode,w
 11250  14D6  05AC               	andwf	setGestureMode@val,f
 11251                           
 11252                           ;APDS9960.c: 516:     val |= mode;
 11253  14D7  082B               	movf	setGestureMode@mode,w
 11254  14D8  00AA               	movwf	??_setGestureMode
 11255  14D9  082A               	movf	??_setGestureMode,w
 11256  14DA  04AC               	iorwf	setGestureMode@val,f
 11257                           
 11258                           ;APDS9960.c: 519:     if( !wireWriteDataByte(0xAB, val) ) {
 11259  14DB  082C               	movf	setGestureMode@val,w
 11260  14DC  00AA               	movwf	??_setGestureMode
 11261  14DD  082A               	movf	??_setGestureMode,w
 11262  14DE  00A6               	movwf	wireWriteDataByte@val
 11263  14DF  30AB               	movlw	171
 11264  14E0  3193  2385  3194   	fcall	_wireWriteDataByte
 11265  14E3  0020               	movlb	0	; select bank0
 11266  14E4  0826               	movf	?_wireWriteDataByte,w
 11267  14E5  0427               	iorwf	?_wireWriteDataByte+1,w
 11268  14E6  1D03               	btfss	3,2
 11269  14E7  2CEA               	goto	l7997
 11270                           
 11271                           ;APDS9960.c: 520:         return 0;
 11272  14E8  3000               	movlw	0
 11273  14E9  0008               	return
 11274  14EA                     l7997:	
 11275                           
 11276                           ;APDS9960.c: 523:     return 1;
 11277  14EA  3001               	movlw	1
 11278  14EB  0008               	return
 11279  14EC                     __end_of_setGestureMode:	
 11280                           
 11281                           	psect	text26
 11282  15B5                     __ptext26:	
 11283 ;; *************** function _setGestureIntEnable *****************
 11284 ;; Defined at:
 11285 ;;		line 387 in file "APDS9960.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;  enable          1    wreg     unsigned char 
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;  enable          1   12[BANK0 ] unsigned char 
 11290 ;;  val             1   11[BANK0 ] unsigned char 
 11291 ;; Return value:  Size  Location     Type
 11292 ;;                  1    wreg      _Bool 
 11293 ;; Registers used:
 11294 ;;		wreg, status,2, status,0, pclath, cstack
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11301 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11302 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11303 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:    6
 11286 ;; This function calls:
 11287 ;;		_i2c1_driver_start
 11288 ;; This function is called by:
 11289 ;;		_wireReadDataBlock
 11290 ;;		_wireWriteDataByte
 11291 ;;		_wireReadDataByte
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           
 11296                           ;psect for function _I2C_Start
 11297  08A7                     _I2C_Start:	
 11298                           
 11299                           ;i2c.c: 37:  i2c1_driver_start();
 11300                           
 11301                           ;incstack = 0
 11302                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
 11303  08A7  3188  20A4         	fcall	_i2c1_driver_start
 11304  08A9  0008               	return
 11305  08AA                     __end_of_I2C_Start:	
 11306                           
 11307                           	psect	text38
 11308  08A4                     __ptext38:	
 11309 ;; *************** function _i2c1_driver_start *****************
 11310 ;; Defined at:
 11311 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		None
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11304 ;;Total ram usage:        3 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; Hardware stack levels required when called:    8
 11307 ;; This function calls:
 11308 ;;		_wireReadDataByte
 11309 ;;		_wireWriteDataByte
 11310 ;; This function is called by:
 11311 ;;		_initialize
 11312 ;;		_enableGestureSensor
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           
 11317                           ;psect for function _setGestureIntEnable
 11318  15B5                     _setGestureIntEnable:	
 11319                           
 11320                           ;incstack = 0
 11321                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
 11322                           ;setGestureIntEnable@enable stored from wreg
 11323  15B5  0020               	movlb	0	; select bank0
 11324  15B6  00AC               	movwf	setGestureIntEnable@enable
 11325                           
 11326                           ;APDS9960.c: 387: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 388: {;APDS9960.
      +                          c: 389:     uint8_t val;;APDS9960.c: 392:     val = wireReadDataByte(0xAB);
 11327  15B7  30AB               	movlw	171
 11328  15B8  3194  2455  3195   	fcall	_wireReadDataByte
 11329  15BB  0020               	movlb	0	; select bank0
 11330  15BC  00AA               	movwf	??_setGestureIntEnable
 11331  15BD  082A               	movf	??_setGestureIntEnable,w
 11332  15BE  00AB               	movwf	setGestureIntEnable@val
 11333                           
 11334                           ;APDS9960.c: 395:     enable &= 0b00000001;
 11335  15BF  3001               	movlw	1
 11336  15C0  00AA               	movwf	??_setGestureIntEnable
 11337  15C1  082A               	movf	??_setGestureIntEnable,w
 11338  15C2  05AC               	andwf	setGestureIntEnable@enable,f
 11339                           
 11340                           ;APDS9960.c: 396:     enable = enable << 1;
 11341  15C3  352C               	lslf	setGestureIntEnable@enable,w
 11342  15C4  00AA               	movwf	??_setGestureIntEnable
 11343  15C5  082A               	movf	??_setGestureIntEnable,w
 11344  15C6  00AC               	movwf	setGestureIntEnable@enable
 11345                           
 11346                           ;APDS9960.c: 397:     val &= 0b11111101;
 11347  15C7  30FD               	movlw	253
 11348  15C8  00AA               	movwf	??_setGestureIntEnable
 11349  15C9  082A               	movf	??_setGestureIntEnable,w
 11350  15CA  05AB               	andwf	setGestureIntEnable@val,f
 11351                           
 11352                           ;APDS9960.c: 398:     val |= enable;
 11353  15CB  082C               	movf	setGestureIntEnable@enable,w
 11354  15CC  00AA               	movwf	??_setGestureIntEnable
 11355  15CD  082A               	movf	??_setGestureIntEnable,w
 11356  15CE  04AB               	iorwf	setGestureIntEnable@val,f
 11357                           
 11358                           ;APDS9960.c: 401:     if( !wireWriteDataByte(0xAB, val) ) {
 11359  15CF  082B               	movf	setGestureIntEnable@val,w
 11360  15D0  00AA               	movwf	??_setGestureIntEnable
 11361  15D1  082A               	movf	??_setGestureIntEnable,w
 11362  15D2  00A6               	movwf	wireWriteDataByte@val
 11363  15D3  30AB               	movlw	171
 11364  15D4  3193  2385  3195   	fcall	_wireWriteDataByte
 11365  15D7  0020               	movlb	0	; select bank0
 11366  15D8  0826               	movf	?_wireWriteDataByte,w
 11367  15D9  0427               	iorwf	?_wireWriteDataByte+1,w
 11368  15DA  1D03               	btfss	3,2
 11369  15DB  2DDE               	goto	l7961
 11370                           
 11371                           ;APDS9960.c: 402:         return 0;
 11372  15DC  3000               	movlw	0
 11373  15DD  0008               	return
 11374  15DE                     l7961:	
 11375                           
 11376                           ;APDS9960.c: 405:     return 1;
 11377  15DE  3001               	movlw	1
 11378  15DF  0008               	return
 11379  15E0                     __end_of_setGestureIntEnable:	
 11380                           
 11381                           	psect	text27
 11382  12DC                     __ptext27:	
 11383 ;; *************** function _resetGestureParameters *****************
 11384 ;; Defined at:
 11385 ;;		line 457 in file "APDS9960.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;		None
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;		None
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  1    wreg      void 
 11392 ;; Registers used:
 11393 ;;		status,2
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11329 ;;Total ram usage:        0 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    5
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_I2C_Start
 11336 ;;		_i2c_masterOperation
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           
 11341                           ;psect for function _i2c1_driver_start
 11342  08A4                     _i2c1_driver_start:	
 11343                           
 11344                           ;mcc_generated_files/i2c1_driver.c: 148:     SSP1CON2bits.SEN = 1;
 11345                           
 11346                           ;incstack = 0
 11347                           ; Regs used in _i2c1_driver_start: []
 11348  08A4  0024               	movlb	4	; select bank4
 11349  08A5  1416               	bsf	22,0	;volatile
 11350  08A6  0008               	return
 11351  08A7                     __end_of_i2c1_driver_start:	
 11352                           
 11353                           	psect	text39
 11354  08A1                     __ptext39:	
 11355 ;; *************** function _I2C_Send_NACK *****************
 11356 ;; Defined at:
 11357 ;;		line 66 in file "i2c.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		status,2, status,0, pclath, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    6
 11378 ;; This function calls:
 11379 ;;		_i2c1_driver_sendNACK
 11380 ;; This function is called by:
 11381 ;;		_wireReadDataBlock
 11382 ;;		_wireReadDataByte
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           
 11387                           ;psect for function _I2C_Send_NACK
 11388  08A1                     _I2C_Send_NACK:	
 11389                           
 11390                           ;i2c.c: 68:     i2c1_driver_sendNACK();
 11391                           
 11392                           ;incstack = 0
 11393                           ; Regs used in _I2C_Send_NACK: [status,2+status,0+pclath+cstack]
 11394  08A1  3188  20D9         	fcall	_i2c1_driver_sendNACK
 11395  08A3  0008               	return
 11396  08A4                     __end_of_I2C_Send_NACK:	
 11397                           
 11398                           	psect	text40
 11399  08D9                     __ptext40:	
 11400 ;; *************** function _i2c1_driver_sendNACK *****************
 11401 ;; Defined at:
 11402 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;		None
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;		None
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  1    wreg      void 
 11409 ;; Registers used:
 11410 ;;		None
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;Total ram usage:        0 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    5
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_I2C_Send_NACK
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           
 11431                           ;psect for function _i2c1_driver_sendNACK
 11432  08D9                     _i2c1_driver_sendNACK:	
 11433                           
 11434                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 11435                           
 11436                           ;incstack = 0
 11437                           ; Regs used in _i2c1_driver_sendNACK: []
 11438  08D9  0024               	movlb	4	; select bank4
 11439  08DA  1696               	bsf	22,5	;volatile
 11440                           
 11441                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 11442  08DB  1616               	bsf	22,4	;volatile
 11443  08DC  0008               	return
 11444  08DD                     __end_of_i2c1_driver_sendNACK:	
 11445                           
 11446                           	psect	text41
 11447  096D                     __ptext41:	
 11448 ;; *************** function _I2C_Read_Byte *****************
 11449 ;; Defined at:
 11450 ;;		line 115 in file "i2c.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;		None
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;		None
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  1    wreg      unsigned char 
 11457 ;; Registers used:
 11458 ;;		wreg, status,2, status,0, pclath, cstack
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11403 ;;Total ram usage:        0 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    5
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_enableGestureSensor
 11410 ;;		_readGesture
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           
 11415                           ;psect for function _resetGestureParameters
 11416  12DC                     _resetGestureParameters:	
 11417                           
 11418                           ;APDS9960.c: 460:     gesture_data_.index = 0;
 11419                           
 11420                           ;incstack = 0
 11421                           ; Regs used in _resetGestureParameters: [status,2]
 11422  12DC  0024               	movlb	4	; select bank4
 11423  12DD  01E0               	clrf	(_gesture_data_^(0+512)+64)
 11424                           
 11425                           ;APDS9960.c: 461:     gesture_data_.total_gestures = 0;
 11426  12DE  01E1               	clrf	(_gesture_data_^(0+512)+65)
 11427                           
 11428                           ;APDS9960.c: 463:     gesture_ud_delta_ = 0;
 11429  12DF  01F2               	clrf	_gesture_ud_delta_
 11430  12E0  01F3               	clrf	_gesture_ud_delta_+1
 11431                           
 11432                           ;APDS9960.c: 464:     gesture_lr_delta_ = 0;
 11433  12E1  01F0               	clrf	_gesture_lr_delta_
 11434  12E2  01F1               	clrf	_gesture_lr_delta_+1
 11435                           
 11436                           ;APDS9960.c: 466:     gesture_ud_count_ = 0;
 11437  12E3  0021               	movlb	1	; select bank1
 11438  12E4  01EA               	clrf	_gesture_ud_count_^(0+128)
 11439  12E5  01EB               	clrf	(_gesture_ud_count_+1)^(0+128)
 11440                           
 11441                           ;APDS9960.c: 467:     gesture_lr_count_ = 0;
 11442  12E6  01E8               	clrf	_gesture_lr_count_^(0+128)
 11443  12E7  01E9               	clrf	(_gesture_lr_count_+1)^(0+128)
 11444                           
 11445                           ;APDS9960.c: 469:     gesture_near_count_ = 0;
 11446  12E8  0023               	movlb	3	; select bank3
 11447  12E9  01E1               	clrf	_gesture_near_count_^(0+384)
 11448  12EA  01E2               	clrf	(_gesture_near_count_+1)^(0+384)
 11449                           
 11450                           ;APDS9960.c: 470:     gesture_far_count_ = 0;
 11451  12EB  01DF               	clrf	_gesture_far_count_^(0+384)
 11452  12EC  01E0               	clrf	(_gesture_far_count_+1)^(0+384)
 11453                           
 11454                           ;APDS9960.c: 472:     gesture_state_ = 0;
 11455  12ED  01DD               	clrf	_gesture_state_^(0+384)
 11456  12EE  01DE               	clrf	(_gesture_state_+1)^(0+384)
 11457                           
 11458                           ;APDS9960.c: 473:     gesture_motion_ = DIR_NONE;
 11459  12EF  01DB               	clrf	_gesture_motion_^(0+384)
 11460  12F0  01DC               	clrf	(_gesture_motion_+1)^(0+384)
 11461  12F1  0008               	return
 11462  12F2                     __end_of_resetGestureParameters:	
 11463                           
 11464                           	psect	text28
 11465  123A                     __ptext28:	
 11466 ;; *************** function _enablePower *****************
 11467 ;; Defined at:
 11468 ;;		line 527 in file "APDS9960.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;		None
 11473 ;; Return value:  Size  Location     Type
 11474 ;;                  1    wreg      _Bool 
 11475 ;; Registers used:
 11476 ;;		wreg, status,2, status,0, pclath, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11468 ;;Total ram usage:        0 bytes
 11469 ;; Hardware stack levels used:    1
 11470 ;; Hardware stack levels required when called:    6
 11471 ;; This function calls:
 11472 ;;		_i2c1_driver_getRXData
 11473 ;;		_i2c1_driver_isBufferFull
 11474 ;;		_i2c1_driver_startRX
 11475 ;; This function is called by:
 11476 ;;		_wireReadDataBlock
 11477 ;;		_wireReadDataByte
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           
 11482                           ;psect for function _I2C_Read_Byte
 11483  096D                     _I2C_Read_Byte:	
 11484                           
 11485                           ;i2c.c: 117:     i2c1_driver_startRX();
 11486                           
 11487                           ;incstack = 0
 11488                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 11489  096D  3188  209E  3189   	fcall	_i2c1_driver_startRX
 11490  0970                     l5774:	
 11491                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 11492                           
 11493                           
 11494                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 11495  0970  3189  211B  3189   	fcall	_i2c1_driver_isBufferFull
 11496  0973  1C03               	btfss	3,0
 11497  0974  2970               	goto	l5774
 11498                           
 11499                           ;i2c.c: 137:   return i2c1_driver_getRXData();
 11500  0975  3188  209B         	fcall	_i2c1_driver_getRXData
 11501  0977  0008               	return
 11502  0978                     __end_of_I2C_Read_Byte:	
 11503                           
 11504                           	psect	text42
 11505  089E                     __ptext42:	
 11506 ;; *************** function _i2c1_driver_startRX *****************
 11507 ;; Defined at:
 11508 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;		None
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;		None
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  1    wreg      void 
 11515 ;; Registers used:
 11516 ;;		None
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11486 ;;Total ram usage:        0 bytes
 11487 ;; Hardware stack levels used:    1
 11488 ;; Hardware stack levels required when called:   10
 11489 ;; This function calls:
 11490 ;;		_setMode
 11491 ;; This function is called by:
 11492 ;;		_enableGestureSensor
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           
 11497                           ;psect for function _enablePower
 11498  123A                     _enablePower:	
 11499                           
 11500                           ;APDS9960.c: 529:     if( !setMode(0, 1) ) {
 11501                           
 11502                           ;incstack = 0
 11503                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
 11504  123A  0020               	movlb	0	; select bank0
 11505  123B  01AB               	clrf	setMode@enable
 11506  123C  0AAB               	incf	setMode@enable,f
 11507  123D  3000               	movlw	0
 11508  123E  3189  210A  3192   	fcall	_setMode
 11509  1241  3A00               	xorlw	0
 11510  1242  1D03               	skipz
 11511  1243  2A46               	goto	l8007
 11512                           
 11513                           ;APDS9960.c: 530:         return 0;
 11514  1244  3000               	movlw	0
 11515  1245  0008               	return
 11516  1246                     l8007:	
 11517                           
 11518                           ;APDS9960.c: 533:     return 1;
 11519  1246  3001               	movlw	1
 11520  1247  0008               	return
 11521  1248                     __end_of_enablePower:	
 11522                           
 11523                           	psect	text29
 11524  090A                     __ptext29:	
 11525 ;; *************** function _setMode *****************
 11526 ;; Defined at:
 11527 ;;		line 124 in file "APDS9960.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;  mode            1    wreg     unsigned char 
 11530 ;;  enable          1   11[BANK0 ] unsigned char 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  mode            1   15[BANK0 ] unsigned char 
 11533 ;;  reg_val         1   14[BANK0 ] unsigned char 
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  1    wreg      _Bool 
 11536 ;; Registers used:
 11537 ;;		wreg, status,2, status,0, pclath, cstack
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11543 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11545 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11546 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11526 ;;Total ram usage:        0 bytes
 11527 ;; Hardware stack levels used:    1
 11528 ;; Hardware stack levels required when called:    5
 11529 ;; This function calls:
 11530 ;;		Nothing
 11531 ;; This function is called by:
 11532 ;;		_I2C_Read_Byte
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           
 11537                           ;psect for function _i2c1_driver_startRX
 11538  089E                     _i2c1_driver_startRX:	
 11539                           
 11540                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 11541                           
 11542                           ;incstack = 0
 11543                           ; Regs used in _i2c1_driver_startRX: []
 11544  089E  0024               	movlb	4	; select bank4
 11545  089F  1596               	bsf	22,3	;volatile
 11546  08A0  0008               	return
 11547  08A1                     __end_of_i2c1_driver_startRX:	
 11548                           
 11549                           	psect	text43
 11550  091B                     __ptext43:	
 11551 ;; *************** function _i2c1_driver_isBufferFull *****************
 11552 ;; Defined at:
 11553 ;;		line 213 in file "mcc_generated_files/i2c1_driver.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;		None
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;		None               void
 11560 ;; Registers used:
 11561 ;;		wreg, status,2, status,0
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;Total ram usage:        1 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:    5
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_I2C_Read_Byte
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           
 11582                           ;psect for function _i2c1_driver_isBufferFull
 11583  091B                     _i2c1_driver_isBufferFull:	
 11584                           
 11585                           ;mcc_generated_files/i2c1_driver.c: 215:     return SSP1STATbits.BF;
 11586                           
 11587                           ;incstack = 0
 11588                           ; Regs used in _i2c1_driver_isBufferFull: [wreg+status,2+status,0]
 11589  091B  0024               	movlb	4	; select bank4
 11590  091C  0814               	movf	20,w	;volatile
 11591  091D  3901               	andlw	1
 11592  091E  0020               	movlb	0	; select bank0
 11593  091F  00A0               	movwf	??_i2c1_driver_isBufferFull
 11594  0920  0C20               	rrf	??_i2c1_driver_isBufferFull,w
 11595  0921  0008               	return
 11596  0922                     __end_of_i2c1_driver_isBufferFull:	
 11597                           
 11598                           	psect	text44
 11599  089B                     __ptext44:	
 11600 ;; *************** function _i2c1_driver_getRXData *****************
 11601 ;; Defined at:
 11602 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      unsigned char 
 11609 ;; Registers used:
 11610 ;;		wreg
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:    5
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_I2C_Read_Byte
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _i2c1_driver_getRXData
 11632  089B                     _i2c1_driver_getRXData:	
 11633                           
 11634                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 11635                           
 11636                           ;incstack = 0
 11637                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 11638  089B  0024               	movlb	4	; select bank4
 11639  089C  0811               	movf	17,w	;volatile
 11640  089D  0008               	return
 11641  089E                     __end_of_i2c1_driver_getRXData:	
 11642                           
 11643                           	psect	text45
 11644  0898                     __ptext45:	
 11645 ;; *************** function _I2C_ReStart *****************
 11646 ;; Defined at:
 11647 ;;		line 43 in file "i2c.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;		None
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1    wreg      void 
 11654 ;; Registers used:
 11655 ;;		status,2, status,0, pclath, cstack
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11547 ;;Total ram usage:        5 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    9
 11550 ;; This function calls:
 11551 ;;		_getMode
 11552 ;;		_wireWriteDataByte
 11553 ;; This function is called by:
 11554 ;;		_initialize
 11555 ;;		_enableGestureSensor
 11556 ;;		_enablePower
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560                           
 11561                           ;psect for function _setMode
 11562  090A                     _setMode:	
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
 11566                           ;setMode@mode stored from wreg
 11567  090A  0020               	movlb	0	; select bank0
 11568  090B  00AF               	movwf	setMode@mode
 11569                           
 11570                           ;APDS9960.c: 124: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 125: {;APDS996
      +                          0.c: 126:     uint8_t reg_val;;APDS9960.c: 129:     reg_val = getMode();
 11571  090C  3192  2204  3189   	fcall	_getMode
 11572  090F  0020               	movlb	0	; select bank0
 11573  0910  00AC               	movwf	??_setMode
 11574  0911  082C               	movf	??_setMode,w
 11575  0912  00AE               	movwf	setMode@reg_val
 11576                           
 11577                           ;APDS9960.c: 130:     if( reg_val == 0xFF ) {
 11578  0913  0A2E               	incf	setMode@reg_val,w
 11579  0914  1D03               	btfss	3,2
 11580  0915  2918               	goto	l7189
 11581  0916                     l7185:	
 11582                           
 11583                           ;APDS9960.c: 131:         return 0;
 11584  0916  3000               	movlw	0
 11585  0917  0008               	return
 11586  0918                     l7189:	
 11587                           
 11588                           ;APDS9960.c: 135:     enable = enable & 0x01;
 11589  0918  082B               	movf	setMode@enable,w
 11590  0919  3901               	andlw	1
 11591  091A  00AC               	movwf	??_setMode
 11592  091B  082C               	movf	??_setMode,w
 11593  091C  00AB               	movwf	setMode@enable
 11594                           
 11595                           ;APDS9960.c: 136:     if( mode >= 0 && mode <= 6 ) {
 11596  091D  3007               	movlw	7
 11597  091E  022F               	subwf	setMode@mode,w
 11598  091F  1803               	skipnc
 11599  0920  293D               	goto	l7199
 11600                           
 11601                           ;APDS9960.c: 137:         if (enable) {
 11602  0921  082B               	movf	setMode@enable,w
 11603  0922  1903               	btfsc	3,2
 11604  0923  2930               	goto	l7197
 11605                           
 11606                           ;APDS9960.c: 138:             reg_val |= (1 << mode);
 11607  0924  3001               	movlw	1
 11608  0925  00AC               	movwf	??_setMode
 11609  0926  0A2F               	incf	setMode@mode,w
 11610  0927  2929               	goto	u6644
 11611  0928                     u6645:	
 11612  0928  35AC               	lslf	??_setMode,f
 11613  0929                     u6644:	
 11614  0929  0B89               	decfsz	9,f
 11615  092A  2928               	goto	u6645
 11616  092B  082C               	movf	??_setMode,w
 11617  092C  00AD               	movwf	??_setMode+1
 11618  092D  082D               	movf	??_setMode+1,w
 11619  092E  04AE               	iorwf	setMode@reg_val,f
 11620                           
 11621                           ;APDS9960.c: 139:         } else {
 11622  092F  294A               	goto	l7207
 11623  0930                     l7197:	
 11624                           
 11625                           ;APDS9960.c: 140:             reg_val &= ~(1 << mode);
 11626  0930  3001               	movlw	1
 11627  0931  00AC               	movwf	??_setMode
 11628  0932  0A2F               	incf	setMode@mode,w
 11629  0933  2935               	goto	u6654
 11630  0934                     u6655:	
 11631  0934  35AC               	lslf	??_setMode,f
 11632  0935                     u6654:	
 11633  0935  0B89               	decfsz	9,f
 11634  0936  2934               	goto	u6655
 11635  0937  082C               	movf	??_setMode,w
 11636  0938  3AFF               	xorlw	255
 11637  0939  00AD               	movwf	??_setMode+1
 11638  093A  082D               	movf	??_setMode+1,w
 11639  093B  05AE               	andwf	setMode@reg_val,f
 11640  093C  294A               	goto	l7207
 11641  093D                     l7199:	
 11642  093D  3007               	movlw	7
 11643  093E  062F               	xorwf	setMode@mode,w
 11644  093F  1D03               	btfss	3,2
 11645  0940  294A               	goto	l7207
 11646                           
 11647                           ;APDS9960.c: 143:         if (enable) {
 11648  0941  082B               	movf	setMode@enable,w
 11649  0942  1903               	btfsc	3,2
 11650  0943  2949               	goto	l7205
 11651                           
 11652                           ;APDS9960.c: 144:             reg_val = 0x7F;
 11653  0944  307F               	movlw	127
 11654  0945  00AC               	movwf	??_setMode
 11655  0946  082C               	movf	??_setMode,w
 11656  0947  00AE               	movwf	setMode@reg_val
 11657                           
 11658                           ;APDS9960.c: 145:         } else {
 11659  0948  294A               	goto	l7207
 11660  0949                     l7205:	
 11661                           
 11662                           ;APDS9960.c: 146:             reg_val = 0x00;
 11663  0949  01AE               	clrf	setMode@reg_val
 11664  094A                     l7207:	
 11665                           
 11666                           ;APDS9960.c: 151:     if( !wireWriteDataByte(0x80, reg_val) ) {
 11667  094A  082E               	movf	setMode@reg_val,w
 11668  094B  00AC               	movwf	??_setMode
 11669  094C  082C               	movf	??_setMode,w
 11670  094D  00A6               	movwf	wireWriteDataByte@val
 11671  094E  3080               	movlw	128
 11672  094F  3193  2385  3189   	fcall	_wireWriteDataByte
 11673  0952  0020               	movlb	0	; select bank0
 11674  0953  0826               	movf	?_wireWriteDataByte,w
 11675  0954  0427               	iorwf	?_wireWriteDataByte+1,w
 11676  0955  1903               	btfsc	3,2
 11677  0956  2916               	goto	l7185
 11678                           
 11679                           ;APDS9960.c: 155:     return 1;
 11680  0957  3001               	movlw	1
 11681  0958  0008               	return
 11682  0959                     __end_of_setMode:	
 11683                           
 11684                           	psect	text30
 11685  1385                     __ptext30:	
 11686 ;; *************** function _wireWriteDataByte *****************
 11687 ;; Defined at:
 11688 ;;		line 871 in file "APDS9960.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  reg             1    wreg     unsigned char 
 11691 ;;  val             1    6[BANK0 ] unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  reg             1    9[BANK0 ] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  2    6[BANK0 ] int 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, pclath, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    6
 11668 ;; This function calls:
 11669 ;;		_i2c1_driver_restart
 11670 ;; This function is called by:
 11671 ;;		_wireReadDataBlock
 11672 ;;		_wireReadDataByte
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           
 11677                           ;psect for function _I2C_ReStart
 11678  0898                     _I2C_ReStart:	
 11679                           
 11680                           ;i2c.c: 45:  i2c1_driver_restart();
 11681                           
 11682                           ;incstack = 0
 11683                           ; Regs used in _I2C_ReStart: [status,2+status,0+pclath+cstack]
 11684  0898  3188  2095         	fcall	_i2c1_driver_restart
 11685  089A  0008               	return
 11686  089B                     __end_of_I2C_ReStart:	
 11687                           
 11688                           	psect	text46
 11689  0895                     __ptext46:	
 11690 ;; *************** function _i2c1_driver_restart *****************
 11691 ;; Defined at:
 11692 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;		None
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;		None
 11697 ;; Return value:  Size  Location     Type
 11698 ;;                  1    wreg      void 
 11699 ;; Registers used:
 11700 ;;		None
 11701 ;; Tracked objects:
 11702 ;;		On entry : 0/0
 11703 ;;		On exit  : 0/0
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;Total ram usage:        0 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:    5
 11713 ;; This function calls:
 11714 ;;		Nothing
 11715 ;; This function is called by:
 11716 ;;		_I2C_ReStart
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           
 11721                           ;psect for function _i2c1_driver_restart
 11722  0895                     _i2c1_driver_restart:	
 11723                           
 11724                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 11725                           
 11726                           ;incstack = 0
 11727                           ; Regs used in _i2c1_driver_restart: []
 11728  0895  0024               	movlb	4	; select bank4
 11729  0896  1496               	bsf	22,1	;volatile
 11730  0897  0008               	return
 11731  0898                     __end_of_i2c1_driver_restart:	
 11732                           
 11733                           	psect	text47
 11734  0A3E                     __ptext47:	
 11735 ;; *************** function _SYSTEM_Initialize *****************
 11736 ;; Defined at:
 11737 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;		None
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  1    wreg      void 
 11744 ;; Registers used:
 11745 ;;		wreg, status,2, status,0, pclath, cstack
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11707 ;;Total ram usage:        4 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    7
 11710 ;; This function calls:
 11711 ;;		_I2C_Start
 11712 ;;		_I2C_Stop
 11713 ;;		_I2C_Write_Byte
 11714 ;; This function is called by:
 11715 ;;		_initialize
 11716 ;;		_setMode
 11717 ;;		_setLEDDrive
 11718 ;;		_setProximityGain
 11719 ;;		_setAmbientLightGain
 11720 ;;		_setProxIntLowThresh
 11721 ;;		_setProxIntHighThresh
 11722 ;;		_setLightIntLowThreshold
 11723 ;;		_setLightIntHighThreshold
 11724 ;;		_setGestureEnterThresh
 11725 ;;		_setGestureExitThresh
 11726 ;;		_setGestureGain
 11727 ;;		_setGestureLEDDrive
 11728 ;;		_setGestureWaitTime
 11729 ;;		_setGestureIntEnable
 11730 ;;		_enableGestureSensor
 11731 ;;		_setLEDBoost
 11732 ;;		_setGestureMode
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           
 11737                           ;psect for function _wireWriteDataByte
 11738  1385                     _wireWriteDataByte:	
 11739                           
 11740                           ;incstack = 0
 11741                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
 11742                           ;wireWriteDataByte@reg stored from wreg
 11743  1385  0020               	movlb	0	; select bank0
 11744  1386  00A9               	movwf	wireWriteDataByte@reg
 11745                           
 11746                           ;APDS9960.c: 871: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 872: {;APDS9960.c: 882:     I2C_Start();
 11747  1387  3191  211E  3193   	fcall	_I2C_Start
 11748                           
 11749                           ;APDS9960.c: 883:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 11750  138A  3072               	movlw	114
 11751  138B  3193  23A0  3193   	fcall	_I2C_Write_Byte
 11752                           
 11753                           ;APDS9960.c: 884:     I2C_Write_Byte(reg);
 11754  138E  0020               	movlb	0	; select bank0
 11755  138F  0829               	movf	wireWriteDataByte@reg,w
 11756  1390  3193  23A0  3193   	fcall	_I2C_Write_Byte
 11757                           
 11758                           ;APDS9960.c: 885:     I2C_Write_Byte(val);
 11759  1393  0020               	movlb	0	; select bank0
 11760  1394  0826               	movf	wireWriteDataByte@val,w
 11761  1395  3193  23A0  3193   	fcall	_I2C_Write_Byte
 11762                           
 11763                           ;APDS9960.c: 886:     I2C_Stop();
 11764  1398  3191  2124         	fcall	_I2C_Stop
 11765                           
 11766                           ;APDS9960.c: 889:     return 1;
 11767  139A  3001               	movlw	1
 11768  139B  0020               	movlb	0	; select bank0
 11769  139C  00A6               	movwf	?_wireWriteDataByte
 11770  139D  3000               	movlw	0
 11771  139E  00A7               	movwf	?_wireWriteDataByte+1
 11772  139F  0008               	return
 11773  13A0                     __end_of_wireWriteDataByte:	
 11774                           
 11775                           	psect	text31
 11776  1204                     __ptext31:	
 11777 ;; *************** function _getMode *****************
 11778 ;; Defined at:
 11779 ;;		line 159 in file "APDS9960.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;		None
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  enable_value    1   10[BANK0 ] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      unsigned char 
 11786 ;; Registers used:
 11787 ;;		wreg, status,2, status,0, pclath, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11755 ;;Total ram usage:        0 bytes
 11756 ;; Hardware stack levels used:    1
 11757 ;; Hardware stack levels required when called:    6
 11758 ;; This function calls:
 11759 ;;		_ADC_Initialize
 11760 ;;		_OSCILLATOR_Initialize
 11761 ;;		_PIN_MANAGER_Initialize
 11762 ;;		_PMD_Initialize
 11763 ;;		_PWM1_Initialize
 11764 ;;		_SPI2_Initialize
 11765 ;;		_TMR2_Initialize
 11766 ;;		_WDT_Initialize
 11767 ;; This function is called by:
 11768 ;;		_main
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           
 11773                           ;psect for function _SYSTEM_Initialize
 11774  0A3E                     _SYSTEM_Initialize:	
 11775                           
 11776                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11777                           
 11778                           ;incstack = 0
 11779                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11780  0A3E  3189  2142  318A   	fcall	_PMD_Initialize
 11781                           
 11782                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11783  0A41  318D  2586  318A   	fcall	_PIN_MANAGER_Initialize
 11784                           
 11785                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11786  0A44  3189  213A  318A   	fcall	_OSCILLATOR_Initialize
 11787                           
 11788                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 11789  0A47  3188  20D5  318A   	fcall	_WDT_Initialize
 11790                           
 11791                           ;mcc_generated_files/mcc.c: 57:     SPI2_Initialize();
 11792  0A4A  3189  2114  318A   	fcall	_SPI2_Initialize
 11793                           
 11794                           ;mcc_generated_files/mcc.c: 58:     PWM1_Initialize();
 11795  0A4D  3189  2178  318A   	fcall	_PWM1_Initialize
 11796                           
 11797                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 11798  0A50  3189  2132  318A   	fcall	_ADC_Initialize
 11799                           
 11800                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 11801  0A53  3189  214A         	fcall	_TMR2_Initialize
 11802  0A55  0008               	return
 11803  0A56                     __end_of_SYSTEM_Initialize:	
 11804                           
 11805                           	psect	text48
 11806  08D5                     __ptext48:	
 11807 ;; *************** function _WDT_Initialize *****************
 11808 ;; Defined at:
 11809 ;;		line 77 in file "mcc_generated_files/mcc.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;		None
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11797 ;;Total ram usage:        2 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    8
 11800 ;; This function calls:
 11801 ;;		_wireReadDataByte
 11802 ;; This function is called by:
 11803 ;;		_setMode
 11804 ;;		_readGesture
 11805 ;; This function uses a non-reentrant model
 11806 ;;
 11807                           
 11808                           
 11809                           ;psect for function _getMode
 11810  1204                     _getMode:	
 11811                           
 11812                           ;APDS9960.c: 161:     uint8_t enable_value;;APDS9960.c: 164:     enable_value = wireRead
      +                          DataByte(0x80);
 11813                           
 11814                           ;incstack = 0
 11815                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
 11816  1204  3080               	movlw	128
 11817  1205  3194  2455         	fcall	_wireReadDataByte
 11818  1207  0020               	movlb	0	; select bank0
 11819  1208  00A9               	movwf	??_getMode
 11820  1209  0829               	movf	??_getMode,w
 11821  120A  00AA               	movwf	getMode@enable_value
 11822                           
 11823                           ;APDS9960.c: 166:     return enable_value;
 11824  120B  082A               	movf	getMode@enable_value,w
 11825  120C  0008               	return
 11826  120D                     __end_of_getMode:	
 11827                           
 11828                           	psect	text32
 11829  1455                     __ptext32:	
 11830 ;; *************** function _wireReadDataByte *****************
 11831 ;; Defined at:
 11832 ;;		line 893 in file "APDS9960.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  reg             1    wreg     unsigned char 
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;  reg             1    7[BANK0 ] unsigned char 
 11837 ;;  val             1    8[BANK0 ] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      unsigned char 
 11840 ;; Registers used:
 11841 ;;		wreg, status,2, status,0, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11850 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    5
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_SYSTEM_Initialize
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           
 11838                           ;psect for function _WDT_Initialize
 11839  08D5                     _WDT_Initialize:	
 11840                           
 11841                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
 11842                           
 11843                           ;incstack = 0
 11844                           ; Regs used in _WDT_Initialize: [wreg]
 11845  08D5  3018               	movlw	24
 11846  08D6  0021               	movlb	1	; select bank1
 11847  08D7  0097               	movwf	23	;volatile
 11848  08D8  0008               	return
 11849  08D9                     __end_of_WDT_Initialize:	
 11850                           
 11851                           	psect	text49
 11852  094A                     __ptext49:	
 11853 ;; *************** function _TMR2_Initialize *****************
 11854 ;; Defined at:
 11855 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11851 ;;Total ram usage:        3 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    7
 11854 ;; This function calls:
 11855 ;;		_I2C_ReStart
 11856 ;;		_I2C_Read_Byte
 11857 ;;		_I2C_Send_NACK
 11858 ;;		_I2C_Start
 11859 ;;		_I2C_Stop
 11860 ;;		_I2C_Write_Byte
 11861 ;; This function is called by:
 11862 ;;		_initialize
 11863 ;;		_getMode
 11864 ;;		_setLEDDrive
 11865 ;;		_setProximityGain
 11866 ;;		_setAmbientLightGain
 11867 ;;		_setGestureGain
 11868 ;;		_setGestureLEDDrive
 11869 ;;		_setGestureWaitTime
 11870 ;;		_setGestureIntEnable
 11871 ;;		_setLEDBoost
 11872 ;;		_setGestureMode
 11873 ;;		_isGestureAvailable
 11874 ;;		_readGesture
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           
 11879                           ;psect for function _wireReadDataByte
 11880  1455                     _wireReadDataByte:	
 11881                           
 11882                           ;incstack = 0
 11883                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
 11884                           ;wireReadDataByte@reg stored from wreg
 11885  1455  0020               	movlb	0	; select bank0
 11886  1456  00A7               	movwf	wireReadDataByte@reg
 11887                           
 11888                           ;APDS9960.c: 893:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 894: {;
      +                          APDS9960.c: 908:     unsigned char val;;APDS9960.c: 909:     I2C_Start();
 11889  1457  3191  211E  3194   	fcall	_I2C_Start
 11890                           
 11891                           ;APDS9960.c: 910:     I2C_Write_Byte((0x39 << 1 )| 0x00);
 11892  145A  3072               	movlw	114
 11893  145B  3193  23A0  3194   	fcall	_I2C_Write_Byte
 11894                           
 11895                           ;APDS9960.c: 911:     I2C_Write_Byte(reg);
 11896  145E  0020               	movlb	0	; select bank0
 11897  145F  0827               	movf	wireReadDataByte@reg,w
 11898  1460  3193  23A0  3194   	fcall	_I2C_Write_Byte
 11899                           
 11900                           ;APDS9960.c: 912:     I2C_ReStart();
 11901  1463  3191  210F  3194   	fcall	_I2C_ReStart
 11902                           
 11903                           ;APDS9960.c: 914:     I2C_Write_Byte((0x39 << 1) | 0x01);
 11904  1466  3073               	movlw	115
 11905  1467  3193  23A0  3194   	fcall	_I2C_Write_Byte
 11906                           
 11907                           ;APDS9960.c: 915:     val=I2C_Read_Byte();
 11908  146A  3192  2217  3194   	fcall	_I2C_Read_Byte
 11909  146D  0020               	movlb	0	; select bank0
 11910  146E  00A6               	movwf	??_wireReadDataByte
 11911  146F  0826               	movf	??_wireReadDataByte,w
 11912  1470  00A8               	movwf	wireReadDataByte@val
 11913                           
 11914                           ;APDS9960.c: 916:     I2C_Send_NACK();
 11915  1471  3191  2118  3194   	fcall	_I2C_Send_NACK
 11916                           
 11917                           ;APDS9960.c: 917:     I2C_Stop();
 11918  1474  3191  2124         	fcall	_I2C_Stop
 11919                           
 11920                           ;APDS9960.c: 919:     return val;
 11921  1476  0020               	movlb	0	; select bank0
 11922  1477  0828               	movf	wireReadDataByte@val,w
 11923  1478  0008               	return
 11924  1479                     __end_of_wireReadDataByte:	
 11925                           
 11926                           	psect	text33
 11927  13A0                     __ptext33:	
 11928 ;; *************** function _I2C_Write_Byte *****************
 11929 ;; Defined at:
 11930 ;;		line 75 in file "i2c.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;  Byte            1    wreg     unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  Byte            1    3[BANK0 ] unsigned char 
 11935 ;;  count           2    4[BANK0 ] unsigned int 
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      void 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11946 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 11948 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    5
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_SYSTEM_Initialize
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           
 11884                           ;psect for function _TMR2_Initialize
 11885  094A                     _TMR2_Initialize:	
 11886                           
 11887                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 11888                           
 11889                           ;incstack = 0
 11890                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11891  094A  30FF               	movlw	255
 11892  094B  0020               	movlb	0	; select bank0
 11893  094C  009E               	movwf	30	;volatile
 11894                           
 11895                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 11896  094D  019D               	clrf	29	;volatile
 11897                           
 11898                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 11899  094E  1091               	bcf	17,1	;volatile
 11900                           
 11901                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
 11902  094F  3004               	movlw	4
 11903  0950  009F               	movwf	31	;volatile
 11904  0951  0008               	return
 11905  0952                     __end_of_TMR2_Initialize:	
 11906                           
 11907                           	psect	text50
 11908  0914                     __ptext50:	
 11909 ;; *************** function _SPI2_Initialize *****************
 11910 ;; Defined at:
 11911 ;;		line 65 in file "mcc_generated_files/spi2.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;		None
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		wreg, status,2
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;Total ram usage:        0 bytes
 11930 ;; Hardware stack levels used:    1
 11931 ;; Hardware stack levels required when called:    5
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_SYSTEM_Initialize
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _SPI2_Initialize
 11941  0914                     _SPI2_Initialize:	
 11942                           
 11943                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x80;
 11944                           
 11945                           ;incstack = 0
 11946                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 11947  0914  3080               	movlw	128
 11948  0915  0024               	movlb	4	; select bank4
 11949  0916  009C               	movwf	28	;volatile
 11950                           
 11951                           ;mcc_generated_files/spi2.c: 73:     SSP2CON1 = 0x31;
 11952  0917  3031               	movlw	49
 11953  0918  009D               	movwf	29	;volatile
 11954                           
 11955                           ;mcc_generated_files/spi2.c: 76:     SSP2ADD = 0x00;
 11956  0919  019A               	clrf	26	;volatile
 11957  091A  0008               	return
 11958  091B                     __end_of_SPI2_Initialize:	
 11959                           
 11960                           	psect	text51
 11961  0978                     __ptext51:	
 11962 ;; *************** function _PWM1_Initialize *****************
 11963 ;; Defined at:
 11964 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;		None
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, status,2, status,0
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 11949 ;;Total ram usage:        5 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    6
 11952 ;; This function calls:
 11953 ;;		_i2c1_driver_TXData
 11954 ;; This function is called by:
 11955 ;;		_wireReadDataBlock
 11956 ;;		_wireWriteDataByte
 11957 ;;		_wireReadDataByte
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           
 11962                           ;psect for function _I2C_Write_Byte
 11963  13A0                     _I2C_Write_Byte:	
 11964                           
 11965                           ;incstack = 0
 11966                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
 11967                           ;I2C_Write_Byte@Byte stored from wreg
 11968  13A0  0020               	movlb	0	; select bank0
 11969  13A1  00A3               	movwf	I2C_Write_Byte@Byte
 11970                           
 11971                           ;i2c.c: 75: void I2C_Write_Byte(unsigned char Byte);i2c.c: 76: {;i2c.c: 80:     i2c1_dri
      +                          ver_TXData(Byte);
 11972  13A2  0823               	movf	I2C_Write_Byte@Byte,w
 11973  13A3  3191  2171  3193   	fcall	_i2c1_driver_TXData
 11974                           
 11975                           ;i2c.c: 83:     unsigned int count = 0;
 11976  13A6  0020               	movlb	0	; select bank0
 11977  13A7  01A4               	clrf	I2C_Write_Byte@count
 11978  13A8  01A5               	clrf	I2C_Write_Byte@count+1
 11979  13A9                     l1213:	
 11980                           ;i2c.c: 84:     while(SSP1CON2bits.ACKSTAT);
 11981                           
 11982  13A9  0024               	movlb	4	; select bank4
 11983  13AA  1B16               	btfsc	22,6	;volatile
 11984  13AB  2BA9               	goto	l1213
 11985  13AC                     l6887:	
 11986  13AC  0020               	movlb	0	; select bank0
 11987  13AD  0825               	movf	I2C_Write_Byte@count+1,w
 11988  13AE  00A2               	movwf	??_I2C_Write_Byte+1
 11989  13AF  0824               	movf	I2C_Write_Byte@count,w
 11990  13B0  00A1               	movwf	??_I2C_Write_Byte
 11991  13B1  0AA4               	incf	I2C_Write_Byte@count,f
 11992  13B2  1903               	skipnz
 11993  13B3  0AA5               	incf	I2C_Write_Byte@count+1,f
 11994  13B4  3000               	movlw	0
 11995  13B5  0222               	subwf	??_I2C_Write_Byte+1,w
 11996  13B6  3005               	movlw	5
 11997  13B7  1903               	skipnz
 11998  13B8  0221               	subwf	??_I2C_Write_Byte,w
 11999  13B9  1803               	btfsc	3,0
 12000  13BA  0008               	return
 12001  13BB  2BAC               	goto	l6887
 12002  13BC                     __end_of_I2C_Write_Byte:	
 12003                           
 12004                           	psect	text34
 12005  1171                     __ptext34:	
 12006 ;; *************** function _i2c1_driver_TXData *****************
 12007 ;; Defined at:
 12008 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  d               1    wreg     unsigned char 
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;  d               1    0[BANK0 ] unsigned char 
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 11982 ;;Total ram usage:        0 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    5
 11985 ;; This function calls:
 11986 ;;		Nothing
 11987 ;; This function is called by:
 11988 ;;		_SYSTEM_Initialize
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           
 11993                           ;psect for function _PWM1_Initialize
 11994  0978                     _PWM1_Initialize:	
 11995                           
 11996                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
 11997                           
 11998                           ;incstack = 0
 11999                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12000  0978  308F               	movlw	143
 12001  0979  0025               	movlb	5	; select bank5
 12002  097A  0093               	movwf	19	;volatile
 12003                           
 12004                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
 12005  097B  3001               	movlw	1
 12006  097C  0092               	movwf	18	;volatile
 12007                           
 12008                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
 12009  097D  30FF               	movlw	255
 12010  097E  0091               	movwf	17	;volatile
 12011                           
 12012                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
 12013  097F  081F               	movf	31,w	;volatile
 12014  0980  39FC               	andlw	-4
 12015  0981  3801               	iorlw	1
 12016  0982  009F               	movwf	31	;volatile
 12017  0983  0008               	return
 12018  0984                     __end_of_PWM1_Initialize:	
 12019                           
 12020                           	psect	text52
 12021  0942                     __ptext52:	
 12022 ;; *************** function _PMD_Initialize *****************
 12023 ;; Defined at:
 12024 ;;		line 83 in file "mcc_generated_files/mcc.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		status,2
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    5
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_SYSTEM_Initialize
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           
 12053                           ;psect for function _PMD_Initialize
 12054  0942                     _PMD_Initialize:	
 12055                           
 12056                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 12057                           
 12058                           ;incstack = 0
 12059                           ; Regs used in _PMD_Initialize: [status,2]
 12060  0942  0032               	movlb	18	; select bank18
 12061  0943  0191               	clrf	17	;volatile
 12062                           
 12063                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 12064  0944  0192               	clrf	18	;volatile
 12065                           
 12066                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 12067  0945  0193               	clrf	19	;volatile
 12068                           
 12069                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 12070  0946  0194               	clrf	20	;volatile
 12071                           
 12072                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 12073  0947  0195               	clrf	21	;volatile
 12074                           
 12075                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 12076  0948  0196               	clrf	22	;volatile
 12077  0949  0008               	return
 12078  094A                     __end_of_PMD_Initialize:	
 12079                           
 12080                           	psect	text53
 12081  0D86                     __ptext53:	
 12082 ;; *************** function _PIN_MANAGER_Initialize *****************
 12083 ;; Defined at:
 12084 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;Total ram usage:        0 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    5
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_SYSTEM_Initialize
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           
 12113                           ;psect for function _PIN_MANAGER_Initialize
 12114  0D86                     _PIN_MANAGER_Initialize:	
 12115                           
 12116                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12117                           
 12118                           ;incstack = 0
 12119                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12120  0D86  0022               	movlb	2	; select bank2
 12121  0D87  018C               	clrf	12	;volatile
 12122                           
 12123                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12124  0D88  018D               	clrf	13	;volatile
 12125                           
 12126                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12127  0D89  018E               	clrf	14	;volatile
 12128                           
 12129                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
 12130  0D8A  3037               	movlw	55
 12131  0D8B  0021               	movlb	1	; select bank1
 12132  0D8C  008C               	movwf	12	;volatile
 12133                           
 12134                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
 12135  0D8D  30B0               	movlw	176
 12136  0D8E  008D               	movwf	13	;volatile
 12137                           
 12138                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBA;
 12139  0D8F  30BA               	movlw	186
 12140  0D90  008E               	movwf	14	;volatile
 12141                           
 12142                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF4;
 12143  0D91  30F4               	movlw	244
 12144  0D92  0023               	movlb	3	; select bank3
 12145  0D93  008E               	movwf	14	;volatile
 12146                           
 12147                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 12148  0D94  018D               	clrf	13	;volatile
 12149                           
 12150                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x11;
 12151  0D95  3011               	movlw	17
 12152  0D96  008C               	movwf	12	;volatile
 12153                           
 12154                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12155  0D97  0024               	movlb	4	; select bank4
 12156  0D98  018D               	clrf	13	;volatile
 12157                           
 12158                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12159  0D99  018C               	clrf	12	;volatile
 12160                           
 12161                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12162  0D9A  018E               	clrf	14	;volatile
 12163                           
 12164                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12165  0D9B  0025               	movlb	5	; select bank5
 12166  0D9C  018C               	clrf	12	;volatile
 12167                           
 12168                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12169  0D9D  018D               	clrf	13	;volatile
 12170                           
 12171                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12172  0D9E  018E               	clrf	14	;volatile
 12173                           
 12174                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12175  0D9F  3037               	movlw	55
 12176  0DA0  0026               	movlb	6	; select bank6
 12177  0DA1  008C               	movwf	12	;volatile
 12178                           
 12179                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12180  0DA2  30F0               	movlw	240
 12181  0DA3  008D               	movwf	13	;volatile
 12182                           
 12183                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12184  0DA4  30FF               	movlw	255
 12185  0DA5  008E               	movwf	14	;volatile
 12186                           
 12187                           ;mcc_generated_files/pin_manager.c: 105:     PIE0bits.IOCIE = 1;
 12188  0DA6  0021               	movlb	1	; select bank1
 12189  0DA7  1610               	bsf	16,4	;volatile
 12190                           
 12191                           ;mcc_generated_files/pin_manager.c: 108:     SSP2DATPPS = 0x0C;
 12192  0DA8  300C               	movlw	12
 12193  0DA9  003C               	movlb	28	; select bank28
 12194  0DAA  009E               	movwf	30	;volatile
 12195                           
 12196                           ;mcc_generated_files/pin_manager.c: 109:     SSP1CLKPPS = 0x0F;
 12197  0DAB  300F               	movlw	15
 12198  0DAC  00A0               	movwf	32	;volatile
 12199                           
 12200                           ;mcc_generated_files/pin_manager.c: 110:     RB6PPS = 0x1A;
 12201  0DAD  301A               	movlw	26
 12202  0DAE  003D               	movlb	29	; select bank29
 12203  0DAF  009E               	movwf	30	;volatile
 12204                           
 12205                           ;mcc_generated_files/pin_manager.c: 111:     RB7PPS = 0x18;
 12206  0DB0  3018               	movlw	24
 12207  0DB1  009F               	movwf	31	;volatile
 12208                           
 12209                           ;mcc_generated_files/pin_manager.c: 112:     RB5PPS = 0x19;
 12210  0DB2  3019               	movlw	25
 12211  0DB3  009D               	movwf	29	;volatile
 12212                           
 12213                           ;mcc_generated_files/pin_manager.c: 113:     RC2PPS = 0x1B;
 12214  0DB4  301B               	movlw	27
 12215  0DB5  00A2               	movwf	34	;volatile
 12216                           
 12217                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x0D;
 12218  0DB6  300D               	movlw	13
 12219  0DB7  003C               	movlb	28	; select bank28
 12220  0DB8  00A1               	movwf	33	;volatile
 12221                           
 12222                           ;mcc_generated_files/pin_manager.c: 115:     SSP2CLKPPS = 0x0E;
 12223  0DB9  300E               	movlw	14
 12224  0DBA  009D               	movwf	29	;volatile
 12225  0DBB  0008               	return
 12226  0DBC                     __end_of_PIN_MANAGER_Initialize:	
 12227                           
 12228                           	psect	text54
 12229  093A                     __ptext54:	
 12230 ;; *************** function _OSCILLATOR_Initialize *****************
 12231 ;; Defined at:
 12232 ;;		line 63 in file "mcc_generated_files/mcc.c"
 12233 ;; Parameters:    Size  Location     Type
 12234 ;;		None
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;		None
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  1    wreg      void 
 12239 ;; Registers used:
 12240 ;;		wreg, status,2
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12250 ;;Total ram usage:        0 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:    5
 12253 ;; This function calls:
 12254 ;;		Nothing
 12255 ;; This function is called by:
 12256 ;;		_SYSTEM_Initialize
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           
 12261                           ;psect for function _OSCILLATOR_Initialize
 12262  093A                     _OSCILLATOR_Initialize:	
 12263                           
 12264                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
 12265                           
 12266                           ;incstack = 0
 12267                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12268  093A  3061               	movlw	97
 12269  093B  0032               	movlb	18	; select bank18
 12270  093C  0099               	movwf	25	;volatile
 12271                           
 12272                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 12273  093D  019B               	clrf	27	;volatile
 12274                           
 12275                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 12276  093E  019D               	clrf	29	;volatile
 12277                           
 12278                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
 12279  093F  019F               	clrf	31	;volatile
 12280                           
 12281                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12282  0940  019E               	clrf	30	;volatile
 12283  0941  0008               	return
 12284  0942                     __end_of_OSCILLATOR_Initialize:	
 12285                           
 12286                           	psect	text55
 12287  0932                     __ptext55:	
 12288 ;; *************** function _ADC_Initialize *****************
 12289 ;; Defined at:
 12290 ;;		line 65 in file "mcc_generated_files/adc.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;		None
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;		None
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      void 
 12297 ;; Registers used:
 12298 ;;		wreg, status,2
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;Total ram usage:        0 bytes
 12309 ;; Hardware stack levels used:    1
 12310 ;; Hardware stack levels required when called:    5
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_SYSTEM_Initialize
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           
 12319                           ;psect for function _ADC_Initialize
 12320  0932                     _ADC_Initialize:	
 12321                           
 12322                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 12323                           
 12324                           ;incstack = 0
 12325                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12326  0932  3001               	movlw	1
 12327  0933  0021               	movlb	1	; select bank1
 12328  0934  009D               	movwf	29	;volatile
 12329                           
 12330                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
 12331  0935  019E               	clrf	30	;volatile
 12332                           
 12333                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
 12334  0936  019F               	clrf	31	;volatile
 12335                           
 12336                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 12337  0937  019B               	clrf	27	;volatile
 12338                           
 12339                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
 12340  0938  019C               	clrf	28	;volatile
 12341  0939  0008               	return
 12342  093A                     __end_of_ADC_Initialize:	
 12343                           
 12344                           	psect	text56
 12345  090D                     __ptext56:	
 12346 ;; *************** function _PIR_Sensor *****************
 12347 ;; Defined at:
 12348 ;;		line 322 in file "main.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      _Bool 
 12355 ;; Registers used:
 12356 ;;		wreg
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:    5
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_main
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           
 12377                           ;psect for function _PIR_Sensor
 12378  090D                     _PIR_Sensor:	
 12379                           
 12380                           ;main.c: 327:     if(PORTCbits.RC3 >= 1){
 12381                           
 12382                           ;incstack = 0
 12383                           ; Regs used in _PIR_Sensor: [wreg]
 12384  090D  0020               	movlb	0	; select bank0
 12385  090E  1D8E               	btfss	14,3	;volatile
 12386  090F  2912               	goto	l6736
 12387                           
 12388                           ;main.c: 332:         return 1;
 12389  0910  3001               	movlw	1
 12390  0911  0008               	return
 12391  0912                     l6736:	
 12392                           
 12393                           ;main.c: 335:         return 0;
 12394  0912  3000               	movlw	0
 12395  0913  0008               	return
 12396  0914                     __end_of_PIR_Sensor:	
 12397                           
 12398                           	psect	text57
 12399  06D3                     __ptext57:	
 12400 ;; *************** function _Get_ADC *****************
 12401 ;; Defined at:
 12402 ;;		line 291 in file "main.c"
 12403 ;; Parameters:    Size  Location     Type
 12404 ;;		None
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  val             2   15[BANK0 ] int 
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1    wreg      void 
 12409 ;; Registers used:
 12410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;Total ram usage:        5 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:    8
 12423 ;; This function calls:
 12424 ;;		_ADC_GetConversion
 12425 ;;		_Display_Name
 12426 ;; This function is called by:
 12427 ;;		_main
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           
 12432                           ;psect for function _Get_ADC
 12433  06D3                     _Get_ADC:	
 12434                           
 12435                           ;main.c: 292:     adcResult = ADC_GetConversion(BTN) >> 6;
 12436                           
 12437                           ;incstack = 0
 12438                           ; Regs used in _Get_ADC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12439  06D3  3017               	movlw	23
 12440  06D4  318A  22C1  3186   	fcall	_ADC_GetConversion
 12441  06D7  0020               	movlb	0	; select bank0
 12442  06D8  0820               	movf	?_ADC_GetConversion,w
 12443  06D9  00AC               	movwf	??_Get_ADC
 12444  06DA  0821               	movf	?_ADC_GetConversion+1,w
 12445  06DB  00AD               	movwf	??_Get_ADC+1
 12446  06DC  3006               	movlw	6
 12447  06DD                     u6175:	
 12448  06DD  36AD               	lsrf	??_Get_ADC+1,f
 12449  06DE  0CAC               	rrf	??_Get_ADC,f
 12450  06DF  0B89               	decfsz	9,f
 12451  06E0  2EDD               	goto	u6175
 12452  06E1  082C               	movf	??_Get_ADC,w
 12453  06E2  00AE               	movwf	??_Get_ADC+2
 12454  06E3  082E               	movf	??_Get_ADC+2,w
 12455  06E4  00EC               	movwf	_adcResult
 12456                           
 12457                           ;main.c: 293:     int val = adcResult;
 12458  06E5  086C               	movf	_adcResult,w
 12459  06E6  00AC               	movwf	??_Get_ADC
 12460  06E7  01AD               	clrf	??_Get_ADC+1
 12461  06E8  082C               	movf	??_Get_ADC,w
 12462  06E9  00AF               	movwf	Get_ADC@val
 12463  06EA  082D               	movf	??_Get_ADC+1,w
 12464  06EB  00B0               	movwf	Get_ADC@val+1
 12465                           
 12466                           ;main.c: 294:     if(val >= 230 && val <= 240) {
 12467  06EC  0830               	movf	Get_ADC@val+1,w
 12468  06ED  3A80               	xorlw	128
 12469  06EE  00AC               	movwf	??_Get_ADC
 12470  06EF  3080               	movlw	128
 12471  06F0  022C               	subwf	??_Get_ADC,w
 12472  06F1  1D03               	skipz
 12473  06F2  2EF5               	goto	u6185
 12474  06F3  30E6               	movlw	230
 12475  06F4  022F               	subwf	Get_ADC@val,w
 12476  06F5                     u6185:	
 12477  06F5  1C03               	skipc
 12478  06F6  2F03               	goto	l6956
 12479  06F7  0020               	movlb	0	; select bank0
 12480  06F8  0830               	movf	Get_ADC@val+1,w
 12481  06F9  3A80               	xorlw	128
 12482  06FA  00AC               	movwf	??_Get_ADC
 12483  06FB  3080               	movlw	128
 12484  06FC  022C               	subwf	??_Get_ADC,w
 12485  06FD  1D03               	skipz
 12486  06FE  2F01               	goto	u6195
 12487  06FF  30F1               	movlw	241
 12488  0700  022F               	subwf	Get_ADC@val,w
 12489  0701                     u6195:	
 12490  0701  1C03               	btfss	3,0
 12491  0702  2FB0               	goto	l7002
 12492  0703                     l6956:	
 12493  0703  0020               	movlb	0	; select bank0
 12494  0704  0830               	movf	Get_ADC@val+1,w
 12495  0705  3A80               	xorlw	128
 12496  0706  00AC               	movwf	??_Get_ADC
 12497  0707  3080               	movlw	128
 12498  0708  022C               	subwf	??_Get_ADC,w
 12499  0709  1D03               	skipz
 12500  070A  2F0D               	goto	u6205
 12501  070B  30D7               	movlw	215
 12502  070C  022F               	subwf	Get_ADC@val,w
 12503  070D                     u6205:	
 12504  070D  1C03               	skipc
 12505  070E  2F1B               	goto	l6962
 12506  070F  0020               	movlb	0	; select bank0
 12507  0710  0830               	movf	Get_ADC@val+1,w
 12508  0711  3A80               	xorlw	128
 12509  0712  00AC               	movwf	??_Get_ADC
 12510  0713  3080               	movlw	128
 12511  0714  022C               	subwf	??_Get_ADC,w
 12512  0715  1D03               	skipz
 12513  0716  2F19               	goto	u6215
 12514  0717  30E2               	movlw	226
 12515  0718  022F               	subwf	Get_ADC@val,w
 12516  0719                     u6215:	
 12517  0719  1C03               	btfss	3,0
 12518  071A  2FB0               	goto	l7002
 12519  071B                     l6962:	
 12520  071B  0020               	movlb	0	; select bank0
 12521  071C  0830               	movf	Get_ADC@val+1,w
 12522  071D  3A80               	xorlw	128
 12523  071E  00AC               	movwf	??_Get_ADC
 12524  071F  3080               	movlw	128
 12525  0720  022C               	subwf	??_Get_ADC,w
 12526  0721  1D03               	skipz
 12527  0722  2F25               	goto	u6225
 12528  0723  30A5               	movlw	165
 12529  0724  022F               	subwf	Get_ADC@val,w
 12530  0725                     u6225:	
 12531  0725  1C03               	skipc
 12532  0726  2F33               	goto	l6968
 12533  0727  0020               	movlb	0	; select bank0
 12534  0728  0830               	movf	Get_ADC@val+1,w
 12535  0729  3A80               	xorlw	128
 12536  072A  00AC               	movwf	??_Get_ADC
 12537  072B  3080               	movlw	128
 12538  072C  022C               	subwf	??_Get_ADC,w
 12539  072D  1D03               	skipz
 12540  072E  2F31               	goto	u6235
 12541  072F  30B5               	movlw	181
 12542  0730  022F               	subwf	Get_ADC@val,w
 12543  0731                     u6235:	
 12544  0731  1C03               	btfss	3,0
 12545  0732  2FB0               	goto	l7002
 12546  0733                     l6968:	
 12547  0733  0020               	movlb	0	; select bank0
 12548  0734  0830               	movf	Get_ADC@val+1,w
 12549  0735  3A80               	xorlw	128
 12550  0736  00AC               	movwf	??_Get_ADC
 12551  0737  3080               	movlw	128
 12552  0738  022C               	subwf	??_Get_ADC,w
 12553  0739  1D03               	skipz
 12554  073A  2F3D               	goto	u6245
 12555  073B  308C               	movlw	140
 12556  073C  022F               	subwf	Get_ADC@val,w
 12557  073D                     u6245:	
 12558  073D  1C03               	skipc
 12559  073E  2F60               	goto	l6982
 12560  073F  0020               	movlb	0	; select bank0
 12561  0740  0830               	movf	Get_ADC@val+1,w
 12562  0741  3A80               	xorlw	128
 12563  0742  00AC               	movwf	??_Get_ADC
 12564  0743  3080               	movlw	128
 12565  0744  022C               	subwf	??_Get_ADC,w
 12566  0745  1D03               	skipz
 12567  0746  2F49               	goto	u6255
 12568  0747  309C               	movlw	156
 12569  0748  022F               	subwf	Get_ADC@val,w
 12570  0749                     u6255:	
 12571  0749  1803               	skipnc
 12572  074A  2F60               	goto	l6982
 12573                           
 12574                           ;main.c: 301:         printed = 0;
 12575  074B  0020               	movlb	0	; select bank0
 12576  074C  01ED               	clrf	_printed
 12577                           
 12578                           ;main.c: 302:         --name;
 12579  074D  30FF               	movlw	255
 12580  074E  07DC               	addwf	_name,f
 12581  074F  30FF               	movlw	255
 12582  0750  3DDD               	addwfc	_name+1,f
 12583                           
 12584                           ;main.c: 303:         if(name < 0) {
 12585  0751  1FDD               	btfss	_name+1,7
 12586  0752  2F57               	goto	l6980
 12587                           
 12588                           ;main.c: 304:             name = 3;
 12589  0753  3003               	movlw	3
 12590  0754  00DC               	movwf	_name
 12591  0755  3000               	movlw	0
 12592  0756  00DD               	movwf	_name+1
 12593  0757                     l6980:	
 12594                           
 12595                           ;main.c: 306:         Display_Name(names[name]);
 12596  0757  355C               	lslf	_name,w
 12597  0758  3E60               	addlw	(low (_names| (0+256)))& (0+255)
 12598  0759  0086               	movwf	6
 12599  075A  3001               	movlw	1	; select bank2/3
 12600  075B  0087               	movwf	7
 12601  075C  3F40               	moviw [0]fsr1
 12602  075D  00A5               	movwf	Display_Name@string1
 12603  075E  3F41               	moviw [1]fsr1
 12604  075F  2FAD               	goto	L9
 12605  0760                     l6982:	
 12606                           ;main.c: 307:     }
 12607                           
 12608  0760  0020               	movlb	0	; select bank0
 12609  0761  0830               	movf	Get_ADC@val+1,w
 12610  0762  3A80               	xorlw	128
 12611  0763  00AC               	movwf	??_Get_ADC
 12612  0764  3080               	movlw	128
 12613  0765  022C               	subwf	??_Get_ADC,w
 12614  0766  1D03               	skipz
 12615  0767  2F6A               	goto	u6275
 12616  0768  305A               	movlw	90
 12617  0769  022F               	subwf	Get_ADC@val,w
 12618  076A                     u6275:	
 12619  076A  1C03               	skipc
 12620  076B  2F78               	goto	l6988
 12621  076C  0020               	movlb	0	; select bank0
 12622  076D  0830               	movf	Get_ADC@val+1,w
 12623  076E  3A80               	xorlw	128
 12624  076F  00AC               	movwf	??_Get_ADC
 12625  0770  3080               	movlw	128
 12626  0771  022C               	subwf	??_Get_ADC,w
 12627  0772  1D03               	skipz
 12628  0773  2F76               	goto	u6285
 12629  0774  3079               	movlw	121
 12630  0775  022F               	subwf	Get_ADC@val,w
 12631  0776                     u6285:	
 12632  0776  1C03               	btfss	3,0
 12633  0777  2FB0               	goto	l7002
 12634  0778                     l6988:	
 12635  0778  0020               	movlb	0	; select bank0
 12636  0779  0830               	movf	Get_ADC@val+1,w
 12637  077A  3A80               	xorlw	128
 12638  077B  00AC               	movwf	??_Get_ADC
 12639  077C  3080               	movlw	128
 12640  077D  022C               	subwf	??_Get_ADC,w
 12641  077E  1D03               	skipz
 12642  077F  2F82               	goto	u6295
 12643  0780  30C8               	movlw	200
 12644  0781  022F               	subwf	Get_ADC@val,w
 12645  0782                     u6295:	
 12646  0782  1C03               	skipc
 12647  0783  2FB0               	goto	l7002
 12648  0784  0020               	movlb	0	; select bank0
 12649  0785  0830               	movf	Get_ADC@val+1,w
 12650  0786  3A80               	xorlw	128
 12651  0787  00AC               	movwf	??_Get_ADC
 12652  0788  3080               	movlw	128
 12653  0789  022C               	subwf	??_Get_ADC,w
 12654  078A  1D03               	skipz
 12655  078B  2F8E               	goto	u6305
 12656  078C  30E7               	movlw	231
 12657  078D  022F               	subwf	Get_ADC@val,w
 12658  078E                     u6305:	
 12659  078E  1803               	skipnc
 12660  078F  2FB0               	goto	l7002
 12661                           
 12662                           ;main.c: 311:         printed = 0;
 12663  0790  0020               	movlb	0	; select bank0
 12664  0791  01ED               	clrf	_printed
 12665                           
 12666                           ;main.c: 312:         name++;
 12667  0792  3001               	movlw	1
 12668  0793  07DC               	addwf	_name,f
 12669  0794  3000               	movlw	0
 12670  0795  3DDD               	addwfc	_name+1,f
 12671                           
 12672                           ;main.c: 313:         if(name > 3) {
 12673  0796  085D               	movf	_name+1,w
 12674  0797  3A80               	xorlw	128
 12675  0798  00AC               	movwf	??_Get_ADC
 12676  0799  3080               	movlw	128
 12677  079A  022C               	subwf	??_Get_ADC,w
 12678  079B  1D03               	skipz
 12679  079C  2F9F               	goto	u6315
 12680  079D  3004               	movlw	4
 12681  079E  025C               	subwf	_name,w
 12682  079F                     u6315:	
 12683  079F  1C03               	skipc
 12684  07A0  2FA4               	goto	l7000
 12685                           
 12686                           ;main.c: 314:            name = 0;
 12687  07A1  0020               	movlb	0	; select bank0
 12688  07A2  01DC               	clrf	_name
 12689  07A3  01DD               	clrf	_name+1
 12690  07A4                     l7000:	
 12691                           
 12692                           ;main.c: 316:         Display_Name(names[name]);
 12693  07A4  0020               	movlb	0	; select bank0
 12694  07A5  355C               	lslf	_name,w
 12695  07A6  3E60               	addlw	(low (_names| (0+256)))& (0+255)
 12696  07A7  0086               	movwf	6
 12697  07A8  3001               	movlw	1	; select bank2/3
 12698  07A9  0087               	movwf	7
 12699  07AA  3F40               	moviw [0]fsr1
 12700  07AB  00A5               	movwf	Display_Name@string1
 12701  07AC  3F41               	moviw [1]fsr1
 12702  07AD                     L9:	
 12703  07AD  00A6               	movwf	Display_Name@string1+1
 12704  07AE  318E  26A0         	fcall	_Display_Name
 12705  07B0                     l7002:	
 12706                           
 12707                           ;main.c: 318:     adcResult = 0;
 12708  07B0  0020               	movlb	0	; select bank0
 12709  07B1  01EC               	clrf	_adcResult
 12710  07B2  0008               	return
 12711  07B3                     __end_of_Get_ADC:	
 12712                           
 12713                           	psect	text58
 12714  0EA0                     __ptext58:	
 12715 ;; *************** function _Display_Name *****************
 12716 ;; Defined at:
 12717 ;;		line 214 in file "main.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  string1         2    5[BANK0 ] PTR unsigned char 
 12720 ;;		 -> STR_4(11), STR_3(16), STR_2(13), STR_1(12), 
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;  i               2   10[BANK0 ] int 
 12723 ;;  length          2    8[BANK0 ] int 
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      void 
 12726 ;; Registers used:
 12727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;Total ram usage:        7 bytes
 12738 ;; Hardware stack levels used:    1
 12739 ;; Hardware stack levels required when called:    7
 12740 ;; This function calls:
 12741 ;;		_PWM_Output_Disable
 12742 ;;		_PWM_Output_Enable
 12743 ;;		_SPI_Write
 12744 ;;		_strlen
 12745 ;; This function is called by:
 12746 ;;		_main
 12747 ;;		_handleGesture
 12748 ;;		_Get_ADC
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           
 12753                           ;psect for function _Display_Name
 12754  0EA0                     _Display_Name:	
 12755                           
 12756                           ;main.c: 215:     int length;;main.c: 216:     int i;;main.c: 217:     PWM_Output_Enable
      +                          ();
 12757                           
 12758                           ;incstack = 0
 12759                           ; Regs used in _Display_Name: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12760  0EA0  3188  20D1  318E   	fcall	_PWM_Output_Enable
 12761                           
 12762                           ;main.c: 218:     _delay((unsigned long)((200)*(500000/4000.0)));
 12763  0EA3  3021               	movlw	33
 12764  0EA4  0020               	movlb	0	; select bank0
 12765  0EA5  00A7               	movwf	??_Display_Name
 12766  0EA6  3076               	movlw	118
 12767  0EA7                     u6487:	
 12768  0EA7  0B89               	decfsz	9,f
 12769  0EA8  2EA7               	goto	u6487
 12770  0EA9  0BA7               	decfsz	??_Display_Name,f
 12771  0EAA  2EA7               	goto	u6487
 12772  0EAB  0000               	nop
 12773                           
 12774                           ;main.c: 219:     PWM_Output_Disable();
 12775  0EAC  3188  2092  318E   	fcall	_PWM_Output_Disable
 12776                           
 12777                           ;main.c: 221:         SPI_Write(0xFE);
 12778  0EAF  30FE               	movlw	254
 12779  0EB0  318A  2211  318E   	fcall	_SPI_Write
 12780                           
 12781                           ;main.c: 222:         _delay((unsigned long)((100)*(500000/4000.0)));
 12782  0EB3  3011               	movlw	17
 12783  0EB4  0020               	movlb	0	; select bank0
 12784  0EB5  00A7               	movwf	??_Display_Name
 12785  0EB6  303A               	movlw	58
 12786  0EB7                     u6497:	
 12787  0EB7  0B89               	decfsz	9,f
 12788  0EB8  2EB7               	goto	u6497
 12789  0EB9  0BA7               	decfsz	??_Display_Name,f
 12790  0EBA  2EB7               	goto	u6497
 12791  0EBB  0000               	nop
 12792                           
 12793                           ;main.c: 223:         SPI_Write(0x51);
 12794  0EBC  3051               	movlw	81
 12795  0EBD  318A  2211  318E   	fcall	_SPI_Write
 12796                           
 12797                           ;main.c: 224:         length = strlen(string1);
 12798  0EC0  0020               	movlb	0	; select bank0
 12799  0EC1  0826               	movf	Display_Name@string1+1,w
 12800  0EC2  00A1               	movwf	strlen@s+1
 12801  0EC3  0825               	movf	Display_Name@string1,w
 12802  0EC4  00A0               	movwf	strlen@s
 12803  0EC5  318A  2226  318E   	fcall	_strlen
 12804  0EC8  0020               	movlb	0	; select bank0
 12805  0EC9  0821               	movf	?_strlen+1,w
 12806  0ECA  00A9               	movwf	Display_Name@length+1
 12807  0ECB  0820               	movf	?_strlen,w
 12808  0ECC  00A8               	movwf	Display_Name@length
 12809                           
 12810                           ;main.c: 225:         for(i = 0; i < length; i++){
 12811  0ECD  01AA               	clrf	Display_Name@i
 12812  0ECE  01AB               	clrf	Display_Name@i+1
 12813  0ECF                     l6388:	
 12814  0ECF  082B               	movf	Display_Name@i+1,w
 12815  0ED0  3A80               	xorlw	128
 12816  0ED1  00A7               	movwf	??_Display_Name
 12817  0ED2  0829               	movf	Display_Name@length+1,w
 12818  0ED3  3A80               	xorlw	128
 12819  0ED4  0227               	subwf	??_Display_Name,w
 12820  0ED5  1D03               	skipz
 12821  0ED6  2ED9               	goto	u5505
 12822  0ED7  0828               	movf	Display_Name@length,w
 12823  0ED8  022A               	subwf	Display_Name@i,w
 12824  0ED9                     u5505:	
 12825  0ED9  1803               	btfsc	3,0
 12826  0EDA  2EEC               	goto	l783
 12827                           
 12828                           ;main.c: 226:             SPI_Write(string1[i]);
 12829  0EDB  0020               	movlb	0	; select bank0
 12830  0EDC  0825               	movf	Display_Name@string1,w
 12831  0EDD  072A               	addwf	Display_Name@i,w
 12832  0EDE  0084               	movwf	4
 12833  0EDF  0826               	movf	Display_Name@string1+1,w
 12834  0EE0  3D2B               	addwfc	Display_Name@i+1,w
 12835  0EE1  0085               	movwf	5
 12836  0EE2  0800               	movf	0,w	;code access
 12837  0EE3  318A  2211  318E   	fcall	_SPI_Write
 12838                           
 12839                           ;main.c: 227:         }
 12840  0EE6  3001               	movlw	1
 12841  0EE7  0020               	movlb	0	; select bank0
 12842  0EE8  07AA               	addwf	Display_Name@i,f
 12843  0EE9  3000               	movlw	0
 12844  0EEA  3DAB               	addwfc	Display_Name@i+1,f
 12845  0EEB  2ECF               	goto	l6388
 12846  0EEC                     l783:	
 12847                           
 12848                           ;main.c: 229:     printed = 1;
 12849  0EEC  0020               	movlb	0	; select bank0
 12850  0EED  01ED               	clrf	_printed
 12851  0EEE  0AED               	incf	_printed,f
 12852  0EEF  0008               	return
 12853  0EF0                     __end_of_Display_Name:	
 12854                           
 12855                           	psect	text59
 12856  0A26                     __ptext59:	
 12857 ;; *************** function _strlen *****************
 12858 ;; Defined at:
 12859 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 12862 ;;		 -> STR_4(11), STR_3(16), STR_2(13), STR_1(12), 
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 12865 ;;		 -> STR_4(11), STR_3(16), STR_2(13), STR_1(12), 
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  2    0[BANK0 ] unsigned int 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12879 ;;Total ram usage:        5 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; Hardware stack levels required when called:    5
 12882 ;; This function calls:
 12883 ;;		Nothing
 12884 ;; This function is called by:
 12885 ;;		_Display_Name
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           
 12890                           ;psect for function _strlen
 12891  0A26                     _strlen:	
 12892                           
 12893                           ;incstack = 0
 12894                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 12895  0A26  0020               	movlb	0	; select bank0
 12896  0A27  0821               	movf	strlen@s+1,w
 12897  0A28  00A4               	movwf	strlen@a+1
 12898  0A29  0820               	movf	strlen@s,w
 12899  0A2A  00A3               	movwf	strlen@a
 12900  0A2B                     l5914:	
 12901  0A2B  0820               	movf	strlen@s,w
 12902  0A2C  0084               	movwf	4
 12903  0A2D  0821               	movf	strlen@s+1,w
 12904  0A2E  0085               	movwf	5
 12905  0A2F  0012               	moviw fsr0++
 12906  0A30  1903               	btfsc	3,2
 12907  0A31  2A37               	goto	l5916
 12908  0A32  3001               	movlw	1
 12909  0A33  07A0               	addwf	strlen@s,f
 12910  0A34  3000               	movlw	0
 12911  0A35  3DA1               	addwfc	strlen@s+1,f
 12912  0A36  2A2B               	goto	l5914
 12913  0A37                     l5916:	
 12914  0A37  0823               	movf	strlen@a,w
 12915  0A38  0220               	subwf	strlen@s,w
 12916  0A39  00A0               	movwf	?_strlen
 12917  0A3A  0824               	movf	strlen@a+1,w
 12918  0A3B  3B21               	subwfb	strlen@s+1,w
 12919  0A3C  00A1               	movwf	?_strlen+1
 12920  0A3D  0008               	return
 12921  0A3E                     __end_of_strlen:	
 12922                           
 12923                           	psect	text60
 12924  08D1                     __ptext60:	
 12925 ;; *************** function _PWM_Output_Enable *****************
 12926 ;; Defined at:
 12927 ;;		line 283 in file "main.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;		None
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  1    wreg      void 
 12934 ;; Registers used:
 12935 ;;		wreg
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;Total ram usage:        0 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; Hardware stack levels required when called:    5
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_Display_Name
 12952 ;;		_PWM
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _PWM_Output_Enable
 12958  08D1                     _PWM_Output_Enable:	
 12959                           
 12960                           ;main.c: 284:     RC6PPS = 0x0C;
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _PWM_Output_Enable: [wreg]
 12964  08D1  300C               	movlw	12
 12965  08D2  003D               	movlb	29	; select bank29
 12966  08D3  00A6               	movwf	38	;volatile
 12967  08D4  0008               	return
 12968  08D5                     __end_of_PWM_Output_Enable:	
 12969                           
 12970                           	psect	text61
 12971  0892                     __ptext61:	
 12972 ;; *************** function _PWM_Output_Disable *****************
 12973 ;; Defined at:
 12974 ;;		line 287 in file "main.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;		None
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;		None
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      void 
 12981 ;; Registers used:
 12982 ;;		status,2
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;Total ram usage:        0 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    5
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_Display_Name
 12999 ;;		_PWM
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function _PWM_Output_Disable
 13005  0892                     _PWM_Output_Disable:	
 13006                           
 13007                           ;main.c: 288:     RC6PPS = 0x00;
 13008                           
 13009                           ;incstack = 0
 13010                           ; Regs used in _PWM_Output_Disable: [status,2]
 13011  0892  003D               	movlb	29	; select bank29
 13012  0893  01A6               	clrf	38	;volatile
 13013  0894  0008               	return
 13014  0895                     __end_of_PWM_Output_Disable:	
 13015                           
 13016                           	psect	text62
 13017  0AC1                     __ptext62:	
 13018 ;; *************** function _ADC_GetConversion *****************
 13019 ;; Defined at:
 13020 ;;		line 113 in file "mcc_generated_files/adc.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;  channel         1    wreg     enum E6648
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;  channel         1    3[BANK0 ] enum E6648
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  2    0[BANK0 ] unsigned short 
 13027 ;; Registers used:
 13028 ;;		wreg, status,2, status,0
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;Total ram usage:        4 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; Hardware stack levels required when called:    5
 13041 ;; This function calls:
 13042 ;;		Nothing
 13043 ;; This function is called by:
 13044 ;;		_Get_ADC
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           
 13049                           ;psect for function _ADC_GetConversion
 13050  0AC1                     _ADC_GetConversion:	
 13051                           
 13052                           ;incstack = 0
 13053                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13054                           ;ADC_GetConversion@channel stored from wreg
 13055  0AC1  0020               	movlb	0	; select bank0
 13056  0AC2  00A3               	movwf	ADC_GetConversion@channel
 13057                           
 13058                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 13059  0AC3  0823               	movf	ADC_GetConversion@channel,w
 13060  0AC4  00A2               	movwf	??_ADC_GetConversion
 13061  0AC5  0DA2               	rlf	??_ADC_GetConversion,f
 13062  0AC6  0DA2               	rlf	??_ADC_GetConversion,f
 13063  0AC7  0021               	movlb	1	; select bank1
 13064  0AC8  081D               	movf	29,w	;volatile
 13065  0AC9  0020               	movlb	0	; select bank0
 13066  0ACA  0622               	xorwf	??_ADC_GetConversion,w
 13067  0ACB  3903               	andlw	-253
 13068  0ACC  0622               	xorwf	??_ADC_GetConversion,w
 13069  0ACD  0021               	movlb	1	; select bank1
 13070  0ACE  009D               	movwf	29	;volatile
 13071                           
 13072                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 13073  0ACF  141D               	bsf	29,0	;volatile
 13074                           
 13075                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
 13076                           
 13077                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
 13078  0AD0  0021               	movlb	1	; select bank1
 13079  0AD1  149D               	bsf	29,1	;volatile
 13080  0AD2                     l623:	
 13081                           ;mcc_generated_files/adc.c: 131:     }
 13082                           
 13083                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
 13084                           
 13085                           
 13086                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
 13087  0AD2  0021               	movlb	1	; select bank1
 13088  0AD3  1C9D               	btfss	29,1	;volatile
 13089  0AD4  2AD7               	goto	l6368
 13090  0AD5  0064               	clrwdt	;# 
 13091  0AD6  2AD2               	goto	l623
 13092  0AD7                     l6368:	
 13093                           
 13094                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13095  0AD7  081C               	movf	28,w	;volatile
 13096  0AD8  0020               	movlb	0	; select bank0
 13097  0AD9  00A1               	movwf	?_ADC_GetConversion+1
 13098  0ADA  0021               	movlb	1	; select bank1
 13099  0ADB  081B               	movf	27,w	;volatile
 13100  0ADC  0020               	movlb	0	; select bank0
 13101  0ADD  00A0               	movwf	?_ADC_GetConversion
 13102  0ADE  0008               	return
 13103  0ADF                     __end_of_ADC_GetConversion:	
 13104                           
 13105                           	psect	text63
 13106  09A1                     __ptext63:	
 13107 ;; *************** function _Display_Clear *****************
 13108 ;; Defined at:
 13109 ;;		line 250 in file "main.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;		None
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;		None
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  1    wreg      void 
 13116 ;; Registers used:
 13117 ;;		wreg, status,2, status,0, pclath, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;Total ram usage:        1 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    7
 13130 ;; This function calls:
 13131 ;;		_SPI_Write
 13132 ;; This function is called by:
 13133 ;;		_main
 13134 ;; This function uses a non-reentrant model
 13135 ;;
 13136                           
 13137                           
 13138                           ;psect for function _Display_Clear
 13139  09A1                     _Display_Clear:	
 13140                           
 13141                           ;main.c: 251:     SPI_Write(0xFE);
 13142                           
 13143                           ;incstack = 0
 13144                           ; Regs used in _Display_Clear: [wreg+status,2+status,0+pclath+cstack]
 13145  09A1  30FE               	movlw	254
 13146  09A2  318A  2211  3189   	fcall	_SPI_Write
 13147                           
 13148                           ;main.c: 252:     _delay((unsigned long)((100)*(500000/4000.0)));
 13149  09A5  3011               	movlw	17
 13150  09A6  0020               	movlb	0	; select bank0
 13151  09A7  00A3               	movwf	??_Display_Clear
 13152  09A8  303A               	movlw	58
 13153  09A9                     u6507:	
 13154  09A9  0B89               	decfsz	9,f
 13155  09AA  29A9               	goto	u6507
 13156  09AB  0BA3               	decfsz	??_Display_Clear,f
 13157  09AC  29A9               	goto	u6507
 13158  09AD  0000               	nop
 13159                           
 13160                           ;main.c: 253:     SPI_Write(0x51);
 13161  09AE  3051               	movlw	81
 13162  09AF  318A  2211         	fcall	_SPI_Write
 13163  09B1  0008               	return
 13164  09B2                     __end_of_Display_Clear:	
 13165                           
 13166                           	psect	text64
 13167  0A11                     __ptext64:	
 13168 ;; *************** function _SPI_Write *****************
 13169 ;; Defined at:
 13170 ;;		line 207 in file "main.c"
 13171 ;; Parameters:    Size  Location     Type
 13172 ;;  incoming        1    wreg     unsigned char 
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;  incoming        1    2[BANK0 ] unsigned char 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      void 
 13177 ;; Registers used:
 13178 ;;		wreg, status,2, status,0, pclath, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;Total ram usage:        2 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; Hardware stack levels required when called:    6
 13191 ;; This function calls:
 13192 ;;		_SPI2_Exchange8bit
 13193 ;; This function is called by:
 13194 ;;		_Display_Name
 13195 ;;		_Display_Clear
 13196 ;; This function uses a non-reentrant model
 13197 ;;
 13198                           
 13199                           
 13200                           ;psect for function _SPI_Write
 13201  0A11                     _SPI_Write:	
 13202                           
 13203                           ;incstack = 0
 13204                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
 13205                           ;SPI_Write@incoming stored from wreg
 13206  0A11  0020               	movlb	0	; select bank0
 13207  0A12  00A2               	movwf	SPI_Write@incoming
 13208                           
 13209                           ;main.c: 208:     do { LATCbits.LATC0 = 0; } while(0);
 13210  0A13  0022               	movlb	2	; select bank2
 13211  0A14  100E               	bcf	14,0	;volatile
 13212                           
 13213                           ;main.c: 209:     SPI2_Exchange8bit(incoming);
 13214  0A15  0020               	movlb	0	; select bank0
 13215  0A16  0822               	movf	SPI_Write@incoming,w
 13216  0A17  3189  2192  318A   	fcall	_SPI2_Exchange8bit
 13217  0A1A  0022               	movlb	2	; select bank2
 13218  0A1B  140E               	bsf	14,0	;volatile
 13219                           
 13220                           ;main.c: 211:     _delay((unsigned long)((100)*(500000/4000.0)));
 13221  0A1C  3011               	movlw	17
 13222  0A1D  0020               	movlb	0	; select bank0
 13223  0A1E  00A1               	movwf	??_SPI_Write
 13224  0A1F  303A               	movlw	58
 13225  0A20                     u6517:	
 13226  0A20  0B89               	decfsz	9,f
 13227  0A21  2A20               	goto	u6517
 13228  0A22  0BA1               	decfsz	??_SPI_Write,f
 13229  0A23  2A20               	goto	u6517
 13230  0A24  0000               	nop
 13231  0A25  0008               	return
 13232  0A26                     __end_of_SPI_Write:	
 13233                           
 13234                           	psect	text65
 13235  0992                     __ptext65:	
 13236 ;; *************** function _SPI2_Exchange8bit *****************
 13237 ;; Defined at:
 13238 ;;		line 79 in file "mcc_generated_files/spi2.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;  data            1    wreg     unsigned char 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  data            1    0[BANK0 ] unsigned char 
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      unsigned char 
 13245 ;; Registers used:
 13246 ;;		wreg
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;Total ram usage:        1 bytes
 13257 ;; Hardware stack levels used:    1
 13258 ;; Hardware stack levels required when called:    5
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_SPI_Write
 13263 ;;		_SPI2_Exchange8bitBuffer
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           
 13268                           ;psect for function _SPI2_Exchange8bit
 13269  0992                     _SPI2_Exchange8bit:	
 13270                           
 13271                           ;incstack = 0
 13272                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 13273                           ;SPI2_Exchange8bit@data stored from wreg
 13274  0992  0020               	movlb	0	; select bank0
 13275  0993  00A0               	movwf	SPI2_Exchange8bit@data
 13276                           
 13277                           ;mcc_generated_files/spi2.c: 79: uint8_t SPI2_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 80: {;mcc_generated_files/spi2.c: 82:     SSP2CON1bits.WCOL = 0;
 13278  0994  0024               	movlb	4	; select bank4
 13279  0995  139D               	bcf	29,7	;volatile
 13280                           
 13281                           ;mcc_generated_files/spi2.c: 84:     SSP2BUF = data;
 13282  0996  0020               	movlb	0	; select bank0
 13283  0997  0820               	movf	SPI2_Exchange8bit@data,w
 13284  0998  0024               	movlb	4	; select bank4
 13285  0999  0099               	movwf	25	;volatile
 13286  099A                     l532:	
 13287                           ;mcc_generated_files/spi2.c: 89:     }
 13288                           
 13289                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 13290                           
 13291                           
 13292                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 13293  099A  0024               	movlb	4	; select bank4
 13294  099B  181C               	btfsc	28,0	;volatile
 13295  099C  299F               	goto	l5802
 13296  099D  0064               	clrwdt	;# 
 13297  099E  299A               	goto	l532
 13298  099F                     l5802:	
 13299                           
 13300                           ;mcc_generated_files/spi2.c: 91:     return (SSP2BUF);
 13301  099F  0819               	movf	25,w	;volatile
 13302  09A0  0008               	return
 13303  09A1                     __end_of_SPI2_Exchange8bit:	
 13304                           
 13305                           	psect	intentry
 13306  0004                     __pintentry:	
 13307 ;; *************** function _INTERRUPT_InterruptManager *****************
 13308 ;; Defined at:
 13309 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;		None
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;		None
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;Total ram usage:        0 bytes
 13328 ;; Hardware stack levels used:    1
 13329 ;; Hardware stack levels required when called:    4
 13330 ;; This function calls:
 13331 ;;		Absolute function
 13332 ;;		_PIN_MANAGER_IOC
 13333 ;;		_i2c_ISR
 13334 ;;		_i2c_busCollisionISR
 13335 ;; This function is called by:
 13336 ;;		Interrupt level 1
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340  0004                     _INTERRUPT_InterruptManager:	
 13341                           
 13342                           ;incstack = 0
 13343  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13344                           
 13345                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13346  0005  3180               	pagesel	$
 13347                           
 13348                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 13349  0006  0021               	movlb	1	; select bank1
 13350  0007  1E10               	btfss	16,4	;volatile
 13351  0008  2810               	goto	i1l245
 13352  0009  0020               	movlb	0	; select bank0
 13353  000A  1E10               	btfss	16,4	;volatile
 13354  000B  2810               	goto	i1l245
 13355                           
 13356                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 13357  000C  3188  2074  3180   	fcall	_PIN_MANAGER_IOC
 13358                           
 13359                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13360  000F  282A               	goto	i1l253
 13361  0010                     i1l245:	
 13362                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 13363                           
 13364  0010  1F0B               	btfss	11,6	;volatile
 13365  0011  282A               	goto	i1l253
 13366                           
 13367                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 13368  0012  0021               	movlb	1	; select bank1
 13369  0013  1D11               	btfss	17,2	;volatile
 13370  0014  281E               	goto	i1l248
 13371  0015  0020               	movlb	0	; select bank0
 13372  0016  1D11               	btfss	17,2	;volatile
 13373  0017  281E               	goto	i1l248
 13374                           
 13375                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
 13376  0018  086B               	movf	_i2c1_driver_busCollisionISR+1,w
 13377  0019  008A               	movwf	10
 13378  001A  086A               	movf	_i2c1_driver_busCollisionISR,w
 13379  001B  000A               	callw
 13380  001C  3180               	pagesel	$
 13381                           
 13382                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 13383  001D  282A               	goto	i1l253
 13384  001E                     i1l248:	
 13385                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 13386                           
 13387  001E  0021               	movlb	1	; select bank1
 13388  001F  1D91               	btfss	17,3	;volatile
 13389  0020  282A               	goto	i1l253
 13390  0021  0020               	movlb	0	; select bank0
 13391  0022  1D91               	btfss	17,3	;volatile
 13392  0023  282A               	goto	i1l253
 13393                           
 13394                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
 13395  0024  0021               	movlb	1	; select bank1
 13396  0025  0865               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 13397  0026  008A               	movwf	10
 13398  0027  0864               	movf	_i2c1_driver_i2cISR^(0+128),w
 13399  0028  000A               	callw
 13400  0029  3180               	pagesel	$
 13401  002A                     i1l253:	
 13402                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 13403                           
 13404                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13405                           
 13406  002A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13407  002B  0009               	retfie
 13408  002C                     __end_of_INTERRUPT_InterruptManager:	
 13409                           
 13410                           	psect	text67
 13411  088F                     __ptext67:	
 13412 ;; *************** function _i2c_busCollisionISR *****************
 13413 ;; Defined at:
 13414 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		status,2, status,0, pclath, cstack
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;Total ram usage:        0 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:    1
 13435 ;; This function calls:
 13436 ;;		_i2c1_driver_clearBusCollision
 13437 ;; This function is called by:
 13438 ;;		_i2c_open
 13439 ;;		_INTERRUPT_InterruptManager
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           
 13444                           ;psect for function _i2c_busCollisionISR
 13445  088F                     _i2c_busCollisionISR:	
 13446                           
 13447                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 13448                           
 13449                           ;incstack = 0
 13450                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 13451  088F  3188  208C         	fcall	_i2c1_driver_clearBusCollision
 13452  0891  0008               	return
 13453  0892                     __end_of_i2c_busCollisionISR:	
 13454                           
 13455                           	psect	text68
 13456  088C                     __ptext68:	
 13457 ;; *************** function _i2c1_driver_clearBusCollision *****************
 13458 ;; Defined at:
 13459 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;		None
 13462 ;; Auto vars:     Size  Location     Type
 13463 ;;		None
 13464 ;; Return value:  Size  Location     Type
 13465 ;;                  1    wreg      void 
 13466 ;; Registers used:
 13467 ;;		None
 13468 ;; Tracked objects:
 13469 ;;		On entry : 0/0
 13470 ;;		On exit  : 0/0
 13471 ;;		Unchanged: 0/0
 13472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;Total ram usage:        0 bytes
 13478 ;; Hardware stack levels used:    1
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		_i2c_busCollisionISR
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           
 13487                           ;psect for function _i2c1_driver_clearBusCollision
 13488  088C                     _i2c1_driver_clearBusCollision:	
 13489                           
 13490                           ;mcc_generated_files/i2c1_driver.c: 255:     PIR1bits.BCL1IF = 0;
 13491                           
 13492                           ;incstack = 0
 13493                           ; Regs used in _i2c1_driver_clearBusCollision: []
 13494  088C  0020               	movlb	0	; select bank0
 13495  088D  1111               	bcf	17,2	;volatile
 13496  088E  0008               	return
 13497  088F                     __end_of_i2c1_driver_clearBusCollision:	
 13498                           
 13499                           	psect	text69
 13500  0B21                     __ptext69:	
 13501 ;; *************** function _i2c_ISR *****************
 13502 ;; Defined at:
 13503 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;		None
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;		None
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1    wreg      void 
 13510 ;; Registers used:
 13511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13521 ;;Total ram usage:        3 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    3
 13524 ;; This function calls:
 13525 ;;		_do_I2C_DO_ACK
 13526 ;;		_do_I2C_DO_ADDRESS_NACK
 13527 ;;		_do_I2C_DO_NACK_RESTART
 13528 ;;		_do_I2C_DO_NACK_STOP
 13529 ;;		_do_I2C_IDLE
 13530 ;;		_do_I2C_RCEN
 13531 ;;		_do_I2C_RESET
 13532 ;;		_do_I2C_RX
 13533 ;;		_do_I2C_SEND_ADR_READ
 13534 ;;		_do_I2C_SEND_ADR_WRITE
 13535 ;;		_do_I2C_SEND_RESTART
 13536 ;;		_do_I2C_SEND_RESTART_READ
 13537 ;;		_do_I2C_SEND_RESTART_WRITE
 13538 ;;		_do_I2C_SEND_STOP
 13539 ;;		_do_I2C_TX
 13540 ;;		_do_I2C_TX_EMPTY
 13541 ;;		_i2c1_driver_isNACK
 13542 ;;		_mssp1_clearIRQ
 13543 ;; This function is called by:
 13544 ;;		_i2c_open
 13545 ;;		_i2c_poller
 13546 ;;		_INTERRUPT_InterruptManager
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           
 13551                           ;psect for function _i2c_ISR
 13552  0B21                     _i2c_ISR:	
 13553                           
 13554                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 13555                           
 13556                           ;incstack = 0
 13557                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13558  0B21  3188  2089  318B   	fcall	_mssp1_clearIRQ
 13559                           
 13560                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 13561  0B24  0023               	movlb	3	; select bank3
 13562  0B25  1DA0               	btfss	_i2c_status^(0+384),3
 13563  0B26  2B31               	goto	i1l5052
 13564  0B27  3189  2122  318B   	fcall	_i2c1_driver_isNACK
 13565  0B2A  1C03               	btfss	3,0
 13566  0B2B  2B31               	goto	i1l5052
 13567                           
 13568                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 13569  0B2C  300F               	movlw	15
 13570  0B2D  00F3               	movwf	??_i2c_ISR
 13571  0B2E  0873               	movf	??_i2c_ISR,w
 13572  0B2F  0023               	movlb	3	; select bank3
 13573  0B30  00A9               	movwf	(_i2c_status^(0+384)+9)
 13574  0B31                     i1l5052:	
 13575                           
 13576                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 13577  0B31  0023               	movlb	3	; select bank3
 13578  0B32  0829               	movf	(_i2c_status^(0+384)+9),w
 13579  0B33  00F3               	movwf	??_i2c_ISR
 13580  0B34  01F4               	clrf	??_i2c_ISR+1
 13581  0B35  35F3               	lslf	??_i2c_ISR,f
 13582  0B36  0DF4               	rlf	??_i2c_ISR+1,f
 13583  0B37  3000               	movlw	low (_fsmStateTable| (0+32768))
 13584  0B38  0773               	addwf	??_i2c_ISR,w
 13585  0B39  0084               	movwf	4
 13586  0B3A  3090               	movlw	high (_fsmStateTable| (0+32768))
 13587  0B3B  3D74               	addwfc	??_i2c_ISR+1,w
 13588  0B3C  0085               	movwf	5
 13589  0B3D  3F01               	moviw [1]fsr0
 13590  0B3E  008A               	movwf	10
 13591  0B3F  3F00               	moviw [0]fsr0
 13592  0B40  000A               	callw
 13593  0B41  318B               	pagesel	$
 13594  0B42  00F5               	movwf	??_i2c_ISR+2
 13595  0B43  0875               	movf	??_i2c_ISR+2,w
 13596  0B44  0023               	movlb	3	; select bank3
 13597  0B45  00A9               	movwf	(_i2c_status^(0+384)+9)
 13598  0B46  0008               	return
 13599  0B47                     __end_of_i2c_ISR:	
 13600                           
 13601                           	psect	text70
 13602  0889                     __ptext70:	
 13603 ;; *************** function _mssp1_clearIRQ *****************
 13604 ;; Defined at:
 13605 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;		None
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  1    wreg      void 
 13612 ;; Registers used:
 13613 ;;		None
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;Total ram usage:        0 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; This function calls:
 13626 ;;		Nothing
 13627 ;; This function is called by:
 13628 ;;		_i2c_ISR
 13629 ;;		_i2c_open
 13630 ;;		_i2c_close
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           
 13635                           ;psect for function _mssp1_clearIRQ
 13636  0889                     _mssp1_clearIRQ:	
 13637                           
 13638                           ;mcc_generated_files/i2c1_driver.c: 55:         SSP1STAT = 0x00;
 13639                           
 13640                           ;incstack = 0
 13641                           ; Regs used in _mssp1_clearIRQ: []
 13642  0889  0020               	movlb	0	; select bank0
 13643  088A  1191               	bcf	17,3	;volatile
 13644  088B  0008               	return
 13645  088C                     __end_of_mssp1_clearIRQ:	
 13646                           
 13647                           	psect	text71
 13648  0DBC                     __ptext71:	
 13649 ;; *************** function _do_I2C_RX *****************
 13650 ;; Defined at:
 13651 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;		None
 13654 ;; Auto vars:     Size  Location     Type
 13655 ;;		None
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  1    wreg      enum E7120
 13658 ;; Registers used:
 13659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;Total ram usage:        3 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    2
 13672 ;; This function calls:
 13673 ;;		_do_I2C_DO_NACK_RESTART
 13674 ;;		_do_I2C_DO_NACK_STOP
 13675 ;;		_i2c1_driver_sendACK
 13676 ;;		_returnReset
 13677 ;;		_returnStop
 13678 ;;		i1_i2c1_driver_getRXData
 13679 ;; This function is called by:
 13680 ;;		_i2c_ISR
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           
 13685                           ;psect for function _do_I2C_RX
 13686  0DBC                     _do_I2C_RX:	
 13687                           
 13688                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 13689                           
 13690                           ;incstack = 0
 13691                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13692  0DBC  3188  2083  318D   	fcall	i1_i2c1_driver_getRXData
 13693  0DBF  00F0               	movwf	??_do_I2C_RX
 13694  0DC0  0023               	movlb	3	; select bank3
 13695  0DC1  0822               	movf	(low ((_i2c_status| (0+256)+2)))^(0+128),w
 13696  0DC2  0086               	movwf	6
 13697  0DC3  0187               	clrf	7
 13698  0DC4  0870               	movf	??_do_I2C_RX,w
 13699  0DC5  0081               	movwf	1
 13700  0DC6  3001               	movlw	1
 13701  0DC7  00F0               	movwf	??_do_I2C_RX
 13702  0DC8  0870               	movf	??_do_I2C_RX,w
 13703  0DC9  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^(0+128),f
 13704                           
 13705                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 13706  0DCA  3001               	movlw	1
 13707  0DCB  02A3               	subwf	(_i2c_status^(0+384)+3),f
 13708  0DCC  3000               	movlw	0
 13709  0DCD  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 13710  0DCE  0823               	movf	(_i2c_status^(0+384)+3),w
 13711  0DCF  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 13712  0DD0  1903               	btfsc	3,2
 13713  0DD1  2DD6               	goto	i1l173
 13714                           
 13715                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 13716  0DD2  3188  20AD         	fcall	_i2c1_driver_sendACK
 13717                           
 13718                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 13719  0DD4  3005               	movlw	5
 13720  0DD5  0008               	return
 13721  0DD6                     i1l173:	
 13722                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 13723                           
 13724                           
 13725                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 13726  0DD6  1520               	bsf	_i2c_status^(0+384),2
 13727                           
 13728                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 13729  0DD7  2DDE               	goto	i1l4574
 13730  0DD8                     i1l4564:	
 13731                           
 13732                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 13733  0DD8  3188  20CD         	fcall	_do_I2C_DO_NACK_RESTART
 13734  0DDA  0008               	return
 13735  0DDB                     i1l4568:	
 13736                           
 13737                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 13738  0DDB  3188  20C9         	fcall	_do_I2C_DO_NACK_STOP
 13739  0DDD  0008               	return
 13740  0DDE                     i1l4574:	
 13741  0DDE  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 13742  0DDF  00F0               	movwf	??_do_I2C_RX
 13743  0DE0  0870               	movf	??_do_I2C_RX,w
 13744  0DE1  00F0               	movwf	returnReset@p
 13745  0DE2  300B               	movlw	11
 13746  0DE3  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13747  0DE4  0086               	movwf	6
 13748  0DE5  3001               	movlw	1	; select bank3/4
 13749  0DE6  0087               	movwf	7
 13750  0DE7  3F41               	moviw [1]fsr1
 13751  0DE8  008A               	movwf	10
 13752  0DE9  3F40               	moviw [0]fsr1
 13753  0DEA  000A               	callw
 13754  0DEB  318D               	pagesel	$
 13755  0DEC  00F1               	movwf	??_do_I2C_RX+1
 13756  0DED  01F2               	clrf	??_do_I2C_RX+2
 13757                           
 13758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13759                           ; Switch size 1, requested type "simple"
 13760                           ; Number of cases is 1, Range of values is 0 to 0
 13761                           ; switch strategies available:
 13762                           ; Name         Instructions Cycles
 13763                           ; simple_byte            4     3 (average)
 13764                           ; direct_byte            8     6 (fixed)
 13765                           ; jumptable            260     6 (fixed)
 13766                           ;	Chosen strategy is simple_byte
 13767  0DEE  0872               	movf	??_do_I2C_RX+2,w
 13768  0DEF  3A00               	xorlw	0	; case 0
 13769  0DF0  1903               	skipnz
 13770  0DF1  2DF3               	goto	i1l7292
 13771  0DF2  2DDB               	goto	i1l4568
 13772  0DF3                     i1l7292:	
 13773                           
 13774                           ; Switch size 1, requested type "simple"
 13775                           ; Number of cases is 4, Range of values is 1 to 4
 13776                           ; switch strategies available:
 13777                           ; Name         Instructions Cycles
 13778                           ; simple_byte           13     7 (average)
 13779                           ; direct_byte           17     9 (fixed)
 13780                           ; jumptable            263     9 (fixed)
 13781                           ;	Chosen strategy is simple_byte
 13782  0DF3  0871               	movf	??_do_I2C_RX+1,w
 13783  0DF4  3A01               	xorlw	1	; case 1
 13784  0DF5  1903               	skipnz
 13785  0DF6  2DDB               	goto	i1l4568
 13786  0DF7  3A03               	xorlw	3	; case 2
 13787  0DF8  1903               	skipnz
 13788  0DF9  2DD8               	goto	i1l4564
 13789  0DFA  3A01               	xorlw	1	; case 3
 13790  0DFB  1903               	skipnz
 13791  0DFC  2DD8               	goto	i1l4564
 13792  0DFD  3A07               	xorlw	7	; case 4
 13793  0DFE  1903               	skipnz
 13794  0DFF  2DDB               	goto	i1l4568
 13795  0E00  2DDB               	goto	i1l4568
 13796  0E01  0008               	return
 13797  0E02                     __end_of_do_I2C_RX:	
 13798                           
 13799                           	psect	text72
 13800  0E02                     __ptext72:	
 13801 ;; *************** function _do_I2C_TX *****************
 13802 ;; Defined at:
 13803 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 13804 ;; Parameters:    Size  Location     Type
 13805 ;;		None
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;		None
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  1    wreg      enum E7120
 13810 ;; Registers used:
 13811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;Total ram usage:        3 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:    2
 13824 ;; This function calls:
 13825 ;;		_do_I2C_SEND_RESTART_READ
 13826 ;;		_do_I2C_SEND_RESTART_WRITE
 13827 ;;		_do_I2C_SEND_STOP
 13828 ;;		_i2c1_driver_isNACK
 13829 ;;		_returnReset
 13830 ;;		_returnStop
 13831 ;;		i1_i2c1_driver_TXData
 13832 ;; This function is called by:
 13833 ;;		_i2c_ISR
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _do_I2C_TX
 13839  0E02                     _do_I2C_TX:	
 13840                           
 13841                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13845  0E02  3189  2122  318E   	fcall	_i2c1_driver_isNACK
 13846  0E05  1803               	btfsc	3,0
 13847  0E06  2E11               	goto	i1l4534
 13848  0E07  2E35               	goto	i1l157
 13849  0E08                     i1l4520:	
 13850                           
 13851                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 13852  0E08  3188  20B5         	fcall	_do_I2C_SEND_RESTART_READ
 13853  0E0A  0008               	return
 13854  0E0B                     i1l4524:	
 13855                           
 13856                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 13857  0E0B  3188  20B9         	fcall	_do_I2C_SEND_RESTART_WRITE
 13858  0E0D  0008               	return
 13859  0E0E                     i1l4528:	
 13860                           
 13861                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 13862  0E0E  3188  20C1         	fcall	_do_I2C_SEND_STOP
 13863  0E10  0008               	return
 13864  0E11                     i1l4534:	
 13865  0E11  0023               	movlb	3	; select bank3
 13866  0E12  083A               	movf	(low ((_i2c_status| (0+256)+26)))^(0+128),w
 13867  0E13  00F0               	movwf	??_do_I2C_TX
 13868  0E14  0870               	movf	??_do_I2C_TX,w
 13869  0E15  00F0               	movwf	returnReset@p
 13870  0E16  3011               	movlw	17
 13871  0E17  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13872  0E18  0086               	movwf	6
 13873  0E19  3001               	movlw	1	; select bank3/4
 13874  0E1A  0087               	movwf	7
 13875  0E1B  3F41               	moviw [1]fsr1
 13876  0E1C  008A               	movwf	10
 13877  0E1D  3F40               	moviw [0]fsr1
 13878  0E1E  000A               	callw
 13879  0E1F  318E               	pagesel	$
 13880  0E20  00F1               	movwf	??_do_I2C_TX+1
 13881  0E21  01F2               	clrf	??_do_I2C_TX+2
 13882                           
 13883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13884                           ; Switch size 1, requested type "simple"
 13885                           ; Number of cases is 1, Range of values is 0 to 0
 13886                           ; switch strategies available:
 13887                           ; Name         Instructions Cycles
 13888                           ; simple_byte            4     3 (average)
 13889                           ; direct_byte            8     6 (fixed)
 13890                           ; jumptable            260     6 (fixed)
 13891                           ;	Chosen strategy is simple_byte
 13892  0E22  0872               	movf	??_do_I2C_TX+2,w
 13893  0E23  3A00               	xorlw	0	; case 0
 13894  0E24  1903               	skipnz
 13895  0E25  2E27               	goto	i1l7294
 13896  0E26  2E0E               	goto	i1l4528
 13897  0E27                     i1l7294:	
 13898                           
 13899                           ; Switch size 1, requested type "simple"
 13900                           ; Number of cases is 4, Range of values is 1 to 4
 13901                           ; switch strategies available:
 13902                           ; Name         Instructions Cycles
 13903                           ; simple_byte           13     7 (average)
 13904                           ; direct_byte           17     9 (fixed)
 13905                           ; jumptable            263     9 (fixed)
 13906                           ;	Chosen strategy is simple_byte
 13907  0E27  0871               	movf	??_do_I2C_TX+1,w
 13908  0E28  3A01               	xorlw	1	; case 1
 13909  0E29  1903               	skipnz
 13910  0E2A  2E0E               	goto	i1l4528
 13911  0E2B  3A03               	xorlw	3	; case 2
 13912  0E2C  1903               	skipnz
 13913  0E2D  2E08               	goto	i1l4520
 13914  0E2E  3A01               	xorlw	1	; case 3
 13915  0E2F  1903               	skipnz
 13916  0E30  2E0B               	goto	i1l4524
 13917  0E31  3A07               	xorlw	7	; case 4
 13918  0E32  1903               	skipnz
 13919  0E33  2E0E               	goto	i1l4528
 13920  0E34  2E0E               	goto	i1l4528
 13921  0E35                     i1l157:	
 13922                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 13923                           
 13924                           
 13925                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 13926  0E35  0023               	movlb	3	; select bank3
 13927  0E36  11A0               	bcf	_i2c_status^(0+384),3
 13928                           
 13929                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 13930  0E37  3002               	movlw	2
 13931  0E38  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 13932  0E39  0086               	movwf	6
 13933  0E3A  3001               	movlw	1	; select bank3/4
 13934  0E3B  0087               	movwf	7
 13935  0E3C  3F40               	moviw [0]fsr1
 13936  0E3D  0084               	movwf	4
 13937  0E3E  0185               	clrf	5
 13938  0E3F  0A81               	incf	1,f
 13939  0E40  0800               	movf	0,w
 13940  0E41  3188  20DD  318E   	fcall	i1_i2c1_driver_TXData
 13941                           
 13942                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 13943  0E44  3001               	movlw	1
 13944  0E45  0023               	movlb	3	; select bank3
 13945  0E46  02A3               	subwf	(_i2c_status^(0+384)+3),f
 13946  0E47  3000               	movlw	0
 13947  0E48  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 13948  0E49  0823               	movf	(_i2c_status^(0+384)+3),w
 13949  0E4A  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 13950  0E4B  1D03               	btfss	3,2
 13951  0E4C  2E4F               	goto	i1l4542
 13952  0E4D  3006               	movlw	6
 13953  0E4E  0008               	return
 13954  0E4F                     i1l4542:	
 13955  0E4F  3003               	movlw	3
 13956  0E50  0008               	return
 13957  0E51                     __end_of_do_I2C_TX:	
 13958                           
 13959                           	psect	text73
 13960  0C35                     __ptext73:	
 13961 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 13962 ;; Defined at:
 13963 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;		None
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      enum E7120
 13970 ;; Registers used:
 13971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;Total ram usage:        3 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    2
 13984 ;; This function calls:
 13985 ;;		_do_I2C_SEND_RESTART
 13986 ;;		_do_I2C_SEND_STOP
 13987 ;;		_returnReset
 13988 ;;		_returnStop
 13989 ;; This function is called by:
 13990 ;;		_i2c_ISR
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           
 13995                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 13996  0C35                     _do_I2C_DO_ADDRESS_NACK:	
 13997                           
 13998                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 13999                           
 14000                           ;incstack = 0
 14001                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14002  0C35  0023               	movlb	3	; select bank3
 14003  0C36  11A0               	bcf	_i2c_status^(0+384),3
 14004                           
 14005                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14006  0C37  3002               	movlw	2
 14007  0C38  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14008  0C39  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14009  0C3A  00AA               	movwf	(_i2c_status^(0+384)+10)
 14010                           
 14011                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14012  0C3B  2C42               	goto	i1l4508
 14013  0C3C                     i1l4498:	
 14014                           
 14015                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14016  0C3C  3188  20BD         	fcall	_do_I2C_SEND_RESTART
 14017  0C3E  0008               	return
 14018  0C3F                     i1l4502:	
 14019                           
 14020                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14021  0C3F  3188  20C1         	fcall	_do_I2C_SEND_STOP
 14022  0C41  0008               	return
 14023  0C42                     i1l4508:	
 14024  0C42  0839               	movf	(low ((_i2c_status| (0+256)+25)))^(0+128),w
 14025  0C43  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14026  0C44  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14027  0C45  00F0               	movwf	returnReset@p
 14028  0C46  300F               	movlw	15
 14029  0C47  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 14030  0C48  0086               	movwf	6
 14031  0C49  3001               	movlw	1	; select bank3/4
 14032  0C4A  0087               	movwf	7
 14033  0C4B  3F41               	moviw [1]fsr1
 14034  0C4C  008A               	movwf	10
 14035  0C4D  3F40               	moviw [0]fsr1
 14036  0C4E  000A               	callw
 14037  0C4F  318C               	pagesel	$
 14038  0C50  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14039  0C51  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14040                           
 14041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14042                           ; Switch size 1, requested type "simple"
 14043                           ; Number of cases is 1, Range of values is 0 to 0
 14044                           ; switch strategies available:
 14045                           ; Name         Instructions Cycles
 14046                           ; simple_byte            4     3 (average)
 14047                           ; direct_byte            8     6 (fixed)
 14048                           ; jumptable            260     6 (fixed)
 14049                           ;	Chosen strategy is simple_byte
 14050  0C52  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14051  0C53  3A00               	xorlw	0	; case 0
 14052  0C54  1903               	skipnz
 14053  0C55  2C57               	goto	i1l7296
 14054  0C56  2C3F               	goto	i1l4502
 14055  0C57                     i1l7296:	
 14056                           
 14057                           ; Switch size 1, requested type "simple"
 14058                           ; Number of cases is 2, Range of values is 2 to 3
 14059                           ; switch strategies available:
 14060                           ; Name         Instructions Cycles
 14061                           ; simple_byte            7     4 (average)
 14062                           ; direct_byte           13     9 (fixed)
 14063                           ; jumptable            263     9 (fixed)
 14064                           ;	Chosen strategy is simple_byte
 14065  0C57  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14066  0C58  3A02               	xorlw	2	; case 2
 14067  0C59  1903               	skipnz
 14068  0C5A  2C3C               	goto	i1l4498
 14069  0C5B  3A01               	xorlw	1	; case 3
 14070  0C5C  1903               	skipnz
 14071  0C5D  2C3C               	goto	i1l4498
 14072  0C5E  2C3F               	goto	i1l4502
 14073  0C5F  0008               	return
 14074  0C60                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14075                           
 14076                           	psect	text74
 14077  08CD                     __ptext74:	
 14078 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14079 ;; Defined at:
 14080 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14081 ;; Parameters:    Size  Location     Type
 14082 ;;		None
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;		None
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1    wreg      enum E7120
 14087 ;; Registers used:
 14088 ;;		wreg, status,2, status,0, pclath, cstack
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;Total ram usage:        0 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    1
 14101 ;; This function calls:
 14102 ;;		i1_i2c1_driver_sendNACK
 14103 ;; This function is called by:
 14104 ;;		_do_I2C_RX
 14105 ;;		_i2c_ISR
 14106 ;; This function uses a non-reentrant model
 14107 ;;
 14108                           
 14109                           
 14110                           ;psect for function _do_I2C_DO_NACK_RESTART
 14111  08CD                     _do_I2C_DO_NACK_RESTART:	
 14112                           
 14113                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14114                           
 14115                           ;incstack = 0
 14116                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14117  08CD  3188  20B1         	fcall	i1_i2c1_driver_sendNACK
 14118                           
 14119                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14120  08CF  3009               	movlw	9
 14121  08D0  0008               	return
 14122  08D1                     __end_of_do_I2C_DO_NACK_RESTART:	
 14123                           
 14124                           	psect	text75
 14125  08C9                     __ptext75:	
 14126 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14127 ;; Defined at:
 14128 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;		None
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      enum E7120
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0, pclath, cstack
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;Total ram usage:        0 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    1
 14149 ;; This function calls:
 14150 ;;		i1_i2c1_driver_sendNACK
 14151 ;; This function is called by:
 14152 ;;		_do_I2C_RX
 14153 ;;		_i2c_ISR
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           
 14158                           ;psect for function _do_I2C_DO_NACK_STOP
 14159  08C9                     _do_I2C_DO_NACK_STOP:	
 14160                           
 14161                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14162                           
 14163                           ;incstack = 0
 14164                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14165  08C9  3188  20B1         	fcall	i1_i2c1_driver_sendNACK
 14166                           
 14167                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14168  08CB  300A               	movlw	10
 14169  08CC  0008               	return
 14170  08CD                     __end_of_do_I2C_DO_NACK_STOP:	
 14171                           
 14172                           	psect	text76
 14173  08C5                     __ptext76:	
 14174 ;; *************** function _do_I2C_DO_ACK *****************
 14175 ;; Defined at:
 14176 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;		None
 14179 ;; Auto vars:     Size  Location     Type
 14180 ;;		None
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  1    wreg      enum E7120
 14183 ;; Registers used:
 14184 ;;		wreg, status,2, status,0, pclath, cstack
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14194 ;;Total ram usage:        0 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; Hardware stack levels required when called:    1
 14197 ;; This function calls:
 14198 ;;		_i2c1_driver_sendACK
 14199 ;; This function is called by:
 14200 ;;		_i2c_ISR
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           
 14205                           ;psect for function _do_I2C_DO_ACK
 14206  08C5                     _do_I2C_DO_ACK:	
 14207                           
 14208                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14209                           
 14210                           ;incstack = 0
 14211                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14212  08C5  3188  20AD         	fcall	_i2c1_driver_sendACK
 14213                           
 14214                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14215  08C7  3005               	movlw	5
 14216  08C8  0008               	return
 14217  08C9                     __end_of_do_I2C_DO_ACK:	
 14218                           
 14219                           	psect	text77
 14220  08E7                     __ptext77:	
 14221 ;; *************** function _do_I2C_RCEN *****************
 14222 ;; Defined at:
 14223 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;		None
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      enum E7120
 14230 ;; Registers used:
 14231 ;;		wreg, status,2, status,0, pclath, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;Total ram usage:        0 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:    1
 14244 ;; This function calls:
 14245 ;;		i1_i2c1_driver_startRX
 14246 ;; This function is called by:
 14247 ;;		_i2c_ISR
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           
 14252                           ;psect for function _do_I2C_RCEN
 14253  08E7                     _do_I2C_RCEN:	
 14254                           
 14255                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14256                           
 14257                           ;incstack = 0
 14258                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14259  08E7  0023               	movlb	3	; select bank3
 14260  08E8  11A0               	bcf	_i2c_status^(0+384),3
 14261                           
 14262                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14263  08E9  3188  2080         	fcall	i1_i2c1_driver_startRX
 14264                           
 14265                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14266  08EB  3004               	movlw	4
 14267  08EC  0008               	return
 14268  08ED                     __end_of_do_I2C_RCEN:	
 14269                           
 14270                           	psect	text78
 14271  0906                     __ptext78:	
 14272 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14273 ;; Defined at:
 14274 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14275 ;; Parameters:    Size  Location     Type
 14276 ;;		None
 14277 ;; Auto vars:     Size  Location     Type
 14278 ;;		None
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      enum E7120
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0, pclath, cstack
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;Total ram usage:        0 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    1
 14295 ;; This function calls:
 14296 ;;		i1_i2c1_driver_TXData
 14297 ;; This function is called by:
 14298 ;;		_i2c_ISR
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           
 14303                           ;psect for function _do_I2C_SEND_ADR_WRITE
 14304  0906                     _do_I2C_SEND_ADR_WRITE:	
 14305                           
 14306                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 14307                           
 14308                           ;incstack = 0
 14309                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14310  0906  0023               	movlb	3	; select bank3
 14311  0907  15A0               	bsf	_i2c_status^(0+384),3
 14312                           
 14313                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 14314  0908  3521               	lslf	(_i2c_status^(0+384)+1),w
 14315  0909  3188  20DD         	fcall	i1_i2c1_driver_TXData
 14316                           
 14317                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 14318  090B  3003               	movlw	3
 14319  090C  0008               	return
 14320  090D                     __end_of_do_I2C_SEND_ADR_WRITE:	
 14321                           
 14322                           	psect	text79
 14323  092A                     __ptext79:	
 14324 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 14325 ;; Defined at:
 14326 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;		None
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;		None
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  1    wreg      enum E7120
 14333 ;; Registers used:
 14334 ;;		wreg, status,2, status,0, pclath, cstack
 14335 ;; Tracked objects:
 14336 ;;		On entry : 0/0
 14337 ;;		On exit  : 0/0
 14338 ;;		Unchanged: 0/0
 14339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;Total ram usage:        0 bytes
 14345 ;; Hardware stack levels used:    1
 14346 ;; Hardware stack levels required when called:    1
 14347 ;; This function calls:
 14348 ;;		i1_i2c1_driver_TXData
 14349 ;; This function is called by:
 14350 ;;		_i2c_ISR
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           
 14355                           ;psect for function _do_I2C_SEND_ADR_READ
 14356  092A                     _do_I2C_SEND_ADR_READ:	
 14357                           
 14358                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 14359                           
 14360                           ;incstack = 0
 14361                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14362  092A  0023               	movlb	3	; select bank3
 14363  092B  15A0               	bsf	_i2c_status^(0+384),3
 14364                           
 14365                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 14366  092C  1403               	setc
 14367  092D  0D21               	rlf	(_i2c_status^(0+384)+1),w
 14368  092E  3188  20DD         	fcall	i1_i2c1_driver_TXData
 14369                           
 14370                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 14371  0930  3005               	movlw	5
 14372  0931  0008               	return
 14373  0932                     __end_of_do_I2C_SEND_ADR_READ:	
 14374                           
 14375                           	psect	text80
 14376  08C1                     __ptext80:	
 14377 ;; *************** function _do_I2C_SEND_STOP *****************
 14378 ;; Defined at:
 14379 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      enum E7120
 14386 ;; Registers used:
 14387 ;;		wreg, status,2, status,0, pclath, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;Total ram usage:        0 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; Hardware stack levels required when called:    1
 14400 ;; This function calls:
 14401 ;;		i1_i2c1_driver_stop
 14402 ;; This function is called by:
 14403 ;;		_do_I2C_DO_ADDRESS_NACK
 14404 ;;		_do_I2C_TX
 14405 ;;		_do_I2C_TX_EMPTY
 14406 ;;		_i2c_ISR
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410                           
 14411                           ;psect for function _do_I2C_SEND_STOP
 14412  08C1                     _do_I2C_SEND_STOP:	
 14413                           
 14414                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 14415                           
 14416                           ;incstack = 0
 14417                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 14418  08C1  3188  207D         	fcall	i1_i2c1_driver_stop
 14419                           
 14420                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 14421  08C3  3000               	movlw	0
 14422  08C4  0008               	return
 14423  08C5                     __end_of_do_I2C_SEND_STOP:	
 14424                           
 14425                           	psect	text81
 14426  08BD                     __ptext81:	
 14427 ;; *************** function _do_I2C_SEND_RESTART *****************
 14428 ;; Defined at:
 14429 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;		None
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;		None
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  1    wreg      enum E7120
 14436 ;; Registers used:
 14437 ;;		wreg, status,2, status,0, pclath, cstack
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;Total ram usage:        0 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:    1
 14450 ;; This function calls:
 14451 ;;		i1_i2c1_driver_restart
 14452 ;; This function is called by:
 14453 ;;		_do_I2C_DO_ADDRESS_NACK
 14454 ;;		_do_I2C_TX_EMPTY
 14455 ;;		_i2c_ISR
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           
 14460                           ;psect for function _do_I2C_SEND_RESTART
 14461  08BD                     _do_I2C_SEND_RESTART:	
 14462                           
 14463                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 14464                           
 14465                           ;incstack = 0
 14466                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14467  08BD  3188  207A         	fcall	i1_i2c1_driver_restart
 14468                           
 14469                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 14470  08BF  3001               	movlw	1
 14471  08C0  0008               	return
 14472  08C1                     __end_of_do_I2C_SEND_RESTART:	
 14473                           
 14474                           	psect	text82
 14475  08B9                     __ptext82:	
 14476 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 14477 ;; Defined at:
 14478 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;		None
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;		None
 14483 ;; Return value:  Size  Location     Type
 14484 ;;                  1    wreg      enum E7120
 14485 ;; Registers used:
 14486 ;;		wreg, status,2, status,0, pclath, cstack
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14496 ;;Total ram usage:        0 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:    1
 14499 ;; This function calls:
 14500 ;;		i1_i2c1_driver_restart
 14501 ;; This function is called by:
 14502 ;;		_do_I2C_TX
 14503 ;;		_i2c_ISR
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           
 14508                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 14509  08B9                     _do_I2C_SEND_RESTART_WRITE:	
 14510                           
 14511                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 14512                           
 14513                           ;incstack = 0
 14514                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14515  08B9  3188  207A         	fcall	i1_i2c1_driver_restart
 14516                           
 14517                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 14518  08BB  3002               	movlw	2
 14519  08BC  0008               	return
 14520  08BD                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 14521                           
 14522                           	psect	text83
 14523  08B5                     __ptext83:	
 14524 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 14525 ;; Defined at:
 14526 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;		None
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;		None
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  1    wreg      enum E7120
 14533 ;; Registers used:
 14534 ;;		wreg, status,2, status,0, pclath, cstack
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;Total ram usage:        0 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:    1
 14547 ;; This function calls:
 14548 ;;		i1_i2c1_driver_restart
 14549 ;; This function is called by:
 14550 ;;		_do_I2C_TX
 14551 ;;		_i2c_ISR
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           
 14556                           ;psect for function _do_I2C_SEND_RESTART_READ
 14557  08B5                     _do_I2C_SEND_RESTART_READ:	
 14558                           
 14559                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 14560                           
 14561                           ;incstack = 0
 14562                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14563  08B5  3188  207A         	fcall	i1_i2c1_driver_restart
 14564                           
 14565                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 14566  08B7  3001               	movlw	1
 14567  08B8  0008               	return
 14568  08B9                     __end_of_do_I2C_SEND_RESTART_READ:	
 14569                           
 14570                           	psect	text84
 14571  08E2                     __ptext84:	
 14572 ;; *************** function _do_I2C_IDLE *****************
 14573 ;; Defined at:
 14574 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;		None
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;		None
 14579 ;; Return value:  Size  Location     Type
 14580 ;;                  1    wreg      enum E7120
 14581 ;; Registers used:
 14582 ;;		wreg, status,2
 14583 ;; Tracked objects:
 14584 ;;		On entry : 0/0
 14585 ;;		On exit  : 0/0
 14586 ;;		Unchanged: 0/0
 14587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;Total ram usage:        0 bytes
 14593 ;; Hardware stack levels used:    1
 14594 ;; This function calls:
 14595 ;;		Nothing
 14596 ;; This function is called by:
 14597 ;;		_i2c_ISR
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601                           
 14602                           ;psect for function _do_I2C_IDLE
 14603  08E2                     _do_I2C_IDLE:	
 14604                           
 14605                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 14606                           
 14607                           ;incstack = 0
 14608                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 14609  08E2  0023               	movlb	3	; select bank3
 14610  08E3  1020               	bcf	_i2c_status^(0+384),0
 14611                           
 14612                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 14613  08E4  01AA               	clrf	(_i2c_status^(0+384)+10)
 14614                           
 14615                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 14616  08E5  300E               	movlw	14
 14617  08E6  0008               	return
 14618  08E7                     __end_of_do_I2C_IDLE:	
 14619                           
 14620                           	psect	text85
 14621  08FF                     __ptext85:	
 14622 ;; *************** function _do_I2C_RESET *****************
 14623 ;; Defined at:
 14624 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 14625 ;; Parameters:    Size  Location     Type
 14626 ;;		None
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;		None
 14629 ;; Return value:  Size  Location     Type
 14630 ;;                  1    wreg      enum E7120
 14631 ;; Registers used:
 14632 ;;		wreg, status,2, status,0, pclath, cstack
 14633 ;; Tracked objects:
 14634 ;;		On entry : 0/0
 14635 ;;		On exit  : 0/0
 14636 ;;		Unchanged: 0/0
 14637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14642 ;;Total ram usage:        0 bytes
 14643 ;; Hardware stack levels used:    1
 14644 ;; Hardware stack levels required when called:    1
 14645 ;; This function calls:
 14646 ;;		_i2c1_driver_resetBus
 14647 ;; This function is called by:
 14648 ;;		_i2c_ISR
 14649 ;; This function uses a non-reentrant model
 14650 ;;
 14651                           
 14652                           
 14653                           ;psect for function _do_I2C_RESET
 14654  08FF                     _do_I2C_RESET:	
 14655                           
 14656                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 14657                           
 14658                           ;incstack = 0
 14659                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 14660  08FF  3188  2075         	fcall	_i2c1_driver_resetBus
 14661                           
 14662                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 14663  0901  0023               	movlb	3	; select bank3
 14664  0902  1020               	bcf	_i2c_status^(0+384),0
 14665                           
 14666                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 14667  0903  01AA               	clrf	(_i2c_status^(0+384)+10)
 14668                           
 14669                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 14670  0904  300E               	movlw	14
 14671  0905  0008               	return
 14672  0906                     __end_of_do_I2C_RESET:	
 14673                           
 14674                           	psect	text86
 14675  0C8B                     __ptext86:	
 14676 ;; *************** function _do_I2C_TX_EMPTY *****************
 14677 ;; Defined at:
 14678 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;		None
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;		None
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  1    wreg      enum E7120
 14685 ;; Registers used:
 14686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14694 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14696 ;;Total ram usage:        3 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; Hardware stack levels required when called:    2
 14699 ;; This function calls:
 14700 ;;		_do_I2C_SEND_RESTART
 14701 ;;		_do_I2C_SEND_STOP
 14702 ;;		_mssp1_setIRQ
 14703 ;;		_returnReset
 14704 ;;		_returnStop
 14705 ;; This function is called by:
 14706 ;;		_i2c_ISR
 14707 ;; This function uses a non-reentrant model
 14708 ;;
 14709                           
 14710                           
 14711                           ;psect for function _do_I2C_TX_EMPTY
 14712  0C8B                     _do_I2C_TX_EMPTY:	
 14713                           
 14714                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 14715                           
 14716                           ;incstack = 0
 14717                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14718  0C8B  0023               	movlb	3	; select bank3
 14719  0C8C  1520               	bsf	_i2c_status^(0+384),2
 14720                           
 14721                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14722  0C8D  2C98               	goto	i1l4600
 14723  0C8E                     i1l4584:	
 14724                           
 14725                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 14726  0C8E  3188  20BD         	fcall	_do_I2C_SEND_RESTART
 14727  0C90  0008               	return
 14728  0C91                     i1l4588:	
 14729                           
 14730                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 14731  0C91  3188  2086         	fcall	_mssp1_setIRQ
 14732                           
 14733                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 14734  0C93  3003               	movlw	3
 14735  0C94  0008               	return
 14736  0C95                     i1l4594:	
 14737                           
 14738                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 14739  0C95  3188  20C1         	fcall	_do_I2C_SEND_STOP
 14740  0C97  0008               	return
 14741  0C98                     i1l4600:	
 14742  0C98  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 14743  0C99  00F0               	movwf	??_do_I2C_TX_EMPTY
 14744  0C9A  0870               	movf	??_do_I2C_TX_EMPTY,w
 14745  0C9B  00F0               	movwf	returnReset@p
 14746  0C9C  300B               	movlw	11
 14747  0C9D  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 14748  0C9E  0086               	movwf	6
 14749  0C9F  3001               	movlw	1	; select bank3/4
 14750  0CA0  0087               	movwf	7
 14751  0CA1  3F41               	moviw [1]fsr1
 14752  0CA2  008A               	movwf	10
 14753  0CA3  3F40               	moviw [0]fsr1
 14754  0CA4  000A               	callw
 14755  0CA5  318C               	pagesel	$
 14756  0CA6  00F1               	movwf	??_do_I2C_TX_EMPTY+1
 14757  0CA7  01F2               	clrf	??_do_I2C_TX_EMPTY+2
 14758                           
 14759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14760                           ; Switch size 1, requested type "simple"
 14761                           ; Number of cases is 1, Range of values is 0 to 0
 14762                           ; switch strategies available:
 14763                           ; Name         Instructions Cycles
 14764                           ; simple_byte            4     3 (average)
 14765                           ; direct_byte            8     6 (fixed)
 14766                           ; jumptable            260     6 (fixed)
 14767                           ;	Chosen strategy is simple_byte
 14768  0CA8  0872               	movf	??_do_I2C_TX_EMPTY+2,w
 14769  0CA9  3A00               	xorlw	0	; case 0
 14770  0CAA  1903               	skipnz
 14771  0CAB  2CAD               	goto	i1l7298
 14772  0CAC  2C95               	goto	i1l4594
 14773  0CAD                     i1l7298:	
 14774                           
 14775                           ; Switch size 1, requested type "simple"
 14776                           ; Number of cases is 4, Range of values is 1 to 4
 14777                           ; switch strategies available:
 14778                           ; Name         Instructions Cycles
 14779                           ; simple_byte           13     7 (average)
 14780                           ; direct_byte           17     9 (fixed)
 14781                           ; jumptable            263     9 (fixed)
 14782                           ;	Chosen strategy is simple_byte
 14783  0CAD  0871               	movf	??_do_I2C_TX_EMPTY+1,w
 14784  0CAE  3A01               	xorlw	1	; case 1
 14785  0CAF  1903               	skipnz
 14786  0CB0  2C95               	goto	i1l4594
 14787  0CB1  3A03               	xorlw	3	; case 2
 14788  0CB2  1903               	skipnz
 14789  0CB3  2C8E               	goto	i1l4584
 14790  0CB4  3A01               	xorlw	1	; case 3
 14791  0CB5  1903               	skipnz
 14792  0CB6  2C8E               	goto	i1l4584
 14793  0CB7  3A07               	xorlw	7	; case 4
 14794  0CB8  1903               	skipnz
 14795  0CB9  2C91               	goto	i1l4588
 14796  0CBA  2C95               	goto	i1l4594
 14797  0CBB  0008               	return
 14798  0CBC                     __end_of_do_I2C_TX_EMPTY:	
 14799                           
 14800                           	psect	text87
 14801  0886                     __ptext87:	
 14802 ;; *************** function _mssp1_setIRQ *****************
 14803 ;; Defined at:
 14804 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;		None
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;		None
 14809 ;; Return value:  Size  Location     Type
 14810 ;;                  1    wreg      void 
 14811 ;; Registers used:
 14812 ;;		None
 14813 ;; Tracked objects:
 14814 ;;		On entry : 0/0
 14815 ;;		On exit  : 0/0
 14816 ;;		Unchanged: 0/0
 14817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;Total ram usage:        0 bytes
 14823 ;; Hardware stack levels used:    1
 14824 ;; This function calls:
 14825 ;;		Nothing
 14826 ;; This function is called by:
 14827 ;;		_do_I2C_TX_EMPTY
 14828 ;; This function uses a non-reentrant model
 14829 ;;
 14830                           
 14831                           
 14832                           ;psect for function _mssp1_setIRQ
 14833  0886                     _mssp1_setIRQ:	
 14834                           
 14835                           ;mcc_generated_files/i2c1_driver.c: 60:     }
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in _mssp1_setIRQ: []
 14839  0886  0020               	movlb	0	; select bank0
 14840  0887  1591               	bsf	17,3	;volatile
 14841  0888  0008               	return
 14842  0889                     __end_of_mssp1_setIRQ:	
 14843                           
 14844                           	psect	text88
 14845  0922                     __ptext88:	
 14846 ;; *************** function _i2c1_driver_isNACK *****************
 14847 ;; Defined at:
 14848 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;		None
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;		None
 14853 ;; Return value:  Size  Location     Type
 14854 ;;		None               void
 14855 ;; Registers used:
 14856 ;;		wreg, status,2, status,0
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;Total ram usage:        1 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; This function calls:
 14869 ;;		Nothing
 14870 ;; This function is called by:
 14871 ;;		_do_I2C_TX
 14872 ;;		_i2c_ISR
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           
 14877                           ;psect for function _i2c1_driver_isNACK
 14878  0922                     _i2c1_driver_isNACK:	
 14879                           
 14880                           ;mcc_generated_files/i2c1_driver.c: 163:     return SSP1CON2bits.ACKSTAT;
 14881                           
 14882                           ;incstack = 0
 14883                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 14884  0922  0024               	movlb	4	; select bank4
 14885  0923  0E16               	swapf	22,w	;volatile
 14886  0924  0C89               	rrf	9,f
 14887  0925  0C89               	rrf	9,f
 14888  0926  3901               	andlw	1
 14889  0927  00F0               	movwf	??_i2c1_driver_isNACK
 14890  0928  0C70               	rrf	??_i2c1_driver_isNACK,w
 14891  0929  0008               	return
 14892  092A                     __end_of_i2c1_driver_isNACK:	
 14893                           
 14894                           	psect	text89
 14895  08DD                     __ptext89:	
 14896 ;; *************** function i1_i2c1_driver_TXData *****************
 14897 ;; Defined at:
 14898 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;  d               1    wreg     unsigned char 
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;  d               1    0[COMMON] unsigned char 
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      void 
 14905 ;; Registers used:
 14906 ;;		wreg
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;Total ram usage:        1 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; This function calls:
 14919 ;;		Nothing
 14920 ;; This function is called by:
 14921 ;;		_do_I2C_SEND_ADR_READ
 14922 ;;		_do_I2C_SEND_ADR_WRITE
 14923 ;;		_do_I2C_TX
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           
 14928                           ;psect for function i1_i2c1_driver_TXData
 14929  08DD                     i1_i2c1_driver_TXData:	
 14930                           
 14931                           ;incstack = 0
 14932                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 14933                           ;i1i2c1_driver_TXData@d stored from wreg
 14934  08DD  00F0               	movwf	i1i2c1_driver_TXData@d
 14935                           
 14936                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
=======
 12026 ;;Total ram usage:        1 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; Hardware stack levels required when called:    5
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_I2C_Write_Byte
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           
 12037                           ;psect for function _i2c1_driver_TXData
 12038  1171                     _i2c1_driver_TXData:	
 12039                           
 12040                           ;incstack = 0
 12041                           ; Regs used in _i2c1_driver_TXData: [wreg]
 12042                           ;i2c1_driver_TXData@d stored from wreg
 12043  1171  0020               	movlb	0	; select bank0
 12044  1172  00A0               	movwf	i2c1_driver_TXData@d
 12045                           
 12046                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
>>>>>>> b288aef trying to integrate UART
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
<<<<<<< Upstream, based on origin/master
 14937  08DE  0870               	movf	i1i2c1_driver_TXData@d,w
 14938  08DF  0024               	movlb	4	; select bank4
 14939  08E0  0091               	movwf	17	;volatile
 14940  08E1  0008               	return
 14941  08E2                     __end_ofi1_i2c1_driver_TXData:	
 14942                           
 14943                           	psect	text90
 14944  0883                     __ptext90:	
 14945 ;; *************** function i1_i2c1_driver_getRXData *****************
 14946 ;; Defined at:
 14947 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;		None
 14950 ;; Auto vars:     Size  Location     Type
 14951 ;;		None
 14952 ;; Return value:  Size  Location     Type
 14953 ;;                  1    wreg      unsigned char 
 14954 ;; Registers used:
 14955 ;;		wreg
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 12047  1173  0820               	movf	i2c1_driver_TXData@d,w
 12048  1174  0024               	movlb	4	; select bank4
 12049  1175  0091               	movwf	17	;volatile
 12050  1176  0008               	return
 12051  1177                     __end_of_i2c1_driver_TXData:	
 12052                           
 12053                           	psect	text35
 12054  1124                     __ptext35:	
 12055 ;; *************** function _I2C_Stop *****************
 12056 ;; Defined at:
 12057 ;;		line 50 in file "i2c.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;		None
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;		None
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      void 
 12064 ;; Registers used:
 12065 ;;		status,2, status,0, pclath, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 14961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 14962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 14963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 14964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 12074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 14965 ;;Total ram usage:        0 bytes
 14966 ;; Hardware stack levels used:    1
 14967 ;; This function calls:
 14968 ;;		Nothing
 14969 ;; This function is called by:
 14970 ;;		_do_I2C_RX
 14971 ;; This function uses a non-reentrant model
 14972 ;;
 14973                           
 14974                           
 14975                           ;psect for function i1_i2c1_driver_getRXData
 14976  0883                     i1_i2c1_driver_getRXData:	
 14977                           
 14978                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 14979                           
 14980                           ;incstack = 0
 14981                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 14982  0883  0024               	movlb	4	; select bank4
 14983  0884  0811               	movf	17,w	;volatile
 14984  0885  0008               	return
 14985  0886                     __end_ofi1_i2c1_driver_getRXData:	
 14986                           
 14987                           	psect	text91
 14988  08B1                     __ptext91:	
 14989 ;; *************** function i1_i2c1_driver_sendNACK *****************
 14990 ;; Defined at:
 14991 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;		None
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;		None
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  1    wreg      void 
 14998 ;; Registers used:
 14999 ;;		None
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 12075 ;;Total ram usage:        0 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    6
 12078 ;; This function calls:
 12079 ;;		_i2c1_driver_stop
 12080 ;; This function is called by:
 12081 ;;		_wireReadDataBlock
 12082 ;;		_wireWriteDataByte
 12083 ;;		_wireReadDataByte
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           
 12088                           ;psect for function _I2C_Stop
 12089  1124                     _I2C_Stop:	
 12090                           
 12091                           ;i2c.c: 52:  i2c1_driver_stop();
 12092                           
 12093                           ;incstack = 0
 12094                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
 12095  1124  3191  2121         	fcall	_i2c1_driver_stop
 12096  1126  0008               	return
 12097  1127                     __end_of_I2C_Stop:	
 12098                           
 12099                           	psect	text36
 12100  1121                     __ptext36:	
 12101 ;; *************** function _i2c1_driver_stop *****************
 12102 ;; Defined at:
 12103 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;		None
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;		None
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		None
 12112 ;; Tracked objects:
 12113 ;;		On entry : 0/0
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;Total ram usage:        0 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:    5
 12124 ;; This function calls:
 12125 ;;		Nothing
 12126 ;; This function is called by:
 12127 ;;		_I2C_Stop
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           
 12132                           ;psect for function _i2c1_driver_stop
 12133  1121                     _i2c1_driver_stop:	
 12134                           
 12135                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 12136                           
 12137                           ;incstack = 0
 12138                           ; Regs used in _i2c1_driver_stop: []
 12139  1121  0024               	movlb	4	; select bank4
 12140  1122  1516               	bsf	22,2	;volatile
 12141  1123  0008               	return
 12142  1124                     __end_of_i2c1_driver_stop:	
 12143                           
 12144                           	psect	text37
 12145  111E                     __ptext37:	
 12146 ;; *************** function _I2C_Start *****************
 12147 ;; Defined at:
 12148 ;;		line 35 in file "i2c.c"
 12149 ;; Parameters:    Size  Location     Type
 12150 ;;		None
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;		None
 12153 ;; Return value:  Size  Location     Type
 12154 ;;                  1    wreg      void 
 12155 ;; Registers used:
 12156 ;;		status,2, status,0, pclath, cstack
 12157 ;; Tracked objects:
 12158 ;;		On entry : 0/0
 12159 ;;		On exit  : 0/0
 12160 ;;		Unchanged: 0/0
 12161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12166 ;;Total ram usage:        0 bytes
 12167 ;; Hardware stack levels used:    1
 12168 ;; Hardware stack levels required when called:    6
 12169 ;; This function calls:
 12170 ;;		_i2c1_driver_start
 12171 ;; This function is called by:
 12172 ;;		_wireReadDataBlock
 12173 ;;		_wireWriteDataByte
 12174 ;;		_wireReadDataByte
 12175 ;; This function uses a non-reentrant model
 12176 ;;
 12177                           
 12178                           
 12179                           ;psect for function _I2C_Start
 12180  111E                     _I2C_Start:	
 12181                           
 12182                           ;i2c.c: 37:  i2c1_driver_start();
 12183                           
 12184                           ;incstack = 0
 12185                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
 12186  111E  3191  211B         	fcall	_i2c1_driver_start
 12187  1120  0008               	return
 12188  1121                     __end_of_I2C_Start:	
 12189                           
 12190                           	psect	text38
 12191  111B                     __ptext38:	
 12192 ;; *************** function _i2c1_driver_start *****************
 12193 ;; Defined at:
 12194 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  1    wreg      void 
 12201 ;; Registers used:
 12202 ;;		None
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/0
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;Total ram usage:        0 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; Hardware stack levels required when called:    5
 12215 ;; This function calls:
 12216 ;;		Nothing
 12217 ;; This function is called by:
 12218 ;;		_I2C_Start
 12219 ;;		_i2c_masterOperation
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           
 12224                           ;psect for function _i2c1_driver_start
 12225  111B                     _i2c1_driver_start:	
 12226                           
 12227                           ;mcc_generated_files/i2c1_driver.c: 148:     SSP1CON2bits.SEN = 1;
 12228                           
 12229                           ;incstack = 0
 12230                           ; Regs used in _i2c1_driver_start: []
 12231  111B  0024               	movlb	4	; select bank4
 12232  111C  1416               	bsf	22,0	;volatile
 12233  111D  0008               	return
 12234  111E                     __end_of_i2c1_driver_start:	
 12235                           
 12236                           	psect	text39
 12237  1118                     __ptext39:	
 12238 ;; *************** function _I2C_Send_NACK *****************
 12239 ;; Defined at:
 12240 ;;		line 66 in file "i2c.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;		None
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;		None
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  1    wreg      void 
 12247 ;; Registers used:
 12248 ;;		status,2, status,0, pclath, cstack
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;Total ram usage:        0 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; Hardware stack levels required when called:    6
 12261 ;; This function calls:
 12262 ;;		_i2c1_driver_sendNACK
 12263 ;; This function is called by:
 12264 ;;		_wireReadDataBlock
 12265 ;;		_wireReadDataByte
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function _I2C_Send_NACK
 12271  1118                     _I2C_Send_NACK:	
 12272                           
 12273                           ;i2c.c: 68:     i2c1_driver_sendNACK();
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _I2C_Send_NACK: [status,2+status,0+pclath+cstack]
 12277  1118  3191  2157         	fcall	_i2c1_driver_sendNACK
 12278  111A  0008               	return
 12279  111B                     __end_of_I2C_Send_NACK:	
 12280                           
 12281                           	psect	text40
 12282  1157                     __ptext40:	
 12283 ;; *************** function _i2c1_driver_sendNACK *****************
 12284 ;; Defined at:
 12285 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1    wreg      void 
 12292 ;; Registers used:
 12293 ;;		None
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:    5
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_I2C_Send_NACK
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function _i2c1_driver_sendNACK
 12315  1157                     _i2c1_driver_sendNACK:	
 12316                           
 12317                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 12318                           
 12319                           ;incstack = 0
 12320                           ; Regs used in _i2c1_driver_sendNACK: []
 12321  1157  0024               	movlb	4	; select bank4
 12322  1158  1696               	bsf	22,5	;volatile
 12323                           
 12324                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 12325  1159  1616               	bsf	22,4	;volatile
 12326  115A  0008               	return
 12327  115B                     __end_of_i2c1_driver_sendNACK:	
 12328                           
 12329                           	psect	text41
 12330  1217                     __ptext41:	
 12331 ;; *************** function _I2C_Read_Byte *****************
 12332 ;; Defined at:
 12333 ;;		line 115 in file "i2c.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;		None
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;		None
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      unsigned char 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, status,0, pclath, cstack
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;Total ram usage:        0 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    6
 12354 ;; This function calls:
 12355 ;;		_i2c1_driver_getRXData
 12356 ;;		_i2c1_driver_isBufferFull
 12357 ;;		_i2c1_driver_startRX
 12358 ;; This function is called by:
 12359 ;;		_wireReadDataBlock
 12360 ;;		_wireReadDataByte
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           
 12365                           ;psect for function _I2C_Read_Byte
 12366  1217                     _I2C_Read_Byte:	
 12367                           
 12368                           ;i2c.c: 117:     i2c1_driver_startRX();
 12369                           
 12370                           ;incstack = 0
 12371                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 12372  1217  3191  2115  3192   	fcall	_i2c1_driver_startRX
 12373  121A                     l6893:	
 12374                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 12375                           
 12376                           
 12377                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
 12378  121A  3191  2198  3192   	fcall	_i2c1_driver_isBufferFull
 12379  121D  1C03               	btfss	3,0
 12380  121E  2A1A               	goto	l6893
 12381                           
 12382                           ;i2c.c: 137:   return i2c1_driver_getRXData();
 12383  121F  3191  2112         	fcall	_i2c1_driver_getRXData
 12384  1221  0008               	return
 12385  1222                     __end_of_I2C_Read_Byte:	
 12386                           
 12387                           	psect	text42
 12388  1115                     __ptext42:	
 12389 ;; *************** function _i2c1_driver_startRX *****************
 12390 ;; Defined at:
 12391 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;		None
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;		None
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  1    wreg      void 
 12398 ;; Registers used:
 12399 ;;		None
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;Total ram usage:        0 bytes
 12410 ;; Hardware stack levels used:    1
 12411 ;; Hardware stack levels required when called:    5
 12412 ;; This function calls:
 12413 ;;		Nothing
 12414 ;; This function is called by:
 12415 ;;		_I2C_Read_Byte
 12416 ;; This function uses a non-reentrant model
 12417 ;;
 12418                           
 12419                           
 12420                           ;psect for function _i2c1_driver_startRX
 12421  1115                     _i2c1_driver_startRX:	
 12422                           
 12423                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 12424                           
 12425                           ;incstack = 0
 12426                           ; Regs used in _i2c1_driver_startRX: []
 12427  1115  0024               	movlb	4	; select bank4
 12428  1116  1596               	bsf	22,3	;volatile
 12429  1117  0008               	return
 12430  1118                     __end_of_i2c1_driver_startRX:	
 12431                           
 12432                           	psect	text43
 12433  1198                     __ptext43:	
 12434 ;; *************** function _i2c1_driver_isBufferFull *****************
 12435 ;; Defined at:
 12436 ;;		line 213 in file "mcc_generated_files/i2c1_driver.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;		None
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;		None               void
 12443 ;; Registers used:
 12444 ;;		wreg, status,2, status,0
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12454 ;;Total ram usage:        1 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    5
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		_I2C_Read_Byte
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _i2c1_driver_isBufferFull
 12466  1198                     _i2c1_driver_isBufferFull:	
 12467                           
 12468                           ;mcc_generated_files/i2c1_driver.c: 215:     return SSP1STATbits.BF;
 12469                           
 12470                           ;incstack = 0
 12471                           ; Regs used in _i2c1_driver_isBufferFull: [wreg+status,2+status,0]
 12472  1198  0024               	movlb	4	; select bank4
 12473  1199  0814               	movf	20,w	;volatile
 12474  119A  3901               	andlw	1
 12475  119B  0020               	movlb	0	; select bank0
 12476  119C  00A0               	movwf	??_i2c1_driver_isBufferFull
 12477  119D  0C20               	rrf	??_i2c1_driver_isBufferFull,w
 12478  119E  0008               	return
 12479  119F                     __end_of_i2c1_driver_isBufferFull:	
 12480                           
 12481                           	psect	text44
 12482  1112                     __ptext44:	
 12483 ;; *************** function _i2c1_driver_getRXData *****************
 12484 ;; Defined at:
 12485 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;		None
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;		None
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  1    wreg      unsigned char 
 12492 ;; Registers used:
 12493 ;;		wreg
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12503 ;;Total ram usage:        0 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; Hardware stack levels required when called:    5
 12506 ;; This function calls:
 12507 ;;		Nothing
 12508 ;; This function is called by:
 12509 ;;		_I2C_Read_Byte
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           
 12514                           ;psect for function _i2c1_driver_getRXData
 12515  1112                     _i2c1_driver_getRXData:	
 12516                           
 12517                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 12518                           
 12519                           ;incstack = 0
 12520                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 12521  1112  0024               	movlb	4	; select bank4
 12522  1113  0811               	movf	17,w	;volatile
 12523  1114  0008               	return
 12524  1115                     __end_of_i2c1_driver_getRXData:	
 12525                           
 12526                           	psect	text45
 12527  110F                     __ptext45:	
 12528 ;; *************** function _I2C_ReStart *****************
 12529 ;; Defined at:
 12530 ;;		line 43 in file "i2c.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;		None
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;		None
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		status,2, status,0, pclath, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;Total ram usage:        0 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    6
 12551 ;; This function calls:
 12552 ;;		_i2c1_driver_restart
 12553 ;; This function is called by:
 12554 ;;		_wireReadDataBlock
 12555 ;;		_wireReadDataByte
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           
 12560                           ;psect for function _I2C_ReStart
 12561  110F                     _I2C_ReStart:	
 12562                           
 12563                           ;i2c.c: 45:  i2c1_driver_restart();
 12564                           
 12565                           ;incstack = 0
 12566                           ; Regs used in _I2C_ReStart: [status,2+status,0+pclath+cstack]
 12567  110F  3191  210C         	fcall	_i2c1_driver_restart
 12568  1111  0008               	return
 12569  1112                     __end_of_I2C_ReStart:	
 12570                           
 12571                           	psect	text46
 12572  110C                     __ptext46:	
 12573 ;; *************** function _i2c1_driver_restart *****************
 12574 ;; Defined at:
 12575 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 12576 ;; Parameters:    Size  Location     Type
 12577 ;;		None
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  1    wreg      void 
 12582 ;; Registers used:
 12583 ;;		None
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;Total ram usage:        0 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:    5
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_I2C_ReStart
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           
 12604                           ;psect for function _i2c1_driver_restart
 12605  110C                     _i2c1_driver_restart:	
 12606                           
 12607                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 12608                           
 12609                           ;incstack = 0
 12610                           ; Regs used in _i2c1_driver_restart: []
 12611  110C  0024               	movlb	4	; select bank4
 12612  110D  1496               	bsf	22,1	;volatile
 12613  110E  0008               	return
 12614  110F                     __end_of_i2c1_driver_restart:	
 12615                           
 12616                           	psect	text47
 12617  0761                     __ptext47:	
 12618 ;; *************** function _UART_Byte *****************
 12619 ;; Defined at:
 12620 ;;		line 335 in file "main.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;		None
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;  bits            7   18[BANK1 ] unsigned char [7]
 12625 ;;  brightStr       1   28[BANK1 ] PTR unsigned char 
 12626 ;;  profileStr      1   27[BANK1 ] PTR unsigned char 
 12627 ;;  proxStr         1   26[BANK1 ] PTR unsigned char 
 12628 ;;  onStr           1   25[BANK1 ] PTR unsigned char 
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  1    wreg      void 
 12631 ;; Registers used:
 12632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;Total ram usage:       13 bytes
 12643 ;; Hardware stack levels used:    1
 12644 ;; Hardware stack levels required when called:   14
 12645 ;; This function calls:
 12646 ;;		_sprintf
 12647 ;;		_strcat
 12648 ;;		_strcpy
 12649 ;; This function is called by:
 12650 ;;		_main
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           
 12655                           ;psect for function _UART_Byte
 12656  0761                     _UART_Byte:	
 12657                           
 12658                           ;main.c: 336:     char bits[7];;main.c: 337:     char * onStr;;main.c: 338:     char * p
      +                          roxStr;;main.c: 339:     char * profileStr;;main.c: 340:     char * brightStr;;main.c: 3
      +                          41:     sprintf(onStr, "%d", on);
 12659                           
 12660                           ;incstack = 0
 12661                           ; Regs used in _UART_Byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12662  0761  3054               	movlw	low (STR_5| (0+32768))
 12663  0762  0021               	movlb	1	; select bank1
 12664  0763  00A3               	movwf	sprintf@fmt^(0+128)
 12665  0764  3098               	movlw	high (STR_5| (0+32768))
 12666  0765  00A4               	movwf	(sprintf@fmt^(0+128)+1)
 12667  0766  086F               	movf	_on^(0+128),w
 12668  0767  00B0               	movwf	??_UART_Byte^(0+128)
 12669  0768  01B1               	clrf	(??_UART_Byte^(0+128)+1)
 12670  0769  0830               	movf	??_UART_Byte^(0+128),w
 12671  076A  00A5               	movwf	(?_sprintf^(0+128)+2)
 12672  076B  0831               	movf	(??_UART_Byte+1)^(0+128),w
 12673  076C  00A6               	movwf	((?_sprintf+1)^(0+128)+2)
 12674  076D  0839               	movf	UART_Byte@onStr^(0+128),w
 12675  076E  3194  2434  3187   	fcall	_sprintf
 12676                           
 12677                           ;main.c: 342:     sprintf(proxStr, "%d", prox);
 12678  0771  3054               	movlw	low (STR_5| (0+32768))
 12679  0772  0021               	movlb	1	; select bank1
 12680  0773  00A3               	movwf	sprintf@fmt^(0+128)
 12681  0774  3098               	movlw	high (STR_5| (0+32768))
 12682  0775  00A4               	movwf	(sprintf@fmt^(0+128)+1)
 12683  0776  0022               	movlb	2	; select bank2
 12684  0777  086B               	movf	_prox^(0+256),w
 12685  0778  0021               	movlb	1	; select bank1
 12686  0779  00B0               	movwf	??_UART_Byte^(0+128)
 12687  077A  01B1               	clrf	(??_UART_Byte^(0+128)+1)
 12688  077B  0830               	movf	??_UART_Byte^(0+128),w
 12689  077C  00A5               	movwf	(?_sprintf^(0+128)+2)
 12690  077D  0831               	movf	(??_UART_Byte+1)^(0+128),w
 12691  077E  00A6               	movwf	((?_sprintf+1)^(0+128)+2)
 12692  077F  083A               	movf	UART_Byte@proxStr^(0+128),w
 12693  0780  3194  2434  3187   	fcall	_sprintf
 12694                           
 12695                           ;main.c: 343:     sprintf(profileStr, "%d", name);
 12696  0783  3054               	movlw	low (STR_5| (0+32768))
 12697  0784  0021               	movlb	1	; select bank1
 12698  0785  00A3               	movwf	sprintf@fmt^(0+128)
 12699  0786  3098               	movlw	high (STR_5| (0+32768))
 12700  0787  00A4               	movwf	(sprintf@fmt^(0+128)+1)
 12701  0788  0867               	movf	(_name+1)^(0+128),w
 12702  0789  00A6               	movwf	((?_sprintf+1)^(0+128)+2)
 12703  078A  0866               	movf	_name^(0+128),w
 12704  078B  00A5               	movwf	(?_sprintf^(0+128)+2)
 12705  078C  083B               	movf	UART_Byte@profileStr^(0+128),w
 12706  078D  3194  2434  3187   	fcall	_sprintf
 12707                           
 12708                           ;main.c: 344:     sprintf(brightStr, "%d", brightness);
 12709  0790  3054               	movlw	low (STR_5| (0+32768))
 12710  0791  0021               	movlb	1	; select bank1
 12711  0792  00A3               	movwf	sprintf@fmt^(0+128)
 12712  0793  3098               	movlw	high (STR_5| (0+32768))
 12713  0794  00A4               	movwf	(sprintf@fmt^(0+128)+1)
 12714  0795  0022               	movlb	2	; select bank2
 12715  0796  0865               	movf	(_brightness+1)^(0+256),w
 12716  0797  0021               	movlb	1	; select bank1
 12717  0798  00A6               	movwf	((?_sprintf+1)^(0+128)+2)
 12718  0799  0022               	movlb	2	; select bank2
 12719  079A  0864               	movf	_brightness^(0+256),w
 12720  079B  0021               	movlb	1	; select bank1
 12721  079C  00A5               	movwf	(?_sprintf^(0+128)+2)
 12722  079D  083C               	movf	UART_Byte@brightStr^(0+128),w
 12723  079E  3194  2434  3187   	fcall	_sprintf
 12724                           
 12725                           ;main.c: 345:     strcpy(bits, onStr);
 12726  07A1  0021               	movlb	1	; select bank1
 12727  07A2  0839               	movf	UART_Byte@onStr^(0+128),w
 12728  07A3  00B0               	movwf	??_UART_Byte^(0+128)
 12729  07A4  0830               	movf	??_UART_Byte^(0+128),w
 12730  07A5  0020               	movlb	0	; select bank0
 12731  07A6  00A5               	movwf	strcpy@src
 12732  07A7  30B2               	movlw	(low (UART_Byte@bits| 0))& (0+255)
 12733  07A8  3193  2339  3187   	fcall	_strcpy
 12734                           
 12735                           ;main.c: 346:     strcat(bits, proxStr);
 12736  07AB  0021               	movlb	1	; select bank1
 12737  07AC  083A               	movf	UART_Byte@proxStr^(0+128),w
 12738  07AD  00B0               	movwf	??_UART_Byte^(0+128)
 12739  07AE  0830               	movf	??_UART_Byte^(0+128),w
 12740  07AF  0020               	movlb	0	; select bank0
 12741  07B0  00AA               	movwf	strcat@src
 12742  07B1  30B2               	movlw	(low (UART_Byte@bits| 0))& (0+255)
 12743  07B2  3192  22F2  3187   	fcall	_strcat
 12744                           
 12745                           ;main.c: 347:     strcat(bits, profileStr);
 12746  07B5  0021               	movlb	1	; select bank1
 12747  07B6  083B               	movf	UART_Byte@profileStr^(0+128),w
 12748  07B7  00B0               	movwf	??_UART_Byte^(0+128)
 12749  07B8  0830               	movf	??_UART_Byte^(0+128),w
 12750  07B9  0020               	movlb	0	; select bank0
 12751  07BA  00AA               	movwf	strcat@src
 12752  07BB  30B2               	movlw	(low (UART_Byte@bits| 0))& (0+255)
 12753  07BC  3192  22F2  3187   	fcall	_strcat
 12754                           
 12755                           ;main.c: 348:     strcat(bits, brightStr);
 12756  07BF  0021               	movlb	1	; select bank1
 12757  07C0  083C               	movf	UART_Byte@brightStr^(0+128),w
 12758  07C1  00B0               	movwf	??_UART_Byte^(0+128)
 12759  07C2  0830               	movf	??_UART_Byte^(0+128),w
 12760  07C3  0020               	movlb	0	; select bank0
 12761  07C4  00AA               	movwf	strcat@src
 12762  07C5  30B2               	movlw	(low (UART_Byte@bits| 0))& (0+255)
 12763  07C6  3192  22F2  3187   	fcall	_strcat
 12764  07C9                     l790:	
 12765                           ;main.c: 350:     while(TXSTA1bits.TRMT == 0){};
 12766                           
 12767  07C9  0023               	movlb	3	; select bank3
 12768  07CA  1C9E               	btfss	30,1	;volatile
 12769  07CB  2FC9               	goto	l790
 12770                           
 12771                           ;main.c: 351:     TXREG1 = bits;
 12772  07CC  30B2               	movlw	(low UART_Byte@bits)& (0+255)
 12773  07CD  009A               	movwf	26	;volatile
 12774  07CE  0008               	return
 12775  07CF                     __end_of_UART_Byte:	
 12776                           
 12777                           	psect	text48
 12778  12F2                     __ptext48:	
 12779 ;; *************** function _strcat *****************
 12780 ;; Defined at:
 12781 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcat.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;  dest            1    wreg     PTR unsigned char 
 12784 ;;		 -> UART_Byte@bits(7), 
 12785 ;;  src             1   10[BANK0 ] PTR const unsigned char 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;  dest            1   14[BANK0 ] PTR unsigned char 
 12788 ;;		 -> UART_Byte@bits(7), 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      PTR unsigned char 
 12791 ;; Registers used:
 12792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12798 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;Total ram usage:        5 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:    6
 12805 ;; This function calls:
 12806 ;;		_strcpy
 12807 ;;		_strlen
 12808 ;; This function is called by:
 12809 ;;		_UART_Byte
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _strcat
 12815  12F2                     _strcat:	
 12816                           
 12817                           ;incstack = 0
 12818                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12819                           ;strcat@dest stored from wreg
 12820  12F2  0020               	movlb	0	; select bank0
 12821  12F3  00AE               	movwf	strcat@dest
 12822  12F4  082A               	movf	strcat@src,w
 12823  12F5  00AB               	movwf	??_strcat
 12824  12F6  082B               	movf	??_strcat,w
 12825  12F7  00A5               	movwf	strcpy@src
 12826  12F8  082E               	movf	strcat@dest,w
 12827  12F9  00A0               	movwf	strlen@s
 12828  12FA  3000               	movlw	0
 12829  12FB  00A1               	movwf	strlen@s+1
 12830  12FC  3193  2321  3192   	fcall	_strlen
 12831  12FF  0020               	movlb	0	; select bank0
 12832  1300  0820               	movf	?_strlen,w
 12833  1301  00AC               	movwf	??_strcat+1
 12834  1302  0821               	movf	?_strlen+1,w
 12835  1303  00AD               	movwf	??_strcat+2
 12836  1304  082E               	movf	strcat@dest,w
 12837  1305  072C               	addwf	??_strcat+1,w
 12838  1306  3193  2339         	fcall	_strcpy
 12839  1308  0008               	return
 12840  1309                     __end_of_strcat:	
 12841                           
 12842                           	psect	text49
 12843  1339                     __ptext49:	
 12844 ;; *************** function _strcpy *****************
 12845 ;; Defined at:
 12846 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;  dest            1    wreg     PTR unsigned char 
 12849 ;;		 -> UART_Byte@bits(7), 
 12850 ;;  src             1    5[BANK0 ] PTR const unsigned char 
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;  dest            1    9[BANK0 ] PTR unsigned char 
 12853 ;;		 -> UART_Byte@bits(7), 
 12854 ;;  d               1    8[BANK0 ] PTR unsigned char 
 12855 ;;		 -> UART_Byte@bits(7), 
 12856 ;;  s               1    7[BANK0 ] PTR const unsigned char 
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      PTR unsigned char 
 12859 ;; Registers used:
 12860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12866 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;Total ram usage:        5 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; Hardware stack levels required when called:    5
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		_UART_Byte
 12877 ;;		_strcat
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881                           
 12882                           ;psect for function _strcpy
 12883  1339                     _strcpy:	
 12884                           
 12885                           ;incstack = 0
 12886                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 12887                           ;strcpy@dest stored from wreg
 12888  1339  0020               	movlb	0	; select bank0
 12889  133A  00A9               	movwf	strcpy@dest
 12890  133B  0825               	movf	strcpy@src,w
 12891  133C  00A6               	movwf	??_strcpy
 12892  133D  0826               	movf	??_strcpy,w
 12893  133E  00A7               	movwf	strcpy@s
 12894  133F  0829               	movf	strcpy@dest,w
 12895  1340  00A6               	movwf	??_strcpy
 12896  1341  0826               	movf	??_strcpy,w
 12897  1342  00A8               	movwf	strcpy@d
 12898  1343                     l5031:	
 12899  1343  0828               	movf	strcpy@d,w
 12900  1344  0086               	movwf	6
 12901  1345  0187               	clrf	7
 12902  1346  0AA8               	incf	strcpy@d,f
 12903  1347  0827               	movf	strcpy@s,w
 12904  1348  0084               	movwf	4
 12905  1349  0185               	clrf	5
 12906  134A  0AA7               	incf	strcpy@s,f
 12907  134B  0800               	movf	0,w
 12908  134C  3FC0               	movwi [0]fsr1
 12909  134D  0889               	movf	9,f
 12910  134E  1903               	btfsc	3,2
 12911  134F  0008               	return
 12912  1350  2B43               	goto	l5031
 12913  1351                     __end_of_strcpy:	
 12914                           
 12915                           	psect	text50
 12916  1434                     __ptext50:	
 12917 ;; *************** function _sprintf *****************
 12918 ;; Defined at:
 12919 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  s               1    wreg     PTR unsigned char 
 12922 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
 12923 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 12924 ;; Auto vars:     Size  Location     Type
 12925 ;;  s               1   10[BANK1 ] PTR unsigned char 
 12926 ;;  f               5   11[BANK1 ] struct _IO_FILE
 12927 ;;  ret             2    0        int 
 12928 ;;  ap              1    9[BANK1 ] PTR void [1]
 12929 ;;		 -> ?_sprintf(2), 
 12930 ;; Return value:  Size  Location     Type
 12931 ;;                  2    3[BANK1 ] int 
 12932 ;; Registers used:
 12933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12934 ;; Tracked objects:
 12935 ;;		On entry : 0/0
 12936 ;;		On exit  : 0/0
 12937 ;;		Unchanged: 0/0
 12938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12939 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;Total ram usage:       14 bytes
 12944 ;; Hardware stack levels used:    1
 12945 ;; Hardware stack levels required when called:   13
 12946 ;; This function calls:
 12947 ;;		_vfprintf
 12948 ;; This function is called by:
 12949 ;;		_UART_Byte
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           
 12954                           ;psect for function _sprintf
 12955  1434                     _sprintf:	
 12956                           
 12957                           ;incstack = 0
 12958                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12959                           ;sprintf@s stored from wreg
 12960  1434  0021               	movlb	1	; select bank1
 12961  1435  00AA               	movwf	sprintf@s^(0+128)
 12962  1436  30A5               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 12963  1437  0020               	movlb	0	; select bank0
 12964  1438  00EF               	movwf	??_sprintf
 12965  1439  086F               	movf	??_sprintf,w
 12966  143A  0021               	movlb	1	; select bank1
 12967  143B  00A9               	movwf	sprintf@ap^(0+128)
 12968  143C  082A               	movf	sprintf@s^(0+128),w
 12969  143D  0020               	movlb	0	; select bank0
 12970  143E  00EF               	movwf	??_sprintf
 12971  143F  086F               	movf	??_sprintf,w
 12972  1440  0021               	movlb	1	; select bank1
 12973  1441  00AB               	movwf	sprintf@f^(0+128)
 12974  1442  01AC               	clrf	(sprintf@f^(0+128)+1)
 12975  1443  01AD               	clrf	((sprintf@f+1)^(0+128)+1)
 12976  1444  01AE               	clrf	(sprintf@f^(0+128)+3)
 12977  1445  01AF               	clrf	((sprintf@f+1)^(0+128)+3)
 12978  1446  0824               	movf	(sprintf@fmt+1)^(0+128),w
 12979  1447  0020               	movlb	0	; select bank0
 12980  1448  00EB               	movwf	vfprintf@fmt+1
 12981  1449  0021               	movlb	1	; select bank1
 12982  144A  0823               	movf	sprintf@fmt^(0+128),w
 12983  144B  0020               	movlb	0	; select bank0
 12984  144C  00EA               	movwf	vfprintf@fmt
 12985  144D  30A9               	movlw	(low (sprintf@ap| 0))& (0+255)
 12986  144E  00EF               	movwf	??_sprintf
 12987  144F  086F               	movf	??_sprintf,w
 12988  1450  00EC               	movwf	vfprintf@ap
 12989  1451  30AB               	movlw	(low (sprintf@f| 0))& (0+255)
 12990  1452  3196  26A2         	fcall	_vfprintf
 12991  1454  0008               	return
 12992  1455                     __end_of_sprintf:	
 12993                           
 12994                           	psect	text51
 12995  16A2                     __ptext51:	
 12996 ;; *************** function _vfprintf *****************
 12997 ;; Defined at:
 12998 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;  fp              1    wreg     PTR struct _IO_FILE
 13001 ;;		 -> sprintf@f(5), 
 13002 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
 13003 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 13004 ;;  ap              1   76[BANK0 ] PTR PTR void 
 13005 ;;		 -> sprintf@ap(1), 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
 13008 ;;		 -> sprintf@f(5), 
 13009 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
 13010 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  2   74[BANK0 ] int 
 13013 ;; Registers used:
 13014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13020 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;Total ram usage:        8 bytes
 13025 ;; Hardware stack levels used:    1
 13026 ;; Hardware stack levels required when called:   12
 13027 ;; This function calls:
 13028 ;;		_vfpfcnvrt
 13029 ;; This function is called by:
 13030 ;;		_sprintf
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           
 13035                           ;psect for function _vfprintf
 13036  16A2                     _vfprintf:	
 13037                           
 13038                           ;incstack = 0
 13039                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13040                           ;vfprintf@fp stored from wreg
 13041  16A2  0021               	movlb	1	; select bank1
 13042  16A3  00A0               	movwf	vfprintf@fp^(0+128)
 13043                           
 13044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 13045  16A4  0020               	movlb	0	; select bank0
 13046  16A5  086B               	movf	vfprintf@fmt+1,w
 13047  16A6  0021               	movlb	1	; select bank1
 13048  16A7  00A2               	movwf	(vfprintf@cfmt+1)^(0+128)
 13049  16A8  0020               	movlb	0	; select bank0
 13050  16A9  086A               	movf	vfprintf@fmt,w
 13051  16AA  0021               	movlb	1	; select bank1
 13052  16AB  00A1               	movwf	vfprintf@cfmt^(0+128)
 13053                           
 13054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 13055  16AC  0023               	movlb	3	; select bank3
 13056  16AD  01D5               	clrf	_nout^(0+384)
 13057  16AE  01D6               	clrf	(_nout+1)^(0+384)
 13058  16AF                     l7537:	
 13059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 13060                           
 13061                           
 13062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 13063  16AF  0021               	movlb	1	; select bank1
 13064  16B0  0821               	movf	vfprintf@cfmt^(0+128),w
 13065  16B1  0084               	movwf	4
 13066  16B2  0822               	movf	(vfprintf@cfmt+1)^(0+128),w
 13067  16B3  0085               	movwf	5
 13068  16B4  0012               	moviw fsr0++
 13069  16B5  1903               	btfsc	3,2
 13070  16B6  2ECE               	goto	l7539
 13071                           
 13072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 13073  16B7  30A1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 13074  16B8  0020               	movlb	0	; select bank0
 13075  16B9  00ED               	movwf	??_vfprintf
 13076  16BA  086D               	movf	??_vfprintf,w
 13077  16BB  00DA               	movwf	vfpfcnvrt@fmt
 13078  16BC  086C               	movf	vfprintf@ap,w
 13079  16BD  00EE               	movwf	??_vfprintf+1
 13080  16BE  086E               	movf	??_vfprintf+1,w
 13081  16BF  00DB               	movwf	vfpfcnvrt@ap
 13082  16C0  0021               	movlb	1	; select bank1
 13083  16C1  0820               	movf	vfprintf@fp^(0+128),w
 13084  16C2  318B  235C  3196   	fcall	_vfpfcnvrt
 13085  16C5  0020               	movlb	0	; select bank0
 13086  16C6  085A               	movf	?_vfpfcnvrt,w
 13087  16C7  0023               	movlb	3	; select bank3
 13088  16C8  07D5               	addwf	_nout^(0+384),f
 13089  16C9  0020               	movlb	0	; select bank0
 13090  16CA  085B               	movf	?_vfpfcnvrt+1,w
 13091  16CB  0023               	movlb	3	; select bank3
 13092  16CC  3DD6               	addwfc	(_nout+1)^(0+384),f
 13093  16CD  2EAF               	goto	l7537
 13094  16CE                     l7539:	
 13095                           
 13096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 13097  16CE  0023               	movlb	3	; select bank3
 13098  16CF  0856               	movf	(_nout+1)^(0+384),w
 13099  16D0  0020               	movlb	0	; select bank0
 13100  16D1  00EB               	movwf	?_vfprintf+1
 13101  16D2  0023               	movlb	3	; select bank3
 13102  16D3  0855               	movf	_nout^(0+384),w
 13103  16D4  0020               	movlb	0	; select bank0
 13104  16D5  00EA               	movwf	?_vfprintf
 13105  16D6  0008               	return
 13106  16D7                     __end_of_vfprintf:	
 13107                           
 13108                           	psect	text52
 13109  0B5C                     __ptext52:	
 13110 ;; *************** function _vfpfcnvrt *****************
 13111 ;; Defined at:
 13112 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  fp              1    wreg     PTR struct _IO_FILE
 13115 ;;		 -> sprintf@f(5), 
 13116 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 13117 ;;		 -> vfprintf@cfmt(2), 
 13118 ;;  ap              1   59[BANK0 ] PTR PTR void 
 13119 ;;		 -> sprintf@ap(1), 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 13122 ;;		 -> sprintf@f(5), 
 13123 ;;  ll              8   65[BANK0 ] long long 
 13124 ;;  llu             8    0        unsigned long long 
 13125 ;;  f               4    0        unsigned long long 
 13126 ;;  ct              3    0        unsigned char [3]
 13127 ;;  vp              2    0        PTR void 
 13128 ;;  i               2    0        int 
 13129 ;;  done            2    0        int 
 13130 ;;  cp              2    0        PTR unsigned char 
 13131 ;;  c               1    0        unsigned char 
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  2   58[BANK0 ] int 
 13134 ;; Registers used:
 13135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:       16 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:   11
 13148 ;; This function calls:
 13149 ;;		_dtoa
 13150 ;;		_fputc
 13151 ;; This function is called by:
 13152 ;;		_vfprintf
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           
 13157                           ;psect for function _vfpfcnvrt
 13158  0B5C                     _vfpfcnvrt:	
 13159                           
 13160                           ;incstack = 0
 13161                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13162                           ;vfpfcnvrt@fp stored from wreg
 13163  0B5C  0020               	movlb	0	; select bank0
 13164  0B5D  00E9               	movwf	vfpfcnvrt@fp
 13165                           
 13166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 13167  0B5E  085A               	movf	vfpfcnvrt@fmt,w
 13168  0B5F  0086               	movwf	6
 13169  0B60  0187               	clrf	7
 13170  0B61  3F40               	moviw [0]fsr1
 13171  0B62  00DC               	movwf	??_vfpfcnvrt
 13172  0B63  3F41               	moviw [1]fsr1
 13173  0B64  00DD               	movwf	??_vfpfcnvrt+1
 13174  0B65  085C               	movf	??_vfpfcnvrt,w
 13175  0B66  0084               	movwf	4
 13176  0B67  085D               	movf	??_vfpfcnvrt+1,w
 13177  0B68  0085               	movwf	5
 13178  0B69  0012               	moviw fsr0++
 13179  0B6A  3A25               	xorlw	37
 13180  0B6B  1D03               	btfss	3,2
 13181  0B6C  2C0A               	goto	l7133
 13182                           
 13183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 13184  0B6D  085A               	movf	vfpfcnvrt@fmt,w
 13185  0B6E  0086               	movwf	6
 13186  0B6F  0187               	clrf	7
 13187  0B70  3001               	movlw	1
 13188  0B71  0781               	addwf	1,f
 13189  0B72  3141               	addfsr 1,1
 13190  0B73  1803               	skipnc
 13191  0B74  0A81               	incf	1,f
 13192                           
 13193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 13194  0B75  0023               	movlb	3	; select bank3
 13195  0B76  01D7               	clrf	_width^(0+384)
 13196  0B77  01D8               	clrf	(_width+1)^(0+384)
 13197  0B78  0022               	movlb	2	; select bank2
 13198  0B79  01E2               	clrf	_flags^(0+256)
 13199  0B7A  01E3               	clrf	(_flags+1)^(0+256)
 13200                           
 13201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 13202  0B7B  30FF               	movlw	255
 13203  0B7C  00E0               	movwf	_prec^(0+256)
 13204  0B7D  30FF               	movlw	255
 13205  0B7E  00E1               	movwf	(_prec^(0+256)+1)
 13206                           
 13207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 13208  0B7F  0020               	movlb	0	; select bank0
 13209  0B80  085A               	movf	vfpfcnvrt@fmt,w
 13210  0B81  0086               	movwf	6
 13211  0B82  0187               	clrf	7
 13212  0B83  3F40               	moviw [0]fsr1
 13213  0B84  00DC               	movwf	??_vfpfcnvrt
 13214  0B85  3F41               	moviw [1]fsr1
 13215  0B86  00DD               	movwf	??_vfpfcnvrt+1
 13216  0B87  085C               	movf	??_vfpfcnvrt,w
 13217  0B88  0084               	movwf	4
 13218  0B89  085D               	movf	??_vfpfcnvrt+1,w
 13219  0B8A  0085               	movwf	5
 13220  0B8B  0012               	moviw fsr0++
 13221  0B8C  3A64               	xorlw	100
 13222  0B8D  1903               	btfsc	3,2
 13223  0B8E  2B9E               	goto	l7109
 13224  0B8F  085A               	movf	vfpfcnvrt@fmt,w
 13225  0B90  0086               	movwf	6
 13226  0B91  0187               	clrf	7
 13227  0B92  3F40               	moviw [0]fsr1
 13228  0B93  00DC               	movwf	??_vfpfcnvrt
 13229  0B94  3F41               	moviw [1]fsr1
 13230  0B95  00DD               	movwf	??_vfpfcnvrt+1
 13231  0B96  085C               	movf	??_vfpfcnvrt,w
 13232  0B97  0084               	movwf	4
 13233  0B98  085D               	movf	??_vfpfcnvrt+1,w
 13234  0B99  0085               	movwf	5
 13235  0B9A  0012               	moviw fsr0++
 13236  0B9B  3A69               	xorlw	105
 13237  0B9C  1D03               	btfss	3,2
 13238  0B9D  2BD8               	goto	l7117
 13239  0B9E                     l7109:	
 13240                           
 13241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 13242  0B9E  085A               	movf	vfpfcnvrt@fmt,w
 13243  0B9F  0086               	movwf	6
 13244  0BA0  0187               	clrf	7
 13245  0BA1  3001               	movlw	1
 13246  0BA2  0781               	addwf	1,f
 13247  0BA3  3141               	addfsr 1,1
 13248  0BA4  1803               	skipnc
 13249  0BA5  0A81               	incf	1,f
 13250                           
 13251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 13252  0BA6  085B               	movf	vfpfcnvrt@ap,w
 13253  0BA7  0086               	movwf	6
 13254  0BA8  0187               	clrf	7
 13255  0BA9  0801               	movf	1,w
 13256  0BAA  0084               	movwf	4
 13257  0BAB  0185               	clrf	5
 13258  0BAC  3002               	movlw	2
 13259  0BAD  0781               	addwf	1,f
 13260  0BAE  3F00               	moviw [0]fsr0
 13261  0BAF  00DC               	movwf	??_vfpfcnvrt
 13262  0BB0  3F01               	moviw [1]fsr0
 13263  0BB1  00DD               	movwf	??_vfpfcnvrt+1
 13264  0BB2  085C               	movf	??_vfpfcnvrt,w
 13265  0BB3  00E1               	movwf	vfpfcnvrt@ll
 13266  0BB4  085D               	movf	??_vfpfcnvrt+1,w
 13267  0BB5  00E2               	movwf	vfpfcnvrt@ll+1
 13268  0BB6  0D89               	rlf	9,f
 13269  0BB7  3B89               	subwfb	9,f
 13270  0BB8  0989               	comf	9,f
 13271  0BB9  00E3               	movwf	vfpfcnvrt@ll+2
 13272  0BBA  00E4               	movwf	vfpfcnvrt@ll+3
 13273  0BBB  00E5               	movwf	vfpfcnvrt@ll+4
 13274  0BBC  00E6               	movwf	vfpfcnvrt@ll+5
 13275  0BBD  00E7               	movwf	vfpfcnvrt@ll+6
 13276  0BBE  00E8               	movwf	vfpfcnvrt@ll+7
 13277                           
 13278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 13279  0BBF  0861               	movf	vfpfcnvrt@ll,w
 13280  0BC0  00BC               	movwf	dtoa@d
 13281  0BC1  0862               	movf	vfpfcnvrt@ll+1,w
 13282  0BC2  00BD               	movwf	dtoa@d+1
 13283  0BC3  0863               	movf	vfpfcnvrt@ll+2,w
 13284  0BC4  00BE               	movwf	dtoa@d+2
 13285  0BC5  0864               	movf	vfpfcnvrt@ll+3,w
 13286  0BC6  00BF               	movwf	dtoa@d+3
 13287  0BC7  0865               	movf	vfpfcnvrt@ll+4,w
 13288  0BC8  00C0               	movwf	dtoa@d+4
 13289  0BC9  0866               	movf	vfpfcnvrt@ll+5,w
 13290  0BCA  00C1               	movwf	dtoa@d+5
 13291  0BCB  0867               	movf	vfpfcnvrt@ll+6,w
 13292  0BCC  00C2               	movwf	dtoa@d+6
 13293  0BCD  0868               	movf	vfpfcnvrt@ll+7,w
 13294  0BCE  00C3               	movwf	dtoa@d+7
 13295  0BCF  0869               	movf	vfpfcnvrt@fp,w
 13296  0BD0  3185  2501         	fcall	_dtoa
 13297  0BD2  0020               	movlb	0	; select bank0
 13298  0BD3  083D               	movf	?_dtoa+1,w
 13299  0BD4  00DB               	movwf	?_vfpfcnvrt+1
 13300  0BD5  083C               	movf	?_dtoa,w
 13301  0BD6  00DA               	movwf	?_vfpfcnvrt
 13302  0BD7  0008               	return
 13303  0BD8                     l7117:	
 13304                           
 13305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 13306  0BD8  085A               	movf	vfpfcnvrt@fmt,w
 13307  0BD9  0086               	movwf	6
 13308  0BDA  0187               	clrf	7
 13309  0BDB  3F40               	moviw [0]fsr1
 13310  0BDC  00DC               	movwf	??_vfpfcnvrt
 13311  0BDD  3F41               	moviw [1]fsr1
 13312  0BDE  00DD               	movwf	??_vfpfcnvrt+1
 13313  0BDF  085C               	movf	??_vfpfcnvrt,w
 13314  0BE0  0084               	movwf	4
 13315  0BE1  085D               	movf	??_vfpfcnvrt+1,w
 13316  0BE2  0085               	movwf	5
 13317  0BE3  0012               	moviw fsr0++
 13318  0BE4  3A25               	xorlw	37
 13319  0BE5  1D03               	btfss	3,2
 13320  0BE6  2BFF               	goto	l7127
 13321                           
 13322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 13323  0BE7  085A               	movf	vfpfcnvrt@fmt,w
 13324  0BE8  0086               	movwf	6
 13325  0BE9  0187               	clrf	7
 13326  0BEA  3001               	movlw	1
 13327  0BEB  0781               	addwf	1,f
 13328  0BEC  3141               	addfsr 1,1
 13329  0BED  1803               	skipnc
 13330  0BEE  0A81               	incf	1,f
 13331                           
 13332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 13333  0BEF  3025               	movlw	37
 13334  0BF0  00A3               	movwf	fputc@c
 13335  0BF1  3000               	movlw	0
 13336  0BF2  00A4               	movwf	fputc@c+1
 13337  0BF3  0869               	movf	vfpfcnvrt@fp,w
 13338  0BF4  00DC               	movwf	??_vfpfcnvrt
 13339  0BF5  085C               	movf	??_vfpfcnvrt,w
 13340  0BF6  00A5               	movwf	fputc@fp
 13341  0BF7  3197  270D         	fcall	_fputc
 13342  0BF9                     l7123:	
 13343                           
 13344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 13345  0BF9  3001               	movlw	1
 13346  0BFA  0020               	movlb	0	; select bank0
 13347  0BFB  00DA               	movwf	?_vfpfcnvrt
 13348  0BFC  3000               	movlw	0
 13349  0BFD  00DB               	movwf	?_vfpfcnvrt+1
 13350  0BFE  0008               	return
 13351  0BFF                     l7127:	
 13352                           
 13353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 13354  0BFF  085A               	movf	vfpfcnvrt@fmt,w
 13355  0C00  0086               	movwf	6
 13356  0C01  0187               	clrf	7
 13357  0C02  3001               	movlw	1
 13358  0C03  0781               	addwf	1,f
 13359  0C04  3141               	addfsr 1,1
 13360  0C05  1803               	skipnc
 13361  0C06  0A81               	incf	1,f
 13362                           
 13363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 13364  0C07  01DA               	clrf	?_vfpfcnvrt
 13365  0C08  01DB               	clrf	?_vfpfcnvrt+1
 13366  0C09  0008               	return
 13367  0C0A                     l7133:	
 13368                           
 13369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 13370  0C0A  085A               	movf	vfpfcnvrt@fmt,w
 13371  0C0B  0086               	movwf	6
 13372  0C0C  0187               	clrf	7
 13373  0C0D  3F40               	moviw [0]fsr1
 13374  0C0E  00DC               	movwf	??_vfpfcnvrt
 13375  0C0F  3F41               	moviw [1]fsr1
 13376  0C10  00DD               	movwf	??_vfpfcnvrt+1
 13377  0C11  085C               	movf	??_vfpfcnvrt,w
 13378  0C12  0084               	movwf	4
 13379  0C13  085D               	movf	??_vfpfcnvrt+1,w
 13380  0C14  0085               	movwf	5
 13381  0C15  0800               	movf	0,w	;code access
 13382  0C16  00DE               	movwf	??_vfpfcnvrt+2
 13383  0C17  01DF               	clrf	??_vfpfcnvrt+3
 13384  0C18  085E               	movf	??_vfpfcnvrt+2,w
 13385  0C19  00A3               	movwf	fputc@c
 13386  0C1A  085F               	movf	??_vfpfcnvrt+3,w
 13387  0C1B  00A4               	movwf	fputc@c+1
 13388  0C1C  0869               	movf	vfpfcnvrt@fp,w
 13389  0C1D  00E0               	movwf	??_vfpfcnvrt+4
 13390  0C1E  0860               	movf	??_vfpfcnvrt+4,w
 13391  0C1F  00A5               	movwf	fputc@fp
 13392  0C20  3197  270D  318B   	fcall	_fputc
 13393                           
 13394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 13395  0C23  0020               	movlb	0	; select bank0
 13396  0C24  085A               	movf	vfpfcnvrt@fmt,w
 13397  0C25  0086               	movwf	6
 13398  0C26  0187               	clrf	7
 13399  0C27  3001               	movlw	1
 13400  0C28  0781               	addwf	1,f
 13401  0C29  3141               	addfsr 1,1
 13402  0C2A  1803               	skipnc
 13403  0C2B  0A81               	incf	1,f
 13404  0C2C  2BF9               	goto	l7123
 13405  0C2D                     __end_of_vfpfcnvrt:	
 13406                           
 13407                           	psect	text53
 13408  0501                     __ptext53:	
 13409 ;; *************** function _dtoa *****************
 13410 ;; Defined at:
 13411 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  fp              1    wreg     PTR struct _IO_FILE
 13414 ;;		 -> sprintf@f(5), 
 13415 ;;  d               8   28[BANK0 ] long long 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
 13418 ;;		 -> sprintf@f(5), 
 13419 ;;  n               8   48[BANK0 ] long long 
 13420 ;;  i               2   56[BANK0 ] int 
 13421 ;;  s               2   46[BANK0 ] int 
 13422 ;;  w               2   44[BANK0 ] int 
 13423 ;;  p               2   42[BANK0 ] int 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  2   28[BANK0 ] int 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13433 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;Total ram usage:       30 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   10
 13440 ;; This function calls:
 13441 ;;		___aodiv
 13442 ;;		___aomod
 13443 ;;		_abs
 13444 ;;		_pad
 13445 ;; This function is called by:
 13446 ;;		_vfpfcnvrt
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           
 13451                           ;psect for function _dtoa
 13452  0501                     _dtoa:	
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13456                           ;dtoa@fp stored from wreg
 13457  0501  0020               	movlb	0	; select bank0
 13458  0502  00C7               	movwf	dtoa@fp
 13459                           
 13460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13461  0503  083C               	movf	dtoa@d,w
 13462  0504  00D0               	movwf	dtoa@n
 13463  0505  083D               	movf	dtoa@d+1,w
 13464  0506  00D1               	movwf	dtoa@n+1
 13465  0507  083E               	movf	dtoa@d+2,w
 13466  0508  00D2               	movwf	dtoa@n+2
 13467  0509  083F               	movf	dtoa@d+3,w
 13468  050A  00D3               	movwf	dtoa@n+3
 13469  050B  0840               	movf	dtoa@d+4,w
 13470  050C  00D4               	movwf	dtoa@n+4
 13471  050D  0841               	movf	dtoa@d+5,w
 13472  050E  00D5               	movwf	dtoa@n+5
 13473  050F  0842               	movf	dtoa@d+6,w
 13474  0510  00D6               	movwf	dtoa@n+6
 13475  0511  0843               	movf	dtoa@d+7,w
 13476  0512  00D7               	movwf	dtoa@n+7
 13477                           
 13478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13479  0513  3050               	movlw	low dtoa@n
 13480  0514  0086               	movwf	6
 13481  0515  3000               	movlw	high dtoa@n
 13482  0516  0087               	movwf	7
 13483  0517  3F47               	moviw [7]fsr1
 13484  0518  00C4               	movwf	??_dtoa
 13485  0519  1FC4               	btfss	??_dtoa,7
 13486  051A  2D1D               	goto	u6350
 13487  051B  3001               	movlw	1
 13488  051C  2D1E               	goto	u6360
 13489  051D                     u6350:	
 13490  051D  3000               	movlw	0
 13491  051E                     u6360:	
 13492  051E  0020               	movlb	0	; select bank0
 13493  051F  00C5               	movwf	??_dtoa+1
 13494  0520  01C6               	clrf	??_dtoa+2
 13495  0521  0845               	movf	??_dtoa+1,w
 13496  0522  00CE               	movwf	dtoa@s
 13497  0523  0846               	movf	??_dtoa+2,w
 13498  0524  00CF               	movwf	dtoa@s+1
 13499                           
 13500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13501  0525  084E               	movf	dtoa@s,w
 13502  0526  044F               	iorwf	dtoa@s+1,w
 13503  0527  1903               	btfsc	3,2
 13504  0528  2D47               	goto	l1649
 13505                           
 13506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13507  0529  09D0               	comf	dtoa@n,f
 13508  052A  09D1               	comf	dtoa@n+1,f
 13509  052B  09D2               	comf	dtoa@n+2,f
 13510  052C  09D3               	comf	dtoa@n+3,f
 13511  052D  09D4               	comf	dtoa@n+4,f
 13512  052E  09D5               	comf	dtoa@n+5,f
 13513  052F  09D6               	comf	dtoa@n+6,f
 13514  0530  09D7               	comf	dtoa@n+7,f
 13515  0531  0AD0               	incf	dtoa@n,f
 13516  0532  1D03               	skipz
 13517  0533  2D47               	goto	l1649
 13518  0534  0AD1               	incf	dtoa@n+1,f
 13519  0535  1D03               	skipz
 13520  0536  2D47               	goto	l1649
 13521  0537  0AD2               	incf	dtoa@n+2,f
 13522  0538  1D03               	skipz
 13523  0539  2D47               	goto	l1649
 13524  053A  0AD3               	incf	dtoa@n+3,f
 13525  053B  1D03               	skipz
 13526  053C  2D47               	goto	l1649
 13527  053D  0AD4               	incf	dtoa@n+4,f
 13528  053E  1D03               	skipz
 13529  053F  2D47               	goto	l1649
 13530  0540  0AD5               	incf	dtoa@n+5,f
 13531  0541  1D03               	skipz
 13532  0542  2D47               	goto	l1649
 13533  0543  0AD6               	incf	dtoa@n+6,f
 13534  0544  1D03               	skipz
 13535  0545  2D47               	goto	l1649
 13536  0546  0AD7               	incf	dtoa@n+7,f
 13537  0547                     l1649:	
 13538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 13539                           
 13540                           
 13541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13542  0547  0022               	movlb	2	; select bank2
 13543  0548  1BE1               	btfsc	(_prec+1)^(0+256),7
 13544  0549  2D4E               	goto	l1650
 13545                           
 13546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13547  054A  30FD               	movlw	253
 13548  054B  05E2               	andwf	_flags^(0+256),f
 13549  054C  30FF               	movlw	255
 13550  054D  05E3               	andwf	(_flags+1)^(0+256),f
 13551  054E                     l1650:	
 13552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 13553                           
 13554                           
 13555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13556  054E  0861               	movf	(_prec+1)^(0+256),w
 13557  054F  3A80               	xorlw	128
 13558  0550  0020               	movlb	0	; select bank0
 13559  0551  00C4               	movwf	??_dtoa
 13560  0552  3080               	movlw	128
 13561  0553  0244               	subwf	??_dtoa,w
 13562  0554  1D03               	skipz
 13563  0555  2D59               	goto	u6405
 13564  0556  3001               	movlw	1
 13565  0557  0022               	movlb	2	; select bank2
 13566  0558  0260               	subwf	_prec^(0+256),w
 13567  0559                     u6405:	
 13568  0559  1803               	skipnc
 13569  055A  2D61               	goto	l7023
 13570  055B  3001               	movlw	1
 13571  055C  0020               	movlb	0	; select bank0
 13572  055D  00CA               	movwf	dtoa@p
 13573  055E  3000               	movlw	0
 13574  055F  00CB               	movwf	dtoa@p+1
 13575  0560  2D69               	goto	l1654
 13576  0561                     l7023:	
 13577  0561  0022               	movlb	2	; select bank2
 13578  0562  0861               	movf	(_prec+1)^(0+256),w
 13579  0563  0020               	movlb	0	; select bank0
 13580  0564  00CB               	movwf	dtoa@p+1
 13581  0565  0022               	movlb	2	; select bank2
 13582  0566  0860               	movf	_prec^(0+256),w
 13583  0567  0020               	movlb	0	; select bank0
 13584  0568  00CA               	movwf	dtoa@p
 13585  0569                     l1654:	
 13586                           
 13587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13588  0569  0023               	movlb	3	; select bank3
 13589  056A  0858               	movf	(_width+1)^(0+384),w
 13590  056B  0020               	movlb	0	; select bank0
 13591  056C  00CD               	movwf	dtoa@w+1
 13592  056D  0023               	movlb	3	; select bank3
 13593  056E  0857               	movf	_width^(0+384),w
 13594  056F  0020               	movlb	0	; select bank0
 13595  0570  00CC               	movwf	dtoa@w
 13596                           
 13597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13598  0571  084E               	movf	dtoa@s,w
 13599  0572  044F               	iorwf	dtoa@s+1,w
 13600  0573  1D03               	btfss	3,2
 13601  0574  2D78               	goto	l7029
 13602  0575  0022               	movlb	2	; select bank2
 13603  0576  1D62               	btfss	_flags^(0+256),2
 13604  0577  2D7D               	goto	l1655
 13605  0578                     l7029:	
 13606                           
 13607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13608  0578  30FF               	movlw	255
 13609  0579  0020               	movlb	0	; select bank0
 13610  057A  07CC               	addwf	dtoa@w,f
 13611  057B  30FF               	movlw	255
 13612  057C  3DCD               	addwfc	dtoa@w+1,f
 13613  057D                     l1655:	
 13614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 13615                           
 13616                           
 13617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13618  057D  301F               	movlw	31
 13619  057E  0020               	movlb	0	; select bank0
 13620  057F  00D8               	movwf	dtoa@i
 13621  0580  3000               	movlw	0
 13622  0581  00D9               	movwf	dtoa@i+1
 13623                           
 13624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13625  0582  0025               	movlb	5	; select bank5
 13626  0583  01BF               	clrf	(_dbuf^(0+640)+31)
 13627                           
 13628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13629  0584  2E13               	goto	l1658
 13630  0585                     l7043:	
 13631  0585  0020               	movlb	0	; select bank0
 13632  0586  0850               	movf	dtoa@n,w
 13633  0587  0451               	iorwf	dtoa@n+1,w
 13634  0588  0452               	iorwf	dtoa@n+2,w
 13635  0589  0453               	iorwf	dtoa@n+3,w
 13636  058A  0454               	iorwf	dtoa@n+4,w
 13637  058B  0455               	iorwf	dtoa@n+5,w
 13638  058C  0456               	iorwf	dtoa@n+6,w
 13639  058D  0457               	iorwf	dtoa@n+7,w
 13640  058E  1D03               	skipz
 13641  058F  2DAA               	goto	l7033
 13642  0590  084B               	movf	dtoa@p+1,w
 13643  0591  3A80               	xorlw	128
 13644  0592  00C4               	movwf	??_dtoa
 13645  0593  3080               	movlw	128
 13646  0594  0244               	subwf	??_dtoa,w
 13647  0595  1D03               	skipz
 13648  0596  2D99               	goto	u6455
 13649  0597  3001               	movlw	1
 13650  0598  024A               	subwf	dtoa@p,w
 13651  0599                     u6455:	
 13652  0599  1803               	skipnc
 13653  059A  2DAA               	goto	l7033
 13654  059B  0020               	movlb	0	; select bank0
 13655  059C  084D               	movf	dtoa@w+1,w
 13656  059D  3A80               	xorlw	128
 13657  059E  00C4               	movwf	??_dtoa
 13658  059F  3080               	movlw	128
 13659  05A0  0244               	subwf	??_dtoa,w
 13660  05A1  1D03               	skipz
 13661  05A2  2DA5               	goto	u6465
 13662  05A3  3001               	movlw	1
 13663  05A4  024C               	subwf	dtoa@w,w
 13664  05A5                     u6465:	
 13665  05A5  1C03               	skipc
 13666  05A6  2E1F               	goto	l7051
 13667  05A7  0022               	movlb	2	; select bank2
 13668  05A8  1CE2               	btfss	_flags^(0+256),1
 13669  05A9  2E1F               	goto	l7051
 13670  05AA                     l7033:	
 13671                           
 13672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13673  05AA  30FF               	movlw	255
 13674  05AB  0020               	movlb	0	; select bank0
 13675  05AC  07D8               	addwf	dtoa@i,f
 13676  05AD  30FF               	movlw	255
 13677  05AE  3DD9               	addwfc	dtoa@i+1,f
 13678                           
 13679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13680  05AF  300A               	movlw	10
 13681  05B0  00A0               	movwf	___aomod@divisor
 13682  05B1  01A1               	clrf	___aomod@divisor+1
 13683  05B2  01A2               	clrf	___aomod@divisor+2
 13684  05B3  01A3               	clrf	___aomod@divisor+3
 13685  05B4  01A4               	clrf	___aomod@divisor+4
 13686  05B5  01A5               	clrf	___aomod@divisor+5
 13687  05B6  01A6               	clrf	___aomod@divisor+6
 13688  05B7  01A7               	clrf	___aomod@divisor+7
 13689  05B8  0850               	movf	dtoa@n,w
 13690  05B9  00A8               	movwf	___aomod@dividend
 13691  05BA  0851               	movf	dtoa@n+1,w
 13692  05BB  00A9               	movwf	___aomod@dividend+1
 13693  05BC  0852               	movf	dtoa@n+2,w
 13694  05BD  00AA               	movwf	___aomod@dividend+2
 13695  05BE  0853               	movf	dtoa@n+3,w
 13696  05BF  00AB               	movwf	___aomod@dividend+3
 13697  05C0  0854               	movf	dtoa@n+4,w
 13698  05C1  00AC               	movwf	___aomod@dividend+4
 13699  05C2  0855               	movf	dtoa@n+5,w
 13700  05C3  00AD               	movwf	___aomod@dividend+5
 13701  05C4  0856               	movf	dtoa@n+6,w
 13702  05C5  00AE               	movwf	___aomod@dividend+6
 13703  05C6  0857               	movf	dtoa@n+7,w
 13704  05C7  00AF               	movwf	___aomod@dividend+7
 13705  05C8  318C  242D  3185   	fcall	___aomod
 13706  05CB  0020               	movlb	0	; select bank0
 13707  05CC  0821               	movf	?___aomod+1,w
 13708  05CD  00B4               	movwf	abs@a+1
 13709  05CE  0820               	movf	?___aomod,w
 13710  05CF  00B3               	movwf	abs@a
 13711  05D0  3193  2351  3185   	fcall	_abs
 13712  05D3  0020               	movlb	0	; select bank0
 13713  05D4  0833               	movf	?_abs,w
 13714  05D5  3E30               	addlw	48
 13715  05D6  00C4               	movwf	??_dtoa
 13716  05D7  0858               	movf	dtoa@i,w
 13717  05D8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13718  05D9  0086               	movwf	6
 13719  05DA  3002               	movlw	2	; select bank5/6
 13720  05DB  0087               	movwf	7
 13721  05DC  0844               	movf	??_dtoa,w
 13722  05DD  0081               	movwf	1
 13723                           
 13724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13725  05DE  30FF               	movlw	255
 13726  05DF  07CA               	addwf	dtoa@p,f
 13727  05E0  30FF               	movlw	255
 13728  05E1  3DCB               	addwfc	dtoa@p+1,f
 13729                           
 13730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13731  05E2  30FF               	movlw	255
 13732  05E3  07CC               	addwf	dtoa@w,f
 13733  05E4  30FF               	movlw	255
 13734  05E5  3DCD               	addwfc	dtoa@w+1,f
 13735                           
 13736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13737  05E6  300A               	movlw	10
 13738  05E7  00A0               	movwf	___aodiv@divisor
 13739  05E8  01A1               	clrf	___aodiv@divisor+1
 13740  05E9  01A2               	clrf	___aodiv@divisor+2
 13741  05EA  01A3               	clrf	___aodiv@divisor+3
 13742  05EB  01A4               	clrf	___aodiv@divisor+4
 13743  05EC  01A5               	clrf	___aodiv@divisor+5
 13744  05ED  01A6               	clrf	___aodiv@divisor+6
 13745  05EE  01A7               	clrf	___aodiv@divisor+7
 13746  05EF  0850               	movf	dtoa@n,w
 13747  05F0  00A8               	movwf	___aodiv@dividend
 13748  05F1  0851               	movf	dtoa@n+1,w
 13749  05F2  00A9               	movwf	___aodiv@dividend+1
 13750  05F3  0852               	movf	dtoa@n+2,w
 13751  05F4  00AA               	movwf	___aodiv@dividend+2
 13752  05F5  0853               	movf	dtoa@n+3,w
 13753  05F6  00AB               	movwf	___aodiv@dividend+3
 13754  05F7  0854               	movf	dtoa@n+4,w
 13755  05F8  00AC               	movwf	___aodiv@dividend+4
 13756  05F9  0855               	movf	dtoa@n+5,w
 13757  05FA  00AD               	movwf	___aodiv@dividend+5
 13758  05FB  0856               	movf	dtoa@n+6,w
 13759  05FC  00AE               	movwf	___aodiv@dividend+6
 13760  05FD  0857               	movf	dtoa@n+7,w
 13761  05FE  00AF               	movwf	___aodiv@dividend+7
 13762  05FF  318D  25FF  3185   	fcall	___aodiv
 13763  0602  0020               	movlb	0	; select bank0
 13764  0603  0820               	movf	?___aodiv,w
 13765  0604  00D0               	movwf	dtoa@n
 13766  0605  0821               	movf	?___aodiv+1,w
 13767  0606  00D1               	movwf	dtoa@n+1
 13768  0607  0822               	movf	?___aodiv+2,w
 13769  0608  00D2               	movwf	dtoa@n+2
 13770  0609  0823               	movf	?___aodiv+3,w
 13771  060A  00D3               	movwf	dtoa@n+3
 13772  060B  0824               	movf	?___aodiv+4,w
 13773  060C  00D4               	movwf	dtoa@n+4
 13774  060D  0825               	movf	?___aodiv+5,w
 13775  060E  00D5               	movwf	dtoa@n+5
 13776  060F  0826               	movf	?___aodiv+6,w
 13777  0610  00D6               	movwf	dtoa@n+6
 13778  0611  0827               	movf	?___aodiv+7,w
 13779  0612  00D7               	movwf	dtoa@n+7
 13780  0613                     l1658:	
 13781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13782                           
 13783                           
 13784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13785  0613  0020               	movlb	0	; select bank0
 13786  0614  0859               	movf	dtoa@i+1,w
 13787  0615  3A80               	xorlw	128
 13788  0616  00C4               	movwf	??_dtoa
 13789  0617  3080               	movlw	128
 13790  0618  0244               	subwf	??_dtoa,w
 13791  0619  1D03               	skipz
 13792  061A  2E1D               	goto	u6435
 13793  061B  3001               	movlw	1
 13794  061C  0258               	subwf	dtoa@i,w
 13795  061D                     u6435:	
 13796  061D  1803               	btfsc	3,0
 13797  061E  2D85               	goto	l7043
 13798  061F                     l7051:	
 13799                           
 13800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13801  061F  0020               	movlb	0	; select bank0
 13802  0620  084E               	movf	dtoa@s,w
 13803  0621  044F               	iorwf	dtoa@s+1,w
 13804  0622  1D03               	btfss	3,2
 13805  0623  2E27               	goto	l7055
 13806  0624  0022               	movlb	2	; select bank2
 13807  0625  1D62               	btfss	_flags^(0+256),2
 13808  0626  2E3F               	goto	l7065
 13809  0627                     l7055:	
 13810                           
 13811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13812  0627  30FF               	movlw	255
 13813  0628  0020               	movlb	0	; select bank0
 13814  0629  07D8               	addwf	dtoa@i,f
 13815  062A  30FF               	movlw	255
 13816  062B  3DD9               	addwfc	dtoa@i+1,f
 13817                           
 13818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13819  062C  084E               	movf	dtoa@s,w
 13820  062D  044F               	iorwf	dtoa@s+1,w
 13821  062E  1D03               	btfss	3,2
 13822  062F  2E32               	goto	l7061
 13823  0630  302B               	movlw	43
 13824  0631  2E33               	goto	L9
 13825  0632                     l7061:	
 13826  0632  302D               	movlw	45
 13827  0633                     L9:	
 13828  0633  00C8               	movwf	_dtoa$2131
 13829  0634  3000               	movlw	0
 13830  0635  00C9               	movwf	_dtoa$2131+1
 13831  0636  0848               	movf	_dtoa$2131,w
 13832  0637  00C4               	movwf	??_dtoa
 13833  0638  0858               	movf	dtoa@i,w
 13834  0639  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13835  063A  0086               	movwf	6
 13836  063B  3002               	movlw	2	; select bank5/6
 13837  063C  0087               	movwf	7
 13838  063D  0844               	movf	??_dtoa,w
 13839  063E  0081               	movwf	1
 13840  063F                     l7065:	
 13841                           
 13842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13843  063F  0020               	movlb	0	; select bank0
 13844  0640  0858               	movf	dtoa@i,w
 13845  0641  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13846  0642  00C4               	movwf	??_dtoa
 13847  0643  0844               	movf	??_dtoa,w
 13848  0644  00B3               	movwf	pad@buf
 13849  0645  084D               	movf	dtoa@w+1,w
 13850  0646  00B5               	movwf	pad@p+1
 13851  0647  084C               	movf	dtoa@w,w
 13852  0648  00B4               	movwf	pad@p
 13853  0649  0847               	movf	dtoa@fp,w
 13854  064A  318A  224B         	fcall	_pad
 13855  064C  0020               	movlb	0	; select bank0
 13856  064D  0834               	movf	?_pad+1,w
 13857  064E  00BD               	movwf	?_dtoa+1
 13858  064F  0833               	movf	?_pad,w
 13859  0650  00BC               	movwf	?_dtoa
 13860  0651  0008               	return
 13861  0652                     __end_of_dtoa:	
 13862                           
 13863                           	psect	text54
 13864  0A4B                     __ptext54:	
 13865 ;; *************** function _pad *****************
 13866 ;; Defined at:
 13867 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;  fp              1    wreg     PTR struct _IO_FILE
 13870 ;;		 -> sprintf@f(5), 
 13871 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 13872 ;;		 -> dbuf(32), 
 13873 ;;  p               2   20[BANK0 ] int 
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 13876 ;;		 -> sprintf@f(5), 
 13877 ;;  w               2   25[BANK0 ] int 
 13878 ;;  i               2   23[BANK0 ] int 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  2   19[BANK0 ] int 
 13881 ;; Registers used:
 13882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13888 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;Total ram usage:        9 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    9
 13895 ;; This function calls:
 13896 ;;		_fputc
 13897 ;;		_fputs
 13898 ;;		_strlen
 13899 ;; This function is called by:
 13900 ;;		_dtoa
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           
 13905                           ;psect for function _pad
 13906  0A4B                     _pad:	
 13907                           
 13908                           ;incstack = 0
 13909                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13910                           ;pad@fp stored from wreg
 13911  0A4B  0020               	movlb	0	; select bank0
 13912  0A4C  00BB               	movwf	pad@fp
 13913                           
 13914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13915  0A4D  0022               	movlb	2	; select bank2
 13916  0A4E  1C62               	btfss	_flags^(0+256),0
 13917  0A4F  2A59               	goto	l6907
 13918                           
 13919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13920  0A50  0020               	movlb	0	; select bank0
 13921  0A51  083B               	movf	pad@fp,w
 13922  0A52  00B6               	movwf	??_pad
 13923  0A53  0836               	movf	??_pad,w
 13924  0A54  00AB               	movwf	fputs@fp
 13925  0A55  0833               	movf	pad@buf,w
 13926  0A56  3194  249F  318A   	fcall	_fputs
 13927  0A59                     l6907:	
 13928                           
 13929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13930  0A59  0020               	movlb	0	; select bank0
 13931  0A5A  1BB5               	btfsc	pad@p+1,7
 13932  0A5B  2A61               	goto	l6911
 13933  0A5C  0835               	movf	pad@p+1,w
 13934  0A5D  00BA               	movwf	pad@w+1
 13935  0A5E  0834               	movf	pad@p,w
 13936  0A5F  00B9               	movwf	pad@w
 13937  0A60  2A63               	goto	l1641
 13938  0A61                     l6911:	
 13939  0A61  01B9               	clrf	pad@w
 13940  0A62  01BA               	clrf	pad@w+1
 13941  0A63                     l1641:	
 13942                           
 13943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13944  0A63  01B7               	clrf	pad@i
 13945  0A64  01B8               	clrf	pad@i+1
 13946  0A65                     l6917:	
 13947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13948                           
 13949                           
 13950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13951  0A65  0838               	movf	pad@i+1,w
 13952  0A66  3A80               	xorlw	128
 13953  0A67  00B6               	movwf	??_pad
 13954  0A68  083A               	movf	pad@w+1,w
 13955  0A69  3A80               	xorlw	128
 13956  0A6A  0236               	subwf	??_pad,w
 13957  0A6B  1D03               	skipz
 13958  0A6C  2A6F               	goto	u6115
 13959  0A6D  0839               	movf	pad@w,w
 13960  0A6E  0237               	subwf	pad@i,w
 13961  0A6F                     u6115:	
 13962  0A6F  1803               	btfsc	3,0
 13963  0A70  2A83               	goto	l1644
 13964                           
 13965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13966  0A71  3020               	movlw	32
 13967  0A72  0020               	movlb	0	; select bank0
 13968  0A73  00A3               	movwf	fputc@c
 13969  0A74  3000               	movlw	0
 13970  0A75  00A4               	movwf	fputc@c+1
 13971  0A76  083B               	movf	pad@fp,w
 13972  0A77  00B6               	movwf	??_pad
 13973  0A78  0836               	movf	??_pad,w
 13974  0A79  00A5               	movwf	fputc@fp
 13975  0A7A  3197  270D  318A   	fcall	_fputc
 13976                           
 13977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13978  0A7D  3001               	movlw	1
 13979  0A7E  0020               	movlb	0	; select bank0
 13980  0A7F  07B7               	addwf	pad@i,f
 13981  0A80  3000               	movlw	0
 13982  0A81  3DB8               	addwfc	pad@i+1,f
 13983  0A82  2A65               	goto	l6917
 13984  0A83                     l1644:	
 13985                           
 13986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13987  0A83  0022               	movlb	2	; select bank2
 13988  0A84  1862               	btfsc	_flags^(0+256),0
 13989  0A85  2A8F               	goto	l6921
 13990                           
 13991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13992  0A86  0020               	movlb	0	; select bank0
 13993  0A87  083B               	movf	pad@fp,w
 13994  0A88  00B6               	movwf	??_pad
 13995  0A89  0836               	movf	??_pad,w
 13996  0A8A  00AB               	movwf	fputs@fp
 13997  0A8B  0833               	movf	pad@buf,w
 13998  0A8C  3194  249F  318A   	fcall	_fputs
 13999  0A8F                     l6921:	
 14000                           
 14001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14002  0A8F  0020               	movlb	0	; select bank0
 14003  0A90  0833               	movf	pad@buf,w
 14004  0A91  00A0               	movwf	strlen@s
 14005  0A92  3002               	movlw	2
 14006  0A93  00A1               	movwf	strlen@s+1
 14007  0A94  3193  2321         	fcall	_strlen
 14008  0A96  0020               	movlb	0	; select bank0
 14009  0A97  0839               	movf	pad@w,w
 14010  0A98  0720               	addwf	?_strlen,w
 14011  0A99  00B3               	movwf	?_pad
 14012  0A9A  083A               	movf	pad@w+1,w
 14013  0A9B  3D21               	addwfc	?_strlen+1,w
 14014  0A9C  00B4               	movwf	?_pad+1
 14015  0A9D  0008               	return
 14016  0A9E                     __end_of_pad:	
 14017                           
 14018                           	psect	text55
 14019  149F                     __ptext55:	
 14020 ;; *************** function _fputs *****************
 14021 ;; Defined at:
 14022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  s               1    wreg     PTR const unsigned char 
 14025 ;;		 -> dbuf(32), 
 14026 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 14027 ;;		 -> sprintf@f(5), 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 14030 ;;		 -> dbuf(32), 
 14031 ;;  i               2   16[BANK0 ] int 
 14032 ;;  c               1   15[BANK0 ] unsigned char 
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  2   11[BANK0 ] int 
 14035 ;; Registers used:
 14036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14042 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14043 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14044 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14045 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14046 ;;Total ram usage:        8 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    8
 14049 ;; This function calls:
 14050 ;;		_fputc
 14051 ;; This function is called by:
 14052 ;;		_pad
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           
 14057                           ;psect for function _fputs
 14058  149F                     _fputs:	
 14059                           
 14060                           ;incstack = 0
 14061                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14062                           ;fputs@s stored from wreg
 14063  149F  0020               	movlb	0	; select bank0
 14064  14A0  00B2               	movwf	fputs@s
 14065  14A1  01B0               	clrf	fputs@i
 14066  14A2  01B1               	clrf	fputs@i+1
 14067  14A3                     l6879:	
 14068  14A3  0830               	movf	fputs@i,w
 14069  14A4  0732               	addwf	fputs@s,w
 14070  14A5  00AC               	movwf	??_fputs
 14071  14A6  082C               	movf	??_fputs,w
 14072  14A7  0086               	movwf	6
 14073  14A8  3002               	movlw	2	; select bank4/5
 14074  14A9  0087               	movwf	7
 14075  14AA  0801               	movf	1,w
 14076  14AB  00AD               	movwf	??_fputs+1
 14077  14AC  082D               	movf	??_fputs+1,w
 14078  14AD  00AF               	movwf	fputs@c
 14079  14AE  082F               	movf	fputs@c,w
 14080  14AF  1903               	btfsc	3,2
 14081  14B0  0008               	return
 14082  14B1  082F               	movf	fputs@c,w
 14083  14B2  00AC               	movwf	??_fputs
 14084  14B3  01AD               	clrf	??_fputs+1
 14085  14B4  082C               	movf	??_fputs,w
 14086  14B5  00A3               	movwf	fputc@c
 14087  14B6  082D               	movf	??_fputs+1,w
 14088  14B7  00A4               	movwf	fputc@c+1
 14089  14B8  082B               	movf	fputs@fp,w
 14090  14B9  00AE               	movwf	??_fputs+2
 14091  14BA  082E               	movf	??_fputs+2,w
 14092  14BB  00A5               	movwf	fputc@fp
 14093  14BC  3197  270D  3194   	fcall	_fputc
 14094  14BF  3001               	movlw	1
 14095  14C0  0020               	movlb	0	; select bank0
 14096  14C1  07B0               	addwf	fputs@i,f
 14097  14C2  3000               	movlw	0
 14098  14C3  3DB1               	addwfc	fputs@i+1,f
 14099  14C4  2CA3               	goto	l6879
 14100  14C5                     __end_of_fputs:	
 14101                           
 14102                           	psect	text56
 14103  170D                     __ptext56:	
 14104 ;; *************** function _fputc *****************
 14105 ;; Defined at:
 14106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  c               2    3[BANK0 ] int 
 14109 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 14110 ;;		 -> sprintf@f(5), 
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  2    3[BANK0 ] int 
 14115 ;; Registers used:
 14116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;Total ram usage:        8 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:    7
 14129 ;; This function calls:
 14130 ;;		_putch
 14131 ;; This function is called by:
 14132 ;;		_pad
 14133 ;;		_vfpfcnvrt
 14134 ;;		_fputs
 14135 ;; This function uses a non-reentrant model
 14136 ;;
 14137                           
 14138                           
 14139                           ;psect for function _fputc
 14140  170D                     _fputc:	
 14141                           
 14142                           ;incstack = 0
 14143                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14144  170D  0020               	movlb	0	; select bank0
 14145  170E  0825               	movf	fputc@fp,w
 14146  170F  1D03               	btfss	3,2
 14147  1710  0825               	movf	fputc@fp,w
 14148  1711  1D03               	btfss	3,2
 14149  1712  2F17               	goto	l6835
 14150  1713  0823               	movf	fputc@c,w
 14151  1714  3191  216B         	fcall	_putch
 14152  1716  0008               	return
 14153  1717                     l6835:	
 14154  1717  0825               	movf	fputc@fp,w
 14155  1718  3E03               	addlw	3
 14156  1719  0086               	movwf	6
 14157  171A  0187               	clrf	7
 14158  171B  0016               	moviw fsr1++
 14159  171C  0401               	iorwf	1,w
 14160  171D  1903               	btfsc	3,2
 14161  171E  2F3A               	goto	l6839
 14162  171F  0825               	movf	fputc@fp,w
 14163  1720  3E03               	addlw	3
 14164  1721  0086               	movwf	6
 14165  1722  0187               	clrf	7
 14166  1723  3F40               	moviw [0]fsr1
 14167  1724  00A6               	movwf	??_fputc
 14168  1725  3F41               	moviw [1]fsr1
 14169  1726  00A7               	movwf	??_fputc+1
 14170  1727  0A25               	incf	fputc@fp,w
 14171  1728  0086               	movwf	6
 14172  1729  0187               	clrf	7
 14173  172A  3F40               	moviw [0]fsr1
 14174  172B  00A8               	movwf	??_fputc+2
 14175  172C  3F41               	moviw [1]fsr1
 14176  172D  00A9               	movwf	??_fputc+3
 14177  172E  0829               	movf	??_fputc+3,w
 14178  172F  3A80               	xorlw	128
 14179  1730  00AA               	movwf	??_fputc+4
 14180  1731  0827               	movf	??_fputc+1,w
 14181  1732  3A80               	xorlw	128
 14182  1733  022A               	subwf	??_fputc+4,w
 14183  1734  1D03               	skipz
 14184  1735  2F38               	goto	u6035
 14185  1736  0826               	movf	??_fputc,w
 14186  1737  0228               	subwf	??_fputc+2,w
 14187  1738                     u6035:	
 14188  1738  1803               	skipnc
 14189  1739  0008               	return
 14190  173A                     l6839:	
 14191  173A  0020               	movlb	0	; select bank0
 14192  173B  0A25               	incf	fputc@fp,w
 14193  173C  0086               	movwf	6
 14194  173D  0187               	clrf	7
 14195  173E  3001               	movlw	1
 14196  173F  0781               	addwf	1,f
 14197  1740  3141               	addfsr 1,1
 14198  1741  1803               	skipnc
 14199  1742  0A81               	incf	1,f
 14200  1743  0008               	return
 14201  1744                     __end_of_fputc:	
 14202                           
 14203                           	psect	text57
 14204  116B                     __ptext57:	
 14205 ;; *************** function _putch *****************
 14206 ;; Defined at:
 14207 ;;		line 200 in file "mcc_generated_files/eusart.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  txData          1    wreg     unsigned char 
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  txData          1    2[BANK0 ] unsigned char 
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      void 
 14214 ;; Registers used:
 14215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14225 ;;Total ram usage:        1 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    6
 14228 ;; This function calls:
 14229 ;;		_EUSART_Write
 14230 ;; This function is called by:
 14231 ;;		_fputc
 14232 ;; This function uses a non-reentrant model
 14233 ;;
 14234                           
 14235                           
 14236                           ;psect for function _putch
 14237  116B                     _putch:	
 14238                           
 14239                           ;incstack = 0
 14240                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14241                           ;putch@txData stored from wreg
 14242  116B  0020               	movlb	0	; select bank0
 14243  116C  00A2               	movwf	putch@txData
 14244                           
 14245                           ;mcc_generated_files/eusart.c: 200: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 201: {;mcc_generated_files/eusart.c: 202:     EUSART_Write(txData);
 14246  116D  0822               	movf	putch@txData,w
 14247  116E  3195  25E0         	fcall	_EUSART_Write
 14248  1170  0008               	return
 14249  1171                     __end_of_putch:	
 14250                           
 14251                           	psect	text58
 14252  15E0                     __ptext58:	
 14253 ;; *************** function _EUSART_Write *****************
 14254 ;; Defined at:
 14255 ;;		line 171 in file "mcc_generated_files/eusart.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;  txData          1    wreg     unsigned char 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  txData          1    1[BANK0 ] unsigned char 
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  1    wreg      void 
 14262 ;; Registers used:
 14263 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;Total ram usage:        2 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    5
 14276 ;; This function calls:
 14277 ;;		Nothing
 14278 ;; This function is called by:
 14279 ;;		_putch
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           
 14284                           ;psect for function _EUSART_Write
 14285  15E0                     _EUSART_Write:	
 14286                           
 14287                           ;incstack = 0
 14288                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14289                           ;EUSART_Write@txData stored from wreg
 14290  15E0  0020               	movlb	0	; select bank0
 14291  15E1  00A1               	movwf	EUSART_Write@txData
 14292  15E2                     l6811:	
 14293                           ;mcc_generated_files/eusart.c: 171: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 172: {;mcc_generated_files/eusart.c: 173:     while(0 == eusartTxBufferRemai
      +                          ning)
 14294                           
 14295                           
 14296                           ;mcc_generated_files/eusart.c: 173:     while(0 == eusartTxBufferRemaining)
 14297  15E2  0023               	movlb	3	; select bank3
 14298  15E3  086F               	movf	_eusartTxBufferRemaining^(0+384),w	;volatile
 14299  15E4  1D03               	btfss	3,2
 14300  15E5  2DE8               	goto	l1415
 14301  15E6  0064               	clrwdt	;# 
 14302  15E7  2DE2               	goto	l6811
 14303  15E8                     l1415:	
 14304                           
 14305                           ;mcc_generated_files/eusart.c: 178:     if(0 == PIE1bits.TXIE)
 14306  15E8  0021               	movlb	1	; select bank1
 14307  15E9  1A11               	btfsc	17,4	;volatile
 14308  15EA  2DF0               	goto	l1416
 14309                           
 14310                           ;mcc_generated_files/eusart.c: 179:     {;mcc_generated_files/eusart.c: 180:         TX1
      +                          REG = txData;
 14311  15EB  0020               	movlb	0	; select bank0
 14312  15EC  0821               	movf	EUSART_Write@txData,w
 14313  15ED  0023               	movlb	3	; select bank3
 14314  15EE  009A               	movwf	26	;volatile
 14315                           
 14316                           ;mcc_generated_files/eusart.c: 181:     }
 14317  15EF  2E09               	goto	l6825
 14318  15F0                     l1416:	
 14319                           ;mcc_generated_files/eusart.c: 182:     else
 14320                           
 14321                           
 14322                           ;mcc_generated_files/eusart.c: 183:     {;mcc_generated_files/eusart.c: 184:         PIE
      +                          1bits.TXIE = 0;
 14323  15F0  1211               	bcf	17,4	;volatile
 14324                           
 14325                           ;mcc_generated_files/eusart.c: 185:         eusartTxBuffer[eusartTxHead++] = txData;
 14326  15F1  0020               	movlb	0	; select bank0
 14327  15F2  0821               	movf	EUSART_Write@txData,w
 14328  15F3  00A0               	movwf	??_EUSART_Write
 14329  15F4  0021               	movlb	1	; select bank1
 14330  15F5  086D               	movf	_eusartTxHead^(0+128),w
 14331  15F6  3ECD               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14332  15F7  0086               	movwf	6
 14333  15F8  3001               	movlw	1	; select bank3/4
 14334  15F9  0087               	movwf	7
 14335  15FA  0020               	movlb	0	; select bank0
 14336  15FB  0820               	movf	??_EUSART_Write,w
 14337  15FC  0081               	movwf	1
 14338  15FD  3001               	movlw	1
 14339  15FE  00A0               	movwf	??_EUSART_Write
 14340  15FF  0820               	movf	??_EUSART_Write,w
 14341  1600  0021               	movlb	1	; select bank1
 14342  1601  07ED               	addwf	_eusartTxHead^(0+128),f	;volatile
 14343                           
 14344                           ;mcc_generated_files/eusart.c: 186:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 14345  1602  3008               	movlw	8
 14346  1603  026D               	subwf	_eusartTxHead^(0+128),w	;volatile
 14347  1604  1803               	btfsc	3,0
 14348                           
 14349                           ;mcc_generated_files/eusart.c: 187:         {;mcc_generated_files/eusart.c: 188:        
      +                               eusartTxHead = 0;
 14350  1605  01ED               	clrf	_eusartTxHead^(0+128)	;volatile
 14351                           
 14352                           ;mcc_generated_files/eusart.c: 190:         eusartTxBufferRemaining--;
 14353  1606  3001               	movlw	1
 14354  1607  0023               	movlb	3	; select bank3
 14355  1608  02EF               	subwf	_eusartTxBufferRemaining^(0+384),f	;volatile
 14356  1609                     l6825:	
 14357                           
 14358                           ;mcc_generated_files/eusart.c: 192:     PIE1bits.TXIE = 1;
 14359  1609  0021               	movlb	1	; select bank1
 14360  160A  1611               	bsf	17,4	;volatile
 14361  160B  0008               	return
 14362  160C                     __end_of_EUSART_Write:	
 14363                           
 14364                           	psect	text59
 14365  1351                     __ptext59:	
 14366 ;; *************** function _abs *****************
 14367 ;; Defined at:
 14368 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  a               2   19[BANK0 ] int 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;		None
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  2   19[BANK0 ] int 
 14375 ;; Registers used:
 14376 ;;		wreg, status,2, status,0
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;Total ram usage:        4 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; Hardware stack levels required when called:    5
 14389 ;; This function calls:
 14390 ;;		Nothing
 14391 ;; This function is called by:
 14392 ;;		_dtoa
 14393 ;; This function uses a non-reentrant model
 14394 ;;
 14395                           
 14396                           
 14397                           ;psect for function _abs
 14398  1351                     _abs:	
 14399                           
 14400                           ;incstack = 0
 14401                           ; Regs used in _abs: [wreg+status,2+status,0]
 14402  1351  0020               	movlb	0	; select bank0
 14403  1352  0834               	movf	abs@a+1,w
 14404  1353  3A80               	xorlw	128
 14405  1354  00B5               	movwf	??_abs
 14406  1355  3080               	movlw	128
 14407  1356  0235               	subwf	??_abs,w
 14408  1357  1D03               	skipz
 14409  1358  2B5B               	goto	u6135
 14410  1359  3001               	movlw	1
 14411  135A  0233               	subwf	abs@a,w
 14412  135B                     u6135:	
 14413  135B  1803               	skipnc
 14414  135C  0008               	return
 14415  135D  0020               	movlb	0	; select bank0
 14416  135E  0933               	comf	abs@a,w
 14417  135F  00B5               	movwf	??_abs
 14418  1360  0934               	comf	abs@a+1,w
 14419  1361  00B6               	movwf	??_abs+1
 14420  1362  0AB5               	incf	??_abs,f
 14421  1363  1903               	skipnz
 14422  1364  0AB6               	incf	??_abs+1,f
 14423  1365  0835               	movf	??_abs,w
 14424  1366  00B3               	movwf	?_abs
 14425  1367  0836               	movf	??_abs+1,w
 14426  1368  00B4               	movwf	?_abs+1
 14427  1369  0008               	return
 14428  136A                     __end_of_abs:	
 14429                           
 14430                           	psect	text60
 14431  0C2D                     __ptext60:	
 14432 ;; *************** function ___aomod *****************
 14433 ;; Defined at:
 14434 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;  divisor         8    0[BANK0 ] long long 
 14437 ;;  dividend        8    8[BANK0 ] long long 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  sign            1   18[BANK0 ] unsigned char 
 14440 ;;  counter         1   17[BANK0 ] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  8    0[BANK0 ] long long 
 14443 ;; Registers used:
 14444 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14450 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;Total ram usage:       19 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:    5
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_dtoa
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           
 14465                           ;psect for function ___aomod
 14466  0C2D                     ___aomod:	
 14467                           
 14468                           ;incstack = 0
 14469                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 14470  0C2D  0020               	movlb	0	; select bank0
 14471  0C2E  01B2               	clrf	___aomod@sign
 14472  0C2F  3028               	movlw	low ___aomod@dividend
 14473  0C30  0086               	movwf	6
 14474  0C31  3000               	movlw	high ___aomod@dividend
 14475  0C32  0087               	movwf	7
 14476  0C33  3F47               	moviw [7]fsr1
 14477  0C34  00B0               	movwf	??___aomod
 14478  0C35  1FB0               	btfss	??___aomod,7
 14479  0C36  2C59               	goto	l6973
 14480  0C37  0020               	movlb	0	; select bank0
 14481  0C38  09A8               	comf	___aomod@dividend,f
 14482  0C39  09A9               	comf	___aomod@dividend+1,f
 14483  0C3A  09AA               	comf	___aomod@dividend+2,f
 14484  0C3B  09AB               	comf	___aomod@dividend+3,f
 14485  0C3C  09AC               	comf	___aomod@dividend+4,f
 14486  0C3D  09AD               	comf	___aomod@dividend+5,f
 14487  0C3E  09AE               	comf	___aomod@dividend+6,f
 14488  0C3F  09AF               	comf	___aomod@dividend+7,f
 14489  0C40  0AA8               	incf	___aomod@dividend,f
 14490  0C41  1D03               	skipz
 14491  0C42  2C56               	goto	u626lld
 14492  0C43  0AA9               	incf	___aomod@dividend+1,f
 14493  0C44  1D03               	skipz
 14494  0C45  2C56               	goto	u626lld
 14495  0C46  0AAA               	incf	___aomod@dividend+2,f
 14496  0C47  1D03               	skipz
 14497  0C48  2C56               	goto	u626lld
 14498  0C49  0AAB               	incf	___aomod@dividend+3,f
 14499  0C4A  1D03               	skipz
 14500  0C4B  2C56               	goto	u626lld
 14501  0C4C  0AAC               	incf	___aomod@dividend+4,f
 14502  0C4D  1D03               	skipz
 14503  0C4E  2C56               	goto	u626lld
 14504  0C4F  0AAD               	incf	___aomod@dividend+5,f
 14505  0C50  1D03               	skipz
 14506  0C51  2C56               	goto	u626lld
 14507  0C52  0AAE               	incf	___aomod@dividend+6,f
 14508  0C53  1D03               	skipz
 14509  0C54  2C56               	goto	u626lld
 14510  0C55  0AAF               	incf	___aomod@dividend+7,f
 14511  0C56                     u626lld:	
 14512  0C56  0020               	movlb	0	; select bank0
 14513  0C57  01B2               	clrf	___aomod@sign
 14514  0C58  0AB2               	incf	___aomod@sign,f
 14515  0C59                     l6973:	
 14516  0C59  3020               	movlw	low ___aomod@divisor
 14517  0C5A  0086               	movwf	6
 14518  0C5B  3000               	movlw	high ___aomod@divisor
 14519  0C5C  0087               	movwf	7
 14520  0C5D  3F47               	moviw [7]fsr1
 14521  0C5E  0020               	movlb	0	; select bank0
 14522  0C5F  00B0               	movwf	??___aomod
 14523  0C60  1FB0               	btfss	??___aomod,7
 14524  0C61  2C81               	goto	l6977
 14525  0C62  0020               	movlb	0	; select bank0
 14526  0C63  09A0               	comf	___aomod@divisor,f
 14527  0C64  09A1               	comf	___aomod@divisor+1,f
 14528  0C65  09A2               	comf	___aomod@divisor+2,f
 14529  0C66  09A3               	comf	___aomod@divisor+3,f
 14530  0C67  09A4               	comf	___aomod@divisor+4,f
 14531  0C68  09A5               	comf	___aomod@divisor+5,f
 14532  0C69  09A6               	comf	___aomod@divisor+6,f
 14533  0C6A  09A7               	comf	___aomod@divisor+7,f
 14534  0C6B  0AA0               	incf	___aomod@divisor,f
 14535  0C6C  1D03               	skipz
 14536  0C6D  2C81               	goto	l6977
 14537  0C6E  0AA1               	incf	___aomod@divisor+1,f
 14538  0C6F  1D03               	skipz
 14539  0C70  2C81               	goto	l6977
 14540  0C71  0AA2               	incf	___aomod@divisor+2,f
 14541  0C72  1D03               	skipz
 14542  0C73  2C81               	goto	l6977
 14543  0C74  0AA3               	incf	___aomod@divisor+3,f
 14544  0C75  1D03               	skipz
 14545  0C76  2C81               	goto	l6977
 14546  0C77  0AA4               	incf	___aomod@divisor+4,f
 14547  0C78  1D03               	skipz
 14548  0C79  2C81               	goto	l6977
 14549  0C7A  0AA5               	incf	___aomod@divisor+5,f
 14550  0C7B  1D03               	skipz
 14551  0C7C  2C81               	goto	l6977
 14552  0C7D  0AA6               	incf	___aomod@divisor+6,f
 14553  0C7E  1D03               	skipz
 14554  0C7F  2C81               	goto	l6977
 14555  0C80  0AA7               	incf	___aomod@divisor+7,f
 14556  0C81                     l6977:	
 14557  0C81  0020               	movlb	0	; select bank0
 14558  0C82  0820               	movf	___aomod@divisor,w
 14559  0C83  0421               	iorwf	___aomod@divisor+1,w
 14560  0C84  0422               	iorwf	___aomod@divisor+2,w
 14561  0C85  0423               	iorwf	___aomod@divisor+3,w
 14562  0C86  0424               	iorwf	___aomod@divisor+4,w
 14563  0C87  0425               	iorwf	___aomod@divisor+5,w
 14564  0C88  0426               	iorwf	___aomod@divisor+6,w
 14565  0C89  0427               	iorwf	___aomod@divisor+7,w
 14566  0C8A  1903               	skipnz
 14567  0C8B  2CD9               	goto	l6993
 14568  0C8C  01B1               	clrf	___aomod@counter
 14569  0C8D  0AB1               	incf	___aomod@counter,f
 14570  0C8E                     l6985:	
 14571  0C8E  1BA7               	btfsc	___aomod@divisor+7,7
 14572  0C8F  2C9D               	goto	l6987
 14573  0C90  35A0               	lslf	___aomod@divisor,f
 14574  0C91  0DA1               	rlf	___aomod@divisor+1,f
 14575  0C92  0DA2               	rlf	___aomod@divisor+2,f
 14576  0C93  0DA3               	rlf	___aomod@divisor+3,f
 14577  0C94  0DA4               	rlf	___aomod@divisor+4,f
 14578  0C95  0DA5               	rlf	___aomod@divisor+5,f
 14579  0C96  0DA6               	rlf	___aomod@divisor+6,f
 14580  0C97  0DA7               	rlf	___aomod@divisor+7,f
 14581  0C98  3001               	movlw	1
 14582  0C99  00B0               	movwf	??___aomod
 14583  0C9A  0830               	movf	??___aomod,w
 14584  0C9B  07B1               	addwf	___aomod@counter,f
 14585  0C9C  2C8E               	goto	l6985
 14586  0C9D                     l6987:	
 14587  0C9D  0827               	movf	___aomod@divisor+7,w
 14588  0C9E  022F               	subwf	___aomod@dividend+7,w
 14589  0C9F  1D03               	skipz
 14590  0CA0  2CBB               	goto	u6315
 14591  0CA1  0826               	movf	___aomod@divisor+6,w
 14592  0CA2  022E               	subwf	___aomod@dividend+6,w
 14593  0CA3  1D03               	skipz
 14594  0CA4  2CBB               	goto	u6315
 14595  0CA5  0825               	movf	___aomod@divisor+5,w
 14596  0CA6  022D               	subwf	___aomod@dividend+5,w
 14597  0CA7  1D03               	skipz
 14598  0CA8  2CBB               	goto	u6315
 14599  0CA9  0824               	movf	___aomod@divisor+4,w
 14600  0CAA  022C               	subwf	___aomod@dividend+4,w
 14601  0CAB  1D03               	skipz
 14602  0CAC  2CBB               	goto	u6315
 14603  0CAD  0823               	movf	___aomod@divisor+3,w
 14604  0CAE  022B               	subwf	___aomod@dividend+3,w
 14605  0CAF  1D03               	skipz
 14606  0CB0  2CBB               	goto	u6315
 14607  0CB1  0822               	movf	___aomod@divisor+2,w
 14608  0CB2  022A               	subwf	___aomod@dividend+2,w
 14609  0CB3  1D03               	skipz
 14610  0CB4  2CBB               	goto	u6315
 14611  0CB5  0821               	movf	___aomod@divisor+1,w
 14612  0CB6  0229               	subwf	___aomod@dividend+1,w
 14613  0CB7  1D03               	skipz
 14614  0CB8  2CBB               	goto	u6315
 14615  0CB9  0820               	movf	___aomod@divisor,w
 14616  0CBA  0228               	subwf	___aomod@dividend,w
 14617  0CBB                     u6315:	
 14618  0CBB  1C03               	skipc
 14619  0CBC  2CCD               	goto	l6991
 14620  0CBD  0820               	movf	___aomod@divisor,w
 14621  0CBE  02A8               	subwf	___aomod@dividend,f
 14622  0CBF  0821               	movf	___aomod@divisor+1,w
 14623  0CC0  3BA9               	subwfb	___aomod@dividend+1,f
 14624  0CC1  0822               	movf	___aomod@divisor+2,w
 14625  0CC2  3BAA               	subwfb	___aomod@dividend+2,f
 14626  0CC3  0823               	movf	___aomod@divisor+3,w
 14627  0CC4  3BAB               	subwfb	___aomod@dividend+3,f
 14628  0CC5  0824               	movf	___aomod@divisor+4,w
 14629  0CC6  3BAC               	subwfb	___aomod@dividend+4,f
 14630  0CC7  0825               	movf	___aomod@divisor+5,w
 14631  0CC8  3BAD               	subwfb	___aomod@dividend+5,f
 14632  0CC9  0826               	movf	___aomod@divisor+6,w
 14633  0CCA  3BAE               	subwfb	___aomod@dividend+6,f
 14634  0CCB  0827               	movf	___aomod@divisor+7,w
 14635  0CCC  3BAF               	subwfb	___aomod@dividend+7,f
 14636  0CCD                     l6991:	
 14637  0CCD  36A7               	lsrf	___aomod@divisor+7,f
 14638  0CCE  0CA6               	rrf	___aomod@divisor+6,f
 14639  0CCF  0CA5               	rrf	___aomod@divisor+5,f
 14640  0CD0  0CA4               	rrf	___aomod@divisor+4,f
 14641  0CD1  0CA3               	rrf	___aomod@divisor+3,f
 14642  0CD2  0CA2               	rrf	___aomod@divisor+2,f
 14643  0CD3  0CA1               	rrf	___aomod@divisor+1,f
 14644  0CD4  0CA0               	rrf	___aomod@divisor,f
 14645  0CD5  3001               	movlw	1
 14646  0CD6  02B1               	subwf	___aomod@counter,f
 14647  0CD7  1D03               	btfss	3,2
 14648  0CD8  2C9D               	goto	l6987
 14649  0CD9                     l6993:	
 14650  0CD9  0832               	movf	___aomod@sign,w
 14651  0CDA  1903               	btfsc	3,2
 14652  0CDB  2CFA               	goto	l1803
 14653  0CDC  09A8               	comf	___aomod@dividend,f
 14654  0CDD  09A9               	comf	___aomod@dividend+1,f
 14655  0CDE  09AA               	comf	___aomod@dividend+2,f
 14656  0CDF  09AB               	comf	___aomod@dividend+3,f
 14657  0CE0  09AC               	comf	___aomod@dividend+4,f
 14658  0CE1  09AD               	comf	___aomod@dividend+5,f
 14659  0CE2  09AE               	comf	___aomod@dividend+6,f
 14660  0CE3  09AF               	comf	___aomod@dividend+7,f
 14661  0CE4  0AA8               	incf	___aomod@dividend,f
 14662  0CE5  1D03               	skipz
 14663  0CE6  2CFA               	goto	l1803
 14664  0CE7  0AA9               	incf	___aomod@dividend+1,f
 14665  0CE8  1D03               	skipz
 14666  0CE9  2CFA               	goto	l1803
 14667  0CEA  0AAA               	incf	___aomod@dividend+2,f
 14668  0CEB  1D03               	skipz
 14669  0CEC  2CFA               	goto	l1803
 14670  0CED  0AAB               	incf	___aomod@dividend+3,f
 14671  0CEE  1D03               	skipz
 14672  0CEF  2CFA               	goto	l1803
 14673  0CF0  0AAC               	incf	___aomod@dividend+4,f
 14674  0CF1  1D03               	skipz
 14675  0CF2  2CFA               	goto	l1803
 14676  0CF3  0AAD               	incf	___aomod@dividend+5,f
 14677  0CF4  1D03               	skipz
 14678  0CF5  2CFA               	goto	l1803
 14679  0CF6  0AAE               	incf	___aomod@dividend+6,f
 14680  0CF7  1D03               	skipz
 14681  0CF8  2CFA               	goto	l1803
 14682  0CF9  0AAF               	incf	___aomod@dividend+7,f
 14683  0CFA                     l1803:	
 14684  0CFA  0020               	movlb	0	; select bank0
 14685  0CFB  0828               	movf	___aomod@dividend,w
 14686  0CFC  00A0               	movwf	?___aomod
 14687  0CFD  0829               	movf	___aomod@dividend+1,w
 14688  0CFE  00A1               	movwf	?___aomod+1
 14689  0CFF  082A               	movf	___aomod@dividend+2,w
 14690  0D00  00A2               	movwf	?___aomod+2
 14691  0D01  082B               	movf	___aomod@dividend+3,w
 14692  0D02  00A3               	movwf	?___aomod+3
 14693  0D03  082C               	movf	___aomod@dividend+4,w
 14694  0D04  00A4               	movwf	?___aomod+4
 14695  0D05  082D               	movf	___aomod@dividend+5,w
 14696  0D06  00A5               	movwf	?___aomod+5
 14697  0D07  082E               	movf	___aomod@dividend+6,w
 14698  0D08  00A6               	movwf	?___aomod+6
 14699  0D09  082F               	movf	___aomod@dividend+7,w
 14700  0D0A  00A7               	movwf	?___aomod+7
 14701  0D0B  0008               	return
 14702  0D0C                     __end_of___aomod:	
 14703                           
 14704                           	psect	text61
 14705  0DFF                     __ptext61:	
 14706 ;; *************** function ___aodiv *****************
 14707 ;; Defined at:
 14708 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  divisor         8    0[BANK0 ] long long 
 14711 ;;  dividend        8    8[BANK0 ] long long 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;  quotient        8   19[BANK0 ] long long 
 14714 ;;  sign            1   18[BANK0 ] unsigned char 
 14715 ;;  counter         1   17[BANK0 ] unsigned char 
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  8    0[BANK0 ] long long 
 14718 ;; Registers used:
 14719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14725 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;Total ram usage:       27 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:    5
 14732 ;; This function calls:
 14733 ;;		Nothing
 14734 ;; This function is called by:
 14735 ;;		_dtoa
 14736 ;; This function uses a non-reentrant model
 14737 ;;
 14738                           
 14739                           
 14740                           ;psect for function ___aodiv
 14741  0DFF                     ___aodiv:	
 14742                           
 14743                           ;incstack = 0
 14744                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 14745  0DFF  0020               	movlb	0	; select bank0
 14746  0E00  01B2               	clrf	___aodiv@sign
 14747  0E01  3020               	movlw	low ___aodiv@divisor
 14748  0E02  0086               	movwf	6
 14749  0E03  3000               	movlw	high ___aodiv@divisor
 14750  0E04  0087               	movwf	7
 14751  0E05  3F47               	moviw [7]fsr1
 14752  0E06  00B0               	movwf	??___aodiv
 14753  0E07  1FB0               	btfss	??___aodiv,7
 14754  0E08  2E2B               	goto	l6935
 14755  0E09  0020               	movlb	0	; select bank0
 14756  0E0A  09A0               	comf	___aodiv@divisor,f
 14757  0E0B  09A1               	comf	___aodiv@divisor+1,f
 14758  0E0C  09A2               	comf	___aodiv@divisor+2,f
 14759  0E0D  09A3               	comf	___aodiv@divisor+3,f
 14760  0E0E  09A4               	comf	___aodiv@divisor+4,f
 14761  0E0F  09A5               	comf	___aodiv@divisor+5,f
 14762  0E10  09A6               	comf	___aodiv@divisor+6,f
 14763  0E11  09A7               	comf	___aodiv@divisor+7,f
 14764  0E12  0AA0               	incf	___aodiv@divisor,f
 14765  0E13  1D03               	skipz
 14766  0E14  2E28               	goto	u615lld
 14767  0E15  0AA1               	incf	___aodiv@divisor+1,f
 14768  0E16  1D03               	skipz
 14769  0E17  2E28               	goto	u615lld
 14770  0E18  0AA2               	incf	___aodiv@divisor+2,f
 14771  0E19  1D03               	skipz
 14772  0E1A  2E28               	goto	u615lld
 14773  0E1B  0AA3               	incf	___aodiv@divisor+3,f
 14774  0E1C  1D03               	skipz
 14775  0E1D  2E28               	goto	u615lld
 14776  0E1E  0AA4               	incf	___aodiv@divisor+4,f
 14777  0E1F  1D03               	skipz
 14778  0E20  2E28               	goto	u615lld
 14779  0E21  0AA5               	incf	___aodiv@divisor+5,f
 14780  0E22  1D03               	skipz
 14781  0E23  2E28               	goto	u615lld
 14782  0E24  0AA6               	incf	___aodiv@divisor+6,f
 14783  0E25  1D03               	skipz
 14784  0E26  2E28               	goto	u615lld
 14785  0E27  0AA7               	incf	___aodiv@divisor+7,f
 14786  0E28                     u615lld:	
 14787  0E28  0020               	movlb	0	; select bank0
 14788  0E29  01B2               	clrf	___aodiv@sign
 14789  0E2A  0AB2               	incf	___aodiv@sign,f
 14790  0E2B                     l6935:	
 14791  0E2B  3028               	movlw	low ___aodiv@dividend
 14792  0E2C  0086               	movwf	6
 14793  0E2D  3000               	movlw	high ___aodiv@dividend
 14794  0E2E  0087               	movwf	7
 14795  0E2F  3F47               	moviw [7]fsr1
 14796  0E30  0020               	movlb	0	; select bank0
 14797  0E31  00B0               	movwf	??___aodiv
 14798  0E32  1FB0               	btfss	??___aodiv,7
 14799  0E33  2E58               	goto	l6941
 14800  0E34  0020               	movlb	0	; select bank0
 14801  0E35  09A8               	comf	___aodiv@dividend,f
 14802  0E36  09A9               	comf	___aodiv@dividend+1,f
 14803  0E37  09AA               	comf	___aodiv@dividend+2,f
 14804  0E38  09AB               	comf	___aodiv@dividend+3,f
 14805  0E39  09AC               	comf	___aodiv@dividend+4,f
 14806  0E3A  09AD               	comf	___aodiv@dividend+5,f
 14807  0E3B  09AE               	comf	___aodiv@dividend+6,f
 14808  0E3C  09AF               	comf	___aodiv@dividend+7,f
 14809  0E3D  0AA8               	incf	___aodiv@dividend,f
 14810  0E3E  1D03               	skipz
 14811  0E3F  2E53               	goto	l6939
 14812  0E40  0AA9               	incf	___aodiv@dividend+1,f
 14813  0E41  1D03               	skipz
 14814  0E42  2E53               	goto	l6939
 14815  0E43  0AAA               	incf	___aodiv@dividend+2,f
 14816  0E44  1D03               	skipz
 14817  0E45  2E53               	goto	l6939
 14818  0E46  0AAB               	incf	___aodiv@dividend+3,f
 14819  0E47  1D03               	skipz
 14820  0E48  2E53               	goto	l6939
 14821  0E49  0AAC               	incf	___aodiv@dividend+4,f
 14822  0E4A  1D03               	skipz
 14823  0E4B  2E53               	goto	l6939
 14824  0E4C  0AAD               	incf	___aodiv@dividend+5,f
 14825  0E4D  1D03               	skipz
 14826  0E4E  2E53               	goto	l6939
 14827  0E4F  0AAE               	incf	___aodiv@dividend+6,f
 14828  0E50  1D03               	skipz
 14829  0E51  2E53               	goto	l6939
 14830  0E52  0AAF               	incf	___aodiv@dividend+7,f
 14831  0E53                     l6939:	
 14832  0E53  3001               	movlw	1
 14833  0E54  0020               	movlb	0	; select bank0
 14834  0E55  00B0               	movwf	??___aodiv
 14835  0E56  0830               	movf	??___aodiv,w
 14836  0E57  06B2               	xorwf	___aodiv@sign,f
 14837  0E58                     l6941:	
 14838  0E58  3033               	movlw	low ___aodiv@quotient
 14839  0E59  0086               	movwf	6
 14840  0E5A  3000               	movlw	high ___aodiv@quotient
 14841  0E5B  0087               	movwf	7
 14842  0E5C  3008               	movlw	8
 14843  0E5D  0020               	movlb	0	; select bank0
 14844  0E5E  00B0               	movwf	??___aodiv
 14845  0E5F  3000               	movlw	0
 14846  0E60                     u6180:	
 14847  0E60  001E               	movwi fsr1++
 14848  0E61  0BB0               	decfsz	??___aodiv,f
 14849  0E62  2E60               	goto	u6180
 14850  0E63  0820               	movf	___aodiv@divisor,w
 14851  0E64  0421               	iorwf	___aodiv@divisor+1,w
 14852  0E65  0422               	iorwf	___aodiv@divisor+2,w
 14853  0E66  0423               	iorwf	___aodiv@divisor+3,w
 14854  0E67  0424               	iorwf	___aodiv@divisor+4,w
 14855  0E68  0425               	iorwf	___aodiv@divisor+5,w
 14856  0E69  0426               	iorwf	___aodiv@divisor+6,w
 14857  0E6A  0427               	iorwf	___aodiv@divisor+7,w
 14858  0E6B  1903               	skipnz
 14859  0E6C  2EC3               	goto	l6963
 14860  0E6D  01B1               	clrf	___aodiv@counter
 14861  0E6E  0AB1               	incf	___aodiv@counter,f
 14862  0E6F                     l6951:	
 14863  0E6F  1BA7               	btfsc	___aodiv@divisor+7,7
 14864  0E70  2E7E               	goto	l6953
 14865  0E71  35A0               	lslf	___aodiv@divisor,f
 14866  0E72  0DA1               	rlf	___aodiv@divisor+1,f
 14867  0E73  0DA2               	rlf	___aodiv@divisor+2,f
 14868  0E74  0DA3               	rlf	___aodiv@divisor+3,f
 14869  0E75  0DA4               	rlf	___aodiv@divisor+4,f
 14870  0E76  0DA5               	rlf	___aodiv@divisor+5,f
 14871  0E77  0DA6               	rlf	___aodiv@divisor+6,f
 14872  0E78  0DA7               	rlf	___aodiv@divisor+7,f
 14873  0E79  3001               	movlw	1
 14874  0E7A  00B0               	movwf	??___aodiv
 14875  0E7B  0830               	movf	??___aodiv,w
 14876  0E7C  07B1               	addwf	___aodiv@counter,f
 14877  0E7D  2E6F               	goto	l6951
 14878  0E7E                     l6953:	
 14879  0E7E  35B3               	lslf	___aodiv@quotient,f
 14880  0E7F  0DB4               	rlf	___aodiv@quotient+1,f
 14881  0E80  0DB5               	rlf	___aodiv@quotient+2,f
 14882  0E81  0DB6               	rlf	___aodiv@quotient+3,f
 14883  0E82  0DB7               	rlf	___aodiv@quotient+4,f
 14884  0E83  0DB8               	rlf	___aodiv@quotient+5,f
 14885  0E84  0DB9               	rlf	___aodiv@quotient+6,f
 14886  0E85  0DBA               	rlf	___aodiv@quotient+7,f
 14887  0E86  0827               	movf	___aodiv@divisor+7,w
 14888  0E87  022F               	subwf	___aodiv@dividend+7,w
 14889  0E88  1D03               	skipz
 14890  0E89  2EA4               	goto	u6215
 14891  0E8A  0826               	movf	___aodiv@divisor+6,w
 14892  0E8B  022E               	subwf	___aodiv@dividend+6,w
 14893  0E8C  1D03               	skipz
 14894  0E8D  2EA4               	goto	u6215
 14895  0E8E  0825               	movf	___aodiv@divisor+5,w
 14896  0E8F  022D               	subwf	___aodiv@dividend+5,w
 14897  0E90  1D03               	skipz
 14898  0E91  2EA4               	goto	u6215
 14899  0E92  0824               	movf	___aodiv@divisor+4,w
 14900  0E93  022C               	subwf	___aodiv@dividend+4,w
 14901  0E94  1D03               	skipz
 14902  0E95  2EA4               	goto	u6215
 14903  0E96  0823               	movf	___aodiv@divisor+3,w
 14904  0E97  022B               	subwf	___aodiv@dividend+3,w
 14905  0E98  1D03               	skipz
 14906  0E99  2EA4               	goto	u6215
 14907  0E9A  0822               	movf	___aodiv@divisor+2,w
 14908  0E9B  022A               	subwf	___aodiv@dividend+2,w
 14909  0E9C  1D03               	skipz
 14910  0E9D  2EA4               	goto	u6215
 14911  0E9E  0821               	movf	___aodiv@divisor+1,w
 14912  0E9F  0229               	subwf	___aodiv@dividend+1,w
 14913  0EA0  1D03               	skipz
 14914  0EA1  2EA4               	goto	u6215
 14915  0EA2  0820               	movf	___aodiv@divisor,w
 14916  0EA3  0228               	subwf	___aodiv@dividend,w
 14917  0EA4                     u6215:	
 14918  0EA4  1C03               	skipc
 14919  0EA5  2EB7               	goto	l6961
 14920  0EA6  0820               	movf	___aodiv@divisor,w
 14921  0EA7  02A8               	subwf	___aodiv@dividend,f
 14922  0EA8  0821               	movf	___aodiv@divisor+1,w
 14923  0EA9  3BA9               	subwfb	___aodiv@dividend+1,f
 14924  0EAA  0822               	movf	___aodiv@divisor+2,w
 14925  0EAB  3BAA               	subwfb	___aodiv@dividend+2,f
 14926  0EAC  0823               	movf	___aodiv@divisor+3,w
 14927  0EAD  3BAB               	subwfb	___aodiv@dividend+3,f
 14928  0EAE  0824               	movf	___aodiv@divisor+4,w
 14929  0EAF  3BAC               	subwfb	___aodiv@dividend+4,f
 14930  0EB0  0825               	movf	___aodiv@divisor+5,w
 14931  0EB1  3BAD               	subwfb	___aodiv@dividend+5,f
 14932  0EB2  0826               	movf	___aodiv@divisor+6,w
 14933  0EB3  3BAE               	subwfb	___aodiv@dividend+6,f
 14934  0EB4  0827               	movf	___aodiv@divisor+7,w
 14935  0EB5  3BAF               	subwfb	___aodiv@dividend+7,f
 14936  0EB6  1433               	bsf	___aodiv@quotient,0
 14937  0EB7                     l6961:	
 14938  0EB7  36A7               	lsrf	___aodiv@divisor+7,f
 14939  0EB8  0CA6               	rrf	___aodiv@divisor+6,f
 14940  0EB9  0CA5               	rrf	___aodiv@divisor+5,f
 14941  0EBA  0CA4               	rrf	___aodiv@divisor+4,f
 14942  0EBB  0CA3               	rrf	___aodiv@divisor+3,f
 14943  0EBC  0CA2               	rrf	___aodiv@divisor+2,f
 14944  0EBD  0CA1               	rrf	___aodiv@divisor+1,f
 14945  0EBE  0CA0               	rrf	___aodiv@divisor,f
 14946  0EBF  3001               	movlw	1
 14947  0EC0  02B1               	subwf	___aodiv@counter,f
 14948  0EC1  1D03               	btfss	3,2
 14949  0EC2  2E7E               	goto	l6953
 14950  0EC3                     l6963:	
 14951  0EC3  0832               	movf	___aodiv@sign,w
 14952  0EC4  1903               	btfsc	3,2
 14953  0EC5  2EE4               	goto	l1790
 14954  0EC6  09B3               	comf	___aodiv@quotient,f
 14955  0EC7  09B4               	comf	___aodiv@quotient+1,f
 14956  0EC8  09B5               	comf	___aodiv@quotient+2,f
 14957  0EC9  09B6               	comf	___aodiv@quotient+3,f
 14958  0ECA  09B7               	comf	___aodiv@quotient+4,f
 14959  0ECB  09B8               	comf	___aodiv@quotient+5,f
 14960  0ECC  09B9               	comf	___aodiv@quotient+6,f
 14961  0ECD  09BA               	comf	___aodiv@quotient+7,f
 14962  0ECE  0AB3               	incf	___aodiv@quotient,f
 14963  0ECF  1D03               	skipz
 14964  0ED0  2EE4               	goto	l1790
 14965  0ED1  0AB4               	incf	___aodiv@quotient+1,f
 14966  0ED2  1D03               	skipz
 14967  0ED3  2EE4               	goto	l1790
 14968  0ED4  0AB5               	incf	___aodiv@quotient+2,f
 14969  0ED5  1D03               	skipz
 14970  0ED6  2EE4               	goto	l1790
 14971  0ED7  0AB6               	incf	___aodiv@quotient+3,f
 14972  0ED8  1D03               	skipz
 14973  0ED9  2EE4               	goto	l1790
 14974  0EDA  0AB7               	incf	___aodiv@quotient+4,f
 14975  0EDB  1D03               	skipz
 14976  0EDC  2EE4               	goto	l1790
 14977  0EDD  0AB8               	incf	___aodiv@quotient+5,f
 14978  0EDE  1D03               	skipz
 14979  0EDF  2EE4               	goto	l1790
 14980  0EE0  0AB9               	incf	___aodiv@quotient+6,f
 14981  0EE1  1D03               	skipz
 14982  0EE2  2EE4               	goto	l1790
 14983  0EE3  0ABA               	incf	___aodiv@quotient+7,f
 14984  0EE4                     l1790:	
 14985  0EE4  0020               	movlb	0	; select bank0
 14986  0EE5  0833               	movf	___aodiv@quotient,w
 14987  0EE6  00A0               	movwf	?___aodiv
 14988  0EE7  0834               	movf	___aodiv@quotient+1,w
 14989  0EE8  00A1               	movwf	?___aodiv+1
 14990  0EE9  0835               	movf	___aodiv@quotient+2,w
 14991  0EEA  00A2               	movwf	?___aodiv+2
 14992  0EEB  0836               	movf	___aodiv@quotient+3,w
 14993  0EEC  00A3               	movwf	?___aodiv+3
 14994  0EED  0837               	movf	___aodiv@quotient+4,w
 14995  0EEE  00A4               	movwf	?___aodiv+4
 14996  0EEF  0838               	movf	___aodiv@quotient+5,w
 14997  0EF0  00A5               	movwf	?___aodiv+5
 14998  0EF1  0839               	movf	___aodiv@quotient+6,w
 14999  0EF2  00A6               	movwf	?___aodiv+6
 15000  0EF3  083A               	movf	___aodiv@quotient+7,w
 15001  0EF4  00A7               	movwf	?___aodiv+7
 15002  0EF5  0008               	return
 15003  0EF6                     __end_of___aodiv:	
 15004                           
 15005                           	psect	text62
 15006  136A                     __ptext62:	
 15007 ;; *************** function _SYSTEM_Initialize *****************
 15008 ;; Defined at:
 15009 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;		None
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;		None
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		wreg, status,2, status,0, pclath, cstack
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15009 ;;Total ram usage:        0 bytes
 15010 ;; Hardware stack levels used:    1
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_do_I2C_DO_NACK_STOP
 15015 ;;		_do_I2C_DO_NACK_RESTART
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           
 15020                           ;psect for function i1_i2c1_driver_sendNACK
 15021  08B1                     i1_i2c1_driver_sendNACK:	
 15022                           
 15023                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 15024                           
 15025                           ;incstack = 0
 15026                           ; Regs used in i1_i2c1_driver_sendNACK: []
 15027  08B1  0024               	movlb	4	; select bank4
 15028  08B2  1696               	bsf	22,5	;volatile
 15029                           
 15030                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 15031  08B3  1616               	bsf	22,4	;volatile
 15032  08B4  0008               	return
 15033  08B5                     __end_ofi1_i2c1_driver_sendNACK:	
 15034                           
 15035                           	psect	text92
 15036  0875                     __ptext92:	
 15037 ;; *************** function _i2c1_driver_resetBus *****************
 15038 ;; Defined at:
 15039 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;		None
 15042 ;; Auto vars:     Size  Location     Type
 15043 ;;		None
 15044 ;; Return value:  Size  Location     Type
 15045 ;;                  1    wreg      void 
 15046 ;; Registers used:
 15047 ;;		None
 15048 ;; Tracked objects:
 15049 ;;		On entry : 0/0
 15050 ;;		On exit  : 0/0
 15051 ;;		Unchanged: 0/0
 15052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 15027 ;;Total ram usage:        0 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:    7
 15030 ;; This function calls:
 15031 ;;		_ADC_Initialize
 15032 ;;		_EUSART_Initialize
 15033 ;;		_OSCILLATOR_Initialize
 15034 ;;		_PIN_MANAGER_Initialize
 15035 ;;		_PMD_Initialize
 15036 ;;		_PWM1_Initialize
 15037 ;;		_SPI2_Initialize
 15038 ;;		_TMR2_Initialize
 15039 ;;		_WDT_Initialize
 15040 ;; This function is called by:
 15041 ;;		_main
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045                           
 15046                           ;psect for function _SYSTEM_Initialize
 15047  136A                     _SYSTEM_Initialize:	
 15048                           
 15049                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 15050                           
 15051                           ;incstack = 0
 15052                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15053  136A  3191  21BF  3193   	fcall	_PMD_Initialize
 15054                           
 15055                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 15056  136D  3197  2744  3193   	fcall	_PIN_MANAGER_Initialize
 15057                           
 15058                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 15059  1370  3191  21B7  3193   	fcall	_OSCILLATOR_Initialize
 15060                           
 15061                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 15062  1373  3191  2153  3193   	fcall	_WDT_Initialize
 15063                           
 15064                           ;mcc_generated_files/mcc.c: 57:     SPI2_Initialize();
 15065  1376  3191  2191  3193   	fcall	_SPI2_Initialize
 15066                           
 15067                           ;mcc_generated_files/mcc.c: 58:     PWM1_Initialize();
 15068  1379  3192  222E  3193   	fcall	_PWM1_Initialize
 15069                           
 15070                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 15071  137C  3191  21AF  3193   	fcall	_ADC_Initialize
 15072                           
 15073                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 15074  137F  3191  21C7  3193   	fcall	_TMR2_Initialize
 15075                           
 15076                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
 15077  1382  3188  202A         	fcall	_EUSART_Initialize
 15078  1384  0008               	return
 15079  1385                     __end_of_SYSTEM_Initialize:	
 15080                           
 15081                           	psect	text63
 15082  1153                     __ptext63:	
 15083 ;; *************** function _WDT_Initialize *****************
 15084 ;; Defined at:
 15085 ;;		line 78 in file "mcc_generated_files/mcc.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      void 
 15092 ;; Registers used:
 15093 ;;		wreg
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15057 ;;Total ram usage:        0 bytes
 15058 ;; Hardware stack levels used:    1
 15059 ;; This function calls:
 15060 ;;		Nothing
 15061 ;; This function is called by:
 15062 ;;		_do_I2C_RESET
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           
 15067                           ;psect for function _i2c1_driver_resetBus
 15068  0875                     _i2c1_driver_resetBus:	
 15069                           
 15070                           ;incstack = 0
 15071                           ; Regs used in _i2c1_driver_resetBus: []
 15072  0875  0008               	return
 15073  0876                     __end_of_i2c1_driver_resetBus:	
 15074                           
 15075                           	psect	text93
 15076  0880                     __ptext93:	
 15077 ;; *************** function i1_i2c1_driver_startRX *****************
 15078 ;; Defined at:
 15079 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;		None
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;		None
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  1    wreg      void 
 15086 ;; Registers used:
 15087 ;;		None
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:    5
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_SYSTEM_Initialize
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           
 15114                           ;psect for function _WDT_Initialize
 15115  1153                     _WDT_Initialize:	
 15116                           
 15117                           ;mcc_generated_files/mcc.c: 81:     WDTCON = 0x18;
 15118                           
 15119                           ;incstack = 0
 15120                           ; Regs used in _WDT_Initialize: [wreg]
 15121  1153  3018               	movlw	24
 15122  1154  0021               	movlb	1	; select bank1
 15123  1155  0097               	movwf	23	;volatile
 15124  1156  0008               	return
 15125  1157                     __end_of_WDT_Initialize:	
 15126                           
 15127                           	psect	text64
 15128  11C7                     __ptext64:	
 15129 ;; *************** function _TMR2_Initialize *****************
 15130 ;; Defined at:
 15131 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;		None
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;		None
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  1    wreg      void 
 15138 ;; Registers used:
 15139 ;;		wreg, status,2
 15140 ;; Tracked objects:
 15141 ;;		On entry : 0/0
 15142 ;;		On exit  : 0/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15097 ;;Total ram usage:        0 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; This function calls:
 15100 ;;		Nothing
 15101 ;; This function is called by:
 15102 ;;		_do_I2C_RCEN
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           
 15107                           ;psect for function i1_i2c1_driver_startRX
 15108  0880                     i1_i2c1_driver_startRX:	
 15109                           
 15110                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 15111                           
 15112                           ;incstack = 0
 15113                           ; Regs used in i1_i2c1_driver_startRX: []
 15114  0880  0024               	movlb	4	; select bank4
 15115  0881  1596               	bsf	22,3	;volatile
 15116  0882  0008               	return
 15117  0883                     __end_ofi1_i2c1_driver_startRX:	
 15118                           
 15119                           	psect	text94
 15120  0002                     __ptext94:	
 15121 ;; *************** function _returnReset *****************
 15122 ;; Defined at:
 15123 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;  p               1    0[COMMON] PTR void 
 15126 ;;		 -> NULL(0), 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1    wreg      enum E6966
 15131 ;; Registers used:
 15132 ;;		wreg
 15133 ;; Tracked objects:
 15134 ;;		On entry : 0/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15138 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;Total ram usage:        1 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; This function calls:
 15145 ;;		Nothing
 15146 ;; This function is called by:
 15147 ;;		_i2c_open
 15148 ;;		_do_I2C_DO_ADDRESS_NACK
 15149 ;;		_do_I2C_TX
 15150 ;;		_do_I2C_RX
 15151 ;;		_do_I2C_TX_EMPTY
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155                           
 15156                           ;psect for function _returnReset
 15157  0002                     _returnReset:	
 15158                           
 15159                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 15160                           
 15161                           ;incstack = 0
 15162                           ; Regs used in _returnReset: [wreg]
 15163  0002  3005               	movlw	5
 15164  0003  0008               	return
 15165  0004                     __end_of_returnReset:	
 15166                           
 15167                           	psect	text95
 15168  0878                     __ptext95:	
 15169 ;; *************** function _returnStop *****************
 15170 ;; Defined at:
 15171 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;  p               1    0[COMMON] PTR void 
 15174 ;;		 -> NULL(0), 
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      enum E6966
 15179 ;; Registers used:
 15180 ;;		wreg
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 15149 ;;Total ram usage:        0 bytes
 15150 ;; Hardware stack levels used:    1
 15151 ;; Hardware stack levels required when called:    5
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_SYSTEM_Initialize
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           
 15160                           ;psect for function _TMR2_Initialize
 15161  11C7                     _TMR2_Initialize:	
 15162                           
 15163                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
 15164                           
 15165                           ;incstack = 0
 15166                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 15167  11C7  30FF               	movlw	255
 15168  11C8  0020               	movlb	0	; select bank0
 15169  11C9  009E               	movwf	30	;volatile
 15170                           
 15171                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 15172  11CA  019D               	clrf	29	;volatile
 15173                           
 15174                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 15175  11CB  1091               	bcf	17,1	;volatile
 15176                           
 15177                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
 15178  11CC  3004               	movlw	4
 15179  11CD  009F               	movwf	31	;volatile
 15180  11CE  0008               	return
 15181  11CF                     __end_of_TMR2_Initialize:	
 15182                           
 15183                           	psect	text65
 15184  1191                     __ptext65:	
 15185 ;; *************** function _SPI2_Initialize *****************
 15186 ;; Defined at:
 15187 ;;		line 65 in file "mcc_generated_files/spi2.c"
 15188 ;; Parameters:    Size  Location     Type
 15189 ;;		None
 15190 ;; Auto vars:     Size  Location     Type
 15191 ;;		None
 15192 ;; Return value:  Size  Location     Type
 15193 ;;                  1    wreg      void 
 15194 ;; Registers used:
 15195 ;;		wreg, status,2
 15196 ;; Tracked objects:
 15197 ;;		On entry : 0/0
 15198 ;;		On exit  : 0/0
 15199 ;;		Unchanged: 0/0
 15200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
=======
 15201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 15203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
=======
 15204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15190 ;;Total ram usage:        1 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; This function calls:
 15193 ;;		Nothing
 15194 ;; This function is called by:
 15195 ;;		_i2c_open
 15196 ;;		_setCallBack
 15197 ;;		_do_I2C_DO_ADDRESS_NACK
 15198 ;;		_do_I2C_TX
 15199 ;;		_do_I2C_RX
 15200 ;;		_do_I2C_TX_EMPTY
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           
 15205                           ;psect for function _returnStop
 15206  0878                     _returnStop:	
 15207                           
 15208                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
=======
 15205 ;;Total ram usage:        0 bytes
 15206 ;; Hardware stack levels used:    1
 15207 ;; Hardware stack levels required when called:    5
 15208 ;; This function calls:
 15209 ;;		Nothing
 15210 ;; This function is called by:
 15211 ;;		_SYSTEM_Initialize
 15212 ;; This function uses a non-reentrant model
 15213 ;;
 15214                           
 15215                           
 15216                           ;psect for function _SPI2_Initialize
 15217  1191                     _SPI2_Initialize:	
 15218                           
 15219                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x80;
 15220                           
 15221                           ;incstack = 0
 15222                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 15223  1191  3080               	movlw	128
 15224  1192  0024               	movlb	4	; select bank4
 15225  1193  009C               	movwf	28	;volatile
 15226                           
 15227                           ;mcc_generated_files/spi2.c: 73:     SSP2CON1 = 0x31;
 15228  1194  3031               	movlw	49
 15229  1195  009D               	movwf	29	;volatile
 15230                           
 15231                           ;mcc_generated_files/spi2.c: 76:     SSP2ADD = 0x00;
 15232  1196  019A               	clrf	26	;volatile
 15233  1197  0008               	return
 15234  1198                     __end_of_SPI2_Initialize:	
 15235                           
 15236                           	psect	text66
 15237  122E                     __ptext66:	
 15238 ;; *************** function _PWM1_Initialize *****************
 15239 ;; Defined at:
 15240 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;		None
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;		None
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  1    wreg      void 
 15247 ;; Registers used:
 15248 ;;		wreg, status,2, status,0
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;Total ram usage:        0 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:    5
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		_SYSTEM_Initialize
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           
 15269                           ;psect for function _PWM1_Initialize
 15270  122E                     _PWM1_Initialize:	
 15271                           
 15272                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
 15273                           
 15274                           ;incstack = 0
 15275                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 15276  122E  308F               	movlw	143
 15277  122F  0025               	movlb	5	; select bank5
 15278  1230  0093               	movwf	19	;volatile
 15279                           
 15280                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
 15281  1231  3001               	movlw	1
 15282  1232  0092               	movwf	18	;volatile
 15283                           
 15284                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
 15285  1233  30FF               	movlw	255
 15286  1234  0091               	movwf	17	;volatile
 15287                           
 15288                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
 15289  1235  081F               	movf	31,w	;volatile
 15290  1236  39FC               	andlw	-4
 15291  1237  3801               	iorlw	1
 15292  1238  009F               	movwf	31	;volatile
 15293  1239  0008               	return
 15294  123A                     __end_of_PWM1_Initialize:	
 15295                           
 15296                           	psect	text67
 15297  11BF                     __ptext67:	
 15298 ;; *************** function _PMD_Initialize *****************
 15299 ;; Defined at:
 15300 ;;		line 84 in file "mcc_generated_files/mcc.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		status,2
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;Total ram usage:        0 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; Hardware stack levels required when called:    5
 15321 ;; This function calls:
 15322 ;;		Nothing
 15323 ;; This function is called by:
 15324 ;;		_SYSTEM_Initialize
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           
 15329                           ;psect for function _PMD_Initialize
 15330  11BF                     _PMD_Initialize:	
 15331                           
 15332                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
 15333                           
 15334                           ;incstack = 0
 15335                           ; Regs used in _PMD_Initialize: [status,2]
 15336  11BF  0032               	movlb	18	; select bank18
 15337  11C0  0191               	clrf	17	;volatile
 15338                           
 15339                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
 15340  11C1  0192               	clrf	18	;volatile
 15341                           
 15342                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
 15343  11C2  0193               	clrf	19	;volatile
 15344                           
 15345                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
 15346  11C3  0194               	clrf	20	;volatile
 15347                           
 15348                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
 15349  11C4  0195               	clrf	21	;volatile
 15350                           
 15351                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
 15352  11C5  0196               	clrf	22	;volatile
 15353  11C6  0008               	return
 15354  11C7                     __end_of_PMD_Initialize:	
 15355                           
 15356                           	psect	text68
 15357  1744                     __ptext68:	
 15358 ;; *************** function _PIN_MANAGER_Initialize *****************
 15359 ;; Defined at:
 15360 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;		None
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;		None
 15365 ;; Return value:  Size  Location     Type
 15366 ;;                  1    wreg      void 
 15367 ;; Registers used:
 15368 ;;		wreg, status,2
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/0
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;Total ram usage:        0 bytes
 15379 ;; Hardware stack levels used:    1
 15380 ;; Hardware stack levels required when called:    5
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_SYSTEM_Initialize
 15385 ;; This function uses a non-reentrant model
 15386 ;;
 15387                           
 15388                           
 15389                           ;psect for function _PIN_MANAGER_Initialize
 15390  1744                     _PIN_MANAGER_Initialize:	
 15391                           
 15392                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 15393                           
 15394                           ;incstack = 0
 15395                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15396  1744  0022               	movlb	2	; select bank2
 15397  1745  018C               	clrf	12	;volatile
 15398                           
 15399                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 15400  1746  018D               	clrf	13	;volatile
 15401                           
 15402                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 15403  1747  018E               	clrf	14	;volatile
 15404                           
 15405                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x33;
 15406  1748  3033               	movlw	51
 15407  1749  0021               	movlb	1	; select bank1
 15408  174A  008C               	movwf	12	;volatile
 15409                           
 15410                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
 15411  174B  30B0               	movlw	176
 15412  174C  008D               	movwf	13	;volatile
 15413                           
 15414                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x99;
 15415  174D  3099               	movlw	153
 15416  174E  008E               	movwf	14	;volatile
 15417                           
 15418                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE4;
 15419  174F  30E4               	movlw	228
 15420  1750  0023               	movlb	3	; select bank3
 15421  1751  008E               	movwf	14	;volatile
 15422                           
 15423                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 15424  1752  018D               	clrf	13	;volatile
 15425                           
 15426                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x11;
 15427  1753  3011               	movlw	17
 15428  1754  008C               	movwf	12	;volatile
 15429                           
 15430                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 15431  1755  0024               	movlb	4	; select bank4
 15432  1756  018D               	clrf	13	;volatile
 15433                           
 15434                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 15435  1757  018C               	clrf	12	;volatile
 15436                           
 15437                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 15438  1758  018E               	clrf	14	;volatile
 15439                           
 15440                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 15441  1759  0025               	movlb	5	; select bank5
 15442  175A  018C               	clrf	12	;volatile
 15443                           
 15444                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 15445  175B  018D               	clrf	13	;volatile
 15446                           
 15447                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 15448  175C  018E               	clrf	14	;volatile
 15449                           
 15450                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 15451  175D  3037               	movlw	55
 15452  175E  0026               	movlb	6	; select bank6
 15453  175F  008C               	movwf	12	;volatile
 15454                           
 15455                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 15456  1760  30F0               	movlw	240
 15457  1761  008D               	movwf	13	;volatile
 15458                           
 15459                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 15460  1762  30FF               	movlw	255
 15461  1763  008E               	movwf	14	;volatile
 15462                           
 15463                           ;mcc_generated_files/pin_manager.c: 105:     PIE0bits.IOCIE = 1;
 15464  1764  0021               	movlb	1	; select bank1
 15465  1765  1610               	bsf	16,4	;volatile
 15466                           
 15467                           ;mcc_generated_files/pin_manager.c: 108:     RXPPS = 0x14;
 15468  1766  3014               	movlw	20
 15469  1767  003C               	movlb	28	; select bank28
 15470  1768  00A4               	movwf	36	;volatile
 15471                           
 15472                           ;mcc_generated_files/pin_manager.c: 109:     SSP2DATPPS = 0x0C;
 15473  1769  300C               	movlw	12
 15474  176A  009E               	movwf	30	;volatile
 15475                           
 15476                           ;mcc_generated_files/pin_manager.c: 110:     SSP1CLKPPS = 0x0F;
 15477  176B  300F               	movlw	15
 15478  176C  00A0               	movwf	32	;volatile
 15479                           
 15480                           ;mcc_generated_files/pin_manager.c: 111:     RB6PPS = 0x1A;
 15481  176D  301A               	movlw	26
 15482  176E  003D               	movlb	29	; select bank29
 15483  176F  009E               	movwf	30	;volatile
 15484                           
 15485                           ;mcc_generated_files/pin_manager.c: 112:     RB7PPS = 0x18;
 15486  1770  3018               	movlw	24
 15487  1771  009F               	movwf	31	;volatile
 15488                           
 15489                           ;mcc_generated_files/pin_manager.c: 113:     RB5PPS = 0x00;
 15490  1772  019D               	clrf	29	;volatile
 15491                           
 15492                           ;mcc_generated_files/pin_manager.c: 114:     RC2PPS = 0x1B;
 15493  1773  301B               	movlw	27
 15494  1774  00A2               	movwf	34	;volatile
 15495                           
 15496                           ;mcc_generated_files/pin_manager.c: 115:     RC5PPS = 0x14;
 15497  1775  3014               	movlw	20
 15498  1776  00A5               	movwf	37	;volatile
 15499                           
 15500                           ;mcc_generated_files/pin_manager.c: 116:     SSP1DATPPS = 0x0D;
 15501  1777  300D               	movlw	13
 15502  1778  003C               	movlb	28	; select bank28
 15503  1779  00A1               	movwf	33	;volatile
 15504                           
 15505                           ;mcc_generated_files/pin_manager.c: 117:     SSP2CLKPPS = 0x0E;
 15506  177A  300E               	movlw	14
 15507  177B  009D               	movwf	29	;volatile
 15508  177C  0008               	return
 15509  177D                     __end_of_PIN_MANAGER_Initialize:	
 15510                           
 15511                           	psect	text69
 15512  11B7                     __ptext69:	
 15513 ;; *************** function _OSCILLATOR_Initialize *****************
 15514 ;; Defined at:
 15515 ;;		line 64 in file "mcc_generated_files/mcc.c"
 15516 ;; Parameters:    Size  Location     Type
 15517 ;;		None
 15518 ;; Auto vars:     Size  Location     Type
 15519 ;;		None
 15520 ;; Return value:  Size  Location     Type
 15521 ;;                  1    wreg      void 
 15522 ;; Registers used:
 15523 ;;		wreg, status,2
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15533 ;;Total ram usage:        0 bytes
 15534 ;; Hardware stack levels used:    1
 15535 ;; Hardware stack levels required when called:    5
 15536 ;; This function calls:
 15537 ;;		Nothing
 15538 ;; This function is called by:
 15539 ;;		_SYSTEM_Initialize
 15540 ;; This function uses a non-reentrant model
 15541 ;;
 15542                           
 15543                           
 15544                           ;psect for function _OSCILLATOR_Initialize
 15545  11B7                     _OSCILLATOR_Initialize:	
 15546                           
 15547                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x61;
 15548                           
 15549                           ;incstack = 0
 15550                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15551  11B7  3061               	movlw	97
 15552  11B8  0032               	movlb	18	; select bank18
 15553  11B9  0099               	movwf	25	;volatile
 15554                           
 15555                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 15556  11BA  019B               	clrf	27	;volatile
 15557                           
 15558                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 15559  11BB  019D               	clrf	29	;volatile
 15560                           
 15561                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x00;
 15562  11BC  019F               	clrf	31	;volatile
 15563                           
 15564                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 15565  11BD  019E               	clrf	30	;volatile
 15566  11BE  0008               	return
 15567  11BF                     __end_of_OSCILLATOR_Initialize:	
 15568                           
 15569                           	psect	text70
 15570  082A                     __ptext70:	
 15571 ;; *************** function _EUSART_Initialize *****************
 15572 ;; Defined at:
 15573 ;;		line 85 in file "mcc_generated_files/eusart.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;		None
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;		None
 15578 ;; Return value:  Size  Location     Type
 15579 ;;                  1    wreg      void 
 15580 ;; Registers used:
 15581 ;;		wreg, status,2, status,0, pclath, cstack
 15582 ;; Tracked objects:
 15583 ;;		On entry : 0/0
 15584 ;;		On exit  : 0/0
 15585 ;;		Unchanged: 0/0
 15586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;Total ram usage:        1 bytes
 15592 ;; Hardware stack levels used:    1
 15593 ;; Hardware stack levels required when called:    6
 15594 ;; This function calls:
 15595 ;;		_EUSART_SetErrorHandler
 15596 ;;		_EUSART_SetFramingErrorHandler
 15597 ;;		_EUSART_SetOverrunErrorHandler
 15598 ;;		_EUSART_SetRxInterruptHandler
 15599 ;;		_EUSART_SetTxInterruptHandler
 15600 ;; This function is called by:
 15601 ;;		_SYSTEM_Initialize
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           
 15606                           ;psect for function _EUSART_Initialize
 15607  082A                     _EUSART_Initialize:	
 15608                           
 15609                           ;mcc_generated_files/eusart.c: 88:     PIE1bits.RCIE = 0;
 15610                           
 15611                           ;incstack = 0
 15612                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15613  082A  0021               	movlb	1	; select bank1
 15614  082B  1291               	bcf	17,5	;volatile
 15615                           
 15616                           ;mcc_generated_files/eusart.c: 89:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 15617  082C  30D7               	movlw	low _EUSART_Receive_ISR
 15618  082D  0020               	movlb	0	; select bank0
 15619  082E  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 15620  082F  3016               	movlw	high _EUSART_Receive_ISR
 15621  0830  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 15622  0831  3191  21F2  3188   	fcall	_EUSART_SetRxInterruptHandler
 15623                           
 15624                           ;mcc_generated_files/eusart.c: 90:     PIE1bits.TXIE = 0;
 15625  0834  0021               	movlb	1	; select bank1
 15626  0835  1211               	bcf	17,4	;volatile
 15627                           
 15628                           ;mcc_generated_files/eusart.c: 91:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 15629  0836  3014               	movlw	low _EUSART_Transmit_ISR
 15630  0837  0020               	movlb	0	; select bank0
 15631  0838  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 15632  0839  3014               	movlw	high _EUSART_Transmit_ISR
 15633  083A  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 15634  083B  3191  21FB  3188   	fcall	_EUSART_SetTxInterruptHandler
 15635                           
 15636                           ;mcc_generated_files/eusart.c: 95:     BAUD1CON = 0x0A;
 15637  083E  300A               	movlw	10
 15638  083F  0023               	movlb	3	; select bank3
 15639  0840  009F               	movwf	31	;volatile
 15640                           
 15641                           ;mcc_generated_files/eusart.c: 98:     RC1STA = 0x90;
 15642  0841  3090               	movlw	144
 15643  0842  009D               	movwf	29	;volatile
 15644                           
 15645                           ;mcc_generated_files/eusart.c: 101:     TX1STA = 0x24;
 15646  0843  3024               	movlw	36
 15647  0844  009E               	movwf	30	;volatile
 15648                           
 15649                           ;mcc_generated_files/eusart.c: 104:     SP1BRGL = 0x0C;
 15650  0845  300C               	movlw	12
 15651  0846  009B               	movwf	27	;volatile
 15652                           
 15653                           ;mcc_generated_files/eusart.c: 107:     SP1BRGH = 0x00;
 15654  0847  019C               	clrf	28	;volatile
 15655                           
 15656                           ;mcc_generated_files/eusart.c: 110:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 15657  0848  30E7               	movlw	low _EUSART_DefaultFramingErrorHandler
 15658  0849  0020               	movlb	0	; select bank0
 15659  084A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 15660  084B  3010               	movlw	high _EUSART_DefaultFramingErrorHandler
 15661  084C  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 15662  084D  3191  21E0  3188   	fcall	_EUSART_SetFramingErrorHandler
 15663                           
 15664                           ;mcc_generated_files/eusart.c: 111:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 15665  0850  3027               	movlw	low _EUSART_DefaultOverrunErrorHandler
 15666  0851  0020               	movlb	0	; select bank0
 15667  0852  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 15668  0853  3011               	movlw	high _EUSART_DefaultOverrunErrorHandler
 15669  0854  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 15670  0855  3191  21E9  3188   	fcall	_EUSART_SetOverrunErrorHandler
 15671                           
 15672                           ;mcc_generated_files/eusart.c: 112:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 15673  0858  30EE               	movlw	low _EUSART_DefaultErrorHandler
 15674  0859  0020               	movlb	0	; select bank0
 15675  085A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
 15676  085B  3010               	movlw	high _EUSART_DefaultErrorHandler
 15677  085C  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 15678  085D  3191  21D7         	fcall	_EUSART_SetErrorHandler
 15679                           
 15680                           ;mcc_generated_files/eusart.c: 114:     eusartRxLastError.status = 0;
 15681  085F  0022               	movlb	2	; select bank2
 15682  0860  01E6               	clrf	_eusartRxLastError^(0+256)	;volatile
 15683                           
 15684                           ;mcc_generated_files/eusart.c: 117:     eusartTxHead = 0;
 15685  0861  0021               	movlb	1	; select bank1
 15686  0862  01ED               	clrf	_eusartTxHead^(0+128)	;volatile
 15687                           
 15688                           ;mcc_generated_files/eusart.c: 118:     eusartTxTail = 0;
 15689  0863  01EC               	clrf	_eusartTxTail^(0+128)	;volatile
 15690                           
 15691                           ;mcc_generated_files/eusart.c: 119:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 15692  0864  3008               	movlw	8
 15693  0865  0020               	movlb	0	; select bank0
 15694  0866  00A2               	movwf	??_EUSART_Initialize
 15695  0867  0822               	movf	??_EUSART_Initialize,w
 15696  0868  0023               	movlb	3	; select bank3
 15697  0869  00EF               	movwf	_eusartTxBufferRemaining^(0+384)	;volatile
 15698                           
 15699                           ;mcc_generated_files/eusart.c: 121:     eusartRxHead = 0;
 15700  086A  01F5               	clrf	_eusartRxHead	;volatile
 15701                           
 15702                           ;mcc_generated_files/eusart.c: 122:     eusartRxTail = 0;
 15703  086B  01F4               	clrf	_eusartRxTail	;volatile
 15704                           
 15705                           ;mcc_generated_files/eusart.c: 123:     eusartRxCount = 0;
 15706  086C  0022               	movlb	2	; select bank2
 15707  086D  01E7               	clrf	_eusartRxCount^(0+256)	;volatile
 15708                           
 15709                           ;mcc_generated_files/eusart.c: 126:     PIE1bits.RCIE = 1;
 15710  086E  0021               	movlb	1	; select bank1
 15711  086F  1691               	bsf	17,5	;volatile
 15712  0870  0008               	return
 15713  0871                     __end_of_EUSART_Initialize:	
 15714                           
 15715                           	psect	text71
 15716  11FB                     __ptext71:	
 15717 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 15718 ;; Defined at:
 15719 ;;		line 284 in file "mcc_generated_files/eusart.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15722 ;;		 -> EUSART_Transmit_ISR(1), 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;		None
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      void 
 15727 ;; Registers used:
 15728 ;;		wreg
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15738 ;;Total ram usage:        2 bytes
 15739 ;; Hardware stack levels used:    1
 15740 ;; Hardware stack levels required when called:    5
 15741 ;; This function calls:
 15742 ;;		Nothing
 15743 ;; This function is called by:
 15744 ;;		_EUSART_Initialize
 15745 ;; This function uses a non-reentrant model
 15746 ;;
 15747                           
 15748                           
 15749                           ;psect for function _EUSART_SetTxInterruptHandler
 15750  11FB                     _EUSART_SetTxInterruptHandler:	
 15751                           
 15752                           ;mcc_generated_files/eusart.c: 285:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 15753                           
 15754                           ;incstack = 0
 15755                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 15756  11FB  0020               	movlb	0	; select bank0
 15757  11FC  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 15758  11FD  0024               	movlb	4	; select bank4
 15759  11FE  00ED               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+512)
 15760  11FF  0020               	movlb	0	; select bank0
 15761  1200  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 15762  1201  0024               	movlb	4	; select bank4
 15763  1202  00EC               	movwf	_EUSART_TxDefaultInterruptHandler^(0+512)
 15764  1203  0008               	return
 15765  1204                     __end_of_EUSART_SetTxInterruptHandler:	
 15766                           
 15767                           	psect	text72
 15768  11F2                     __ptext72:	
 15769 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 15770 ;; Defined at:
 15771 ;;		line 288 in file "mcc_generated_files/eusart.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15774 ;;		 -> EUSART_Receive_ISR(1), 
 15775 ;; Auto vars:     Size  Location     Type
 15776 ;;		None
 15777 ;; Return value:  Size  Location     Type
 15778 ;;                  1    wreg      void 
 15779 ;; Registers used:
 15780 ;;		wreg
 15781 ;; Tracked objects:
 15782 ;;		On entry : 0/0
 15783 ;;		On exit  : 0/0
 15784 ;;		Unchanged: 0/0
 15785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;Total ram usage:        2 bytes
 15791 ;; Hardware stack levels used:    1
 15792 ;; Hardware stack levels required when called:    5
 15793 ;; This function calls:
 15794 ;;		Nothing
 15795 ;; This function is called by:
 15796 ;;		_EUSART_Initialize
 15797 ;; This function uses a non-reentrant model
 15798 ;;
 15799                           
 15800                           
 15801                           ;psect for function _EUSART_SetRxInterruptHandler
 15802  11F2                     _EUSART_SetRxInterruptHandler:	
 15803                           
 15804                           ;mcc_generated_files/eusart.c: 289:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 15805                           
 15806                           ;incstack = 0
 15807                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 15808  11F2  0020               	movlb	0	; select bank0
 15809  11F3  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 15810  11F4  0024               	movlb	4	; select bank4
 15811  11F5  00EB               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512)
 15812  11F6  0020               	movlb	0	; select bank0
 15813  11F7  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 15814  11F8  0024               	movlb	4	; select bank4
 15815  11F9  00EA               	movwf	_EUSART_RxDefaultInterruptHandler^(0+512)
 15816  11FA  0008               	return
 15817  11FB                     __end_of_EUSART_SetRxInterruptHandler:	
 15818                           
 15819                           	psect	text73
 15820  11E9                     __ptext73:	
 15821 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 15822 ;; Defined at:
 15823 ;;		line 276 in file "mcc_generated_files/eusart.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15826 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		wreg
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;Total ram usage:        2 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    5
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_EUSART_Initialize
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           
 15853                           ;psect for function _EUSART_SetOverrunErrorHandler
 15854  11E9                     _EUSART_SetOverrunErrorHandler:	
 15855                           
 15856                           ;mcc_generated_files/eusart.c: 277:     EUSART_OverrunErrorHandler = interruptHandler;
 15857                           
 15858                           ;incstack = 0
 15859                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 15860  11E9  0020               	movlb	0	; select bank0
 15861  11EA  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 15862  11EB  0024               	movlb	4	; select bank4
 15863  11EC  00E7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+512)
 15864  11ED  0020               	movlb	0	; select bank0
 15865  11EE  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 15866  11EF  0024               	movlb	4	; select bank4
 15867  11F0  00E6               	movwf	_EUSART_OverrunErrorHandler^(0+512)
 15868  11F1  0008               	return
 15869  11F2                     __end_of_EUSART_SetOverrunErrorHandler:	
 15870                           
 15871                           	psect	text74
 15872  11E0                     __ptext74:	
 15873 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 15874 ;; Defined at:
 15875 ;;		line 272 in file "mcc_generated_files/eusart.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15878 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;		None
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  1    wreg      void 
 15883 ;; Registers used:
 15884 ;;		wreg
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;Total ram usage:        2 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:    5
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		_EUSART_Initialize
 15901 ;; This function uses a non-reentrant model
 15902 ;;
 15903                           
 15904                           
 15905                           ;psect for function _EUSART_SetFramingErrorHandler
 15906  11E0                     _EUSART_SetFramingErrorHandler:	
 15907                           
 15908                           ;mcc_generated_files/eusart.c: 273:     EUSART_FramingErrorHandler = interruptHandler;
 15909                           
 15910                           ;incstack = 0
 15911                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 15912  11E0  0020               	movlb	0	; select bank0
 15913  11E1  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 15914  11E2  0024               	movlb	4	; select bank4
 15915  11E3  00E9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+512)
 15916  11E4  0020               	movlb	0	; select bank0
 15917  11E5  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 15918  11E6  0024               	movlb	4	; select bank4
 15919  11E7  00E8               	movwf	_EUSART_FramingErrorHandler^(0+512)
 15920  11E8  0008               	return
 15921  11E9                     __end_of_EUSART_SetFramingErrorHandler:	
 15922                           
 15923                           	psect	text75
 15924  11D7                     __ptext75:	
 15925 ;; *************** function _EUSART_SetErrorHandler *****************
 15926 ;; Defined at:
 15927 ;;		line 280 in file "mcc_generated_files/eusart.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 15930 ;;		 -> EUSART_DefaultErrorHandler(1), 
 15931 ;; Auto vars:     Size  Location     Type
 15932 ;;		None
 15933 ;; Return value:  Size  Location     Type
 15934 ;;                  1    wreg      void 
 15935 ;; Registers used:
 15936 ;;		wreg
 15937 ;; Tracked objects:
 15938 ;;		On entry : 0/0
 15939 ;;		On exit  : 0/0
 15940 ;;		Unchanged: 0/0
 15941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15945 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15946 ;;Total ram usage:        2 bytes
 15947 ;; Hardware stack levels used:    1
 15948 ;; Hardware stack levels required when called:    5
 15949 ;; This function calls:
 15950 ;;		Nothing
 15951 ;; This function is called by:
 15952 ;;		_EUSART_Initialize
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           
 15957                           ;psect for function _EUSART_SetErrorHandler
 15958  11D7                     _EUSART_SetErrorHandler:	
 15959                           
 15960                           ;mcc_generated_files/eusart.c: 281:     EUSART_ErrorHandler = interruptHandler;
 15961                           
 15962                           ;incstack = 0
 15963                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 15964  11D7  0020               	movlb	0	; select bank0
 15965  11D8  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 15966  11D9  0024               	movlb	4	; select bank4
 15967  11DA  00E5               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
 15968  11DB  0020               	movlb	0	; select bank0
 15969  11DC  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
 15970  11DD  0024               	movlb	4	; select bank4
 15971  11DE  00E4               	movwf	_EUSART_ErrorHandler^(0+512)
 15972  11DF  0008               	return
 15973  11E0                     __end_of_EUSART_SetErrorHandler:	
 15974                           
 15975                           	psect	text76
 15976  11AF                     __ptext76:	
 15977 ;; *************** function _ADC_Initialize *****************
 15978 ;; Defined at:
 15979 ;;		line 65 in file "mcc_generated_files/adc.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15997 ;;Total ram usage:        0 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:    5
 16000 ;; This function calls:
 16001 ;;		Nothing
 16002 ;; This function is called by:
 16003 ;;		_SYSTEM_Initialize
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           
 16008                           ;psect for function _ADC_Initialize
 16009  11AF                     _ADC_Initialize:	
 16010                           
 16011                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 16012                           
 16013                           ;incstack = 0
 16014                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 16015  11AF  3001               	movlw	1
 16016  11B0  0021               	movlb	1	; select bank1
 16017  11B1  009D               	movwf	29	;volatile
 16018                           
 16019                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
 16020  11B2  019E               	clrf	30	;volatile
 16021                           
 16022                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
 16023  11B3  019F               	clrf	31	;volatile
 16024                           
 16025                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 16026  11B4  019B               	clrf	27	;volatile
 16027                           
 16028                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
 16029  11B5  019C               	clrf	28	;volatile
 16030  11B6  0008               	return
 16031  11B7                     __end_of_ADC_Initialize:	
 16032                           
 16033                           	psect	text77
 16034  1222                     __ptext77:	
 16035 ;; *************** function _PIR_Sensor *****************
 16036 ;; Defined at:
 16037 ;;		line 310 in file "main.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;		None
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;		None
 16042 ;; Return value:  Size  Location     Type
 16043 ;;                  1    wreg      _Bool 
 16044 ;; Registers used:
 16045 ;;		wreg, status,2
 16046 ;; Tracked objects:
 16047 ;;		On entry : 0/0
 16048 ;;		On exit  : 0/0
 16049 ;;		Unchanged: 0/0
 16050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16055 ;;Total ram usage:        0 bytes
 16056 ;; Hardware stack levels used:    1
 16057 ;; Hardware stack levels required when called:    5
 16058 ;; This function calls:
 16059 ;;		Nothing
 16060 ;; This function is called by:
 16061 ;;		_main
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           
 16066                           ;psect for function _PIR_Sensor
 16067  1222                     _PIR_Sensor:	
 16068                           
 16069                           ;main.c: 311:     if(PORTCbits.RC3 >= 1){
 16070                           
 16071                           ;incstack = 0
 16072                           ; Regs used in _PIR_Sensor: [wreg+status,2]
 16073  1222  0020               	movlb	0	; select bank0
 16074  1223  1D8E               	btfss	14,3	;volatile
 16075  1224  2A2A               	goto	l8083
 16076                           
 16077                           ;main.c: 312:         prox = 1;
 16078  1225  0022               	movlb	2	; select bank2
 16079  1226  01EB               	clrf	_prox^(0+256)
 16080  1227  0AEB               	incf	_prox^(0+256),f
 16081                           
 16082                           ;main.c: 313:         return 1;
 16083  1228  3001               	movlw	1
 16084  1229  0008               	return
 16085  122A                     l8083:	
 16086                           
 16087                           ;main.c: 316:         prox = 0;
 16088  122A  0022               	movlb	2	; select bank2
 16089  122B  01EB               	clrf	_prox^(0+256)
 16090                           
 16091                           ;main.c: 317:         return 0;
 16092  122C  3000               	movlw	0
 16093  122D  0008               	return
 16094  122E                     __end_of_PIR_Sensor:	
 16095                           
 16096                           	psect	text78
 16097  177D                     __ptext78:	
 16098 ;; *************** function _On_Off *****************
 16099 ;; Defined at:
 16100 ;;		line 321 in file "main.c"
 16101 ;; Parameters:    Size  Location     Type
 16102 ;;		None
 16103 ;; Auto vars:     Size  Location     Type
 16104 ;;  val             2    7[BANK0 ] int 
 16105 ;; Return value:  Size  Location     Type
 16106 ;;                  1    wreg      _Bool 
 16107 ;; Registers used:
 16108 ;;		wreg, status,2, status,0, pclath, cstack
 16109 ;; Tracked objects:
 16110 ;;		On entry : 0/0
 16111 ;;		On exit  : 0/0
 16112 ;;		Unchanged: 0/0
 16113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16117 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16118 ;;Total ram usage:        5 bytes
 16119 ;; Hardware stack levels used:    1
 16120 ;; Hardware stack levels required when called:    6
 16121 ;; This function calls:
 16122 ;;		_ADC_GetConversion
 16123 ;; This function is called by:
 16124 ;;		_main
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128                           
 16129                           ;psect for function _On_Off
 16130  177D                     _On_Off:	
 16131                           
 16132                           ;main.c: 322:     adcResult = ADC_GetConversion(BTN) >> 6;
 16133                           
 16134                           ;incstack = 0
 16135                           ; Regs used in _On_Off: [wreg+status,2+status,0+pclath+cstack]
 16136  177D  3017               	movlw	23
 16137  177E  3193  23D8  3197   	fcall	_ADC_GetConversion
 16138  1781  0020               	movlb	0	; select bank0
 16139  1782  0820               	movf	?_ADC_GetConversion,w
 16140  1783  00A4               	movwf	??_On_Off
 16141  1784  0821               	movf	?_ADC_GetConversion+1,w
 16142  1785  00A5               	movwf	??_On_Off+1
 16143  1786  3006               	movlw	6
 16144  1787                     u7805:	
 16145  1787  36A5               	lsrf	??_On_Off+1,f
 16146  1788  0CA4               	rrf	??_On_Off,f
 16147  1789  0B89               	decfsz	9,f
 16148  178A  2F87               	goto	u7805
 16149  178B  0824               	movf	??_On_Off,w
 16150  178C  00A6               	movwf	??_On_Off+2
 16151  178D  0826               	movf	??_On_Off+2,w
 16152  178E  0021               	movlb	1	; select bank1
 16153  178F  00EE               	movwf	_adcResult^(0+128)
 16154                           
 16155                           ;main.c: 323:     int val = adcResult;
 16156  1790  086E               	movf	_adcResult^(0+128),w
 16157  1791  0020               	movlb	0	; select bank0
 16158  1792  00A4               	movwf	??_On_Off
 16159  1793  01A5               	clrf	??_On_Off+1
 16160  1794  0824               	movf	??_On_Off,w
 16161  1795  00A7               	movwf	On_Off@val
 16162  1796  0825               	movf	??_On_Off+1,w
 16163  1797  00A8               	movwf	On_Off@val+1
 16164                           
 16165                           ;main.c: 324:     if(val >= 10 && val <= 20) {
 16166  1798  0828               	movf	On_Off@val+1,w
 16167  1799  3A80               	xorlw	128
 16168  179A  00A4               	movwf	??_On_Off
 16169  179B  3080               	movlw	128
 16170  179C  0224               	subwf	??_On_Off,w
 16171  179D  1D03               	skipz
 16172  179E  2FA1               	goto	u7815
 16173  179F  300A               	movlw	10
 16174  17A0  0227               	subwf	On_Off@val,w
 16175  17A1                     u7815:	
 16176  17A1  1C03               	skipc
 16177  17A2  2FB7               	goto	l8069
 16178  17A3  0020               	movlb	0	; select bank0
 16179  17A4  0828               	movf	On_Off@val+1,w
 16180  17A5  3A80               	xorlw	128
 16181  17A6  00A4               	movwf	??_On_Off
 16182  17A7  3080               	movlw	128
 16183  17A8  0224               	subwf	??_On_Off,w
 16184  17A9  1D03               	skipz
 16185  17AA  2FAD               	goto	u7825
 16186  17AB  3015               	movlw	21
 16187  17AC  0227               	subwf	On_Off@val,w
 16188  17AD                     u7825:	
 16189  17AD  1803               	skipnc
 16190  17AE  2FB7               	goto	l8069
 16191                           
 16192                           ;main.c: 325:         if(on == 0) {
 16193  17AF  0021               	movlb	1	; select bank1
 16194  17B0  086F               	movf	_on^(0+128),w
 16195  17B1  1D03               	btfss	3,2
 16196  17B2  2FB6               	goto	l8067
 16197                           
 16198                           ;main.c: 326:             on = 1;
 16199  17B3  01EF               	clrf	_on^(0+128)
 16200  17B4  0AEF               	incf	_on^(0+128),f
 16201                           
 16202                           ;main.c: 327:         }
 16203  17B5  2FB7               	goto	l8069
 16204  17B6                     l8067:	
 16205                           
 16206                           ;main.c: 329:             on = 0;
 16207  17B6  01EF               	clrf	_on^(0+128)
 16208  17B7                     l8069:	
 16209                           
 16210                           ;main.c: 332:     return on;
 16211  17B7  0021               	movlb	1	; select bank1
 16212  17B8  086F               	movf	_on^(0+128),w
 16213  17B9  0008               	return
 16214  17BA                     __end_of_On_Off:	
 16215                           
 16216                           	psect	text79
 16217  0EF6                     __ptext79:	
 16218 ;; *************** function _Get_ADC *****************
 16219 ;; Defined at:
 16220 ;;		line 271 in file "main.c"
 16221 ;; Parameters:    Size  Location     Type
 16222 ;;		None
 16223 ;; Auto vars:     Size  Location     Type
 16224 ;;  val             2   15[BANK0 ] int 
 16225 ;; Return value:  Size  Location     Type
 16226 ;;                  1    wreg      void 
 16227 ;; Registers used:
 16228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/0
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16236 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16237 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16238 ;;Total ram usage:        5 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; Hardware stack levels required when called:    8
 16241 ;; This function calls:
 16242 ;;		_ADC_GetConversion
 16243 ;;		_Display_Name
 16244 ;; This function is called by:
 16245 ;;		_main
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           
 16250                           ;psect for function _Get_ADC
 16251  0EF6                     _Get_ADC:	
 16252                           
 16253                           ;main.c: 272:     adcResult = ADC_GetConversion(BTN) >> 6;
 16254                           
 16255                           ;incstack = 0
 16256                           ; Regs used in _Get_ADC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16257  0EF6  3017               	movlw	23
 16258  0EF7  3193  23D8  318E   	fcall	_ADC_GetConversion
 16259  0EFA  0020               	movlb	0	; select bank0
 16260  0EFB  0820               	movf	?_ADC_GetConversion,w
 16261  0EFC  00AC               	movwf	??_Get_ADC
 16262  0EFD  0821               	movf	?_ADC_GetConversion+1,w
 16263  0EFE  00AD               	movwf	??_Get_ADC+1
 16264  0EFF  3006               	movlw	6
 16265  0F00                     u8175:	
 16266  0F00  36AD               	lsrf	??_Get_ADC+1,f
 16267  0F01  0CAC               	rrf	??_Get_ADC,f
 16268  0F02  0B89               	decfsz	9,f
 16269  0F03  2F00               	goto	u8175
 16270  0F04  082C               	movf	??_Get_ADC,w
 16271  0F05  00AE               	movwf	??_Get_ADC+2
 16272  0F06  082E               	movf	??_Get_ADC+2,w
 16273  0F07  0021               	movlb	1	; select bank1
 16274  0F08  00EE               	movwf	_adcResult^(0+128)
 16275                           
 16276                           ;main.c: 273:     int val = adcResult;
 16277  0F09  086E               	movf	_adcResult^(0+128),w
 16278  0F0A  0020               	movlb	0	; select bank0
 16279  0F0B  00AC               	movwf	??_Get_ADC
 16280  0F0C  01AD               	clrf	??_Get_ADC+1
 16281  0F0D  082C               	movf	??_Get_ADC,w
 16282  0F0E  00AF               	movwf	Get_ADC@val
 16283  0F0F  082D               	movf	??_Get_ADC+1,w
 16284  0F10  00B0               	movwf	Get_ADC@val+1
 16285                           
 16286                           ;main.c: 274:     if(val >= 10 && val <= 20) {
 16287  0F11  0830               	movf	Get_ADC@val+1,w
 16288  0F12  3A80               	xorlw	128
 16289  0F13  00AC               	movwf	??_Get_ADC
 16290  0F14  3080               	movlw	128
 16291  0F15  022C               	subwf	??_Get_ADC,w
 16292  0F16  1D03               	skipz
 16293  0F17  2F1A               	goto	u8185
 16294  0F18  300A               	movlw	10
 16295  0F19  022F               	subwf	Get_ADC@val,w
 16296  0F1A                     u8185:	
 16297  0F1A  1C03               	skipc
 16298  0F1B  2F28               	goto	l8239
 16299  0F1C  0020               	movlb	0	; select bank0
 16300  0F1D  0830               	movf	Get_ADC@val+1,w
 16301  0F1E  3A80               	xorlw	128
 16302  0F1F  00AC               	movwf	??_Get_ADC
 16303  0F20  3080               	movlw	128
 16304  0F21  022C               	subwf	??_Get_ADC,w
 16305  0F22  1D03               	skipz
 16306  0F23  2F26               	goto	u8195
 16307  0F24  3015               	movlw	21
 16308  0F25  022F               	subwf	Get_ADC@val,w
 16309  0F26                     u8195:	
 16310  0F26  1C03               	btfss	3,0
 16311  0F27  2FFD               	goto	l8291
 16312  0F28                     l8239:	
 16313  0F28  0020               	movlb	0	; select bank0
 16314  0F29  0830               	movf	Get_ADC@val+1,w
 16315  0F2A  3A80               	xorlw	128
 16316  0F2B  00AC               	movwf	??_Get_ADC
 16317  0F2C  3080               	movlw	128
 16318  0F2D  022C               	subwf	??_Get_ADC,w
 16319  0F2E  1D03               	skipz
 16320  0F2F  2F32               	goto	u8205
 16321  0F30  305F               	movlw	95
 16322  0F31  022F               	subwf	Get_ADC@val,w
 16323  0F32                     u8205:	
 16324  0F32  1C03               	skipc
 16325  0F33  2F40               	goto	l8245
 16326  0F34  0020               	movlb	0	; select bank0
 16327  0F35  0830               	movf	Get_ADC@val+1,w
 16328  0F36  3A80               	xorlw	128
 16329  0F37  00AC               	movwf	??_Get_ADC
 16330  0F38  3080               	movlw	128
 16331  0F39  022C               	subwf	??_Get_ADC,w
 16332  0F3A  1D03               	skipz
 16333  0F3B  2F3E               	goto	u8215
 16334  0F3C  306A               	movlw	106
 16335  0F3D  022F               	subwf	Get_ADC@val,w
 16336  0F3E                     u8215:	
 16337  0F3E  1C03               	btfss	3,0
 16338  0F3F  2FFD               	goto	l8291
 16339  0F40                     l8245:	
 16340  0F40  0020               	movlb	0	; select bank0
 16341  0F41  0830               	movf	Get_ADC@val+1,w
 16342  0F42  3A80               	xorlw	128
 16343  0F43  00AC               	movwf	??_Get_ADC
 16344  0F44  3080               	movlw	128
 16345  0F45  022C               	subwf	??_Get_ADC,w
 16346  0F46  1D03               	skipz
 16347  0F47  2F4A               	goto	u8225
 16348  0F48  3073               	movlw	115
 16349  0F49  022F               	subwf	Get_ADC@val,w
 16350  0F4A                     u8225:	
 16351  0F4A  1C03               	skipc
 16352  0F4B  2F70               	goto	l8253
 16353  0F4C  0020               	movlb	0	; select bank0
 16354  0F4D  0830               	movf	Get_ADC@val+1,w
 16355  0F4E  3A80               	xorlw	128
 16356  0F4F  00AC               	movwf	??_Get_ADC
 16357  0F50  3080               	movlw	128
 16358  0F51  022C               	subwf	??_Get_ADC,w
 16359  0F52  1D03               	skipz
 16360  0F53  2F56               	goto	u8235
 16361  0F54  3080               	movlw	128
 16362  0F55  022F               	subwf	Get_ADC@val,w
 16363  0F56                     u8235:	
 16364  0F56  1803               	skipnc
 16365  0F57  2F70               	goto	l8253
 16366                           
 16367                           ;main.c: 279:         brightness++;
 16368  0F58  3001               	movlw	1
 16369  0F59  0022               	movlb	2	; select bank2
 16370  0F5A  07E4               	addwf	_brightness^(0+256),f
 16371  0F5B  3000               	movlw	0
 16372  0F5C  3DE5               	addwfc	(_brightness+1)^(0+256),f
 16373                           
 16374                           ;main.c: 280:         if(brightness > 7) {
 16375  0F5D  0865               	movf	(_brightness+1)^(0+256),w
 16376  0F5E  3A80               	xorlw	128
 16377  0F5F  0020               	movlb	0	; select bank0
 16378  0F60  00AC               	movwf	??_Get_ADC
 16379  0F61  3080               	movlw	128
 16380  0F62  022C               	subwf	??_Get_ADC,w
 16381  0F63  1D03               	skipz
 16382  0F64  2F68               	goto	u8245
 16383  0F65  3008               	movlw	8
 16384  0F66  0022               	movlb	2	; select bank2
 16385  0F67  0264               	subwf	_brightness^(0+256),w
 16386  0F68                     u8245:	
 16387  0F68  1C03               	skipc
 16388  0F69  2FFD               	goto	l8291
 16389                           
 16390                           ;main.c: 281:             brightness = 7;
 16391  0F6A  3007               	movlw	7
 16392  0F6B  0022               	movlb	2	; select bank2
 16393  0F6C  00E4               	movwf	_brightness^(0+256)
 16394  0F6D  3000               	movlw	0
 16395  0F6E  00E5               	movwf	(_brightness^(0+256)+1)
 16396  0F6F  2FFD               	goto	l8291
 16397  0F70                     l8253:	
 16398  0F70  0020               	movlb	0	; select bank0
 16399  0F71  0830               	movf	Get_ADC@val+1,w
 16400  0F72  3A80               	xorlw	128
 16401  0F73  00AC               	movwf	??_Get_ADC
 16402  0F74  3080               	movlw	128
 16403  0F75  022C               	subwf	??_Get_ADC,w
 16404  0F76  1D03               	skipz
 16405  0F77  2F7A               	goto	u8255
 16406  0F78  3082               	movlw	130
 16407  0F79  022F               	subwf	Get_ADC@val,w
 16408  0F7A                     u8255:	
 16409  0F7A  1C03               	skipc
 16410  0F7B  2F9F               	goto	l8267
 16411  0F7C  0020               	movlb	0	; select bank0
 16412  0F7D  0830               	movf	Get_ADC@val+1,w
 16413  0F7E  3A80               	xorlw	128
 16414  0F7F  00AC               	movwf	??_Get_ADC
 16415  0F80  3080               	movlw	128
 16416  0F81  022C               	subwf	??_Get_ADC,w
 16417  0F82  1D03               	skipz
 16418  0F83  2F86               	goto	u8265
 16419  0F84  308D               	movlw	141
 16420  0F85  022F               	subwf	Get_ADC@val,w
 16421  0F86                     u8265:	
 16422  0F86  1803               	skipnc
 16423  0F87  2F9F               	goto	l8267
 16424                           
 16425                           ;main.c: 285:         printed = 0;
 16426  0F88  0022               	movlb	2	; select bank2
 16427  0F89  01EC               	clrf	_printed^(0+256)
 16428                           
 16429                           ;main.c: 286:         --name;
 16430  0F8A  30FF               	movlw	255
 16431  0F8B  0021               	movlb	1	; select bank1
 16432  0F8C  07E6               	addwf	_name^(0+128),f
 16433  0F8D  30FF               	movlw	255
 16434  0F8E  3DE7               	addwfc	(_name+1)^(0+128),f
 16435                           
 16436                           ;main.c: 287:         if(name < 0) {
 16437  0F8F  1FE7               	btfss	(_name+1)^(0+128),7
 16438  0F90  2F95               	goto	l8265
 16439                           
 16440                           ;main.c: 288:             name = 3;
 16441  0F91  3003               	movlw	3
 16442  0F92  00E6               	movwf	_name^(0+128)
 16443  0F93  3000               	movlw	0
 16444  0F94  00E7               	movwf	(_name^(0+128)+1)
 16445  0F95                     l8265:	
 16446                           
 16447                           ;main.c: 290:         Display_Name(names[name]);
 16448  0F95  3566               	lslf	_name^(0+128),w
 16449  0F96  3EE7               	addlw	(low (_names| (0+256)))& (0+255)
 16450  0F97  0086               	movwf	6
 16451  0F98  3001               	movlw	1	; select bank3/4
 16452  0F99  0087               	movwf	7
 16453  0F9A  3F40               	moviw [0]fsr1
 16454  0F9B  0020               	movlb	0	; select bank0
 16455  0F9C  00A5               	movwf	Display_Name@string1
 16456  0F9D  3F41               	moviw [1]fsr1
 16457  0F9E  2FFA               	goto	L10
 16458  0F9F                     l8267:	
 16459                           ;main.c: 291:     }
 16460                           
 16461  0F9F  0020               	movlb	0	; select bank0
 16462  0FA0  0830               	movf	Get_ADC@val+1,w
 16463  0FA1  3A80               	xorlw	128
 16464  0FA2  00AC               	movwf	??_Get_ADC
 16465  0FA3  3080               	movlw	128
 16466  0FA4  022C               	subwf	??_Get_ADC,w
 16467  0FA5  1D03               	skipz
 16468  0FA6  2FA9               	goto	u8285
 16469  0FA7  3096               	movlw	150
 16470  0FA8  022F               	subwf	Get_ADC@val,w
 16471  0FA9                     u8285:	
 16472  0FA9  1C03               	skipc
 16473  0FAA  2FC1               	goto	l8277
 16474  0FAB  0020               	movlb	0	; select bank0
 16475  0FAC  0830               	movf	Get_ADC@val+1,w
 16476  0FAD  3A80               	xorlw	128
 16477  0FAE  00AC               	movwf	??_Get_ADC
 16478  0FAF  3080               	movlw	128
 16479  0FB0  022C               	subwf	??_Get_ADC,w
 16480  0FB1  1D03               	skipz
 16481  0FB2  2FB5               	goto	u8295
 16482  0FB3  309E               	movlw	158
 16483  0FB4  022F               	subwf	Get_ADC@val,w
 16484  0FB5                     u8295:	
 16485  0FB5  1803               	skipnc
 16486  0FB6  2FC1               	goto	l8277
 16487                           
 16488                           ;main.c: 293:         brightness--;
 16489  0FB7  30FF               	movlw	255
 16490  0FB8  0022               	movlb	2	; select bank2
 16491  0FB9  07E4               	addwf	_brightness^(0+256),f
 16492  0FBA  30FF               	movlw	255
 16493  0FBB  3DE5               	addwfc	(_brightness+1)^(0+256),f
 16494                           
 16495                           ;main.c: 294:         if(brightness < 0) {
 16496  0FBC  1FE5               	btfss	(_brightness+1)^(0+256),7
 16497  0FBD  2FFD               	goto	l8291
 16498                           
 16499                           ;main.c: 295:             brightness = 0;
 16500  0FBE  01E4               	clrf	_brightness^(0+256)
 16501  0FBF  01E5               	clrf	(_brightness+1)^(0+256)
 16502  0FC0  2FFD               	goto	l8291
 16503  0FC1                     l8277:	
 16504  0FC1  0020               	movlb	0	; select bank0
 16505  0FC2  0830               	movf	Get_ADC@val+1,w
 16506  0FC3  3A80               	xorlw	128
 16507  0FC4  00AC               	movwf	??_Get_ADC
 16508  0FC5  3080               	movlw	128
 16509  0FC6  022C               	subwf	??_Get_ADC,w
 16510  0FC7  1D03               	skipz
 16511  0FC8  2FCB               	goto	u8315
 16512  0FC9  30A0               	movlw	160
 16513  0FCA  022F               	subwf	Get_ADC@val,w
 16514  0FCB                     u8315:	
 16515  0FCB  1C03               	skipc
 16516  0FCC  2FFD               	goto	l8291
 16517  0FCD  0020               	movlb	0	; select bank0
 16518  0FCE  0830               	movf	Get_ADC@val+1,w
 16519  0FCF  3A80               	xorlw	128
 16520  0FD0  00AC               	movwf	??_Get_ADC
 16521  0FD1  3080               	movlw	128
 16522  0FD2  022C               	subwf	??_Get_ADC,w
 16523  0FD3  1D03               	skipz
 16524  0FD4  2FD7               	goto	u8325
 16525  0FD5  30A6               	movlw	166
 16526  0FD6  022F               	subwf	Get_ADC@val,w
 16527  0FD7                     u8325:	
 16528  0FD7  1803               	skipnc
 16529  0FD8  2FFD               	goto	l8291
 16530                           
 16531                           ;main.c: 299:         printed = 0;
 16532  0FD9  0022               	movlb	2	; select bank2
 16533  0FDA  01EC               	clrf	_printed^(0+256)
 16534                           
 16535                           ;main.c: 300:         name++;
 16536  0FDB  3001               	movlw	1
 16537  0FDC  0021               	movlb	1	; select bank1
 16538  0FDD  07E6               	addwf	_name^(0+128),f
 16539  0FDE  3000               	movlw	0
 16540  0FDF  3DE7               	addwfc	(_name+1)^(0+128),f
 16541                           
 16542                           ;main.c: 301:         if(name > 3) {
 16543  0FE0  0867               	movf	(_name+1)^(0+128),w
 16544  0FE1  3A80               	xorlw	128
 16545  0FE2  0020               	movlb	0	; select bank0
 16546  0FE3  00AC               	movwf	??_Get_ADC
 16547  0FE4  3080               	movlw	128
 16548  0FE5  022C               	subwf	??_Get_ADC,w
 16549  0FE6  1D03               	skipz
 16550  0FE7  2FEB               	goto	u8335
 16551  0FE8  3004               	movlw	4
 16552  0FE9  0021               	movlb	1	; select bank1
 16553  0FEA  0266               	subwf	_name^(0+128),w
 16554  0FEB                     u8335:	
 16555  0FEB  1C03               	skipc
 16556  0FEC  2FF0               	goto	l8289
 16557                           
 16558                           ;main.c: 302:            name = 0;
 16559  0FED  0021               	movlb	1	; select bank1
 16560  0FEE  01E6               	clrf	_name^(0+128)
 16561  0FEF  01E7               	clrf	(_name+1)^(0+128)
 16562  0FF0                     l8289:	
 16563                           
 16564                           ;main.c: 304:         Display_Name(names[name]);
 16565  0FF0  0021               	movlb	1	; select bank1
 16566  0FF1  3566               	lslf	_name^(0+128),w
 16567  0FF2  3EE7               	addlw	(low (_names| (0+256)))& (0+255)
 16568  0FF3  0086               	movwf	6
 16569  0FF4  3001               	movlw	1	; select bank3/4
 16570  0FF5  0087               	movwf	7
 16571  0FF6  3F40               	moviw [0]fsr1
 16572  0FF7  0020               	movlb	0	; select bank0
 16573  0FF8  00A5               	movwf	Display_Name@string1
 16574  0FF9  3F41               	moviw [1]fsr1
 16575  0FFA                     L10:	
 16576  0FFA  00A6               	movwf	Display_Name@string1+1
 16577  0FFB  3189  2159         	fcall	_Display_Name
 16578  0FFD                     l8291:	
 16579                           
 16580                           ;main.c: 306:     adcResult = 0;
 16581  0FFD  0021               	movlb	1	; select bank1
 16582  0FFE  01EE               	clrf	_adcResult^(0+128)
 16583  0FFF  0008               	return
 16584  1000                     __end_of_Get_ADC:	
 16585                           
 16586                           	psect	text80
 16587  0959                     __ptext80:	
 16588 ;; *************** function _Display_Name *****************
 16589 ;; Defined at:
 16590 ;;		line 212 in file "main.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  string1         2    5[BANK0 ] PTR unsigned char 
 16593 ;;		 -> STR_4(11), STR_3(16), STR_2(13), STR_1(12), 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;  i               2   10[BANK0 ] int 
 16596 ;;  length          2    8[BANK0 ] int 
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  1    wreg      void 
 16599 ;; Registers used:
 16600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16607 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;Total ram usage:        7 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:    7
 16613 ;; This function calls:
 16614 ;;		_PWM_Output_Disable
 16615 ;;		_PWM_Output_Enable
 16616 ;;		_SPI_Write
 16617 ;;		_strlen
 16618 ;; This function is called by:
 16619 ;;		_main
 16620 ;;		_handleGesture
 16621 ;;		_Get_ADC
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           
 16626                           ;psect for function _Display_Name
 16627  0959                     _Display_Name:	
 16628                           
 16629                           ;main.c: 213:     int length;;main.c: 214:     int i;;main.c: 215:     PWM_Output_Enable
      +                          ();
 16630                           
 16631                           ;incstack = 0
 16632                           ; Regs used in _Display_Name: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16633  0959  3191  214F  3189   	fcall	_PWM_Output_Enable
 16634                           
 16635                           ;main.c: 216:     _delay((unsigned long)((200)*(500000/4000.0)));
 16636  095C  3021               	movlw	33
 16637  095D  0020               	movlb	0	; select bank0
 16638  095E  00A7               	movwf	??_Display_Name
 16639  095F  3076               	movlw	118
 16640  0960                     u8537:	
 16641  0960  0B89               	decfsz	9,f
 16642  0961  2960               	goto	u8537
 16643  0962  0BA7               	decfsz	??_Display_Name,f
 16644  0963  2960               	goto	u8537
 16645  0964  0000               	nop
 16646                           
 16647                           ;main.c: 217:     PWM_Output_Disable();
 16648  0965  3191  2109  3189   	fcall	_PWM_Output_Disable
 16649                           
 16650                           ;main.c: 218:     SPI_Write(0xFE);
 16651  0968  30FE               	movlw	254
 16652  0969  3192  22C7  3189   	fcall	_SPI_Write
 16653                           
 16654                           ;main.c: 219:     _delay((unsigned long)((100)*(500000/4000.0)));
 16655  096C  3011               	movlw	17
 16656  096D  0020               	movlb	0	; select bank0
 16657  096E  00A7               	movwf	??_Display_Name
 16658  096F  303A               	movlw	58
 16659  0970                     u8547:	
 16660  0970  0B89               	decfsz	9,f
 16661  0971  2970               	goto	u8547
 16662  0972  0BA7               	decfsz	??_Display_Name,f
 16663  0973  2970               	goto	u8547
 16664  0974  0000               	nop
 16665                           
 16666                           ;main.c: 220:     SPI_Write(0x51);
 16667  0975  3051               	movlw	81
 16668  0976  3192  22C7  3189   	fcall	_SPI_Write
 16669                           
 16670                           ;main.c: 221:     length = strlen(string1);
 16671  0979  0020               	movlb	0	; select bank0
 16672  097A  0826               	movf	Display_Name@string1+1,w
 16673  097B  00A1               	movwf	strlen@s+1
 16674  097C  0825               	movf	Display_Name@string1,w
 16675  097D  00A0               	movwf	strlen@s
 16676  097E  3193  2321  3189   	fcall	_strlen
 16677  0981  0020               	movlb	0	; select bank0
 16678  0982  0821               	movf	?_strlen+1,w
 16679  0983  00A9               	movwf	Display_Name@length+1
 16680  0984  0820               	movf	?_strlen,w
 16681  0985  00A8               	movwf	Display_Name@length
 16682                           
 16683                           ;main.c: 222:     for(i = 0; i < length; i++){
 16684  0986  01AA               	clrf	Display_Name@i
 16685  0987  01AB               	clrf	Display_Name@i+1
 16686  0988                     l7687:	
 16687  0988  082B               	movf	Display_Name@i+1,w
 16688  0989  3A80               	xorlw	128
 16689  098A  00A7               	movwf	??_Display_Name
 16690  098B  0829               	movf	Display_Name@length+1,w
 16691  098C  3A80               	xorlw	128
 16692  098D  0227               	subwf	??_Display_Name,w
 16693  098E  1D03               	skipz
 16694  098F  2992               	goto	u7465
 16695  0990  0828               	movf	Display_Name@length,w
 16696  0991  022A               	subwf	Display_Name@i,w
 16697  0992                     u7465:	
 16698  0992  1803               	btfsc	3,0
 16699  0993  29A5               	goto	l740
 16700                           
 16701                           ;main.c: 223:         SPI_Write(string1[i]);
 16702  0994  0020               	movlb	0	; select bank0
 16703  0995  0825               	movf	Display_Name@string1,w
 16704  0996  072A               	addwf	Display_Name@i,w
 16705  0997  0084               	movwf	4
 16706  0998  0826               	movf	Display_Name@string1+1,w
 16707  0999  3D2B               	addwfc	Display_Name@i+1,w
 16708  099A  0085               	movwf	5
 16709  099B  0800               	movf	0,w	;code access
 16710  099C  3192  22C7  3189   	fcall	_SPI_Write
 16711                           
 16712                           ;main.c: 224:     }
 16713  099F  3001               	movlw	1
 16714  09A0  0020               	movlb	0	; select bank0
 16715  09A1  07AA               	addwf	Display_Name@i,f
 16716  09A2  3000               	movlw	0
 16717  09A3  3DAB               	addwfc	Display_Name@i+1,f
 16718  09A4  2988               	goto	l7687
 16719  09A5                     l740:	
 16720                           
 16721                           ;main.c: 225:     printed = 1;
 16722  09A5  0022               	movlb	2	; select bank2
 16723  09A6  01EC               	clrf	_printed^(0+256)
 16724  09A7  0AEC               	incf	_printed^(0+256),f
 16725  09A8  0008               	return
 16726  09A9                     __end_of_Display_Name:	
 16727                           
 16728                           	psect	text81
 16729  1321                     __ptext81:	
 16730 ;; *************** function _strlen *****************
 16731 ;; Defined at:
 16732 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 16733 ;; Parameters:    Size  Location     Type
 16734 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 16735 ;;		 -> dbuf(32), UART_Byte@bits(7), STR_4(11), STR_3(16), 
 16736 ;;		 -> STR_2(13), STR_1(12), 
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 16739 ;;		 -> dbuf(32), UART_Byte@bits(7), STR_4(11), STR_3(16), 
 16740 ;;		 -> STR_2(13), STR_1(12), 
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  2    0[BANK0 ] unsigned int 
 16743 ;; Registers used:
 16744 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16753 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16754 ;;Total ram usage:        5 bytes
 16755 ;; Hardware stack levels used:    1
 16756 ;; Hardware stack levels required when called:    5
 16757 ;; This function calls:
 16758 ;;		Nothing
 16759 ;; This function is called by:
 16760 ;;		_Display_Name
 16761 ;;		_pad
 16762 ;;		_strcat
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           
 16767                           ;psect for function _strlen
 16768  1321                     _strlen:	
 16769                           
 16770                           ;incstack = 0
 16771                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16772  1321  0020               	movlb	0	; select bank0
 16773  1322  0821               	movf	strlen@s+1,w
 16774  1323  00A4               	movwf	strlen@a+1
 16775  1324  0820               	movf	strlen@s,w
 16776  1325  00A3               	movwf	strlen@a
 16777  1326                     l6867:	
 16778  1326  0820               	movf	strlen@s,w
 16779  1327  0084               	movwf	4
 16780  1328  0821               	movf	strlen@s+1,w
 16781  1329  0085               	movwf	5
 16782  132A  0012               	moviw fsr0++
 16783  132B  1903               	btfsc	3,2
 16784  132C  2B32               	goto	l6869
 16785  132D  3001               	movlw	1
 16786  132E  07A0               	addwf	strlen@s,f
 16787  132F  3000               	movlw	0
 16788  1330  3DA1               	addwfc	strlen@s+1,f
 16789  1331  2B26               	goto	l6867
 16790  1332                     l6869:	
 16791  1332  0823               	movf	strlen@a,w
 16792  1333  0220               	subwf	strlen@s,w
 16793  1334  00A0               	movwf	?_strlen
 16794  1335  0824               	movf	strlen@a+1,w
 16795  1336  3B21               	subwfb	strlen@s+1,w
 16796  1337  00A1               	movwf	?_strlen+1
 16797  1338  0008               	return
 16798  1339                     __end_of_strlen:	
 16799                           
 16800                           	psect	text82
 16801  114F                     __ptext82:	
 16802 ;; *************** function _PWM_Output_Enable *****************
 16803 ;; Defined at:
 16804 ;;		line 263 in file "main.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;		None
 16809 ;; Return value:  Size  Location     Type
 16810 ;;                  1    wreg      void 
 16811 ;; Registers used:
 16812 ;;		wreg
 16813 ;; Tracked objects:
 16814 ;;		On entry : 0/0
 16815 ;;		On exit  : 0/0
 16816 ;;		Unchanged: 0/0
 16817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;Total ram usage:        0 bytes
 16823 ;; Hardware stack levels used:    1
 16824 ;; Hardware stack levels required when called:    5
 16825 ;; This function calls:
 16826 ;;		Nothing
 16827 ;; This function is called by:
 16828 ;;		_Display_Name
 16829 ;;		_PWM
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           
 16834                           ;psect for function _PWM_Output_Enable
 16835  114F                     _PWM_Output_Enable:	
 16836                           
 16837                           ;main.c: 264:     RC6PPS = 0x0C;
 16838                           
 16839                           ;incstack = 0
 16840                           ; Regs used in _PWM_Output_Enable: [wreg]
 16841  114F  300C               	movlw	12
 16842  1150  003D               	movlb	29	; select bank29
 16843  1151  00A6               	movwf	38	;volatile
 16844  1152  0008               	return
 16845  1153                     __end_of_PWM_Output_Enable:	
 16846                           
 16847                           	psect	text83
 16848  1109                     __ptext83:	
 16849 ;; *************** function _PWM_Output_Disable *****************
 16850 ;; Defined at:
 16851 ;;		line 267 in file "main.c"
 16852 ;; Parameters:    Size  Location     Type
 16853 ;;		None
 16854 ;; Auto vars:     Size  Location     Type
 16855 ;;		None
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  1    wreg      void 
 16858 ;; Registers used:
 16859 ;;		status,2
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16869 ;;Total ram usage:        0 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:    5
 16872 ;; This function calls:
 16873 ;;		Nothing
 16874 ;; This function is called by:
 16875 ;;		_Display_Name
 16876 ;;		_PWM
 16877 ;; This function uses a non-reentrant model
 16878 ;;
 16879                           
 16880                           
 16881                           ;psect for function _PWM_Output_Disable
 16882  1109                     _PWM_Output_Disable:	
 16883                           
 16884                           ;main.c: 268:     RC6PPS = 0x00;
 16885                           
 16886                           ;incstack = 0
 16887                           ; Regs used in _PWM_Output_Disable: [status,2]
 16888  1109  003D               	movlb	29	; select bank29
 16889  110A  01A6               	clrf	38	;volatile
 16890  110B  0008               	return
 16891  110C                     __end_of_PWM_Output_Disable:	
 16892                           
 16893                           	psect	text84
 16894  13D8                     __ptext84:	
 16895 ;; *************** function _ADC_GetConversion *****************
 16896 ;; Defined at:
 16897 ;;		line 113 in file "mcc_generated_files/adc.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;  channel         1    wreg     enum E6648
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;  channel         1    3[BANK0 ] enum E6648
 16902 ;; Return value:  Size  Location     Type
 16903 ;;                  2    0[BANK0 ] unsigned short 
 16904 ;; Registers used:
 16905 ;;		wreg, status,2, status,0
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16915 ;;Total ram usage:        4 bytes
 16916 ;; Hardware stack levels used:    1
 16917 ;; Hardware stack levels required when called:    5
 16918 ;; This function calls:
 16919 ;;		Nothing
 16920 ;; This function is called by:
 16921 ;;		_Get_ADC
 16922 ;;		_On_Off
 16923 ;; This function uses a non-reentrant model
 16924 ;;
 16925                           
 16926                           
 16927                           ;psect for function _ADC_GetConversion
 16928  13D8                     _ADC_GetConversion:	
 16929                           
 16930                           ;incstack = 0
 16931                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 16932                           ;ADC_GetConversion@channel stored from wreg
 16933  13D8  0020               	movlb	0	; select bank0
 16934  13D9  00A3               	movwf	ADC_GetConversion@channel
 16935                           
 16936                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 16937  13DA  0823               	movf	ADC_GetConversion@channel,w
 16938  13DB  00A2               	movwf	??_ADC_GetConversion
 16939  13DC  0DA2               	rlf	??_ADC_GetConversion,f
 16940  13DD  0DA2               	rlf	??_ADC_GetConversion,f
 16941  13DE  0021               	movlb	1	; select bank1
 16942  13DF  081D               	movf	29,w	;volatile
 16943  13E0  0020               	movlb	0	; select bank0
 16944  13E1  0622               	xorwf	??_ADC_GetConversion,w
 16945  13E2  3903               	andlw	-253
 16946  13E3  0622               	xorwf	??_ADC_GetConversion,w
 16947  13E4  0021               	movlb	1	; select bank1
 16948  13E5  009D               	movwf	29	;volatile
 16949                           
 16950                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 16951  13E6  141D               	bsf	29,0	;volatile
 16952                           
 16953                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
 16954                           
 16955                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
 16956  13E7  0021               	movlb	1	; select bank1
 16957  13E8  149D               	bsf	29,1	;volatile
 16958  13E9                     l1310:	
 16959                           ;mcc_generated_files/adc.c: 131:     }
 16960                           
 16961                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
 16962                           
 16963                           
 16964                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
 16965  13E9  0021               	movlb	1	; select bank1
 16966  13EA  1C9D               	btfss	29,1	;volatile
 16967  13EB  2BEE               	goto	l7759
 16968  13EC  0064               	clrwdt	;# 
 16969  13ED  2BE9               	goto	l1310
 16970  13EE                     l7759:	
 16971                           
 16972                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16973  13EE  081C               	movf	28,w	;volatile
 16974  13EF  0020               	movlb	0	; select bank0
 16975  13F0  00A1               	movwf	?_ADC_GetConversion+1
 16976  13F1  0021               	movlb	1	; select bank1
 16977  13F2  081B               	movf	27,w	;volatile
 16978  13F3  0020               	movlb	0	; select bank0
 16979  13F4  00A0               	movwf	?_ADC_GetConversion
 16980  13F5  0008               	return
 16981  13F6                     __end_of_ADC_GetConversion:	
 16982                           
 16983                           	psect	text85
 16984  1257                     __ptext85:	
 16985 ;; *************** function _Display_Clear *****************
 16986 ;; Defined at:
 16987 ;;		line 236 in file "main.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;		None
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;		None
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  1    wreg      void 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0, pclath, cstack
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;Total ram usage:        1 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    7
 17008 ;; This function calls:
 17009 ;;		_SPI_Write
 17010 ;; This function is called by:
 17011 ;;		_main
 17012 ;; This function uses a non-reentrant model
 17013 ;;
 17014                           
 17015                           
 17016                           ;psect for function _Display_Clear
 17017  1257                     _Display_Clear:	
 17018                           
 17019                           ;main.c: 237:     SPI_Write(0xFE);
 17020                           
 17021                           ;incstack = 0
 17022                           ; Regs used in _Display_Clear: [wreg+status,2+status,0+pclath+cstack]
 17023  1257  30FE               	movlw	254
 17024  1258  3192  22C7  3192   	fcall	_SPI_Write
 17025                           
 17026                           ;main.c: 238:     _delay((unsigned long)((100)*(500000/4000.0)));
 17027  125B  3011               	movlw	17
 17028  125C  0020               	movlb	0	; select bank0
 17029  125D  00A3               	movwf	??_Display_Clear
 17030  125E  303A               	movlw	58
 17031  125F                     u8557:	
 17032  125F  0B89               	decfsz	9,f
 17033  1260  2A5F               	goto	u8557
 17034  1261  0BA3               	decfsz	??_Display_Clear,f
 17035  1262  2A5F               	goto	u8557
 17036  1263  0000               	nop
 17037                           
 17038                           ;main.c: 239:     SPI_Write(0x51);
 17039  1264  3051               	movlw	81
 17040  1265  3192  22C7         	fcall	_SPI_Write
 17041  1267  0008               	return
 17042  1268                     __end_of_Display_Clear:	
 17043                           
 17044                           	psect	text86
 17045  12C7                     __ptext86:	
 17046 ;; *************** function _SPI_Write *****************
 17047 ;; Defined at:
 17048 ;;		line 205 in file "main.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  incoming        1    wreg     unsigned char 
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;  incoming        1    2[BANK0 ] unsigned char 
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      void 
 17055 ;; Registers used:
 17056 ;;		wreg, status,2, status,0, pclath, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17066 ;;Total ram usage:        2 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:    6
 17069 ;; This function calls:
 17070 ;;		_SPI2_Exchange8bit
 17071 ;; This function is called by:
 17072 ;;		_Display_Name
 17073 ;;		_Display_Clear
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           
 17078                           ;psect for function _SPI_Write
 17079  12C7                     _SPI_Write:	
 17080                           
 17081                           ;incstack = 0
 17082                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
 17083                           ;SPI_Write@incoming stored from wreg
 17084  12C7  0020               	movlb	0	; select bank0
 17085  12C8  00A2               	movwf	SPI_Write@incoming
 17086                           
 17087                           ;main.c: 206:     do { LATCbits.LATC1 = 0; } while(0);
 17088  12C9  0022               	movlb	2	; select bank2
 17089  12CA  108E               	bcf	14,1	;volatile
 17090                           
 17091                           ;main.c: 207:     SPI2_Exchange8bit(incoming);
 17092  12CB  0020               	movlb	0	; select bank0
 17093  12CC  0822               	movf	SPI_Write@incoming,w
 17094  12CD  3192  2248  3192   	fcall	_SPI2_Exchange8bit
 17095  12D0  0022               	movlb	2	; select bank2
 17096  12D1  148E               	bsf	14,1	;volatile
 17097                           
 17098                           ;main.c: 209:     _delay((unsigned long)((100)*(500000/4000.0)));
 17099  12D2  3011               	movlw	17
 17100  12D3  0020               	movlb	0	; select bank0
 17101  12D4  00A1               	movwf	??_SPI_Write
 17102  12D5  303A               	movlw	58
 17103  12D6                     u8567:	
 17104  12D6  0B89               	decfsz	9,f
 17105  12D7  2AD6               	goto	u8567
 17106  12D8  0BA1               	decfsz	??_SPI_Write,f
 17107  12D9  2AD6               	goto	u8567
 17108  12DA  0000               	nop
 17109  12DB  0008               	return
 17110  12DC                     __end_of_SPI_Write:	
 17111                           
 17112                           	psect	text87
 17113  1248                     __ptext87:	
 17114 ;; *************** function _SPI2_Exchange8bit *****************
 17115 ;; Defined at:
 17116 ;;		line 79 in file "mcc_generated_files/spi2.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;  data            1    wreg     unsigned char 
 17119 ;; Auto vars:     Size  Location     Type
 17120 ;;  data            1    0[BANK0 ] unsigned char 
 17121 ;; Return value:  Size  Location     Type
 17122 ;;                  1    wreg      unsigned char 
 17123 ;; Registers used:
 17124 ;;		wreg
 17125 ;; Tracked objects:
 17126 ;;		On entry : 0/0
 17127 ;;		On exit  : 0/0
 17128 ;;		Unchanged: 0/0
 17129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17134 ;;Total ram usage:        1 bytes
 17135 ;; Hardware stack levels used:    1
 17136 ;; Hardware stack levels required when called:    5
 17137 ;; This function calls:
 17138 ;;		Nothing
 17139 ;; This function is called by:
 17140 ;;		_SPI_Write
 17141 ;;		_SPI2_Exchange8bitBuffer
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           
 17146                           ;psect for function _SPI2_Exchange8bit
 17147  1248                     _SPI2_Exchange8bit:	
 17148                           
 17149                           ;incstack = 0
 17150                           ; Regs used in _SPI2_Exchange8bit: [wreg]
 17151                           ;SPI2_Exchange8bit@data stored from wreg
 17152  1248  0020               	movlb	0	; select bank0
 17153  1249  00A0               	movwf	SPI2_Exchange8bit@data
 17154                           
 17155                           ;mcc_generated_files/spi2.c: 79: uint8_t SPI2_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 80: {;mcc_generated_files/spi2.c: 82:     SSP2CON1bits.WCOL = 0;
 17156  124A  0024               	movlb	4	; select bank4
 17157  124B  139D               	bcf	29,7	;volatile
 17158                           
 17159                           ;mcc_generated_files/spi2.c: 84:     SSP2BUF = data;
 17160  124C  0020               	movlb	0	; select bank0
 17161  124D  0820               	movf	SPI2_Exchange8bit@data,w
 17162  124E  0024               	movlb	4	; select bank4
 17163  124F  0099               	movwf	25	;volatile
 17164  1250                     l554:	
 17165                           ;mcc_generated_files/spi2.c: 89:     }
 17166                           
 17167                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 17168                           
 17169                           
 17170                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
 17171  1250  0024               	movlb	4	; select bank4
 17172  1251  181C               	btfsc	28,0	;volatile
 17173  1252  2A55               	goto	l7073
 17174  1253  0064               	clrwdt	;# 
 17175  1254  2A50               	goto	l554
 17176  1255                     l7073:	
 17177                           
 17178                           ;mcc_generated_files/spi2.c: 91:     return (SSP2BUF);
 17179  1255  0819               	movf	25,w	;volatile
 17180  1256  0008               	return
 17181  1257                     __end_of_SPI2_Exchange8bit:	
 17182                           
 17183                           	psect	intentry
 17184  0004                     __pintentry:	
 17185 ;; *************** function _INTERRUPT_InterruptManager *****************
 17186 ;; Defined at:
 17187 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17188 ;; Parameters:    Size  Location     Type
 17189 ;;		None
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;		None
 17192 ;; Return value:  Size  Location     Type
 17193 ;;                  1    wreg      void 
 17194 ;; Registers used:
 17195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17196 ;; Tracked objects:
 17197 ;;		On entry : 0/0
 17198 ;;		On exit  : 0/0
 17199 ;;		Unchanged: 0/0
 17200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17205 ;;Total ram usage:        0 bytes
 17206 ;; Hardware stack levels used:    1
 17207 ;; Hardware stack levels required when called:    4
 17208 ;; This function calls:
 17209 ;;		Absolute function
 17210 ;;		_EUSART_Receive_ISR
 17211 ;;		_EUSART_Transmit_ISR
 17212 ;;		_PIN_MANAGER_IOC
 17213 ;;		_i2c_ISR
 17214 ;;		_i2c_busCollisionISR
 17215 ;; This function is called by:
 17216 ;;		Interrupt level 1
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220  0004                     _INTERRUPT_InterruptManager:	
 17221                           
 17222                           ;incstack = 0
 17223  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17224                           
 17225                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17226  0005  3180               	pagesel	$
 17227                           
 17228                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 17229  0006  0021               	movlb	1	; select bank1
 17230  0007  1E10               	btfss	16,4	;volatile
 17231  0008  2810               	goto	i1l249
 17232  0009  0020               	movlb	0	; select bank0
 17233  000A  1E10               	btfss	16,4	;volatile
 17234  000B  2810               	goto	i1l249
 17235                           
 17236                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 17237  000C  3190  20E8  3180   	fcall	_PIN_MANAGER_IOC
 17238                           
 17239                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17240  000F  2845               	goto	i1l261
 17241  0010                     i1l249:	
 17242                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17243                           
 17244  0010  1F0B               	btfss	11,6	;volatile
 17245  0011  2845               	goto	i1l261
 17246                           
 17247                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17248  0012  0021               	movlb	1	; select bank1
 17249  0013  1E11               	btfss	17,4	;volatile
 17250  0014  281F               	goto	i1l252
 17251  0015  0020               	movlb	0	; select bank0
 17252  0016  1E11               	btfss	17,4	;volatile
 17253  0017  281F               	goto	i1l252
 17254                           
 17255                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
 17256  0018  0024               	movlb	4	; select bank4
 17257  0019  086D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+512),w
 17258  001A  008A               	movwf	10
 17259  001B  086C               	movf	_EUSART_TxDefaultInterruptHandler^(0+512),w
 17260  001C  000A               	callw
 17261  001D  3180               	pagesel	$
 17262                           
 17263                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17264  001E  2845               	goto	i1l261
 17265  001F                     i1l252:	
 17266                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 17267                           
 17268  001F  0021               	movlb	1	; select bank1
 17269  0020  1E91               	btfss	17,5	;volatile
 17270  0021  282C               	goto	i1l254
 17271  0022  0020               	movlb	0	; select bank0
 17272  0023  1E91               	btfss	17,5	;volatile
 17273  0024  282C               	goto	i1l254
 17274                           
 17275                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
 17276  0025  0024               	movlb	4	; select bank4
 17277  0026  086B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512),w
 17278  0027  008A               	movwf	10
 17279  0028  086A               	movf	_EUSART_RxDefaultInterruptHandler^(0+512),w
 17280  0029  000A               	callw
 17281  002A  3180               	pagesel	$
 17282                           
 17283                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17284  002B  2845               	goto	i1l261
 17285  002C                     i1l254:	
 17286                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
 17287                           
 17288  002C  0021               	movlb	1	; select bank1
 17289  002D  1D11               	btfss	17,2	;volatile
 17290  002E  2839               	goto	i1l256
 17291  002F  0020               	movlb	0	; select bank0
 17292  0030  1D11               	btfss	17,2	;volatile
 17293  0031  2839               	goto	i1l256
 17294                           
 17295                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_busCollisionISR();
 17296  0032  0023               	movlb	3	; select bank3
 17297  0033  0866               	movf	(_i2c1_driver_busCollisionISR+1)^(0+384),w
 17298  0034  008A               	movwf	10
 17299  0035  0865               	movf	_i2c1_driver_busCollisionISR^(0+384),w
 17300  0036  000A               	callw
 17301  0037  3180               	pagesel	$
 17302                           
 17303                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17304  0038  2845               	goto	i1l261
 17305  0039                     i1l256:	
 17306                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 17307                           
 17308  0039  0021               	movlb	1	; select bank1
 17309  003A  1D91               	btfss	17,3	;volatile
 17310  003B  2845               	goto	i1l261
 17311  003C  0020               	movlb	0	; select bank0
 17312  003D  1D91               	btfss	17,3	;volatile
 17313  003E  2845               	goto	i1l261
 17314                           
 17315                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_i2cISR();
 17316  003F  0023               	movlb	3	; select bank3
 17317  0040  0864               	movf	(_i2c1_driver_i2cISR+1)^(0+384),w
 17318  0041  008A               	movwf	10
 17319  0042  0863               	movf	_i2c1_driver_i2cISR^(0+384),w
 17320  0043  000A               	callw
 17321  0044  3180               	pagesel	$
 17322  0045                     i1l261:	
 17323                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17324                           
 17325  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17326  0046  0009               	retfie
 17327  0047                     __end_of_INTERRUPT_InterruptManager:	
 17328                           
 17329                           	psect	text89
 17330  1106                     __ptext89:	
 17331 ;; *************** function _i2c_busCollisionISR *****************
 17332 ;; Defined at:
 17333 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;		None
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;		None
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  1    wreg      void 
 17340 ;; Registers used:
 17341 ;;		status,2, status,0, pclath, cstack
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;Total ram usage:        0 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; Hardware stack levels required when called:    1
 17354 ;; This function calls:
 17355 ;;		_i2c1_driver_clearBusCollision
 17356 ;; This function is called by:
 17357 ;;		_i2c_open
 17358 ;;		_INTERRUPT_InterruptManager
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           
 17363                           ;psect for function _i2c_busCollisionISR
 17364  1106                     _i2c_busCollisionISR:	
 17365                           
 17366                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17367                           
 17368                           ;incstack = 0
 17369                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17370  1106  3191  2103         	fcall	_i2c1_driver_clearBusCollision
 17371  1108  0008               	return
 17372  1109                     __end_of_i2c_busCollisionISR:	
 17373                           
 17374                           	psect	text90
 17375  1103                     __ptext90:	
 17376 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17377 ;; Defined at:
 17378 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;		None
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;		None
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      void 
 17385 ;; Registers used:
 17386 ;;		None
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;Total ram usage:        0 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_i2c_busCollisionISR
 17402 ;; This function uses a non-reentrant model
 17403 ;;
 17404                           
 17405                           
 17406                           ;psect for function _i2c1_driver_clearBusCollision
 17407  1103                     _i2c1_driver_clearBusCollision:	
 17408                           
 17409                           ;mcc_generated_files/i2c1_driver.c: 255:     PIR1bits.BCL1IF = 0;
 17410                           
 17411                           ;incstack = 0
 17412                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17413  1103  0020               	movlb	0	; select bank0
 17414  1104  1111               	bcf	17,2	;volatile
 17415  1105  0008               	return
 17416  1106                     __end_of_i2c1_driver_clearBusCollision:	
 17417                           
 17418                           	psect	text91
 17419  1479                     __ptext91:	
 17420 ;; *************** function _i2c_ISR *****************
 17421 ;; Defined at:
 17422 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;		None
 17425 ;; Auto vars:     Size  Location     Type
 17426 ;;		None
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  1    wreg      void 
 17429 ;; Registers used:
 17430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17440 ;;Total ram usage:        3 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; Hardware stack levels required when called:    3
 17443 ;; This function calls:
 17444 ;;		_do_I2C_DO_ACK
 17445 ;;		_do_I2C_DO_ADDRESS_NACK
 17446 ;;		_do_I2C_DO_NACK_RESTART
 17447 ;;		_do_I2C_DO_NACK_STOP
 17448 ;;		_do_I2C_IDLE
 17449 ;;		_do_I2C_RCEN
 17450 ;;		_do_I2C_RESET
 17451 ;;		_do_I2C_RX
 17452 ;;		_do_I2C_SEND_ADR_READ
 17453 ;;		_do_I2C_SEND_ADR_WRITE
 17454 ;;		_do_I2C_SEND_RESTART
 17455 ;;		_do_I2C_SEND_RESTART_READ
 17456 ;;		_do_I2C_SEND_RESTART_WRITE
 17457 ;;		_do_I2C_SEND_STOP
 17458 ;;		_do_I2C_TX
 17459 ;;		_do_I2C_TX_EMPTY
 17460 ;;		_i2c1_driver_isNACK
 17461 ;;		_mssp1_clearIRQ
 17462 ;; This function is called by:
 17463 ;;		_i2c_open
 17464 ;;		_i2c_poller
 17465 ;;		_INTERRUPT_InterruptManager
 17466 ;; This function uses a non-reentrant model
 17467 ;;
 17468                           
 17469                           
 17470                           ;psect for function _i2c_ISR
 17471  1479                     _i2c_ISR:	
 17472                           
 17473                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17474                           
 17475                           ;incstack = 0
 17476                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17477  1479  3191  2100  3194   	fcall	_mssp1_clearIRQ
 17478                           
 17479                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17480  147C  0023               	movlb	3	; select bank3
 17481  147D  1DA0               	btfss	_i2c_status^(0+384),3
 17482  147E  2C89               	goto	i1l6079
 17483  147F  3191  219F  3194   	fcall	_i2c1_driver_isNACK
 17484  1482  1C03               	btfss	3,0
 17485  1483  2C89               	goto	i1l6079
 17486                           
 17487                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17488  1484  300F               	movlw	15
 17489  1485  00F9               	movwf	??_i2c_ISR
 17490  1486  0879               	movf	??_i2c_ISR,w
 17491  1487  0023               	movlb	3	; select bank3
 17492  1488  00A9               	movwf	(_i2c_status^(0+384)+9)
 17493  1489                     i1l6079:	
 17494                           
 17495                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17496  1489  0023               	movlb	3	; select bank3
 17497  148A  0829               	movf	(_i2c_status^(0+384)+9),w
 17498  148B  00F9               	movwf	??_i2c_ISR
 17499  148C  01FA               	clrf	??_i2c_ISR+1
 17500  148D  35F9               	lslf	??_i2c_ISR,f
 17501  148E  0DFA               	rlf	??_i2c_ISR+1,f
 17502  148F  3000               	movlw	low (_fsmStateTable| (0+32768))
 17503  1490  0779               	addwf	??_i2c_ISR,w
 17504  1491  0084               	movwf	4
 17505  1492  3098               	movlw	high (_fsmStateTable| (0+32768))
 17506  1493  3D7A               	addwfc	??_i2c_ISR+1,w
 17507  1494  0085               	movwf	5
 17508  1495  3F01               	moviw [1]fsr0
 17509  1496  008A               	movwf	10
 17510  1497  3F00               	moviw [0]fsr0
 17511  1498  000A               	callw
 17512  1499  3194               	pagesel	$
 17513  149A  00FB               	movwf	??_i2c_ISR+2
 17514  149B  087B               	movf	??_i2c_ISR+2,w
 17515  149C  0023               	movlb	3	; select bank3
 17516  149D  00A9               	movwf	(_i2c_status^(0+384)+9)
 17517  149E  0008               	return
 17518  149F                     __end_of_i2c_ISR:	
 17519                           
 17520                           	psect	text92
 17521  1100                     __ptext92:	
 17522 ;; *************** function _mssp1_clearIRQ *****************
 17523 ;; Defined at:
 17524 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;		None
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;		None
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  1    wreg      void 
 17531 ;; Registers used:
 17532 ;;		None
 17533 ;; Tracked objects:
 17534 ;;		On entry : 0/0
 17535 ;;		On exit  : 0/0
 17536 ;;		Unchanged: 0/0
 17537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17542 ;;Total ram usage:        0 bytes
 17543 ;; Hardware stack levels used:    1
 17544 ;; This function calls:
 17545 ;;		Nothing
 17546 ;; This function is called by:
 17547 ;;		_i2c_ISR
 17548 ;;		_i2c_open
 17549 ;;		_i2c_close
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           
 17554                           ;psect for function _mssp1_clearIRQ
 17555  1100                     _mssp1_clearIRQ:	
 17556                           
 17557                           ;mcc_generated_files/i2c1_driver.c: 55:         SSP1STAT = 0x00;
 17558                           
 17559                           ;incstack = 0
 17560                           ; Regs used in _mssp1_clearIRQ: []
 17561  1100  0020               	movlb	0	; select bank0
 17562  1101  1191               	bcf	17,3	;volatile
 17563  1102  0008               	return
 17564  1103                     __end_of_mssp1_clearIRQ:	
 17565                           
 17566                           	psect	text93
 17567  17BA                     __ptext93:	
 17568 ;; *************** function _do_I2C_RX *****************
 17569 ;; Defined at:
 17570 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17571 ;; Parameters:    Size  Location     Type
 17572 ;;		None
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;		None
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  1    wreg      enum E7120
 17577 ;; Registers used:
 17578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17588 ;;Total ram usage:        3 bytes
 17589 ;; Hardware stack levels used:    1
 17590 ;; Hardware stack levels required when called:    2
 17591 ;; This function calls:
 17592 ;;		_do_I2C_DO_NACK_RESTART
 17593 ;;		_do_I2C_DO_NACK_STOP
 17594 ;;		_i2c1_driver_sendACK
 17595 ;;		_returnReset
 17596 ;;		_returnStop
 17597 ;;		i1_i2c1_driver_getRXData
 17598 ;; This function is called by:
 17599 ;;		_i2c_ISR
 17600 ;; This function uses a non-reentrant model
 17601 ;;
 17602                           
 17603                           
 17604                           ;psect for function _do_I2C_RX
 17605  17BA                     _do_I2C_RX:	
 17606                           
 17607                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17608                           
 17609                           ;incstack = 0
 17610                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17611  17BA  3190  20FA  3197   	fcall	i1_i2c1_driver_getRXData
 17612  17BD  00F6               	movwf	??_do_I2C_RX
 17613  17BE  0023               	movlb	3	; select bank3
 17614  17BF  0822               	movf	(low ((_i2c_status| (0+256)+2)))^(0+128),w
 17615  17C0  0086               	movwf	6
 17616  17C1  0187               	clrf	7
 17617  17C2  0876               	movf	??_do_I2C_RX,w
 17618  17C3  0081               	movwf	1
 17619  17C4  3001               	movlw	1
 17620  17C5  00F6               	movwf	??_do_I2C_RX
 17621  17C6  0876               	movf	??_do_I2C_RX,w
 17622  17C7  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^(0+128),f
 17623                           
 17624                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17625  17C8  3001               	movlw	1
 17626  17C9  02A3               	subwf	(_i2c_status^(0+384)+3),f
 17627  17CA  3000               	movlw	0
 17628  17CB  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 17629  17CC  0823               	movf	(_i2c_status^(0+384)+3),w
 17630  17CD  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 17631  17CE  1903               	btfsc	3,2
 17632  17CF  2FD4               	goto	i1l173
 17633                           
 17634                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17635  17D0  3191  212B         	fcall	_i2c1_driver_sendACK
 17636                           
 17637                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17638  17D2  3005               	movlw	5
 17639  17D3  0008               	return
 17640  17D4                     i1l173:	
 17641                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17642                           
 17643                           
 17644                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17645  17D4  1520               	bsf	_i2c_status^(0+384),2
 17646                           
 17647                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17648  17D5  2FDC               	goto	i1l5555
 17649  17D6                     i1l5545:	
 17650                           
 17651                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17652  17D6  3191  214B         	fcall	_do_I2C_DO_NACK_RESTART
 17653  17D8  0008               	return
 17654  17D9                     i1l5549:	
 17655                           
 17656                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17657  17D9  3191  2147         	fcall	_do_I2C_DO_NACK_STOP
 17658  17DB  0008               	return
 17659  17DC                     i1l5555:	
 17660  17DC  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 17661  17DD  00F6               	movwf	??_do_I2C_RX
 17662  17DE  0876               	movf	??_do_I2C_RX,w
 17663  17DF  00F6               	movwf	returnReset@p
 17664  17E0  300B               	movlw	11
 17665  17E1  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17666  17E2  0086               	movwf	6
 17667  17E3  3001               	movlw	1	; select bank3/4
 17668  17E4  0087               	movwf	7
 17669  17E5  3F41               	moviw [1]fsr1
 17670  17E6  008A               	movwf	10
 17671  17E7  3F40               	moviw [0]fsr1
 17672  17E8  000A               	callw
 17673  17E9  3197               	pagesel	$
 17674  17EA  00F7               	movwf	??_do_I2C_RX+1
 17675  17EB  01F8               	clrf	??_do_I2C_RX+2
 17676                           
 17677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17678                           ; Switch size 1, requested type "simple"
 17679                           ; Number of cases is 1, Range of values is 0 to 0
 17680                           ; switch strategies available:
 17681                           ; Name         Instructions Cycles
 17682                           ; simple_byte            4     3 (average)
 17683                           ; direct_byte            8     6 (fixed)
 17684                           ; jumptable            260     6 (fixed)
 17685                           ;	Chosen strategy is simple_byte
 17686  17EC  0878               	movf	??_do_I2C_RX+2,w
 17687  17ED  3A00               	xorlw	0	; case 0
 17688  17EE  1903               	skipnz
 17689  17EF  2FF1               	goto	i1l8589
 17690  17F0  2FD9               	goto	i1l5549
 17691  17F1                     i1l8589:	
 17692                           
 17693                           ; Switch size 1, requested type "simple"
 17694                           ; Number of cases is 4, Range of values is 1 to 4
 17695                           ; switch strategies available:
 17696                           ; Name         Instructions Cycles
 17697                           ; simple_byte           13     7 (average)
 17698                           ; direct_byte           17     9 (fixed)
 17699                           ; jumptable            263     9 (fixed)
 17700                           ;	Chosen strategy is simple_byte
 17701  17F1  0877               	movf	??_do_I2C_RX+1,w
 17702  17F2  3A01               	xorlw	1	; case 1
 17703  17F3  1903               	skipnz
 17704  17F4  2FD9               	goto	i1l5549
 17705  17F5  3A03               	xorlw	3	; case 2
 17706  17F6  1903               	skipnz
 17707  17F7  2FD6               	goto	i1l5545
 17708  17F8  3A01               	xorlw	1	; case 3
 17709  17F9  1903               	skipnz
 17710  17FA  2FD6               	goto	i1l5545
 17711  17FB  3A07               	xorlw	7	; case 4
 17712  17FC  1903               	skipnz
 17713  17FD  2FD9               	goto	i1l5549
 17714  17FE  2FD9               	goto	i1l5549
 17715  17FF  0008               	return
 17716  1800                     __end_of_do_I2C_RX:	
 17717                           
 17718                           	psect	text94
 17719  08BB                     __ptext94:	
 17720 ;; *************** function _do_I2C_TX *****************
 17721 ;; Defined at:
 17722 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;		None
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;		None
 17727 ;; Return value:  Size  Location     Type
 17728 ;;                  1    wreg      enum E7120
 17729 ;; Registers used:
 17730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17731 ;; Tracked objects:
 17732 ;;		On entry : 0/0
 17733 ;;		On exit  : 0/0
 17734 ;;		Unchanged: 0/0
 17735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;Total ram usage:        3 bytes
 17741 ;; Hardware stack levels used:    1
 17742 ;; Hardware stack levels required when called:    2
 17743 ;; This function calls:
 17744 ;;		_do_I2C_SEND_RESTART_READ
 17745 ;;		_do_I2C_SEND_RESTART_WRITE
 17746 ;;		_do_I2C_SEND_STOP
 17747 ;;		_i2c1_driver_isNACK
 17748 ;;		_returnReset
 17749 ;;		_returnStop
 17750 ;;		i1_i2c1_driver_TXData
 17751 ;; This function is called by:
 17752 ;;		_i2c_ISR
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           
 17757                           ;psect for function _do_I2C_TX
 17758  08BB                     _do_I2C_TX:	
 17759                           
 17760                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17761                           
 17762                           ;incstack = 0
 17763                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17764  08BB  3191  219F  3188   	fcall	_i2c1_driver_isNACK
 17765  08BE  1803               	btfsc	3,0
 17766  08BF  28CA               	goto	i1l5515
 17767  08C0  28EE               	goto	i1l157
 17768  08C1                     i1l5501:	
 17769                           
 17770                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17771  08C1  3191  2133         	fcall	_do_I2C_SEND_RESTART_READ
 17772  08C3  0008               	return
 17773  08C4                     i1l5505:	
 17774                           
 17775                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17776  08C4  3191  2137         	fcall	_do_I2C_SEND_RESTART_WRITE
 17777  08C6  0008               	return
 17778  08C7                     i1l5509:	
 17779                           
 17780                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17781  08C7  3191  213F         	fcall	_do_I2C_SEND_STOP
 17782  08C9  0008               	return
 17783  08CA                     i1l5515:	
 17784  08CA  0023               	movlb	3	; select bank3
 17785  08CB  083A               	movf	(low ((_i2c_status| (0+256)+26)))^(0+128),w
 17786  08CC  00F6               	movwf	??_do_I2C_TX
 17787  08CD  0876               	movf	??_do_I2C_TX,w
 17788  08CE  00F6               	movwf	returnReset@p
 17789  08CF  3011               	movlw	17
 17790  08D0  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17791  08D1  0086               	movwf	6
 17792  08D2  3001               	movlw	1	; select bank3/4
 17793  08D3  0087               	movwf	7
 17794  08D4  3F41               	moviw [1]fsr1
 17795  08D5  008A               	movwf	10
 17796  08D6  3F40               	moviw [0]fsr1
 17797  08D7  000A               	callw
 17798  08D8  3188               	pagesel	$
 17799  08D9  00F7               	movwf	??_do_I2C_TX+1
 17800  08DA  01F8               	clrf	??_do_I2C_TX+2
 17801                           
 17802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17803                           ; Switch size 1, requested type "simple"
 17804                           ; Number of cases is 1, Range of values is 0 to 0
 17805                           ; switch strategies available:
 17806                           ; Name         Instructions Cycles
 17807                           ; simple_byte            4     3 (average)
 17808                           ; direct_byte            8     6 (fixed)
 17809                           ; jumptable            260     6 (fixed)
 17810                           ;	Chosen strategy is simple_byte
 17811  08DB  0878               	movf	??_do_I2C_TX+2,w
 17812  08DC  3A00               	xorlw	0	; case 0
 17813  08DD  1903               	skipnz
 17814  08DE  28E0               	goto	i1l8591
 17815  08DF  28C7               	goto	i1l5509
 17816  08E0                     i1l8591:	
 17817                           
 17818                           ; Switch size 1, requested type "simple"
 17819                           ; Number of cases is 4, Range of values is 1 to 4
 17820                           ; switch strategies available:
 17821                           ; Name         Instructions Cycles
 17822                           ; simple_byte           13     7 (average)
 17823                           ; direct_byte           17     9 (fixed)
 17824                           ; jumptable            263     9 (fixed)
 17825                           ;	Chosen strategy is simple_byte
 17826  08E0  0877               	movf	??_do_I2C_TX+1,w
 17827  08E1  3A01               	xorlw	1	; case 1
 17828  08E2  1903               	skipnz
 17829  08E3  28C7               	goto	i1l5509
 17830  08E4  3A03               	xorlw	3	; case 2
 17831  08E5  1903               	skipnz
 17832  08E6  28C1               	goto	i1l5501
 17833  08E7  3A01               	xorlw	1	; case 3
 17834  08E8  1903               	skipnz
 17835  08E9  28C4               	goto	i1l5505
 17836  08EA  3A07               	xorlw	7	; case 4
 17837  08EB  1903               	skipnz
 17838  08EC  28C7               	goto	i1l5509
 17839  08ED  28C7               	goto	i1l5509
 17840  08EE                     i1l157:	
 17841                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17842                           
 17843                           
 17844                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17845  08EE  0023               	movlb	3	; select bank3
 17846  08EF  11A0               	bcf	_i2c_status^(0+384),3
 17847                           
 17848                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17849  08F0  3002               	movlw	2
 17850  08F1  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17851  08F2  0086               	movwf	6
 17852  08F3  3001               	movlw	1	; select bank3/4
 17853  08F4  0087               	movwf	7
 17854  08F5  3F40               	moviw [0]fsr1
 17855  08F6  0084               	movwf	4
 17856  08F7  0185               	clrf	5
 17857  08F8  0A81               	incf	1,f
 17858  08F9  0800               	movf	0,w
 17859  08FA  3191  215B  3188   	fcall	i1_i2c1_driver_TXData
 17860                           
 17861                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17862  08FD  3001               	movlw	1
 17863  08FE  0023               	movlb	3	; select bank3
 17864  08FF  02A3               	subwf	(_i2c_status^(0+384)+3),f
 17865  0900  3000               	movlw	0
 17866  0901  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 17867  0902  0823               	movf	(_i2c_status^(0+384)+3),w
 17868  0903  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 17869  0904  1D03               	btfss	3,2
 17870  0905  2908               	goto	i1l5523
 17871  0906  3006               	movlw	6
 17872  0907  0008               	return
 17873  0908                     i1l5523:	
 17874  0908  3003               	movlw	3
 17875  0909  0008               	return
 17876  090A                     __end_of_do_I2C_TX:	
 17877                           
 17878                           	psect	text95
 17879  158A                     __ptext95:	
 17880 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17881 ;; Defined at:
 17882 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17883 ;; Parameters:    Size  Location     Type
 17884 ;;		None
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;		None
 17887 ;; Return value:  Size  Location     Type
 17888 ;;                  1    wreg      enum E7120
 17889 ;; Registers used:
 17890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17891 ;; Tracked objects:
 17892 ;;		On entry : 0/0
 17893 ;;		On exit  : 0/0
 17894 ;;		Unchanged: 0/0
 17895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;Total ram usage:        3 bytes
 17901 ;; Hardware stack levels used:    1
 17902 ;; Hardware stack levels required when called:    2
 17903 ;; This function calls:
 17904 ;;		_do_I2C_SEND_RESTART
 17905 ;;		_do_I2C_SEND_STOP
 17906 ;;		_returnReset
 17907 ;;		_returnStop
 17908 ;; This function is called by:
 17909 ;;		_i2c_ISR
 17910 ;; This function uses a non-reentrant model
 17911 ;;
 17912                           
 17913                           
 17914                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 17915  158A                     _do_I2C_DO_ADDRESS_NACK:	
 17916                           
 17917                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 17918                           
 17919                           ;incstack = 0
 17920                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17921  158A  0023               	movlb	3	; select bank3
 17922  158B  11A0               	bcf	_i2c_status^(0+384),3
 17923                           
 17924                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 17925  158C  3002               	movlw	2
 17926  158D  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17927  158E  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17928  158F  00AA               	movwf	(_i2c_status^(0+384)+10)
 17929                           
 17930                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 17931  1590  2D97               	goto	i1l5489
 17932  1591                     i1l5479:	
 17933                           
 17934                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 17935  1591  3191  213B         	fcall	_do_I2C_SEND_RESTART
 17936  1593  0008               	return
 17937  1594                     i1l5483:	
 17938                           
 17939                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 17940  1594  3191  213F         	fcall	_do_I2C_SEND_STOP
 17941  1596  0008               	return
 17942  1597                     i1l5489:	
 17943  1597  0839               	movf	(low ((_i2c_status| (0+256)+25)))^(0+128),w
 17944  1598  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17945  1599  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17946  159A  00F6               	movwf	returnReset@p
 17947  159B  300F               	movlw	15
 17948  159C  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17949  159D  0086               	movwf	6
 17950  159E  3001               	movlw	1	; select bank3/4
 17951  159F  0087               	movwf	7
 17952  15A0  3F41               	moviw [1]fsr1
 17953  15A1  008A               	movwf	10
 17954  15A2  3F40               	moviw [0]fsr1
 17955  15A3  000A               	callw
 17956  15A4  3195               	pagesel	$
 17957  15A5  00F7               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 17958  15A6  01F8               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 17959                           
 17960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17961                           ; Switch size 1, requested type "simple"
 17962                           ; Number of cases is 1, Range of values is 0 to 0
 17963                           ; switch strategies available:
 17964                           ; Name         Instructions Cycles
 17965                           ; simple_byte            4     3 (average)
 17966                           ; direct_byte            8     6 (fixed)
 17967                           ; jumptable            260     6 (fixed)
 17968                           ;	Chosen strategy is simple_byte
 17969  15A7  0878               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 17970  15A8  3A00               	xorlw	0	; case 0
 17971  15A9  1903               	skipnz
 17972  15AA  2DAC               	goto	i1l8593
 17973  15AB  2D94               	goto	i1l5483
 17974  15AC                     i1l8593:	
 17975                           
 17976                           ; Switch size 1, requested type "simple"
 17977                           ; Number of cases is 2, Range of values is 2 to 3
 17978                           ; switch strategies available:
 17979                           ; Name         Instructions Cycles
 17980                           ; simple_byte            7     4 (average)
 17981                           ; direct_byte           13     9 (fixed)
 17982                           ; jumptable            263     9 (fixed)
 17983                           ;	Chosen strategy is simple_byte
 17984  15AC  0877               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 17985  15AD  3A02               	xorlw	2	; case 2
 17986  15AE  1903               	skipnz
 17987  15AF  2D91               	goto	i1l5479
 17988  15B0  3A01               	xorlw	1	; case 3
 17989  15B1  1903               	skipnz
 17990  15B2  2D91               	goto	i1l5479
 17991  15B3  2D94               	goto	i1l5483
 17992  15B4  0008               	return
 17993  15B5                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 17994                           
 17995                           	psect	text96
 17996  114B                     __ptext96:	
 17997 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 17998 ;; Defined at:
 17999 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18000 ;; Parameters:    Size  Location     Type
 18001 ;;		None
 18002 ;; Auto vars:     Size  Location     Type
 18003 ;;		None
 18004 ;; Return value:  Size  Location     Type
 18005 ;;                  1    wreg      enum E7120
 18006 ;; Registers used:
 18007 ;;		wreg, status,2, status,0, pclath, cstack
 18008 ;; Tracked objects:
 18009 ;;		On entry : 0/0
 18010 ;;		On exit  : 0/0
 18011 ;;		Unchanged: 0/0
 18012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18017 ;;Total ram usage:        0 bytes
 18018 ;; Hardware stack levels used:    1
 18019 ;; Hardware stack levels required when called:    1
 18020 ;; This function calls:
 18021 ;;		i1_i2c1_driver_sendNACK
 18022 ;; This function is called by:
 18023 ;;		_do_I2C_RX
 18024 ;;		_i2c_ISR
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028                           
 18029                           ;psect for function _do_I2C_DO_NACK_RESTART
 18030  114B                     _do_I2C_DO_NACK_RESTART:	
 18031                           
 18032                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 18033                           
 18034                           ;incstack = 0
 18035                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18036  114B  3191  212F         	fcall	i1_i2c1_driver_sendNACK
 18037                           
 18038                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 18039  114D  3009               	movlw	9
 18040  114E  0008               	return
 18041  114F                     __end_of_do_I2C_DO_NACK_RESTART:	
 18042                           
 18043                           	psect	text97
 18044  1147                     __ptext97:	
 18045 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 18046 ;; Defined at:
 18047 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18048 ;; Parameters:    Size  Location     Type
 18049 ;;		None
 18050 ;; Auto vars:     Size  Location     Type
 18051 ;;		None
 18052 ;; Return value:  Size  Location     Type
 18053 ;;                  1    wreg      enum E7120
 18054 ;; Registers used:
 18055 ;;		wreg, status,2, status,0, pclath, cstack
 18056 ;; Tracked objects:
 18057 ;;		On entry : 0/0
 18058 ;;		On exit  : 0/0
 18059 ;;		Unchanged: 0/0
 18060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18065 ;;Total ram usage:        0 bytes
 18066 ;; Hardware stack levels used:    1
 18067 ;; Hardware stack levels required when called:    1
 18068 ;; This function calls:
 18069 ;;		i1_i2c1_driver_sendNACK
 18070 ;; This function is called by:
 18071 ;;		_do_I2C_RX
 18072 ;;		_i2c_ISR
 18073 ;; This function uses a non-reentrant model
 18074 ;;
 18075                           
 18076                           
 18077                           ;psect for function _do_I2C_DO_NACK_STOP
 18078  1147                     _do_I2C_DO_NACK_STOP:	
 18079                           
 18080                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 18081                           
 18082                           ;incstack = 0
 18083                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18084  1147  3191  212F         	fcall	i1_i2c1_driver_sendNACK
 18085                           
 18086                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 18087  1149  300A               	movlw	10
 18088  114A  0008               	return
 18089  114B                     __end_of_do_I2C_DO_NACK_STOP:	
 18090                           
 18091                           	psect	text98
 18092  1143                     __ptext98:	
 18093 ;; *************** function _do_I2C_DO_ACK *****************
 18094 ;; Defined at:
 18095 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;		None
 18098 ;; Auto vars:     Size  Location     Type
 18099 ;;		None
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  1    wreg      enum E7120
 18102 ;; Registers used:
 18103 ;;		wreg, status,2, status,0, pclath, cstack
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/0
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18113 ;;Total ram usage:        0 bytes
 18114 ;; Hardware stack levels used:    1
 18115 ;; Hardware stack levels required when called:    1
 18116 ;; This function calls:
 18117 ;;		_i2c1_driver_sendACK
 18118 ;; This function is called by:
 18119 ;;		_i2c_ISR
 18120 ;; This function uses a non-reentrant model
 18121 ;;
 18122                           
 18123                           
 18124                           ;psect for function _do_I2C_DO_ACK
 18125  1143                     _do_I2C_DO_ACK:	
 18126                           
 18127                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 18128                           
 18129                           ;incstack = 0
 18130                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18131  1143  3191  212B         	fcall	_i2c1_driver_sendACK
 18132                           
 18133                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 18134  1145  3005               	movlw	5
 18135  1146  0008               	return
 18136  1147                     __end_of_do_I2C_DO_ACK:	
 18137                           
 18138                           	psect	text99
 18139  1165                     __ptext99:	
 18140 ;; *************** function _do_I2C_RCEN *****************
 18141 ;; Defined at:
 18142 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18143 ;; Parameters:    Size  Location     Type
 18144 ;;		None
 18145 ;; Auto vars:     Size  Location     Type
 18146 ;;		None
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  1    wreg      enum E7120
 18149 ;; Registers used:
 18150 ;;		wreg, status,2, status,0, pclath, cstack
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18160 ;;Total ram usage:        0 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:    1
 18163 ;; This function calls:
 18164 ;;		i1_i2c1_driver_startRX
 18165 ;; This function is called by:
 18166 ;;		_i2c_ISR
 18167 ;; This function uses a non-reentrant model
 18168 ;;
 18169                           
 18170                           
 18171                           ;psect for function _do_I2C_RCEN
 18172  1165                     _do_I2C_RCEN:	
 18173                           
 18174                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 18175                           
 18176                           ;incstack = 0
 18177                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18178  1165  0023               	movlb	3	; select bank3
 18179  1166  11A0               	bcf	_i2c_status^(0+384),3
 18180                           
 18181                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18182  1167  3190  20F7         	fcall	i1_i2c1_driver_startRX
 18183                           
 18184                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18185  1169  3004               	movlw	4
 18186  116A  0008               	return
 18187  116B                     __end_of_do_I2C_RCEN:	
 18188                           
 18189                           	psect	text100
 18190  118A                     __ptext100:	
 18191 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18192 ;; Defined at:
 18193 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18194 ;; Parameters:    Size  Location     Type
 18195 ;;		None
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;		None
 18198 ;; Return value:  Size  Location     Type
 18199 ;;                  1    wreg      enum E7120
 18200 ;; Registers used:
 18201 ;;		wreg, status,2, status,0, pclath, cstack
 18202 ;; Tracked objects:
 18203 ;;		On entry : 0/0
 18204 ;;		On exit  : 0/0
 18205 ;;		Unchanged: 0/0
 18206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18211 ;;Total ram usage:        0 bytes
 18212 ;; Hardware stack levels used:    1
 18213 ;; Hardware stack levels required when called:    1
 18214 ;; This function calls:
 18215 ;;		i1_i2c1_driver_TXData
 18216 ;; This function is called by:
 18217 ;;		_i2c_ISR
 18218 ;; This function uses a non-reentrant model
 18219 ;;
 18220                           
 18221                           
 18222                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18223  118A                     _do_I2C_SEND_ADR_WRITE:	
 18224                           
 18225                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18226                           
 18227                           ;incstack = 0
 18228                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18229  118A  0023               	movlb	3	; select bank3
 18230  118B  15A0               	bsf	_i2c_status^(0+384),3
 18231                           
 18232                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18233  118C  3521               	lslf	(_i2c_status^(0+384)+1),w
 18234  118D  3191  215B         	fcall	i1_i2c1_driver_TXData
 18235                           
 18236                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18237  118F  3003               	movlw	3
 18238  1190  0008               	return
 18239  1191                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18240                           
 18241                           	psect	text101
 18242  11A7                     __ptext101:	
 18243 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18244 ;; Defined at:
 18245 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18246 ;; Parameters:    Size  Location     Type
 18247 ;;		None
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;		None
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  1    wreg      enum E7120
 18252 ;; Registers used:
 18253 ;;		wreg, status,2, status,0, pclath, cstack
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 0/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18263 ;;Total ram usage:        0 bytes
 18264 ;; Hardware stack levels used:    1
 18265 ;; Hardware stack levels required when called:    1
 18266 ;; This function calls:
 18267 ;;		i1_i2c1_driver_TXData
 18268 ;; This function is called by:
 18269 ;;		_i2c_ISR
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           
 18274                           ;psect for function _do_I2C_SEND_ADR_READ
 18275  11A7                     _do_I2C_SEND_ADR_READ:	
 18276                           
 18277                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18278                           
 18279                           ;incstack = 0
 18280                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18281  11A7  0023               	movlb	3	; select bank3
 18282  11A8  15A0               	bsf	_i2c_status^(0+384),3
 18283                           
 18284                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18285  11A9  1403               	setc
 18286  11AA  0D21               	rlf	(_i2c_status^(0+384)+1),w
 18287  11AB  3191  215B         	fcall	i1_i2c1_driver_TXData
 18288                           
 18289                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18290  11AD  3005               	movlw	5
 18291  11AE  0008               	return
 18292  11AF                     __end_of_do_I2C_SEND_ADR_READ:	
 18293                           
 18294                           	psect	text102
 18295  113F                     __ptext102:	
 18296 ;; *************** function _do_I2C_SEND_STOP *****************
 18297 ;; Defined at:
 18298 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18299 ;; Parameters:    Size  Location     Type
 18300 ;;		None
 18301 ;; Auto vars:     Size  Location     Type
 18302 ;;		None
 18303 ;; Return value:  Size  Location     Type
 18304 ;;                  1    wreg      enum E7120
 18305 ;; Registers used:
 18306 ;;		wreg, status,2, status,0, pclath, cstack
 18307 ;; Tracked objects:
 18308 ;;		On entry : 0/0
 18309 ;;		On exit  : 0/0
 18310 ;;		Unchanged: 0/0
 18311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;Total ram usage:        0 bytes
 18317 ;; Hardware stack levels used:    1
 18318 ;; Hardware stack levels required when called:    1
 18319 ;; This function calls:
 18320 ;;		i1_i2c1_driver_stop
 18321 ;; This function is called by:
 18322 ;;		_do_I2C_DO_ADDRESS_NACK
 18323 ;;		_do_I2C_TX
 18324 ;;		_do_I2C_TX_EMPTY
 18325 ;;		_i2c_ISR
 18326 ;; This function uses a non-reentrant model
 18327 ;;
 18328                           
 18329                           
 18330                           ;psect for function _do_I2C_SEND_STOP
 18331  113F                     _do_I2C_SEND_STOP:	
 18332                           
 18333                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18334                           
 18335                           ;incstack = 0
 18336                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18337  113F  3190  20F4         	fcall	i1_i2c1_driver_stop
 18338                           
 18339                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18340  1141  3000               	movlw	0
 18341  1142  0008               	return
 18342  1143                     __end_of_do_I2C_SEND_STOP:	
 18343                           
 18344                           	psect	text103
 18345  113B                     __ptext103:	
 18346 ;; *************** function _do_I2C_SEND_RESTART *****************
 18347 ;; Defined at:
 18348 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18349 ;; Parameters:    Size  Location     Type
 18350 ;;		None
 18351 ;; Auto vars:     Size  Location     Type
 18352 ;;		None
 18353 ;; Return value:  Size  Location     Type
 18354 ;;                  1    wreg      enum E7120
 18355 ;; Registers used:
 18356 ;;		wreg, status,2, status,0, pclath, cstack
 18357 ;; Tracked objects:
 18358 ;;		On entry : 0/0
 18359 ;;		On exit  : 0/0
 18360 ;;		Unchanged: 0/0
 18361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18366 ;;Total ram usage:        0 bytes
 18367 ;; Hardware stack levels used:    1
 18368 ;; Hardware stack levels required when called:    1
 18369 ;; This function calls:
 18370 ;;		i1_i2c1_driver_restart
 18371 ;; This function is called by:
 18372 ;;		_do_I2C_DO_ADDRESS_NACK
 18373 ;;		_do_I2C_TX_EMPTY
 18374 ;;		_i2c_ISR
 18375 ;; This function uses a non-reentrant model
 18376 ;;
 18377                           
 18378                           
 18379                           ;psect for function _do_I2C_SEND_RESTART
 18380  113B                     _do_I2C_SEND_RESTART:	
 18381                           
 18382                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18383                           
 18384                           ;incstack = 0
 18385                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18386  113B  3190  20F1         	fcall	i1_i2c1_driver_restart
 18387                           
 18388                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18389  113D  3001               	movlw	1
 18390  113E  0008               	return
 18391  113F                     __end_of_do_I2C_SEND_RESTART:	
 18392                           
 18393                           	psect	text104
 18394  1137                     __ptext104:	
 18395 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18396 ;; Defined at:
 18397 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18398 ;; Parameters:    Size  Location     Type
 18399 ;;		None
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;		None
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      enum E7120
 18404 ;; Registers used:
 18405 ;;		wreg, status,2, status,0, pclath, cstack
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;Total ram usage:        0 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:    1
 18418 ;; This function calls:
 18419 ;;		i1_i2c1_driver_restart
 18420 ;; This function is called by:
 18421 ;;		_do_I2C_TX
 18422 ;;		_i2c_ISR
 18423 ;; This function uses a non-reentrant model
 18424 ;;
 18425                           
 18426                           
 18427                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18428  1137                     _do_I2C_SEND_RESTART_WRITE:	
 18429                           
 18430                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18431                           
 18432                           ;incstack = 0
 18433                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18434  1137  3190  20F1         	fcall	i1_i2c1_driver_restart
 18435                           
 18436                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18437  1139  3002               	movlw	2
 18438  113A  0008               	return
 18439  113B                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18440                           
 18441                           	psect	text105
 18442  1133                     __ptext105:	
 18443 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18444 ;; Defined at:
 18445 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;		None
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;		None
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      enum E7120
 18452 ;; Registers used:
 18453 ;;		wreg, status,2, status,0, pclath, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;Total ram usage:        0 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:    1
 18466 ;; This function calls:
 18467 ;;		i1_i2c1_driver_restart
 18468 ;; This function is called by:
 18469 ;;		_do_I2C_TX
 18470 ;;		_i2c_ISR
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           
 18475                           ;psect for function _do_I2C_SEND_RESTART_READ
 18476  1133                     _do_I2C_SEND_RESTART_READ:	
 18477                           
 18478                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18479                           
 18480                           ;incstack = 0
 18481                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18482  1133  3190  20F1         	fcall	i1_i2c1_driver_restart
 18483                           
 18484                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18485  1135  3001               	movlw	1
 18486  1136  0008               	return
 18487  1137                     __end_of_do_I2C_SEND_RESTART_READ:	
 18488                           
 18489                           	psect	text106
 18490  1160                     __ptext106:	
 18491 ;; *************** function _do_I2C_IDLE *****************
 18492 ;; Defined at:
 18493 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;		None
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  1    wreg      enum E7120
 18500 ;; Registers used:
 18501 ;;		wreg, status,2
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;Total ram usage:        0 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; This function calls:
 18514 ;;		Nothing
 18515 ;; This function is called by:
 18516 ;;		_i2c_ISR
 18517 ;; This function uses a non-reentrant model
 18518 ;;
 18519                           
 18520                           
 18521                           ;psect for function _do_I2C_IDLE
 18522  1160                     _do_I2C_IDLE:	
 18523                           
 18524                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18525                           
 18526                           ;incstack = 0
 18527                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18528  1160  0023               	movlb	3	; select bank3
 18529  1161  1020               	bcf	_i2c_status^(0+384),0
 18530                           
 18531                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18532  1162  01AA               	clrf	(_i2c_status^(0+384)+10)
 18533                           
 18534                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18535  1163  300E               	movlw	14
 18536  1164  0008               	return
 18537  1165                     __end_of_do_I2C_IDLE:	
 18538                           
 18539                           	psect	text107
 18540  1183                     __ptext107:	
 18541 ;; *************** function _do_I2C_RESET *****************
 18542 ;; Defined at:
 18543 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;		None
 18546 ;; Auto vars:     Size  Location     Type
 18547 ;;		None
 18548 ;; Return value:  Size  Location     Type
 18549 ;;                  1    wreg      enum E7120
 18550 ;; Registers used:
 18551 ;;		wreg, status,2, status,0, pclath, cstack
 18552 ;; Tracked objects:
 18553 ;;		On entry : 0/0
 18554 ;;		On exit  : 0/0
 18555 ;;		Unchanged: 0/0
 18556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18561 ;;Total ram usage:        0 bytes
 18562 ;; Hardware stack levels used:    1
 18563 ;; Hardware stack levels required when called:    1
 18564 ;; This function calls:
 18565 ;;		_i2c1_driver_resetBus
 18566 ;; This function is called by:
 18567 ;;		_i2c_ISR
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           
 18572                           ;psect for function _do_I2C_RESET
 18573  1183                     _do_I2C_RESET:	
 18574                           
 18575                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18576                           
 18577                           ;incstack = 0
 18578                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18579  1183  3190  20E9         	fcall	_i2c1_driver_resetBus
 18580                           
 18581                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18582  1185  0023               	movlb	3	; select bank3
 18583  1186  1020               	bcf	_i2c_status^(0+384),0
 18584                           
 18585                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18586  1187  01AA               	clrf	(_i2c_status^(0+384)+10)
 18587                           
 18588                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18589  1188  300E               	movlw	14
 18590  1189  0008               	return
 18591  118A                     __end_of_do_I2C_RESET:	
 18592                           
 18593                           	psect	text108
 18594  07CF                     __ptext108:	
 18595 ;; *************** function _do_I2C_TX_EMPTY *****************
 18596 ;; Defined at:
 18597 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18598 ;; Parameters:    Size  Location     Type
 18599 ;;		None
 18600 ;; Auto vars:     Size  Location     Type
 18601 ;;		None
 18602 ;; Return value:  Size  Location     Type
 18603 ;;                  1    wreg      enum E7120
 18604 ;; Registers used:
 18605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18606 ;; Tracked objects:
 18607 ;;		On entry : 0/0
 18608 ;;		On exit  : 0/0
 18609 ;;		Unchanged: 0/0
 18610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18613 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18615 ;;Total ram usage:        3 bytes
 18616 ;; Hardware stack levels used:    1
 18617 ;; Hardware stack levels required when called:    2
 18618 ;; This function calls:
 18619 ;;		_do_I2C_SEND_RESTART
 18620 ;;		_do_I2C_SEND_STOP
 18621 ;;		_mssp1_setIRQ
 18622 ;;		_returnReset
 18623 ;;		_returnStop
 18624 ;; This function is called by:
 18625 ;;		_i2c_ISR
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           
 18630                           ;psect for function _do_I2C_TX_EMPTY
 18631  07CF                     _do_I2C_TX_EMPTY:	
 18632                           
 18633                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18634                           
 18635                           ;incstack = 0
 18636                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18637  07CF  0023               	movlb	3	; select bank3
 18638  07D0  1520               	bsf	_i2c_status^(0+384),2
 18639                           
 18640                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18641  07D1  2FDC               	goto	i1l5581
 18642  07D2                     i1l5565:	
 18643                           
 18644                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18645  07D2  3191  213B         	fcall	_do_I2C_SEND_RESTART
 18646  07D4  0008               	return
 18647  07D5                     i1l5569:	
 18648                           
 18649                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18650  07D5  3190  20FD         	fcall	_mssp1_setIRQ
 18651                           
 18652                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18653  07D7  3003               	movlw	3
 18654  07D8  0008               	return
 18655  07D9                     i1l5575:	
 18656                           
 18657                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18658  07D9  3191  213F         	fcall	_do_I2C_SEND_STOP
 18659  07DB  0008               	return
 18660  07DC                     i1l5581:	
 18661  07DC  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 18662  07DD  00F6               	movwf	??_do_I2C_TX_EMPTY
 18663  07DE  0876               	movf	??_do_I2C_TX_EMPTY,w
 18664  07DF  00F6               	movwf	returnReset@p
 18665  07E0  300B               	movlw	11
 18666  07E1  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 18667  07E2  0086               	movwf	6
 18668  07E3  3001               	movlw	1	; select bank3/4
 18669  07E4  0087               	movwf	7
 18670  07E5  3F41               	moviw [1]fsr1
 18671  07E6  008A               	movwf	10
 18672  07E7  3F40               	moviw [0]fsr1
 18673  07E8  000A               	callw
 18674  07E9  3187               	pagesel	$
 18675  07EA  00F7               	movwf	??_do_I2C_TX_EMPTY+1
 18676  07EB  01F8               	clrf	??_do_I2C_TX_EMPTY+2
 18677                           
 18678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18679                           ; Switch size 1, requested type "simple"
 18680                           ; Number of cases is 1, Range of values is 0 to 0
 18681                           ; switch strategies available:
 18682                           ; Name         Instructions Cycles
 18683                           ; simple_byte            4     3 (average)
 18684                           ; direct_byte            8     6 (fixed)
 18685                           ; jumptable            260     6 (fixed)
 18686                           ;	Chosen strategy is simple_byte
 18687  07EC  0878               	movf	??_do_I2C_TX_EMPTY+2,w
 18688  07ED  3A00               	xorlw	0	; case 0
 18689  07EE  1903               	skipnz
 18690  07EF  2FF1               	goto	i1l8595
 18691  07F0  2FD9               	goto	i1l5575
 18692  07F1                     i1l8595:	
 18693                           
 18694                           ; Switch size 1, requested type "simple"
 18695                           ; Number of cases is 4, Range of values is 1 to 4
 18696                           ; switch strategies available:
 18697                           ; Name         Instructions Cycles
 18698                           ; simple_byte           13     7 (average)
 18699                           ; direct_byte           17     9 (fixed)
 18700                           ; jumptable            263     9 (fixed)
 18701                           ;	Chosen strategy is simple_byte
 18702  07F1  0877               	movf	??_do_I2C_TX_EMPTY+1,w
 18703  07F2  3A01               	xorlw	1	; case 1
 18704  07F3  1903               	skipnz
 18705  07F4  2FD9               	goto	i1l5575
 18706  07F5  3A03               	xorlw	3	; case 2
 18707  07F6  1903               	skipnz
 18708  07F7  2FD2               	goto	i1l5565
 18709  07F8  3A01               	xorlw	1	; case 3
 18710  07F9  1903               	skipnz
 18711  07FA  2FD2               	goto	i1l5565
 18712  07FB  3A07               	xorlw	7	; case 4
 18713  07FC  1903               	skipnz
 18714  07FD  2FD5               	goto	i1l5569
 18715  07FE  2FD9               	goto	i1l5575
 18716  07FF  0008               	return
 18717  0800                     __end_of_do_I2C_TX_EMPTY:	
 18718                           
 18719                           	psect	text109
 18720  10FD                     __ptext109:	
 18721 ;; *************** function _mssp1_setIRQ *****************
 18722 ;; Defined at:
 18723 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 18724 ;; Parameters:    Size  Location     Type
 18725 ;;		None
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      void 
 18730 ;; Registers used:
 18731 ;;		None
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/0
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18741 ;;Total ram usage:        0 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; This function calls:
 18744 ;;		Nothing
 18745 ;; This function is called by:
 18746 ;;		_do_I2C_TX_EMPTY
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750                           
 18751                           ;psect for function _mssp1_setIRQ
 18752  10FD                     _mssp1_setIRQ:	
 18753                           
 18754                           ;mcc_generated_files/i2c1_driver.c: 60:     }
 18755                           
 18756                           ;incstack = 0
 18757                           ; Regs used in _mssp1_setIRQ: []
 18758  10FD  0020               	movlb	0	; select bank0
 18759  10FE  1591               	bsf	17,3	;volatile
 18760  10FF  0008               	return
 18761  1100                     __end_of_mssp1_setIRQ:	
 18762                           
 18763                           	psect	text110
 18764  119F                     __ptext110:	
 18765 ;; *************** function _i2c1_driver_isNACK *****************
 18766 ;; Defined at:
 18767 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 18768 ;; Parameters:    Size  Location     Type
 18769 ;;		None
 18770 ;; Auto vars:     Size  Location     Type
 18771 ;;		None
 18772 ;; Return value:  Size  Location     Type
 18773 ;;		None               void
 18774 ;; Registers used:
 18775 ;;		wreg, status,2, status,0
 18776 ;; Tracked objects:
 18777 ;;		On entry : 0/0
 18778 ;;		On exit  : 0/0
 18779 ;;		Unchanged: 0/0
 18780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18785 ;;Total ram usage:        1 bytes
 18786 ;; Hardware stack levels used:    1
 18787 ;; This function calls:
 18788 ;;		Nothing
 18789 ;; This function is called by:
 18790 ;;		_do_I2C_TX
 18791 ;;		_i2c_ISR
 18792 ;; This function uses a non-reentrant model
 18793 ;;
 18794                           
 18795                           
 18796                           ;psect for function _i2c1_driver_isNACK
 18797  119F                     _i2c1_driver_isNACK:	
 18798                           
 18799                           ;mcc_generated_files/i2c1_driver.c: 163:     return SSP1CON2bits.ACKSTAT;
 18800                           
 18801                           ;incstack = 0
 18802                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18803  119F  0024               	movlb	4	; select bank4
 18804  11A0  0E16               	swapf	22,w	;volatile
 18805  11A1  0C89               	rrf	9,f
 18806  11A2  0C89               	rrf	9,f
 18807  11A3  3901               	andlw	1
 18808  11A4  00F6               	movwf	??_i2c1_driver_isNACK
 18809  11A5  0C76               	rrf	??_i2c1_driver_isNACK,w
 18810  11A6  0008               	return
 18811  11A7                     __end_of_i2c1_driver_isNACK:	
 18812                           
 18813                           	psect	text111
 18814  115B                     __ptext111:	
 18815 ;; *************** function i1_i2c1_driver_TXData *****************
 18816 ;; Defined at:
 18817 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 18818 ;; Parameters:    Size  Location     Type
 18819 ;;  d               1    wreg     unsigned char 
 18820 ;; Auto vars:     Size  Location     Type
 18821 ;;  d               1    0[COMMON] unsigned char 
 18822 ;; Return value:  Size  Location     Type
 18823 ;;                  1    wreg      void 
 18824 ;; Registers used:
 18825 ;;		wreg
 18826 ;; Tracked objects:
 18827 ;;		On entry : 0/0
 18828 ;;		On exit  : 0/0
 18829 ;;		Unchanged: 0/0
 18830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18835 ;;Total ram usage:        1 bytes
 18836 ;; Hardware stack levels used:    1
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_do_I2C_SEND_ADR_READ
 18841 ;;		_do_I2C_SEND_ADR_WRITE
 18842 ;;		_do_I2C_TX
 18843 ;; This function uses a non-reentrant model
 18844 ;;
 18845                           
 18846                           
 18847                           ;psect for function i1_i2c1_driver_TXData
 18848  115B                     i1_i2c1_driver_TXData:	
 18849                           
 18850                           ;incstack = 0
 18851                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 18852                           ;i1i2c1_driver_TXData@d stored from wreg
 18853  115B  00F6               	movwf	i1i2c1_driver_TXData@d
 18854                           
 18855                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
 18856  115C  0876               	movf	i1i2c1_driver_TXData@d,w
 18857  115D  0024               	movlb	4	; select bank4
 18858  115E  0091               	movwf	17	;volatile
 18859  115F  0008               	return
 18860  1160                     __end_ofi1_i2c1_driver_TXData:	
 18861                           
 18862                           	psect	text112
 18863  10FA                     __ptext112:	
 18864 ;; *************** function i1_i2c1_driver_getRXData *****************
 18865 ;; Defined at:
 18866 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 18867 ;; Parameters:    Size  Location     Type
 18868 ;;		None
 18869 ;; Auto vars:     Size  Location     Type
 18870 ;;		None
 18871 ;; Return value:  Size  Location     Type
 18872 ;;                  1    wreg      unsigned char 
 18873 ;; Registers used:
 18874 ;;		wreg
 18875 ;; Tracked objects:
 18876 ;;		On entry : 0/0
 18877 ;;		On exit  : 0/0
 18878 ;;		Unchanged: 0/0
 18879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18884 ;;Total ram usage:        0 bytes
 18885 ;; Hardware stack levels used:    1
 18886 ;; This function calls:
 18887 ;;		Nothing
 18888 ;; This function is called by:
 18889 ;;		_do_I2C_RX
 18890 ;; This function uses a non-reentrant model
 18891 ;;
 18892                           
 18893                           
 18894                           ;psect for function i1_i2c1_driver_getRXData
 18895  10FA                     i1_i2c1_driver_getRXData:	
 18896                           
 18897                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 18898                           
 18899                           ;incstack = 0
 18900                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 18901  10FA  0024               	movlb	4	; select bank4
 18902  10FB  0811               	movf	17,w	;volatile
 18903  10FC  0008               	return
 18904  10FD                     __end_ofi1_i2c1_driver_getRXData:	
 18905                           
 18906                           	psect	text113
 18907  112F                     __ptext113:	
 18908 ;; *************** function i1_i2c1_driver_sendNACK *****************
 18909 ;; Defined at:
 18910 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 18911 ;; Parameters:    Size  Location     Type
 18912 ;;		None
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;		None
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  1    wreg      void 
 18917 ;; Registers used:
 18918 ;;		None
 18919 ;; Tracked objects:
 18920 ;;		On entry : 0/0
 18921 ;;		On exit  : 0/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18928 ;;Total ram usage:        0 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; This function calls:
 18931 ;;		Nothing
 18932 ;; This function is called by:
 18933 ;;		_do_I2C_DO_NACK_STOP
 18934 ;;		_do_I2C_DO_NACK_RESTART
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           
 18939                           ;psect for function i1_i2c1_driver_sendNACK
 18940  112F                     i1_i2c1_driver_sendNACK:	
 18941                           
 18942                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 18943                           
 18944                           ;incstack = 0
 18945                           ; Regs used in i1_i2c1_driver_sendNACK: []
 18946  112F  0024               	movlb	4	; select bank4
 18947  1130  1696               	bsf	22,5	;volatile
 18948                           
 18949                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 18950  1131  1616               	bsf	22,4	;volatile
 18951  1132  0008               	return
 18952  1133                     __end_ofi1_i2c1_driver_sendNACK:	
 18953                           
 18954                           	psect	text114
 18955  10E9                     __ptext114:	
 18956 ;; *************** function _i2c1_driver_resetBus *****************
 18957 ;; Defined at:
 18958 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 18959 ;; Parameters:    Size  Location     Type
 18960 ;;		None
 18961 ;; Auto vars:     Size  Location     Type
 18962 ;;		None
 18963 ;; Return value:  Size  Location     Type
 18964 ;;                  1    wreg      void 
 18965 ;; Registers used:
 18966 ;;		None
 18967 ;; Tracked objects:
 18968 ;;		On entry : 0/0
 18969 ;;		On exit  : 0/0
 18970 ;;		Unchanged: 0/0
 18971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18976 ;;Total ram usage:        0 bytes
 18977 ;; Hardware stack levels used:    1
 18978 ;; This function calls:
 18979 ;;		Nothing
 18980 ;; This function is called by:
 18981 ;;		_do_I2C_RESET
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           
 18986                           ;psect for function _i2c1_driver_resetBus
 18987  10E9                     _i2c1_driver_resetBus:	
 18988                           
 18989                           ;incstack = 0
 18990                           ; Regs used in _i2c1_driver_resetBus: []
 18991  10E9  0008               	return
 18992  10EA                     __end_of_i2c1_driver_resetBus:	
 18993                           
 18994                           	psect	text115
 18995  10F7                     __ptext115:	
 18996 ;; *************** function i1_i2c1_driver_startRX *****************
 18997 ;; Defined at:
 18998 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 18999 ;; Parameters:    Size  Location     Type
 19000 ;;		None
 19001 ;; Auto vars:     Size  Location     Type
 19002 ;;		None
 19003 ;; Return value:  Size  Location     Type
 19004 ;;                  1    wreg      void 
 19005 ;; Registers used:
 19006 ;;		None
 19007 ;; Tracked objects:
 19008 ;;		On entry : 0/0
 19009 ;;		On exit  : 0/0
 19010 ;;		Unchanged: 0/0
 19011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19016 ;;Total ram usage:        0 bytes
 19017 ;; Hardware stack levels used:    1
 19018 ;; This function calls:
 19019 ;;		Nothing
 19020 ;; This function is called by:
 19021 ;;		_do_I2C_RCEN
 19022 ;; This function uses a non-reentrant model
 19023 ;;
 19024                           
 19025                           
 19026                           ;psect for function i1_i2c1_driver_startRX
 19027  10F7                     i1_i2c1_driver_startRX:	
 19028                           
 19029                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 19030                           
 19031                           ;incstack = 0
 19032                           ; Regs used in i1_i2c1_driver_startRX: []
 19033  10F7  0024               	movlb	4	; select bank4
 19034  10F8  1596               	bsf	22,3	;volatile
 19035  10F9  0008               	return
 19036  10FA                     __end_ofi1_i2c1_driver_startRX:	
 19037                           
 19038                           	psect	text116
 19039  10EC                     __ptext116:	
 19040 ;; *************** function _returnReset *****************
 19041 ;; Defined at:
 19042 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19043 ;; Parameters:    Size  Location     Type
 19044 ;;  p               1    0[COMMON] PTR void 
 19045 ;;		 -> NULL(0), 
 19046 ;; Auto vars:     Size  Location     Type
 19047 ;;		None
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  1    wreg      enum E6966
 19050 ;; Registers used:
 19051 ;;		wreg
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19057 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19061 ;;Total ram usage:        1 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; This function calls:
 19064 ;;		Nothing
 19065 ;; This function is called by:
 19066 ;;		_i2c_open
 19067 ;;		_do_I2C_DO_ADDRESS_NACK
 19068 ;;		_do_I2C_TX
 19069 ;;		_do_I2C_RX
 19070 ;;		_do_I2C_TX_EMPTY
 19071 ;; This function uses a non-reentrant model
 19072 ;;
 19073                           
 19074                           
 19075                           ;psect for function _returnReset
 19076  10EC                     _returnReset:	
 19077                           
 19078                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19079                           
 19080                           ;incstack = 0
 19081                           ; Regs used in _returnReset: [wreg]
 19082  10EC  3005               	movlw	5
 19083  10ED  0008               	return
 19084  10EE                     __end_of_returnReset:	
 19085                           
 19086                           	psect	text117
 19087  10EA                     __ptext117:	
 19088 ;; *************** function _returnStop *****************
 19089 ;; Defined at:
 19090 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19091 ;; Parameters:    Size  Location     Type
 19092 ;;  p               1    0[COMMON] PTR void 
 19093 ;;		 -> NULL(0), 
 19094 ;; Auto vars:     Size  Location     Type
 19095 ;;		None
 19096 ;; Return value:  Size  Location     Type
 19097 ;;                  1    wreg      enum E6966
 19098 ;; Registers used:
 19099 ;;		wreg
 19100 ;; Tracked objects:
 19101 ;;		On entry : 0/0
 19102 ;;		On exit  : 0/0
 19103 ;;		Unchanged: 0/0
 19104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19109 ;;Total ram usage:        1 bytes
 19110 ;; Hardware stack levels used:    1
 19111 ;; This function calls:
 19112 ;;		Nothing
 19113 ;; This function is called by:
 19114 ;;		_i2c_open
 19115 ;;		_setCallBack
 19116 ;;		_do_I2C_DO_ADDRESS_NACK
 19117 ;;		_do_I2C_TX
 19118 ;;		_do_I2C_RX
 19119 ;;		_do_I2C_TX_EMPTY
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           
 19124                           ;psect for function _returnStop
 19125  10EA                     _returnStop:	
 19126                           
 19127                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
>>>>>>> b288aef trying to integrate UART
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
<<<<<<< Upstream, based on origin/master
 15209                           
 15210                           ;incstack = 0
 15211                           ; Regs used in _returnStop: [wreg]
 15212  0878  3001               	movlw	1
 15213  0879  0008               	return
 15214  087A                     __end_of_returnStop:	
 15215                           
 15216                           	psect	text96
 15217  087D                     __ptext96:	
 15218 ;; *************** function i1_i2c1_driver_stop *****************
 15219 ;; Defined at:
 15220 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		None
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 19128                           
 19129                           ;incstack = 0
 19130                           ; Regs used in _returnStop: [wreg]
 19131  10EA  3001               	movlw	1
 19132  10EB  0008               	return
 19133  10EC                     __end_of_returnStop:	
 19134                           
 19135                           	psect	text118
 19136  10F4                     __ptext118:	
 19137 ;; *************** function i1_i2c1_driver_stop *****************
 19138 ;; Defined at:
 19139 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 19140 ;; Parameters:    Size  Location     Type
 19141 ;;		None
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;		None
 19144 ;; Return value:  Size  Location     Type
 19145 ;;                  1    wreg      void 
 19146 ;; Registers used:
 19147 ;;		None
 19148 ;; Tracked objects:
 19149 ;;		On entry : 0/0
 19150 ;;		On exit  : 0/0
 19151 ;;		Unchanged: 0/0
 19152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; This function calls:
 15241 ;;		Nothing
 15242 ;; This function is called by:
 15243 ;;		_do_I2C_SEND_STOP
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           
 15248                           ;psect for function i1_i2c1_driver_stop
 15249  087D                     i1_i2c1_driver_stop:	
 15250                           
 15251                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 15252                           
 15253                           ;incstack = 0
 15254                           ; Regs used in i1_i2c1_driver_stop: []
 15255  087D  0024               	movlb	4	; select bank4
 15256  087E  1516               	bsf	22,2	;volatile
 15257  087F  0008               	return
 15258  0880                     __end_ofi1_i2c1_driver_stop:	
 15259                           
 15260                           	psect	text97
 15261  087A                     __ptext97:	
 15262 ;; *************** function i1_i2c1_driver_restart *****************
 15263 ;; Defined at:
 15264 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 15265 ;; Parameters:    Size  Location     Type
 15266 ;;		None
 15267 ;; Auto vars:     Size  Location     Type
 15268 ;;		None
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  1    wreg      void 
 15271 ;; Registers used:
 15272 ;;		None
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 19157 ;;Total ram usage:        0 bytes
 19158 ;; Hardware stack levels used:    1
 19159 ;; This function calls:
 19160 ;;		Nothing
 19161 ;; This function is called by:
 19162 ;;		_do_I2C_SEND_STOP
 19163 ;; This function uses a non-reentrant model
 19164 ;;
 19165                           
 19166                           
 19167                           ;psect for function i1_i2c1_driver_stop
 19168  10F4                     i1_i2c1_driver_stop:	
 19169                           
 19170                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 19171                           
 19172                           ;incstack = 0
 19173                           ; Regs used in i1_i2c1_driver_stop: []
 19174  10F4  0024               	movlb	4	; select bank4
 19175  10F5  1516               	bsf	22,2	;volatile
 19176  10F6  0008               	return
 19177  10F7                     __end_ofi1_i2c1_driver_stop:	
 19178                           
 19179                           	psect	text119
 19180  10F1                     __ptext119:	
 19181 ;; *************** function i1_i2c1_driver_restart *****************
 19182 ;; Defined at:
 19183 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;		None
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;		None
 19188 ;; Return value:  Size  Location     Type
 19189 ;;                  1    wreg      void 
 19190 ;; Registers used:
 19191 ;;		None
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/0
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15282 ;;Total ram usage:        0 bytes
 15283 ;; Hardware stack levels used:    1
 15284 ;; This function calls:
 15285 ;;		Nothing
 15286 ;; This function is called by:
 15287 ;;		_do_I2C_SEND_RESTART_READ
 15288 ;;		_do_I2C_SEND_RESTART_WRITE
 15289 ;;		_do_I2C_SEND_RESTART
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293                           
 15294                           ;psect for function i1_i2c1_driver_restart
 15295  087A                     i1_i2c1_driver_restart:	
 15296                           
 15297                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 15298                           
 15299                           ;incstack = 0
 15300                           ; Regs used in i1_i2c1_driver_restart: []
 15301  087A  0024               	movlb	4	; select bank4
 15302  087B  1496               	bsf	22,1	;volatile
 15303  087C  0008               	return
 15304  087D                     __end_ofi1_i2c1_driver_restart:	
 15305                           
 15306                           	psect	text98
 15307  08AD                     __ptext98:	
 15308 ;; *************** function _i2c1_driver_sendACK *****************
 15309 ;; Defined at:
 15310 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;		None
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;		None
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  1    wreg      void 
 15317 ;; Registers used:
 15318 ;;		None
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 19201 ;;Total ram usage:        0 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; This function calls:
 19204 ;;		Nothing
 19205 ;; This function is called by:
 19206 ;;		_do_I2C_SEND_RESTART_READ
 19207 ;;		_do_I2C_SEND_RESTART_WRITE
 19208 ;;		_do_I2C_SEND_RESTART
 19209 ;; This function uses a non-reentrant model
 19210 ;;
 19211                           
 19212                           
 19213                           ;psect for function i1_i2c1_driver_restart
 19214  10F1                     i1_i2c1_driver_restart:	
 19215                           
 19216                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 19217                           
 19218                           ;incstack = 0
 19219                           ; Regs used in i1_i2c1_driver_restart: []
 19220  10F1  0024               	movlb	4	; select bank4
 19221  10F2  1496               	bsf	22,1	;volatile
 19222  10F3  0008               	return
 19223  10F4                     __end_ofi1_i2c1_driver_restart:	
 19224                           
 19225                           	psect	text120
 19226  112B                     __ptext120:	
 19227 ;; *************** function _i2c1_driver_sendACK *****************
 19228 ;; Defined at:
 19229 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;		None
 19232 ;; Auto vars:     Size  Location     Type
 19233 ;;		None
 19234 ;; Return value:  Size  Location     Type
 19235 ;;                  1    wreg      void 
 19236 ;; Registers used:
 19237 ;;		None
 19238 ;; Tracked objects:
 19239 ;;		On entry : 0/0
 19240 ;;		On exit  : 0/0
 19241 ;;		Unchanged: 0/0
 19242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15328 ;;Total ram usage:        0 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; This function calls:
 15331 ;;		Nothing
 15332 ;; This function is called by:
 15333 ;;		_do_I2C_DO_ACK
 15334 ;;		_do_I2C_RX
 15335 ;;		_I2C_Send_ACK
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           
 15340                           ;psect for function _i2c1_driver_sendACK
 15341  08AD                     _i2c1_driver_sendACK:	
 15342                           
 15343                           ;mcc_generated_files/i2c1_driver.c: 198:     SSP1CON2bits.ACKDT = 0;
 15344                           
 15345                           ;incstack = 0
 15346                           ; Regs used in _i2c1_driver_sendACK: []
 15347  08AD  0024               	movlb	4	; select bank4
 15348  08AE  1296               	bcf	22,5	;volatile
 15349                           
 15350                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKEN = 1;
 15351  08AF  1616               	bsf	22,4	;volatile
 15352  08B0  0008               	return
 15353  08B1                     __end_of_i2c1_driver_sendACK:	
 15354                           
 15355                           	psect	text99
 15356  0874                     __ptext99:	
 15357 ;; *************** function _PIN_MANAGER_IOC *****************
 15358 ;; Defined at:
 15359 ;;		line 118 in file "mcc_generated_files/pin_manager.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1    wreg      void 
 15366 ;; Registers used:
 15367 ;;		None
 15368 ;; Tracked objects:
 15369 ;;		On entry : 0/0
 15370 ;;		On exit  : 0/0
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
 19247 ;;Total ram usage:        0 bytes
 19248 ;; Hardware stack levels used:    1
 19249 ;; This function calls:
 19250 ;;		Nothing
 19251 ;; This function is called by:
 19252 ;;		_do_I2C_DO_ACK
 19253 ;;		_do_I2C_RX
 19254 ;;		_I2C_Send_ACK
 19255 ;; This function uses a non-reentrant model
 19256 ;;
 19257                           
 19258                           
 19259                           ;psect for function _i2c1_driver_sendACK
 19260  112B                     _i2c1_driver_sendACK:	
 19261                           
 19262                           ;mcc_generated_files/i2c1_driver.c: 198:     SSP1CON2bits.ACKDT = 0;
 19263                           
 19264                           ;incstack = 0
 19265                           ; Regs used in _i2c1_driver_sendACK: []
 19266  112B  0024               	movlb	4	; select bank4
 19267  112C  1296               	bcf	22,5	;volatile
 19268                           
 19269                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKEN = 1;
 19270  112D  1616               	bsf	22,4	;volatile
 19271  112E  0008               	return
 19272  112F                     __end_of_i2c1_driver_sendACK:	
 19273                           
 19274                           	psect	text121
 19275  10E8                     __ptext121:	
 19276 ;; *************** function _PIN_MANAGER_IOC *****************
 19277 ;; Defined at:
 19278 ;;		line 120 in file "mcc_generated_files/pin_manager.c"
 19279 ;; Parameters:    Size  Location     Type
 19280 ;;		None
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;		None
 19283 ;; Return value:  Size  Location     Type
 19284 ;;                  1    wreg      void 
 19285 ;; Registers used:
 19286 ;;		None
 19287 ;; Tracked objects:
 19288 ;;		On entry : 0/0
 19289 ;;		On exit  : 0/0
 19290 ;;		Unchanged: 0/0
 19291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> b288aef trying to integrate UART
      +1  BANK12
<<<<<<< Upstream, based on origin/master
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
=======
 19295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
>>>>>>> b288aef trying to integrate UART
      +0       0
<<<<<<< Upstream, based on origin/master
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used:    1
 15379 ;; This function calls:
 15380 ;;		Nothing
 15381 ;; This function is called by:
 15382 ;;		_INTERRUPT_InterruptManager
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           
 15387                           ;psect for function _PIN_MANAGER_IOC
 15388  0874                     _PIN_MANAGER_IOC:	
 15389                           
 15390                           ;incstack = 0
 15391                           ; Regs used in _PIN_MANAGER_IOC: []
 15392  0874  0008               	return
 15393  0875                     __end_of_PIN_MANAGER_IOC:	
 15394  007E                     btemp	set	126	;btemp
 15395  007E                     int$flags	set	126
 15396  007E                     wtemp0	set	126
=======
 19296 ;;Total ram usage:        0 bytes
 19297 ;; Hardware stack levels used:    1
 19298 ;; This function calls:
 19299 ;;		Nothing
 19300 ;; This function is called by:
 19301 ;;		_INTERRUPT_InterruptManager
 19302 ;; This function uses a non-reentrant model
 19303 ;;
 19304                           
 19305                           
 19306                           ;psect for function _PIN_MANAGER_IOC
 19307  10E8                     _PIN_MANAGER_IOC:	
 19308                           
 19309                           ;incstack = 0
 19310                           ; Regs used in _PIN_MANAGER_IOC: []
 19311  10E8  0008               	return
 19312  10E9                     __end_of_PIN_MANAGER_IOC:	
 19313                           
 19314                           	psect	text122
 19315  1414                     __ptext122:	
 19316 ;; *************** function _EUSART_Transmit_ISR *****************
 19317 ;; Defined at:
 19318 ;;		line 205 in file "mcc_generated_files/eusart.c"
 19319 ;; Parameters:    Size  Location     Type
 19320 ;;		None
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;		None
 19323 ;; Return value:  Size  Location     Type
 19324 ;;                  1    wreg      void 
 19325 ;; Registers used:
 19326 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19327 ;; Tracked objects:
 19328 ;;		On entry : 0/0
 19329 ;;		On exit  : 0/0
 19330 ;;		Unchanged: 0/0
 19331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19336 ;;Total ram usage:        1 bytes
 19337 ;; Hardware stack levels used:    1
 19338 ;; This function calls:
 19339 ;;		Nothing
 19340 ;; This function is called by:
 19341 ;;		_EUSART_Initialize
 19342 ;;		_INTERRUPT_InterruptManager
 19343 ;; This function uses a non-reentrant model
 19344 ;;
 19345                           
 19346                           
 19347                           ;psect for function _EUSART_Transmit_ISR
 19348  1414                     _EUSART_Transmit_ISR:	
 19349                           
 19350                           ;mcc_generated_files/eusart.c: 209:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 19351                           
 19352                           ;incstack = 0
 19353                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 19354  1414  3008               	movlw	8
 19355  1415  0023               	movlb	3	; select bank3
 19356  1416  026F               	subwf	_eusartTxBufferRemaining^(0+384),w	;volatile
 19357  1417  1803               	skipnc
 19358  1418  2C31               	goto	i1l1428
 19359                           
 19360                           ;mcc_generated_files/eusart.c: 210:     {;mcc_generated_files/eusart.c: 211:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 19361  1419  0021               	movlb	1	; select bank1
 19362  141A  086C               	movf	_eusartTxTail^(0+128),w
 19363  141B  3ECD               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 19364  141C  0086               	movwf	6
 19365  141D  3001               	movlw	1	; select bank3/4
 19366  141E  0087               	movwf	7
 19367  141F  0801               	movf	1,w
 19368  1420  0023               	movlb	3	; select bank3
 19369  1421  009A               	movwf	26	;volatile
 19370  1422  3001               	movlw	1
 19371  1423  00F6               	movwf	??_EUSART_Transmit_ISR
 19372  1424  0876               	movf	??_EUSART_Transmit_ISR,w
 19373  1425  0021               	movlb	1	; select bank1
 19374  1426  07EC               	addwf	_eusartTxTail^(0+128),f	;volatile
 19375                           
 19376                           ;mcc_generated_files/eusart.c: 212:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 19377  1427  3008               	movlw	8
 19378  1428  026C               	subwf	_eusartTxTail^(0+128),w	;volatile
 19379  1429  1803               	btfsc	3,0
 19380                           
 19381                           ;mcc_generated_files/eusart.c: 213:         {;mcc_generated_files/eusart.c: 214:        
      +                               eusartTxTail = 0;
 19382  142A  01EC               	clrf	_eusartTxTail^(0+128)	;volatile
 19383                           
 19384                           ;mcc_generated_files/eusart.c: 216:         eusartTxBufferRemaining++;
 19385  142B  3001               	movlw	1
 19386  142C  00F6               	movwf	??_EUSART_Transmit_ISR
 19387  142D  0876               	movf	??_EUSART_Transmit_ISR,w
 19388  142E  0023               	movlb	3	; select bank3
 19389  142F  07EF               	addwf	_eusartTxBufferRemaining^(0+384),f	;volatile
 19390                           
 19391                           ;mcc_generated_files/eusart.c: 217:     }
 19392  1430  0008               	return
 19393  1431                     i1l1428:	
 19394                           ;mcc_generated_files/eusart.c: 218:     else
 19395                           
 19396                           
 19397                           ;mcc_generated_files/eusart.c: 219:     {;mcc_generated_files/eusart.c: 220:         PIE
      +                          1bits.TXIE = 0;
 19398  1431  0021               	movlb	1	; select bank1
 19399  1432  1211               	bcf	17,4	;volatile
 19400  1433  0008               	return
 19401  1434                     __end_of_EUSART_Transmit_ISR:	
 19402                           
 19403                           	psect	text123
 19404  16D7                     __ptext123:	
 19405 ;; *************** function _EUSART_Receive_ISR *****************
 19406 ;; Defined at:
 19407 ;;		line 224 in file "mcc_generated_files/eusart.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;		None
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;		None
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  1    wreg      void 
 19414 ;; Registers used:
 19415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/0
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19425 ;;Total ram usage:        0 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:    2
 19428 ;; This function calls:
 19429 ;;		Absolute function
 19430 ;;		_EUSART_DefaultErrorHandler
 19431 ;;		_EUSART_DefaultFramingErrorHandler
 19432 ;;		_EUSART_DefaultOverrunErrorHandler
 19433 ;;		_EUSART_RxDataHandler
 19434 ;; This function is called by:
 19435 ;;		_EUSART_Initialize
 19436 ;;		_INTERRUPT_InterruptManager
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           
 19441                           ;psect for function _EUSART_Receive_ISR
 19442  16D7                     _EUSART_Receive_ISR:	
 19443                           
 19444                           ;mcc_generated_files/eusart.c: 227:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 19445                           
 19446                           ;incstack = 0
 19447                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19448  16D7  0875               	movf	_eusartRxHead,w	;volatile
 19449  16D8  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19450  16D9  0086               	movwf	6
 19451  16DA  3001               	movlw	1	; select bank3/4
 19452  16DB  0087               	movwf	7
 19453  16DC  0181               	clrf	1
 19454                           
 19455                           ;mcc_generated_files/eusart.c: 229:     if(RC1STAbits.FERR){
 19456  16DD  0023               	movlb	3	; select bank3
 19457  16DE  1D1D               	btfss	29,2	;volatile
 19458  16DF  2EEC               	goto	i1l6419
 19459                           
 19460                           ;mcc_generated_files/eusart.c: 230:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 19461  16E0  0875               	movf	_eusartRxHead,w	;volatile
 19462  16E1  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19463  16E2  0086               	movwf	6
 19464  16E3  3001               	movlw	1	; select bank3/4
 19465  16E4  0087               	movwf	7
 19466  16E5  1481               	bsf	1,1
 19467                           
 19468                           ;mcc_generated_files/eusart.c: 231:         EUSART_FramingErrorHandler();
 19469  16E6  0024               	movlb	4	; select bank4
 19470  16E7  0869               	movf	(_EUSART_FramingErrorHandler+1)^(0+512),w
 19471  16E8  008A               	movwf	10
 19472  16E9  0868               	movf	_EUSART_FramingErrorHandler^(0+512),w
 19473  16EA  000A               	callw
 19474  16EB  3196               	pagesel	$
 19475  16EC                     i1l6419:	
 19476                           
 19477                           ;mcc_generated_files/eusart.c: 234:     if(RC1STAbits.OERR){
 19478  16EC  0023               	movlb	3	; select bank3
 19479  16ED  1C9D               	btfss	29,1	;volatile
 19480  16EE  2EFB               	goto	i1l6425
 19481                           
 19482                           ;mcc_generated_files/eusart.c: 235:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 19483  16EF  0875               	movf	_eusartRxHead,w	;volatile
 19484  16F0  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19485  16F1  0086               	movwf	6
 19486  16F2  3001               	movlw	1	; select bank3/4
 19487  16F3  0087               	movwf	7
 19488  16F4  1501               	bsf	1,2
 19489                           
 19490                           ;mcc_generated_files/eusart.c: 236:         EUSART_OverrunErrorHandler();
 19491  16F5  0024               	movlb	4	; select bank4
 19492  16F6  0867               	movf	(_EUSART_OverrunErrorHandler+1)^(0+512),w
 19493  16F7  008A               	movwf	10
 19494  16F8  0866               	movf	_EUSART_OverrunErrorHandler^(0+512),w
 19495  16F9  000A               	callw
 19496  16FA  3196               	pagesel	$
 19497  16FB                     i1l6425:	
 19498                           
 19499                           ;mcc_generated_files/eusart.c: 239:     if(eusartRxStatusBuffer[eusartRxHead].status){
 19500  16FB  0875               	movf	_eusartRxHead,w	;volatile
 19501  16FC  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19502  16FD  0086               	movwf	6
 19503  16FE  3001               	movlw	1	; select bank3/4
 19504  16FF  0087               	movwf	7
 19505  1700  0801               	movf	1,w
 19506  1701  1903               	btfsc	3,2
 19507  1702  2F0A               	goto	i1l6429
 19508                           
 19509                           ;mcc_generated_files/eusart.c: 240:         EUSART_ErrorHandler();
 19510  1703  0024               	movlb	4	; select bank4
 19511  1704  0865               	movf	(_EUSART_ErrorHandler+1)^(0+512),w
 19512  1705  008A               	movwf	10
 19513  1706  0864               	movf	_EUSART_ErrorHandler^(0+512),w
 19514  1707  000A               	callw
 19515  1708  3196               	pagesel	$
 19516                           
 19517                           ;mcc_generated_files/eusart.c: 241:     } else {
 19518  1709  0008               	return
 19519  170A                     i1l6429:	
 19520                           
 19521                           ;mcc_generated_files/eusart.c: 242:         EUSART_RxDataHandler();
 19522  170A  3193  2309         	fcall	_EUSART_RxDataHandler
 19523  170C  0008               	return
 19524  170D                     __end_of_EUSART_Receive_ISR:	
 19525                           
 19526                           	psect	text124
 19527  1127                     __ptext124:	
 19528 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 19529 ;; Defined at:
 19530 ;;		line 260 in file "mcc_generated_files/eusart.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;		None
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		None
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19548 ;;Total ram usage:        0 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; This function calls:
 19551 ;;		Nothing
 19552 ;; This function is called by:
 19553 ;;		_EUSART_Initialize
 19554 ;;		_EUSART_Receive_ISR
 19555 ;; This function uses a non-reentrant model
 19556 ;;
 19557                           
 19558                           
 19559                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 19560  1127                     _EUSART_DefaultOverrunErrorHandler:	
 19561                           
 19562                           ;mcc_generated_files/eusart.c: 263:     RC1STAbits.CREN = 0;
 19563                           
 19564                           ;incstack = 0
 19565                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 19566  1127  0023               	movlb	3	; select bank3
 19567  1128  121D               	bcf	29,4	;volatile
 19568                           
 19569                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 1;
 19570  1129  161D               	bsf	29,4	;volatile
 19571  112A  0008               	return
 19572  112B                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 19573                           
 19574                           	psect	text125
 19575  10E7                     __ptext125:	
 19576 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 19577 ;; Defined at:
 19578 ;;		line 258 in file "mcc_generated_files/eusart.c"
 19579 ;; Parameters:    Size  Location     Type
 19580 ;;		None
 19581 ;; Auto vars:     Size  Location     Type
 19582 ;;		None
 19583 ;; Return value:  Size  Location     Type
 19584 ;;                  1    wreg      void 
 19585 ;; Registers used:
 19586 ;;		None
 19587 ;; Tracked objects:
 19588 ;;		On entry : 0/0
 19589 ;;		On exit  : 0/0
 19590 ;;		Unchanged: 0/0
 19591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19596 ;;Total ram usage:        0 bytes
 19597 ;; Hardware stack levels used:    1
 19598 ;; This function calls:
 19599 ;;		Nothing
 19600 ;; This function is called by:
 19601 ;;		_EUSART_Initialize
 19602 ;;		_EUSART_Receive_ISR
 19603 ;; This function uses a non-reentrant model
 19604 ;;
 19605                           
 19606                           
 19607                           ;psect for function _EUSART_DefaultFramingErrorHandler
 19608  10E7                     _EUSART_DefaultFramingErrorHandler:	
 19609                           
 19610                           ;incstack = 0
 19611                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 19612  10E7  0008               	return
 19613  10E8                     __end_of_EUSART_DefaultFramingErrorHandler:	
 19614                           
 19615                           	psect	text126
 19616  10EE                     __ptext126:	
 19617 ;; *************** function _EUSART_DefaultErrorHandler *****************
 19618 ;; Defined at:
 19619 ;;		line 268 in file "mcc_generated_files/eusart.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;		None
 19622 ;; Auto vars:     Size  Location     Type
 19623 ;;		None
 19624 ;; Return value:  Size  Location     Type
 19625 ;;                  1    wreg      void 
 19626 ;; Registers used:
 19627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19628 ;; Tracked objects:
 19629 ;;		On entry : 0/0
 19630 ;;		On exit  : 0/0
 19631 ;;		Unchanged: 0/0
 19632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19637 ;;Total ram usage:        0 bytes
 19638 ;; Hardware stack levels used:    1
 19639 ;; Hardware stack levels required when called:    1
 19640 ;; This function calls:
 19641 ;;		_EUSART_RxDataHandler
 19642 ;; This function is called by:
 19643 ;;		_EUSART_Initialize
 19644 ;;		_EUSART_Receive_ISR
 19645 ;; This function uses a non-reentrant model
 19646 ;;
 19647                           
 19648                           
 19649                           ;psect for function _EUSART_DefaultErrorHandler
 19650  10EE                     _EUSART_DefaultErrorHandler:	
 19651                           
 19652                           ;mcc_generated_files/eusart.c: 269:     EUSART_RxDataHandler();
 19653                           
 19654                           ;incstack = 0
 19655                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 19656  10EE  3193  2309         	fcall	_EUSART_RxDataHandler
 19657  10F0  0008               	return
 19658  10F1                     __end_of_EUSART_DefaultErrorHandler:	
 19659                           
 19660                           	psect	text127
 19661  1309                     __ptext127:	
 19662 ;; *************** function _EUSART_RxDataHandler *****************
 19663 ;; Defined at:
 19664 ;;		line 248 in file "mcc_generated_files/eusart.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;		None
 19667 ;; Auto vars:     Size  Location     Type
 19668 ;;		None
 19669 ;; Return value:  Size  Location     Type
 19670 ;;                  1    wreg      void 
 19671 ;; Registers used:
 19672 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19673 ;; Tracked objects:
 19674 ;;		On entry : 0/0
 19675 ;;		On exit  : 0/0
 19676 ;;		Unchanged: 0/0
 19677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19682 ;;Total ram usage:        1 bytes
 19683 ;; Hardware stack levels used:    1
 19684 ;; This function calls:
 19685 ;;		Nothing
 19686 ;; This function is called by:
 19687 ;;		_EUSART_Receive_ISR
 19688 ;;		_EUSART_DefaultErrorHandler
 19689 ;; This function uses a non-reentrant model
 19690 ;;
 19691                           
 19692                           
 19693                           ;psect for function _EUSART_RxDataHandler
 19694  1309                     _EUSART_RxDataHandler:	
 19695                           
 19696                           ;mcc_generated_files/eusart.c: 250:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 19697                           
 19698                           ;incstack = 0
 19699                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19700  1309  0023               	movlb	3	; select bank3
 19701  130A  0819               	movf	25,w	;volatile
 19702  130B  00F6               	movwf	??_EUSART_RxDataHandler
 19703  130C  0875               	movf	_eusartRxHead,w
 19704  130D  3EC5               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 19705  130E  0086               	movwf	6
 19706  130F  3001               	movlw	1	; select bank3/4
 19707  1310  0087               	movwf	7
 19708  1311  0876               	movf	??_EUSART_RxDataHandler,w
 19709  1312  0081               	movwf	1
 19710  1313  3001               	movlw	1
 19711  1314  00F6               	movwf	??_EUSART_RxDataHandler
 19712  1315  0876               	movf	??_EUSART_RxDataHandler,w
 19713  1316  07F5               	addwf	_eusartRxHead,f	;volatile
 19714                           
 19715                           ;mcc_generated_files/eusart.c: 251:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 19716  1317  3008               	movlw	8
 19717  1318  0275               	subwf	_eusartRxHead,w	;volatile
 19718  1319  1803               	btfsc	3,0
 19719                           
 19720                           ;mcc_generated_files/eusart.c: 252:     {;mcc_generated_files/eusart.c: 253:         eus
      +                          artRxHead = 0;
 19721  131A  01F5               	clrf	_eusartRxHead	;volatile
 19722                           
 19723                           ;mcc_generated_files/eusart.c: 255:     eusartRxCount++;
 19724  131B  3001               	movlw	1
 19725  131C  00F6               	movwf	??_EUSART_RxDataHandler
 19726  131D  0876               	movf	??_EUSART_RxDataHandler,w
 19727  131E  0022               	movlb	2	; select bank2
 19728  131F  07E7               	addwf	_eusartRxCount^(0+256),f	;volatile
 19729  1320  0008               	return
 19730  1321                     __end_of_EUSART_RxDataHandler:	
 19731  007E                     btemp	set	126	;btemp
 19732  007E                     int$flags	set	126
 19733  007E                     wtemp0	set	126
>>>>>>> b288aef trying to integrate UART


Data Sizes:
    Strings     55
    Constant    32
    Data        11
    BSS         200
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< Upstream, based on origin/master
    COMMON           14      6      11
    BANK0            80     60      79
    BANK1            80     67      73
    BANK2            80     64      74
    BANK3            80      0      29
    BANK4            80      0      68
    BANK5            80      0       0
=======
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     70      80
    BANK2            80     64      80
    BANK3            80      0      80
    BANK4            80      0      78
    BANK5            80      0      32
>>>>>>> b288aef trying to integrate UART
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

<<<<<<< Upstream, based on origin/master
    i2c_ISR$2415	const PTR FTN()enum E7120 size(2) Largest target is 1
=======
    i2c_ISR$2885	const PTR FTN()enum E7120 size(2) Largest target is 1
>>>>>>> b288aef trying to integrate UART
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), UART_Byte@bits(BANK1[7]), STR_4(CODE[11]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), UART_Byte@bits(BANK1[7]), STR_4(CODE[11]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 7
		 -> UART_Byte@bits(BANK1[7]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 7
		 -> UART_Byte@bits(BANK1[7]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 0

    strcpy@s	PTR const unsigned char  size(1) Largest target is 0

    strcat@src	PTR const unsigned char  size(1) Largest target is 0

    strcat@dest	PTR unsigned char  size(1) Largest target is 7
		 -> UART_Byte@bits(BANK1[7]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 0

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    S2430_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    wireReadDataBlock@val	PTR unsigned char  size(2) Largest target is 64
		 -> readGesture@fifo_data2(BANK1[64]), readGesture@fifo_data(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 7
		 -> UART_Byte@bits(BANK1[7]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 7
		 -> UART_Byte@bits(BANK1[7]), 

    Display_Name@string1	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), STR_1(CODE[12]), 

    names	PTR unsigned char [4] size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), STR_1(CODE[12]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E7120[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 0

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _initialize->_setMode
    _setProximityGain->_wireWriteDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireWriteDataByte
    _setGestureWaitTime->_wireWriteDataByte
    _setGestureLEDDrive->_wireWriteDataByte
    _setGestureGain->_wireWriteDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireWriteDataByte
    _handleGesture->_readGesture
    _readGesture->_processGestureData
    _wireReadDataBlock->_I2C_Write_Byte
    _processGestureData->___awdiv
    ___awdiv->___wmul
    _isGestureAvailable->_wireReadDataByte
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireWriteDataByte
    _setGestureMode->_wireWriteDataByte
    _setGestureIntEnable->_wireWriteDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Write_Byte
    _I2C_Write_Byte->_i2c1_driver_TXData
    _I2C_Read_Byte->_i2c1_driver_isBufferFull
    _UART_Byte->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _On_Off->_ADC_GetConversion
    _Get_ADC->_Display_Name
    _Display_Name->_strlen
    _Display_Clear->_SPI_Write
    _SPI_Write->_SPI2_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _handleGesture->_readGesture
    _UART_Byte->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _handleGesture->_readGesture

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< Upstream, based on origin/master
 (0) _main                                                 5     5      0   89023
                                             64 BANK1      3     3      0
=======
 (0) _main                                                 6     6      0  100530
                                             64 BANK1      6     6      0
>>>>>>> b288aef trying to integrate UART
                      _Display_Clear
                       _Display_Name
                            _Get_ADC
                             _On_Off
                         _PIR_Sensor
                  _SYSTEM_Initialize
                          _UART_Byte
                _enableGestureSensor
                      _handleGesture
                         _initialize
                 _isGestureAvailable
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   54520
                                             16 BANK0      2     2      0
                   _i2c1_driver_open
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleGesture                                        1     1      0    8855
                                             59 BANK0      1     1      0
                       _Display_Name
                        _readGesture
 ---------------------------------------------------------------------------------
 (2) _readGesture                                        140   138      2    7779
                                             47 BANK0     12    10      2
                                              0 BANK1     64    64      0
                                              0 BANK2     64    64      0
                      _decodeGesture
                            _getMode
                 _isGestureAvailable
                 _processGestureData
             _resetGestureParameters
                  _wireReadDataBlock
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _wireReadDataBlock                                   11     7      4     651
                                              6 BANK0     11     7      4
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _processGestureData                                  32    32      0    5607
                                             15 BANK0     32    32      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _isGestureAvailable                                   2     2      0     198
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _decodeGesture                                       18    18      0     296
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   23076
                                             16 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    3667
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (3) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    4340
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    4340
                                             11 BANK0      5     4      1
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    3398
                                              6 BANK0      4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     195
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0     161
                                              6 BANK0      3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       5     5      0      96
                                              1 BANK0      5     5      0
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_TXData                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                  _i2c1_driver_start
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
              _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_isBufferFull                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Byte                                           13    13      0   10520
                                             16 BANK1     13    13      0
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     4      1    1192
                                             10 BANK0      5     4      1
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               5     4      1     314
                                              5 BANK0      5     4      1
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    10      4    8602
                                             79 BANK0      1     1      0
                                              3 BANK1     13     9      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    7787
                                             74 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    7368
                                             58 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    5647
                                             28 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3435
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1429
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1037
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _SPI2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Sensor                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _On_Off                                               5     5      0      96
                                              4 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _Get_ADC                                              5     5      0    1482
                                             12 BANK0      5     5      0
                  _ADC_GetConversion
                       _Display_Name
 ---------------------------------------------------------------------------------
 (2) _Display_Name                                         7     5      2    1076
                                              5 BANK0      7     5      2
                 _PWM_Output_Disable
                  _PWM_Output_Enable
                          _SPI_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     400
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PWM_Output_Enable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_Output_Disable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Display_Clear                                        1     1      0      62
                                              3 BANK0      1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      62
                                              1 BANK0      2     2      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     914
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (12) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (13) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_ISR                                             3     3      0     914
                                              3 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (13) _mssp1_clearIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_TX_EMPTY                                     3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (14) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_TX                                           3     3      0     234
                                              0 COMMON     3     3      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) _do_I2C_SEND_RESTART_READ                            0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_ADR_READ                                0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_RX                                           3     3      0     212
                                              0 COMMON     3     3      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
            i1_i2c1_driver_getRXData
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _do_I2C_DO_NACK_STOP                                 0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) _do_I2C_DO_NACK_RESTART                              0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_RCEN                                         0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_ADDRESS_NACK                              3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (14) _returnStop                                          1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) _returnReset                                         1     0      1     212
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) _do_I2C_SEND_STOP                                    0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _do_I2C_SEND_RESTART                                 0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_Clear
     _SPI_Write
       _SPI2_Exchange8bit
   _Display_Name
     _PWM_Output_Disable
     _PWM_Output_Enable
     _SPI_Write
       _SPI2_Exchange8bit
     _strlen
   _Get_ADC
     _ADC_GetConversion
     _Display_Name
       _PWM_Output_Disable
       _PWM_Output_Enable
       _SPI_Write
         _SPI2_Exchange8bit
       _strlen
   _On_Off
     _ADC_GetConversion
   _PIR_Sensor
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _SPI2_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _UART_Byte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
               _i2c1_driver_restart
             _I2C_Read_Byte
               _i2c1_driver_getRXData
               _i2c1_driver_isBufferFull
               _i2c1_driver_startRX
             _I2C_Send_NACK
               _i2c1_driver_sendNACK
             _I2C_Start
               _i2c1_driver_start
             _I2C_Stop
               _i2c1_driver_stop
             _I2C_Write_Byte
               _i2c1_driver_TXData
         _wireWriteDataByte
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _handleGesture
     _Display_Name
       _PWM_Output_Disable
       _PWM_Output_Enable
       _SPI_Write
         _SPI2_Exchange8bit
       _strlen
     _readGesture
       _decodeGesture
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _isGestureAvailable
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _processGestureData
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _resetGestureParameters
       _wireReadDataBlock
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
   _initialize
     _i2c1_driver_open
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _isGestureAvailable
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _returnReset *
       _returnStop *
     _do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       i1_i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       _do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       _i2c1_driver_sendACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_getRXData *
     _do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     _do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     _do_I2C_TX *
       _do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _i2c1_driver_isNACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_TXData *
     _do_I2C_TX_EMPTY *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _mssp1_setIRQ
       _returnReset *
       _returnStop *
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
<<<<<<< Upstream, based on origin/master
BANK0               50     3C      4F       5       98.8%
=======
BANK0               50     50      50       5      100.0%
>>>>>>> b288aef trying to integrate UART
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
<<<<<<< Upstream, based on origin/master
BANK1               50     43      49       7       91.3%
=======
BANK1               50     46      50       7      100.0%
>>>>>>> b288aef trying to integrate UART
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     40      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
<<<<<<< Upstream, based on origin/master
ABS                  0      0     14E      20        0.0%
=======
ABS                  0      0     1BA      20        0.0%
>>>>>>> b288aef trying to integrate UART
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
<<<<<<< Upstream, based on origin/master
DATA                 0      0     14E      31        0.0%
=======
DATA                 0      0     1BA      31        0.0%
>>>>>>> b288aef trying to integrate UART
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
<<<<<<< Upstream, based on origin/master
Symbol Table                                                                                   Mon Apr 08 13:17:39 2019
=======
Symbol Table                                                                                   Sun Apr 07 16:16:04 2019
>>>>>>> b288aef trying to integrate UART

<<<<<<< Upstream, based on origin/master
                          returnReset@p 0070                   ?_setGestureExitThresh 0070  
                    __size_of_I2C_Start 0003                             __CFG_CP$OFF 0000  
                          ___awdiv@sign 002C                    __size_of_do_I2C_IDLE 0005  
                   _do_I2C_SEND_RESTART 08BD                    __size_of_do_I2C_RCEN 0006  
                   ___wmul@multiplicand 0022                      _PWM_Output_Disable 0892  
                           __CFG_LVP$ON 0000                                     l532 099A  
                                   l623 0AD2        processGestureData@ud_ratio_first 0031  
                                   l783 0EEC                                     _PR2 001E  
                          __CFG_CPD$OFF 0000                   __end_of_decodeGesture 04CA  
                  __size_of_I2C_ReStart 0003                                     _val 007A  
               __size_of_PMD_Initialize 0008                      I2C_Write_Byte@Byte 0023  
                       _TMR2_Initialize 094A                   __size_of_do_I2C_RESET 0007  
                                   wreg 0009                     ?_PWM_Output_Disable 0070  
                    i1_i2c1_driver_stop 087D                                    l1110 0325  
                                  l1105 02E4                                    l1131 03A9  
                                  l1109 030D                                    l1143 03FA  
                                  l1135 03C6                                    l1063 008A  
                                  l1234 0A92                                    l1090 026E  
                                  l1171 04B9                                    l1155 044D  
                                  l1147 0417                                    l1092 0294  
                                  l1086 0245                                    l1167 049C  
                                  l1159 046A                                    l1098 02C5  
                                  l1398 0AAE                                    l6010 0086  
                                  l6100 028F                                    l6012 00E0  
                                  l6110 02B9                                    l7000 07A4  
                                  l6040 00F7                                    l7002 07B0  
                                  l6210 0412                                    l6122 02DF  
                                  l6026 00FB                                    l6044 0145  
                                  l6206 03F5                                    l6150 0346  
                                  l6118 02C7                                    l6062 01F8  
                                  l7030 0F99                                    l7014 0F56  
                                  l7006 0F43                                    l6224 0448  
                                  l6216 0424                                    l6160 035C  
                                  l6128 0308                                    l6072 021D  
                                  l6064 01FB                                    l6400 06A4  
                                  l7024 0F6F                                    l7016 0F64  
                                  l6242 0497                                    l6234 0477  
                                  l6162 035E                                    l6082 0240  
                                  l6074 0220                                    l6058 01E6  
                                  l7130 0D79                                    l6252 04C6  
                                  l6228 0465                                    l6180 0382  
                                  l6172 0370                                    l6156 0352  
                                  l6068 020B                                    l7028 0F7C  
                                  l7124 0D67                                    l6246 04B4  
                                  l6174 0372                                    l6166 0366  
                                  l6422 0629                                    l6414 0606  
                                  l6406 05F3                                    l6192 03C1  
                                  l6168 0368                                    l6256 04C8  
                                  l6096 0287                                    l6088 0269  
                                  l6440 06A1                                    l6600 0D50  
                                  l6504 09FC                                    l5802 099F  
                                  l6178 037C                                    l6434 0637  
                                  l6514 0BD2                                    l6188 03A4  
                                  l6436 0698                                    l6198 03D3  
                                  l6534 0BAB                                    l6518 0BD4  
                                  l6368 0AD7                                    l5914 0A2B  
                                  l7290 0F85                                    l6554 09D6  
                                  l6618 0B93                                    l6538 0BAD  
                                  l5916 0A37                                    l6388 0ECF  
                                  l5924 0E5D                                    l6636 0C89  
                                  l6900 0FB0                                    l5828 0AA8  
                                  l6396 05EF                                    l6564 09E9  
                                  l5774 0970                                    l6654 0CEC  
                                  l5854 0F06                                    l6582 0D1E  
                                  l6494 0A0F                                    l6750 04DD  
                                  l6736 0912                                    l5768 0A95  
                                  l5944 0E90                                    l5936 0E77  
                                  l5928 0E5F                                    l6672 0B6C  
                                  l5880 0F3D                                    l5872 0F2C  
                                  l5864 0F0E                                    l5848 0EFB  
                                  l5946 0E91                                    l5938 0E84  
                                  l6682 0990                                    l5866 0F1A  
                                  l6754 04DF                                    l5876 0F35  
                                  l5980 07F2                                    l5990 0079  
                                  l5896 09C3                                    l6962 071B  
                                  l6882 0FB2                                    l5994 007B  
                                  l5978 07C3                                    l6980 0757  
                                  l6956 0703                                    l6982 0760  
                                  l6886 0FB4                                    l6968 0733  
                                  l6988 0778                                    STR_1 103D  
                                  STR_2 1030                                    STR_3 1020  
                                  STR_4 1049                 __end_of_PWM1_Initialize 0984  
                                  _LATA 010C                                    _LATB 010D  
                                  _LATC 010E                                    u5005 0277  
                                  u5115 02D0                                    u5125 02ED  
                                  u5135 02F9                                    u5055 029E  
                                  u5305 0395                                    u4505 0AAF  
                                  u5145 0316                                    u5065 02AC  
                                  u5315 03B2                                    u4515 0AB4  
                                  _PMD0 0911                                    u6205 070D  
                                  u5405 0439                                    u5325 03D0  
                                  u4605 0F2D                                    _PMD1 0912  
                                  _PMD2 0913                                    u6215 0719  
                                  u5415 0456                                    u5175 032E  
                                  _PMD3 0914                                    _PMD4 0915  
                                  u5505 0ED9                                    u6305 078E  
                                  u6225 0725                                    u5425 0474  
                                  _PMD5 0916                                    u6315 079F  
                                  u6235 0731                                    u5355 03E6  
                                  u6245 073D                                    u5365 0403  
                                  u4565 0F11                                    u6325 0F51  
                                  u5605 0BF4                                    u6255 0749  
                                  u6175 06DD                                    u5455 0488  
                                  u5375 0421                                    u4815 0095  
                                  u4735 07CC                                    u5615 0C1D  
                                  u6185 06F5                                    u5465 04A5  
                                  u4585 0F1B                                    u5705 0CFF  
                                  u6507 09A9                                    u6275 076A  
                                  u6195 0701                                    u5475 04C3  
                                  u4595 0F25                                    u4915 01DF  
                                  u4684 0E70                                    u6517 0A20  
                                  u6285 0776                                    u4685 0E6F  
                                  u4925 01F0                                    u5725 0D31  
                                  u4694 0E7C                                    u6295 0782  
                                  u4695 0E7B                                    u4935 0204  
                                  u5575 0632                                    u4945 0215  
                                  u5585 0641                                    u6467 06A8  
                                  u5765 0CCD                                    u6477 06BB  
                  ?_do_I2C_SEND_RESTART 0070                                    u6487 0EA7  
                                  u4975 0231                                    u6497 0EB7  
                                  u4985 024E                                    u4995 025A  
                                  _TMR2 001D                                    _WPUA 020C  
                                  _WPUB 020D                                    _WPUC 020E  
                          __CFG_WRT$OFF 0000                           __CFG_FCMEN$ON 0000  
     __size_of_do_I2C_SEND_RESTART_READ 0004                     ?i1_i2c1_driver_stop 0070  
             ?_do_I2C_SEND_RESTART_READ 0070                                    _main 0D52  
                                  _name 005C               __size_of_do_I2C_SEND_STOP 0004  
                __size_of_do_I2C_DO_ACK 0004                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                 ??_setGestureIntEnable 002A                        __end_of_I2C_Stop 0800  
                         __CFG_BOREN$ON 0000                 i1_i2c1_driver_getRXData 0883  
                 ?_do_I2C_SEND_ADR_READ 0070                           __CFG_BORV$LOW 0000  
       ??_i2c1_driver_clearBusCollision 0070                                    start 002C  
                       __end_of_Get_ADC 07B3                     I2C_Write_Byte@count 0024  
                         __CFG_CSWEN$ON 0000                           __CFG_MCLRE$ON 0000  
                  ??_PWM_Output_Disable 0020                         __end_of_i2c_ISR 0B47  
              ??_do_I2C_DO_NACK_RESTART 0070                            ?_readGesture 004F  
                          _do_I2C_RESET 08FF          __size_of_OSCILLATOR_Initialize 0008  
         __end_of_OSCILLATOR_Initialize 0942                    ??i1_i2c1_driver_stop 0070  
                                 _ADACT 009F                __end_of_i2c1_driver_open 096D  
                                 ?_main 0070                         __end_of___awdiv 0F42  
              __end_of_i2c1_driver_stop 08AD                         ___awdiv@divisor 0026  
                                 _T2CON 001F              __end_of_i2c1_driver_TXData 08F3  
                        __CFG_DEBUG$OFF 0000                                   i1l157 0E35  
                                 i1l173 0DD6                                   i1l253 002A  
                                 i1l245 0010                                   i1l248 001E  
                          ?_setLEDBoost 0070                         ___awdiv@counter 002B  
                          ?_setLEDDrive 0070                          _setGestureGain 0CEE  
                                 _OSCEN 091D                      wireReadDataBlock@j 0030  
                        _setGestureMode 0B47                                   _TRISA 008C  
                                 _TRISB 008D                                   _TRISC 008E  
           __end_of_setProxIntLowThresh 0A11                         __end_of_getMode 0963  
                           ?_PIR_Sensor 0070                   isGestureAvailable@val 002A  
               __end_of_PIN_MANAGER_IOC 0875              __end_of_i2c1_driver_isNACK 092A  
                __size_of_I2C_Read_Byte 000B                          _WDT_Initialize 08D5  
                                 _names 0160                        _b_i2c_error_flag 0076  
          __end_of_setProxIntHighThresh 09FE              ?_do_I2C_SEND_RESTART_WRITE 0070  
                                 _state 0078                                   _start 006E  
                 ??_do_I2C_SEND_RESTART 0070                         __end_of_setMode 0EA0  
                     __end_of_I2C_Start 08AA                                   pclath 000A  
               __size_of_mssp1_clearIRQ 0003                    i1_i2c1_driver_TXData 08DD  
          __size_of_setAmbientLightGain 001E                  ?_do_I2C_SEND_ADR_WRITE 0070  
                __size_of_I2C_Send_NACK 0003                                   status 0003  
                                 wtemp0 007E                      __size_of_SPI_Write 0015  
              ?_setLightIntLowThreshold 002A              __end_of_setGestureLEDDrive 0D52  
                 setGestureWaitTime@val 002C                           _fsmStateTable 1000  
                         _gesture_data_ 0220                         __initialization 002E  
                ??_setGestureExitThresh 002A                       _SPI2_Exchange8bit 0992  
            processGestureData@lr_delta 004B                              _i2c_status 01A0  
                          __end_of_main 0D86                       _handleGestureFlag 0077  
            processGestureData@ud_delta 0049                      ?_SPI2_Exchange8bit 0070  
               __end_of_TMR2_Initialize 0952             ?_INTERRUPT_InterruptManager 0070  
                __end_of_setGestureGain 0D20               __size_of_setProximityGain 0029  
                __end_of_setGestureMode 0B6E                           _do_I2C_DO_ACK 08C5  
                                ??_main 005C           __size_of_i2c1_driver_sendNACK 0004  
              __size_of_SPI2_Initialize 0007                     ??_SPI2_Exchange8bit 0020  
     __size_of_setLightIntHighThreshold 0027           __size_of_i2c1_driver_resetBus 0001  
                __end_of_WDT_Initialize 08D9                 ?_do_I2C_DO_ADDRESS_NACK 0070  
             ?_setLightIntHighThreshold 002A       setLightIntHighThreshold@threshold 002A  
                  __end_of_Display_Name 0EF0                    __size_of_enablePower 000E  
                                _ADCON0 009D                                  _ADCON1 009E  
                                _ADRESH 009C                                  _ADRESL 009B  
                                _CCPR1H 0292                                  _CCPR1L 0291  
                      ___awdiv@dividend 0028                      _processGestureData 006B  
                                _ANSELA 018C                                  _ANSELB 018D  
                                _ANSELC 018E                      __CFG_RSTOSC$HFINT1 0000  
          setProxIntLowThresh@threshold 002B                   ?i1_i2c1_driver_TXData 0070  
                                _RC2PPS 0EA2                                  _RB5PPS 0E9D  
                                _RB6PPS 0E9E                        ?_PWM1_Initialize 0070  
                                _RB7PPS 0E9F                                  _ODCONA 028C  
                                _ODCONB 028D                                  _RC6PPS 0EA6  
                                _ODCONC 028E                                  i1l5052 0B31  
                                i1l4502 0C3F                                  i1l4600 0C98  
                                i1l4520 0E08                                  i1l4508 0C42  
                                i1l4524 0E0B                                  i1l4542 0E4F  
                                i1l4534 0E11                                  i1l4528 0E0E  
                                i1l4564 0DD8                                  i1l4574 0DDE  
                                i1l4584 0C8E                                  i1l4568 0DDB  
                                i1l4594 0C95                                  i1l4498 0C3C  
                                i1l4588 0C91               ??i1_i2c1_driver_getRXData 0070  
                                i1l7292 0DF3                                  i1l7294 0E27  
                                i1l7296 0C57                                  i1l7298 0CAD  
                             ??_Get_ADC 002C                        _wireReadDataByte 0AFD  
                                _OSCFRQ 091F                 ?_resetGestureParameters 0070  
                ??_do_I2C_SEND_ADR_READ 0070                                  _WDTCON 0097  
                             ??_i2c_ISR 0073                     ?_processGestureData 0070  
                     _gesture_lr_delta_ 0066                          __CFG_PWRTE$OFF 0000  
         setProxIntHighThresh@threshold 002B               __end_of_SPI2_Exchange8bit 09A1  
                     _gesture_lr_count_ 0062                     wireReadDataByte@reg 0027  
                 _i2c1_driver_getRXData 089B                     wireReadDataByte@val 0028  
                     _gesture_ud_delta_ 0068             __end_of_do_I2C_DO_NACK_STOP 08CD  
                         _I2C_Read_Byte 096D              __end_of_isGestureAvailable 09C5  
                     _gesture_ud_count_ 0064                     __size_of_PIR_Sensor 0007  
                                ___wmul 0AA5                               ??___awdiv 002A  
 __end_of_i2c1_driver_clearBusCollision 088F  __size_of_i2c1_driver_clearBusCollision 0003  
         _i2c1_driver_clearBusCollision 088C              __end_of_setGestureWaitTime 0B95  
                        __CFG_STVREN$ON 0000         __size_of_do_I2C_DO_NACK_RESTART 0004  
                                _button 0079                        ___awdiv@quotient 002D  
                        ?_do_I2C_DO_ACK 0070                         ?_setGestureGain 0070  
                         _I2C_Send_NACK 08A1                               ??_getMode 0029  
                       ?_setGestureMode 0070                                  _strlen 0A26  
               ??_setGestureEnterThresh 002A                    ??_processGestureData 002F  
                     __end_of_SPI_Write 0A26             __end_of_i2c1_driver_sendACK 08B1  
                        _PMD_Initialize 0942          __end_of_do_I2C_DO_ADDRESS_NACK 0C60  
                          __pdataCOMMON 007A                               ?_I2C_Stop 0070  
                    Display_Name@length 0028                               ??_setMode 002C  
                       ?_WDT_Initialize 0070             __end_of_i2c1_driver_restart 0898  
                          ?_returnReset 0070                ADC_GetConversion@channel 0023  
                     readGesture@motion 0053             __end_of_i2c1_driver_startRX 08A1  
                      ?_PIN_MANAGER_IOC 0070          __end_of_resetGestureParameters 0A6E  
                     _SYSTEM_Initialize 0A3E                 __end_of__initialization 0067  
                      _do_I2C_SEND_STOP 08C1                      __size_of_do_I2C_RX 0046  
                    __size_of_do_I2C_TX 004F                      ?_SYSTEM_Initialize 0070  
                setGestureWaitTime@time 002B                __size_of_do_I2C_TX_EMPTY 0031  
                            _adcResult2 00E0                          ?_I2C_Read_Byte 0070  
                        __pcstackCOMMON 0070                            __pidataBANK0 0876  
                          __pidataBANK2 0952                     ??_SYSTEM_Initialize 0020  
                 i1i2c1_driver_TXData@d 0070                    _setProxIntHighThresh 09EB  
                        _gesture_state_ 005E                          ?_I2C_Send_NACK 0070  
                      ?_TMR2_Initialize 0070                   i1_i2c1_driver_restart 087A  
                __end_of_PMD_Initialize 094A                   i1_i2c1_driver_startRX 0880  
                  __size_of_readGesture 00F3                   __end_of_handleGesture 0F9C  
     __size_of_i2c1_driver_isBufferFull 0007                              ??_I2C_Stop 0020  
             ?_i2c1_driver_isBufferFull 0070                      _gesture_far_count_ 00E2  
                  __size_of_setLEDBoost 0032                    __size_of_setLEDDrive 0029  
                _do_I2C_DO_NACK_RESTART 08CD                  ??i1_i2c1_driver_TXData 0070  
             __end_of_SYSTEM_Initialize 0A56                       ??_SPI2_Initialize 0020  
                        _mssp1_clearIRQ 0889                              __pbssBANK0 005C  
                            __pbssBANK1 00E0                              __pbssBANK2 0168  
                            __pbssBANK3 01A0                              __pbssBANK4 0220  
                  wireWriteDataByte@reg 0029                    wireWriteDataByte@val 0026  
                   getMode@enable_value 002A                ??i1_i2c1_driver_sendNACK 0070  
                ?_i2c1_driver_getRXData 0070              __size_of_SPI2_Exchange8bit 000F  
          __size_of_i2c_busCollisionISR 0003                              __pmaintext 0D52  
                 __end_of_Display_Clear 09B2                           ??_do_I2C_IDLE 0070  
                         ??_do_I2C_RCEN 0070                 setGestureLEDDrive@drive 002D  
                               ?___wmul 0020                         __CFG_PPS1WAY$ON 0000  
                       ??_do_I2C_DO_ACK 0070            __size_of_enableGestureSensor 0064  
                            __pintentry 0004                   ?_setProxIntHighThresh 0070  
                               _CCP1CON 0293                 __size_of_I2C_Write_Byte 001C  
                         ??_I2C_ReStart 0020                        _setProximityGain 0C0C  
                           setMode@mode 002F                         ?_PMD_Initialize 0070  
                   _setAmbientLightGain 0ADF                 __size_of_ADC_Initialize 0008  
                 __size_of_Display_Name 0050          ?_i2c1_driver_clearBusCollision 0070  
                               ?_strlen 0020                       ?_i2c1_driver_open 0070  
                     __end_of_do_I2C_RX 0E02                       __end_of_do_I2C_TX 0E51  
                     ?_i2c1_driver_stop 0070                       _wireReadDataBlock 07B3  
                    ??_i2c1_driver_open 0020                      ??_i2c1_driver_stop 0020  
                               _OSCCON1 0919                                 _OSCCON3 091B  
                         ?_mssp1_setIRQ 0070                            ??_PIR_Sensor 0020  
                               _OSCTUNE 091E                    wireReadDataBlock@len 0028  
                  wireReadDataBlock@reg 002F                    wireReadDataBlock@val 0026  
                               _SSP1ADD 0212                                 _SSP2ADD 021A  
                               _SLRCONA 030C                                 _SLRCONB 030D  
                               _SLRCONC 030E                                 _SSP1BUF 0211  
                __end_of_mssp1_clearIRQ 088C                                 _SSP2BUF 0219  
                    ?_wireReadDataBlock 0026                                 _SSP1MSK 0213  
                     SPI_Write@incoming 0022             __end_of_setGestureIntEnable 0C8B  
               ??_do_I2C_SEND_ADR_WRITE 0070         processGestureData@lr_ratio_last 0037  
           ??_do_I2C_SEND_RESTART_WRITE 0070                            readGesture@i 0059  
                               _Get_ADC 06D3                      _i2c1_driver_TXData 08ED  
                  ?_setAmbientLightGain 0070                      _i2c1_driver_i2cISR 00E4  
                   ??_wireReadDataBlock 002A                                 _i2c_ISR 0B21  
                             _I2C_Start 08A7                         ??_I2C_Read_Byte 0021  
                         setMode@enable 002B                      _i2c1_driver_isNACK 0922  
                __size_of_decodeGesture 0190                     ?_i2c1_driver_TXData 0070  
           __size_of_PWM_Output_Disable 0003                            _Display_Name 0EA0  
                       ??_I2C_Send_NACK 0020                                 ___awdiv 0EF0  
                       __size_of___wmul 001C                      __end_of_PIR_Sensor 0914  
                ?i1_i2c1_driver_restart 0070                       ??_do_I2C_TX_EMPTY 0070  
                   ?_i2c1_driver_isNACK 0070                  ?i1_i2c1_driver_startRX 0070  
              __end_of_wireReadDataByte 0B21                              _initialize 04CA  
                               _getMode 095A        __size_of_setLightIntLowThreshold 0027  
                    _setGestureLEDDrive 0D20                                 __ptext1 04CA  
                               __ptext2 0C0C                                 __ptext3 09FE  
                               __ptext4 09EB                                 __ptext5 0BBC  
                               __ptext6 0B95                                 __ptext7 0BE3  
                               __ptext8 0B6E                                 __ptext9 0D20  
           __size_ofi1_i2c1_driver_stop 0003                     __end_of_do_I2C_IDLE 08E7  
             __end_of_wireReadDataBlock 07FD                     __end_of_do_I2C_RCEN 08ED  
                       __size_of_strlen 0018                   _OSCILLATOR_Initialize 093A  
                             _T2CONbits 001F             __end_of_do_I2C_SEND_RESTART 08C1  
                        ??_mssp1_setIRQ 0070                    ??_i2c1_driver_TXData 0020  
                               _setMode 0E51                ??_PIN_MANAGER_Initialize 0020  
                   __end_of_I2C_ReStart 089B                     ?_setGestureLEDDrive 0070  
                               _printed 006D                         ?_mssp1_clearIRQ 0070  
              _do_I2C_SEND_RESTART_READ 08B5              __size_of_SYSTEM_Initialize 0018  
                               clrloop0 08F4                    __size_of_returnReset 0002  
                  end_of_initialization 0067                    ??_i2c1_driver_isNACK 0070  
                 ??_setAmbientLightGain 002A            __size_of_setProxIntLowThresh 0013  
                               init_ram 08F9            __end_of_i2c1_driver_sendNACK 08DD  
                               initloop 08FA         __size_ofi1_i2c1_driver_sendNACK 0004  
                            ?_I2C_Start 0070           enableGestureSensor@interrupts 0031  
          __end_of_i2c1_driver_resetBus 0876           setGestureExitThresh@threshold 002B  
                  ??_setGestureLEDDrive 002A                      readGesture@gstatus 0055  
                          initialize@id 0031                        ??_setGestureGain 002A  
                ??_setProxIntHighThresh 002A                        ??_setGestureMode 002A  
             _do_I2C_SEND_RESTART_WRITE 08B9                     Display_Name@string1 0025  
         __size_of_setGestureExitThresh 0013                                 strlen@a 0023  
                               strlen@s 0020                        ??_WDT_Initialize 0020  
                     _wireWriteDataByte 0A6E                              _returnStop 0878  
                             _PORTCbits 000E                __end_of_do_I2C_SEND_STOP 08C5  
                         ??_enablePower 0030                      ?_wireWriteDataByte 0026  
       setLightIntHighThreshold@val_low 002D          __size_of_setGestureEnterThresh 0013  
         __end_of_setGestureEnterThresh 09D8                           _decodeGesture 033A  
                    _isGestureAvailable 09B2                      _setGestureWaitTime 0B6E  
                             _SPI_Write 0A11                       __size_of_I2C_Stop 0003  
                           returnStop@p 0070                     ??_wireWriteDataByte 0029  
                      __CFG_FEXTOSC$OFF 0000                       _PWM_Output_Enable 08D1  
       processGestureData@ud_ratio_last 0035                     ?_isGestureAvailable 0070  
                   ?_setGestureWaitTime 0070                      ?_PWM_Output_Enable 0070  
                           _CCP1CONbits 0293                   SPI2_Exchange8bit@data 0020  
         __size_of_do_I2C_SEND_ADR_READ 0008                   setProximityGain@drive 002D  
              __size_of_PWM1_Initialize 000C                     ??_PWM_Output_Enable 0020  
      __end_of_i2c1_driver_isBufferFull 0922                             _do_I2C_IDLE 08E2  
                           _do_I2C_RCEN 08E7               __end_of_wireWriteDataByte 0A89  
                        _I2C_Write_Byte 0A89                    ??_isGestureAvailable 0029  
                        __end_of___wmul 0AC1                    ??_setGestureWaitTime 002A  
                         __pidataCOMMON 0877                             ?_initialize 0070  
                           _I2C_ReStart 0898                          _ADC_Initialize 0932  
                i1_i2c1_driver_sendNACK 08B1                  ?_OSCILLATOR_Initialize 0070  
              _setLightIntHighThreshold 0B95              __size_of_wireReadDataBlock 004A  
                       _gesture_motion_ 0168                         _SPI2_Initialize 0914  
          __size_of_do_I2C_DO_NACK_STOP 0004             __size_of_processGestureData 02CF  
                        ?_decodeGesture 0070                          __end_of_strlen 0A3E  
               ?_do_I2C_DO_NACK_RESTART 0070                     start_initialization 002E  
                    setGestureGain@gain 002D                     _i2c_busCollisionISR 088F  
       __size_of_PIN_MANAGER_Initialize 0036               __end_of_PWM_Output_Enable 08D5  
              ?i1_i2c1_driver_getRXData 0070                              ?_SPI_Write 0070  
      setLightIntHighThreshold@val_high 002E                     _enableGestureSensor 0F9C  
                   __end_of_enablePower 0992            __size_of_i2c1_driver_sendACK 0004  
               ??_i2c1_driver_getRXData 0020                __end_of_setProximityGain 0C35  
          __size_of_i2c1_driver_restart 0003                processGestureData@d_last 0042  
          __size_of_i2c1_driver_startRX 0003                processGestureData@l_last 0043  
                           ??_I2C_Start 0020                processGestureData@r_last 0044  
              __size_of_PIN_MANAGER_IOC 0001                processGestureData@u_last 0041  
               _processGestureData$1535 0039                 _processGestureData$1536 003B  
               _processGestureData$1537 003D                 _processGestureData$1538 003F  
                  ?_i2c_busCollisionISR 0070                        __CFG_LPBOREN$OFF 0000  
                  __end_of_mssp1_setIRQ 0889                  __end_of_I2C_Write_Byte 0AA5  
                      ??_PMD_Initialize 0020         setLightIntLowThreshold@val_high 002E  
                              ??___wmul 0024                    ?_enableGestureSensor 0070  
                           _CCPTMRSbits 029F                           ??_readGesture 0051  
                __end_of_ADC_Initialize 093A                           ?_do_I2C_RESET 0070  
                           __pdataBANK0 006E                             __pdataBANK2 0160  
                    setGestureMode@mode 002B                 _setLightIntLowThreshold 0BBC  
             setGestureIntEnable@enable 002C                setAmbientLightGain@drive 002B  
                           ?_returnStop 0070                                ??_strlen 0022  
        __end_of_do_I2C_DO_NACK_RESTART 08D1                           ??_setLEDBoost 002A  
                         ??_setLEDDrive 002A                    _i2c1_driver_sendNACK 08D9  
                setGestureIntEnable@val 002B                             __pbssCOMMON 0076  
                             ___latbits 0002                               _adcResult 006C  
                  _i2c1_driver_resetBus 0875                           __pcstackBANK0 0020  
                         __pcstackBANK1 00A0                           __pcstackBANK2 0120  
              __size_of_TMR2_Initialize 0008                               _do_I2C_RX 0DBC  
                             _do_I2C_TX 0E02          __size_of_do_I2C_SEND_ADR_WRITE 0007  
         __size_ofi1_i2c1_driver_TXData 0005           __end_of_do_I2C_SEND_ADR_WRITE 090D  
                              ?_Get_ADC 0070                   readGesture@fifo_data2 00A0  
             __size_of_i2c1_driver_open 000A                   readGesture@fifo_level 0058  
             __size_of_i2c1_driver_stop 0003                                ?_i2c_ISR 0070  
                   __size_of_initialize 0116                         _do_I2C_TX_EMPTY 0C8B  
                __size_of_handleGesture 005A                   ??_i2c_busCollisionISR 0070  
                 __end_of_fsmStateTable 1020                  _PIN_MANAGER_Initialize 0D86  
               ??i1_i2c1_driver_restart 0070                 ??i1_i2c1_driver_startRX 0070  
                       ?_I2C_Write_Byte 0070                   ??_enableGestureSensor 0030  
               __end_of_SPI2_Initialize 091B                          ??_do_I2C_RESET 0070  
                              ?___awdiv 0026              __size_of_wireWriteDataByte 001B  
              ??_do_I2C_DO_ADDRESS_NACK 0070                         ?_ADC_Initialize 0070  
           _i2c1_driver_busCollisionISR 006A                     _setProxIntLowThresh 09FE  
                 __end_of_do_I2C_DO_ACK 08C9                       ??_PWM1_Initialize 0020  
          ??_INTERRUPT_InterruptManager 0076                _i2c1_driver_isBufferFull 091B  
                              ?_getMode 0070                         ??_decodeGesture 0020  
                     ?_wireReadDataByte 0070              ??_do_I2C_SEND_RESTART_READ 0070  
                 ?_i2c1_driver_sendNACK 0070         __end_ofi1_i2c1_driver_getRXData 0886  
                      ??_mssp1_clearIRQ 0070                             _enablePower 0984  
                    ??_wireReadDataByte 0026                     __end_of_readGesture 06D3  
                 ?_i2c1_driver_resetBus 0070      __size_of_do_I2C_SEND_RESTART_WRITE 0004  
                              _I2C_Stop 07FD                ??_resetGestureParameters 0020  
                              ?_setMode 002B              __size_of_PWM_Output_Enable 0004  
                            ?_do_I2C_RX 0070                              ?_do_I2C_TX 0070  
                      __CFG_WDTE$SWDTEN 0000                             ??_SPI_Write 0021  
                     _i2c1_driver_start 08A4                  __size_of_Display_Clear 0011  
                   __end_of_setLEDBoost 0CEE                     __end_of_setLEDDrive 0C0C  
                  ?_setProxIntLowThresh 0070                   readGesture@bytes_read 0056  
                    ?_i2c1_driver_start 0070                          ___wmul@product 0024  
                              _LATCbits 010E                     __size_of_returnStop 0002  
                             clear_ram0 08F3                                _PIE0bits 0090  
                              _PIE1bits 0091            __size_of_setGestureIntEnable 002B  
            __end_of_PWM_Output_Disable 0895                     _gesture_near_count_ 0060  
                   ??_i2c1_driver_start 0020     __size_of_INTERRUPT_InterruptManager 0028  
                              _PIR0bits 0010                                _PIR1bits 0011  
                 __end_of_I2C_Read_Byte 0978               ??_setLightIntLowThreshold 002C  
                              _SSP1CON1 0215                                _SSP1CON2 0216  
                              _SSP2CON1 021D                          setLEDBoost@val 002C  
                              _SSP1STAT 0214                                _SSP2STAT 021C  
            __end_ofi1_i2c1_driver_stop 0880                       ??_PIN_MANAGER_IOC 0070  
                 __end_of_I2C_Send_NACK 08A4                          setLEDDrive@val 002C  
      processGestureData@lr_ratio_first 0033                              _ADCON0bits 009D  
                     ___wmul@multiplier 0020                       ?_do_I2C_SEND_STOP 0070  
             processGestureData@d_first 0046                           _handleGesture 0F42  
             __end_of_i2c1_driver_start 08A7                           ??_returnReset 0071  
                    ??_do_I2C_SEND_STOP 0070             __size_of_i2c1_driver_TXData 0006  
           __end_of_setAmbientLightGain 0AFD               processGestureData@l_first 0047  
     __end_of_do_I2C_SEND_RESTART_WRITE 08BD                 __end_of_do_I2C_TX_EMPTY 0CBC  
          __end_of_setGestureExitThresh 09EB               processGestureData@r_first 0048  
             processGestureData@u_first 0045                   ??_setProxIntLowThresh 002A  
          __size_of_do_I2C_SEND_RESTART 0004             __size_of_i2c1_driver_isNACK 0008  
                     setGestureGain@val 002C                   __size_of_mssp1_setIRQ 0003  
                     ??_TMR2_Initialize 0020                        __size_of_Get_ADC 00E0  
                   _do_I2C_DO_NACK_STOP 08C9                        __size_of_i2c_ISR 0026  
            ??_setLightIntHighThreshold 002C                       _ADC_GetConversion 0AC1  
           __size_of_setGestureLEDDrive 0032                          setMode@reg_val 002E  
        setLightIntLowThreshold@val_low 002D                            ?_do_I2C_IDLE 0070  
                         _Display_Clear 09A1                            ?_do_I2C_RCEN 0070  
                     setGestureMode@val 002C                        ?_SPI2_Initialize 0070  
               ?i1_i2c1_driver_sendNACK 0070                 ??_OSCILLATOR_Initialize 0020  
                    ?_ADC_GetConversion 0020                     _i2c1_driver_sendACK 08AD  
                      __size_of___awdiv 0052           __size_of_setProxIntHighThresh 0013  
                           _readGesture 05E0         __size_of_do_I2C_DO_ADDRESS_NACK 002B  
                   i2c1_driver_TXData@d 0020                  ??_i2c1_driver_sendNACK 0020  
                          ??_initialize 0030                            ?_I2C_ReStart 0070  
                   _i2c1_driver_restart 0895        setLightIntLowThreshold@threshold 002A  
                  ?_do_I2C_DO_NACK_STOP 0070                     _i2c1_driver_startRX 089E  
                        ?_handleGesture 0070            __end_of_do_I2C_SEND_ADR_READ 0932  
                      __size_of_getMode 0009                  ??_i2c1_driver_resetBus 0070  
                  readGesture@fifo_data 0120                             _setLEDBoost 0CBC  
                   ??_ADC_GetConversion 0022                             _setLEDDrive 0BE3  
       __size_of_resetGestureParameters 0018                            _mssp1_setIRQ 0886  
       __end_of_setLightIntLowThreshold 0BE3                             ??_do_I2C_RX 0070  
                           ??_do_I2C_TX 0070                   setGestureLEDDrive@val 002C  
                      __size_of_setMode 004F                                __ptext10 0CEE  
                              __ptext11 09D8                                __ptext20 0EF0  
                              __ptext12 09C5                                __ptext21 09B2  
                              __ptext13 0ADF                                __ptext30 0A6E  
                              __ptext22 033A                                __ptext14 0963  
                              __ptext31 095A                                __ptext23 0F9C  
                              __ptext15 0F42                                __ptext40 08D9  
                              __ptext32 0AFD                                __ptext24 0CBC  
                              __ptext16 05E0                                __ptext41 096D  
                              __ptext33 0A89                                __ptext25 0B47  
                              __ptext17 07B3                                __ptext50 0914  
                              __ptext42 089E                                __ptext34 08ED  
                              __ptext26 0C60                                __ptext18 006B  
                              __ptext51 0978                                __ptext43 091B  
                              __ptext35 07FD                                __ptext27 0A56  
                              __ptext19 0AA5                                __ptext60 08D1  
                              __ptext52 0942                                __ptext44 089B  
                              __ptext36 08AA                                __ptext28 0984  
                              __ptext61 0892                                __ptext53 0D86  
                              __ptext45 0898                                __ptext37 08A7  
                              __ptext29 0E51                                __ptext70 0889  
                              __ptext62 0AC1                                __ptext54 093A  
                              __ptext46 0895                                __ptext38 08A4  
                              __ptext71 0DBC                                __ptext63 09A1  
                              __ptext55 0932                                __ptext47 0A3E  
                              __ptext39 08A1                                __ptext80 08C1  
                              __ptext72 0E02                                __ptext64 0A11  
                              __ptext56 090D                                __ptext48 08D5  
                              __ptext81 08BD                                __ptext73 0C35  
                              __ptext65 0992                                __ptext57 06D3  
                              __ptext49 094A                                __ptext90 0883  
                              __ptext82 08B9                                __ptext74 08CD  
                              __ptext58 0EA0                                __ptext91 08B1  
                              __ptext83 08B5                                __ptext75 08C9  
                              __ptext67 088F                                __ptext59 0A26  
                              __ptext92 0875                                __ptext84 08E2  
                              __ptext76 08C5                                __ptext68 088C  
                              __ptext93 0880                                __ptext85 08FF  
                              __ptext77 08E7                                __ptext69 0B21  
                              __ptext94 0002                                __ptext86 0C8B  
                              __ptext78 0906                                __ptext95 0878  
                              __ptext87 0886                                __ptext79 092A  
                              __ptext96 087D                                __ptext88 0922  
                              __ptext97 087A                                __ptext89 08DD  
                              __ptext98 08AD                                __ptext99 0874  
                 _setGestureEnterThresh 09C5                            _SSP1CON1bits 0215  
                          _SSP1CON2bits 0216          setGestureEnterThresh@threshold 002B  
                          _SSP2CON1bits 021D                    ?_i2c1_driver_sendACK 0070  
                  __end_of_do_I2C_RESET 0906                    ?_i2c1_driver_restart 0070  
                   __end_of_returnReset 0004                        _i2c1_driver_open 0963  
                      _i2c1_driver_stop 08AA                           __size_of_main 0034  
                  ?_i2c1_driver_startRX 0070                       ?_setProximityGain 0070  
        __size_of_i2c1_driver_getRXData 0003           __end_of_i2c1_driver_getRXData 089E  
                    __end_of_initialize 05E0               __end_of_ADC_GetConversion 0ADF  
                    ??_setProximityGain 002A        __size_ofi1_i2c1_driver_getRXData 0003  
                    _decodeGesture$1540 0022                      _decodeGesture$1541 0024  
                    _decodeGesture$1542 0026                      _decodeGesture$1543 0028  
                    _decodeGesture$1544 002A                      _decodeGesture$1545 002C  
                    _decodeGesture$1546 002E                      _decodeGesture$1547 0030  
                        ?_Display_Clear 0070          __end_ofi1_i2c1_driver_sendNACK 08B5  
                              int$flags 007E      __end_of_INTERRUPT_InterruptManager 002C  
            _INTERRUPT_InterruptManager 0004                            _SSP1STATbits 0214  
           __size_of_isGestureAvailable 0013                           Display_Name@i 002A  
                   setProximityGain@val 002C        __end_of_do_I2C_SEND_RESTART_READ 08B9  
           __size_of_setGestureWaitTime 0027              __end_of_processGestureData 033A  
                          ??_returnStop 0071                            _SSP2STATbits 021C  
                 ??_do_I2C_DO_NACK_STOP 0070                              Get_ADC@val 002F  
               __size_of_setGestureGain 0032                              _INTCONbits 000B  
               __size_of_setGestureMode 0027              __size_of_i2c1_driver_start 0003  
                setAmbientLightGain@val 002C                   ??_i2c1_driver_sendACK 0070  
                      ?_do_I2C_TX_EMPTY 0070                 __size_of_WDT_Initialize 0004  
                _do_I2C_DO_ADDRESS_NACK 0C35                                intlevel1 0000  
                 ??_i2c1_driver_restart 0020                   ??_i2c1_driver_startRX 0020  
               ?_PIN_MANAGER_Initialize 0070                        ??_I2C_Write_Byte 0021  
                     __CFG_CLKOUTEN$OFF 0000                      __end_of_returnStop 087A  
                       _PWM1_Initialize 0978                        ??_ADC_Initialize 0020  
                _resetGestureParameters 0A56              ??_i2c1_driver_isBufferFull 0020  
                         ?_Display_Name 0025          __size_ofi1_i2c1_driver_restart 0003  
         __end_ofi1_i2c1_driver_restart 087D          __size_ofi1_i2c1_driver_startRX 0003  
          __end_ofi1_i2c1_driver_TXData 08E2           __end_ofi1_i2c1_driver_startRX 0883  
                  _setGestureExitThresh 09D8                         ??_handleGesture 005B  
                         __pstringtext1 1000                           __pstringtext2 1030  
                         __pstringtext3 103D                           __pstringtext4 1049  
                         __pstringtext5 0000                              _SSP1DATPPS 0E21  
                          ?_enablePower 0070                              _SSP2DATPPS 0E1E  
                            _SSP1CLKPPS 0E20                     _setGestureIntEnable 0C60  
                            _SSP2CLKPPS 0E1D                        setLEDBoost@boost 002D  
                ?_setGestureEnterThresh 0070                             _returnReset 0002  
                            _PIR_Sensor 090D          __end_of_PIN_MANAGER_Initialize 0DBC  
           __end_of_i2c_busCollisionISR 0892               __size_of_wireReadDataByte 0024  
                      setLEDDrive@drive 002D                     processGestureData@i 004D  
                       _PIN_MANAGER_IOC 0874             __end_of_enableGestureSensor 1000  
                 _do_I2C_SEND_ADR_WRITE 0906                    ?_setGestureIntEnable 0070  
            __size_of_ADC_GetConversion 001E                    _do_I2C_SEND_ADR_READ 092A  
                       ??_Display_Clear 0023        __end_of_setLightIntHighThreshold 0BBC  
                        ??_Display_Name 0027  
=======
                ?_EUSART_SetRxInterruptHandler 0020                                   returnReset@p 0076  
                        ?_setGestureExitThresh 0076                             __size_of_I2C_Start 0003  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 002C  
                         __size_of_do_I2C_IDLE 0005                                             _on 00EF  
                          _do_I2C_SEND_RESTART 113B                           __size_of_do_I2C_RCEN 0006  
                          ___wmul@multiplicand 0022                             _PWM_Output_Disable 1109  
                                  __CFG_LVP$ON 0000                                            l554 1250  
                                          l707 09C4                                            l740 09A5  
             processGestureData@ud_ratio_first 0031                                            l790 07C9  
                                          _PR2 001E                                   __CFG_CPD$OFF 0000  
                                          _abs 1351                         ??_EUSART_RxDataHandler 0076  
                        __end_of_decodeGesture 0501                           __size_of_I2C_ReStart 0003  
                                          _pad 0A4B                                            _val 016E  
               ?_EUSART_SetFramingErrorHandler 0020                        __size_of_PMD_Initialize 0008  
                           I2C_Write_Byte@Byte 0023                                _TMR2_Initialize 11C7  
                        __size_of_do_I2C_RESET 0007                                            wreg 0009  
                                   _TXSTA1bits 019E                            ?_PWM_Output_Disable 0076  
                           i1_i2c1_driver_stop 10F4                                           l1110 03FA  
                                         l1130 0483                                           l1122 044C  
                                         l1106 03DD                                           ?_abs 0033  
                                         l1213 13A9                                           l1061 0270  
                                         l1310 13E9                                           l1142 04D3  
                                         l1134 04A0                                           l1118 042F  
                                         l1038 00B3                                           l1080 0314  
                                         l1073 02F4                                           l1065 0299  
                                         l1146 04F0                                           l1067 02C0  
                                         l1084 033D                                           l1085 0356  
                                         l1415 15E8                                           l1416 15F0  
                                         l1641 0A63                                           l1650 054E  
                                         l1803 0CFA                                           l1644 0A83  
                                         l1654 0569                                           l1655 057D  
                                         l5031 1343                                           l1649 0547  
                                         l1658 0613                                           l1690 13C5  
                                         l1790 0EE4                                           ?_pad 0033  
                                         l7023 0561                                           l7033 05AA  
                                         l7043 0585                                           l7051 061F  
                                         l7123 0BF9                                           l7061 0632  
                                         l7029 0578                                           l7117 0BD8  
                                         l7109 0B9E                                           l7133 0C0A  
                                         l7205 0949                                           l7301 0120  
                                         l8101 0665                                           l7055 0627  
                                         l7127 0BFF                                           l7207 094A  
                                         l8007 1246                                           l7143 13BF  
                                         l7073 1255                                           l7065 063F  
                                         l8201 0ACB                                           l7305 016E  
                                         l7241 08B0                                           l7411 0379  
                                         l4915 0A0F                                           l7323 0221  
                                         l7251 00A2                                           l7421 038F  
                                         l4941 0A46                                           l4933 0A35  
                                         l4925 0A17                                           l4909 0A04  
                                         l7333 0247                                           l7325 0224  
                                         l7503 04CE                                           l7423 0391  
                                         l7167 1279                                           l4927 0A23  
                                         l7343 026B                                           l7335 024A  
                                         l7319 020F                                           l7271 00AF  
                                         l7255 00A4                                           l7239 0881  
                                         l8303 0B12                                           l7185 0916  
                                         l7513 04FD                                           l7441 03B5  
                                         l7433 03A3                                           l7417 0384  
                                         l4937 0A3E                                           l7361 02BB  
                                         l7329 0235                                           l7273 0109  
                                         l8313 0B2E                                           l8305 0B21  
                                         l8067 17B6                                           l8083 122A  
                                         l6811 15E2                                           l7507 04EB  
                                         l7435 03A5                                           l7427 0399  
                                         l7371 02E7                                           l8253 0F70  
                                         l8245 0F40                                           l8069 17B7  
                                         l7197 0930                                           l7189 0918  
                                         l7453 03F5                                           l7429 039B  
                                         l7517 04FF                                           l7357 02B3  
                                         l7349 0294                                           l8317 0B3C  
                                         l8405 09B1                                           l8239 0F28  
                                         l6911 0A61                                           l7199 093D  
                                         l7471 0447                                           l7439 03AF  
                                         l7383 030F                                           l7287 0124  
                                         l8319 0B59                                           l8265 0F95  
                                         l6825 1609                                           l6921 0A8F  
                                         l7537 16AF                                           l7449 03D8  
                                         l7721 0D55                                           l7713 0D32  
                                         l7705 0D1F                                           l8267 0F9F  
                                         l8291 0FFD                                           l6835 1717  
                                         l6907 0A59                                           l7539 16CE  
                                         l7467 042A                                           l7459 0407  
                                         l7379 02F6                                           l8427 09EC  
                                         l8277 0FC1                                           l6941 0E58  
                                         l6917 0A65                                           l7485 047E  
                                         l7477 0459                                           l7389 0338  
                                         l7733 0D63                                           l6951 0E6F  
                                         l6935 0E2B                                           l6839 173A  
                                         l7495 04AD                                           l7735 0DC4  
                                         l8295 0AFB                                           l8289 0FF0  
                                         l6961 0EB7                                           l6953 0E7E  
                                         l7489 049B                                           l6867 1326  
                                         l6963 0EC3                                           l6939 0E53  
                                         l7739 0DCD                                           l7907 166E  
                                         l7843 1552                                           l7819 12C5  
                                         l6869 1332                                           l6973 0C59  
                                         l6893 121A                                           l7925 16A0  
                                         l7829 12B2                                           l7759 13EE  
                                         l7687 0988                                           l6991 0CCD  
                                         l6879 14A3                                           l6887 13AC  
                                         l7695 0D1B                                           l7943 1511  
                                         l7863 152B                                           l7839 1550  
                                         l6985 0C8E                                           l6993 0CD9  
                                         l6977 0C81                                           l7961 15DE  
                                         l6987 0C9D                                           l7699 0DD0  
                                         l8587 0B45                                           l7859 1529  
                                         l7879 128C                                           l7889 129F  
                                         l7979 163C                                           l7997 14EA  
                                         STR_1 183D                                           STR_2 1830  
                                         STR_3 1820                                           STR_4 1849  
                                         STR_5 1854                                           STR_6 1854  
                                         STR_7 1854                                           STR_8 1854  
                      __end_of_PWM1_Initialize 123A                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u3705 0A36                                           u6035 1738  
                                         u6115 0A6F                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         u6215 0EA4                                           u6135 135B  
                                         u7015 02CC                                           _PMD3 0914  
                                         _PMD4 0915                                           u3665 0A1A  
                                         u7105 0346                                           u7025 02DA  
                                         _PMD5 0916                                           u6315 0CBB  
                                         u6180 0E60                                           u6405 0559  
                                         u3685 0A24                                           u6350 051D  
                                         u3695 0A2E                                           u7135 0362  
                                         u6360 051E                                           u6435 061D  
                                         u7315 041B                                           u7075 0300  
                                         u8205 0F32                                           u7325 0438  
                                         u7085 031D                                           u8215 0F3E  
                                         u6455 0599                                           u7415 04BF  
                                         u7335 0456                                           u7095 0329  
                                         u8225 0F4A                                           u6465 05A5  
                                         u7425 04DC                                           u7265 03C9  
                                         u8315 0FCB                                           u8235 0F56  
                                         u7435 04FA                                           u7275 03E6  
                                         u6644 0929                                           u8325 0FD7  
                                         u8245 0F68                                           u6645 0928  
                                         u7365 046F                                           u7285 0404  
                                         u6654 0935                           ?_do_I2C_SEND_RESTART 0076  
                                         u8335 0FEB                                           u8255 0F7A  
                                         u8175 0F00                                           u6655 0934  
                                         u7375 048C                                           u6575 13C6  
                                         u7535 0D5E                                           u7465 0992  
                                         u8265 0F86                                           u8185 0F1A  
                                         u7385 04AA                                           u6585 13CB  
                                         u6905 023F                                           u7545 0D6D  
                                         u8345 0B0D                                           u8195 0F26  
                                         u8285 0FA9                                           u7805 1787  
                                         u8517 0DD4                                           u8295 0FB5  
                                         u7815 17A1                                           u7735 161D  
                                         u6935 025C                                           u6775 00BE  
                                         u6695 088A                                           u8527 0DE7  
                                         u7575 1572                                           u8537 0960  
                                         u7825 17AD                                           u6945 0279  
                                         u7585 0812                                           u8547 0970  
                                         u6955 0285                                           u6875 0208  
                                         u7675 164F                                           u8557 125F  
                                         u6965 02A2                                           u6885 0219  
                                         u8567 12D6                                           u6895 022E  
                                         u7695 1681                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000              __size_of_do_I2C_SEND_RESTART_READ 0004  
                                         abs@a 0033                                           _dbuf 02A0  
                          ?i1_i2c1_driver_stop 0076                      ?_do_I2C_SEND_RESTART_READ 0076  
                                         _main 09A9                                           _dtoa 0501  
                                         _name 00E6                      __size_of_do_I2C_SEND_STOP 0004  
                       __size_of_do_I2C_DO_ACK 0004                                           _prec 0160  
                                         _nout 01D5                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         _prox 016B                                           fsr1l 0006  
                                         pad@w 0039                                           btemp 007E  
                        ??_setGestureIntEnable 002A                               __end_of_I2C_Stop 1127  
                                __CFG_BOREN$ON 0000                        i1_i2c1_driver_getRXData 10FA  
                        ?_do_I2C_SEND_ADR_READ 0076                                  __CFG_BORV$LOW 0000  
              ??_i2c1_driver_clearBusCollision 0076                                           start 0047  
                              __end_of_Get_ADC 1000                            I2C_Write_Byte@count 0024  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
                         ??_PWM_Output_Disable 0020                                __end_of_i2c_ISR 149F  
                     ??_do_I2C_DO_NACK_RESTART 0076                                          ??_abs 0035  
                                        ??_pad 0036                                   ?_readGesture 004F  
                                 _do_I2C_RESET 1183                                  ?_EUSART_Write 0076  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 11BF  
                         ??i1_i2c1_driver_stop 0076                                __end_of___aodiv 0EF6  
                                        _ADACT 009F                       __end_of_i2c1_driver_open 1217  
                                        ?_main 0076                                          ?_dtoa 003C  
                              __end_of___aomod 0D0C                                __end_of___awdiv 0A4B  
                     __end_of_i2c1_driver_stop 1124                                ___awdiv@divisor 0026  
                                        _T2CON 001F                     __end_of_i2c1_driver_TXData 1177  
                               __CFG_DEBUG$OFF 0000                                          i1l252 001F  
                                        i1l157 08EE                                          i1l173 17D4  
                                        i1l261 0045                                          i1l254 002C  
                                        i1l256 0039                                          i1l249 0010  
                                 ?_setLEDBoost 0076                                ___awdiv@counter 002B  
                                 ?_setLEDDrive 0076                                 _setGestureGain 163E  
                                        _OSCEN 091D                             wireReadDataBlock@j 0030  
                                 vfpfcnvrt@fmt 005A                                 _setGestureMode 14C5  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                  __end_of_setProxIntLowThresh 12C7                                __end_of_getMode 120D  
                           __size_of_UART_Byte 006E                                    ?_PIR_Sensor 0076  
                        isGestureAvailable@val 002A                        __end_of_PIN_MANAGER_IOC 10E9  
                                        _flags 0162                     __end_of_i2c1_driver_isNACK 11A7  
                       __size_of_I2C_Read_Byte 000B                                 _WDT_Initialize 1153  
                                        _names 01E7                                          _fputc 170D  
                                        _fputs 149F                               _b_i2c_error_flag 0168  
                 __end_of_setProxIntHighThresh 12B4                     ?_do_I2C_SEND_RESTART_WRITE 0076  
                                        pad@fp 003B                                          _width 01D7  
                                        _state 016A                                          _putch 116B  
                                        _start 016F                          ??_do_I2C_SEND_RESTART 0076  
                                        dtoa@d 003C                                          dtoa@i 0058  
                                        dtoa@n 0050                                          dtoa@p 004A  
                                        dtoa@s 004E                                          dtoa@w 004C  
                              __end_of_setMode 0959                              __end_of_I2C_Start 1121  
                                        pclath 000A                        __size_of_mssp1_clearIRQ 0003  
                         i1_i2c1_driver_TXData 115B                   __size_of_setAmbientLightGain 001E  
                       ?_do_I2C_SEND_ADR_WRITE 0076                         __size_of_I2C_Send_NACK 0003  
                                        status 0003                                          wtemp0 007E  
                              __end_of_sprintf 1455                             __size_of_SPI_Write 0015  
                     ?_setLightIntLowThreshold 002A                     __end_of_setGestureLEDDrive 16A2  
                        setGestureWaitTime@val 002C                                  _fsmStateTable 1800  
                                _gesture_data_ 0220                                __initialization 0049  
                       ??_setGestureExitThresh 002A                              _SPI2_Exchange8bit 1248  
                   processGestureData@lr_delta 004B                                     _i2c_status 01A0  
                                 __end_of_main 09F9                                   __end_of_dtoa 0652  
                            _handleGestureFlag 0169                     processGestureData@ud_delta 0049  
                               ??_EUSART_Write 0020                             ?_SPI2_Exchange8bit 0076  
                      __end_of_TMR2_Initialize 11CF                    ?_INTERRUPT_InterruptManager 0076  
                       __end_of_setGestureGain 1670                      __size_of_setProximityGain 0029  
               ??_EUSART_SetRxInterruptHandler 0022                         __end_of_setGestureMode 14EC  
                                _do_I2C_DO_ACK 1143                                         ??_main 00E0  
                                       ??_dtoa 0044                  __size_of_i2c1_driver_sendNACK 0004  
                     __size_of_SPI2_Initialize 0007                            ??_SPI2_Exchange8bit 0020  
            __size_of_setLightIntHighThreshold 0027                  __size_of_i2c1_driver_resetBus 0001  
                       __end_of_WDT_Initialize 1157                        ?_do_I2C_DO_ADDRESS_NACK 0076  
                    ?_setLightIntHighThreshold 002A              setLightIntHighThreshold@threshold 002A  
                         __end_of_Display_Name 09A9                           __size_of_enablePower 000E  
    __end_of_EUSART_DefaultFramingErrorHandler 10E8     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0076             ?_EUSART_DefaultFramingErrorHandler 0076  
            _EUSART_DefaultFramingErrorHandler 10E7                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0266  
                                       ?_fputc 0023                                         ?_fputs 002B  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                             ___awdiv@dividend 0028                             _processGestureData 0094  
                                       _ANSELA 018C                                         ?_putch 0076  
                                       _ANSELB 018D                                         _ANSELC 018E  
                           __CFG_RSTOSC$HFINT1 0000                   setProxIntLowThresh@threshold 002B  
                        ?i1_i2c1_driver_TXData 0076                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RC2PPS 0EA2  
                                       _RB5PPS 0E9D                                         _RB6PPS 0E9E  
                             ?_PWM1_Initialize 0076                                         _RB7PPS 0E9F  
                                       _RC5PPS 0EA5                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _RC6PPS 0EA6  
                                       _ODCONC 028E                                         i1l1428 1431  
                                       i1l5501 08C1                                         i1l5505 08C4  
                                       i1l5523 0908                                         i1l5515 08CA  
                                       i1l5509 08C7                                         i1l6079 1489  
                                       i1l6425 16FB                                         i1l5545 17D6  
                                       i1l6419 16EC                                         i1l5483 1594  
                                       i1l5555 17DC                                         i1l6429 170A  
                                       i1l5565 07D2                                         i1l5581 07DC  
                                       i1l5549 17D9                      ??i1_i2c1_driver_getRXData 0076  
                                       i1l5575 07D9                                         i1l5479 1591  
                                       i1l5569 07D5                                         i1l5489 1597  
                                       i1l8591 08E0                                         i1l8593 15AC  
                                       i1l8595 07F1                                         i1l8589 17F1  
                                    ??_Get_ADC 002C                               _wireReadDataByte 1455  
                                       _OSCFRQ 091F                        ?_resetGestureParameters 0076  
                       ??_do_I2C_SEND_ADR_READ 0076                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                       u615lld 0E28                                         u626lld 0C56  
                                    ??_i2c_ISR 0079                                         _TXREG1 019A  
                          ?_processGestureData 0076                              _gesture_lr_delta_ 0070  
                               __CFG_PWRTE$OFF 0000                  setProxIntHighThresh@threshold 002B  
                    __end_of_SPI2_Exchange8bit 1257                                         _On_Off 177D  
                            _gesture_lr_count_ 00E8                            wireReadDataByte@reg 0027  
                        _i2c1_driver_getRXData 1112                            wireReadDataByte@val 0028  
                                 vfprintf@cfmt 00A1                              _gesture_ud_delta_ 0072  
                            __end_of_UART_Byte 07CF                    __end_of_do_I2C_DO_NACK_STOP 114B  
                                _I2C_Read_Byte 1217                     __end_of_isGestureAvailable 127B  
                            _gesture_ud_count_ 00EA                                      ??___aodiv 0030  
                          __size_of_PIR_Sensor 000C                                      ??___aomod 0030  
                                       ___wmul 13BC                                      ??___awdiv 002A  
        __end_of_i2c1_driver_clearBusCollision 1106         __size_of_i2c1_driver_clearBusCollision 0003  
                _i2c1_driver_clearBusCollision 1103                     __end_of_setGestureWaitTime 1513  
                               __CFG_STVREN$ON 0000                __size_of_do_I2C_DO_NACK_RESTART 0004  
                          _EUSART_Transmit_ISR 1414                                         _button 016D  
                             ___awdiv@quotient 002D                                 ?_do_I2C_DO_ACK 0076  
                              ?_setGestureGain 0076                                  _I2C_Send_NACK 1118  
                                    ??_getMode 0029                                         pad@buf 0033  
                              ?_setGestureMode 0076                                         _strcat 12F2  
                                       dtoa@fp 0047                                         _strcpy 1339  
                                       _strlen 1321                        ??_setGestureEnterThresh 002A  
                         ??_processGestureData 002F                              __end_of_SPI_Write 12DC  
                                       fputc@c 0023                    __end_of_i2c1_driver_sendACK 112F  
                               _PMD_Initialize 11BF                 __end_of_do_I2C_DO_ADDRESS_NACK 15B5  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032                                      ?_I2C_Stop 0076  
                           Display_Name@length 0028                                      ??_setMode 002C  
                              ?_WDT_Initialize 0076                    __end_of_i2c1_driver_restart 110F  
                                 ?_returnReset 0076                       ADC_GetConversion@channel 0023  
                            readGesture@motion 0053                    __end_of_i2c1_driver_startRX 1118  
                             __end_of_vfprintf 16D7                               ?_PIN_MANAGER_IOC 0076  
                                    ??_sprintf 006F                           ?_EUSART_Transmit_ISR 0076  
               __end_of_resetGestureParameters 12F2                              _SYSTEM_Initialize 136A  
                      __end_of__initialization 0090                               _do_I2C_SEND_STOP 113F  
                           __size_of_do_I2C_RX 0046                             __size_of_do_I2C_TX 004F  
                           ?_SYSTEM_Initialize 0076                         setGestureWaitTime@time 002B  
                     __size_of_do_I2C_TX_EMPTY 0031                                     _adcResult2 01D9  
         __end_of_EUSART_SetTxInterruptHandler 1204          __size_of_EUSART_SetTxInterruptHandler 0009  
                 _EUSART_SetTxInterruptHandler 11FB                                 ?_I2C_Read_Byte 0076  
                               __pcstackCOMMON 0076                                   __pidataBANK1 0800  
                                 __pidataBANK2 0002                                   __pidataBANK3 11CF  
                          ??_SYSTEM_Initialize 0023                                  __end_of_fputc 1744  
                                __end_of_fputs 14C5                          i1i2c1_driver_TXData@d 0076  
                         _setProxIntHighThresh 12A1                                 _gesture_state_ 01DD  
                                __end_of_putch 1171                                 ?_I2C_Send_NACK 0076  
                             ?_TMR2_Initialize 0076                          i1_i2c1_driver_restart 10F1  
                       __end_of_PMD_Initialize 11C7                          i1_i2c1_driver_startRX 10F7  
                         __size_of_readGesture 00F3                          __end_of_handleGesture 0B5C  
            __size_of_i2c1_driver_isBufferFull 0007                                     ??_I2C_Stop 0020  
                         _eusartRxStatusBuffer 01BD                      ?_i2c1_driver_isBufferFull 0076  
                           _gesture_far_count_ 01DF                           __size_of_setLEDBoost 0032  
                         __size_of_setLEDDrive 0029                ??_EUSART_SetOverrunErrorHandler 0022  
                       _do_I2C_DO_NACK_RESTART 114B                         ??i1_i2c1_driver_TXData 0076  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 1385  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0076  
                                      ??_putch 0022                              ??_SPI2_Initialize 0020  
                               _mssp1_clearIRQ 1100                                     __pbssBANK1 00E6  
                                   __pbssBANK2 0160                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                                     __pbssBANK5 02A0  
                         wireWriteDataByte@reg 0029                           wireWriteDataByte@val 0026  
                         __end_of_EUSART_Write 160C                            getMode@enable_value 002A  
                     ??i1_i2c1_driver_sendNACK 0076                    __size_of_EUSART_Receive_ISR 0036  
                       ?_i2c1_driver_getRXData 0076                     __size_of_SPI2_Exchange8bit 000F  
                                      ?_On_Off 0076                   __size_of_i2c_busCollisionISR 0003  
                                   __pmaintext 09A9                          __end_of_Display_Clear 1268  
                                ??_do_I2C_IDLE 0076                                  ??_do_I2C_RCEN 0076  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 026C  
                      setGestureLEDDrive@drive 002D                                        ?___wmul 0020  
                              __CFG_PPS1WAY$ON 0000                                ??_do_I2C_DO_ACK 0076  
                               UART_Byte@onStr 00B9                   __size_of_enableGestureSensor 005C  
                                   __pintentry 0004                          ?_setProxIntHighThresh 0076  
                                      _CCP1CON 0293                        __size_of_I2C_Write_Byte 001C  
                                ??_I2C_ReStart 0020                               _setProximityGain 0801  
                                  setMode@mode 002F                   ??_EUSART_DefaultErrorHandler 0077  
                              ?_PMD_Initialize 0076                            _setAmbientLightGain 13F6  
                      __size_of_ADC_Initialize 0008                                        ?_strcat 002A  
                        __size_of_Display_Name 0050                 ?_i2c1_driver_clearBusCollision 0076  
                                      ?_strcpy 0025                                        ?_strlen 0020  
                            ?_i2c1_driver_open 0076                              __end_of_do_I2C_RX 1800  
                            __end_of_do_I2C_TX 090A                              ?_i2c1_driver_stop 0076  
                                _eusartRxCount 0167                              _wireReadDataBlock 0871  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                           ??_i2c1_driver_open 0020                             ??_i2c1_driver_stop 0020  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                   _brightness 0164                                  ?_mssp1_setIRQ 0076  
                           __size_of_vfpfcnvrt 00D1                                   ??_PIR_Sensor 0020  
                __size_of_EUSART_RxDataHandler 0018                                        _OSCTUNE 091E  
                         wireReadDataBlock@len 0028                           wireReadDataBlock@reg 002F  
                         wireReadDataBlock@val 0026                                        _SSP1ADD 0212  
                                      _SSP2ADD 021A                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                         __end_of_mssp1_clearIRQ 1103  
                                      _SSP2BUF 0219                             ?_wireReadDataBlock 0026  
                                      _SSP1MSK 0213                       ??_EUSART_SetErrorHandler 0022  
                            SPI_Write@incoming 0022                    __end_of_setGestureIntEnable 15E0  
                      ??_do_I2C_SEND_ADR_WRITE 0076                processGestureData@lr_ratio_last 0037  
                             UART_Byte@proxStr 00BA                    ??_do_I2C_SEND_RESTART_WRITE 0076  
                                 readGesture@i 0059                                        _Get_ADC 0EF6  
                           _i2c1_driver_TXData 1171                           ?_setAmbientLightGain 0076  
                           _i2c1_driver_i2cISR 01E3                            ??_wireReadDataBlock 002A  
                                      _i2c_ISR 1479                                      _I2C_Start 111E  
                              ??_I2C_Read_Byte 0021                                  setMode@enable 002B  
          __size_of_EUSART_DefaultErrorHandler 0003                             _i2c1_driver_isNACK 119F  
                       __size_of_decodeGesture 0193                                __size_of_On_Off 003D  
                          ?_i2c1_driver_TXData 0076                    __size_of_PWM_Output_Disable 0003  
                                 _Display_Name 0959                                        ___aodiv 0DFF  
                                      ___aomod 0C2D                                ??_I2C_Send_NACK 0020  
                                      ___awdiv 09F9                                __size_of___wmul 001C  
                           __end_of_PIR_Sensor 122E                         ?i1_i2c1_driver_restart 0076  
                                    ?_vfprintf 006A                              ??_do_I2C_TX_EMPTY 0076  
                          ?_i2c1_driver_isNACK 0076                         ?i1_i2c1_driver_startRX 0076  
                     __end_of_wireReadDataByte 1479                                     _initialize 0652  
                                      _getMode 1204               __size_of_setLightIntLowThreshold 0027  
                           _setGestureLEDDrive 1670                                        __ptext1 0652  
                                      __ptext2 0801                                        __ptext3 12B4  
                                      __ptext4 12A1                                        __ptext5 153A  
                                      __ptext6 1513                                        __ptext7 1561  
                                      __ptext8 14EC                                        __ptext9 1670  
                  __size_ofi1_i2c1_driver_stop 0003                            __end_of_do_I2C_IDLE 1165  
                    __end_of_wireReadDataBlock 08BB                            __end_of_do_I2C_RCEN 116B  
                              __size_of_strcat 0017                                __size_of_strcpy 0018  
                              __size_of_strlen 0018                          _OSCILLATOR_Initialize 11B7  
                                    _T2CONbits 001F                                   __size_of_abs 0019  
                                 __size_of_pad 0053                    __end_of_do_I2C_SEND_RESTART 113F  
                               ??_mssp1_setIRQ 0076                           ??_i2c1_driver_TXData 0020  
                                      _setMode 090A                       ??_PIN_MANAGER_Initialize 0020  
                          __end_of_I2C_ReStart 1112                            ?_setGestureLEDDrive 0076  
                           UART_Byte@brightStr 00BC                                        _printed 016C  
                              ?_mssp1_clearIRQ 0076                       _do_I2C_SEND_RESTART_READ 1133  
                   __size_of_SYSTEM_Initialize 001B                                        _sprintf 1434  
                                      clrloop0 1178                           __size_of_returnReset 0002  
                         end_of_initialization 0090                           ??_i2c1_driver_isNACK 0076  
                        ??_setAmbientLightGain 002A                   __size_of_setProxIntLowThresh 0013  
        __end_of_EUSART_SetOverrunErrorHandler 11F2         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 11E9                                        fputc@fp 0025  
                                      init_ram 117D                   __end_of_i2c1_driver_sendNACK 115B  
                                      fputs@fp 002B                                        initloop 117E  
              __size_ofi1_i2c1_driver_sendNACK 0004                                     ?_I2C_Start 0076  
                enableGestureSensor@interrupts 0031                              _EUSART_Initialize 082A  
                 __end_of_i2c1_driver_resetBus 10EA                  setGestureExitThresh@threshold 002B  
                         ??_setGestureLEDDrive 002A                             readGesture@gstatus 0055  
                           ?_EUSART_Initialize 0076                              __end_of_vfpfcnvrt 0C2D  
                                 initialize@id 0031                               ??_setGestureGain 002A  
                       ??_setProxIntHighThresh 002A                               ??_setGestureMode 002A  
                    _do_I2C_SEND_RESTART_WRITE 1137                            Display_Name@string1 0025  
                                   ??_vfprintf 006D                  __size_of_setGestureExitThresh 0013  
                                      strcpy@d 0028                                        strlen@a 0023  
                                      strcpy@s 0027                                        strlen@s 0020  
                                    _UART_Byte 0761                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                              _wireWriteDataByte 1385  
               ??_EUSART_SetTxInterruptHandler 0022                                     _returnStop 10EA  
                                    _PORTCbits 000E                       __end_of_do_I2C_SEND_STOP 1143  
                                ??_enablePower 0030                             ?_wireWriteDataByte 0026  
              setLightIntHighThreshold@val_low 002D                 __size_of_setGestureEnterThresh 0013  
                __end_of_setGestureEnterThresh 128E                                  _decodeGesture 036E  
                           _isGestureAvailable 1268                             _setGestureWaitTime 14EC  
                        __size_of_EUSART_Write 002C                                      _SPI_Write 12C7  
                            __size_of_I2C_Stop 0003                                    returnStop@p 0076  
                          ??_wireWriteDataByte 0029                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0009                              _PWM_Output_Enable 114F  
              processGestureData@ud_ratio_last 0035                            ?_isGestureAvailable 0076  
                          ?_setGestureWaitTime 0076                             ?_PWM_Output_Enable 0076  
                    __end_of_EUSART_Initialize 0871                                    _CCP1CONbits 0293  
                                    On_Off@val 0027                          SPI2_Exchange8bit@data 0020  
                __size_of_do_I2C_SEND_ADR_READ 0008                          setProximityGain@drive 002D  
                     __size_of_PWM1_Initialize 000C                            ??_PWM_Output_Enable 0020  
                               __end_of_On_Off 17BA               __end_of_i2c1_driver_isBufferFull 119F  
                                  _do_I2C_IDLE 1160                                    _do_I2C_RCEN 1165  
                    __end_of_wireWriteDataByte 13A0                                 _I2C_Write_Byte 13A0  
           __end_of_EUSART_DefaultErrorHandler 10F1                     _EUSART_DefaultErrorHandler 10EE  
                         ??_isGestureAvailable 0029                                    vfpfcnvrt@ap 005B  
                                  vfpfcnvrt@fp 0069                                    vfpfcnvrt@ll 0061  
                               __end_of___wmul 13D8                           ??_setGestureWaitTime 002A  
                                   ?_UART_Byte 0076                                   _EUSART_Write 15E0  
                                  ?_initialize 0076                                    _I2C_ReStart 110F  
                               _ADC_Initialize 11AF                         i1_i2c1_driver_sendNACK 112F  
                       ?_OSCILLATOR_Initialize 0076                       _setLightIntHighThreshold 1513  
                   __size_of_wireReadDataBlock 004A                                _gesture_motion_ 01DB  
                              _SPI2_Initialize 1191                   __size_of_do_I2C_DO_NACK_STOP 0004  
                  __size_of_processGestureData 02DA                                 ?_decodeGesture 0076  
                               __end_of_strcat 1309                                 __end_of_strcpy 1351  
                               __end_of_strlen 1339                        ?_do_I2C_DO_NACK_RESTART 0076  
                          start_initialization 0049                             setGestureGain@gain 002D  
                          _i2c_busCollisionISR 1106                __size_of_PIN_MANAGER_Initialize 0039  
                    __end_of_PWM_Output_Enable 1153                       ?i1_i2c1_driver_getRXData 0076  
                                  __end_of_abs 136A                                    __end_of_pad 0A9E  
                                   ?_SPI_Write 0076   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020               setLightIntHighThreshold@val_high 002E  
                          _enableGestureSensor 0A9E                            __end_of_enablePower 1248  
                                  putch@txData 0022                   __size_of_i2c1_driver_sendACK 0004  
                      ??_i2c1_driver_getRXData 0020                       __end_of_setProximityGain 082A  
                 __size_of_i2c1_driver_restart 0003                       processGestureData@d_last 0042  
                 __size_of_i2c1_driver_startRX 0003                       processGestureData@l_last 0043  
                                  ??_I2C_Start 0020                       processGestureData@r_last 0044  
                     __size_of_PIN_MANAGER_IOC 0001                       processGestureData@u_last 0041  
                      _processGestureData$1441 0039                        _processGestureData$1442 003B  
                      _processGestureData$1443 003D                        _processGestureData$1444 003F  
                                     ??_On_Off 0024                 ?_EUSART_SetOverrunErrorHandler 0020  
                         ?_i2c_busCollisionISR 0076                               __CFG_LPBOREN$OFF 0000  
                         __end_of_mssp1_setIRQ 1100                                    vfprintf@fmt 006A  
                       __end_of_I2C_Write_Byte 13BC                     _EUSART_FramingErrorHandler 0268  
                             ??_PMD_Initialize 0020                setLightIntLowThreshold@val_high 002E  
                                     ??___wmul 0024                         _EUSART_SetErrorHandler 11D7  
                         ?_enableGestureSensor 0076                                    _CCPTMRSbits 029F  
                                ??_readGesture 0051                         __end_of_ADC_Initialize 11B7  
                                ?_do_I2C_RESET 0076                                    __pdataBANK1 00EF  
                                  __pdataBANK2 016E                                    __pdataBANK3 01E7  
                           setGestureMode@mode 002B                        _setLightIntLowThreshold 153A  
                    setGestureIntEnable@enable 002C                       setAmbientLightGain@drive 002B  
                                  ?_returnStop 0076                                       ??_strcat 002B  
                                     ??_strcpy 0026                                       ??_strlen 0022  
               __end_of_do_I2C_DO_NACK_RESTART 114F                                  ??_setLEDBoost 002A  
                                ??_setLEDDrive 002A                           _i2c1_driver_sendNACK 1157  
                  __end_of_EUSART_Transmit_ISR 1434                         setGestureIntEnable@val 002B  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                    _adcResult 00EE                           _i2c1_driver_resetBus 10E9  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                               ___aodiv@dividend 0028  
                     __size_of_TMR2_Initialize 0008                                      _do_I2C_RX 17BA  
                                    _do_I2C_TX 08BB                 __size_of_do_I2C_SEND_ADR_WRITE 0007  
                __size_ofi1_i2c1_driver_TXData 0005                     __end_of_EUSART_Receive_ISR 170D  
                __end_of_do_I2C_SEND_ADR_WRITE 1191                                       ?_Get_ADC 0076  
                        readGesture@fifo_data2 00A0                     __size_of_EUSART_Initialize 0047  
                    __size_of_i2c1_driver_open 000A                          readGesture@fifo_level 0058  
                    __size_of_i2c1_driver_stop 0003               _EUSART_RxDefaultInterruptHandler 026A  
                                     ?_i2c_ISR 0076                            __size_of_initialize 010F  
                              _do_I2C_TX_EMPTY 07CF                                      __pnvBANK3 01EF  
                                    __pnvBANK4 0264                         __size_of_handleGesture 0062  
                        ??_i2c_busCollisionISR 0076                          __end_of_fsmStateTable 1820  
                 __end_of_EUSART_RxDataHandler 1321                         _PIN_MANAGER_Initialize 1744  
                                    _dtoa$2131 0048                        ??i1_i2c1_driver_restart 0076  
                      ??i1_i2c1_driver_startRX 0076                                ?_I2C_Write_Byte 0076  
                                UART_Byte@bits 00B2                          ??_enableGestureSensor 0030  
                      __end_of_SPI2_Initialize 1198                                       ?___aodiv 0020  
                                     ?___aomod 0020                                 ??_do_I2C_RESET 0076  
                                     ?___awdiv 0026                                      __ptext100 118A  
                                    __ptext101 11A7                                      __ptext110 119F  
                                    __ptext102 113F                               ___aodiv@quotient 0033  
                                    __ptext111 115B                                      __ptext103 113B  
                                    __ptext120 112B                                      __ptext112 10FA  
                                    __ptext104 1137                                      __ptext121 10E8  
                                    __ptext113 112F                                      __ptext105 1133  
                                    __ptext122 1414                                      __ptext114 10E9  
                                    __ptext106 1160                                      __ptext123 16D7  
                                    __ptext115 10F7                                      __ptext107 1183  
                                    __ptext124 1127                                      __ptext116 10EC  
                                    __ptext108 07CF                                      __ptext125 10E7  
                                    __ptext117 10EA                                      __ptext109 10FD  
                                    __ptext126 10EE                                      __ptext118 10F4  
                                    __ptext127 1309                                      __ptext119 10F1  
                   __size_of_wireWriteDataByte 001B                       ??_do_I2C_DO_ADDRESS_NACK 0076  
                              ?_ADC_Initialize 0076                    _i2c1_driver_busCollisionISR 01E5  
                                 _eusartRxHead 0075                                   _eusartTxHead 00ED  
                                 _eusartRxTail 0074                                   _eusartTxTail 00EC  
                                  ??_UART_Byte 00B0                            _setProxIntLowThresh 12B4  
                        __end_of_do_I2C_DO_ACK 1147                              ??_PWM1_Initialize 0020  
                 ??_INTERRUPT_InterruptManager 007C                       _i2c1_driver_isBufferFull 1198  
                                     ?_getMode 0076                                ??_decodeGesture 0020  
                            ?_wireReadDataByte 0076                     ??_do_I2C_SEND_RESTART_READ 0076  
                            __size_of_vfprintf 0035                          ?_i2c1_driver_sendNACK 0076  
              __end_ofi1_i2c1_driver_getRXData 10FD                        _eusartTxBufferRemaining 01EF  
                             ??_mssp1_clearIRQ 0076                                       _BAUD1CON 019F  
                                  _enablePower 123A                             ??_wireReadDataByte 0026  
                          __end_of_readGesture 0DFF                          ?_i2c1_driver_resetBus 0076  
           __size_of_do_I2C_SEND_RESTART_WRITE 0004                                       _I2C_Stop 1124  
                     ??_resetGestureParameters 0020                                       ?_setMode 002B  
                   __size_of_PWM_Output_Enable 0004                                     ?_do_I2C_RX 0076  
                                   ?_do_I2C_TX 0076                               __CFG_WDTE$SWDTEN 0000  
                                  ??_SPI_Write 0021                              _i2c1_driver_start 111B  
                       __size_of_Display_Clear 0011                                       ?_sprintf 00A3  
                          __end_of_setLEDBoost 163E                            __end_of_setLEDDrive 158A  
                               __size_of_fputc 0037                                 __size_of_fputs 0026  
                               __size_of_putch 0006                           ?_setProxIntLowThresh 0076  
                        readGesture@bytes_read 0056                             ?_i2c1_driver_start 0076  
                               _eusartRxBuffer 01C5                                 _eusartTxBuffer 01CD  
                               ___wmul@product 0024         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATCbits 010E                            __size_of_returnStop 0002  
                                    clear_ram0 1177                                       _PIE0bits 0090  
                                     _PIE1bits 0091                   __size_of_setGestureIntEnable 002B  
                   __end_of_PWM_Output_Disable 110C                              _eusartRxLastError 0166  
                          _gesture_near_count_ 01E1                            ??_i2c1_driver_start 0020  
          __size_of_INTERRUPT_InterruptManager 0043                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                        __end_of_I2C_Read_Byte 1222                      ??_setLightIntLowThreshold 002C  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                                     _SSP2CON1 021D      __end_of_EUSART_DefaultOverrunErrorHandler 112B  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0076  
           ?_EUSART_DefaultOverrunErrorHandler 0076              _EUSART_DefaultOverrunErrorHandler 1127  
                               setLEDBoost@val 002C                                       _SSP1STAT 0214  
                                     _SSP2STAT 021C                     __end_ofi1_i2c1_driver_stop 10F7  
                            ??_PIN_MANAGER_IOC 0076                          __end_of_I2C_Send_NACK 111B  
                               setLEDDrive@val 002C                                      _vfpfcnvrt 0B5C  
             processGestureData@lr_ratio_first 0033                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0020                              ?_do_I2C_SEND_STOP 0076  
                    processGestureData@d_first 0046                                  _handleGesture 0AFA  
                    __end_of_i2c1_driver_start 111E                                  ??_returnReset 0077  
                           ??_do_I2C_SEND_STOP 0076                    __size_of_i2c1_driver_TXData 0006  
                  __end_of_setAmbientLightGain 1414                      processGestureData@l_first 0047  
            __end_of_do_I2C_SEND_RESTART_WRITE 113B                        __end_of_do_I2C_TX_EMPTY 0800  
                 __end_of_setGestureExitThresh 12A1                      processGestureData@r_first 0048  
                    processGestureData@u_first 0045                          ??_setProxIntLowThresh 002A  
                 __size_of_do_I2C_SEND_RESTART 0004                    __size_of_i2c1_driver_isNACK 0008  
                            setGestureGain@val 002C                          __size_of_mssp1_setIRQ 0003  
                            ??_TMR2_Initialize 0020                               __size_of_Get_ADC 010A  
                          _do_I2C_DO_NACK_STOP 1147                               __size_of_i2c_ISR 0026  
                   ??_setLightIntHighThreshold 002C                                     vfprintf@ap 006C  
                                   vfprintf@fp 00A0                              _ADC_GetConversion 13D8  
                  __size_of_setGestureLEDDrive 0032                                 setMode@reg_val 002E  
               setLightIntLowThreshold@val_low 002D                                   ?_do_I2C_IDLE 0076  
                                _Display_Clear 1257                                   ?_do_I2C_RCEN 0076  
                            setGestureMode@val 002C                               ?_SPI2_Initialize 0076  
                      ?i1_i2c1_driver_sendNACK 0076                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 0264                             ?_ADC_GetConversion 0020  
                             __size_of___aodiv 00F7                               __size_of___aomod 00DF  
                          _i2c1_driver_sendACK 112B                               __size_of___awdiv 0052  
                __size_of_setProxIntHighThresh 0013                                    _readGesture 0D0C  
              __size_of_do_I2C_DO_ADDRESS_NACK 002B                    ?_EUSART_DefaultErrorHandler 0076  
                          i2c1_driver_TXData@d 0020                                     ?_vfpfcnvrt 005A  
                       ??_i2c1_driver_sendNACK 0020                                   ??_initialize 0030  
                                 ?_I2C_ReStart 0076                            _i2c1_driver_restart 110C  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0031  
             setLightIntLowThreshold@threshold 002A                           ?_do_I2C_DO_NACK_STOP 0076  
                          _i2c1_driver_startRX 1115                                 ?_handleGesture 0076  
                 __end_of_do_I2C_SEND_ADR_READ 11AF                               __size_of_getMode 0009  
                       ??_i2c1_driver_resetBus 0076                           readGesture@fifo_data 0120  
                                  _setLEDBoost 160C                            ??_ADC_GetConversion 0022  
                                  _setLEDDrive 1561                                     sprintf@fmt 00A3  
                                   strcat@dest 002E                __size_of_resetGestureParameters 0016  
                         _EUSART_RxDataHandler 1309                                   _mssp1_setIRQ 10FD  
              __end_of_setLightIntLowThreshold 1561                                    ??_do_I2C_RX 0076  
                                  ??_do_I2C_TX 0076                          setGestureLEDDrive@val 002C  
                             __size_of_setMode 004F                                       __ptext10 163E  
                                     __ptext11 128E                                       __ptext20 09F9  
                                     __ptext12 127B                                       __ptext21 1268  
                                     __ptext13 13F6                                       __ptext30 1385  
                                     __ptext22 036E                                       __ptext14 120D  
                                     __ptext31 1204                                       __ptext23 0A9E  
                                     __ptext15 0AFA                                       __ptext40 1157  
                                     __ptext32 1455                                       __ptext24 160C  
                                     __ptext16 0D0C                                       __ptext41 1217  
                                     __ptext33 13A0                                       __ptext25 14C5  
                                     __ptext17 0871                                       __ptext50 1434  
                                     __ptext42 1115                                       __ptext34 1171  
                                     __ptext26 15B5                                       __ptext18 0094  
                                     __ptext51 16A2                                       __ptext43 1198  
                                     __ptext35 1124                                       __ptext27 12DC  
                                     __ptext19 13BC                                       __ptext60 0C2D  
                                     __ptext52 0B5C                                       __ptext44 1112  
                                     __ptext36 1121                                       __ptext28 123A  
                                     __ptext61 0DFF                                       __ptext53 0501  
                                     __ptext45 110F                                       __ptext37 111E  
                                     __ptext29 090A                                       __ptext70 082A  
                                     __ptext62 136A                                       __ptext54 0A4B  
                                     __ptext46 110C                                       __ptext38 111B  
                                     __ptext71 11FB                                       __ptext63 1153  
                                     __ptext55 149F                                       __ptext47 0761  
                                     __ptext39 1118                                       __ptext80 0959  
                                     __ptext72 11F2                                       __ptext64 11C7  
                                     __ptext56 170D                                       __ptext48 12F2  
                                     __ptext81 1321                                       __ptext73 11E9  
                                     __ptext65 1191                                       __ptext57 116B  
                                     __ptext49 1339                                       __ptext90 1103  
                                     __ptext82 114F                                       __ptext74 11E0  
                                     __ptext66 122E                                       __ptext58 15E0  
                                     __ptext91 1479                                       __ptext83 1109  
                                     __ptext75 11D7                                       __ptext67 11BF  
                                     __ptext59 1351                                       __ptext92 1100  
                                     __ptext84 13D8                                       __ptext76 11AF  
                                     __ptext68 1744                                       __ptext93 17BA  
                                     __ptext85 1257                                       __ptext77 1222  
                                     __ptext69 11B7                                       __ptext94 08BB  
                                     __ptext86 12C7                                       __ptext78 177D  
                                     __ptext95 158A                                       __ptext87 1248  
                                     __ptext79 0EF6                                       __ptext96 114B  
                                     __ptext97 1147                                       __ptext89 1106  
                                     __ptext98 1143                                       __ptext99 1165  
                        _setGestureEnterThresh 127B                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216                 setGestureEnterThresh@threshold 002B  
                                 _SSP2CON1bits 021D                           ?_i2c1_driver_sendACK 0076  
                         __end_of_do_I2C_RESET 118A                               __size_of_sprintf 0021  
                                   strcpy@dest 0029                           ?_i2c1_driver_restart 0076  
                          __end_of_returnReset 10EE                               _i2c1_driver_open 120D  
                             _i2c1_driver_stop 1121                                  __size_of_main 0050  
                         ?_i2c1_driver_startRX 0076                                  __size_of_dtoa 0151  
                            ?_setProximityGain 0076                 __size_of_i2c1_driver_getRXData 0003  
                __end_of_i2c1_driver_getRXData 1115                             __end_of_initialize 0761  
                    __end_of_ADC_GetConversion 13F6                        ?_EUSART_SetErrorHandler 0020  
                           ??_setProximityGain 002A               __size_ofi1_i2c1_driver_getRXData 0003  
                           _decodeGesture$1450 002A                             _decodeGesture$1451 002C  
                           _decodeGesture$1452 002E                             _decodeGesture$1453 0030  
                           _decodeGesture$1446 0022                             _decodeGesture$1447 0024  
                           _decodeGesture$1448 0026                             _decodeGesture$1449 0028  
                                   _RC1STAbits 019D                                 ?_Display_Clear 0076  
               __end_ofi1_i2c1_driver_sendNACK 1133  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E                                       _vfprintf 16A2  
           __end_of_INTERRUPT_InterruptManager 0047                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 11E9         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 11E0                                   _SSP1STATbits 0214  
                  __size_of_isGestureAvailable 0013                                  Display_Name@i 002A  
                          setProximityGain@val 002C               __end_of_do_I2C_SEND_RESTART_READ 1137  
                  __size_of_setGestureWaitTime 0027                     __end_of_processGestureData 036E  
                                 ??_returnStop 0077                                   _SSP2STATbits 021C  
                        ??_do_I2C_DO_NACK_STOP 0076                               ___aomod@dividend 0028  
                                   Get_ADC@val 002F                        __size_of_setGestureGain 0032  
                                   _INTCONbits 000B                        __size_of_setGestureMode 0027  
                   __size_of_i2c1_driver_start 0003                          ?_EUSART_RxDataHandler 0076  
                       setAmbientLightGain@val 002C                          ??_i2c1_driver_sendACK 0076  
                             ?_do_I2C_TX_EMPTY 0076                        __size_of_WDT_Initialize 0004  
                       _do_I2C_DO_ADDRESS_NACK 158A                                       intlevel1 0000  
                                    sprintf@ap 00A9                          ??_i2c1_driver_restart 0020  
                                    strcat@src 002A                          ??_i2c1_driver_startRX 0020  
                      ?_PIN_MANAGER_Initialize 0076                               ??_I2C_Write_Byte 0021  
               __end_of_EUSART_SetErrorHandler 11E0                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0025                             __end_of_returnStop 10EC  
                              _PWM1_Initialize 122E                               ??_ADC_Initialize 0020  
         __end_of_EUSART_SetRxInterruptHandler 11FB          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 11F2                         _resetGestureParameters 12DC  
                   ??_i2c1_driver_isBufferFull 0020                                  ?_Display_Name 0025  
               __size_ofi1_i2c1_driver_restart 0003                  __end_ofi1_i2c1_driver_restart 10F4  
                           _EUSART_Receive_ISR 16D7  EUSART_SetFramingErrorHandler@interruptHandler 0020  
               __size_ofi1_i2c1_driver_startRX 0003                   __end_ofi1_i2c1_driver_TXData 1160  
                __end_ofi1_i2c1_driver_startRX 10FA                           _setGestureExitThresh 128E  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 005C  
                              ___aomod@counter 0031                                ??_handleGesture 005B  
                                __pstringtext1 1800                                  __pstringtext2 1820  
                                __pstringtext3 1830                                  __pstringtext4 183D  
                                __pstringtext5 1849                                  __pstringtext6 1854  
                                __pstringtext7 0000                                       sprintf@f 00AB  
                                     sprintf@s 00AA                            ?_EUSART_Receive_ISR 0076  
                              main@startSystem 00E5                                     _SSP1DATPPS 0E21  
                                 ?_enablePower 0076                                     _SSP2DATPPS 0E1E  
                                   _SSP1CLKPPS 0E20                            _setGestureIntEnable 15B5  
                                   _SSP2CLKPPS 0E1D                               setLEDBoost@boost 002D  
                       ?_setGestureEnterThresh 0076                                    _returnReset 10EC  
                                   _PIR_Sensor 1222                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                   __size_of_EUSART_Transmit_ISR 0020  
                                 ___aodiv@sign 0032                 __end_of_PIN_MANAGER_Initialize 177D  
                  __end_of_i2c_busCollisionISR 1109                      __size_of_wireReadDataByte 0024  
                             setLEDDrive@drive 002D                            processGestureData@i 004D  
                              _PIN_MANAGER_IOC 10E8                           ??_EUSART_Receive_ISR 0077  
                  __end_of_enableGestureSensor 0AFA                          _do_I2C_SEND_ADR_WRITE 118A  
                         ?_setGestureIntEnable 0076                     __size_of_ADC_GetConversion 001E  
                         _do_I2C_SEND_ADR_READ 11A7                                ??_Display_Clear 0023  
                                 ___aomod@sign 0032               __end_of_setLightIntHighThreshold 153A  
                               ??_Display_Name 0027                            UART_Byte@profileStr 00BB  
>>>>>>> b288aef trying to integrate UART
