

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 13:23:39 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	psect	text88,local,class=CODE,merge=1,delta=2
   105                           	psect	text89,local,class=CODE,merge=1,delta=2
   106                           	psect	text90,local,class=CODE,merge=1,delta=2
   107                           	dabs	1,0x7E,2
   108  0000                     
   109                           ; Version 2.05
   110                           ; Generated 20/12/2018 GMT
   111                           ; 
   112                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC16F18345 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0097                     	;# 
   186  009B                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  0111                     	;# 
   196  0112                     	;# 
   197  0113                     	;# 
   198  0114                     	;# 
   199  0115                     	;# 
   200  0116                     	;# 
   201  0117                     	;# 
   202  0118                     	;# 
   203  0119                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  0197                     	;# 
   208  0199                     	;# 
   209  0199                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019A                     	;# 
   213  019A                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019C                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019D                     	;# 
   223  019D                     	;# 
   224  019D                     	;# 
   225  019E                     	;# 
   226  019E                     	;# 
   227  019E                     	;# 
   228  019F                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  019F                     	;# 
   232  019F                     	;# 
   233  020C                     	;# 
   234  020D                     	;# 
   235  020E                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0216                     	;# 
   249  0216                     	;# 
   250  0217                     	;# 
   251  0217                     	;# 
   252  0219                     	;# 
   253  021A                     	;# 
   254  021B                     	;# 
   255  021C                     	;# 
   256  021D                     	;# 
   257  021D                     	;# 
   258  021E                     	;# 
   259  021F                     	;# 
   260  028C                     	;# 
   261  028D                     	;# 
   262  028E                     	;# 
   263  0291                     	;# 
   264  0291                     	;# 
   265  0292                     	;# 
   266  0293                     	;# 
   267  0294                     	;# 
   268  0295                     	;# 
   269  0295                     	;# 
   270  0296                     	;# 
   271  0297                     	;# 
   272  0298                     	;# 
   273  029F                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  0311                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0315                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  038C                     	;# 
   288  038D                     	;# 
   289  038E                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  0393                     	;# 
   293  0394                     	;# 
   294  0395                     	;# 
   295  0396                     	;# 
   296  0397                     	;# 
   297  0398                     	;# 
   298  0399                     	;# 
   299  039A                     	;# 
   300  039C                     	;# 
   301  039D                     	;# 
   302  039E                     	;# 
   303  039F                     	;# 
   304  0411                     	;# 
   305  0411                     	;# 
   306  0412                     	;# 
   307  0413                     	;# 
   308  0414                     	;# 
   309  0415                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041D                     	;# 
   319  041E                     	;# 
   320  041F                     	;# 
   321  0498                     	;# 
   322  0498                     	;# 
   323  0499                     	;# 
   324  049A                     	;# 
   325  049B                     	;# 
   326  049B                     	;# 
   327  049C                     	;# 
   328  049D                     	;# 
   329  049E                     	;# 
   330  049F                     	;# 
   331  0617                     	;# 
   332  0618                     	;# 
   333  0619                     	;# 
   334  0619                     	;# 
   335  061A                     	;# 
   336  061B                     	;# 
   337  061C                     	;# 
   338  061C                     	;# 
   339  061F                     	;# 
   340  0691                     	;# 
   341  0692                     	;# 
   342  0693                     	;# 
   343  0694                     	;# 
   344  0695                     	;# 
   345  0696                     	;# 
   346  0697                     	;# 
   347  0698                     	;# 
   348  0699                     	;# 
   349  0711                     	;# 
   350  0712                     	;# 
   351  0713                     	;# 
   352  0714                     	;# 
   353  0715                     	;# 
   354  0716                     	;# 
   355  0717                     	;# 
   356  0718                     	;# 
   357  0719                     	;# 
   358  0891                     	;# 
   359  0891                     	;# 
   360  0891                     	;# 
   361  0891                     	;# 
   362  0891                     	;# 
   363  0891                     	;# 
   364  0892                     	;# 
   365  0892                     	;# 
   366  0892                     	;# 
   367  0893                     	;# 
   368  0893                     	;# 
   369  0893                     	;# 
   370  0893                     	;# 
   371  0893                     	;# 
   372  0893                     	;# 
   373  0894                     	;# 
   374  0894                     	;# 
   375  0894                     	;# 
   376  0895                     	;# 
   377  0895                     	;# 
   378  0895                     	;# 
   379  0896                     	;# 
   380  0896                     	;# 
   381  0896                     	;# 
   382  089B                     	;# 
   383  0911                     	;# 
   384  0912                     	;# 
   385  0913                     	;# 
   386  0914                     	;# 
   387  0915                     	;# 
   388  0916                     	;# 
   389  0918                     	;# 
   390  0919                     	;# 
   391  091A                     	;# 
   392  091B                     	;# 
   393  091C                     	;# 
   394  091D                     	;# 
   395  091E                     	;# 
   396  091F                     	;# 
   397  0E0F                     	;# 
   398  0E10                     	;# 
   399  0E11                     	;# 
   400  0E12                     	;# 
   401  0E13                     	;# 
   402  0E14                     	;# 
   403  0E15                     	;# 
   404  0E16                     	;# 
   405  0E17                     	;# 
   406  0E18                     	;# 
   407  0E19                     	;# 
   408  0E1A                     	;# 
   409  0E1B                     	;# 
   410  0E1C                     	;# 
   411  0E1D                     	;# 
   412  0E1E                     	;# 
   413  0E1F                     	;# 
   414  0E20                     	;# 
   415  0E21                     	;# 
   416  0E22                     	;# 
   417  0E24                     	;# 
   418  0E25                     	;# 
   419  0E28                     	;# 
   420  0E29                     	;# 
   421  0E2A                     	;# 
   422  0E2B                     	;# 
   423  0E2C                     	;# 
   424  0E2D                     	;# 
   425  0E2E                     	;# 
   426  0E2F                     	;# 
   427  0E90                     	;# 
   428  0E91                     	;# 
   429  0E92                     	;# 
   430  0E94                     	;# 
   431  0E95                     	;# 
   432  0E9C                     	;# 
   433  0E9D                     	;# 
   434  0E9E                     	;# 
   435  0E9F                     	;# 
   436  0EA0                     	;# 
   437  0EA1                     	;# 
   438  0EA2                     	;# 
   439  0EA3                     	;# 
   440  0EA4                     	;# 
   441  0EA5                     	;# 
   442  0EA6                     	;# 
   443  0EA7                     	;# 
   444  0F0F                     	;# 
   445  0F10                     	;# 
   446  0F11                     	;# 
   447  0F12                     	;# 
   448  0F13                     	;# 
   449  0F14                     	;# 
   450  0F15                     	;# 
   451  0F16                     	;# 
   452  0F17                     	;# 
   453  0F18                     	;# 
   454  0F19                     	;# 
   455  0F1A                     	;# 
   456  0F1B                     	;# 
   457  0F1C                     	;# 
   458  0F1D                     	;# 
   459  0F1E                     	;# 
   460  0F1F                     	;# 
   461  0F20                     	;# 
   462  0F21                     	;# 
   463  0F22                     	;# 
   464  0F23                     	;# 
   465  0F24                     	;# 
   466  0F25                     	;# 
   467  0F26                     	;# 
   468  0F27                     	;# 
   469  0F28                     	;# 
   470  0F29                     	;# 
   471  0F2A                     	;# 
   472  0F2B                     	;# 
   473  0F2C                     	;# 
   474  0F2D                     	;# 
   475  0F2E                     	;# 
   476  0F2F                     	;# 
   477  0F30                     	;# 
   478  0F31                     	;# 
   479  0F32                     	;# 
   480  0F33                     	;# 
   481  0F34                     	;# 
   482  0F35                     	;# 
   483  0F36                     	;# 
   484  0F37                     	;# 
   485  0FE4                     	;# 
   486  0FE5                     	;# 
   487  0FE6                     	;# 
   488  0FE7                     	;# 
   489  0FE8                     	;# 
   490  0FE9                     	;# 
   491  0FEA                     	;# 
   492  0FEB                     	;# 
   493  0FED                     	;# 
   494  0FEE                     	;# 
   495  0FEF                     	;# 
   496  0000                     	;# 
   497  0001                     	;# 
   498  0002                     	;# 
   499  0003                     	;# 
   500  0004                     	;# 
   501  0005                     	;# 
   502  0006                     	;# 
   503  0007                     	;# 
   504  0008                     	;# 
   505  0009                     	;# 
   506  000A                     	;# 
   507  000B                     	;# 
   508  000C                     	;# 
   509  000D                     	;# 
   510  000E                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001D                     	;# 
   528  001E                     	;# 
   529  001F                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0094                     	;# 
   538  0097                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559  018E                     	;# 
   560  0197                     	;# 
   561  0199                     	;# 
   562  0199                     	;# 
   563  0199                     	;# 
   564  019A                     	;# 
   565  019A                     	;# 
   566  019A                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019B                     	;# 
   572  019C                     	;# 
   573  019C                     	;# 
   574  019C                     	;# 
   575  019D                     	;# 
   576  019D                     	;# 
   577  019D                     	;# 
   578  019E                     	;# 
   579  019E                     	;# 
   580  019E                     	;# 
   581  019F                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  019F                     	;# 
   585  019F                     	;# 
   586  020C                     	;# 
   587  020D                     	;# 
   588  020E                     	;# 
   589  0211                     	;# 
   590  0211                     	;# 
   591  0212                     	;# 
   592  0212                     	;# 
   593  0213                     	;# 
   594  0213                     	;# 
   595  0214                     	;# 
   596  0214                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0219                     	;# 
   606  021A                     	;# 
   607  021B                     	;# 
   608  021C                     	;# 
   609  021D                     	;# 
   610  021D                     	;# 
   611  021E                     	;# 
   612  021F                     	;# 
   613  028C                     	;# 
   614  028D                     	;# 
   615  028E                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0294                     	;# 
   621  0295                     	;# 
   622  0295                     	;# 
   623  0296                     	;# 
   624  0297                     	;# 
   625  0298                     	;# 
   626  029F                     	;# 
   627  030C                     	;# 
   628  030D                     	;# 
   629  030E                     	;# 
   630  0311                     	;# 
   631  0311                     	;# 
   632  0312                     	;# 
   633  0313                     	;# 
   634  0314                     	;# 
   635  0315                     	;# 
   636  0315                     	;# 
   637  0316                     	;# 
   638  0317                     	;# 
   639  0318                     	;# 
   640  038C                     	;# 
   641  038D                     	;# 
   642  038E                     	;# 
   643  0391                     	;# 
   644  0392                     	;# 
   645  0393                     	;# 
   646  0394                     	;# 
   647  0395                     	;# 
   648  0396                     	;# 
   649  0397                     	;# 
   650  0398                     	;# 
   651  0399                     	;# 
   652  039A                     	;# 
   653  039C                     	;# 
   654  039D                     	;# 
   655  039E                     	;# 
   656  039F                     	;# 
   657  0411                     	;# 
   658  0411                     	;# 
   659  0412                     	;# 
   660  0413                     	;# 
   661  0414                     	;# 
   662  0415                     	;# 
   663  0416                     	;# 
   664  0417                     	;# 
   665  0418                     	;# 
   666  0418                     	;# 
   667  0419                     	;# 
   668  041A                     	;# 
   669  041B                     	;# 
   670  041C                     	;# 
   671  041D                     	;# 
   672  041E                     	;# 
   673  041F                     	;# 
   674  0498                     	;# 
   675  0498                     	;# 
   676  0499                     	;# 
   677  049A                     	;# 
   678  049B                     	;# 
   679  049B                     	;# 
   680  049C                     	;# 
   681  049D                     	;# 
   682  049E                     	;# 
   683  049F                     	;# 
   684  0617                     	;# 
   685  0618                     	;# 
   686  0619                     	;# 
   687  0619                     	;# 
   688  061A                     	;# 
   689  061B                     	;# 
   690  061C                     	;# 
   691  061C                     	;# 
   692  061F                     	;# 
   693  0691                     	;# 
   694  0692                     	;# 
   695  0693                     	;# 
   696  0694                     	;# 
   697  0695                     	;# 
   698  0696                     	;# 
   699  0697                     	;# 
   700  0698                     	;# 
   701  0699                     	;# 
   702  0711                     	;# 
   703  0712                     	;# 
   704  0713                     	;# 
   705  0714                     	;# 
   706  0715                     	;# 
   707  0716                     	;# 
   708  0717                     	;# 
   709  0718                     	;# 
   710  0719                     	;# 
   711  0891                     	;# 
   712  0891                     	;# 
   713  0891                     	;# 
   714  0891                     	;# 
   715  0891                     	;# 
   716  0891                     	;# 
   717  0892                     	;# 
   718  0892                     	;# 
   719  0892                     	;# 
   720  0893                     	;# 
   721  0893                     	;# 
   722  0893                     	;# 
   723  0893                     	;# 
   724  0893                     	;# 
   725  0893                     	;# 
   726  0894                     	;# 
   727  0894                     	;# 
   728  0894                     	;# 
   729  0895                     	;# 
   730  0895                     	;# 
   731  0895                     	;# 
   732  0896                     	;# 
   733  0896                     	;# 
   734  0896                     	;# 
   735  089B                     	;# 
   736  0911                     	;# 
   737  0912                     	;# 
   738  0913                     	;# 
   739  0914                     	;# 
   740  0915                     	;# 
   741  0916                     	;# 
   742  0918                     	;# 
   743  0919                     	;# 
   744  091A                     	;# 
   745  091B                     	;# 
   746  091C                     	;# 
   747  091D                     	;# 
   748  091E                     	;# 
   749  091F                     	;# 
   750  0E0F                     	;# 
   751  0E10                     	;# 
   752  0E11                     	;# 
   753  0E12                     	;# 
   754  0E13                     	;# 
   755  0E14                     	;# 
   756  0E15                     	;# 
   757  0E16                     	;# 
   758  0E17                     	;# 
   759  0E18                     	;# 
   760  0E19                     	;# 
   761  0E1A                     	;# 
   762  0E1B                     	;# 
   763  0E1C                     	;# 
   764  0E1D                     	;# 
   765  0E1E                     	;# 
   766  0E1F                     	;# 
   767  0E20                     	;# 
   768  0E21                     	;# 
   769  0E22                     	;# 
   770  0E24                     	;# 
   771  0E25                     	;# 
   772  0E28                     	;# 
   773  0E29                     	;# 
   774  0E2A                     	;# 
   775  0E2B                     	;# 
   776  0E2C                     	;# 
   777  0E2D                     	;# 
   778  0E2E                     	;# 
   779  0E2F                     	;# 
   780  0E90                     	;# 
   781  0E91                     	;# 
   782  0E92                     	;# 
   783  0E94                     	;# 
   784  0E95                     	;# 
   785  0E9C                     	;# 
   786  0E9D                     	;# 
   787  0E9E                     	;# 
   788  0E9F                     	;# 
   789  0EA0                     	;# 
   790  0EA1                     	;# 
   791  0EA2                     	;# 
   792  0EA3                     	;# 
   793  0EA4                     	;# 
   794  0EA5                     	;# 
   795  0EA6                     	;# 
   796  0EA7                     	;# 
   797  0F0F                     	;# 
   798  0F10                     	;# 
   799  0F11                     	;# 
   800  0F12                     	;# 
   801  0F13                     	;# 
   802  0F14                     	;# 
   803  0F15                     	;# 
   804  0F16                     	;# 
   805  0F17                     	;# 
   806  0F18                     	;# 
   807  0F19                     	;# 
   808  0F1A                     	;# 
   809  0F1B                     	;# 
   810  0F1C                     	;# 
   811  0F1D                     	;# 
   812  0F1E                     	;# 
   813  0F1F                     	;# 
   814  0F20                     	;# 
   815  0F21                     	;# 
   816  0F22                     	;# 
   817  0F23                     	;# 
   818  0F24                     	;# 
   819  0F25                     	;# 
   820  0F26                     	;# 
   821  0F27                     	;# 
   822  0F28                     	;# 
   823  0F29                     	;# 
   824  0F2A                     	;# 
   825  0F2B                     	;# 
   826  0F2C                     	;# 
   827  0F2D                     	;# 
   828  0F2E                     	;# 
   829  0F2F                     	;# 
   830  0F30                     	;# 
   831  0F31                     	;# 
   832  0F32                     	;# 
   833  0F33                     	;# 
   834  0F34                     	;# 
   835  0F35                     	;# 
   836  0F36                     	;# 
   837  0F37                     	;# 
   838  0FE4                     	;# 
   839  0FE5                     	;# 
   840  0FE6                     	;# 
   841  0FE7                     	;# 
   842  0FE8                     	;# 
   843  0FE9                     	;# 
   844  0FEA                     	;# 
   845  0FEB                     	;# 
   846  0FED                     	;# 
   847  0FEE                     	;# 
   848  0FEF                     	;# 
   849  0000                     	;# 
   850  0001                     	;# 
   851  0002                     	;# 
   852  0003                     	;# 
   853  0004                     	;# 
   854  0005                     	;# 
   855  0006                     	;# 
   856  0007                     	;# 
   857  0008                     	;# 
   858  0009                     	;# 
   859  000A                     	;# 
   860  000B                     	;# 
   861  000C                     	;# 
   862  000D                     	;# 
   863  000E                     	;# 
   864  0010                     	;# 
   865  0011                     	;# 
   866  0012                     	;# 
   867  0013                     	;# 
   868  0014                     	;# 
   869  0015                     	;# 
   870  0015                     	;# 
   871  0016                     	;# 
   872  0016                     	;# 
   873  0017                     	;# 
   874  0018                     	;# 
   875  0019                     	;# 
   876  0019                     	;# 
   877  001A                     	;# 
   878  001B                     	;# 
   879  001C                     	;# 
   880  001D                     	;# 
   881  001E                     	;# 
   882  001F                     	;# 
   883  008C                     	;# 
   884  008D                     	;# 
   885  008E                     	;# 
   886  0090                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0097                     	;# 
   892  009B                     	;# 
   893  009B                     	;# 
   894  009C                     	;# 
   895  009D                     	;# 
   896  009E                     	;# 
   897  009F                     	;# 
   898  010C                     	;# 
   899  010D                     	;# 
   900  010E                     	;# 
   901  0111                     	;# 
   902  0112                     	;# 
   903  0113                     	;# 
   904  0114                     	;# 
   905  0115                     	;# 
   906  0116                     	;# 
   907  0117                     	;# 
   908  0118                     	;# 
   909  0119                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0197                     	;# 
   914  0199                     	;# 
   915  0199                     	;# 
   916  0199                     	;# 
   917  019A                     	;# 
   918  019A                     	;# 
   919  019A                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019B                     	;# 
   924  019B                     	;# 
   925  019C                     	;# 
   926  019C                     	;# 
   927  019C                     	;# 
   928  019D                     	;# 
   929  019D                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019E                     	;# 
   933  019E                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  019F                     	;# 
   937  019F                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020D                     	;# 
   941  020E                     	;# 
   942  0211                     	;# 
   943  0211                     	;# 
   944  0212                     	;# 
   945  0212                     	;# 
   946  0213                     	;# 
   947  0213                     	;# 
   948  0214                     	;# 
   949  0214                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0215                     	;# 
   954  0216                     	;# 
   955  0216                     	;# 
   956  0217                     	;# 
   957  0217                     	;# 
   958  0219                     	;# 
   959  021A                     	;# 
   960  021B                     	;# 
   961  021C                     	;# 
   962  021D                     	;# 
   963  021D                     	;# 
   964  021E                     	;# 
   965  021F                     	;# 
   966  028C                     	;# 
   967  028D                     	;# 
   968  028E                     	;# 
   969  0291                     	;# 
   970  0291                     	;# 
   971  0292                     	;# 
   972  0293                     	;# 
   973  0294                     	;# 
   974  0295                     	;# 
   975  0295                     	;# 
   976  0296                     	;# 
   977  0297                     	;# 
   978  0298                     	;# 
   979  029F                     	;# 
   980  030C                     	;# 
   981  030D                     	;# 
   982  030E                     	;# 
   983  0311                     	;# 
   984  0311                     	;# 
   985  0312                     	;# 
   986  0313                     	;# 
   987  0314                     	;# 
   988  0315                     	;# 
   989  0315                     	;# 
   990  0316                     	;# 
   991  0317                     	;# 
   992  0318                     	;# 
   993  038C                     	;# 
   994  038D                     	;# 
   995  038E                     	;# 
   996  0391                     	;# 
   997  0392                     	;# 
   998  0393                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  0397                     	;# 
  1003  0398                     	;# 
  1004  0399                     	;# 
  1005  039A                     	;# 
  1006  039C                     	;# 
  1007  039D                     	;# 
  1008  039E                     	;# 
  1009  039F                     	;# 
  1010  0411                     	;# 
  1011  0411                     	;# 
  1012  0412                     	;# 
  1013  0413                     	;# 
  1014  0414                     	;# 
  1015  0415                     	;# 
  1016  0416                     	;# 
  1017  0417                     	;# 
  1018  0418                     	;# 
  1019  0418                     	;# 
  1020  0419                     	;# 
  1021  041A                     	;# 
  1022  041B                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  041F                     	;# 
  1027  0498                     	;# 
  1028  0498                     	;# 
  1029  0499                     	;# 
  1030  049A                     	;# 
  1031  049B                     	;# 
  1032  049B                     	;# 
  1033  049C                     	;# 
  1034  049D                     	;# 
  1035  049E                     	;# 
  1036  049F                     	;# 
  1037  0617                     	;# 
  1038  0618                     	;# 
  1039  0619                     	;# 
  1040  0619                     	;# 
  1041  061A                     	;# 
  1042  061B                     	;# 
  1043  061C                     	;# 
  1044  061C                     	;# 
  1045  061F                     	;# 
  1046  0691                     	;# 
  1047  0692                     	;# 
  1048  0693                     	;# 
  1049  0694                     	;# 
  1050  0695                     	;# 
  1051  0696                     	;# 
  1052  0697                     	;# 
  1053  0698                     	;# 
  1054  0699                     	;# 
  1055  0711                     	;# 
  1056  0712                     	;# 
  1057  0713                     	;# 
  1058  0714                     	;# 
  1059  0715                     	;# 
  1060  0716                     	;# 
  1061  0717                     	;# 
  1062  0718                     	;# 
  1063  0719                     	;# 
  1064  0891                     	;# 
  1065  0891                     	;# 
  1066  0891                     	;# 
  1067  0891                     	;# 
  1068  0891                     	;# 
  1069  0891                     	;# 
  1070  0892                     	;# 
  1071  0892                     	;# 
  1072  0892                     	;# 
  1073  0893                     	;# 
  1074  0893                     	;# 
  1075  0893                     	;# 
  1076  0893                     	;# 
  1077  0893                     	;# 
  1078  0893                     	;# 
  1079  0894                     	;# 
  1080  0894                     	;# 
  1081  0894                     	;# 
  1082  0895                     	;# 
  1083  0895                     	;# 
  1084  0895                     	;# 
  1085  0896                     	;# 
  1086  0896                     	;# 
  1087  0896                     	;# 
  1088  089B                     	;# 
  1089  0911                     	;# 
  1090  0912                     	;# 
  1091  0913                     	;# 
  1092  0914                     	;# 
  1093  0915                     	;# 
  1094  0916                     	;# 
  1095  0918                     	;# 
  1096  0919                     	;# 
  1097  091A                     	;# 
  1098  091B                     	;# 
  1099  091C                     	;# 
  1100  091D                     	;# 
  1101  091E                     	;# 
  1102  091F                     	;# 
  1103  0E0F                     	;# 
  1104  0E10                     	;# 
  1105  0E11                     	;# 
  1106  0E12                     	;# 
  1107  0E13                     	;# 
  1108  0E14                     	;# 
  1109  0E15                     	;# 
  1110  0E16                     	;# 
  1111  0E17                     	;# 
  1112  0E18                     	;# 
  1113  0E19                     	;# 
  1114  0E1A                     	;# 
  1115  0E1B                     	;# 
  1116  0E1C                     	;# 
  1117  0E1D                     	;# 
  1118  0E1E                     	;# 
  1119  0E1F                     	;# 
  1120  0E20                     	;# 
  1121  0E21                     	;# 
  1122  0E22                     	;# 
  1123  0E24                     	;# 
  1124  0E25                     	;# 
  1125  0E28                     	;# 
  1126  0E29                     	;# 
  1127  0E2A                     	;# 
  1128  0E2B                     	;# 
  1129  0E2C                     	;# 
  1130  0E2D                     	;# 
  1131  0E2E                     	;# 
  1132  0E2F                     	;# 
  1133  0E90                     	;# 
  1134  0E91                     	;# 
  1135  0E92                     	;# 
  1136  0E94                     	;# 
  1137  0E95                     	;# 
  1138  0E9C                     	;# 
  1139  0E9D                     	;# 
  1140  0E9E                     	;# 
  1141  0E9F                     	;# 
  1142  0EA0                     	;# 
  1143  0EA1                     	;# 
  1144  0EA2                     	;# 
  1145  0EA3                     	;# 
  1146  0EA4                     	;# 
  1147  0EA5                     	;# 
  1148  0EA6                     	;# 
  1149  0EA7                     	;# 
  1150  0F0F                     	;# 
  1151  0F10                     	;# 
  1152  0F11                     	;# 
  1153  0F12                     	;# 
  1154  0F13                     	;# 
  1155  0F14                     	;# 
  1156  0F15                     	;# 
  1157  0F16                     	;# 
  1158  0F17                     	;# 
  1159  0F18                     	;# 
  1160  0F19                     	;# 
  1161  0F1A                     	;# 
  1162  0F1B                     	;# 
  1163  0F1C                     	;# 
  1164  0F1D                     	;# 
  1165  0F1E                     	;# 
  1166  0F1F                     	;# 
  1167  0F20                     	;# 
  1168  0F21                     	;# 
  1169  0F22                     	;# 
  1170  0F23                     	;# 
  1171  0F24                     	;# 
  1172  0F25                     	;# 
  1173  0F26                     	;# 
  1174  0F27                     	;# 
  1175  0F28                     	;# 
  1176  0F29                     	;# 
  1177  0F2A                     	;# 
  1178  0F2B                     	;# 
  1179  0F2C                     	;# 
  1180  0F2D                     	;# 
  1181  0F2E                     	;# 
  1182  0F2F                     	;# 
  1183  0F30                     	;# 
  1184  0F31                     	;# 
  1185  0F32                     	;# 
  1186  0F33                     	;# 
  1187  0F34                     	;# 
  1188  0F35                     	;# 
  1189  0F36                     	;# 
  1190  0F37                     	;# 
  1191  0FE4                     	;# 
  1192  0FE5                     	;# 
  1193  0FE6                     	;# 
  1194  0FE7                     	;# 
  1195  0FE8                     	;# 
  1196  0FE9                     	;# 
  1197  0FEA                     	;# 
  1198  0FEB                     	;# 
  1199  0FED                     	;# 
  1200  0FEE                     	;# 
  1201  0FEF                     	;# 
  1202  0000                     	;# 
  1203  0001                     	;# 
  1204  0002                     	;# 
  1205  0003                     	;# 
  1206  0004                     	;# 
  1207  0005                     	;# 
  1208  0006                     	;# 
  1209  0007                     	;# 
  1210  0008                     	;# 
  1211  0009                     	;# 
  1212  000A                     	;# 
  1213  000B                     	;# 
  1214  000C                     	;# 
  1215  000D                     	;# 
  1216  000E                     	;# 
  1217  0010                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0013                     	;# 
  1221  0014                     	;# 
  1222  0015                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  0019                     	;# 
  1230  001A                     	;# 
  1231  001B                     	;# 
  1232  001C                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008D                     	;# 
  1238  008E                     	;# 
  1239  0090                     	;# 
  1240  0091                     	;# 
  1241  0092                     	;# 
  1242  0093                     	;# 
  1243  0094                     	;# 
  1244  0097                     	;# 
  1245  009B                     	;# 
  1246  009B                     	;# 
  1247  009C                     	;# 
  1248  009D                     	;# 
  1249  009E                     	;# 
  1250  009F                     	;# 
  1251  010C                     	;# 
  1252  010D                     	;# 
  1253  010E                     	;# 
  1254  0111                     	;# 
  1255  0112                     	;# 
  1256  0113                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  0118                     	;# 
  1262  0119                     	;# 
  1263  018C                     	;# 
  1264  018D                     	;# 
  1265  018E                     	;# 
  1266  0197                     	;# 
  1267  0199                     	;# 
  1268  0199                     	;# 
  1269  0199                     	;# 
  1270  019A                     	;# 
  1271  019A                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019D                     	;# 
  1283  019D                     	;# 
  1284  019E                     	;# 
  1285  019E                     	;# 
  1286  019E                     	;# 
  1287  019F                     	;# 
  1288  019F                     	;# 
  1289  019F                     	;# 
  1290  019F                     	;# 
  1291  019F                     	;# 
  1292  020C                     	;# 
  1293  020D                     	;# 
  1294  020E                     	;# 
  1295  0211                     	;# 
  1296  0211                     	;# 
  1297  0212                     	;# 
  1298  0212                     	;# 
  1299  0213                     	;# 
  1300  0213                     	;# 
  1301  0214                     	;# 
  1302  0214                     	;# 
  1303  0215                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0219                     	;# 
  1312  021A                     	;# 
  1313  021B                     	;# 
  1314  021C                     	;# 
  1315  021D                     	;# 
  1316  021D                     	;# 
  1317  021E                     	;# 
  1318  021F                     	;# 
  1319  028C                     	;# 
  1320  028D                     	;# 
  1321  028E                     	;# 
  1322  0291                     	;# 
  1323  0291                     	;# 
  1324  0292                     	;# 
  1325  0293                     	;# 
  1326  0294                     	;# 
  1327  0295                     	;# 
  1328  0295                     	;# 
  1329  0296                     	;# 
  1330  0297                     	;# 
  1331  0298                     	;# 
  1332  029F                     	;# 
  1333  030C                     	;# 
  1334  030D                     	;# 
  1335  030E                     	;# 
  1336  0311                     	;# 
  1337  0311                     	;# 
  1338  0312                     	;# 
  1339  0313                     	;# 
  1340  0314                     	;# 
  1341  0315                     	;# 
  1342  0315                     	;# 
  1343  0316                     	;# 
  1344  0317                     	;# 
  1345  0318                     	;# 
  1346  038C                     	;# 
  1347  038D                     	;# 
  1348  038E                     	;# 
  1349  0391                     	;# 
  1350  0392                     	;# 
  1351  0393                     	;# 
  1352  0394                     	;# 
  1353  0395                     	;# 
  1354  0396                     	;# 
  1355  0397                     	;# 
  1356  0398                     	;# 
  1357  0399                     	;# 
  1358  039A                     	;# 
  1359  039C                     	;# 
  1360  039D                     	;# 
  1361  039E                     	;# 
  1362  039F                     	;# 
  1363  0411                     	;# 
  1364  0411                     	;# 
  1365  0412                     	;# 
  1366  0413                     	;# 
  1367  0414                     	;# 
  1368  0415                     	;# 
  1369  0416                     	;# 
  1370  0417                     	;# 
  1371  0418                     	;# 
  1372  0418                     	;# 
  1373  0419                     	;# 
  1374  041A                     	;# 
  1375  041B                     	;# 
  1376  041C                     	;# 
  1377  041D                     	;# 
  1378  041E                     	;# 
  1379  041F                     	;# 
  1380  0498                     	;# 
  1381  0498                     	;# 
  1382  0499                     	;# 
  1383  049A                     	;# 
  1384  049B                     	;# 
  1385  049B                     	;# 
  1386  049C                     	;# 
  1387  049D                     	;# 
  1388  049E                     	;# 
  1389  049F                     	;# 
  1390  0617                     	;# 
  1391  0618                     	;# 
  1392  0619                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061C                     	;# 
  1398  061F                     	;# 
  1399  0691                     	;# 
  1400  0692                     	;# 
  1401  0693                     	;# 
  1402  0694                     	;# 
  1403  0695                     	;# 
  1404  0696                     	;# 
  1405  0697                     	;# 
  1406  0698                     	;# 
  1407  0699                     	;# 
  1408  0711                     	;# 
  1409  0712                     	;# 
  1410  0713                     	;# 
  1411  0714                     	;# 
  1412  0715                     	;# 
  1413  0716                     	;# 
  1414  0717                     	;# 
  1415  0718                     	;# 
  1416  0719                     	;# 
  1417  0891                     	;# 
  1418  0891                     	;# 
  1419  0891                     	;# 
  1420  0891                     	;# 
  1421  0891                     	;# 
  1422  0891                     	;# 
  1423  0892                     	;# 
  1424  0892                     	;# 
  1425  0892                     	;# 
  1426  0893                     	;# 
  1427  0893                     	;# 
  1428  0893                     	;# 
  1429  0893                     	;# 
  1430  0893                     	;# 
  1431  0893                     	;# 
  1432  0894                     	;# 
  1433  0894                     	;# 
  1434  0894                     	;# 
  1435  0895                     	;# 
  1436  0895                     	;# 
  1437  0895                     	;# 
  1438  0896                     	;# 
  1439  0896                     	;# 
  1440  0896                     	;# 
  1441  089B                     	;# 
  1442  0911                     	;# 
  1443  0912                     	;# 
  1444  0913                     	;# 
  1445  0914                     	;# 
  1446  0915                     	;# 
  1447  0916                     	;# 
  1448  0918                     	;# 
  1449  0919                     	;# 
  1450  091A                     	;# 
  1451  091B                     	;# 
  1452  091C                     	;# 
  1453  091D                     	;# 
  1454  091E                     	;# 
  1455  091F                     	;# 
  1456  0E0F                     	;# 
  1457  0E10                     	;# 
  1458  0E11                     	;# 
  1459  0E12                     	;# 
  1460  0E13                     	;# 
  1461  0E14                     	;# 
  1462  0E15                     	;# 
  1463  0E16                     	;# 
  1464  0E17                     	;# 
  1465  0E18                     	;# 
  1466  0E19                     	;# 
  1467  0E1A                     	;# 
  1468  0E1B                     	;# 
  1469  0E1C                     	;# 
  1470  0E1D                     	;# 
  1471  0E1E                     	;# 
  1472  0E1F                     	;# 
  1473  0E20                     	;# 
  1474  0E21                     	;# 
  1475  0E22                     	;# 
  1476  0E24                     	;# 
  1477  0E25                     	;# 
  1478  0E28                     	;# 
  1479  0E29                     	;# 
  1480  0E2A                     	;# 
  1481  0E2B                     	;# 
  1482  0E2C                     	;# 
  1483  0E2D                     	;# 
  1484  0E2E                     	;# 
  1485  0E2F                     	;# 
  1486  0E90                     	;# 
  1487  0E91                     	;# 
  1488  0E92                     	;# 
  1489  0E94                     	;# 
  1490  0E95                     	;# 
  1491  0E9C                     	;# 
  1492  0E9D                     	;# 
  1493  0E9E                     	;# 
  1494  0E9F                     	;# 
  1495  0EA0                     	;# 
  1496  0EA1                     	;# 
  1497  0EA2                     	;# 
  1498  0EA3                     	;# 
  1499  0EA4                     	;# 
  1500  0EA5                     	;# 
  1501  0EA6                     	;# 
  1502  0EA7                     	;# 
  1503  0F0F                     	;# 
  1504  0F10                     	;# 
  1505  0F11                     	;# 
  1506  0F12                     	;# 
  1507  0F13                     	;# 
  1508  0F14                     	;# 
  1509  0F15                     	;# 
  1510  0F16                     	;# 
  1511  0F17                     	;# 
  1512  0F18                     	;# 
  1513  0F19                     	;# 
  1514  0F1A                     	;# 
  1515  0F1B                     	;# 
  1516  0F1C                     	;# 
  1517  0F1D                     	;# 
  1518  0F1E                     	;# 
  1519  0F1F                     	;# 
  1520  0F20                     	;# 
  1521  0F21                     	;# 
  1522  0F22                     	;# 
  1523  0F23                     	;# 
  1524  0F24                     	;# 
  1525  0F25                     	;# 
  1526  0F26                     	;# 
  1527  0F27                     	;# 
  1528  0F28                     	;# 
  1529  0F29                     	;# 
  1530  0F2A                     	;# 
  1531  0F2B                     	;# 
  1532  0F2C                     	;# 
  1533  0F2D                     	;# 
  1534  0F2E                     	;# 
  1535  0F2F                     	;# 
  1536  0F30                     	;# 
  1537  0F31                     	;# 
  1538  0F32                     	;# 
  1539  0F33                     	;# 
  1540  0F34                     	;# 
  1541  0F35                     	;# 
  1542  0F36                     	;# 
  1543  0F37                     	;# 
  1544  0FE4                     	;# 
  1545  0FE5                     	;# 
  1546  0FE6                     	;# 
  1547  0FE7                     	;# 
  1548  0FE8                     	;# 
  1549  0FE9                     	;# 
  1550  0FEA                     	;# 
  1551  0FEB                     	;# 
  1552  0FED                     	;# 
  1553  0FEE                     	;# 
  1554  0FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000D                     	;# 
  1569  000E                     	;# 
  1570  0010                     	;# 
  1571  0011                     	;# 
  1572  0012                     	;# 
  1573  0013                     	;# 
  1574  0014                     	;# 
  1575  0015                     	;# 
  1576  0015                     	;# 
  1577  0016                     	;# 
  1578  0016                     	;# 
  1579  0017                     	;# 
  1580  0018                     	;# 
  1581  0019                     	;# 
  1582  0019                     	;# 
  1583  001A                     	;# 
  1584  001B                     	;# 
  1585  001C                     	;# 
  1586  001D                     	;# 
  1587  001E                     	;# 
  1588  001F                     	;# 
  1589  008C                     	;# 
  1590  008D                     	;# 
  1591  008E                     	;# 
  1592  0090                     	;# 
  1593  0091                     	;# 
  1594  0092                     	;# 
  1595  0093                     	;# 
  1596  0094                     	;# 
  1597  0097                     	;# 
  1598  009B                     	;# 
  1599  009B                     	;# 
  1600  009C                     	;# 
  1601  009D                     	;# 
  1602  009E                     	;# 
  1603  009F                     	;# 
  1604  010C                     	;# 
  1605  010D                     	;# 
  1606  010E                     	;# 
  1607  0111                     	;# 
  1608  0112                     	;# 
  1609  0113                     	;# 
  1610  0114                     	;# 
  1611  0115                     	;# 
  1612  0116                     	;# 
  1613  0117                     	;# 
  1614  0118                     	;# 
  1615  0119                     	;# 
  1616  018C                     	;# 
  1617  018D                     	;# 
  1618  018E                     	;# 
  1619  0197                     	;# 
  1620  0199                     	;# 
  1621  0199                     	;# 
  1622  0199                     	;# 
  1623  019A                     	;# 
  1624  019A                     	;# 
  1625  019A                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019B                     	;# 
  1629  019B                     	;# 
  1630  019B                     	;# 
  1631  019C                     	;# 
  1632  019C                     	;# 
  1633  019C                     	;# 
  1634  019D                     	;# 
  1635  019D                     	;# 
  1636  019D                     	;# 
  1637  019E                     	;# 
  1638  019E                     	;# 
  1639  019E                     	;# 
  1640  019F                     	;# 
  1641  019F                     	;# 
  1642  019F                     	;# 
  1643  019F                     	;# 
  1644  019F                     	;# 
  1645  020C                     	;# 
  1646  020D                     	;# 
  1647  020E                     	;# 
  1648  0211                     	;# 
  1649  0211                     	;# 
  1650  0212                     	;# 
  1651  0212                     	;# 
  1652  0213                     	;# 
  1653  0213                     	;# 
  1654  0214                     	;# 
  1655  0214                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0215                     	;# 
  1659  0215                     	;# 
  1660  0216                     	;# 
  1661  0216                     	;# 
  1662  0217                     	;# 
  1663  0217                     	;# 
  1664  0219                     	;# 
  1665  021A                     	;# 
  1666  021B                     	;# 
  1667  021C                     	;# 
  1668  021D                     	;# 
  1669  021D                     	;# 
  1670  021E                     	;# 
  1671  021F                     	;# 
  1672  028C                     	;# 
  1673  028D                     	;# 
  1674  028E                     	;# 
  1675  0291                     	;# 
  1676  0291                     	;# 
  1677  0292                     	;# 
  1678  0293                     	;# 
  1679  0294                     	;# 
  1680  0295                     	;# 
  1681  0295                     	;# 
  1682  0296                     	;# 
  1683  0297                     	;# 
  1684  0298                     	;# 
  1685  029F                     	;# 
  1686  030C                     	;# 
  1687  030D                     	;# 
  1688  030E                     	;# 
  1689  0311                     	;# 
  1690  0311                     	;# 
  1691  0312                     	;# 
  1692  0313                     	;# 
  1693  0314                     	;# 
  1694  0315                     	;# 
  1695  0315                     	;# 
  1696  0316                     	;# 
  1697  0317                     	;# 
  1698  0318                     	;# 
  1699  038C                     	;# 
  1700  038D                     	;# 
  1701  038E                     	;# 
  1702  0391                     	;# 
  1703  0392                     	;# 
  1704  0393                     	;# 
  1705  0394                     	;# 
  1706  0395                     	;# 
  1707  0396                     	;# 
  1708  0397                     	;# 
  1709  0398                     	;# 
  1710  0399                     	;# 
  1711  039A                     	;# 
  1712  039C                     	;# 
  1713  039D                     	;# 
  1714  039E                     	;# 
  1715  039F                     	;# 
  1716  0411                     	;# 
  1717  0411                     	;# 
  1718  0412                     	;# 
  1719  0413                     	;# 
  1720  0414                     	;# 
  1721  0415                     	;# 
  1722  0416                     	;# 
  1723  0417                     	;# 
  1724  0418                     	;# 
  1725  0418                     	;# 
  1726  0419                     	;# 
  1727  041A                     	;# 
  1728  041B                     	;# 
  1729  041C                     	;# 
  1730  041D                     	;# 
  1731  041E                     	;# 
  1732  041F                     	;# 
  1733  0498                     	;# 
  1734  0498                     	;# 
  1735  0499                     	;# 
  1736  049A                     	;# 
  1737  049B                     	;# 
  1738  049B                     	;# 
  1739  049C                     	;# 
  1740  049D                     	;# 
  1741  049E                     	;# 
  1742  049F                     	;# 
  1743  0617                     	;# 
  1744  0618                     	;# 
  1745  0619                     	;# 
  1746  0619                     	;# 
  1747  061A                     	;# 
  1748  061B                     	;# 
  1749  061C                     	;# 
  1750  061C                     	;# 
  1751  061F                     	;# 
  1752  0691                     	;# 
  1753  0692                     	;# 
  1754  0693                     	;# 
  1755  0694                     	;# 
  1756  0695                     	;# 
  1757  0696                     	;# 
  1758  0697                     	;# 
  1759  0698                     	;# 
  1760  0699                     	;# 
  1761  0711                     	;# 
  1762  0712                     	;# 
  1763  0713                     	;# 
  1764  0714                     	;# 
  1765  0715                     	;# 
  1766  0716                     	;# 
  1767  0717                     	;# 
  1768  0718                     	;# 
  1769  0719                     	;# 
  1770  0891                     	;# 
  1771  0891                     	;# 
  1772  0891                     	;# 
  1773  0891                     	;# 
  1774  0891                     	;# 
  1775  0891                     	;# 
  1776  0892                     	;# 
  1777  0892                     	;# 
  1778  0892                     	;# 
  1779  0893                     	;# 
  1780  0893                     	;# 
  1781  0893                     	;# 
  1782  0893                     	;# 
  1783  0893                     	;# 
  1784  0893                     	;# 
  1785  0894                     	;# 
  1786  0894                     	;# 
  1787  0894                     	;# 
  1788  0895                     	;# 
  1789  0895                     	;# 
  1790  0895                     	;# 
  1791  0896                     	;# 
  1792  0896                     	;# 
  1793  0896                     	;# 
  1794  089B                     	;# 
  1795  0911                     	;# 
  1796  0912                     	;# 
  1797  0913                     	;# 
  1798  0914                     	;# 
  1799  0915                     	;# 
  1800  0916                     	;# 
  1801  0918                     	;# 
  1802  0919                     	;# 
  1803  091A                     	;# 
  1804  091B                     	;# 
  1805  091C                     	;# 
  1806  091D                     	;# 
  1807  091E                     	;# 
  1808  091F                     	;# 
  1809  0E0F                     	;# 
  1810  0E10                     	;# 
  1811  0E11                     	;# 
  1812  0E12                     	;# 
  1813  0E13                     	;# 
  1814  0E14                     	;# 
  1815  0E15                     	;# 
  1816  0E16                     	;# 
  1817  0E17                     	;# 
  1818  0E18                     	;# 
  1819  0E19                     	;# 
  1820  0E1A                     	;# 
  1821  0E1B                     	;# 
  1822  0E1C                     	;# 
  1823  0E1D                     	;# 
  1824  0E1E                     	;# 
  1825  0E1F                     	;# 
  1826  0E20                     	;# 
  1827  0E21                     	;# 
  1828  0E22                     	;# 
  1829  0E24                     	;# 
  1830  0E25                     	;# 
  1831  0E28                     	;# 
  1832  0E29                     	;# 
  1833  0E2A                     	;# 
  1834  0E2B                     	;# 
  1835  0E2C                     	;# 
  1836  0E2D                     	;# 
  1837  0E2E                     	;# 
  1838  0E2F                     	;# 
  1839  0E90                     	;# 
  1840  0E91                     	;# 
  1841  0E92                     	;# 
  1842  0E94                     	;# 
  1843  0E95                     	;# 
  1844  0E9C                     	;# 
  1845  0E9D                     	;# 
  1846  0E9E                     	;# 
  1847  0E9F                     	;# 
  1848  0EA0                     	;# 
  1849  0EA1                     	;# 
  1850  0EA2                     	;# 
  1851  0EA3                     	;# 
  1852  0EA4                     	;# 
  1853  0EA5                     	;# 
  1854  0EA6                     	;# 
  1855  0EA7                     	;# 
  1856  0F0F                     	;# 
  1857  0F10                     	;# 
  1858  0F11                     	;# 
  1859  0F12                     	;# 
  1860  0F13                     	;# 
  1861  0F14                     	;# 
  1862  0F15                     	;# 
  1863  0F16                     	;# 
  1864  0F17                     	;# 
  1865  0F18                     	;# 
  1866  0F19                     	;# 
  1867  0F1A                     	;# 
  1868  0F1B                     	;# 
  1869  0F1C                     	;# 
  1870  0F1D                     	;# 
  1871  0F1E                     	;# 
  1872  0F1F                     	;# 
  1873  0F20                     	;# 
  1874  0F21                     	;# 
  1875  0F22                     	;# 
  1876  0F23                     	;# 
  1877  0F24                     	;# 
  1878  0F25                     	;# 
  1879  0F26                     	;# 
  1880  0F27                     	;# 
  1881  0F28                     	;# 
  1882  0F29                     	;# 
  1883  0F2A                     	;# 
  1884  0F2B                     	;# 
  1885  0F2C                     	;# 
  1886  0F2D                     	;# 
  1887  0F2E                     	;# 
  1888  0F2F                     	;# 
  1889  0F30                     	;# 
  1890  0F31                     	;# 
  1891  0F32                     	;# 
  1892  0F33                     	;# 
  1893  0F34                     	;# 
  1894  0F35                     	;# 
  1895  0F36                     	;# 
  1896  0F37                     	;# 
  1897  0FE4                     	;# 
  1898  0FE5                     	;# 
  1899  0FE6                     	;# 
  1900  0FE7                     	;# 
  1901  0FE8                     	;# 
  1902  0FE9                     	;# 
  1903  0FEA                     	;# 
  1904  0FEB                     	;# 
  1905  0FED                     	;# 
  1906  0FEE                     	;# 
  1907  0FEF                     	;# 
  1908  0000                     	;# 
  1909  0001                     	;# 
  1910  0002                     	;# 
  1911  0003                     	;# 
  1912  0004                     	;# 
  1913  0005                     	;# 
  1914  0006                     	;# 
  1915  0007                     	;# 
  1916  0008                     	;# 
  1917  0009                     	;# 
  1918  000A                     	;# 
  1919  000B                     	;# 
  1920  000C                     	;# 
  1921  000D                     	;# 
  1922  000E                     	;# 
  1923  0010                     	;# 
  1924  0011                     	;# 
  1925  0012                     	;# 
  1926  0013                     	;# 
  1927  0014                     	;# 
  1928  0015                     	;# 
  1929  0015                     	;# 
  1930  0016                     	;# 
  1931  0016                     	;# 
  1932  0017                     	;# 
  1933  0018                     	;# 
  1934  0019                     	;# 
  1935  0019                     	;# 
  1936  001A                     	;# 
  1937  001B                     	;# 
  1938  001C                     	;# 
  1939  001D                     	;# 
  1940  001E                     	;# 
  1941  001F                     	;# 
  1942  008C                     	;# 
  1943  008D                     	;# 
  1944  008E                     	;# 
  1945  0090                     	;# 
  1946  0091                     	;# 
  1947  0092                     	;# 
  1948  0093                     	;# 
  1949  0094                     	;# 
  1950  0097                     	;# 
  1951  009B                     	;# 
  1952  009B                     	;# 
  1953  009C                     	;# 
  1954  009D                     	;# 
  1955  009E                     	;# 
  1956  009F                     	;# 
  1957  010C                     	;# 
  1958  010D                     	;# 
  1959  010E                     	;# 
  1960  0111                     	;# 
  1961  0112                     	;# 
  1962  0113                     	;# 
  1963  0114                     	;# 
  1964  0115                     	;# 
  1965  0116                     	;# 
  1966  0117                     	;# 
  1967  0118                     	;# 
  1968  0119                     	;# 
  1969  018C                     	;# 
  1970  018D                     	;# 
  1971  018E                     	;# 
  1972  0197                     	;# 
  1973  0199                     	;# 
  1974  0199                     	;# 
  1975  0199                     	;# 
  1976  019A                     	;# 
  1977  019A                     	;# 
  1978  019A                     	;# 
  1979  019B                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019B                     	;# 
  1983  019B                     	;# 
  1984  019C                     	;# 
  1985  019C                     	;# 
  1986  019C                     	;# 
  1987  019D                     	;# 
  1988  019D                     	;# 
  1989  019D                     	;# 
  1990  019E                     	;# 
  1991  019E                     	;# 
  1992  019E                     	;# 
  1993  019F                     	;# 
  1994  019F                     	;# 
  1995  019F                     	;# 
  1996  019F                     	;# 
  1997  019F                     	;# 
  1998  020C                     	;# 
  1999  020D                     	;# 
  2000  020E                     	;# 
  2001  0211                     	;# 
  2002  0211                     	;# 
  2003  0212                     	;# 
  2004  0212                     	;# 
  2005  0213                     	;# 
  2006  0213                     	;# 
  2007  0214                     	;# 
  2008  0214                     	;# 
  2009  0215                     	;# 
  2010  0215                     	;# 
  2011  0215                     	;# 
  2012  0215                     	;# 
  2013  0216                     	;# 
  2014  0216                     	;# 
  2015  0217                     	;# 
  2016  0217                     	;# 
  2017  0219                     	;# 
  2018  021A                     	;# 
  2019  021B                     	;# 
  2020  021C                     	;# 
  2021  021D                     	;# 
  2022  021D                     	;# 
  2023  021E                     	;# 
  2024  021F                     	;# 
  2025  028C                     	;# 
  2026  028D                     	;# 
  2027  028E                     	;# 
  2028  0291                     	;# 
  2029  0291                     	;# 
  2030  0292                     	;# 
  2031  0293                     	;# 
  2032  0294                     	;# 
  2033  0295                     	;# 
  2034  0295                     	;# 
  2035  0296                     	;# 
  2036  0297                     	;# 
  2037  0298                     	;# 
  2038  029F                     	;# 
  2039  030C                     	;# 
  2040  030D                     	;# 
  2041  030E                     	;# 
  2042  0311                     	;# 
  2043  0311                     	;# 
  2044  0312                     	;# 
  2045  0313                     	;# 
  2046  0314                     	;# 
  2047  0315                     	;# 
  2048  0315                     	;# 
  2049  0316                     	;# 
  2050  0317                     	;# 
  2051  0318                     	;# 
  2052  038C                     	;# 
  2053  038D                     	;# 
  2054  038E                     	;# 
  2055  0391                     	;# 
  2056  0392                     	;# 
  2057  0393                     	;# 
  2058  0394                     	;# 
  2059  0395                     	;# 
  2060  0396                     	;# 
  2061  0397                     	;# 
  2062  0398                     	;# 
  2063  0399                     	;# 
  2064  039A                     	;# 
  2065  039C                     	;# 
  2066  039D                     	;# 
  2067  039E                     	;# 
  2068  039F                     	;# 
  2069  0411                     	;# 
  2070  0411                     	;# 
  2071  0412                     	;# 
  2072  0413                     	;# 
  2073  0414                     	;# 
  2074  0415                     	;# 
  2075  0416                     	;# 
  2076  0417                     	;# 
  2077  0418                     	;# 
  2078  0418                     	;# 
  2079  0419                     	;# 
  2080  041A                     	;# 
  2081  041B                     	;# 
  2082  041C                     	;# 
  2083  041D                     	;# 
  2084  041E                     	;# 
  2085  041F                     	;# 
  2086  0498                     	;# 
  2087  0498                     	;# 
  2088  0499                     	;# 
  2089  049A                     	;# 
  2090  049B                     	;# 
  2091  049B                     	;# 
  2092  049C                     	;# 
  2093  049D                     	;# 
  2094  049E                     	;# 
  2095  049F                     	;# 
  2096  0617                     	;# 
  2097  0618                     	;# 
  2098  0619                     	;# 
  2099  0619                     	;# 
  2100  061A                     	;# 
  2101  061B                     	;# 
  2102  061C                     	;# 
  2103  061C                     	;# 
  2104  061F                     	;# 
  2105  0691                     	;# 
  2106  0692                     	;# 
  2107  0693                     	;# 
  2108  0694                     	;# 
  2109  0695                     	;# 
  2110  0696                     	;# 
  2111  0697                     	;# 
  2112  0698                     	;# 
  2113  0699                     	;# 
  2114  0711                     	;# 
  2115  0712                     	;# 
  2116  0713                     	;# 
  2117  0714                     	;# 
  2118  0715                     	;# 
  2119  0716                     	;# 
  2120  0717                     	;# 
  2121  0718                     	;# 
  2122  0719                     	;# 
  2123  0891                     	;# 
  2124  0891                     	;# 
  2125  0891                     	;# 
  2126  0891                     	;# 
  2127  0891                     	;# 
  2128  0891                     	;# 
  2129  0892                     	;# 
  2130  0892                     	;# 
  2131  0892                     	;# 
  2132  0893                     	;# 
  2133  0893                     	;# 
  2134  0893                     	;# 
  2135  0893                     	;# 
  2136  0893                     	;# 
  2137  0893                     	;# 
  2138  0894                     	;# 
  2139  0894                     	;# 
  2140  0894                     	;# 
  2141  0895                     	;# 
  2142  0895                     	;# 
  2143  0895                     	;# 
  2144  0896                     	;# 
  2145  0896                     	;# 
  2146  0896                     	;# 
  2147  089B                     	;# 
  2148  0911                     	;# 
  2149  0912                     	;# 
  2150  0913                     	;# 
  2151  0914                     	;# 
  2152  0915                     	;# 
  2153  0916                     	;# 
  2154  0918                     	;# 
  2155  0919                     	;# 
  2156  091A                     	;# 
  2157  091B                     	;# 
  2158  091C                     	;# 
  2159  091D                     	;# 
  2160  091E                     	;# 
  2161  091F                     	;# 
  2162  0E0F                     	;# 
  2163  0E10                     	;# 
  2164  0E11                     	;# 
  2165  0E12                     	;# 
  2166  0E13                     	;# 
  2167  0E14                     	;# 
  2168  0E15                     	;# 
  2169  0E16                     	;# 
  2170  0E17                     	;# 
  2171  0E18                     	;# 
  2172  0E19                     	;# 
  2173  0E1A                     	;# 
  2174  0E1B                     	;# 
  2175  0E1C                     	;# 
  2176  0E1D                     	;# 
  2177  0E1E                     	;# 
  2178  0E1F                     	;# 
  2179  0E20                     	;# 
  2180  0E21                     	;# 
  2181  0E22                     	;# 
  2182  0E24                     	;# 
  2183  0E25                     	;# 
  2184  0E28                     	;# 
  2185  0E29                     	;# 
  2186  0E2A                     	;# 
  2187  0E2B                     	;# 
  2188  0E2C                     	;# 
  2189  0E2D                     	;# 
  2190  0E2E                     	;# 
  2191  0E2F                     	;# 
  2192  0E90                     	;# 
  2193  0E91                     	;# 
  2194  0E92                     	;# 
  2195  0E94                     	;# 
  2196  0E95                     	;# 
  2197  0E9C                     	;# 
  2198  0E9D                     	;# 
  2199  0E9E                     	;# 
  2200  0E9F                     	;# 
  2201  0EA0                     	;# 
  2202  0EA1                     	;# 
  2203  0EA2                     	;# 
  2204  0EA3                     	;# 
  2205  0EA4                     	;# 
  2206  0EA5                     	;# 
  2207  0EA6                     	;# 
  2208  0EA7                     	;# 
  2209  0F0F                     	;# 
  2210  0F10                     	;# 
  2211  0F11                     	;# 
  2212  0F12                     	;# 
  2213  0F13                     	;# 
  2214  0F14                     	;# 
  2215  0F15                     	;# 
  2216  0F16                     	;# 
  2217  0F17                     	;# 
  2218  0F18                     	;# 
  2219  0F19                     	;# 
  2220  0F1A                     	;# 
  2221  0F1B                     	;# 
  2222  0F1C                     	;# 
  2223  0F1D                     	;# 
  2224  0F1E                     	;# 
  2225  0F1F                     	;# 
  2226  0F20                     	;# 
  2227  0F21                     	;# 
  2228  0F22                     	;# 
  2229  0F23                     	;# 
  2230  0F24                     	;# 
  2231  0F25                     	;# 
  2232  0F26                     	;# 
  2233  0F27                     	;# 
  2234  0F28                     	;# 
  2235  0F29                     	;# 
  2236  0F2A                     	;# 
  2237  0F2B                     	;# 
  2238  0F2C                     	;# 
  2239  0F2D                     	;# 
  2240  0F2E                     	;# 
  2241  0F2F                     	;# 
  2242  0F30                     	;# 
  2243  0F31                     	;# 
  2244  0F32                     	;# 
  2245  0F33                     	;# 
  2246  0F34                     	;# 
  2247  0F35                     	;# 
  2248  0F36                     	;# 
  2249  0F37                     	;# 
  2250  0FE4                     	;# 
  2251  0FE5                     	;# 
  2252  0FE6                     	;# 
  2253  0FE7                     	;# 
  2254  0FE8                     	;# 
  2255  0FE9                     	;# 
  2256  0FEA                     	;# 
  2257  0FEB                     	;# 
  2258  0FED                     	;# 
  2259  0FEE                     	;# 
  2260  0FEF                     	;# 
  2261  0000                     	;# 
  2262  0001                     	;# 
  2263  0002                     	;# 
  2264  0003                     	;# 
  2265  0004                     	;# 
  2266  0005                     	;# 
  2267  0006                     	;# 
  2268  0007                     	;# 
  2269  0008                     	;# 
  2270  0009                     	;# 
  2271  000A                     	;# 
  2272  000B                     	;# 
  2273  000C                     	;# 
  2274  000D                     	;# 
  2275  000E                     	;# 
  2276  0010                     	;# 
  2277  0011                     	;# 
  2278  0012                     	;# 
  2279  0013                     	;# 
  2280  0014                     	;# 
  2281  0015                     	;# 
  2282  0015                     	;# 
  2283  0016                     	;# 
  2284  0016                     	;# 
  2285  0017                     	;# 
  2286  0018                     	;# 
  2287  0019                     	;# 
  2288  0019                     	;# 
  2289  001A                     	;# 
  2290  001B                     	;# 
  2291  001C                     	;# 
  2292  001D                     	;# 
  2293  001E                     	;# 
  2294  001F                     	;# 
  2295  008C                     	;# 
  2296  008D                     	;# 
  2297  008E                     	;# 
  2298  0090                     	;# 
  2299  0091                     	;# 
  2300  0092                     	;# 
  2301  0093                     	;# 
  2302  0094                     	;# 
  2303  0097                     	;# 
  2304  009B                     	;# 
  2305  009B                     	;# 
  2306  009C                     	;# 
  2307  009D                     	;# 
  2308  009E                     	;# 
  2309  009F                     	;# 
  2310  010C                     	;# 
  2311  010D                     	;# 
  2312  010E                     	;# 
  2313  0111                     	;# 
  2314  0112                     	;# 
  2315  0113                     	;# 
  2316  0114                     	;# 
  2317  0115                     	;# 
  2318  0116                     	;# 
  2319  0117                     	;# 
  2320  0118                     	;# 
  2321  0119                     	;# 
  2322  018C                     	;# 
  2323  018D                     	;# 
  2324  018E                     	;# 
  2325  0197                     	;# 
  2326  0199                     	;# 
  2327  0199                     	;# 
  2328  0199                     	;# 
  2329  019A                     	;# 
  2330  019A                     	;# 
  2331  019A                     	;# 
  2332  019B                     	;# 
  2333  019B                     	;# 
  2334  019B                     	;# 
  2335  019B                     	;# 
  2336  019B                     	;# 
  2337  019C                     	;# 
  2338  019C                     	;# 
  2339  019C                     	;# 
  2340  019D                     	;# 
  2341  019D                     	;# 
  2342  019D                     	;# 
  2343  019E                     	;# 
  2344  019E                     	;# 
  2345  019E                     	;# 
  2346  019F                     	;# 
  2347  019F                     	;# 
  2348  019F                     	;# 
  2349  019F                     	;# 
  2350  019F                     	;# 
  2351  020C                     	;# 
  2352  020D                     	;# 
  2353  020E                     	;# 
  2354  0211                     	;# 
  2355  0211                     	;# 
  2356  0212                     	;# 
  2357  0212                     	;# 
  2358  0213                     	;# 
  2359  0213                     	;# 
  2360  0214                     	;# 
  2361  0214                     	;# 
  2362  0215                     	;# 
  2363  0215                     	;# 
  2364  0215                     	;# 
  2365  0215                     	;# 
  2366  0216                     	;# 
  2367  0216                     	;# 
  2368  0217                     	;# 
  2369  0217                     	;# 
  2370  0219                     	;# 
  2371  021A                     	;# 
  2372  021B                     	;# 
  2373  021C                     	;# 
  2374  021D                     	;# 
  2375  021D                     	;# 
  2376  021E                     	;# 
  2377  021F                     	;# 
  2378  028C                     	;# 
  2379  028D                     	;# 
  2380  028E                     	;# 
  2381  0291                     	;# 
  2382  0291                     	;# 
  2383  0292                     	;# 
  2384  0293                     	;# 
  2385  0294                     	;# 
  2386  0295                     	;# 
  2387  0295                     	;# 
  2388  0296                     	;# 
  2389  0297                     	;# 
  2390  0298                     	;# 
  2391  029F                     	;# 
  2392  030C                     	;# 
  2393  030D                     	;# 
  2394  030E                     	;# 
  2395  0311                     	;# 
  2396  0311                     	;# 
  2397  0312                     	;# 
  2398  0313                     	;# 
  2399  0314                     	;# 
  2400  0315                     	;# 
  2401  0315                     	;# 
  2402  0316                     	;# 
  2403  0317                     	;# 
  2404  0318                     	;# 
  2405  038C                     	;# 
  2406  038D                     	;# 
  2407  038E                     	;# 
  2408  0391                     	;# 
  2409  0392                     	;# 
  2410  0393                     	;# 
  2411  0394                     	;# 
  2412  0395                     	;# 
  2413  0396                     	;# 
  2414  0397                     	;# 
  2415  0398                     	;# 
  2416  0399                     	;# 
  2417  039A                     	;# 
  2418  039C                     	;# 
  2419  039D                     	;# 
  2420  039E                     	;# 
  2421  039F                     	;# 
  2422  0411                     	;# 
  2423  0411                     	;# 
  2424  0412                     	;# 
  2425  0413                     	;# 
  2426  0414                     	;# 
  2427  0415                     	;# 
  2428  0416                     	;# 
  2429  0417                     	;# 
  2430  0418                     	;# 
  2431  0418                     	;# 
  2432  0419                     	;# 
  2433  041A                     	;# 
  2434  041B                     	;# 
  2435  041C                     	;# 
  2436  041D                     	;# 
  2437  041E                     	;# 
  2438  041F                     	;# 
  2439  0498                     	;# 
  2440  0498                     	;# 
  2441  0499                     	;# 
  2442  049A                     	;# 
  2443  049B                     	;# 
  2444  049B                     	;# 
  2445  049C                     	;# 
  2446  049D                     	;# 
  2447  049E                     	;# 
  2448  049F                     	;# 
  2449  0617                     	;# 
  2450  0618                     	;# 
  2451  0619                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061C                     	;# 
  2457  061F                     	;# 
  2458  0691                     	;# 
  2459  0692                     	;# 
  2460  0693                     	;# 
  2461  0694                     	;# 
  2462  0695                     	;# 
  2463  0696                     	;# 
  2464  0697                     	;# 
  2465  0698                     	;# 
  2466  0699                     	;# 
  2467  0711                     	;# 
  2468  0712                     	;# 
  2469  0713                     	;# 
  2470  0714                     	;# 
  2471  0715                     	;# 
  2472  0716                     	;# 
  2473  0717                     	;# 
  2474  0718                     	;# 
  2475  0719                     	;# 
  2476  0891                     	;# 
  2477  0891                     	;# 
  2478  0891                     	;# 
  2479  0891                     	;# 
  2480  0891                     	;# 
  2481  0891                     	;# 
  2482  0892                     	;# 
  2483  0892                     	;# 
  2484  0892                     	;# 
  2485  0893                     	;# 
  2486  0893                     	;# 
  2487  0893                     	;# 
  2488  0893                     	;# 
  2489  0893                     	;# 
  2490  0893                     	;# 
  2491  0894                     	;# 
  2492  0894                     	;# 
  2493  0894                     	;# 
  2494  0895                     	;# 
  2495  0895                     	;# 
  2496  0895                     	;# 
  2497  0896                     	;# 
  2498  0896                     	;# 
  2499  0896                     	;# 
  2500  089B                     	;# 
  2501  0911                     	;# 
  2502  0912                     	;# 
  2503  0913                     	;# 
  2504  0914                     	;# 
  2505  0915                     	;# 
  2506  0916                     	;# 
  2507  0918                     	;# 
  2508  0919                     	;# 
  2509  091A                     	;# 
  2510  091B                     	;# 
  2511  091C                     	;# 
  2512  091D                     	;# 
  2513  091E                     	;# 
  2514  091F                     	;# 
  2515  0E0F                     	;# 
  2516  0E10                     	;# 
  2517  0E11                     	;# 
  2518  0E12                     	;# 
  2519  0E13                     	;# 
  2520  0E14                     	;# 
  2521  0E15                     	;# 
  2522  0E16                     	;# 
  2523  0E17                     	;# 
  2524  0E18                     	;# 
  2525  0E19                     	;# 
  2526  0E1A                     	;# 
  2527  0E1B                     	;# 
  2528  0E1C                     	;# 
  2529  0E1D                     	;# 
  2530  0E1E                     	;# 
  2531  0E1F                     	;# 
  2532  0E20                     	;# 
  2533  0E21                     	;# 
  2534  0E22                     	;# 
  2535  0E24                     	;# 
  2536  0E25                     	;# 
  2537  0E28                     	;# 
  2538  0E29                     	;# 
  2539  0E2A                     	;# 
  2540  0E2B                     	;# 
  2541  0E2C                     	;# 
  2542  0E2D                     	;# 
  2543  0E2E                     	;# 
  2544  0E2F                     	;# 
  2545  0E90                     	;# 
  2546  0E91                     	;# 
  2547  0E92                     	;# 
  2548  0E94                     	;# 
  2549  0E95                     	;# 
  2550  0E9C                     	;# 
  2551  0E9D                     	;# 
  2552  0E9E                     	;# 
  2553  0E9F                     	;# 
  2554  0EA0                     	;# 
  2555  0EA1                     	;# 
  2556  0EA2                     	;# 
  2557  0EA3                     	;# 
  2558  0EA4                     	;# 
  2559  0EA5                     	;# 
  2560  0EA6                     	;# 
  2561  0EA7                     	;# 
  2562  0F0F                     	;# 
  2563  0F10                     	;# 
  2564  0F11                     	;# 
  2565  0F12                     	;# 
  2566  0F13                     	;# 
  2567  0F14                     	;# 
  2568  0F15                     	;# 
  2569  0F16                     	;# 
  2570  0F17                     	;# 
  2571  0F18                     	;# 
  2572  0F19                     	;# 
  2573  0F1A                     	;# 
  2574  0F1B                     	;# 
  2575  0F1C                     	;# 
  2576  0F1D                     	;# 
  2577  0F1E                     	;# 
  2578  0F1F                     	;# 
  2579  0F20                     	;# 
  2580  0F21                     	;# 
  2581  0F22                     	;# 
  2582  0F23                     	;# 
  2583  0F24                     	;# 
  2584  0F25                     	;# 
  2585  0F26                     	;# 
  2586  0F27                     	;# 
  2587  0F28                     	;# 
  2588  0F29                     	;# 
  2589  0F2A                     	;# 
  2590  0F2B                     	;# 
  2591  0F2C                     	;# 
  2592  0F2D                     	;# 
  2593  0F2E                     	;# 
  2594  0F2F                     	;# 
  2595  0F30                     	;# 
  2596  0F31                     	;# 
  2597  0F32                     	;# 
  2598  0F33                     	;# 
  2599  0F34                     	;# 
  2600  0F35                     	;# 
  2601  0F36                     	;# 
  2602  0F37                     	;# 
  2603  0FE4                     	;# 
  2604  0FE5                     	;# 
  2605  0FE6                     	;# 
  2606  0FE7                     	;# 
  2607  0FE8                     	;# 
  2608  0FE9                     	;# 
  2609  0FEA                     	;# 
  2610  0FEB                     	;# 
  2611  0FED                     	;# 
  2612  0FEE                     	;# 
  2613  0FEF                     	;# 
  2614  0000                     	;# 
  2615  0001                     	;# 
  2616  0002                     	;# 
  2617  0003                     	;# 
  2618  0004                     	;# 
  2619  0005                     	;# 
  2620  0006                     	;# 
  2621  0007                     	;# 
  2622  0008                     	;# 
  2623  0009                     	;# 
  2624  000A                     	;# 
  2625  000B                     	;# 
  2626  000C                     	;# 
  2627  000D                     	;# 
  2628  000E                     	;# 
  2629  0010                     	;# 
  2630  0011                     	;# 
  2631  0012                     	;# 
  2632  0013                     	;# 
  2633  0014                     	;# 
  2634  0015                     	;# 
  2635  0015                     	;# 
  2636  0016                     	;# 
  2637  0016                     	;# 
  2638  0017                     	;# 
  2639  0018                     	;# 
  2640  0019                     	;# 
  2641  0019                     	;# 
  2642  001A                     	;# 
  2643  001B                     	;# 
  2644  001C                     	;# 
  2645  001D                     	;# 
  2646  001E                     	;# 
  2647  001F                     	;# 
  2648  008C                     	;# 
  2649  008D                     	;# 
  2650  008E                     	;# 
  2651  0090                     	;# 
  2652  0091                     	;# 
  2653  0092                     	;# 
  2654  0093                     	;# 
  2655  0094                     	;# 
  2656  0097                     	;# 
  2657  009B                     	;# 
  2658  009B                     	;# 
  2659  009C                     	;# 
  2660  009D                     	;# 
  2661  009E                     	;# 
  2662  009F                     	;# 
  2663  010C                     	;# 
  2664  010D                     	;# 
  2665  010E                     	;# 
  2666  0111                     	;# 
  2667  0112                     	;# 
  2668  0113                     	;# 
  2669  0114                     	;# 
  2670  0115                     	;# 
  2671  0116                     	;# 
  2672  0117                     	;# 
  2673  0118                     	;# 
  2674  0119                     	;# 
  2675  018C                     	;# 
  2676  018D                     	;# 
  2677  018E                     	;# 
  2678  0197                     	;# 
  2679  0199                     	;# 
  2680  0199                     	;# 
  2681  0199                     	;# 
  2682  019A                     	;# 
  2683  019A                     	;# 
  2684  019A                     	;# 
  2685  019B                     	;# 
  2686  019B                     	;# 
  2687  019B                     	;# 
  2688  019B                     	;# 
  2689  019B                     	;# 
  2690  019C                     	;# 
  2691  019C                     	;# 
  2692  019C                     	;# 
  2693  019D                     	;# 
  2694  019D                     	;# 
  2695  019D                     	;# 
  2696  019E                     	;# 
  2697  019E                     	;# 
  2698  019E                     	;# 
  2699  019F                     	;# 
  2700  019F                     	;# 
  2701  019F                     	;# 
  2702  019F                     	;# 
  2703  019F                     	;# 
  2704  020C                     	;# 
  2705  020D                     	;# 
  2706  020E                     	;# 
  2707  0211                     	;# 
  2708  0211                     	;# 
  2709  0212                     	;# 
  2710  0212                     	;# 
  2711  0213                     	;# 
  2712  0213                     	;# 
  2713  0214                     	;# 
  2714  0214                     	;# 
  2715  0215                     	;# 
  2716  0215                     	;# 
  2717  0215                     	;# 
  2718  0215                     	;# 
  2719  0216                     	;# 
  2720  0216                     	;# 
  2721  0217                     	;# 
  2722  0217                     	;# 
  2723  0219                     	;# 
  2724  021A                     	;# 
  2725  021B                     	;# 
  2726  021C                     	;# 
  2727  021D                     	;# 
  2728  021D                     	;# 
  2729  021E                     	;# 
  2730  021F                     	;# 
  2731  028C                     	;# 
  2732  028D                     	;# 
  2733  028E                     	;# 
  2734  0291                     	;# 
  2735  0291                     	;# 
  2736  0292                     	;# 
  2737  0293                     	;# 
  2738  0294                     	;# 
  2739  0295                     	;# 
  2740  0295                     	;# 
  2741  0296                     	;# 
  2742  0297                     	;# 
  2743  0298                     	;# 
  2744  029F                     	;# 
  2745  030C                     	;# 
  2746  030D                     	;# 
  2747  030E                     	;# 
  2748  0311                     	;# 
  2749  0311                     	;# 
  2750  0312                     	;# 
  2751  0313                     	;# 
  2752  0314                     	;# 
  2753  0315                     	;# 
  2754  0315                     	;# 
  2755  0316                     	;# 
  2756  0317                     	;# 
  2757  0318                     	;# 
  2758  038C                     	;# 
  2759  038D                     	;# 
  2760  038E                     	;# 
  2761  0391                     	;# 
  2762  0392                     	;# 
  2763  0393                     	;# 
  2764  0394                     	;# 
  2765  0395                     	;# 
  2766  0396                     	;# 
  2767  0397                     	;# 
  2768  0398                     	;# 
  2769  0399                     	;# 
  2770  039A                     	;# 
  2771  039C                     	;# 
  2772  039D                     	;# 
  2773  039E                     	;# 
  2774  039F                     	;# 
  2775  0411                     	;# 
  2776  0411                     	;# 
  2777  0412                     	;# 
  2778  0413                     	;# 
  2779  0414                     	;# 
  2780  0415                     	;# 
  2781  0416                     	;# 
  2782  0417                     	;# 
  2783  0418                     	;# 
  2784  0418                     	;# 
  2785  0419                     	;# 
  2786  041A                     	;# 
  2787  041B                     	;# 
  2788  041C                     	;# 
  2789  041D                     	;# 
  2790  041E                     	;# 
  2791  041F                     	;# 
  2792  0498                     	;# 
  2793  0498                     	;# 
  2794  0499                     	;# 
  2795  049A                     	;# 
  2796  049B                     	;# 
  2797  049B                     	;# 
  2798  049C                     	;# 
  2799  049D                     	;# 
  2800  049E                     	;# 
  2801  049F                     	;# 
  2802  0617                     	;# 
  2803  0618                     	;# 
  2804  0619                     	;# 
  2805  0619                     	;# 
  2806  061A                     	;# 
  2807  061B                     	;# 
  2808  061C                     	;# 
  2809  061C                     	;# 
  2810  061F                     	;# 
  2811  0691                     	;# 
  2812  0692                     	;# 
  2813  0693                     	;# 
  2814  0694                     	;# 
  2815  0695                     	;# 
  2816  0696                     	;# 
  2817  0697                     	;# 
  2818  0698                     	;# 
  2819  0699                     	;# 
  2820  0711                     	;# 
  2821  0712                     	;# 
  2822  0713                     	;# 
  2823  0714                     	;# 
  2824  0715                     	;# 
  2825  0716                     	;# 
  2826  0717                     	;# 
  2827  0718                     	;# 
  2828  0719                     	;# 
  2829  0891                     	;# 
  2830  0891                     	;# 
  2831  0891                     	;# 
  2832  0891                     	;# 
  2833  0891                     	;# 
  2834  0891                     	;# 
  2835  0892                     	;# 
  2836  0892                     	;# 
  2837  0892                     	;# 
  2838  0893                     	;# 
  2839  0893                     	;# 
  2840  0893                     	;# 
  2841  0893                     	;# 
  2842  0893                     	;# 
  2843  0893                     	;# 
  2844  0894                     	;# 
  2845  0894                     	;# 
  2846  0894                     	;# 
  2847  0895                     	;# 
  2848  0895                     	;# 
  2849  0895                     	;# 
  2850  0896                     	;# 
  2851  0896                     	;# 
  2852  0896                     	;# 
  2853  089B                     	;# 
  2854  0911                     	;# 
  2855  0912                     	;# 
  2856  0913                     	;# 
  2857  0914                     	;# 
  2858  0915                     	;# 
  2859  0916                     	;# 
  2860  0918                     	;# 
  2861  0919                     	;# 
  2862  091A                     	;# 
  2863  091B                     	;# 
  2864  091C                     	;# 
  2865  091D                     	;# 
  2866  091E                     	;# 
  2867  091F                     	;# 
  2868  0E0F                     	;# 
  2869  0E10                     	;# 
  2870  0E11                     	;# 
  2871  0E12                     	;# 
  2872  0E13                     	;# 
  2873  0E14                     	;# 
  2874  0E15                     	;# 
  2875  0E16                     	;# 
  2876  0E17                     	;# 
  2877  0E18                     	;# 
  2878  0E19                     	;# 
  2879  0E1A                     	;# 
  2880  0E1B                     	;# 
  2881  0E1C                     	;# 
  2882  0E1D                     	;# 
  2883  0E1E                     	;# 
  2884  0E1F                     	;# 
  2885  0E20                     	;# 
  2886  0E21                     	;# 
  2887  0E22                     	;# 
  2888  0E24                     	;# 
  2889  0E25                     	;# 
  2890  0E28                     	;# 
  2891  0E29                     	;# 
  2892  0E2A                     	;# 
  2893  0E2B                     	;# 
  2894  0E2C                     	;# 
  2895  0E2D                     	;# 
  2896  0E2E                     	;# 
  2897  0E2F                     	;# 
  2898  0E90                     	;# 
  2899  0E91                     	;# 
  2900  0E92                     	;# 
  2901  0E94                     	;# 
  2902  0E95                     	;# 
  2903  0E9C                     	;# 
  2904  0E9D                     	;# 
  2905  0E9E                     	;# 
  2906  0E9F                     	;# 
  2907  0EA0                     	;# 
  2908  0EA1                     	;# 
  2909  0EA2                     	;# 
  2910  0EA3                     	;# 
  2911  0EA4                     	;# 
  2912  0EA5                     	;# 
  2913  0EA6                     	;# 
  2914  0EA7                     	;# 
  2915  0F0F                     	;# 
  2916  0F10                     	;# 
  2917  0F11                     	;# 
  2918  0F12                     	;# 
  2919  0F13                     	;# 
  2920  0F14                     	;# 
  2921  0F15                     	;# 
  2922  0F16                     	;# 
  2923  0F17                     	;# 
  2924  0F18                     	;# 
  2925  0F19                     	;# 
  2926  0F1A                     	;# 
  2927  0F1B                     	;# 
  2928  0F1C                     	;# 
  2929  0F1D                     	;# 
  2930  0F1E                     	;# 
  2931  0F1F                     	;# 
  2932  0F20                     	;# 
  2933  0F21                     	;# 
  2934  0F22                     	;# 
  2935  0F23                     	;# 
  2936  0F24                     	;# 
  2937  0F25                     	;# 
  2938  0F26                     	;# 
  2939  0F27                     	;# 
  2940  0F28                     	;# 
  2941  0F29                     	;# 
  2942  0F2A                     	;# 
  2943  0F2B                     	;# 
  2944  0F2C                     	;# 
  2945  0F2D                     	;# 
  2946  0F2E                     	;# 
  2947  0F2F                     	;# 
  2948  0F30                     	;# 
  2949  0F31                     	;# 
  2950  0F32                     	;# 
  2951  0F33                     	;# 
  2952  0F34                     	;# 
  2953  0F35                     	;# 
  2954  0F36                     	;# 
  2955  0F37                     	;# 
  2956  0FE4                     	;# 
  2957  0FE5                     	;# 
  2958  0FE6                     	;# 
  2959  0FE7                     	;# 
  2960  0FE8                     	;# 
  2961  0FE9                     	;# 
  2962  0FEA                     	;# 
  2963  0FEB                     	;# 
  2964  0FED                     	;# 
  2965  0FEE                     	;# 
  2966  0FEF                     	;# 
  2967  0000                     	;# 
  2968  0001                     	;# 
  2969  0002                     	;# 
  2970  0003                     	;# 
  2971  0004                     	;# 
  2972  0005                     	;# 
  2973  0006                     	;# 
  2974  0007                     	;# 
  2975  0008                     	;# 
  2976  0009                     	;# 
  2977  000A                     	;# 
  2978  000B                     	;# 
  2979  000C                     	;# 
  2980  000D                     	;# 
  2981  000E                     	;# 
  2982  0010                     	;# 
  2983  0011                     	;# 
  2984  0012                     	;# 
  2985  0013                     	;# 
  2986  0014                     	;# 
  2987  0015                     	;# 
  2988  0015                     	;# 
  2989  0016                     	;# 
  2990  0016                     	;# 
  2991  0017                     	;# 
  2992  0018                     	;# 
  2993  0019                     	;# 
  2994  0019                     	;# 
  2995  001A                     	;# 
  2996  001B                     	;# 
  2997  001C                     	;# 
  2998  001D                     	;# 
  2999  001E                     	;# 
  3000  001F                     	;# 
  3001  008C                     	;# 
  3002  008D                     	;# 
  3003  008E                     	;# 
  3004  0090                     	;# 
  3005  0091                     	;# 
  3006  0092                     	;# 
  3007  0093                     	;# 
  3008  0094                     	;# 
  3009  0097                     	;# 
  3010  009B                     	;# 
  3011  009B                     	;# 
  3012  009C                     	;# 
  3013  009D                     	;# 
  3014  009E                     	;# 
  3015  009F                     	;# 
  3016  010C                     	;# 
  3017  010D                     	;# 
  3018  010E                     	;# 
  3019  0111                     	;# 
  3020  0112                     	;# 
  3021  0113                     	;# 
  3022  0114                     	;# 
  3023  0115                     	;# 
  3024  0116                     	;# 
  3025  0117                     	;# 
  3026  0118                     	;# 
  3027  0119                     	;# 
  3028  018C                     	;# 
  3029  018D                     	;# 
  3030  018E                     	;# 
  3031  0197                     	;# 
  3032  0199                     	;# 
  3033  0199                     	;# 
  3034  0199                     	;# 
  3035  019A                     	;# 
  3036  019A                     	;# 
  3037  019A                     	;# 
  3038  019B                     	;# 
  3039  019B                     	;# 
  3040  019B                     	;# 
  3041  019B                     	;# 
  3042  019B                     	;# 
  3043  019C                     	;# 
  3044  019C                     	;# 
  3045  019C                     	;# 
  3046  019D                     	;# 
  3047  019D                     	;# 
  3048  019D                     	;# 
  3049  019E                     	;# 
  3050  019E                     	;# 
  3051  019E                     	;# 
  3052  019F                     	;# 
  3053  019F                     	;# 
  3054  019F                     	;# 
  3055  019F                     	;# 
  3056  019F                     	;# 
  3057  020C                     	;# 
  3058  020D                     	;# 
  3059  020E                     	;# 
  3060  0211                     	;# 
  3061  0211                     	;# 
  3062  0212                     	;# 
  3063  0212                     	;# 
  3064  0213                     	;# 
  3065  0213                     	;# 
  3066  0214                     	;# 
  3067  0214                     	;# 
  3068  0215                     	;# 
  3069  0215                     	;# 
  3070  0215                     	;# 
  3071  0215                     	;# 
  3072  0216                     	;# 
  3073  0216                     	;# 
  3074  0217                     	;# 
  3075  0217                     	;# 
  3076  0219                     	;# 
  3077  021A                     	;# 
  3078  021B                     	;# 
  3079  021C                     	;# 
  3080  021D                     	;# 
  3081  021D                     	;# 
  3082  021E                     	;# 
  3083  021F                     	;# 
  3084  028C                     	;# 
  3085  028D                     	;# 
  3086  028E                     	;# 
  3087  0291                     	;# 
  3088  0291                     	;# 
  3089  0292                     	;# 
  3090  0293                     	;# 
  3091  0294                     	;# 
  3092  0295                     	;# 
  3093  0295                     	;# 
  3094  0296                     	;# 
  3095  0297                     	;# 
  3096  0298                     	;# 
  3097  029F                     	;# 
  3098  030C                     	;# 
  3099  030D                     	;# 
  3100  030E                     	;# 
  3101  0311                     	;# 
  3102  0311                     	;# 
  3103  0312                     	;# 
  3104  0313                     	;# 
  3105  0314                     	;# 
  3106  0315                     	;# 
  3107  0315                     	;# 
  3108  0316                     	;# 
  3109  0317                     	;# 
  3110  0318                     	;# 
  3111  038C                     	;# 
  3112  038D                     	;# 
  3113  038E                     	;# 
  3114  0391                     	;# 
  3115  0392                     	;# 
  3116  0393                     	;# 
  3117  0394                     	;# 
  3118  0395                     	;# 
  3119  0396                     	;# 
  3120  0397                     	;# 
  3121  0398                     	;# 
  3122  0399                     	;# 
  3123  039A                     	;# 
  3124  039C                     	;# 
  3125  039D                     	;# 
  3126  039E                     	;# 
  3127  039F                     	;# 
  3128  0411                     	;# 
  3129  0411                     	;# 
  3130  0412                     	;# 
  3131  0413                     	;# 
  3132  0414                     	;# 
  3133  0415                     	;# 
  3134  0416                     	;# 
  3135  0417                     	;# 
  3136  0418                     	;# 
  3137  0418                     	;# 
  3138  0419                     	;# 
  3139  041A                     	;# 
  3140  041B                     	;# 
  3141  041C                     	;# 
  3142  041D                     	;# 
  3143  041E                     	;# 
  3144  041F                     	;# 
  3145  0498                     	;# 
  3146  0498                     	;# 
  3147  0499                     	;# 
  3148  049A                     	;# 
  3149  049B                     	;# 
  3150  049B                     	;# 
  3151  049C                     	;# 
  3152  049D                     	;# 
  3153  049E                     	;# 
  3154  049F                     	;# 
  3155  0617                     	;# 
  3156  0618                     	;# 
  3157  0619                     	;# 
  3158  0619                     	;# 
  3159  061A                     	;# 
  3160  061B                     	;# 
  3161  061C                     	;# 
  3162  061C                     	;# 
  3163  061F                     	;# 
  3164  0691                     	;# 
  3165  0692                     	;# 
  3166  0693                     	;# 
  3167  0694                     	;# 
  3168  0695                     	;# 
  3169  0696                     	;# 
  3170  0697                     	;# 
  3171  0698                     	;# 
  3172  0699                     	;# 
  3173  0711                     	;# 
  3174  0712                     	;# 
  3175  0713                     	;# 
  3176  0714                     	;# 
  3177  0715                     	;# 
  3178  0716                     	;# 
  3179  0717                     	;# 
  3180  0718                     	;# 
  3181  0719                     	;# 
  3182  0891                     	;# 
  3183  0891                     	;# 
  3184  0891                     	;# 
  3185  0891                     	;# 
  3186  0891                     	;# 
  3187  0891                     	;# 
  3188  0892                     	;# 
  3189  0892                     	;# 
  3190  0892                     	;# 
  3191  0893                     	;# 
  3192  0893                     	;# 
  3193  0893                     	;# 
  3194  0893                     	;# 
  3195  0893                     	;# 
  3196  0893                     	;# 
  3197  0894                     	;# 
  3198  0894                     	;# 
  3199  0894                     	;# 
  3200  0895                     	;# 
  3201  0895                     	;# 
  3202  0895                     	;# 
  3203  0896                     	;# 
  3204  0896                     	;# 
  3205  0896                     	;# 
  3206  089B                     	;# 
  3207  0911                     	;# 
  3208  0912                     	;# 
  3209  0913                     	;# 
  3210  0914                     	;# 
  3211  0915                     	;# 
  3212  0916                     	;# 
  3213  0918                     	;# 
  3214  0919                     	;# 
  3215  091A                     	;# 
  3216  091B                     	;# 
  3217  091C                     	;# 
  3218  091D                     	;# 
  3219  091E                     	;# 
  3220  091F                     	;# 
  3221  0E0F                     	;# 
  3222  0E10                     	;# 
  3223  0E11                     	;# 
  3224  0E12                     	;# 
  3225  0E13                     	;# 
  3226  0E14                     	;# 
  3227  0E15                     	;# 
  3228  0E16                     	;# 
  3229  0E17                     	;# 
  3230  0E18                     	;# 
  3231  0E19                     	;# 
  3232  0E1A                     	;# 
  3233  0E1B                     	;# 
  3234  0E1C                     	;# 
  3235  0E1D                     	;# 
  3236  0E1E                     	;# 
  3237  0E1F                     	;# 
  3238  0E20                     	;# 
  3239  0E21                     	;# 
  3240  0E22                     	;# 
  3241  0E24                     	;# 
  3242  0E25                     	;# 
  3243  0E28                     	;# 
  3244  0E29                     	;# 
  3245  0E2A                     	;# 
  3246  0E2B                     	;# 
  3247  0E2C                     	;# 
  3248  0E2D                     	;# 
  3249  0E2E                     	;# 
  3250  0E2F                     	;# 
  3251  0E90                     	;# 
  3252  0E91                     	;# 
  3253  0E92                     	;# 
  3254  0E94                     	;# 
  3255  0E95                     	;# 
  3256  0E9C                     	;# 
  3257  0E9D                     	;# 
  3258  0E9E                     	;# 
  3259  0E9F                     	;# 
  3260  0EA0                     	;# 
  3261  0EA1                     	;# 
  3262  0EA2                     	;# 
  3263  0EA3                     	;# 
  3264  0EA4                     	;# 
  3265  0EA5                     	;# 
  3266  0EA6                     	;# 
  3267  0EA7                     	;# 
  3268  0F0F                     	;# 
  3269  0F10                     	;# 
  3270  0F11                     	;# 
  3271  0F12                     	;# 
  3272  0F13                     	;# 
  3273  0F14                     	;# 
  3274  0F15                     	;# 
  3275  0F16                     	;# 
  3276  0F17                     	;# 
  3277  0F18                     	;# 
  3278  0F19                     	;# 
  3279  0F1A                     	;# 
  3280  0F1B                     	;# 
  3281  0F1C                     	;# 
  3282  0F1D                     	;# 
  3283  0F1E                     	;# 
  3284  0F1F                     	;# 
  3285  0F20                     	;# 
  3286  0F21                     	;# 
  3287  0F22                     	;# 
  3288  0F23                     	;# 
  3289  0F24                     	;# 
  3290  0F25                     	;# 
  3291  0F26                     	;# 
  3292  0F27                     	;# 
  3293  0F28                     	;# 
  3294  0F29                     	;# 
  3295  0F2A                     	;# 
  3296  0F2B                     	;# 
  3297  0F2C                     	;# 
  3298  0F2D                     	;# 
  3299  0F2E                     	;# 
  3300  0F2F                     	;# 
  3301  0F30                     	;# 
  3302  0F31                     	;# 
  3303  0F32                     	;# 
  3304  0F33                     	;# 
  3305  0F34                     	;# 
  3306  0F35                     	;# 
  3307  0F36                     	;# 
  3308  0F37                     	;# 
  3309  0FE4                     	;# 
  3310  0FE5                     	;# 
  3311  0FE6                     	;# 
  3312  0FE7                     	;# 
  3313  0FE8                     	;# 
  3314  0FE9                     	;# 
  3315  0FEA                     	;# 
  3316  0FEB                     	;# 
  3317  0FED                     	;# 
  3318  0FEE                     	;# 
  3319  0FEF                     	;# 
  3320                           
  3321                           	psect	stringtext1
  3322  1000                     __pstringtext1:	
  3323  1000                     _fsmStateTable:	
  3324  1000  34F9               	retlw	low _do_I2C_IDLE
  3325  1001  340A               	retlw	high _do_I2C_IDLE
  3326  1002  343F               	retlw	low _do_I2C_SEND_ADR_READ
  3327  1003  340B               	retlw	high _do_I2C_SEND_ADR_READ
  3328  1004  3429               	retlw	low _do_I2C_SEND_ADR_WRITE
  3329  1005  340B               	retlw	high _do_I2C_SEND_ADR_WRITE
  3330  1006  34B1               	retlw	low _do_I2C_TX
  3331  1007  340F               	retlw	high _do_I2C_TX
  3332  1008  346B               	retlw	low _do_I2C_RX
  3333  1009  340F               	retlw	high _do_I2C_RX
  3334  100A  3404               	retlw	low _do_I2C_RCEN
  3335  100B  340B               	retlw	high _do_I2C_RCEN
  3336  100C  3435               	retlw	low _do_I2C_TX_EMPTY
  3337  100D  340E               	retlw	high _do_I2C_TX_EMPTY
  3338  100E  34D4               	retlw	low _do_I2C_SEND_RESTART_READ
  3339  100F  340A               	retlw	high _do_I2C_SEND_RESTART_READ
  3340  1010  34D8               	retlw	low _do_I2C_SEND_RESTART_WRITE
  3341  1011  340A               	retlw	high _do_I2C_SEND_RESTART_WRITE
  3342  1012  34DC               	retlw	low _do_I2C_SEND_RESTART
  3343  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  3344  1014  34E0               	retlw	low _do_I2C_SEND_STOP
  3345  1015  340A               	retlw	high _do_I2C_SEND_STOP
  3346  1016  34E4               	retlw	low _do_I2C_DO_ACK
  3347  1017  340A               	retlw	high _do_I2C_DO_ACK
  3348  1018  34E8               	retlw	low _do_I2C_DO_NACK_STOP
  3349  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  3350  101A  34EC               	retlw	low _do_I2C_DO_NACK_RESTART
  3351  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  3352  101C  3422               	retlw	low _do_I2C_RESET
  3353  101D  340B               	retlw	high _do_I2C_RESET
  3354  101E  34DF               	retlw	low _do_I2C_DO_ADDRESS_NACK
  3355  101F  340D               	retlw	high _do_I2C_DO_ADDRESS_NACK
  3356  1020                     __end_of_fsmStateTable:	
  3357                           
  3358                           	psect	nvBANK0
  3359  006D                     __pnvBANK0:	
  3360  006D                     _IOCCF1_InterruptHandler:	
  3361  006D                     	ds	2
  3362  0011                     _PIR1bits	set	17
  3363  000B                     _INTCONbits	set	11
  3364  0010                     _PIR0bits	set	16
  3365  008E                     _TRISC	set	142
  3366  008D                     _TRISB	set	141
  3367  008C                     _TRISA	set	140
  3368  0097                     _WDTCON	set	151
  3369  0091                     _PIE1bits	set	145
  3370  0090                     _PIE0bits	set	144
  3371  010E                     _LATCbits	set	270
  3372  010C                     _LATAbits	set	268
  3373  010E                     _LATC	set	270
  3374  010D                     _LATB	set	269
  3375  010C                     _LATA	set	268
  3376  018C                     _ANSELA	set	396
  3377  018D                     _ANSELB	set	397
  3378  018E                     _ANSELC	set	398
  3379  0214                     _SSP1STATbits	set	532
  3380  0213                     _SSP1MSK	set	531
  3381  0211                     _SSP1BUF	set	529
  3382  0216                     _SSP1CON2bits	set	534
  3383  0212                     _SSP1ADD	set	530
  3384  0216                     _SSP1CON2	set	534
  3385  0215                     _SSP1CON1	set	533
  3386  0214                     _SSP1STAT	set	532
  3387  0215                     _SSP1CON1bits	set	533
  3388  020E                     _WPUC	set	526
  3389  020C                     _WPUA	set	524
  3390  020D                     _WPUB	set	525
  3391  028E                     _ODCONC	set	654
  3392  028D                     _ODCONB	set	653
  3393  028C                     _ODCONA	set	652
  3394  030E                     _SLRCONC	set	782
  3395  030D                     _SLRCONB	set	781
  3396  030C                     _SLRCONA	set	780
  3397  0397                     _IOCCPbits	set	919
  3398  0398                     _IOCCNbits	set	920
  3399  0399                     _IOCCFbits	set	921
  3400  0916                     _PMD5	set	2326
  3401  0915                     _PMD4	set	2325
  3402  0914                     _PMD3	set	2324
  3403  0913                     _PMD2	set	2323
  3404  0912                     _PMD1	set	2322
  3405  0911                     _PMD0	set	2321
  3406  091E                     _OSCTUNE	set	2334
  3407  091F                     _OSCFRQ	set	2335
  3408  091D                     _OSCEN	set	2333
  3409  091B                     _OSCCON3	set	2331
  3410  0919                     _OSCCON1	set	2329
  3411  0E21                     _SSP1DATPPS	set	3617
  3412  0E20                     _SSP1CLKPPS	set	3616
  3413  0E9D                     _RB5PPS	set	3741
  3414  0E9F                     _RB7PPS	set	3743
  3415                           
  3416                           ; #config settings
  3417  0000                     
  3418                           	psect	cinit
  3419  002D                     start_initialization:	
  3420  002D                     __initialization:	
  3421                           
  3422                           ; Clear objects allocated to COMMON
  3423  002D  01F0               	clrf	__pbssCOMMON& (0+127)
  3424  002E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3425  002F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3426  0030  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3427  0031  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3428  0032  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3429                           
  3430                           ; Clear objects allocated to BANK0
  3431  0033  305D               	movlw	low __pbssBANK0
  3432  0034  0084               	movwf	4
  3433  0035  3000               	movlw	high __pbssBANK0
  3434  0036  0085               	movwf	5
  3435  0037  3010               	movlw	16
  3436  0038  318B  231C  3180   	fcall	clear_ram0
  3437                           
  3438                           ; Clear objects allocated to BANK3
  3439  003B  30A0               	movlw	low __pbssBANK3
  3440  003C  0084               	movwf	4
  3441  003D  3001               	movlw	high __pbssBANK3
  3442  003E  0085               	movwf	5
  3443  003F  301D               	movlw	29
  3444  0040  318B  231C  3180   	fcall	clear_ram0
  3445                           
  3446                           ; Clear objects allocated to BANK4
  3447  0043  3020               	movlw	low __pbssBANK4
  3448  0044  0084               	movwf	4
  3449  0045  3002               	movlw	high __pbssBANK4
  3450  0046  0085               	movwf	5
  3451  0047  3044               	movlw	68
  3452  0048  318B  231C         	fcall	clear_ram0
  3453  004A                     end_of_initialization:	
  3454                           ;End of C runtime variable initialization code
  3455                           
  3456  004A                     __end_of__initialization:	
  3457  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3458  004B  0020               	movlb	0
  3459  004C  318C  2CA6         	ljmp	_main	;jump to C main() function
  3460                           
  3461                           	psect	bssCOMMON
  3462  0070                     __pbssCOMMON:	
  3463  0070                     _i2c1_driver_i2cISR:	
  3464  0070                     	ds	2
  3465  0072                     _i2c1_driver_busCollisionISR:	
  3466  0072                     	ds	2
  3467  0074                     _b_i2c_error_flag:	
  3468  0074                     	ds	1
  3469  0075                     _handleGestureFlag:	
  3470  0075                     	ds	1
  3471                           
  3472                           	psect	bssBANK0
  3473  005D                     __pbssBANK0:	
  3474  005D                     _gesture_motion_:	
  3475  005D                     	ds	2
  3476  005F                     _gesture_state_:	
  3477  005F                     	ds	2
  3478  0061                     _gesture_far_count_:	
  3479  0061                     	ds	2
  3480  0063                     _gesture_near_count_:	
  3481  0063                     	ds	2
  3482  0065                     _gesture_lr_count_:	
  3483  0065                     	ds	2
  3484  0067                     _gesture_ud_count_:	
  3485  0067                     	ds	2
  3486  0069                     _gesture_lr_delta_:	
  3487  0069                     	ds	2
  3488  006B                     _gesture_ud_delta_:	
  3489  006B                     	ds	2
  3490                           
  3491                           	psect	bssBANK3
  3492  01A0                     __pbssBANK3:	
  3493  01A0                     _i2c_status:	
  3494  01A0                     	ds	29
  3495                           
  3496                           	psect	bssBANK4
  3497  0220                     __pbssBANK4:	
  3498  0220                     _gesture_data_:	
  3499  0220                     	ds	68
  3500                           
  3501                           	psect	clrtext
  3502  0B1C                     clear_ram0:	
  3503                           ;	Called with FSR0 containing the base address, and
  3504                           ;	WREG with the size to clear
  3505                           
  3506  0B1C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3507  0B1D                     clrloop0:	
  3508  0B1D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3509  0B1E  3101               	addfsr 0,1
  3510  0B1F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3511  0B20  2B1D               	goto	clrloop0	;have we reached the end yet?
  3512  0B21  3400               	retlw	0	;all done for this memory range, return
  3513                           
  3514                           	psect	cstackBANK2
  3515  0120                     __pcstackBANK2:	
  3516  0120                     readGesture@fifo_data:	
  3517                           
  3518                           ; 64 bytes @ 0x0
  3519  0120                     	ds	64
  3520                           
  3521                           	psect	cstackBANK1
  3522  00A0                     __pcstackBANK1:	
  3523  00A0                     readGesture@fifo_data2:	
  3524                           
  3525                           ; 64 bytes @ 0x0
  3526  00A0                     	ds	64
  3527                           
  3528                           	psect	cstackCOMMON
  3529  0076                     __pcstackCOMMON:	
  3530  0076                     ?_i2c1_driver_open:	
  3531  0076                     ?_i2c1_driver_isNACK:	
  3532                           ; 1 bit 
  3533                           
  3534  0076                     ?_i2c1_driver_isBufferFull:	
  3535                           ; 1 bit 
  3536                           
  3537  0076                     ?_returnStop:	
  3538                           ; 1 bit 
  3539                           
  3540  0076                     ?_returnReset:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0076                     ?_mssp1_clearIRQ:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0076                     ??_mssp1_clearIRQ:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0076                     ?_i2c_busCollisionISR:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0076                     ??_i2c_busCollisionISR:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0076                     ?_i2c_ISR:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0076                     ?_i2c1_driver_start:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0076                     ?_i2c1_driver_resetBus:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0076                     ??_i2c1_driver_resetBus:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0076                     ?_i2c1_driver_restart:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0076                     ?_i2c1_driver_stop:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0076                     ?_i2c1_driver_TXData:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0076                     ?_i2c1_driver_startRX:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0076                     ?_i2c1_driver_sendACK:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0076                     ??_i2c1_driver_sendACK:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0076                     ?_i2c1_driver_sendNACK:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0076                     ??_i2c1_driver_isNACK:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0076                     ?_i2c1_driver_getRXData:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0076                     ?_mssp1_setIRQ:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0076                     ??_mssp1_setIRQ:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0076                     ?_i2c1_driver_clearBusCollision:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0076                     ??_i2c1_driver_clearBusCollision:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0076                     ?_PIN_MANAGER_IOC:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0076                     ??_PIN_MANAGER_IOC:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0076                     ?_PMD_Initialize:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0076                     ?_PIN_MANAGER_Initialize:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0076                     ?_OSCILLATOR_Initialize:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0076                     ?_WDT_Initialize:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0076                     ?_IOCCF1_DefaultInterruptHandler:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0076                     ??_IOCCF1_DefaultInterruptHandler:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0076                     ?_IOCCF1_ISR:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0076                     ??_IOCCF1_ISR:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0076                     ?_initialize:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0076                     ?_enableGestureSensor:	
  3640                           ; 1 bytes @ 0x0
  3641                           
  3642  0076                     ?_isGestureAvailable:	
  3643                           ; 1 bytes @ 0x0
  3644                           
  3645  0076                     ?_handleGesture:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648  0076                     ?_wireReadDataByte:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651  0076                     ?_setLEDDrive:	
  3652                           ; 1 bytes @ 0x0
  3653                           
  3654  0076                     ?_setProximityGain:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657  0076                     ?_setAmbientLightGain:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0076                     ?_setProxIntLowThresh:	
  3661                           ; 1 bytes @ 0x0
  3662                           
  3663  0076                     ?_setProxIntHighThresh:	
  3664                           ; 1 bytes @ 0x0
  3665                           
  3666  0076                     ?_setGestureEnterThresh:	
  3667                           ; 1 bytes @ 0x0
  3668                           
  3669  0076                     ?_setGestureExitThresh:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672  0076                     ?_setGestureGain:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675  0076                     ?_setGestureLEDDrive:	
  3676                           ; 1 bytes @ 0x0
  3677                           
  3678  0076                     ?_setGestureWaitTime:	
  3679                           ; 1 bytes @ 0x0
  3680                           
  3681  0076                     ?_setGestureIntEnable:	
  3682                           ; 1 bytes @ 0x0
  3683                           
  3684  0076                     ?_getMode:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687  0076                     ?_resetGestureParameters:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690  0076                     ?_setLEDBoost:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693  0076                     ?_setGestureMode:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696  0076                     ?_enablePower:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699  0076                     ?_processGestureData:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702  0076                     ?_decodeGesture:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705  0076                     ?_I2C_Start:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708  0076                     ?_I2C_Write_Byte:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711  0076                     ?_I2C_ReStart:	
  3712                           ; 1 bytes @ 0x0
  3713                           
  3714  0076                     ?_I2C_Read_Byte:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0076                     ?_I2C_Send_NACK:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0076                     ?_I2C_Stop:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0076                     ?_do_I2C_RESET:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0076                     ??_do_I2C_RESET:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0076                     ?_do_I2C_IDLE:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0076                     ??_do_I2C_IDLE:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0076                     ?_do_I2C_SEND_RESTART_READ:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0076                     ??_do_I2C_SEND_RESTART_READ:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0076                     ?_do_I2C_SEND_RESTART_WRITE:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0076                     ??_do_I2C_SEND_RESTART_WRITE:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0076                     ?_do_I2C_SEND_RESTART:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0076                     ??_do_I2C_SEND_RESTART:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0076                     ?_do_I2C_SEND_STOP:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0076                     ??_do_I2C_SEND_STOP:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0076                     ?_do_I2C_SEND_ADR_READ:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0076                     ??_do_I2C_SEND_ADR_READ:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0076                     ?_do_I2C_SEND_ADR_WRITE:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0076                     ??_do_I2C_SEND_ADR_WRITE:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0076                     ?_do_I2C_RCEN:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0076                     ??_do_I2C_RCEN:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0076                     ?_do_I2C_DO_ACK:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0076                     ??_do_I2C_DO_ACK:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0076                     ?_do_I2C_DO_NACK_STOP:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0076                     ??_do_I2C_DO_NACK_STOP:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0076                     ?_do_I2C_DO_NACK_RESTART:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0076                     ??_do_I2C_DO_NACK_RESTART:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0076                     ?_do_I2C_DO_ADDRESS_NACK:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0076                     ??_do_I2C_DO_ADDRESS_NACK:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0076                     ?_do_I2C_TX:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0076                     ??_do_I2C_TX:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0076                     ?_do_I2C_RX:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0076                     ??_do_I2C_RX:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0076                     ?_do_I2C_TX_EMPTY:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0076                     ??_do_I2C_TX_EMPTY:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0076                     ?_INTERRUPT_InterruptManager:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0076                     ?_SYSTEM_Initialize:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0076                     ?_GestureInterruptHandler:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0076                     ??_GestureInterruptHandler:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0076                     ?_main:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0076                     ?_LEDs_SetLow:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0076                     ?i1_i2c1_driver_restart:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0076                     ??i1_i2c1_driver_restart:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0076                     ?i1_i2c1_driver_stop:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0076                     ??i1_i2c1_driver_stop:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0076                     ?i1_i2c1_driver_startRX:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0076                     ??i1_i2c1_driver_startRX:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0076                     ?i1_i2c1_driver_getRXData:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0076                     ??i1_i2c1_driver_getRXData:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0076                     ?i1_i2c1_driver_TXData:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0076                     ??i1_i2c1_driver_TXData:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0076                     ?i1_i2c1_driver_sendNACK:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0076                     ??i1_i2c1_driver_sendNACK:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0076                     returnStop@p:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0076                     returnReset@p:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0076                     i1i2c1_driver_TXData@d:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882                           
  3883                           ; 1 bytes @ 0x0
  3884  0076                     	ds	1
  3885  0077                     ??_returnStop:	
  3886  0077                     ??_returnReset:	
  3887                           ; 1 bytes @ 0x1
  3888                           
  3889                           
  3890                           ; 1 bytes @ 0x1
  3891  0077                     	ds	2
  3892  0079                     ??_i2c_ISR:	
  3893                           
  3894                           ; 1 bytes @ 0x3
  3895  0079                     	ds	3
  3896  007C                     ??_INTERRUPT_InterruptManager:	
  3897                           
  3898                           	psect	cstackBANK0
  3899  0020                     __pcstackBANK0:	
  3900                           ; 1 bytes @ 0x6
  3901                           
  3902  0020                     ??_i2c1_driver_open:	
  3903  0020                     ??_i2c1_driver_start:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0020                     ??_i2c1_driver_restart:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0020                     ??_i2c1_driver_stop:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0020                     ??_i2c1_driver_TXData:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0020                     ??_i2c1_driver_startRX:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0020                     ??_i2c1_driver_sendNACK:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0020                     ??_i2c1_driver_getRXData:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0020                     ??_PMD_Initialize:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0020                     ??_OSCILLATOR_Initialize:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0020                     ??_WDT_Initialize:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0020                     ?_IOCCF1_SetInterruptHandler:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0020                     ??_resetGestureParameters:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0020                     ??_decodeGesture:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0020                     ??_I2C_Start:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0020                     ??_I2C_ReStart:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0020                     ??_I2C_Send_NACK:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0020                     ??_I2C_Stop:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0020                     ??_i2c1_driver_isBufferFull:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0020                     ??_LEDs_SetLow:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0020                     ?___wmul:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0020                     i2c1_driver_TXData@d:	
  3964                           ; 2 bytes @ 0x0
  3965                           
  3966  0020                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0020                     ___wmul@multiplier:	
  3970                           ; 2 bytes @ 0x0
  3971                           
  3972                           
  3973                           ; 2 bytes @ 0x0
  3974  0020                     	ds	1
  3975  0021                     ??_I2C_Write_Byte:	
  3976  0021                     ??_I2C_Read_Byte:	
  3977                           ; 1 bytes @ 0x1
  3978                           
  3979                           
  3980                           ; 1 bytes @ 0x1
  3981  0021                     	ds	1
  3982  0022                     ??_PIN_MANAGER_Initialize:	
  3983  0022                     ??_IOCCF1_SetInterruptHandler:	
  3984                           ; 1 bytes @ 0x2
  3985                           
  3986  0022                     ??_SYSTEM_Initialize:	
  3987                           ; 1 bytes @ 0x2
  3988                           
  3989  0022                     _decodeGesture$1277:	
  3990                           ; 1 bytes @ 0x2
  3991                           
  3992  0022                     ___wmul@multiplicand:	
  3993                           ; 2 bytes @ 0x2
  3994                           
  3995                           
  3996                           ; 2 bytes @ 0x2
  3997  0022                     	ds	1
  3998  0023                     I2C_Write_Byte@Byte:	
  3999                           
  4000                           ; 1 bytes @ 0x3
  4001  0023                     	ds	1
  4002  0024                     ??___wmul:	
  4003  0024                     _decodeGesture$1278:	
  4004                           ; 1 bytes @ 0x4
  4005                           
  4006  0024                     I2C_Write_Byte@count:	
  4007                           ; 2 bytes @ 0x4
  4008                           
  4009  0024                     ___wmul@product:	
  4010                           ; 2 bytes @ 0x4
  4011                           
  4012                           
  4013                           ; 2 bytes @ 0x4
  4014  0024                     	ds	2
  4015  0026                     ??_wireReadDataByte:	
  4016  0026                     ?_wireWriteDataByte:	
  4017                           ; 1 bytes @ 0x6
  4018                           
  4019  0026                     ?_wireReadDataBlock:	
  4020                           ; 2 bytes @ 0x6
  4021                           
  4022  0026                     ?___awdiv:	
  4023                           ; 2 bytes @ 0x6
  4024                           
  4025  0026                     wireWriteDataByte@val:	
  4026                           ; 2 bytes @ 0x6
  4027                           
  4028  0026                     _decodeGesture$1279:	
  4029                           ; 1 bytes @ 0x6
  4030                           
  4031  0026                     wireReadDataBlock@val:	
  4032                           ; 2 bytes @ 0x6
  4033                           
  4034  0026                     ___awdiv@divisor:	
  4035                           ; 2 bytes @ 0x6
  4036                           
  4037                           
  4038                           ; 2 bytes @ 0x6
  4039  0026                     	ds	1
  4040  0027                     wireReadDataByte@reg:	
  4041                           
  4042                           ; 1 bytes @ 0x7
  4043  0027                     	ds	1
  4044  0028                     wireReadDataByte@val:	
  4045  0028                     _decodeGesture$1280:	
  4046                           ; 1 bytes @ 0x8
  4047                           
  4048  0028                     wireReadDataBlock@len:	
  4049                           ; 2 bytes @ 0x8
  4050                           
  4051  0028                     ___awdiv@dividend:	
  4052                           ; 2 bytes @ 0x8
  4053                           
  4054                           
  4055                           ; 2 bytes @ 0x8
  4056  0028                     	ds	1
  4057  0029                     ??_isGestureAvailable:	
  4058  0029                     ??_wireWriteDataByte:	
  4059                           ; 1 bytes @ 0x9
  4060                           
  4061  0029                     ??_getMode:	
  4062                           ; 1 bytes @ 0x9
  4063                           
  4064  0029                     wireWriteDataByte@reg:	
  4065                           ; 1 bytes @ 0x9
  4066                           
  4067                           
  4068                           ; 1 bytes @ 0x9
  4069  0029                     	ds	1
  4070  002A                     ??_setLEDDrive:	
  4071  002A                     ??_setProximityGain:	
  4072                           ; 1 bytes @ 0xA
  4073                           
  4074  002A                     ??_setAmbientLightGain:	
  4075                           ; 1 bytes @ 0xA
  4076                           
  4077  002A                     ??_setProxIntLowThresh:	
  4078                           ; 1 bytes @ 0xA
  4079                           
  4080  002A                     ??_setProxIntHighThresh:	
  4081                           ; 1 bytes @ 0xA
  4082                           
  4083  002A                     ?_setLightIntLowThreshold:	
  4084                           ; 1 bytes @ 0xA
  4085                           
  4086  002A                     ?_setLightIntHighThreshold:	
  4087                           ; 1 bytes @ 0xA
  4088                           
  4089  002A                     ??_setGestureEnterThresh:	
  4090                           ; 1 bytes @ 0xA
  4091                           
  4092  002A                     ??_setGestureExitThresh:	
  4093                           ; 1 bytes @ 0xA
  4094                           
  4095  002A                     ??_setGestureGain:	
  4096                           ; 1 bytes @ 0xA
  4097                           
  4098  002A                     ??_setGestureLEDDrive:	
  4099                           ; 1 bytes @ 0xA
  4100                           
  4101  002A                     ??_setGestureWaitTime:	
  4102                           ; 1 bytes @ 0xA
  4103                           
  4104  002A                     ??_setGestureIntEnable:	
  4105                           ; 1 bytes @ 0xA
  4106                           
  4107  002A                     ??_setLEDBoost:	
  4108                           ; 1 bytes @ 0xA
  4109                           
  4110  002A                     ??_setGestureMode:	
  4111                           ; 1 bytes @ 0xA
  4112                           
  4113  002A                     ??_wireReadDataBlock:	
  4114                           ; 1 bytes @ 0xA
  4115                           
  4116  002A                     ??___awdiv:	
  4117                           ; 1 bytes @ 0xA
  4118                           
  4119  002A                     getMode@enable_value:	
  4120                           ; 1 bytes @ 0xA
  4121                           
  4122  002A                     isGestureAvailable@val:	
  4123                           ; 1 bytes @ 0xA
  4124                           
  4125  002A                     setLightIntLowThreshold@threshold:	
  4126                           ; 1 bytes @ 0xA
  4127                           
  4128  002A                     setLightIntHighThreshold@threshold:	
  4129                           ; 2 bytes @ 0xA
  4130                           
  4131  002A                     _decodeGesture$1281:	
  4132                           ; 2 bytes @ 0xA
  4133                           
  4134                           
  4135                           ; 2 bytes @ 0xA
  4136  002A                     	ds	1
  4137  002B                     ?_setMode:	
  4138  002B                     setMode@enable:	
  4139                           ; 1 bytes @ 0xB
  4140                           
  4141  002B                     setAmbientLightGain@drive:	
  4142                           ; 1 bytes @ 0xB
  4143                           
  4144  002B                     setProxIntLowThresh@threshold:	
  4145                           ; 1 bytes @ 0xB
  4146                           
  4147  002B                     setProxIntHighThresh@threshold:	
  4148                           ; 1 bytes @ 0xB
  4149                           
  4150  002B                     setGestureEnterThresh@threshold:	
  4151                           ; 1 bytes @ 0xB
  4152                           
  4153  002B                     setGestureExitThresh@threshold:	
  4154                           ; 1 bytes @ 0xB
  4155                           
  4156  002B                     setGestureWaitTime@time:	
  4157                           ; 1 bytes @ 0xB
  4158                           
  4159  002B                     setGestureIntEnable@val:	
  4160                           ; 1 bytes @ 0xB
  4161                           
  4162  002B                     setGestureMode@mode:	
  4163                           ; 1 bytes @ 0xB
  4164                           
  4165  002B                     ___awdiv@counter:	
  4166                           ; 1 bytes @ 0xB
  4167                           
  4168                           
  4169                           ; 1 bytes @ 0xB
  4170  002B                     	ds	1
  4171  002C                     ??_setMode:	
  4172  002C                     ??_setLightIntLowThreshold:	
  4173                           ; 1 bytes @ 0xC
  4174                           
  4175  002C                     ??_setLightIntHighThreshold:	
  4176                           ; 1 bytes @ 0xC
  4177                           
  4178  002C                     setLEDDrive@val:	
  4179                           ; 1 bytes @ 0xC
  4180                           
  4181  002C                     setProximityGain@val:	
  4182                           ; 1 bytes @ 0xC
  4183                           
  4184  002C                     setAmbientLightGain@val:	
  4185                           ; 1 bytes @ 0xC
  4186                           
  4187  002C                     setGestureGain@val:	
  4188                           ; 1 bytes @ 0xC
  4189                           
  4190  002C                     setGestureLEDDrive@val:	
  4191                           ; 1 bytes @ 0xC
  4192                           
  4193  002C                     setGestureWaitTime@val:	
  4194                           ; 1 bytes @ 0xC
  4195                           
  4196  002C                     setGestureIntEnable@enable:	
  4197                           ; 1 bytes @ 0xC
  4198                           
  4199  002C                     setLEDBoost@val:	
  4200                           ; 1 bytes @ 0xC
  4201                           
  4202  002C                     setGestureMode@val:	
  4203                           ; 1 bytes @ 0xC
  4204                           
  4205  002C                     ___awdiv@sign:	
  4206                           ; 1 bytes @ 0xC
  4207                           
  4208  002C                     _decodeGesture$1282:	
  4209                           ; 1 bytes @ 0xC
  4210                           
  4211                           
  4212                           ; 2 bytes @ 0xC
  4213  002C                     	ds	1
  4214  002D                     setLEDDrive@drive:	
  4215  002D                     setProximityGain@drive:	
  4216                           ; 1 bytes @ 0xD
  4217                           
  4218  002D                     setLightIntLowThreshold@val_low:	
  4219                           ; 1 bytes @ 0xD
  4220                           
  4221  002D                     setLightIntHighThreshold@val_low:	
  4222                           ; 1 bytes @ 0xD
  4223                           
  4224  002D                     setGestureGain@gain:	
  4225                           ; 1 bytes @ 0xD
  4226                           
  4227  002D                     setGestureLEDDrive@drive:	
  4228                           ; 1 bytes @ 0xD
  4229                           
  4230  002D                     setLEDBoost@boost:	
  4231                           ; 1 bytes @ 0xD
  4232                           
  4233  002D                     ___awdiv@quotient:	
  4234                           ; 1 bytes @ 0xD
  4235                           
  4236                           
  4237                           ; 2 bytes @ 0xD
  4238  002D                     	ds	1
  4239  002E                     setMode@reg_val:	
  4240  002E                     setLightIntLowThreshold@val_high:	
  4241                           ; 1 bytes @ 0xE
  4242                           
  4243  002E                     setLightIntHighThreshold@val_high:	
  4244                           ; 1 bytes @ 0xE
  4245                           
  4246  002E                     _decodeGesture$1283:	
  4247                           ; 1 bytes @ 0xE
  4248                           
  4249                           
  4250                           ; 2 bytes @ 0xE
  4251  002E                     	ds	1
  4252  002F                     ??_processGestureData:	
  4253  002F                     setMode@mode:	
  4254                           ; 1 bytes @ 0xF
  4255                           
  4256  002F                     wireReadDataBlock@reg:	
  4257                           ; 1 bytes @ 0xF
  4258                           
  4259                           
  4260                           ; 1 bytes @ 0xF
  4261  002F                     	ds	1
  4262  0030                     ??_initialize:	
  4263  0030                     ??_enableGestureSensor:	
  4264                           ; 1 bytes @ 0x10
  4265                           
  4266  0030                     ??_enablePower:	
  4267                           ; 1 bytes @ 0x10
  4268                           
  4269  0030                     wireReadDataBlock@j:	
  4270                           ; 1 bytes @ 0x10
  4271                           
  4272  0030                     _decodeGesture$1284:	
  4273                           ; 1 bytes @ 0x10
  4274                           
  4275                           
  4276                           ; 2 bytes @ 0x10
  4277  0030                     	ds	1
  4278  0031                     initialize@id:	
  4279  0031                     enableGestureSensor@interrupts:	
  4280                           ; 1 bytes @ 0x11
  4281                           
  4282  0031                     processGestureData@ud_ratio_first:	
  4283                           ; 1 bytes @ 0x11
  4284                           
  4285                           
  4286                           ; 2 bytes @ 0x11
  4287  0031                     	ds	2
  4288  0033                     processGestureData@lr_ratio_first:	
  4289                           
  4290                           ; 2 bytes @ 0x13
  4291  0033                     	ds	2
  4292  0035                     processGestureData@ud_ratio_last:	
  4293                           
  4294                           ; 2 bytes @ 0x15
  4295  0035                     	ds	2
  4296  0037                     processGestureData@lr_ratio_last:	
  4297                           
  4298                           ; 2 bytes @ 0x17
  4299  0037                     	ds	2
  4300  0039                     _processGestureData$1272:	
  4301                           
  4302                           ; 2 bytes @ 0x19
  4303  0039                     	ds	2
  4304  003B                     _processGestureData$1273:	
  4305                           
  4306                           ; 2 bytes @ 0x1B
  4307  003B                     	ds	2
  4308  003D                     _processGestureData$1274:	
  4309                           
  4310                           ; 2 bytes @ 0x1D
  4311  003D                     	ds	2
  4312  003F                     _processGestureData$1275:	
  4313                           
  4314                           ; 2 bytes @ 0x1F
  4315  003F                     	ds	2
  4316  0041                     processGestureData@u_last:	
  4317                           
  4318                           ; 1 bytes @ 0x21
  4319  0041                     	ds	1
  4320  0042                     processGestureData@d_last:	
  4321                           
  4322                           ; 1 bytes @ 0x22
  4323  0042                     	ds	1
  4324  0043                     processGestureData@l_last:	
  4325                           
  4326                           ; 1 bytes @ 0x23
  4327  0043                     	ds	1
  4328  0044                     processGestureData@r_last:	
  4329                           
  4330                           ; 1 bytes @ 0x24
  4331  0044                     	ds	1
  4332  0045                     processGestureData@u_first:	
  4333                           
  4334                           ; 1 bytes @ 0x25
  4335  0045                     	ds	1
  4336  0046                     processGestureData@d_first:	
  4337                           
  4338                           ; 1 bytes @ 0x26
  4339  0046                     	ds	1
  4340  0047                     processGestureData@l_first:	
  4341                           
  4342                           ; 1 bytes @ 0x27
  4343  0047                     	ds	1
  4344  0048                     processGestureData@r_first:	
  4345                           
  4346                           ; 1 bytes @ 0x28
  4347  0048                     	ds	1
  4348  0049                     processGestureData@ud_delta:	
  4349                           
  4350                           ; 2 bytes @ 0x29
  4351  0049                     	ds	2
  4352  004B                     processGestureData@lr_delta:	
  4353                           
  4354                           ; 2 bytes @ 0x2B
  4355  004B                     	ds	2
  4356  004D                     processGestureData@i:	
  4357                           
  4358                           ; 2 bytes @ 0x2D
  4359  004D                     	ds	2
  4360  004F                     ?_readGesture:	
  4361                           
  4362                           ; 2 bytes @ 0x2F
  4363  004F                     	ds	2
  4364  0051                     ??_readGesture:	
  4365                           
  4366                           ; 1 bytes @ 0x31
  4367  0051                     	ds	2
  4368  0053                     readGesture@motion:	
  4369                           
  4370                           ; 2 bytes @ 0x33
  4371  0053                     	ds	2
  4372  0055                     readGesture@gstatus:	
  4373                           
  4374                           ; 1 bytes @ 0x35
  4375  0055                     	ds	1
  4376  0056                     readGesture@bytes_read:	
  4377                           
  4378                           ; 2 bytes @ 0x36
  4379  0056                     	ds	2
  4380  0058                     readGesture@fifo_level:	
  4381                           
  4382                           ; 1 bytes @ 0x38
  4383  0058                     	ds	1
  4384  0059                     readGesture@i:	
  4385                           
  4386                           ; 2 bytes @ 0x39
  4387  0059                     	ds	2
  4388  005B                     ??_handleGesture:	
  4389                           
  4390                           ; 1 bytes @ 0x3B
  4391  005B                     	ds	2
  4392  005D                     ??_main:	
  4393                           
  4394                           	psect	maintext
  4395  0CA6                     __pmaintext:	
  4396                           ; 1 bytes @ 0x3D
  4397 ;;
  4398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4399 ;;
  4400 ;; *************** function _main *****************
  4401 ;; Defined at:
  4402 ;;		line 60 in file "main.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  count           2    0        unsigned int 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : B1F/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;Total ram usage:        2 bytes
  4421 ;; Hardware stack levels required when called:   12
  4422 ;; This function calls:
  4423 ;;		_IOCCF1_SetInterruptHandler
  4424 ;;		_SYSTEM_Initialize
  4425 ;;		_enableGestureSensor
  4426 ;;		_handleGesture
  4427 ;;		_initialize
  4428 ;;		_isGestureAvailable
  4429 ;; This function is called by:
  4430 ;;		Startup code after reset
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _main
  4436  0CA6                     _main:	
  4437                           
  4438                           ;main.c: 63:     SYSTEM_Initialize();
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4442  0CA6  318B  2376  318C   	fcall	_SYSTEM_Initialize
  4443                           
  4444                           ;main.c: 69:     (INTCONbits.GIE = 1);
  4445  0CA9  178B               	bsf	11,7	;volatile
  4446                           
  4447                           ;main.c: 72:     (INTCONbits.PEIE = 1);
  4448  0CAA  170B               	bsf	11,6	;volatile
  4449                           
  4450                           ;main.c: 74:     IOCCF1_SetInterruptHandler(GestureInterruptHandler);
  4451  0CAB  3096               	movlw	low _GestureInterruptHandler
  4452  0CAC  0020               	movlb	0	; select bank0
  4453  0CAD  00A0               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  4454  0CAE  300A               	movlw	high _GestureInterruptHandler
  4455  0CAF  00A1               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  4456  0CB0  318B  230A  318C   	fcall	_IOCCF1_SetInterruptHandler
  4457                           
  4458                           ;main.c: 96:     if(initialize()){
  4459  0CB3  3184  24A7  318C   	fcall	_initialize
  4460  0CB6  3A00               	xorlw	0
  4461  0CB7  1903               	skipnz
  4462  0CB8  2CBB               	goto	l6135
  4463                           
  4464                           ;main.c: 97:        do { LATAbits.LATA2 = 1; } while(0);
  4465  0CB9  0022               	movlb	2	; select bank2
  4466  0CBA  150C               	bsf	12,2	;volatile
  4467  0CBB                     l6135:	
  4468                           
  4469                           ;main.c: 99:     if(enableGestureSensor(1)){
  4470  0CBB  3001               	movlw	1
  4471  0CBC  3186  26AD  318C   	fcall	_enableGestureSensor
  4472  0CBF                     l6137:	
  4473                           
  4474                           ;main.c: 105:     {;main.c: 110:         if(isGestureAvailable()){
  4475  0CBF  318B  239D  318C   	fcall	_isGestureAvailable
  4476  0CC2  3A00               	xorlw	0
  4477  0CC3  1903               	skipnz
  4478  0CC4  2CBF               	goto	l6137
  4479                           
  4480                           ;main.c: 111:             do { LATCbits.LATC5 = 1; } while(0);
  4481  0CC5  0022               	movlb	2	; select bank2
  4482  0CC6  168E               	bsf	14,5	;volatile
  4483                           
  4484                           ;main.c: 112:             handleGesture();
  4485  0CC7  318E  26FC  318C   	fcall	_handleGesture
  4486  0CCA  2CBF               	goto	l6137
  4487  0CCB                     __end_of_main:	
  4488                           
  4489                           	psect	text1
  4490  04A7                     __ptext1:	
  4491 ;; *************** function _initialize *****************
  4492 ;; Defined at:
  4493 ;;		line 19 in file "APDS9960.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  id              1   17[BANK0 ] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      _Bool 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;Total ram usage:        2 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:   10
  4514 ;; This function calls:
  4515 ;;		_i2c1_driver_open
  4516 ;;		_setAmbientLightGain
  4517 ;;		_setGestureEnterThresh
  4518 ;;		_setGestureExitThresh
  4519 ;;		_setGestureGain
  4520 ;;		_setGestureIntEnable
  4521 ;;		_setGestureLEDDrive
  4522 ;;		_setGestureWaitTime
  4523 ;;		_setLEDDrive
  4524 ;;		_setLightIntHighThreshold
  4525 ;;		_setLightIntLowThreshold
  4526 ;;		_setMode
  4527 ;;		_setProxIntHighThresh
  4528 ;;		_setProxIntLowThresh
  4529 ;;		_setProximityGain
  4530 ;;		_wireReadDataByte
  4531 ;;		_wireWriteDataByte
  4532 ;; This function is called by:
  4533 ;;		_main
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function _initialize
  4539  04A7                     _initialize:	
  4540                           
  4541                           ;APDS9960.c: 24:     i2c1_driver_open();
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  4545  04A7  318B  2361  3184   	fcall	_i2c1_driver_open
  4546                           
  4547                           ;APDS9960.c: 30:     id = wireReadDataByte(0x92);
  4548  04AA  3092               	movlw	146
  4549  04AB  318C  2482  3184   	fcall	_wireReadDataByte
  4550  04AE  0020               	movlb	0	; select bank0
  4551  04AF  00B0               	movwf	??_initialize
  4552  04B0  0830               	movf	??_initialize,w
  4553  04B1  00B1               	movwf	initialize@id
  4554                           
  4555                           ;APDS9960.c: 32:     if( !(id == 0xAB ||id == 0x9C ) )
  4556  04B2  30AB               	movlw	171
  4557  04B3  0631               	xorwf	initialize@id,w
  4558  04B4  1903               	btfsc	3,2
  4559  04B5  2CBC               	goto	l5863
  4560  04B6  309C               	movlw	156
  4561  04B7  0631               	xorwf	initialize@id,w
  4562  04B8  1903               	btfsc	3,2
  4563  04B9  2CBC               	goto	l5863
  4564  04BA                     l5859:	
  4565                           
  4566                           ;APDS9960.c: 33:     {;APDS9960.c: 34:      return 0;
  4567  04BA  3000               	movlw	0
  4568  04BB  0008               	return
  4569  04BC                     l5863:	
  4570                           
  4571                           ;APDS9960.c: 38:     setMode(7, 0);
  4572  04BC  01AB               	clrf	setMode@enable
  4573  04BD  3007               	movlw	7
  4574  04BE  3187  2763  3184   	fcall	_setMode
  4575                           
  4576                           ;APDS9960.c: 40:     wireWriteDataByte(0x81, 219);
  4577  04C1  30DB               	movlw	219
  4578  04C2  0020               	movlb	0	; select bank0
  4579  04C3  00B0               	movwf	??_initialize
  4580  04C4  0830               	movf	??_initialize,w
  4581  04C5  00A6               	movwf	wireWriteDataByte@val
  4582  04C6  3081               	movlw	129
  4583  04C7  318C  2411  3184   	fcall	_wireWriteDataByte
  4584                           
  4585                           ;APDS9960.c: 41:     wireWriteDataByte(0x83, 246);
  4586  04CA  30F6               	movlw	246
  4587  04CB  0020               	movlb	0	; select bank0
  4588  04CC  00B0               	movwf	??_initialize
  4589  04CD  0830               	movf	??_initialize,w
  4590  04CE  00A6               	movwf	wireWriteDataByte@val
  4591  04CF  3083               	movlw	131
  4592  04D0  318C  2411  3184   	fcall	_wireWriteDataByte
  4593                           
  4594                           ;APDS9960.c: 42:     wireWriteDataByte(0x8E, 0x87);
  4595  04D3  3087               	movlw	135
  4596  04D4  0020               	movlb	0	; select bank0
  4597  04D5  00B0               	movwf	??_initialize
  4598  04D6  0830               	movf	??_initialize,w
  4599  04D7  00A6               	movwf	wireWriteDataByte@val
  4600  04D8  308E               	movlw	142
  4601  04D9  318C  2411  3184   	fcall	_wireWriteDataByte
  4602                           
  4603                           ;APDS9960.c: 43:     wireWriteDataByte(0x9D, 0) ;
  4604  04DC  0020               	movlb	0	; select bank0
  4605  04DD  01A6               	clrf	wireWriteDataByte@val
  4606  04DE  309D               	movlw	157
  4607  04DF  318C  2411  3184   	fcall	_wireWriteDataByte
  4608                           
  4609                           ;APDS9960.c: 44:     wireWriteDataByte(0x9E, 0) ;
  4610  04E2  0020               	movlb	0	; select bank0
  4611  04E3  01A6               	clrf	wireWriteDataByte@val
  4612  04E4  309E               	movlw	158
  4613  04E5  318C  2411  3184   	fcall	_wireWriteDataByte
  4614                           
  4615                           ;APDS9960.c: 45:     wireWriteDataByte(0x8D, 0x60) ;
  4616  04E8  3060               	movlw	96
  4617  04E9  0020               	movlb	0	; select bank0
  4618  04EA  00B0               	movwf	??_initialize
  4619  04EB  0830               	movf	??_initialize,w
  4620  04EC  00A6               	movwf	wireWriteDataByte@val
  4621  04ED  308D               	movlw	141
  4622  04EE  318C  2411  3184   	fcall	_wireWriteDataByte
  4623                           
  4624                           ;APDS9960.c: 46:     setLEDDrive(0);
  4625  04F1  3000               	movlw	0
  4626  04F2  318D  258D  3184   	fcall	_setLEDDrive
  4627                           
  4628                           ;APDS9960.c: 47:     setProximityGain(2);
  4629  04F5  3002               	movlw	2
  4630  04F6  318D  25B6  3184   	fcall	_setProximityGain
  4631                           
  4632                           ;APDS9960.c: 48:     setAmbientLightGain(1);
  4633  04F9  3001               	movlw	1
  4634  04FA  318C  2464  3184   	fcall	_setAmbientLightGain
  4635                           
  4636                           ;APDS9960.c: 50:     if( !setProxIntLowThresh(0) ) {
  4637  04FD  3000               	movlw	0
  4638  04FE  318B  23E9  3184   	fcall	_setProxIntLowThresh
  4639  0501  3A00               	xorlw	0
  4640  0502  1903               	btfsc	3,2
  4641  0503  2CBA               	goto	l5859
  4642                           
  4643                           ;APDS9960.c: 53:     if( !setProxIntHighThresh(50) ) {
  4644  0504  3032               	movlw	50
  4645  0505  318B  23D6  3184   	fcall	_setProxIntHighThresh
  4646  0508  3A00               	xorlw	0
  4647  0509  1903               	btfsc	3,2
  4648  050A  2CBA               	goto	l5859
  4649                           
  4650                           ;APDS9960.c: 58:     if( !setLightIntLowThreshold(0xFFFF) ) {
  4651  050B  30FF               	movlw	255
  4652  050C  0020               	movlb	0	; select bank0
  4653  050D  00AA               	movwf	setLightIntLowThreshold@threshold
  4654  050E  30FF               	movlw	255
  4655  050F  00AB               	movwf	setLightIntLowThreshold@threshold+1
  4656  0510  318D  2566  3184   	fcall	_setLightIntLowThreshold
  4657  0513  3A00               	xorlw	0
  4658  0514  1903               	btfsc	3,2
  4659  0515  2CBA               	goto	l5859
  4660                           
  4661                           ;APDS9960.c: 61:     if( !setLightIntHighThreshold(0) ) {
  4662  0516  3000               	movlw	0
  4663  0517  0020               	movlb	0	; select bank0
  4664  0518  00AA               	movwf	setLightIntHighThreshold@threshold
  4665  0519  00AB               	movwf	setLightIntHighThreshold@threshold+1
  4666  051A  318D  253F  3184   	fcall	_setLightIntHighThreshold
  4667  051D  3A00               	xorlw	0
  4668  051E  1903               	btfsc	3,2
  4669  051F  2CBA               	goto	l5859
  4670                           
  4671                           ;APDS9960.c: 65:     if( !wireWriteDataByte(0x8C, 0x11) ) {
  4672  0520  3011               	movlw	17
  4673  0521  0020               	movlb	0	; select bank0
  4674  0522  00B0               	movwf	??_initialize
  4675  0523  0830               	movf	??_initialize,w
  4676  0524  00A6               	movwf	wireWriteDataByte@val
  4677  0525  308C               	movlw	140
  4678  0526  318C  2411  3184   	fcall	_wireWriteDataByte
  4679  0529  0020               	movlb	0	; select bank0
  4680  052A  0826               	movf	?_wireWriteDataByte,w
  4681  052B  0427               	iorwf	?_wireWriteDataByte+1,w
  4682  052C  1903               	btfsc	3,2
  4683  052D  2CBA               	goto	l5859
  4684                           
  4685                           ;APDS9960.c: 70:     if( !wireWriteDataByte(0x90, 0x01) ) {
  4686  052E  01A6               	clrf	wireWriteDataByte@val
  4687  052F  0AA6               	incf	wireWriteDataByte@val,f
  4688  0530  3090               	movlw	144
  4689  0531  318C  2411  3184   	fcall	_wireWriteDataByte
  4690  0534  0020               	movlb	0	; select bank0
  4691  0535  0826               	movf	?_wireWriteDataByte,w
  4692  0536  0427               	iorwf	?_wireWriteDataByte+1,w
  4693  0537  1903               	btfsc	3,2
  4694  0538  2CBA               	goto	l5859
  4695                           
  4696                           ;APDS9960.c: 73:     if( !wireWriteDataByte(0x9F, 0) ) {
  4697  0539  01A6               	clrf	wireWriteDataByte@val
  4698  053A  309F               	movlw	159
  4699  053B  318C  2411  3184   	fcall	_wireWriteDataByte
  4700  053E  0020               	movlb	0	; select bank0
  4701  053F  0826               	movf	?_wireWriteDataByte,w
  4702  0540  0427               	iorwf	?_wireWriteDataByte+1,w
  4703  0541  1903               	btfsc	3,2
  4704  0542  2CBA               	goto	l5859
  4705                           
  4706                           ;APDS9960.c: 77:     if( !setGestureEnterThresh(40) ) {
  4707  0543  3028               	movlw	40
  4708  0544  318B  23B0  3184   	fcall	_setGestureEnterThresh
  4709  0547  3A00               	xorlw	0
  4710  0548  1903               	btfsc	3,2
  4711  0549  2CBA               	goto	l5859
  4712                           
  4713                           ;APDS9960.c: 81:     if( !setGestureExitThresh(30) ) {
  4714  054A  301E               	movlw	30
  4715  054B  318B  23C3  3184   	fcall	_setGestureExitThresh
  4716  054E  3A00               	xorlw	0
  4717  054F  1903               	btfsc	3,2
  4718  0550  2CBA               	goto	l5859
  4719                           
  4720                           ;APDS9960.c: 84:     if( !wireWriteDataByte(0xA2, 0x40) ) {
  4721  0551  3040               	movlw	64
  4722  0552  0020               	movlb	0	; select bank0
  4723  0553  00B0               	movwf	??_initialize
  4724  0554  0830               	movf	??_initialize,w
  4725  0555  00A6               	movwf	wireWriteDataByte@val
  4726  0556  30A2               	movlw	162
  4727  0557  318C  2411  3184   	fcall	_wireWriteDataByte
  4728  055A  0020               	movlb	0	; select bank0
  4729  055B  0826               	movf	?_wireWriteDataByte,w
  4730  055C  0427               	iorwf	?_wireWriteDataByte+1,w
  4731  055D  1903               	btfsc	3,2
  4732  055E  2CBA               	goto	l5859
  4733                           
  4734                           ;APDS9960.c: 87:     if( !setGestureGain(2) ) {
  4735  055F  3002               	movlw	2
  4736  0560  318E  2698  3184   	fcall	_setGestureGain
  4737  0563  3A00               	xorlw	0
  4738  0564  1903               	btfsc	3,2
  4739  0565  2CBA               	goto	l5859
  4740                           
  4741                           ;APDS9960.c: 90:     if( !setGestureLEDDrive(0) ) {
  4742  0566  3000               	movlw	0
  4743  0567  318E  26CA  3184   	fcall	_setGestureLEDDrive
  4744  056A  3A00               	xorlw	0
  4745  056B  1903               	btfsc	3,2
  4746  056C  2CBA               	goto	l5859
  4747                           
  4748                           ;APDS9960.c: 94:     if( !setGestureWaitTime(1) ) {
  4749  056D  3001               	movlw	1
  4750  056E  318D  2518  3184   	fcall	_setGestureWaitTime
  4751  0571  3A00               	xorlw	0
  4752  0572  1903               	btfsc	3,2
  4753  0573  2CBA               	goto	l5859
  4754                           
  4755                           ;APDS9960.c: 97:     if( !wireWriteDataByte(0xA4, 0) ) {
  4756  0574  0020               	movlb	0	; select bank0
  4757  0575  01A6               	clrf	wireWriteDataByte@val
  4758  0576  30A4               	movlw	164
  4759  0577  318C  2411  3184   	fcall	_wireWriteDataByte
  4760  057A  0020               	movlb	0	; select bank0
  4761  057B  0826               	movf	?_wireWriteDataByte,w
  4762  057C  0427               	iorwf	?_wireWriteDataByte+1,w
  4763  057D  1903               	btfsc	3,2
  4764  057E  2CBA               	goto	l5859
  4765                           
  4766                           ;APDS9960.c: 100:     if( !wireWriteDataByte(0xA5, 0) ) {
  4767  057F  01A6               	clrf	wireWriteDataByte@val
  4768  0580  30A5               	movlw	165
  4769  0581  318C  2411  3184   	fcall	_wireWriteDataByte
  4770  0584  0020               	movlb	0	; select bank0
  4771  0585  0826               	movf	?_wireWriteDataByte,w
  4772  0586  0427               	iorwf	?_wireWriteDataByte+1,w
  4773  0587  1903               	btfsc	3,2
  4774  0588  2CBA               	goto	l5859
  4775                           
  4776                           ;APDS9960.c: 103:     if( !wireWriteDataByte(0xA7, 0) ) {
  4777  0589  01A6               	clrf	wireWriteDataByte@val
  4778  058A  30A7               	movlw	167
  4779  058B  318C  2411  3184   	fcall	_wireWriteDataByte
  4780  058E  0020               	movlb	0	; select bank0
  4781  058F  0826               	movf	?_wireWriteDataByte,w
  4782  0590  0427               	iorwf	?_wireWriteDataByte+1,w
  4783  0591  1903               	btfsc	3,2
  4784  0592  2CBA               	goto	l5859
  4785                           
  4786                           ;APDS9960.c: 106:     if( !wireWriteDataByte(0xA9, 0) ) {
  4787  0593  01A6               	clrf	wireWriteDataByte@val
  4788  0594  30A9               	movlw	169
  4789  0595  318C  2411  3184   	fcall	_wireWriteDataByte
  4790  0598  0020               	movlb	0	; select bank0
  4791  0599  0826               	movf	?_wireWriteDataByte,w
  4792  059A  0427               	iorwf	?_wireWriteDataByte+1,w
  4793  059B  1903               	btfsc	3,2
  4794  059C  2CBA               	goto	l5859
  4795                           
  4796                           ;APDS9960.c: 109:     if( !wireWriteDataByte(0xA6, 0xC9) ) {
  4797  059D  30C9               	movlw	201
  4798  059E  00B0               	movwf	??_initialize
  4799  059F  0830               	movf	??_initialize,w
  4800  05A0  00A6               	movwf	wireWriteDataByte@val
  4801  05A1  30A6               	movlw	166
  4802  05A2  318C  2411  3184   	fcall	_wireWriteDataByte
  4803  05A5  0020               	movlb	0	; select bank0
  4804  05A6  0826               	movf	?_wireWriteDataByte,w
  4805  05A7  0427               	iorwf	?_wireWriteDataByte+1,w
  4806  05A8  1903               	btfsc	3,2
  4807  05A9  2CBA               	goto	l5859
  4808                           
  4809                           ;APDS9960.c: 112:     if( !wireWriteDataByte(0xAA, 0) ) {
  4810  05AA  01A6               	clrf	wireWriteDataByte@val
  4811  05AB  30AA               	movlw	170
  4812  05AC  318C  2411  3184   	fcall	_wireWriteDataByte
  4813  05AF  0020               	movlb	0	; select bank0
  4814  05B0  0826               	movf	?_wireWriteDataByte,w
  4815  05B1  0427               	iorwf	?_wireWriteDataByte+1,w
  4816  05B2  1903               	btfsc	3,2
  4817  05B3  2CBA               	goto	l5859
  4818                           
  4819                           ;APDS9960.c: 115:     if( !setGestureIntEnable(0) ) {
  4820  05B4  3000               	movlw	0
  4821  05B5  318E  260A  3184   	fcall	_setGestureIntEnable
  4822  05B8  3A00               	xorlw	0
  4823  05B9  1903               	btfsc	3,2
  4824  05BA  2CBA               	goto	l5859
  4825                           
  4826                           ;APDS9960.c: 119:     return 1;
  4827  05BB  3001               	movlw	1
  4828  05BC  0008               	return
  4829  05BD                     __end_of_initialize:	
  4830                           
  4831                           	psect	text2
  4832  0DB6                     __ptext2:	
  4833 ;; *************** function _setProximityGain *****************
  4834 ;; Defined at:
  4835 ;;		line 191 in file "APDS9960.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  drive           1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  drive           1   13[BANK0 ] unsigned char 
  4840 ;;  val             1   12[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      _Bool 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;Total ram usage:        4 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    8
  4857 ;; This function calls:
  4858 ;;		_wireReadDataByte
  4859 ;;		_wireWriteDataByte
  4860 ;; This function is called by:
  4861 ;;		_initialize
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _setProximityGain
  4867  0DB6                     _setProximityGain:	
  4868                           
  4869                           ;incstack = 0
  4870                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  4871                           ;setProximityGain@drive stored from wreg
  4872  0DB6  0020               	movlb	0	; select bank0
  4873  0DB7  00AD               	movwf	setProximityGain@drive
  4874                           
  4875                           ;APDS9960.c: 191: _Bool setProximityGain(uint8_t drive);APDS9960.c: 192: {;APDS9960.c: 1
      +                          93:     uint8_t val;;APDS9960.c: 196:     val=wireReadDataByte(0x8F);
  4876  0DB8  308F               	movlw	143
  4877  0DB9  318C  2482  318D   	fcall	_wireReadDataByte
  4878  0DBC  0020               	movlb	0	; select bank0
  4879  0DBD  00AA               	movwf	??_setProximityGain
  4880  0DBE  082A               	movf	??_setProximityGain,w
  4881  0DBF  00AC               	movwf	setProximityGain@val
  4882                           
  4883                           ;APDS9960.c: 198:     drive &= 0b00000011;
  4884  0DC0  3003               	movlw	3
  4885  0DC1  00AA               	movwf	??_setProximityGain
  4886  0DC2  082A               	movf	??_setProximityGain,w
  4887  0DC3  05AD               	andwf	setProximityGain@drive,f
  4888                           
  4889                           ;APDS9960.c: 199:     drive = drive << 2;
  4890  0DC4  082D               	movf	setProximityGain@drive,w
  4891  0DC5  00AA               	movwf	??_setProximityGain
  4892  0DC6  3001               	movlw	1
  4893  0DC7                     u4945:	
  4894  0DC7  35AA               	lslf	??_setProximityGain,f
  4895  0DC8  3EFF               	addlw	-1
  4896  0DC9  1D03               	skipz
  4897  0DCA  2DC7               	goto	u4945
  4898  0DCB  352A               	lslf	??_setProximityGain,w
  4899  0DCC  00AB               	movwf	??_setProximityGain+1
  4900  0DCD  082B               	movf	??_setProximityGain+1,w
  4901  0DCE  00AD               	movwf	setProximityGain@drive
  4902                           
  4903                           ;APDS9960.c: 200:     val &= 0b11110011;
  4904  0DCF  30F3               	movlw	243
  4905  0DD0  00AA               	movwf	??_setProximityGain
  4906  0DD1  082A               	movf	??_setProximityGain,w
  4907  0DD2  05AC               	andwf	setProximityGain@val,f
  4908                           
  4909                           ;APDS9960.c: 201:     val |= drive;
  4910  0DD3  082D               	movf	setProximityGain@drive,w
  4911  0DD4  00AA               	movwf	??_setProximityGain
  4912  0DD5  082A               	movf	??_setProximityGain,w
  4913  0DD6  04AC               	iorwf	setProximityGain@val,f
  4914                           
  4915                           ;APDS9960.c: 204:     if( !wireWriteDataByte(0x8F, val) ) {
  4916  0DD7  082C               	movf	setProximityGain@val,w
  4917  0DD8  00AA               	movwf	??_setProximityGain
  4918  0DD9  082A               	movf	??_setProximityGain,w
  4919  0DDA  00A6               	movwf	wireWriteDataByte@val
  4920  0DDB  308F               	movlw	143
  4921  0DDC  318C  2411         	fcall	_wireWriteDataByte
  4922  0DDE  0008               	return
  4923  0DDF                     __end_of_setProximityGain:	
  4924                           
  4925                           	psect	text3
  4926  0BE9                     __ptext3:	
  4927 ;; *************** function _setProxIntLowThresh *****************
  4928 ;; Defined at:
  4929 ;;		line 233 in file "APDS9960.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  threshold       1    wreg     unsigned char 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  threshold       1   11[BANK0 ] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      _Bool 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0, pclath, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:        2 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    8
  4950 ;; This function calls:
  4951 ;;		_wireWriteDataByte
  4952 ;; This function is called by:
  4953 ;;		_initialize
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function _setProxIntLowThresh
  4959  0BE9                     _setProxIntLowThresh:	
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  4963                           ;setProxIntLowThresh@threshold stored from wreg
  4964  0BE9  0020               	movlb	0	; select bank0
  4965  0BEA  00AB               	movwf	setProxIntLowThresh@threshold
  4966                           
  4967                           ;APDS9960.c: 233: _Bool setProxIntLowThresh(uint8_t threshold);APDS9960.c: 234: {;APDS99
      +                          60.c: 235:     if( !wireWriteDataByte(0x89, threshold) ) {
  4968  0BEB  082B               	movf	setProxIntLowThresh@threshold,w
  4969  0BEC  00AA               	movwf	??_setProxIntLowThresh
  4970  0BED  082A               	movf	??_setProxIntLowThresh,w
  4971  0BEE  00A6               	movwf	wireWriteDataByte@val
  4972  0BEF  3089               	movlw	137
  4973  0BF0  318C  2411  318B   	fcall	_wireWriteDataByte
  4974  0BF3  0020               	movlb	0	; select bank0
  4975  0BF4  0826               	movf	?_wireWriteDataByte,w
  4976  0BF5  0427               	iorwf	?_wireWriteDataByte+1,w
  4977  0BF6  1D03               	btfss	3,2
  4978  0BF7  2BFA               	goto	l5629
  4979                           
  4980                           ;APDS9960.c: 236:         return 0;
  4981  0BF8  3000               	movlw	0
  4982  0BF9  0008               	return
  4983  0BFA                     l5629:	
  4984                           
  4985                           ;APDS9960.c: 239:     return 1;
  4986  0BFA  3001               	movlw	1
  4987  0BFB  0008               	return
  4988  0BFC                     __end_of_setProxIntLowThresh:	
  4989                           
  4990                           	psect	text4
  4991  0BD6                     __ptext4:	
  4992 ;; *************** function _setProxIntHighThresh *****************
  4993 ;; Defined at:
  4994 ;;		line 243 in file "APDS9960.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  threshold       1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  threshold       1   11[BANK0 ] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      _Bool 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0, pclath, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;Total ram usage:        2 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    8
  5015 ;; This function calls:
  5016 ;;		_wireWriteDataByte
  5017 ;; This function is called by:
  5018 ;;		_initialize
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function _setProxIntHighThresh
  5024  0BD6                     _setProxIntHighThresh:	
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  5028                           ;setProxIntHighThresh@threshold stored from wreg
  5029  0BD6  0020               	movlb	0	; select bank0
  5030  0BD7  00AB               	movwf	setProxIntHighThresh@threshold
  5031                           
  5032                           ;APDS9960.c: 243: _Bool setProxIntHighThresh(uint8_t threshold);APDS9960.c: 244: {;APDS9
      +                          960.c: 245:     if( !wireWriteDataByte(0x8B, threshold) ) {
  5033  0BD8  082B               	movf	setProxIntHighThresh@threshold,w
  5034  0BD9  00AA               	movwf	??_setProxIntHighThresh
  5035  0BDA  082A               	movf	??_setProxIntHighThresh,w
  5036  0BDB  00A6               	movwf	wireWriteDataByte@val
  5037  0BDC  308B               	movlw	139
  5038  0BDD  318C  2411  318B   	fcall	_wireWriteDataByte
  5039  0BE0  0020               	movlb	0	; select bank0
  5040  0BE1  0826               	movf	?_wireWriteDataByte,w
  5041  0BE2  0427               	iorwf	?_wireWriteDataByte+1,w
  5042  0BE3  1D03               	btfss	3,2
  5043  0BE4  2BE7               	goto	l5639
  5044                           
  5045                           ;APDS9960.c: 246:         return 0;
  5046  0BE5  3000               	movlw	0
  5047  0BE6  0008               	return
  5048  0BE7                     l5639:	
  5049                           
  5050                           ;APDS9960.c: 249:     return 1;
  5051  0BE7  3001               	movlw	1
  5052  0BE8  0008               	return
  5053  0BE9                     __end_of_setProxIntHighThresh:	
  5054                           
  5055                           	psect	text5
  5056  0D66                     __ptext5:	
  5057 ;; *************** function _setLightIntLowThreshold *****************
  5058 ;; Defined at:
  5059 ;;		line 253 in file "APDS9960.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  threshold       2   10[BANK0 ] unsigned short 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  val_high        1   14[BANK0 ] unsigned char 
  5064 ;;  val_low         1   13[BANK0 ] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      _Bool 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;Total ram usage:        5 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    8
  5081 ;; This function calls:
  5082 ;;		_wireWriteDataByte
  5083 ;; This function is called by:
  5084 ;;		_initialize
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           
  5089                           ;psect for function _setLightIntLowThreshold
  5090  0D66                     _setLightIntLowThreshold:	
  5091                           
  5092                           ;APDS9960.c: 253: _Bool setLightIntLowThreshold(uint16_t threshold);APDS9960.c: 254: {;A
      +                          PDS9960.c: 255:     uint8_t val_low;;APDS9960.c: 256:     uint8_t val_high;;APDS9960.c: 
      +                          259:     val_low = threshold & 0x00FF;
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  5096  0D66  0020               	movlb	0	; select bank0
  5097  0D67  082A               	movf	setLightIntLowThreshold@threshold,w
  5098  0D68  00AC               	movwf	??_setLightIntLowThreshold
  5099  0D69  082C               	movf	??_setLightIntLowThreshold,w
  5100  0D6A  00AD               	movwf	setLightIntLowThreshold@val_low
  5101                           
  5102                           ;APDS9960.c: 260:     val_high = (threshold & 0xFF00) >> 8;
  5103  0D6B  082B               	movf	setLightIntLowThreshold@threshold+1,w
  5104  0D6C  00AC               	movwf	??_setLightIntLowThreshold
  5105  0D6D  082C               	movf	??_setLightIntLowThreshold,w
  5106  0D6E  00AE               	movwf	setLightIntLowThreshold@val_high
  5107                           
  5108                           ;APDS9960.c: 263:     if( !wireWriteDataByte(0x84, val_low) ) {
  5109  0D6F  082D               	movf	setLightIntLowThreshold@val_low,w
  5110  0D70  00AC               	movwf	??_setLightIntLowThreshold
  5111  0D71  082C               	movf	??_setLightIntLowThreshold,w
  5112  0D72  00A6               	movwf	wireWriteDataByte@val
  5113  0D73  3084               	movlw	132
  5114  0D74  318C  2411  318D   	fcall	_wireWriteDataByte
  5115  0D77  0020               	movlb	0	; select bank0
  5116  0D78  0826               	movf	?_wireWriteDataByte,w
  5117  0D79  0427               	iorwf	?_wireWriteDataByte+1,w
  5118  0D7A  1D03               	btfss	3,2
  5119  0D7B  2D7E               	goto	l5653
  5120  0D7C                     l5649:	
  5121                           
  5122                           ;APDS9960.c: 264:         return 0;
  5123  0D7C  3000               	movlw	0
  5124  0D7D  0008               	return
  5125  0D7E                     l5653:	
  5126                           
  5127                           ;APDS9960.c: 268:     if( !wireWriteDataByte(0x85, val_high) ) {
  5128  0D7E  082E               	movf	setLightIntLowThreshold@val_high,w
  5129  0D7F  00AC               	movwf	??_setLightIntLowThreshold
  5130  0D80  082C               	movf	??_setLightIntLowThreshold,w
  5131  0D81  00A6               	movwf	wireWriteDataByte@val
  5132  0D82  3085               	movlw	133
  5133  0D83  318C  2411  318D   	fcall	_wireWriteDataByte
  5134  0D86  0020               	movlb	0	; select bank0
  5135  0D87  0826               	movf	?_wireWriteDataByte,w
  5136  0D88  0427               	iorwf	?_wireWriteDataByte+1,w
  5137  0D89  1903               	btfsc	3,2
  5138  0D8A  2D7C               	goto	l5649
  5139                           
  5140                           ;APDS9960.c: 272:     return 1;
  5141  0D8B  3001               	movlw	1
  5142  0D8C  0008               	return
  5143  0D8D                     __end_of_setLightIntLowThreshold:	
  5144                           
  5145                           	psect	text6
  5146  0D3F                     __ptext6:	
  5147 ;; *************** function _setLightIntHighThreshold *****************
  5148 ;; Defined at:
  5149 ;;		line 276 in file "APDS9960.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  threshold       2   10[BANK0 ] unsigned short 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  val_high        1   14[BANK0 ] unsigned char 
  5154 ;;  val_low         1   13[BANK0 ] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      _Bool 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;Total ram usage:        5 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    8
  5171 ;; This function calls:
  5172 ;;		_wireWriteDataByte
  5173 ;; This function is called by:
  5174 ;;		_initialize
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _setLightIntHighThreshold
  5180  0D3F                     _setLightIntHighThreshold:	
  5181                           
  5182                           ;APDS9960.c: 276: _Bool setLightIntHighThreshold(uint16_t threshold);APDS9960.c: 277: {;
      +                          APDS9960.c: 278:     uint8_t val_low;;APDS9960.c: 279:     uint8_t val_high;;APDS9960.c:
      +                           282:     val_low = threshold & 0x00FF;
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  5186  0D3F  0020               	movlb	0	; select bank0
  5187  0D40  082A               	movf	setLightIntHighThreshold@threshold,w
  5188  0D41  00AC               	movwf	??_setLightIntHighThreshold
  5189  0D42  082C               	movf	??_setLightIntHighThreshold,w
  5190  0D43  00AD               	movwf	setLightIntHighThreshold@val_low
  5191                           
  5192                           ;APDS9960.c: 283:     val_high = (threshold & 0xFF00) >> 8;
  5193  0D44  082B               	movf	setLightIntHighThreshold@threshold+1,w
  5194  0D45  00AC               	movwf	??_setLightIntHighThreshold
  5195  0D46  082C               	movf	??_setLightIntHighThreshold,w
  5196  0D47  00AE               	movwf	setLightIntHighThreshold@val_high
  5197                           
  5198                           ;APDS9960.c: 286:     if( !wireWriteDataByte(0x86, val_low) ) {
  5199  0D48  082D               	movf	setLightIntHighThreshold@val_low,w
  5200  0D49  00AC               	movwf	??_setLightIntHighThreshold
  5201  0D4A  082C               	movf	??_setLightIntHighThreshold,w
  5202  0D4B  00A6               	movwf	wireWriteDataByte@val
  5203  0D4C  3086               	movlw	134
  5204  0D4D  318C  2411  318D   	fcall	_wireWriteDataByte
  5205  0D50  0020               	movlb	0	; select bank0
  5206  0D51  0826               	movf	?_wireWriteDataByte,w
  5207  0D52  0427               	iorwf	?_wireWriteDataByte+1,w
  5208  0D53  1D03               	btfss	3,2
  5209  0D54  2D57               	goto	l5673
  5210  0D55                     l5669:	
  5211                           
  5212                           ;APDS9960.c: 287:         return 0;
  5213  0D55  3000               	movlw	0
  5214  0D56  0008               	return
  5215  0D57                     l5673:	
  5216                           
  5217                           ;APDS9960.c: 291:     if( !wireWriteDataByte(0x87, val_high) ) {
  5218  0D57  082E               	movf	setLightIntHighThreshold@val_high,w
  5219  0D58  00AC               	movwf	??_setLightIntHighThreshold
  5220  0D59  082C               	movf	??_setLightIntHighThreshold,w
  5221  0D5A  00A6               	movwf	wireWriteDataByte@val
  5222  0D5B  3087               	movlw	135
  5223  0D5C  318C  2411  318D   	fcall	_wireWriteDataByte
  5224  0D5F  0020               	movlb	0	; select bank0
  5225  0D60  0826               	movf	?_wireWriteDataByte,w
  5226  0D61  0427               	iorwf	?_wireWriteDataByte+1,w
  5227  0D62  1903               	btfsc	3,2
  5228  0D63  2D55               	goto	l5669
  5229                           
  5230                           ;APDS9960.c: 295:     return 1;
  5231  0D64  3001               	movlw	1
  5232  0D65  0008               	return
  5233  0D66                     __end_of_setLightIntHighThreshold:	
  5234                           
  5235                           	psect	text7
  5236  0D8D                     __ptext7:	
  5237 ;; *************** function _setLEDDrive *****************
  5238 ;; Defined at:
  5239 ;;		line 169 in file "APDS9960.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  drive           1    wreg     unsigned char 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  drive           1   13[BANK0 ] unsigned char 
  5244 ;;  val             1   12[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      _Bool 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;Total ram usage:        4 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    8
  5261 ;; This function calls:
  5262 ;;		_wireReadDataByte
  5263 ;;		_wireWriteDataByte
  5264 ;; This function is called by:
  5265 ;;		_initialize
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           
  5270                           ;psect for function _setLEDDrive
  5271  0D8D                     _setLEDDrive:	
  5272                           
  5273                           ;incstack = 0
  5274                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  5275                           ;setLEDDrive@drive stored from wreg
  5276  0D8D  0020               	movlb	0	; select bank0
  5277  0D8E  00AD               	movwf	setLEDDrive@drive
  5278                           
  5279                           ;APDS9960.c: 169: _Bool setLEDDrive(uint8_t drive);APDS9960.c: 170: {;APDS9960.c: 171:  
      +                             uint8_t val;;APDS9960.c: 174:     val=wireReadDataByte(0x8F);
  5280  0D8F  308F               	movlw	143
  5281  0D90  318C  2482  318D   	fcall	_wireReadDataByte
  5282  0D93  0020               	movlb	0	; select bank0
  5283  0D94  00AA               	movwf	??_setLEDDrive
  5284  0D95  082A               	movf	??_setLEDDrive,w
  5285  0D96  00AC               	movwf	setLEDDrive@val
  5286                           
  5287                           ;APDS9960.c: 177:     drive &= 0b00000011;
  5288  0D97  3003               	movlw	3
  5289  0D98  00AA               	movwf	??_setLEDDrive
  5290  0D99  082A               	movf	??_setLEDDrive,w
  5291  0D9A  05AD               	andwf	setLEDDrive@drive,f
  5292                           
  5293                           ;APDS9960.c: 178:     drive = drive << 6;
  5294  0D9B  082D               	movf	setLEDDrive@drive,w
  5295  0D9C  00AA               	movwf	??_setLEDDrive
  5296  0D9D  3005               	movlw	5
  5297  0D9E                     u4935:	
  5298  0D9E  35AA               	lslf	??_setLEDDrive,f
  5299  0D9F  3EFF               	addlw	-1
  5300  0DA0  1D03               	skipz
  5301  0DA1  2D9E               	goto	u4935
  5302  0DA2  352A               	lslf	??_setLEDDrive,w
  5303  0DA3  00AB               	movwf	??_setLEDDrive+1
  5304  0DA4  082B               	movf	??_setLEDDrive+1,w
  5305  0DA5  00AD               	movwf	setLEDDrive@drive
  5306                           
  5307                           ;APDS9960.c: 179:     val &= 0b00111111;
  5308  0DA6  303F               	movlw	63
  5309  0DA7  00AA               	movwf	??_setLEDDrive
  5310  0DA8  082A               	movf	??_setLEDDrive,w
  5311  0DA9  05AC               	andwf	setLEDDrive@val,f
  5312                           
  5313                           ;APDS9960.c: 180:     val |= drive;
  5314  0DAA  082D               	movf	setLEDDrive@drive,w
  5315  0DAB  00AA               	movwf	??_setLEDDrive
  5316  0DAC  082A               	movf	??_setLEDDrive,w
  5317  0DAD  04AC               	iorwf	setLEDDrive@val,f
  5318                           
  5319                           ;APDS9960.c: 183:     if( !wireWriteDataByte(0x8F, val) ) {
  5320  0DAE  082C               	movf	setLEDDrive@val,w
  5321  0DAF  00AA               	movwf	??_setLEDDrive
  5322  0DB0  082A               	movf	??_setLEDDrive,w
  5323  0DB1  00A6               	movwf	wireWriteDataByte@val
  5324  0DB2  308F               	movlw	143
  5325  0DB3  318C  2411         	fcall	_wireWriteDataByte
  5326  0DB5  0008               	return
  5327  0DB6                     __end_of_setLEDDrive:	
  5328                           
  5329                           	psect	text8
  5330  0D18                     __ptext8:	
  5331 ;; *************** function _setGestureWaitTime *****************
  5332 ;; Defined at:
  5333 ;;		line 365 in file "APDS9960.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  time            1    wreg     unsigned char 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  time            1   11[BANK0 ] unsigned char 
  5338 ;;  val             1   12[BANK0 ] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      _Bool 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    8
  5355 ;; This function calls:
  5356 ;;		_wireReadDataByte
  5357 ;;		_wireWriteDataByte
  5358 ;; This function is called by:
  5359 ;;		_initialize
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _setGestureWaitTime
  5365  0D18                     _setGestureWaitTime:	
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  5369                           ;setGestureWaitTime@time stored from wreg
  5370  0D18  0020               	movlb	0	; select bank0
  5371  0D19  00AB               	movwf	setGestureWaitTime@time
  5372                           
  5373                           ;APDS9960.c: 365: _Bool setGestureWaitTime(uint8_t time);APDS9960.c: 366: {;APDS9960.c: 
      +                          367:     uint8_t val;;APDS9960.c: 370:     val = wireReadDataByte(0xA3);
  5374  0D1A  30A3               	movlw	163
  5375  0D1B  318C  2482  318D   	fcall	_wireReadDataByte
  5376  0D1E  0020               	movlb	0	; select bank0
  5377  0D1F  00AA               	movwf	??_setGestureWaitTime
  5378  0D20  082A               	movf	??_setGestureWaitTime,w
  5379  0D21  00AC               	movwf	setGestureWaitTime@val
  5380                           
  5381                           ;APDS9960.c: 373:     time &= 0b00000111;
  5382  0D22  3007               	movlw	7
  5383  0D23  00AA               	movwf	??_setGestureWaitTime
  5384  0D24  082A               	movf	??_setGestureWaitTime,w
  5385  0D25  05AB               	andwf	setGestureWaitTime@time,f
  5386                           
  5387                           ;APDS9960.c: 374:     val &= 0b11111000;
  5388  0D26  30F8               	movlw	248
  5389  0D27  00AA               	movwf	??_setGestureWaitTime
  5390  0D28  082A               	movf	??_setGestureWaitTime,w
  5391  0D29  05AC               	andwf	setGestureWaitTime@val,f
  5392                           
  5393                           ;APDS9960.c: 375:     val |= time;
  5394  0D2A  082B               	movf	setGestureWaitTime@time,w
  5395  0D2B  00AA               	movwf	??_setGestureWaitTime
  5396  0D2C  082A               	movf	??_setGestureWaitTime,w
  5397  0D2D  04AC               	iorwf	setGestureWaitTime@val,f
  5398                           
  5399                           ;APDS9960.c: 378:     if( !wireWriteDataByte(0xA3, val) ) {
  5400  0D2E  082C               	movf	setGestureWaitTime@val,w
  5401  0D2F  00AA               	movwf	??_setGestureWaitTime
  5402  0D30  082A               	movf	??_setGestureWaitTime,w
  5403  0D31  00A6               	movwf	wireWriteDataByte@val
  5404  0D32  30A3               	movlw	163
  5405  0D33  318C  2411  318D   	fcall	_wireWriteDataByte
  5406  0D36  0020               	movlb	0	; select bank0
  5407  0D37  0826               	movf	?_wireWriteDataByte,w
  5408  0D38  0427               	iorwf	?_wireWriteDataByte+1,w
  5409  0D39  1D03               	btfss	3,2
  5410  0D3A  2D3D               	goto	l5753
  5411                           
  5412                           ;APDS9960.c: 379:         return 0;
  5413  0D3B  3000               	movlw	0
  5414  0D3C  0008               	return
  5415  0D3D                     l5753:	
  5416                           
  5417                           ;APDS9960.c: 382:     return 1;
  5418  0D3D  3001               	movlw	1
  5419  0D3E  0008               	return
  5420  0D3F                     __end_of_setGestureWaitTime:	
  5421                           
  5422                           	psect	text9
  5423  0ECA                     __ptext9:	
  5424 ;; *************** function _setGestureLEDDrive *****************
  5425 ;; Defined at:
  5426 ;;		line 342 in file "APDS9960.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  drive           1    wreg     unsigned char 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  drive           1   13[BANK0 ] unsigned char 
  5431 ;;  val             1   12[BANK0 ] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      _Bool 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5444 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;Total ram usage:        4 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    8
  5448 ;; This function calls:
  5449 ;;		_wireReadDataByte
  5450 ;;		_wireWriteDataByte
  5451 ;; This function is called by:
  5452 ;;		_initialize
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _setGestureLEDDrive
  5458  0ECA                     _setGestureLEDDrive:	
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  5462                           ;setGestureLEDDrive@drive stored from wreg
  5463  0ECA  0020               	movlb	0	; select bank0
  5464  0ECB  00AD               	movwf	setGestureLEDDrive@drive
  5465                           
  5466                           ;APDS9960.c: 342: _Bool setGestureLEDDrive(uint8_t drive);APDS9960.c: 343: {;APDS9960.c:
      +                           344:     uint8_t val;;APDS9960.c: 347:     val = wireReadDataByte(0xA3);
  5467  0ECC  30A3               	movlw	163
  5468  0ECD  318C  2482  318E   	fcall	_wireReadDataByte
  5469  0ED0  0020               	movlb	0	; select bank0
  5470  0ED1  00AA               	movwf	??_setGestureLEDDrive
  5471  0ED2  082A               	movf	??_setGestureLEDDrive,w
  5472  0ED3  00AC               	movwf	setGestureLEDDrive@val
  5473                           
  5474                           ;APDS9960.c: 351:     drive &= 0b00000011;
  5475  0ED4  3003               	movlw	3
  5476  0ED5  00AA               	movwf	??_setGestureLEDDrive
  5477  0ED6  082A               	movf	??_setGestureLEDDrive,w
  5478  0ED7  05AD               	andwf	setGestureLEDDrive@drive,f
  5479                           
  5480                           ;APDS9960.c: 352:     drive = drive << 3;
  5481  0ED8  082D               	movf	setGestureLEDDrive@drive,w
  5482  0ED9  00AA               	movwf	??_setGestureLEDDrive
  5483  0EDA  3002               	movlw	2
  5484  0EDB                     u5055:	
  5485  0EDB  35AA               	lslf	??_setGestureLEDDrive,f
  5486  0EDC  3EFF               	addlw	-1
  5487  0EDD  1D03               	skipz
  5488  0EDE  2EDB               	goto	u5055
  5489  0EDF  352A               	lslf	??_setGestureLEDDrive,w
  5490  0EE0  00AB               	movwf	??_setGestureLEDDrive+1
  5491  0EE1  082B               	movf	??_setGestureLEDDrive+1,w
  5492  0EE2  00AD               	movwf	setGestureLEDDrive@drive
  5493                           
  5494                           ;APDS9960.c: 353:     val &= 0b11100111;
  5495  0EE3  30E7               	movlw	231
  5496  0EE4  00AA               	movwf	??_setGestureLEDDrive
  5497  0EE5  082A               	movf	??_setGestureLEDDrive,w
  5498  0EE6  05AC               	andwf	setGestureLEDDrive@val,f
  5499                           
  5500                           ;APDS9960.c: 354:     val |= drive;
  5501  0EE7  082D               	movf	setGestureLEDDrive@drive,w
  5502  0EE8  00AA               	movwf	??_setGestureLEDDrive
  5503  0EE9  082A               	movf	??_setGestureLEDDrive,w
  5504  0EEA  04AC               	iorwf	setGestureLEDDrive@val,f
  5505                           
  5506                           ;APDS9960.c: 357:     if( !wireWriteDataByte(0xA3, val) ) {
  5507  0EEB  082C               	movf	setGestureLEDDrive@val,w
  5508  0EEC  00AA               	movwf	??_setGestureLEDDrive
  5509  0EED  082A               	movf	??_setGestureLEDDrive,w
  5510  0EEE  00A6               	movwf	wireWriteDataByte@val
  5511  0EEF  30A3               	movlw	163
  5512  0EF0  318C  2411  318E   	fcall	_wireWriteDataByte
  5513  0EF3  0020               	movlb	0	; select bank0
  5514  0EF4  0826               	movf	?_wireWriteDataByte,w
  5515  0EF5  0427               	iorwf	?_wireWriteDataByte+1,w
  5516  0EF6  1D03               	btfss	3,2
  5517  0EF7  2EFA               	goto	l5735
  5518                           
  5519                           ;APDS9960.c: 358:         return 0;
  5520  0EF8  3000               	movlw	0
  5521  0EF9  0008               	return
  5522  0EFA                     l5735:	
  5523                           
  5524                           ;APDS9960.c: 361:     return 1;
  5525  0EFA  3001               	movlw	1
  5526  0EFB  0008               	return
  5527  0EFC                     __end_of_setGestureLEDDrive:	
  5528                           
  5529                           	psect	text10
  5530  0E98                     __ptext10:	
  5531 ;; *************** function _setGestureGain *****************
  5532 ;; Defined at:
  5533 ;;		line 319 in file "APDS9960.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  gain            1    wreg     unsigned char 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  gain            1   13[BANK0 ] unsigned char 
  5538 ;;  val             1   12[BANK0 ] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      _Bool 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;Total ram usage:        4 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    8
  5555 ;; This function calls:
  5556 ;;		_wireReadDataByte
  5557 ;;		_wireWriteDataByte
  5558 ;; This function is called by:
  5559 ;;		_initialize
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           
  5564                           ;psect for function _setGestureGain
  5565  0E98                     _setGestureGain:	
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  5569                           ;setGestureGain@gain stored from wreg
  5570  0E98  0020               	movlb	0	; select bank0
  5571  0E99  00AD               	movwf	setGestureGain@gain
  5572                           
  5573                           ;APDS9960.c: 319: _Bool setGestureGain(uint8_t gain);APDS9960.c: 320: {;APDS9960.c: 321:
      +                               uint8_t val;;APDS9960.c: 324:     val = wireReadDataByte(0xA3);
  5574  0E9A  30A3               	movlw	163
  5575  0E9B  318C  2482  318E   	fcall	_wireReadDataByte
  5576  0E9E  0020               	movlb	0	; select bank0
  5577  0E9F  00AA               	movwf	??_setGestureGain
  5578  0EA0  082A               	movf	??_setGestureGain,w
  5579  0EA1  00AC               	movwf	setGestureGain@val
  5580                           
  5581                           ;APDS9960.c: 328:     gain &= 0b00000011;
  5582  0EA2  3003               	movlw	3
  5583  0EA3  00AA               	movwf	??_setGestureGain
  5584  0EA4  082A               	movf	??_setGestureGain,w
  5585  0EA5  05AD               	andwf	setGestureGain@gain,f
  5586                           
  5587                           ;APDS9960.c: 329:     gain = gain << 5;
  5588  0EA6  082D               	movf	setGestureGain@gain,w
  5589  0EA7  00AA               	movwf	??_setGestureGain
  5590  0EA8  3004               	movlw	4
  5591  0EA9                     u5035:	
  5592  0EA9  35AA               	lslf	??_setGestureGain,f
  5593  0EAA  3EFF               	addlw	-1
  5594  0EAB  1D03               	skipz
  5595  0EAC  2EA9               	goto	u5035
  5596  0EAD  352A               	lslf	??_setGestureGain,w
  5597  0EAE  00AB               	movwf	??_setGestureGain+1
  5598  0EAF  082B               	movf	??_setGestureGain+1,w
  5599  0EB0  00AD               	movwf	setGestureGain@gain
  5600                           
  5601                           ;APDS9960.c: 330:     val &= 0b10011111;
  5602  0EB1  309F               	movlw	159
  5603  0EB2  00AA               	movwf	??_setGestureGain
  5604  0EB3  082A               	movf	??_setGestureGain,w
  5605  0EB4  05AC               	andwf	setGestureGain@val,f
  5606                           
  5607                           ;APDS9960.c: 331:     val |= gain;
  5608  0EB5  082D               	movf	setGestureGain@gain,w
  5609  0EB6  00AA               	movwf	??_setGestureGain
  5610  0EB7  082A               	movf	??_setGestureGain,w
  5611  0EB8  04AC               	iorwf	setGestureGain@val,f
  5612                           
  5613                           ;APDS9960.c: 334:     if( !wireWriteDataByte(0xA3, val) ) {
  5614  0EB9  082C               	movf	setGestureGain@val,w
  5615  0EBA  00AA               	movwf	??_setGestureGain
  5616  0EBB  082A               	movf	??_setGestureGain,w
  5617  0EBC  00A6               	movwf	wireWriteDataByte@val
  5618  0EBD  30A3               	movlw	163
  5619  0EBE  318C  2411  318E   	fcall	_wireWriteDataByte
  5620  0EC1  0020               	movlb	0	; select bank0
  5621  0EC2  0826               	movf	?_wireWriteDataByte,w
  5622  0EC3  0427               	iorwf	?_wireWriteDataByte+1,w
  5623  0EC4  1D03               	btfss	3,2
  5624  0EC5  2EC8               	goto	l5717
  5625                           
  5626                           ;APDS9960.c: 335:         return 0;
  5627  0EC6  3000               	movlw	0
  5628  0EC7  0008               	return
  5629  0EC8                     l5717:	
  5630                           
  5631                           ;APDS9960.c: 338:     return 1;
  5632  0EC8  3001               	movlw	1
  5633  0EC9  0008               	return
  5634  0ECA                     __end_of_setGestureGain:	
  5635                           
  5636                           	psect	text11
  5637  0BC3                     __ptext11:	
  5638 ;; *************** function _setGestureExitThresh *****************
  5639 ;; Defined at:
  5640 ;;		line 309 in file "APDS9960.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  threshold       1    wreg     unsigned char 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  threshold       1   11[BANK0 ] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      _Bool 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, pclath, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:        2 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    8
  5661 ;; This function calls:
  5662 ;;		_wireWriteDataByte
  5663 ;; This function is called by:
  5664 ;;		_initialize
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function _setGestureExitThresh
  5670  0BC3                     _setGestureExitThresh:	
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  5674                           ;setGestureExitThresh@threshold stored from wreg
  5675  0BC3  0020               	movlb	0	; select bank0
  5676  0BC4  00AB               	movwf	setGestureExitThresh@threshold
  5677                           
  5678                           ;APDS9960.c: 309: _Bool setGestureExitThresh(uint8_t threshold);APDS9960.c: 310: {;APDS9
      +                          960.c: 311:     if( !wireWriteDataByte(0xA1, threshold) ) {
  5679  0BC5  082B               	movf	setGestureExitThresh@threshold,w
  5680  0BC6  00AA               	movwf	??_setGestureExitThresh
  5681  0BC7  082A               	movf	??_setGestureExitThresh,w
  5682  0BC8  00A6               	movwf	wireWriteDataByte@val
  5683  0BC9  30A1               	movlw	161
  5684  0BCA  318C  2411  318B   	fcall	_wireWriteDataByte
  5685  0BCD  0020               	movlb	0	; select bank0
  5686  0BCE  0826               	movf	?_wireWriteDataByte,w
  5687  0BCF  0427               	iorwf	?_wireWriteDataByte+1,w
  5688  0BD0  1D03               	btfss	3,2
  5689  0BD1  2BD4               	goto	l5699
  5690                           
  5691                           ;APDS9960.c: 312:         return 0;
  5692  0BD2  3000               	movlw	0
  5693  0BD3  0008               	return
  5694  0BD4                     l5699:	
  5695                           
  5696                           ;APDS9960.c: 315:     return 1;
  5697  0BD4  3001               	movlw	1
  5698  0BD5  0008               	return
  5699  0BD6                     __end_of_setGestureExitThresh:	
  5700                           
  5701                           	psect	text12
  5702  0BB0                     __ptext12:	
  5703 ;; *************** function _setGestureEnterThresh *****************
  5704 ;; Defined at:
  5705 ;;		line 299 in file "APDS9960.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  threshold       1    wreg     unsigned char 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  threshold       1   11[BANK0 ] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      _Bool 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, pclath, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;Total ram usage:        2 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    8
  5726 ;; This function calls:
  5727 ;;		_wireWriteDataByte
  5728 ;; This function is called by:
  5729 ;;		_initialize
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           
  5734                           ;psect for function _setGestureEnterThresh
  5735  0BB0                     _setGestureEnterThresh:	
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  5739                           ;setGestureEnterThresh@threshold stored from wreg
  5740  0BB0  0020               	movlb	0	; select bank0
  5741  0BB1  00AB               	movwf	setGestureEnterThresh@threshold
  5742                           
  5743                           ;APDS9960.c: 299: _Bool setGestureEnterThresh(uint8_t threshold);APDS9960.c: 300: {;APDS
      +                          9960.c: 301:     if( !wireWriteDataByte(0xA0, threshold) ) {
  5744  0BB2  082B               	movf	setGestureEnterThresh@threshold,w
  5745  0BB3  00AA               	movwf	??_setGestureEnterThresh
  5746  0BB4  082A               	movf	??_setGestureEnterThresh,w
  5747  0BB5  00A6               	movwf	wireWriteDataByte@val
  5748  0BB6  30A0               	movlw	160
  5749  0BB7  318C  2411  318B   	fcall	_wireWriteDataByte
  5750  0BBA  0020               	movlb	0	; select bank0
  5751  0BBB  0826               	movf	?_wireWriteDataByte,w
  5752  0BBC  0427               	iorwf	?_wireWriteDataByte+1,w
  5753  0BBD  1D03               	btfss	3,2
  5754  0BBE  2BC1               	goto	l5689
  5755                           
  5756                           ;APDS9960.c: 302:         return 0;
  5757  0BBF  3000               	movlw	0
  5758  0BC0  0008               	return
  5759  0BC1                     l5689:	
  5760                           
  5761                           ;APDS9960.c: 305:     return 1;
  5762  0BC1  3001               	movlw	1
  5763  0BC2  0008               	return
  5764  0BC3                     __end_of_setGestureEnterThresh:	
  5765                           
  5766                           	psect	text13
  5767  0C64                     __ptext13:	
  5768 ;; *************** function _setAmbientLightGain *****************
  5769 ;; Defined at:
  5770 ;;		line 212 in file "APDS9960.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  drive           1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  drive           1   11[BANK0 ] unsigned char 
  5775 ;;  val             1   12[BANK0 ] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      _Bool 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        3 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    8
  5792 ;; This function calls:
  5793 ;;		_wireReadDataByte
  5794 ;;		_wireWriteDataByte
  5795 ;; This function is called by:
  5796 ;;		_initialize
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _setAmbientLightGain
  5802  0C64                     _setAmbientLightGain:	
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  5806                           ;setAmbientLightGain@drive stored from wreg
  5807  0C64  0020               	movlb	0	; select bank0
  5808  0C65  00AB               	movwf	setAmbientLightGain@drive
  5809                           
  5810                           ;APDS9960.c: 212: _Bool setAmbientLightGain(uint8_t drive);APDS9960.c: 213: {;APDS9960.c
      +                          : 214:     uint8_t val;;APDS9960.c: 217:     val= wireReadDataByte(0x8F);
  5811  0C66  308F               	movlw	143
  5812  0C67  318C  2482  318C   	fcall	_wireReadDataByte
  5813  0C6A  0020               	movlb	0	; select bank0
  5814  0C6B  00AA               	movwf	??_setAmbientLightGain
  5815  0C6C  082A               	movf	??_setAmbientLightGain,w
  5816  0C6D  00AC               	movwf	setAmbientLightGain@val
  5817                           
  5818                           ;APDS9960.c: 220:     drive &= 0b00000011;
  5819  0C6E  3003               	movlw	3
  5820  0C6F  00AA               	movwf	??_setAmbientLightGain
  5821  0C70  082A               	movf	??_setAmbientLightGain,w
  5822  0C71  05AB               	andwf	setAmbientLightGain@drive,f
  5823                           
  5824                           ;APDS9960.c: 221:     val &= 0b11111100;
  5825  0C72  30FC               	movlw	252
  5826  0C73  00AA               	movwf	??_setAmbientLightGain
  5827  0C74  082A               	movf	??_setAmbientLightGain,w
  5828  0C75  05AC               	andwf	setAmbientLightGain@val,f
  5829                           
  5830                           ;APDS9960.c: 222:     val |= drive;
  5831  0C76  082B               	movf	setAmbientLightGain@drive,w
  5832  0C77  00AA               	movwf	??_setAmbientLightGain
  5833  0C78  082A               	movf	??_setAmbientLightGain,w
  5834  0C79  04AC               	iorwf	setAmbientLightGain@val,f
  5835                           
  5836                           ;APDS9960.c: 225:     if( !wireWriteDataByte(0x8F, val) ) {
  5837  0C7A  082C               	movf	setAmbientLightGain@val,w
  5838  0C7B  00AA               	movwf	??_setAmbientLightGain
  5839  0C7C  082A               	movf	??_setAmbientLightGain,w
  5840  0C7D  00A6               	movwf	wireWriteDataByte@val
  5841  0C7E  308F               	movlw	143
  5842  0C7F  318C  2411         	fcall	_wireWriteDataByte
  5843  0C81  0008               	return
  5844  0C82                     __end_of_setAmbientLightGain:	
  5845                           
  5846                           	psect	text14
  5847  0B61                     __ptext14:	
  5848 ;; *************** function _i2c1_driver_open *****************
  5849 ;; Defined at:
  5850 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;		None               void
  5857 ;; Registers used:
  5858 ;;		wreg, status,2
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;Total ram usage:        0 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    5
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_initialize
  5875 ;;		_i2c_open
  5876 ;;		_InitI2C
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _i2c1_driver_open
  5882  0B61                     _i2c1_driver_open:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  5886  0B61  0024               	movlb	4	; select bank4
  5887  0B62  1A95               	btfsc	21,5	;volatile
  5888  0B63  0008               	return
  5889  0B64  0194               	clrf	20	;volatile
  5890  0B65  3028               	movlw	40
  5891  0B66  0095               	movwf	21	;volatile
  5892  0B67  0196               	clrf	22	;volatile
  5893  0B68  3003               	movlw	3
  5894  0B69  0092               	movwf	18	;volatile
  5895  0B6A  0008               	return
  5896  0B6B                     __end_of_i2c1_driver_open:	
  5897                           
  5898                           	psect	text15
  5899  0EFC                     __ptext15:	
  5900 ;; *************** function _handleGesture *****************
  5901 ;; Defined at:
  5902 ;;		line 154 in file "main.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        2 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:   10
  5923 ;; This function calls:
  5924 ;;		_LEDs_SetLow
  5925 ;;		_readGesture
  5926 ;; This function is called by:
  5927 ;;		_main
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _handleGesture
  5933  0EFC                     _handleGesture:	
  5934                           
  5935                           ;main.c: 156:         switch(readGesture()){
  5936                           
  5937                           ;incstack = 0
  5938                           ; Regs used in _handleGesture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5939  0EFC  2F18               	goto	l6075
  5940  0EFD                     l603:	
  5941                           ;main.c: 158:                 do { LATCbits.LATC5 = 1; } while(0);
  5942                           
  5943  0EFD  0022               	movlb	2	; select bank2
  5944  0EFE  168E               	bsf	14,5	;volatile
  5945  0EFF                     l6057:	
  5946                           
  5947                           ;main.c: 159:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  5948  0EFF  3002               	movlw	2
  5949  0F00  0020               	movlb	0	; select bank0
  5950  0F01  00DC               	movwf	??_handleGesture+1
  5951  0F02  3045               	movlw	69
  5952  0F03  00DB               	movwf	??_handleGesture
  5953  0F04  30A9               	movlw	169
  5954  0F05                     u5527:	
  5955  0F05  0B89               	decfsz	9,f
  5956  0F06  2F05               	goto	u5527
  5957  0F07  0BDB               	decfsz	??_handleGesture,f
  5958  0F08  2F05               	goto	u5527
  5959  0F09  0BDC               	decfsz	??_handleGesture+1,f
  5960  0F0A  2F05               	goto	u5527
  5961  0F0B  3200               	nop2
  5962                           
  5963                           ;main.c: 160:                 LEDs_SetLow();
  5964  0F0C  318B  2316         	fcall	_LEDs_SetLow
  5965                           
  5966                           ;main.c: 161:                 break;
  5967  0F0E  0008               	return
  5968  0F0F                     l607:	
  5969                           ;main.c: 164:                 do { LATAbits.LATA2 = 1; } while(0);
  5970                           
  5971  0F0F  0022               	movlb	2	; select bank2
  5972  0F10  150C               	bsf	12,2	;volatile
  5973  0F11  2EFF               	goto	l6057
  5974  0F12                     l610:	
  5975                           ;main.c: 169:                 do { LATAbits.LATA1 = 1; } while(0);
  5976                           
  5977  0F12  0022               	movlb	2	; select bank2
  5978  0F13  148C               	bsf	12,1	;volatile
  5979  0F14  2EFF               	goto	l6057
  5980  0F15                     l613:	
  5981                           ;main.c: 174:                 do { LATAbits.LATA5 = 1; } while(0);
  5982                           
  5983  0F15  0022               	movlb	2	; select bank2
  5984  0F16  168C               	bsf	12,5	;volatile
  5985  0F17  2EFF               	goto	l6057
  5986  0F18                     l6075:	
  5987  0F18  3185  25BD  318E   	fcall	_readGesture
  5988                           
  5989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5990                           ; Switch size 1, requested type "simple"
  5991                           ; Number of cases is 1, Range of values is 0 to 0
  5992                           ; switch strategies available:
  5993                           ; Name         Instructions Cycles
  5994                           ; simple_byte            4     3 (average)
  5995                           ; direct_byte            8     6 (fixed)
  5996                           ; jumptable            260     6 (fixed)
  5997                           ;	Chosen strategy is simple_byte
  5998  0F1B  0020               	movlb	0	; select bank0
  5999  0F1C  0850               	movf	?_readGesture+1,w
  6000  0F1D  3A00               	xorlw	0	; case 0
  6001  0F1E  1903               	skipnz
  6002  0F1F  2F21               	goto	l6273
  6003  0F20  2F2F               	goto	l615
  6004  0F21                     l6273:	
  6005                           
  6006                           ; Switch size 1, requested type "simple"
  6007                           ; Number of cases is 4, Range of values is 1 to 4
  6008                           ; switch strategies available:
  6009                           ; Name         Instructions Cycles
  6010                           ; simple_byte           13     7 (average)
  6011                           ; direct_byte           17     9 (fixed)
  6012                           ; jumptable            263     9 (fixed)
  6013                           ;	Chosen strategy is simple_byte
  6014  0F21  084F               	movf	?_readGesture,w
  6015  0F22  3A01               	xorlw	1	; case 1
  6016  0F23  1903               	skipnz
  6017  0F24  2F12               	goto	l610
  6018  0F25  3A03               	xorlw	3	; case 2
  6019  0F26  1903               	skipnz
  6020  0F27  2F15               	goto	l613
  6021  0F28  3A01               	xorlw	1	; case 3
  6022  0F29  1903               	skipnz
  6023  0F2A  2EFD               	goto	l603
  6024  0F2B  3A07               	xorlw	7	; case 4
  6025  0F2C  1903               	skipnz
  6026  0F2D  2F0F               	goto	l607
  6027  0F2E  2F2F               	goto	l615
  6028  0F2F                     l615:	
  6029  0F2F  0008               	return
  6030  0F30                     __end_of_handleGesture:	
  6031                           
  6032                           	psect	text16
  6033  05BD                     __ptext16:	
  6034 ;; *************** function _readGesture *****************
  6035 ;; Defined at:
  6036 ;;		line 555 in file "APDS9960.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  fifo_data      64    0[BANK2 ] unsigned char [64]
  6041 ;;  fifo_data2     64    0[BANK1 ] unsigned char [64]
  6042 ;;  i               2   57[BANK0 ] int 
  6043 ;;  bytes_read      2   54[BANK0 ] int 
  6044 ;;  motion          2   51[BANK0 ] int 
  6045 ;;  fifo_level      1   56[BANK0 ] unsigned char 
  6046 ;;  gstatus         1   53[BANK0 ] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  2   47[BANK0 ] int 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Locals:         0       8      64      64       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Totals:         0      12      64      64       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;Total ram usage:      140 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    9
  6063 ;; This function calls:
  6064 ;;		_decodeGesture
  6065 ;;		_getMode
  6066 ;;		_isGestureAvailable
  6067 ;;		_processGestureData
  6068 ;;		_resetGestureParameters
  6069 ;;		_wireReadDataBlock
  6070 ;;		_wireReadDataByte
  6071 ;; This function is called by:
  6072 ;;		_handleGesture
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _readGesture
  6078  05BD                     _readGesture:	
  6079                           
  6080                           ;APDS9960.c: 558:     int bytes_read = 0;
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _readGesture: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6084  05BD  0020               	movlb	0	; select bank0
  6085  05BE  01D6               	clrf	readGesture@bytes_read
  6086  05BF  01D7               	clrf	readGesture@bytes_read+1
  6087                           
  6088                           ;APDS9960.c: 559:     uint8_t fifo_data[64];;APDS9960.c: 560:     uint8_t fifo_data2[64]
      +                          ;;APDS9960.c: 561:     uint8_t gstatus;;APDS9960.c: 562:     int motion;;APDS9960.c: 563
      +                          :     int i;;APDS9960.c: 566:     if( !isGestureAvailable() || !(getMode() & 0b01000001)
      +                           ) {
  6089  05C0  318B  239D  3185   	fcall	_isGestureAvailable
  6090  05C3  3A00               	xorlw	0
  6091  05C4  1903               	skipnz
  6092  05C5  2DCC               	goto	l5531
  6093  05C6  318B  2358  3185   	fcall	_getMode
  6094  05C9  3941               	andlw	65
  6095  05CA  1D03               	btfss	3,2
  6096  05CB  2E81               	goto	l5535
  6097  05CC                     l5531:	
  6098                           
  6099                           ;APDS9960.c: 567:         return DIR_NONE;
  6100  05CC  0020               	movlb	0	; select bank0
  6101  05CD  01CF               	clrf	?_readGesture
  6102  05CE  01D0               	clrf	?_readGesture+1
  6103  05CF  0008               	return
  6104  05D0                     l5541:	
  6105                           ;APDS9960.c: 568:     }
  6106                           
  6107                           
  6108                           ;APDS9960.c: 583:         {;APDS9960.c: 585:          fifo_level= wireReadDataByte(0xAE)
      +                          ;
  6109  05D0  30AE               	movlw	174
  6110  05D1  318C  2482  3185   	fcall	_wireReadDataByte
  6111  05D4  0020               	movlb	0	; select bank0
  6112  05D5  00D1               	movwf	??_readGesture
  6113  05D6  0851               	movf	??_readGesture,w
  6114  05D7  00D8               	movwf	readGesture@fifo_level
  6115                           
  6116                           ;APDS9960.c: 589:             if( fifo_level > 0) {
  6117  05D8  0858               	movf	readGesture@fifo_level,w
  6118  05D9  1903               	btfsc	3,2
  6119  05DA  2E81               	goto	l5535
  6120                           
  6121                           ;APDS9960.c: 591:               if(fifo_level < 17)
  6122  05DB  3011               	movlw	17
  6123  05DC  0258               	subwf	readGesture@fifo_level,w
  6124  05DD  1803               	skipnc
  6125  05DE  2DE3               	goto	l5549
  6126                           
  6127                           ;APDS9960.c: 592:               {;APDS9960.c: 593:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  6128  05DF  3020               	movlw	low readGesture@fifo_data
  6129  05E0  00A6               	movwf	wireReadDataBlock@val
  6130  05E1  3001               	movlw	high readGesture@fifo_data
  6131  05E2  2DE6               	goto	L1
  6132  05E3                     l5549:	
  6133                           ;APDS9960.c: 596:               } else
  6134                           
  6135                           
  6136                           ;APDS9960.c: 597:               {;APDS9960.c: 598:                 bytes_read = wireRead
      +                          DataBlock( 0xFC,
  6137  05E3  30A0               	movlw	low readGesture@fifo_data2
  6138  05E4  00A6               	movwf	wireReadDataBlock@val
  6139  05E5  3000               	movlw	high readGesture@fifo_data2
  6140  05E6                     L1:	
  6141  05E6  00A7               	movwf	wireReadDataBlock@val+1
  6142  05E7  0858               	movf	readGesture@fifo_level,w
  6143  05E8  00D1               	movwf	??_readGesture
  6144  05E9  01D2               	clrf	??_readGesture+1
  6145  05EA  35D1               	lslf	??_readGesture,f
  6146  05EB  0DD2               	rlf	??_readGesture+1,f
  6147  05EC  35D1               	lslf	??_readGesture,f
  6148  05ED  0DD2               	rlf	??_readGesture+1,f
  6149  05EE  0851               	movf	??_readGesture,w
  6150  05EF  00A8               	movwf	wireReadDataBlock@len
  6151  05F0  0852               	movf	??_readGesture+1,w
  6152  05F1  00A9               	movwf	wireReadDataBlock@len+1
  6153  05F2  30FC               	movlw	252
  6154  05F3  3187  27B2  3185   	fcall	_wireReadDataBlock
  6155  05F6  0020               	movlb	0	; select bank0
  6156  05F7  0827               	movf	?_wireReadDataBlock+1,w
  6157  05F8  00D7               	movwf	readGesture@bytes_read+1
  6158  05F9  0826               	movf	?_wireReadDataBlock,w
  6159  05FA  00D6               	movwf	readGesture@bytes_read
  6160                           
  6161                           ;APDS9960.c: 604:                 if( bytes_read == -1 )
  6162  05FB  0A56               	incf	readGesture@bytes_read,w
  6163  05FC  1D03               	skipz
  6164  05FD  2E06               	goto	l5557
  6165  05FE  0A57               	incf	readGesture@bytes_read+1,w
  6166  05FF  1D03               	btfss	3,2
  6167  0600  2E06               	goto	l5557
  6168                           
  6169                           ;APDS9960.c: 605:                 {;APDS9960.c: 606:                     return 0xFF;
  6170  0601  30FF               	movlw	255
  6171  0602  00CF               	movwf	?_readGesture
  6172  0603  3000               	movlw	0
  6173  0604  00D0               	movwf	?_readGesture+1
  6174  0605  0008               	return
  6175  0606                     l5557:	
  6176                           
  6177                           ;APDS9960.c: 611:                 if( bytes_read >= 4 )
  6178  0606  0857               	movf	readGesture@bytes_read+1,w
  6179  0607  3A80               	xorlw	128
  6180  0608  00D1               	movwf	??_readGesture
  6181  0609  3080               	movlw	128
  6182  060A  0251               	subwf	??_readGesture,w
  6183  060B  1D03               	skipz
  6184  060C  2E0F               	goto	u4905
  6185  060D  3004               	movlw	4
  6186  060E  0256               	subwf	readGesture@bytes_read,w
  6187  060F                     u4905:	
  6188  060F  1C03               	skipc
  6189  0610  2E81               	goto	l5535
  6190                           
  6191                           ;APDS9960.c: 612:                 {;APDS9960.c: 614:                     for( i = 0; i <
      +                           bytes_read; i += 4 ) {
  6192  0611  0020               	movlb	0	; select bank0
  6193  0612  01D9               	clrf	readGesture@i
  6194  0613  01DA               	clrf	readGesture@i+1
  6195  0614                     l5569:	
  6196  0614  085A               	movf	readGesture@i+1,w
  6197  0615  3A80               	xorlw	128
  6198  0616  00D1               	movwf	??_readGesture
  6199  0617  0857               	movf	readGesture@bytes_read+1,w
  6200  0618  3A80               	xorlw	128
  6201  0619  0251               	subwf	??_readGesture,w
  6202  061A  1D03               	skipz
  6203  061B  2E1E               	goto	u4915
  6204  061C  0856               	movf	readGesture@bytes_read,w
  6205  061D  0259               	subwf	readGesture@i,w
  6206  061E                     u4915:	
  6207  061E  1803               	btfsc	3,0
  6208  061F  2E75               	goto	l5571
  6209                           
  6210                           ;APDS9960.c: 615:                         gesture_data_.u_data[gesture_data_.index] = fi
      +                          fo_data[i + 0];
  6211  0620  0020               	movlb	0	; select bank0
  6212  0621  0859               	movf	readGesture@i,w
  6213  0622  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  6214  0623  0086               	movwf	6
  6215  0624  3001               	movlw	1	; select bank2/3
  6216  0625  0087               	movwf	7
  6217  0626  0801               	movf	1,w
  6218  0627  00D1               	movwf	??_readGesture
  6219  0628  0024               	movlb	4	; select bank4
  6220  0629  0860               	movf	(_gesture_data_^(0+512)+64),w
  6221  062A  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  6222  062B  0086               	movwf	6
  6223  062C  3002               	movlw	2	; select bank4/5
  6224  062D  0087               	movwf	7
  6225  062E  0020               	movlb	0	; select bank0
  6226  062F  0851               	movf	??_readGesture,w
  6227  0630  0081               	movwf	1
  6228                           
  6229                           ;APDS9960.c: 617:                         gesture_data_.d_data[gesture_data_.index] = fi
      +                          fo_data[i + 1];
  6230  0631  0859               	movf	readGesture@i,w
  6231  0632  3E01               	addlw	1
  6232  0633  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  6233  0634  0086               	movwf	6
  6234  0635  3001               	movlw	1	; select bank2/3
  6235  0636  0087               	movwf	7
  6236  0637  0801               	movf	1,w
  6237  0638  00D1               	movwf	??_readGesture
  6238  0639  0024               	movlb	4	; select bank4
  6239  063A  0860               	movf	(_gesture_data_^(0+512)+64),w
  6240  063B  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  6241  063C  0086               	movwf	6
  6242  063D  3002               	movlw	2	; select bank4/5
  6243  063E  0087               	movwf	7
  6244  063F  0020               	movlb	0	; select bank0
  6245  0640  0851               	movf	??_readGesture,w
  6246  0641  0081               	movwf	1
  6247                           
  6248                           ;APDS9960.c: 619:                         gesture_data_.l_data[gesture_data_.index] = fi
      +                          fo_data[i + 2];
  6249  0642  0859               	movf	readGesture@i,w
  6250  0643  3E02               	addlw	2
  6251  0644  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  6252  0645  0086               	movwf	6
  6253  0646  3001               	movlw	1	; select bank2/3
  6254  0647  0087               	movwf	7
  6255  0648  0801               	movf	1,w
  6256  0649  00D1               	movwf	??_readGesture
  6257  064A  0024               	movlb	4	; select bank4
  6258  064B  0860               	movf	(_gesture_data_^(0+512)+64),w
  6259  064C  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  6260  064D  0086               	movwf	6
  6261  064E  3002               	movlw	2	; select bank4/5
  6262  064F  0087               	movwf	7
  6263  0650  0020               	movlb	0	; select bank0
  6264  0651  0851               	movf	??_readGesture,w
  6265  0652  0081               	movwf	1
  6266                           
  6267                           ;APDS9960.c: 621:                         gesture_data_.r_data[gesture_data_.index] = fi
      +                          fo_data[i + 3];
  6268  0653  0859               	movf	readGesture@i,w
  6269  0654  3E03               	addlw	3
  6270  0655  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  6271  0656  0086               	movwf	6
  6272  0657  3001               	movlw	1	; select bank2/3
  6273  0658  0087               	movwf	7
  6274  0659  0801               	movf	1,w
  6275  065A  00D1               	movwf	??_readGesture
  6276  065B  0024               	movlb	4	; select bank4
  6277  065C  0860               	movf	(_gesture_data_^(0+512)+64),w
  6278  065D  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  6279  065E  0086               	movwf	6
  6280  065F  3002               	movlw	2	; select bank4/5
  6281  0660  0087               	movwf	7
  6282  0661  0020               	movlb	0	; select bank0
  6283  0662  0851               	movf	??_readGesture,w
  6284  0663  0081               	movwf	1
  6285                           
  6286                           ;APDS9960.c: 623:                         gesture_data_.index++;
  6287  0664  3001               	movlw	1
  6288  0665  00D1               	movwf	??_readGesture
  6289  0666  0851               	movf	??_readGesture,w
  6290  0667  0024               	movlb	4	; select bank4
  6291  0668  07E0               	addwf	(_gesture_data_^(0+512)+64),f
  6292                           
  6293                           ;APDS9960.c: 624:                         gesture_data_.total_gestures++;
  6294  0669  3001               	movlw	1
  6295  066A  0020               	movlb	0	; select bank0
  6296  066B  00D1               	movwf	??_readGesture
  6297  066C  0851               	movf	??_readGesture,w
  6298  066D  0024               	movlb	4	; select bank4
  6299  066E  07E1               	addwf	(_gesture_data_^(0+512)+65),f
  6300                           
  6301                           ;APDS9960.c: 625:                     }
  6302  066F  3004               	movlw	4
  6303  0670  0020               	movlb	0	; select bank0
  6304  0671  07D9               	addwf	readGesture@i,f
  6305  0672  3000               	movlw	0
  6306  0673  3DDA               	addwfc	readGesture@i+1,f
  6307  0674  2E14               	goto	l5569
  6308  0675                     l5571:	
  6309                           
  6310                           ;APDS9960.c: 628:                     if( processGestureData() )
  6311  0675  3180  204E  3185   	fcall	_processGestureData
  6312  0678  3A00               	xorlw	0
  6313  0679  1903               	skipnz
  6314  067A  2E7E               	goto	l5575
  6315                           
  6316                           ;APDS9960.c: 629:                     {;APDS9960.c: 631:                         if( dec
      +                          odeGesture() ) {
  6317  067B  3183  2319  3185   	fcall	_decodeGesture
  6318  067E                     l5575:	
  6319                           
  6320                           ;APDS9960.c: 637:                     gesture_data_.index = 0;
  6321  067E  0024               	movlb	4	; select bank4
  6322  067F  01E0               	clrf	(_gesture_data_^(0+512)+64)
  6323                           
  6324                           ;APDS9960.c: 638:                     gesture_data_.total_gestures = 0;
  6325  0680  01E1               	clrf	(_gesture_data_^(0+512)+65)
  6326  0681                     l5535:	
  6327                           
  6328                           ;APDS9960.c: 574:         _delay((unsigned long)((30)*(1000000/4000.0)));
  6329  0681  300A               	movlw	10
  6330  0682  0020               	movlb	0	; select bank0
  6331  0683  00D1               	movwf	??_readGesture
  6332  0684  30BC               	movlw	188
  6333  0685                     u5537:	
  6334  0685  0B89               	decfsz	9,f
  6335  0686  2E85               	goto	u5537
  6336  0687  0BD1               	decfsz	??_readGesture,f
  6337  0688  2E85               	goto	u5537
  6338  0689  0000               	nop
  6339                           
  6340                           ;APDS9960.c: 577:         gstatus = wireReadDataByte(0xAF);
  6341  068A  30AF               	movlw	175
  6342  068B  318C  2482  3185   	fcall	_wireReadDataByte
  6343  068E  0020               	movlb	0	; select bank0
  6344  068F  00D1               	movwf	??_readGesture
  6345  0690  0851               	movf	??_readGesture,w
  6346  0691  00D5               	movwf	readGesture@gstatus
  6347                           
  6348                           ;APDS9960.c: 582:         if( (gstatus & 0b00000001) == 0b00000001 )
  6349  0692  1855               	btfsc	readGesture@gstatus,0
  6350  0693  2DD0               	goto	l5541
  6351                           
  6352                           ;APDS9960.c: 644:             _delay((unsigned long)((30)*(1000000/4000.0)));
  6353  0694  300A               	movlw	10
  6354  0695  0020               	movlb	0	; select bank0
  6355  0696  00D1               	movwf	??_readGesture
  6356  0697  30BC               	movlw	188
  6357  0698                     u5547:	
  6358  0698  0B89               	decfsz	9,f
  6359  0699  2E98               	goto	u5547
  6360  069A  0BD1               	decfsz	??_readGesture,f
  6361  069B  2E98               	goto	u5547
  6362  069C  0000               	nop
  6363                           
  6364                           ;APDS9960.c: 645:             decodeGesture();
  6365  069D  3183  2319  3185   	fcall	_decodeGesture
  6366                           
  6367                           ;APDS9960.c: 646:             motion = gesture_motion_;
  6368  06A0  0020               	movlb	0	; select bank0
  6369  06A1  085E               	movf	_gesture_motion_+1,w
  6370  06A2  00D4               	movwf	readGesture@motion+1
  6371  06A3  085D               	movf	_gesture_motion_,w
  6372  06A4  00D3               	movwf	readGesture@motion
  6373                           
  6374                           ;APDS9960.c: 648:             resetGestureParameters();
  6375  06A5  318B  23FC         	fcall	_resetGestureParameters
  6376                           
  6377                           ;APDS9960.c: 650:             return motion;
  6378  06A7  0020               	movlb	0	; select bank0
  6379  06A8  0854               	movf	readGesture@motion+1,w
  6380  06A9  00D0               	movwf	?_readGesture+1
  6381  06AA  0853               	movf	readGesture@motion,w
  6382  06AB  00CF               	movwf	?_readGesture
  6383  06AC  0008               	return
  6384  06AD                     __end_of_readGesture:	
  6385                           
  6386                           	psect	text17
  6387  07B2                     __ptext17:	
  6388 ;; *************** function _wireReadDataBlock *****************
  6389 ;; Defined at:
  6390 ;;		line 846 in file "APDS9960.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  reg             1    wreg     unsigned char 
  6393 ;;  val             2    6[BANK0 ] PTR unsigned char 
  6394 ;;		 -> readGesture@fifo_data2(64), readGesture@fifo_data(64), 
  6395 ;;  len             2    8[BANK0 ] unsigned int 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  reg             1   15[BANK0 ] unsigned char 
  6398 ;;  j               1   16[BANK0 ] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2    6[BANK0 ] int 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;Total ram usage:       11 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    7
  6415 ;; This function calls:
  6416 ;;		_I2C_ReStart
  6417 ;;		_I2C_Read_Byte
  6418 ;;		_I2C_Send_NACK
  6419 ;;		_I2C_Start
  6420 ;;		_I2C_Stop
  6421 ;;		_I2C_Write_Byte
  6422 ;; This function is called by:
  6423 ;;		_readGesture
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _wireReadDataBlock
  6429  07B2                     _wireReadDataBlock:	
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in _wireReadDataBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6433                           ;wireReadDataBlock@reg stored from wreg
  6434  07B2  0020               	movlb	0	; select bank0
  6435  07B3  00AF               	movwf	wireReadDataBlock@reg
  6436                           
  6437                           ;APDS9960.c: 850:     I2C_Start();
  6438  07B4  318A  22C3  3187   	fcall	_I2C_Start
  6439                           
  6440                           ;APDS9960.c: 851:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  6441  07B7  3072               	movlw	114
  6442  07B8  318C  242C  3187   	fcall	_I2C_Write_Byte
  6443                           
  6444                           ;APDS9960.c: 853:     I2C_Write_Byte(reg);
  6445  07BB  0020               	movlb	0	; select bank0
  6446  07BC  082F               	movf	wireReadDataBlock@reg,w
  6447  07BD  318C  242C  3187   	fcall	_I2C_Write_Byte
  6448                           
  6449                           ;APDS9960.c: 855:     for(j= 0; j < len ; j++)
  6450  07C0  0020               	movlb	0	; select bank0
  6451  07C1  01B0               	clrf	wireReadDataBlock@j
  6452  07C2                     l5179:	
  6453  07C2  0830               	movf	wireReadDataBlock@j,w
  6454  07C3  00AA               	movwf	??_wireReadDataBlock
  6455  07C4  01AB               	clrf	??_wireReadDataBlock+1
  6456  07C5  0829               	movf	wireReadDataBlock@len+1,w
  6457  07C6  022B               	subwf	??_wireReadDataBlock+1,w
  6458  07C7  1D03               	skipz
  6459  07C8  2FCB               	goto	u4085
  6460  07C9  0828               	movf	wireReadDataBlock@len,w
  6461  07CA  022A               	subwf	??_wireReadDataBlock,w
  6462  07CB                     u4085:	
  6463  07CB  1803               	btfsc	3,0
  6464  07CC  2FF1               	goto	l5181
  6465                           
  6466                           ;APDS9960.c: 856:     {;APDS9960.c: 858:       I2C_ReStart();
  6467  07CD  318A  22B4  3187   	fcall	_I2C_ReStart
  6468                           
  6469                           ;APDS9960.c: 859:       I2C_Write_Byte((0x39 << 1) | 0x01);
  6470  07D0  3073               	movlw	115
  6471  07D1  318C  242C  3187   	fcall	_I2C_Write_Byte
  6472                           
  6473                           ;APDS9960.c: 860:       val[j]=I2C_Read_Byte();
  6474  07D4  318B  236B  3187   	fcall	_I2C_Read_Byte
  6475  07D7  0020               	movlb	0	; select bank0
  6476  07D8  00AA               	movwf	??_wireReadDataBlock
  6477  07D9  0830               	movf	wireReadDataBlock@j,w
  6478  07DA  00AB               	movwf	??_wireReadDataBlock+1
  6479  07DB  01AC               	clrf	??_wireReadDataBlock+2
  6480  07DC  082B               	movf	??_wireReadDataBlock+1,w
  6481  07DD  0726               	addwf	wireReadDataBlock@val,w
  6482  07DE  00AD               	movwf	??_wireReadDataBlock+3
  6483  07DF  082C               	movf	??_wireReadDataBlock+2,w
  6484  07E0  3D27               	addwfc	wireReadDataBlock@val+1,w
  6485  07E1  00AE               	movwf	??_wireReadDataBlock+4
  6486  07E2  082D               	movf	??_wireReadDataBlock+3,w
  6487  07E3  0086               	movwf	6
  6488  07E4  082E               	movf	??_wireReadDataBlock+4,w
  6489  07E5  0087               	movwf	7
  6490  07E6  082A               	movf	??_wireReadDataBlock,w
  6491  07E7  0081               	movwf	1
  6492                           
  6493                           ;APDS9960.c: 861:       I2C_Send_NACK();
  6494  07E8  318A  22BD  3187   	fcall	_I2C_Send_NACK
  6495                           
  6496                           ;APDS9960.c: 863:     }
  6497  07EB  3001               	movlw	1
  6498  07EC  0020               	movlb	0	; select bank0
  6499  07ED  00AA               	movwf	??_wireReadDataBlock
  6500  07EE  082A               	movf	??_wireReadDataBlock,w
  6501  07EF  07B0               	addwf	wireReadDataBlock@j,f
  6502  07F0  2FC2               	goto	l5179
  6503  07F1                     l5181:	
  6504                           
  6505                           ;APDS9960.c: 865:     I2C_Stop();
  6506  07F1  318A  22C9         	fcall	_I2C_Stop
  6507                           
  6508                           ;APDS9960.c: 866:     return (int)j;
  6509  07F3  0020               	movlb	0	; select bank0
  6510  07F4  0830               	movf	wireReadDataBlock@j,w
  6511  07F5  00AA               	movwf	??_wireReadDataBlock
  6512  07F6  01AB               	clrf	??_wireReadDataBlock+1
  6513  07F7  082A               	movf	??_wireReadDataBlock,w
  6514  07F8  00A6               	movwf	?_wireReadDataBlock
  6515  07F9  082B               	movf	??_wireReadDataBlock+1,w
  6516  07FA  00A7               	movwf	?_wireReadDataBlock+1
  6517  07FB  0008               	return
  6518  07FC                     __end_of_wireReadDataBlock:	
  6519                           
  6520                           	psect	text18
  6521  004E                     __ptext18:	
  6522 ;; *************** function _processGestureData *****************
  6523 ;; Defined at:
  6524 ;;		line 656 in file "APDS9960.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  i               2   45[BANK0 ] int 
  6529 ;;  lr_delta        2   43[BANK0 ] int 
  6530 ;;  ud_delta        2   41[BANK0 ] int 
  6531 ;;  lr_ratio_las    2   23[BANK0 ] int 
  6532 ;;  ud_ratio_las    2   21[BANK0 ] int 
  6533 ;;  lr_ratio_fir    2   19[BANK0 ] int 
  6534 ;;  ud_ratio_fir    2   17[BANK0 ] int 
  6535 ;;  r_first         1   40[BANK0 ] unsigned char 
  6536 ;;  l_first         1   39[BANK0 ] unsigned char 
  6537 ;;  d_first         1   38[BANK0 ] unsigned char 
  6538 ;;  u_first         1   37[BANK0 ] unsigned char 
  6539 ;;  r_last          1   36[BANK0 ] unsigned char 
  6540 ;;  l_last          1   35[BANK0 ] unsigned char 
  6541 ;;  d_last          1   34[BANK0 ] unsigned char 
  6542 ;;  u_last          1   33[BANK0 ] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      _Bool 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;Total ram usage:       32 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    6
  6559 ;; This function calls:
  6560 ;;		___awdiv
  6561 ;;		___wmul
  6562 ;; This function is called by:
  6563 ;;		_readGesture
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           
  6568                           ;psect for function _processGestureData
  6569  004E                     _processGestureData:	
  6570                           
  6571                           ;APDS9960.c: 658:     uint8_t u_first = 0;
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _processGestureData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6575  004E  0020               	movlb	0	; select bank0
  6576  004F  01C5               	clrf	processGestureData@u_first
  6577                           
  6578                           ;APDS9960.c: 659:     uint8_t d_first = 0;
  6579  0050  01C6               	clrf	processGestureData@d_first
  6580                           
  6581                           ;APDS9960.c: 660:     uint8_t l_first = 0;
  6582  0051  01C7               	clrf	processGestureData@l_first
  6583                           
  6584                           ;APDS9960.c: 661:     uint8_t r_first = 0;
  6585  0052  01C8               	clrf	processGestureData@r_first
  6586                           
  6587                           ;APDS9960.c: 662:     uint8_t u_last = 0;
  6588  0053  01C1               	clrf	processGestureData@u_last
  6589                           
  6590                           ;APDS9960.c: 663:     uint8_t d_last = 0;
  6591  0054  01C2               	clrf	processGestureData@d_last
  6592                           
  6593                           ;APDS9960.c: 664:     uint8_t l_last = 0;
  6594  0055  01C3               	clrf	processGestureData@l_last
  6595                           
  6596                           ;APDS9960.c: 665:     uint8_t r_last = 0;
  6597  0056  01C4               	clrf	processGestureData@r_last
  6598                           
  6599                           ;APDS9960.c: 666:     int ud_ratio_first;;APDS9960.c: 667:     int lr_ratio_first;;APDS9
      +                          960.c: 668:     int ud_ratio_last;;APDS9960.c: 669:     int lr_ratio_last;;APDS9960.c: 6
      +                          70:     int ud_delta;;APDS9960.c: 671:     int lr_delta;;APDS9960.c: 672:     int i;;APD
      +                          S9960.c: 675:     if( gesture_data_.total_gestures <= 4 ) {
  6600  0057  3005               	movlw	5
  6601  0058  0024               	movlb	4	; select bank4
  6602  0059  0261               	subwf	(_gesture_data_^(0+512)+65),w
  6603  005A  1803               	skipnc
  6604  005B  285E               	goto	l5195
  6605  005C                     l5191:	
  6606                           
  6607                           ;APDS9960.c: 676:         return 0;
  6608  005C  3000               	movlw	0
  6609  005D  0008               	return
  6610  005E                     l5195:	
  6611                           
  6612                           ;APDS9960.c: 680:     if( (gesture_data_.total_gestures <= 32) && (gesture_data_.total_g
      +                          estures > 0) ) {
  6613  005E  3021               	movlw	33
  6614  005F  0261               	subwf	(_gesture_data_^(0+512)+65),w
  6615  0060  1803               	skipnc
  6616  0061  2928               	goto	l5245
  6617  0062  0861               	movf	(_gesture_data_^(0+512)+65),w
  6618  0063  1903               	btfsc	3,2
  6619  0064  2928               	goto	l5245
  6620                           
  6621                           ;APDS9960.c: 681: ;APDS9960.c: 684:         for( i = 0; i < gesture_data_.total_gestures
      +                          ; i++ ) {
  6622  0065  0020               	movlb	0	; select bank0
  6623  0066  01CD               	clrf	processGestureData@i
  6624  0067  01CE               	clrf	processGestureData@i+1
  6625  0068  286D               	goto	l856
  6626  0069                     l5211:	
  6627                           ;APDS9960.c: 694:                 break;
  6628                           
  6629                           
  6630                           ;APDS9960.c: 696:         }
  6631  0069  3001               	movlw	1
  6632  006A  07CD               	addwf	processGestureData@i,f
  6633  006B  3000               	movlw	0
  6634  006C  3DCE               	addwfc	processGestureData@i+1,f
  6635  006D                     l856:	
  6636  006D  084E               	movf	processGestureData@i+1,w
  6637  006E  3A80               	xorlw	128
  6638  006F  00AF               	movwf	??_processGestureData
  6639  0070  3080               	movlw	128
  6640  0071  022F               	subwf	??_processGestureData,w
  6641  0072  1D03               	skipz
  6642  0073  2878               	goto	u4165
  6643  0074  0024               	movlb	4	; select bank4
  6644  0075  0861               	movf	(_gesture_data_^(0+512)+65),w
  6645  0076  0020               	movlb	0	; select bank0
  6646  0077  024D               	subwf	processGestureData@i,w
  6647  0078                     u4165:	
  6648  0078  1803               	btfsc	3,0
  6649  0079  28C3               	goto	l5213
  6650                           
  6651                           ;APDS9960.c: 685:             if( (gesture_data_.u_data[i] > 10) &&
  6652  007A  0020               	movlb	0	; select bank0
  6653  007B  084D               	movf	processGestureData@i,w
  6654  007C  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  6655  007D  0086               	movwf	6
  6656  007E  3002               	movlw	2	; select bank4/5
  6657  007F  0087               	movwf	7
  6658  0080  300B               	movlw	11
  6659  0081  0201               	subwf	1,w
  6660  0082  1C03               	skipc
  6661  0083  2869               	goto	l5211
  6662  0084  084D               	movf	processGestureData@i,w
  6663  0085  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  6664  0086  0086               	movwf	6
  6665  0087  3002               	movlw	2	; select bank4/5
  6666  0088  0087               	movwf	7
  6667  0089  300B               	movlw	11
  6668  008A  0201               	subwf	1,w
  6669  008B  1C03               	skipc
  6670  008C  2869               	goto	l5211
  6671  008D  084D               	movf	processGestureData@i,w
  6672  008E  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  6673  008F  0086               	movwf	6
  6674  0090  3002               	movlw	2	; select bank4/5
  6675  0091  0087               	movwf	7
  6676  0092  300B               	movlw	11
  6677  0093  0201               	subwf	1,w
  6678  0094  1C03               	skipc
  6679  0095  2869               	goto	l5211
  6680  0096  084D               	movf	processGestureData@i,w
  6681  0097  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  6682  0098  0086               	movwf	6
  6683  0099  3002               	movlw	2	; select bank4/5
  6684  009A  0087               	movwf	7
  6685  009B  300B               	movlw	11
  6686  009C  0201               	subwf	1,w
  6687  009D  1C03               	skipc
  6688  009E  2869               	goto	l5211
  6689                           
  6690                           ;APDS9960.c: 688:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 690:   
      +                                        u_first = gesture_data_.u_data[i];
  6691  009F  084D               	movf	processGestureData@i,w
  6692  00A0  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  6693  00A1  0086               	movwf	6
  6694  00A2  3002               	movlw	2	; select bank4/5
  6695  00A3  0087               	movwf	7
  6696  00A4  0801               	movf	1,w
  6697  00A5  00AF               	movwf	??_processGestureData
  6698  00A6  082F               	movf	??_processGestureData,w
  6699  00A7  00C5               	movwf	processGestureData@u_first
  6700                           
  6701                           ;APDS9960.c: 691:                 d_first = gesture_data_.d_data[i];
  6702  00A8  084D               	movf	processGestureData@i,w
  6703  00A9  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  6704  00AA  0086               	movwf	6
  6705  00AB  3002               	movlw	2	; select bank4/5
  6706  00AC  0087               	movwf	7
  6707  00AD  0801               	movf	1,w
  6708  00AE  00AF               	movwf	??_processGestureData
  6709  00AF  082F               	movf	??_processGestureData,w
  6710  00B0  00C6               	movwf	processGestureData@d_first
  6711                           
  6712                           ;APDS9960.c: 692:                 l_first = gesture_data_.l_data[i];
  6713  00B1  084D               	movf	processGestureData@i,w
  6714  00B2  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  6715  00B3  0086               	movwf	6
  6716  00B4  3002               	movlw	2	; select bank4/5
  6717  00B5  0087               	movwf	7
  6718  00B6  0801               	movf	1,w
  6719  00B7  00AF               	movwf	??_processGestureData
  6720  00B8  082F               	movf	??_processGestureData,w
  6721  00B9  00C7               	movwf	processGestureData@l_first
  6722                           
  6723                           ;APDS9960.c: 693:                 r_first = gesture_data_.r_data[i];
  6724  00BA  084D               	movf	processGestureData@i,w
  6725  00BB  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  6726  00BC  0086               	movwf	6
  6727  00BD  3002               	movlw	2	; select bank4/5
  6728  00BE  0087               	movwf	7
  6729  00BF  0801               	movf	1,w
  6730  00C0  00AF               	movwf	??_processGestureData
  6731  00C1  082F               	movf	??_processGestureData,w
  6732  00C2  00C8               	movwf	processGestureData@r_first
  6733  00C3                     l5213:	
  6734                           
  6735                           ;APDS9960.c: 699:         if( (u_first == 0) || (d_first == 0) || (l_first == 0) || (r_f
      +                          irst == 0) ) {
  6736  00C3  0020               	movlb	0	; select bank0
  6737  00C4  0845               	movf	processGestureData@u_first,w
  6738  00C5  1903               	btfsc	3,2
  6739  00C6  285C               	goto	l5191
  6740  00C7  0846               	movf	processGestureData@d_first,w
  6741  00C8  1903               	btfsc	3,2
  6742  00C9  285C               	goto	l5191
  6743  00CA  0847               	movf	processGestureData@l_first,w
  6744  00CB  1903               	btfsc	3,2
  6745  00CC  285C               	goto	l5191
  6746  00CD  0848               	movf	processGestureData@r_first,w
  6747  00CE  1903               	btfsc	3,2
  6748  00CF  285C               	goto	l5191
  6749                           
  6750                           ;APDS9960.c: 705:         for( i = gesture_data_.total_gestures - 1; i >= 0; i-- ) {
  6751  00D0  0024               	movlb	4	; select bank4
  6752  00D1  0861               	movf	(_gesture_data_^(0+512)+65),w
  6753  00D2  3EFF               	addlw	255
  6754  00D3  0020               	movlb	0	; select bank0
  6755  00D4  00CD               	movwf	processGestureData@i
  6756  00D5  30FF               	movlw	255
  6757  00D6  1803               	skipnc
  6758  00D7  3000               	movlw	0
  6759  00D8  00CE               	movwf	processGestureData@i+1
  6760                           
  6761                           ;APDS9960.c: 716:                 break;
  6762  00D9  28DE               	goto	l5227
  6763  00DA                     l5241:	
  6764                           
  6765                           ;APDS9960.c: 718:         }
  6766  00DA  30FF               	movlw	255
  6767  00DB  07CD               	addwf	processGestureData@i,f
  6768  00DC  30FF               	movlw	255
  6769  00DD  3DCE               	addwfc	processGestureData@i+1,f
  6770  00DE                     l5227:	
  6771  00DE  1BCE               	btfsc	processGestureData@i+1,7
  6772  00DF  2928               	goto	l5245
  6773                           
  6774                           ;APDS9960.c: 707:             if( (gesture_data_.u_data[i] > 10) &&
  6775  00E0  084D               	movf	processGestureData@i,w
  6776  00E1  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  6777  00E2  0086               	movwf	6
  6778  00E3  3002               	movlw	2	; select bank4/5
  6779  00E4  0087               	movwf	7
  6780  00E5  300B               	movlw	11
  6781  00E6  0201               	subwf	1,w
  6782  00E7  1C03               	skipc
  6783  00E8  28DA               	goto	l5241
  6784  00E9  084D               	movf	processGestureData@i,w
  6785  00EA  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  6786  00EB  0086               	movwf	6
  6787  00EC  3002               	movlw	2	; select bank4/5
  6788  00ED  0087               	movwf	7
  6789  00EE  300B               	movlw	11
  6790  00EF  0201               	subwf	1,w
  6791  00F0  1C03               	skipc
  6792  00F1  28DA               	goto	l5241
  6793  00F2  084D               	movf	processGestureData@i,w
  6794  00F3  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  6795  00F4  0086               	movwf	6
  6796  00F5  3002               	movlw	2	; select bank4/5
  6797  00F6  0087               	movwf	7
  6798  00F7  300B               	movlw	11
  6799  00F8  0201               	subwf	1,w
  6800  00F9  1C03               	skipc
  6801  00FA  28DA               	goto	l5241
  6802  00FB  084D               	movf	processGestureData@i,w
  6803  00FC  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  6804  00FD  0086               	movwf	6
  6805  00FE  3002               	movlw	2	; select bank4/5
  6806  00FF  0087               	movwf	7
  6807  0100  300B               	movlw	11
  6808  0101  0201               	subwf	1,w
  6809  0102  1C03               	skipc
  6810  0103  28DA               	goto	l5241
  6811                           
  6812                           ;APDS9960.c: 710:                 (gesture_data_.r_data[i] > 10) ) {;APDS9960.c: 712:   
      +                                        u_last = gesture_data_.u_data[i];
  6813  0104  084D               	movf	processGestureData@i,w
  6814  0105  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  6815  0106  0086               	movwf	6
  6816  0107  3002               	movlw	2	; select bank4/5
  6817  0108  0087               	movwf	7
  6818  0109  0801               	movf	1,w
  6819  010A  00AF               	movwf	??_processGestureData
  6820  010B  082F               	movf	??_processGestureData,w
  6821  010C  00C1               	movwf	processGestureData@u_last
  6822                           
  6823                           ;APDS9960.c: 713:                 d_last = gesture_data_.d_data[i];
  6824  010D  084D               	movf	processGestureData@i,w
  6825  010E  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  6826  010F  0086               	movwf	6
  6827  0110  3002               	movlw	2	; select bank4/5
  6828  0111  0087               	movwf	7
  6829  0112  0801               	movf	1,w
  6830  0113  00AF               	movwf	??_processGestureData
  6831  0114  082F               	movf	??_processGestureData,w
  6832  0115  00C2               	movwf	processGestureData@d_last
  6833                           
  6834                           ;APDS9960.c: 714:                 l_last = gesture_data_.l_data[i];
  6835  0116  084D               	movf	processGestureData@i,w
  6836  0117  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  6837  0118  0086               	movwf	6
  6838  0119  3002               	movlw	2	; select bank4/5
  6839  011A  0087               	movwf	7
  6840  011B  0801               	movf	1,w
  6841  011C  00AF               	movwf	??_processGestureData
  6842  011D  082F               	movf	??_processGestureData,w
  6843  011E  00C3               	movwf	processGestureData@l_last
  6844                           
  6845                           ;APDS9960.c: 715:                 r_last = gesture_data_.r_data[i];
  6846  011F  084D               	movf	processGestureData@i,w
  6847  0120  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  6848  0121  0086               	movwf	6
  6849  0122  3002               	movlw	2	; select bank4/5
  6850  0123  0087               	movwf	7
  6851  0124  0801               	movf	1,w
  6852  0125  00AF               	movwf	??_processGestureData
  6853  0126  082F               	movf	??_processGestureData,w
  6854  0127  00C4               	movwf	processGestureData@r_last
  6855  0128                     l5245:	
  6856                           
  6857                           ;APDS9960.c: 722:     ud_ratio_first = ((u_first - d_first) * 100) / (u_first + d_first)
      +                          ;
  6858  0128  0020               	movlb	0	; select bank0
  6859  0129  0845               	movf	processGestureData@u_first,w
  6860  012A  0746               	addwf	processGestureData@d_first,w
  6861  012B  00A6               	movwf	___awdiv@divisor
  6862  012C  01A7               	clrf	___awdiv@divisor+1
  6863  012D  0DA7               	rlf	___awdiv@divisor+1,f
  6864  012E  0846               	movf	processGestureData@d_first,w
  6865  012F  0245               	subwf	processGestureData@u_first,w
  6866  0130  00A0               	movwf	___wmul@multiplier
  6867  0131  01A1               	clrf	___wmul@multiplier+1
  6868  0132  1C03               	skipc
  6869  0133  03A1               	decf	___wmul@multiplier+1,f
  6870  0134  3064               	movlw	100
  6871  0135  00A2               	movwf	___wmul@multiplicand
  6872  0136  3000               	movlw	0
  6873  0137  00A3               	movwf	___wmul@multiplicand+1
  6874  0138  318C  2448  3180   	fcall	___wmul
  6875  013B  0020               	movlb	0	; select bank0
  6876  013C  0821               	movf	?___wmul+1,w
  6877  013D  00A9               	movwf	___awdiv@dividend+1
  6878  013E  0820               	movf	?___wmul,w
  6879  013F  00A8               	movwf	___awdiv@dividend
  6880  0140  3187  2711  3180   	fcall	___awdiv
  6881  0143  0020               	movlb	0	; select bank0
  6882  0144  0827               	movf	?___awdiv+1,w
  6883  0145  00B2               	movwf	processGestureData@ud_ratio_first+1
  6884  0146  0826               	movf	?___awdiv,w
  6885  0147  00B1               	movwf	processGestureData@ud_ratio_first
  6886                           
  6887                           ;APDS9960.c: 723:     lr_ratio_first = ((l_first - r_first) * 100) / (l_first + r_first)
      +                          ;
  6888  0148  0847               	movf	processGestureData@l_first,w
  6889  0149  0748               	addwf	processGestureData@r_first,w
  6890  014A  00A6               	movwf	___awdiv@divisor
  6891  014B  01A7               	clrf	___awdiv@divisor+1
  6892  014C  0DA7               	rlf	___awdiv@divisor+1,f
  6893  014D  0848               	movf	processGestureData@r_first,w
  6894  014E  0247               	subwf	processGestureData@l_first,w
  6895  014F  00A0               	movwf	___wmul@multiplier
  6896  0150  01A1               	clrf	___wmul@multiplier+1
  6897  0151  1C03               	skipc
  6898  0152  03A1               	decf	___wmul@multiplier+1,f
  6899  0153  3064               	movlw	100
  6900  0154  00A2               	movwf	___wmul@multiplicand
  6901  0155  3000               	movlw	0
  6902  0156  00A3               	movwf	___wmul@multiplicand+1
  6903  0157  318C  2448  3180   	fcall	___wmul
  6904  015A  0020               	movlb	0	; select bank0
  6905  015B  0821               	movf	?___wmul+1,w
  6906  015C  00A9               	movwf	___awdiv@dividend+1
  6907  015D  0820               	movf	?___wmul,w
  6908  015E  00A8               	movwf	___awdiv@dividend
  6909  015F  3187  2711  3180   	fcall	___awdiv
  6910  0162  0020               	movlb	0	; select bank0
  6911  0163  0827               	movf	?___awdiv+1,w
  6912  0164  00B4               	movwf	processGestureData@lr_ratio_first+1
  6913  0165  0826               	movf	?___awdiv,w
  6914  0166  00B3               	movwf	processGestureData@lr_ratio_first
  6915                           
  6916                           ;APDS9960.c: 724:     ud_ratio_last = ((u_last - d_last) * 100) / (u_last + d_last);
  6917  0167  0841               	movf	processGestureData@u_last,w
  6918  0168  0742               	addwf	processGestureData@d_last,w
  6919  0169  00A6               	movwf	___awdiv@divisor
  6920  016A  01A7               	clrf	___awdiv@divisor+1
  6921  016B  0DA7               	rlf	___awdiv@divisor+1,f
  6922  016C  0842               	movf	processGestureData@d_last,w
  6923  016D  0241               	subwf	processGestureData@u_last,w
  6924  016E  00A0               	movwf	___wmul@multiplier
  6925  016F  01A1               	clrf	___wmul@multiplier+1
  6926  0170  1C03               	skipc
  6927  0171  03A1               	decf	___wmul@multiplier+1,f
  6928  0172  3064               	movlw	100
  6929  0173  00A2               	movwf	___wmul@multiplicand
  6930  0174  3000               	movlw	0
  6931  0175  00A3               	movwf	___wmul@multiplicand+1
  6932  0176  318C  2448  3180   	fcall	___wmul
  6933  0179  0020               	movlb	0	; select bank0
  6934  017A  0821               	movf	?___wmul+1,w
  6935  017B  00A9               	movwf	___awdiv@dividend+1
  6936  017C  0820               	movf	?___wmul,w
  6937  017D  00A8               	movwf	___awdiv@dividend
  6938  017E  3187  2711  3180   	fcall	___awdiv
  6939  0181  0020               	movlb	0	; select bank0
  6940  0182  0827               	movf	?___awdiv+1,w
  6941  0183  00B6               	movwf	processGestureData@ud_ratio_last+1
  6942  0184  0826               	movf	?___awdiv,w
  6943  0185  00B5               	movwf	processGestureData@ud_ratio_last
  6944                           
  6945                           ;APDS9960.c: 725:     lr_ratio_last = ((l_last - r_last) * 100) / (l_last + r_last);
  6946  0186  0843               	movf	processGestureData@l_last,w
  6947  0187  0744               	addwf	processGestureData@r_last,w
  6948  0188  00A6               	movwf	___awdiv@divisor
  6949  0189  01A7               	clrf	___awdiv@divisor+1
  6950  018A  0DA7               	rlf	___awdiv@divisor+1,f
  6951  018B  0844               	movf	processGestureData@r_last,w
  6952  018C  0243               	subwf	processGestureData@l_last,w
  6953  018D  00A0               	movwf	___wmul@multiplier
  6954  018E  01A1               	clrf	___wmul@multiplier+1
  6955  018F  1C03               	skipc
  6956  0190  03A1               	decf	___wmul@multiplier+1,f
  6957  0191  3064               	movlw	100
  6958  0192  00A2               	movwf	___wmul@multiplicand
  6959  0193  3000               	movlw	0
  6960  0194  00A3               	movwf	___wmul@multiplicand+1
  6961  0195  318C  2448  3180   	fcall	___wmul
  6962  0198  0020               	movlb	0	; select bank0
  6963  0199  0821               	movf	?___wmul+1,w
  6964  019A  00A9               	movwf	___awdiv@dividend+1
  6965  019B  0820               	movf	?___wmul,w
  6966  019C  00A8               	movwf	___awdiv@dividend
  6967  019D  3187  2711  3180   	fcall	___awdiv
  6968  01A0  0020               	movlb	0	; select bank0
  6969  01A1  0827               	movf	?___awdiv+1,w
  6970  01A2  00B8               	movwf	processGestureData@lr_ratio_last+1
  6971  01A3  0826               	movf	?___awdiv,w
  6972  01A4  00B7               	movwf	processGestureData@lr_ratio_last
  6973                           
  6974                           ;APDS9960.c: 728:     ud_delta = ud_ratio_last - ud_ratio_first;
  6975  01A5  0831               	movf	processGestureData@ud_ratio_first,w
  6976  01A6  0235               	subwf	processGestureData@ud_ratio_last,w
  6977  01A7  00C9               	movwf	processGestureData@ud_delta
  6978  01A8  0832               	movf	processGestureData@ud_ratio_first+1,w
  6979  01A9  3B36               	subwfb	processGestureData@ud_ratio_last+1,w
  6980  01AA  00CA               	movwf	processGestureData@ud_delta+1
  6981                           
  6982                           ;APDS9960.c: 729:     lr_delta = lr_ratio_last - lr_ratio_first;
  6983  01AB  0833               	movf	processGestureData@lr_ratio_first,w
  6984  01AC  0237               	subwf	processGestureData@lr_ratio_last,w
  6985  01AD  00CB               	movwf	processGestureData@lr_delta
  6986  01AE  0834               	movf	processGestureData@lr_ratio_first+1,w
  6987  01AF  3B38               	subwfb	processGestureData@lr_ratio_last+1,w
  6988  01B0  00CC               	movwf	processGestureData@lr_delta+1
  6989                           
  6990                           ;APDS9960.c: 732:     gesture_ud_delta_ += ud_delta;
  6991  01B1  0849               	movf	processGestureData@ud_delta,w
  6992  01B2  07EB               	addwf	_gesture_ud_delta_,f
  6993  01B3  084A               	movf	processGestureData@ud_delta+1,w
  6994  01B4  3DEC               	addwfc	_gesture_ud_delta_+1,f
  6995                           
  6996                           ;APDS9960.c: 733:     gesture_lr_delta_ += lr_delta;
  6997  01B5  084B               	movf	processGestureData@lr_delta,w
  6998  01B6  07E9               	addwf	_gesture_lr_delta_,f
  6999  01B7  084C               	movf	processGestureData@lr_delta+1,w
  7000  01B8  3DEA               	addwfc	_gesture_lr_delta_+1,f
  7001                           
  7002                           ;APDS9960.c: 736:     if( gesture_ud_delta_ >= 50 ) {
  7003  01B9  086C               	movf	_gesture_ud_delta_+1,w
  7004  01BA  3A80               	xorlw	128
  7005  01BB  00AF               	movwf	??_processGestureData
  7006  01BC  3080               	movlw	128
  7007  01BD  022F               	subwf	??_processGestureData,w
  7008  01BE  1D03               	skipz
  7009  01BF  29C2               	goto	u4265
  7010  01C0  3032               	movlw	50
  7011  01C1  026B               	subwf	_gesture_ud_delta_,w
  7012  01C2                     u4265:	
  7013  01C2  1C03               	skipc
  7014  01C3  29C9               	goto	l5259
  7015                           
  7016                           ;APDS9960.c: 737:         gesture_ud_count_ = 1;
  7017  01C4  3001               	movlw	1
  7018  01C5  0020               	movlb	0	; select bank0
  7019  01C6  00E7               	movwf	_gesture_ud_count_
  7020  01C7  3000               	movlw	0
  7021  01C8  29D9               	goto	L2
  7022  01C9                     l5259:	
  7023                           ;APDS9960.c: 738:     } else if( gesture_ud_delta_ <= -50 ) {
  7024                           
  7025  01C9  0020               	movlb	0	; select bank0
  7026  01CA  086C               	movf	_gesture_ud_delta_+1,w
  7027  01CB  3A80               	xorlw	128
  7028  01CC  00AF               	movwf	??_processGestureData
  7029  01CD  307F               	movlw	127
  7030  01CE  022F               	subwf	??_processGestureData,w
  7031  01CF  1D03               	skipz
  7032  01D0  29D3               	goto	u4275
  7033  01D1  30CF               	movlw	207
  7034  01D2  026B               	subwf	_gesture_ud_delta_,w
  7035  01D3                     u4275:	
  7036  01D3  1803               	skipnc
  7037  01D4  29DB               	goto	l5263
  7038                           
  7039                           ;APDS9960.c: 739:         gesture_ud_count_ = -1;
  7040  01D5  30FF               	movlw	255
  7041  01D6  0020               	movlb	0	; select bank0
  7042  01D7  00E7               	movwf	_gesture_ud_count_
  7043  01D8  30FF               	movlw	255
  7044  01D9                     L2:	
  7045  01D9  00E8               	movwf	_gesture_ud_count_+1
  7046                           
  7047                           ;APDS9960.c: 740:     } else {
  7048  01DA  29DE               	goto	l5265
  7049  01DB                     l5263:	
  7050                           
  7051                           ;APDS9960.c: 741:         gesture_ud_count_ = 0;
  7052  01DB  0020               	movlb	0	; select bank0
  7053  01DC  01E7               	clrf	_gesture_ud_count_
  7054  01DD  01E8               	clrf	_gesture_ud_count_+1
  7055  01DE                     l5265:	
  7056                           
  7057                           ;APDS9960.c: 745:     if( gesture_lr_delta_ >= 50 ) {
  7058  01DE  086A               	movf	_gesture_lr_delta_+1,w
  7059  01DF  3A80               	xorlw	128
  7060  01E0  00AF               	movwf	??_processGestureData
  7061  01E1  3080               	movlw	128
  7062  01E2  022F               	subwf	??_processGestureData,w
  7063  01E3  1D03               	skipz
  7064  01E4  29E7               	goto	u4285
  7065  01E5  3032               	movlw	50
  7066  01E6  0269               	subwf	_gesture_lr_delta_,w
  7067  01E7                     u4285:	
  7068  01E7  1C03               	skipc
  7069  01E8  29EE               	goto	l5269
  7070                           
  7071                           ;APDS9960.c: 746:         gesture_lr_count_ = 1;
  7072  01E9  3001               	movlw	1
  7073  01EA  0020               	movlb	0	; select bank0
  7074  01EB  00E5               	movwf	_gesture_lr_count_
  7075  01EC  3000               	movlw	0
  7076  01ED  29FE               	goto	L3
  7077  01EE                     l5269:	
  7078                           ;APDS9960.c: 747:     } else if( gesture_lr_delta_ <= -50 ) {
  7079                           
  7080  01EE  0020               	movlb	0	; select bank0
  7081  01EF  086A               	movf	_gesture_lr_delta_+1,w
  7082  01F0  3A80               	xorlw	128
  7083  01F1  00AF               	movwf	??_processGestureData
  7084  01F2  307F               	movlw	127
  7085  01F3  022F               	subwf	??_processGestureData,w
  7086  01F4  1D03               	skipz
  7087  01F5  29F8               	goto	u4295
  7088  01F6  30CF               	movlw	207
  7089  01F7  0269               	subwf	_gesture_lr_delta_,w
  7090  01F8                     u4295:	
  7091  01F8  1803               	skipnc
  7092  01F9  2A00               	goto	l5273
  7093                           
  7094                           ;APDS9960.c: 748:         gesture_lr_count_ = -1;
  7095  01FA  30FF               	movlw	255
  7096  01FB  0020               	movlb	0	; select bank0
  7097  01FC  00E5               	movwf	_gesture_lr_count_
  7098  01FD  30FF               	movlw	255
  7099  01FE                     L3:	
  7100  01FE  00E6               	movwf	_gesture_lr_count_+1
  7101                           
  7102                           ;APDS9960.c: 749:     } else {
  7103  01FF  2A03               	goto	l5275
  7104  0200                     l5273:	
  7105                           
  7106                           ;APDS9960.c: 750:         gesture_lr_count_ = 0;
  7107  0200  0020               	movlb	0	; select bank0
  7108  0201  01E5               	clrf	_gesture_lr_count_
  7109  0202  01E6               	clrf	_gesture_lr_count_+1
  7110  0203                     l5275:	
  7111                           
  7112                           ;APDS9960.c: 754:     if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 0) ) {
  7113  0203  0867               	movf	_gesture_ud_count_,w
  7114  0204  0468               	iorwf	_gesture_ud_count_+1,w
  7115  0205  1D03               	btfss	3,2
  7116  0206  2AA6               	goto	l5319
  7117  0207  0865               	movf	_gesture_lr_count_,w
  7118  0208  0466               	iorwf	_gesture_lr_count_+1,w
  7119  0209  1D03               	btfss	3,2
  7120  020A  2AA6               	goto	l5319
  7121                           
  7122                           ;APDS9960.c: 755:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  7123  020B  084A               	movf	processGestureData@ud_delta+1,w
  7124  020C  3A80               	xorlw	128
  7125  020D  00AF               	movwf	??_processGestureData
  7126  020E  3080               	movlw	128
  7127  020F  022F               	subwf	??_processGestureData,w
  7128  0210  1D03               	skipz
  7129  0211  2A14               	goto	u4325
  7130  0212  3001               	movlw	1
  7131  0213  0249               	subwf	processGestureData@ud_delta,w
  7132  0214                     u4325:	
  7133  0214  1803               	skipnc
  7134  0215  2A23               	goto	l5283
  7135  0216  0020               	movlb	0	; select bank0
  7136  0217  0949               	comf	processGestureData@ud_delta,w
  7137  0218  00AF               	movwf	??_processGestureData
  7138  0219  094A               	comf	processGestureData@ud_delta+1,w
  7139  021A  00B0               	movwf	??_processGestureData+1
  7140  021B  0AAF               	incf	??_processGestureData,f
  7141  021C  1903               	skipnz
  7142  021D  0AB0               	incf	??_processGestureData+1,f
  7143  021E  082F               	movf	??_processGestureData,w
  7144  021F  00B9               	movwf	_processGestureData$1272
  7145  0220  0830               	movf	??_processGestureData+1,w
  7146  0221  00BA               	movwf	_processGestureData$1272+1
  7147  0222  2A28               	goto	l879
  7148  0223                     l5283:	
  7149  0223  0020               	movlb	0	; select bank0
  7150  0224  084A               	movf	processGestureData@ud_delta+1,w
  7151  0225  00BA               	movwf	_processGestureData$1272+1
  7152  0226  0849               	movf	processGestureData@ud_delta,w
  7153  0227  00B9               	movwf	_processGestureData$1272
  7154  0228                     l879:	
  7155  0228  083A               	movf	_processGestureData$1272+1,w
  7156  0229  3A80               	xorlw	128
  7157  022A  00AF               	movwf	??_processGestureData
  7158  022B  3080               	movlw	128
  7159  022C  022F               	subwf	??_processGestureData,w
  7160  022D  1D03               	skipz
  7161  022E  2A31               	goto	u4335
  7162  022F  3014               	movlw	20
  7163  0230  0239               	subwf	_processGestureData$1272,w
  7164  0231                     u4335:	
  7165  0231  1803               	skipnc
  7166  0232  285C               	goto	l5191
  7167  0233  0020               	movlb	0	; select bank0
  7168  0234  084C               	movf	processGestureData@lr_delta+1,w
  7169  0235  3A80               	xorlw	128
  7170  0236  00AF               	movwf	??_processGestureData
  7171  0237  3080               	movlw	128
  7172  0238  022F               	subwf	??_processGestureData,w
  7173  0239  1D03               	skipz
  7174  023A  2A3D               	goto	u4345
  7175  023B  3001               	movlw	1
  7176  023C  024B               	subwf	processGestureData@lr_delta,w
  7177  023D                     u4345:	
  7178  023D  1803               	skipnc
  7179  023E  2A4C               	goto	l5289
  7180  023F  0020               	movlb	0	; select bank0
  7181  0240  094B               	comf	processGestureData@lr_delta,w
  7182  0241  00AF               	movwf	??_processGestureData
  7183  0242  094C               	comf	processGestureData@lr_delta+1,w
  7184  0243  00B0               	movwf	??_processGestureData+1
  7185  0244  0AAF               	incf	??_processGestureData,f
  7186  0245  1903               	skipnz
  7187  0246  0AB0               	incf	??_processGestureData+1,f
  7188  0247  082F               	movf	??_processGestureData,w
  7189  0248  00BB               	movwf	_processGestureData$1273
  7190  0249  0830               	movf	??_processGestureData+1,w
  7191  024A  00BC               	movwf	_processGestureData$1273+1
  7192  024B  2A51               	goto	l883
  7193  024C                     l5289:	
  7194  024C  0020               	movlb	0	; select bank0
  7195  024D  084C               	movf	processGestureData@lr_delta+1,w
  7196  024E  00BC               	movwf	_processGestureData$1273+1
  7197  024F  084B               	movf	processGestureData@lr_delta,w
  7198  0250  00BB               	movwf	_processGestureData$1273
  7199  0251                     l883:	
  7200  0251  083C               	movf	_processGestureData$1273+1,w
  7201  0252  3A80               	xorlw	128
  7202  0253  00AF               	movwf	??_processGestureData
  7203  0254  3080               	movlw	128
  7204  0255  022F               	subwf	??_processGestureData,w
  7205  0256  1D03               	skipz
  7206  0257  2A5A               	goto	u4355
  7207  0258  3014               	movlw	20
  7208  0259  023B               	subwf	_processGestureData$1273,w
  7209  025A                     u4355:	
  7210  025A  1803               	skipnc
  7211  025B  285C               	goto	l5191
  7212                           
  7213                           ;APDS9960.c: 756: ;APDS9960.c: 758:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  7214  025C  0020               	movlb	0	; select bank0
  7215  025D  0849               	movf	processGestureData@ud_delta,w
  7216  025E  044A               	iorwf	processGestureData@ud_delta+1,w
  7217  025F  1D03               	btfss	3,2
  7218  0260  2A6A               	goto	l5297
  7219  0261  084B               	movf	processGestureData@lr_delta,w
  7220  0262  044C               	iorwf	processGestureData@lr_delta+1,w
  7221  0263  1D03               	btfss	3,2
  7222  0264  2A6A               	goto	l5297
  7223                           
  7224                           ;APDS9960.c: 759:                 gesture_near_count_++;
  7225  0265  3001               	movlw	1
  7226  0266  07E3               	addwf	_gesture_near_count_,f
  7227  0267  3000               	movlw	0
  7228  0268  3DE4               	addwfc	_gesture_near_count_+1,f
  7229                           
  7230                           ;APDS9960.c: 760:             } else if( (ud_delta != 0) || (lr_delta != 0) ) {
  7231  0269  2A76               	goto	l885
  7232  026A                     l5297:	
  7233  026A  0849               	movf	processGestureData@ud_delta,w
  7234  026B  044A               	iorwf	processGestureData@ud_delta+1,w
  7235  026C  1D03               	btfss	3,2
  7236  026D  2A72               	goto	l5301
  7237  026E  084B               	movf	processGestureData@lr_delta,w
  7238  026F  044C               	iorwf	processGestureData@lr_delta+1,w
  7239  0270  1903               	btfsc	3,2
  7240  0271  2A76               	goto	l885
  7241  0272                     l5301:	
  7242                           
  7243                           ;APDS9960.c: 761:                 gesture_far_count_++;
  7244  0272  3001               	movlw	1
  7245  0273  07E1               	addwf	_gesture_far_count_,f
  7246  0274  3000               	movlw	0
  7247  0275  3DE2               	addwfc	_gesture_far_count_+1,f
  7248  0276                     l885:	
  7249                           
  7250                           ;APDS9960.c: 764:             if( (gesture_near_count_ >= 10) && (gesture_far_count_ >= 
      +                          2) ) {
  7251  0276  0864               	movf	_gesture_near_count_+1,w
  7252  0277  3A80               	xorlw	128
  7253  0278  00AF               	movwf	??_processGestureData
  7254  0279  3080               	movlw	128
  7255  027A  022F               	subwf	??_processGestureData,w
  7256  027B  1D03               	skipz
  7257  027C  2A7F               	goto	u4405
  7258  027D  300A               	movlw	10
  7259  027E  0263               	subwf	_gesture_near_count_,w
  7260  027F                     u4405:	
  7261  027F  1C03               	skipc
  7262  0280  285C               	goto	l5191
  7263  0281  0020               	movlb	0	; select bank0
  7264  0282  0862               	movf	_gesture_far_count_+1,w
  7265  0283  3A80               	xorlw	128
  7266  0284  00AF               	movwf	??_processGestureData
  7267  0285  3080               	movlw	128
  7268  0286  022F               	subwf	??_processGestureData,w
  7269  0287  1D03               	skipz
  7270  0288  2A8B               	goto	u4415
  7271  0289  3002               	movlw	2
  7272  028A  0261               	subwf	_gesture_far_count_,w
  7273  028B                     u4415:	
  7274  028B  1C03               	skipc
  7275  028C  285C               	goto	l5191
  7276                           
  7277                           ;APDS9960.c: 765:                 if( (ud_delta == 0) && (lr_delta == 0) ) {
  7278  028D  0020               	movlb	0	; select bank0
  7279  028E  0849               	movf	processGestureData@ud_delta,w
  7280  028F  044A               	iorwf	processGestureData@ud_delta+1,w
  7281  0290  1D03               	btfss	3,2
  7282  0291  2A98               	goto	l5311
  7283  0292  084B               	movf	processGestureData@lr_delta,w
  7284  0293  044C               	iorwf	processGestureData@lr_delta+1,w
  7285  0294  1D03               	btfss	3,2
  7286  0295  2A98               	goto	l5311
  7287                           
  7288                           ;APDS9960.c: 766:                     gesture_state_ = NEAR_STATE;
  7289  0296  3001               	movlw	1
  7290  0297  2AA1               	goto	L4
  7291  0298                     l5311:	
  7292                           ;APDS9960.c: 767:                 } else if( (ud_delta != 0) && (lr_delta != 0) ) {
  7293                           
  7294  0298  0849               	movf	processGestureData@ud_delta,w
  7295  0299  044A               	iorwf	processGestureData@ud_delta+1,w
  7296  029A  1903               	btfsc	3,2
  7297  029B  2AA4               	goto	l891
  7298  029C  084B               	movf	processGestureData@lr_delta,w
  7299  029D  044C               	iorwf	processGestureData@lr_delta+1,w
  7300  029E  1903               	btfsc	3,2
  7301  029F  2AA4               	goto	l891
  7302                           
  7303                           ;APDS9960.c: 768:                     gesture_state_ = FAR_STATE;
  7304  02A0  3002               	movlw	2
  7305  02A1                     L4:	
  7306  02A1  00DF               	movwf	_gesture_state_
  7307  02A2  3000               	movlw	0
  7308  02A3  00E0               	movwf	_gesture_state_+1
  7309  02A4                     l891:	
  7310                           
  7311                           ;APDS9960.c: 770:                 return 1;
  7312  02A4  3001               	movlw	1
  7313  02A5  0008               	return
  7314  02A6                     l5319:	
  7315                           
  7316                           ;APDS9960.c: 774:         if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((l
      +                          r_delta) > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  7317  02A6  084A               	movf	processGestureData@ud_delta+1,w
  7318  02A7  3A80               	xorlw	128
  7319  02A8  00AF               	movwf	??_processGestureData
  7320  02A9  3080               	movlw	128
  7321  02AA  022F               	subwf	??_processGestureData,w
  7322  02AB  1D03               	skipz
  7323  02AC  2AAF               	goto	u4465
  7324  02AD  3001               	movlw	1
  7325  02AE  0249               	subwf	processGestureData@ud_delta,w
  7326  02AF                     u4465:	
  7327  02AF  1803               	skipnc
  7328  02B0  2ABE               	goto	l5323
  7329  02B1  0020               	movlb	0	; select bank0
  7330  02B2  0949               	comf	processGestureData@ud_delta,w
  7331  02B3  00AF               	movwf	??_processGestureData
  7332  02B4  094A               	comf	processGestureData@ud_delta+1,w
  7333  02B5  00B0               	movwf	??_processGestureData+1
  7334  02B6  0AAF               	incf	??_processGestureData,f
  7335  02B7  1903               	skipnz
  7336  02B8  0AB0               	incf	??_processGestureData+1,f
  7337  02B9  082F               	movf	??_processGestureData,w
  7338  02BA  00BD               	movwf	_processGestureData$1274
  7339  02BB  0830               	movf	??_processGestureData+1,w
  7340  02BC  00BE               	movwf	_processGestureData$1274+1
  7341  02BD  2AC3               	goto	l898
  7342  02BE                     l5323:	
  7343  02BE  0020               	movlb	0	; select bank0
  7344  02BF  084A               	movf	processGestureData@ud_delta+1,w
  7345  02C0  00BE               	movwf	_processGestureData$1274+1
  7346  02C1  0849               	movf	processGestureData@ud_delta,w
  7347  02C2  00BD               	movwf	_processGestureData$1274
  7348  02C3                     l898:	
  7349  02C3  083E               	movf	_processGestureData$1274+1,w
  7350  02C4  3A80               	xorlw	128
  7351  02C5  00AF               	movwf	??_processGestureData
  7352  02C6  3080               	movlw	128
  7353  02C7  022F               	subwf	??_processGestureData,w
  7354  02C8  1D03               	skipz
  7355  02C9  2ACC               	goto	u4475
  7356  02CA  3014               	movlw	20
  7357  02CB  023D               	subwf	_processGestureData$1274,w
  7358  02CC                     u4475:	
  7359  02CC  1803               	skipnc
  7360  02CD  285C               	goto	l5191
  7361  02CE  0020               	movlb	0	; select bank0
  7362  02CF  084C               	movf	processGestureData@lr_delta+1,w
  7363  02D0  3A80               	xorlw	128
  7364  02D1  00AF               	movwf	??_processGestureData
  7365  02D2  3080               	movlw	128
  7366  02D3  022F               	subwf	??_processGestureData,w
  7367  02D4  1D03               	skipz
  7368  02D5  2AD8               	goto	u4485
  7369  02D6  3001               	movlw	1
  7370  02D7  024B               	subwf	processGestureData@lr_delta,w
  7371  02D8                     u4485:	
  7372  02D8  1803               	skipnc
  7373  02D9  2AE7               	goto	l5329
  7374  02DA  0020               	movlb	0	; select bank0
  7375  02DB  094B               	comf	processGestureData@lr_delta,w
  7376  02DC  00AF               	movwf	??_processGestureData
  7377  02DD  094C               	comf	processGestureData@lr_delta+1,w
  7378  02DE  00B0               	movwf	??_processGestureData+1
  7379  02DF  0AAF               	incf	??_processGestureData,f
  7380  02E0  1903               	skipnz
  7381  02E1  0AB0               	incf	??_processGestureData+1,f
  7382  02E2  082F               	movf	??_processGestureData,w
  7383  02E3  00BF               	movwf	_processGestureData$1275
  7384  02E4  0830               	movf	??_processGestureData+1,w
  7385  02E5  00C0               	movwf	_processGestureData$1275+1
  7386  02E6  2AEC               	goto	l902
  7387  02E7                     l5329:	
  7388  02E7  0020               	movlb	0	; select bank0
  7389  02E8  084C               	movf	processGestureData@lr_delta+1,w
  7390  02E9  00C0               	movwf	_processGestureData$1275+1
  7391  02EA  084B               	movf	processGestureData@lr_delta,w
  7392  02EB  00BF               	movwf	_processGestureData$1275
  7393  02EC                     l902:	
  7394  02EC  0840               	movf	_processGestureData$1275+1,w
  7395  02ED  3A80               	xorlw	128
  7396  02EE  00AF               	movwf	??_processGestureData
  7397  02EF  3080               	movlw	128
  7398  02F0  022F               	subwf	??_processGestureData,w
  7399  02F1  1D03               	skipz
  7400  02F2  2AF5               	goto	u4495
  7401  02F3  3014               	movlw	20
  7402  02F4  023F               	subwf	_processGestureData$1275,w
  7403  02F5                     u4495:	
  7404  02F5  1803               	skipnc
  7405  02F6  285C               	goto	l5191
  7406                           
  7407                           ;APDS9960.c: 775: ;APDS9960.c: 777:             if( (ud_delta == 0) && (lr_delta == 0) )
      +                           {
  7408  02F7  0020               	movlb	0	; select bank0
  7409  02F8  0849               	movf	processGestureData@ud_delta,w
  7410  02F9  044A               	iorwf	processGestureData@ud_delta+1,w
  7411  02FA  1D03               	btfss	3,2
  7412  02FB  2B04               	goto	l903
  7413  02FC  084B               	movf	processGestureData@lr_delta,w
  7414  02FD  044C               	iorwf	processGestureData@lr_delta+1,w
  7415  02FE  1D03               	btfss	3,2
  7416  02FF  2B04               	goto	l903
  7417                           
  7418                           ;APDS9960.c: 778:                 gesture_near_count_++;
  7419  0300  3001               	movlw	1
  7420  0301  07E3               	addwf	_gesture_near_count_,f
  7421  0302  3000               	movlw	0
  7422  0303  3DE4               	addwfc	_gesture_near_count_+1,f
  7423  0304                     l903:	
  7424                           ;APDS9960.c: 779:             }
  7425                           
  7426                           
  7427                           ;APDS9960.c: 781:             if( gesture_near_count_ >= 10 ) {
  7428  0304  0864               	movf	_gesture_near_count_+1,w
  7429  0305  3A80               	xorlw	128
  7430  0306  00AF               	movwf	??_processGestureData
  7431  0307  3080               	movlw	128
  7432  0308  022F               	subwf	??_processGestureData,w
  7433  0309  1D03               	skipz
  7434  030A  2B0D               	goto	u4525
  7435  030B  300A               	movlw	10
  7436  030C  0263               	subwf	_gesture_near_count_,w
  7437  030D                     u4525:	
  7438  030D  1C03               	skipc
  7439  030E  285C               	goto	l5191
  7440                           
  7441                           ;APDS9960.c: 782:                 gesture_ud_count_ = 0;
  7442  030F  0020               	movlb	0	; select bank0
  7443  0310  01E7               	clrf	_gesture_ud_count_
  7444  0311  01E8               	clrf	_gesture_ud_count_+1
  7445                           
  7446                           ;APDS9960.c: 783:                 gesture_lr_count_ = 0;
  7447  0312  01E5               	clrf	_gesture_lr_count_
  7448  0313  01E6               	clrf	_gesture_lr_count_+1
  7449                           
  7450                           ;APDS9960.c: 784:                 gesture_ud_delta_ = 0;
  7451  0314  01EB               	clrf	_gesture_ud_delta_
  7452  0315  01EC               	clrf	_gesture_ud_delta_+1
  7453                           
  7454                           ;APDS9960.c: 785:                 gesture_lr_delta_ = 0;
  7455  0316  01E9               	clrf	_gesture_lr_delta_
  7456  0317  01EA               	clrf	_gesture_lr_delta_+1
  7457  0318  285C               	goto	l5191
  7458  0319                     __end_of_processGestureData:	
  7459                           
  7460                           	psect	text19
  7461  0C48                     __ptext19:	
  7462 ;; *************** function ___wmul *****************
  7463 ;; Defined at:
  7464 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7467 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  product         2    4[BANK0 ] unsigned int 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  2    0[BANK0 ] unsigned int 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        6 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    5
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_processGestureData
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function ___wmul
  7495  0C48                     ___wmul:	
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7499  0C48  0020               	movlb	0	; select bank0
  7500  0C49  01A4               	clrf	___wmul@product
  7501  0C4A  01A5               	clrf	___wmul@product+1
  7502  0C4B                     l5047:	
  7503  0C4B  1C20               	btfss	___wmul@multiplier,0
  7504  0C4C  2C51               	goto	l1191
  7505  0C4D  0822               	movf	___wmul@multiplicand,w
  7506  0C4E  07A4               	addwf	___wmul@product,f
  7507  0C4F  0823               	movf	___wmul@multiplicand+1,w
  7508  0C50  3DA5               	addwfc	___wmul@product+1,f
  7509  0C51                     l1191:	
  7510  0C51  3001               	movlw	1
  7511  0C52                     u3865:	
  7512  0C52  35A2               	lslf	___wmul@multiplicand,f
  7513  0C53  0DA3               	rlf	___wmul@multiplicand+1,f
  7514  0C54  0B89               	decfsz	9,f
  7515  0C55  2C52               	goto	u3865
  7516  0C56  3001               	movlw	1
  7517  0C57                     u3875:	
  7518  0C57  36A1               	lsrf	___wmul@multiplier+1,f
  7519  0C58  0CA0               	rrf	___wmul@multiplier,f
  7520  0C59  0B89               	decfsz	9,f
  7521  0C5A  2C57               	goto	u3875
  7522  0C5B  0820               	movf	___wmul@multiplier,w
  7523  0C5C  0421               	iorwf	___wmul@multiplier+1,w
  7524  0C5D  1D03               	btfss	3,2
  7525  0C5E  2C4B               	goto	l5047
  7526  0C5F  0825               	movf	___wmul@product+1,w
  7527  0C60  00A1               	movwf	?___wmul+1
  7528  0C61  0824               	movf	___wmul@product,w
  7529  0C62  00A0               	movwf	?___wmul
  7530  0C63  0008               	return
  7531  0C64                     __end_of___wmul:	
  7532                           
  7533                           	psect	text20
  7534  0711                     __ptext20:	
  7535 ;; *************** function ___awdiv *****************
  7536 ;; Defined at:
  7537 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  divisor         2    6[BANK0 ] int 
  7540 ;;  dividend        2    8[BANK0 ] int 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  quotient        2   13[BANK0 ] int 
  7543 ;;  sign            1   12[BANK0 ] unsigned char 
  7544 ;;  counter         1   11[BANK0 ] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  2    6[BANK0 ] int 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2, status,0
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        9 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    5
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_processGestureData
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function ___awdiv
  7570  0711                     ___awdiv:	
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7574  0711  0020               	movlb	0	; select bank0
  7575  0712  01AC               	clrf	___awdiv@sign
  7576  0713  1FA7               	btfss	___awdiv@divisor+1,7
  7577  0714  2F1C               	goto	l5067
  7578  0715  09A6               	comf	___awdiv@divisor,f
  7579  0716  09A7               	comf	___awdiv@divisor+1,f
  7580  0717  0AA6               	incf	___awdiv@divisor,f
  7581  0718  1903               	skipnz
  7582  0719  0AA7               	incf	___awdiv@divisor+1,f
  7583  071A  01AC               	clrf	___awdiv@sign
  7584  071B  0AAC               	incf	___awdiv@sign,f
  7585  071C                     l5067:	
  7586  071C  1FA9               	btfss	___awdiv@dividend+1,7
  7587  071D  2F27               	goto	l5073
  7588  071E  09A8               	comf	___awdiv@dividend,f
  7589  071F  09A9               	comf	___awdiv@dividend+1,f
  7590  0720  0AA8               	incf	___awdiv@dividend,f
  7591  0721  1903               	skipnz
  7592  0722  0AA9               	incf	___awdiv@dividend+1,f
  7593  0723  3001               	movlw	1
  7594  0724  00AA               	movwf	??___awdiv
  7595  0725  082A               	movf	??___awdiv,w
  7596  0726  06AC               	xorwf	___awdiv@sign,f
  7597  0727                     l5073:	
  7598  0727  01AD               	clrf	___awdiv@quotient
  7599  0728  01AE               	clrf	___awdiv@quotient+1
  7600  0729  0826               	movf	___awdiv@divisor,w
  7601  072A  0427               	iorwf	___awdiv@divisor+1,w
  7602  072B  1903               	btfsc	3,2
  7603  072C  2F56               	goto	l5095
  7604  072D  01AB               	clrf	___awdiv@counter
  7605  072E  0AAB               	incf	___awdiv@counter,f
  7606  072F                     l5083:	
  7607  072F  1BA7               	btfsc	___awdiv@divisor+1,7
  7608  0730  2F3B               	goto	l5085
  7609  0731  3001               	movlw	1
  7610  0732                     u3925:	
  7611  0732  35A6               	lslf	___awdiv@divisor,f
  7612  0733  0DA7               	rlf	___awdiv@divisor+1,f
  7613  0734  0B89               	decfsz	9,f
  7614  0735  2F32               	goto	u3925
  7615  0736  3001               	movlw	1
  7616  0737  00AA               	movwf	??___awdiv
  7617  0738  082A               	movf	??___awdiv,w
  7618  0739  07AB               	addwf	___awdiv@counter,f
  7619  073A  2F2F               	goto	l5083
  7620  073B                     l5085:	
  7621  073B  3001               	movlw	1
  7622  073C                     u3945:	
  7623  073C  35AD               	lslf	___awdiv@quotient,f
  7624  073D  0DAE               	rlf	___awdiv@quotient+1,f
  7625  073E  0B89               	decfsz	9,f
  7626  073F  2F3C               	goto	u3945
  7627  0740  0827               	movf	___awdiv@divisor+1,w
  7628  0741  0229               	subwf	___awdiv@dividend+1,w
  7629  0742  1D03               	skipz
  7630  0743  2F46               	goto	u3955
  7631  0744  0826               	movf	___awdiv@divisor,w
  7632  0745  0228               	subwf	___awdiv@dividend,w
  7633  0746                     u3955:	
  7634  0746  1C03               	skipc
  7635  0747  2F4D               	goto	l5091
  7636  0748  0826               	movf	___awdiv@divisor,w
  7637  0749  02A8               	subwf	___awdiv@dividend,f
  7638  074A  0827               	movf	___awdiv@divisor+1,w
  7639  074B  3BA9               	subwfb	___awdiv@dividend+1,f
  7640  074C  142D               	bsf	___awdiv@quotient,0
  7641  074D                     l5091:	
  7642  074D  3001               	movlw	1
  7643  074E                     u3965:	
  7644  074E  36A7               	lsrf	___awdiv@divisor+1,f
  7645  074F  0CA6               	rrf	___awdiv@divisor,f
  7646  0750  0B89               	decfsz	9,f
  7647  0751  2F4E               	goto	u3965
  7648  0752  3001               	movlw	1
  7649  0753  02AB               	subwf	___awdiv@counter,f
  7650  0754  1D03               	btfss	3,2
  7651  0755  2F3B               	goto	l5085
  7652  0756                     l5095:	
  7653  0756  082C               	movf	___awdiv@sign,w
  7654  0757  1903               	btfsc	3,2
  7655  0758  2F5E               	goto	l5099
  7656  0759  09AD               	comf	___awdiv@quotient,f
  7657  075A  09AE               	comf	___awdiv@quotient+1,f
  7658  075B  0AAD               	incf	___awdiv@quotient,f
  7659  075C  1903               	skipnz
  7660  075D  0AAE               	incf	___awdiv@quotient+1,f
  7661  075E                     l5099:	
  7662  075E  082E               	movf	___awdiv@quotient+1,w
  7663  075F  00A7               	movwf	?___awdiv+1
  7664  0760  082D               	movf	___awdiv@quotient,w
  7665  0761  00A6               	movwf	?___awdiv
  7666  0762  0008               	return
  7667  0763                     __end_of___awdiv:	
  7668                           
  7669                           	psect	text21
  7670  0B9D                     __ptext21:	
  7671 ;; *************** function _isGestureAvailable *****************
  7672 ;; Defined at:
  7673 ;;		line 536 in file "APDS9960.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  val             1   10[BANK0 ] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      _Bool 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;Total ram usage:        2 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    8
  7694 ;; This function calls:
  7695 ;;		_wireReadDataByte
  7696 ;; This function is called by:
  7697 ;;		_main
  7698 ;;		_readGesture
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _isGestureAvailable
  7704  0B9D                     _isGestureAvailable:	
  7705                           
  7706                           ;APDS9960.c: 538:     uint8_t val;;APDS9960.c: 541:     val=wireReadDataByte(0xAF);
  7707                           
  7708                           ;incstack = 0
  7709                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
  7710  0B9D  30AF               	movlw	175
  7711  0B9E  318C  2482  318B   	fcall	_wireReadDataByte
  7712  0BA1  0020               	movlb	0	; select bank0
  7713  0BA2  00A9               	movwf	??_isGestureAvailable
  7714  0BA3  0829               	movf	??_isGestureAvailable,w
  7715  0BA4  00AA               	movwf	isGestureAvailable@val
  7716                           
  7717                           ;APDS9960.c: 544:     val &= 0b00000001;
  7718  0BA5  3001               	movlw	1
  7719  0BA6  00A9               	movwf	??_isGestureAvailable
  7720  0BA7  0829               	movf	??_isGestureAvailable,w
  7721  0BA8  05AA               	andwf	isGestureAvailable@val,f
  7722                           
  7723                           ;APDS9960.c: 547:     if( val == 1) {
  7724  0BA9  032A               	decf	isGestureAvailable@val,w
  7725  0BAA  1D03               	btfss	3,2
  7726  0BAB  2BAE               	goto	l5117
  7727                           
  7728                           ;APDS9960.c: 548:         return 1;
  7729  0BAC  3001               	movlw	1
  7730  0BAD  0008               	return
  7731  0BAE                     l5117:	
  7732                           
  7733                           ;APDS9960.c: 550:         return 0;
  7734  0BAE  3000               	movlw	0
  7735  0BAF  0008               	return
  7736  0BB0                     __end_of_isGestureAvailable:	
  7737                           
  7738                           	psect	text22
  7739  0319                     __ptext22:	
  7740 ;; *************** function _decodeGesture *****************
  7741 ;; Defined at:
  7742 ;;		line 794 in file "APDS9960.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      _Bool 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;Total ram usage:       18 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    5
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_readGesture
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function _decodeGesture
  7772  0319                     _decodeGesture:	
  7773                           
  7774                           ;APDS9960.c: 797:     if( gesture_state_ == NEAR_STATE ) {
  7775                           
  7776                           ;incstack = 0
  7777                           ; Regs used in _decodeGesture: [wreg+status,2+status,0]
  7778  0319  0020               	movlb	0	; select bank0
  7779  031A  035F               	decf	_gesture_state_,w
  7780  031B  0460               	iorwf	_gesture_state_+1,w
  7781  031C  1D03               	btfss	3,2
  7782  031D  2B24               	goto	l5351
  7783                           
  7784                           ;APDS9960.c: 798:         gesture_motion_ = DIR_NEAR;
  7785  031E  3005               	movlw	5
  7786  031F  00DD               	movwf	_gesture_motion_
  7787  0320  3000               	movlw	0
  7788  0321  00DE               	movwf	_gesture_motion_+1
  7789                           
  7790                           ;APDS9960.c: 799:         return 1;
  7791  0322  3001               	movlw	1
  7792  0323  0008               	return
  7793  0324                     l5351:	
  7794  0324  3002               	movlw	2
  7795  0325  065F               	xorwf	_gesture_state_,w
  7796  0326  0460               	iorwf	_gesture_state_+1,w
  7797  0327  1D03               	btfss	3,2
  7798  0328  2B2F               	goto	l5357
  7799                           
  7800                           ;APDS9960.c: 801:         gesture_motion_ = DIR_FAR;
  7801  0329  3006               	movlw	6
  7802  032A  00DD               	movwf	_gesture_motion_
  7803  032B  3000               	movlw	0
  7804  032C  00DE               	movwf	_gesture_motion_+1
  7805                           
  7806                           ;APDS9960.c: 802:         return 1;
  7807  032D  3001               	movlw	1
  7808  032E  0008               	return
  7809  032F                     l5357:	
  7810                           
  7811                           ;APDS9960.c: 806:     if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 0) ) {
  7812  032F  0A67               	incf	_gesture_ud_count_,w
  7813  0330  1D03               	skipz
  7814  0331  2B3B               	goto	l5363
  7815  0332  0A68               	incf	_gesture_ud_count_+1,w
  7816  0333  1D03               	btfss	3,2
  7817  0334  2B3B               	goto	l5363
  7818  0335  0865               	movf	_gesture_lr_count_,w
  7819  0336  0466               	iorwf	_gesture_lr_count_+1,w
  7820  0337  1D03               	btfss	3,2
  7821  0338  2B3B               	goto	l5363
  7822  0339                     l5361:	
  7823                           
  7824                           ;APDS9960.c: 807:         gesture_motion_ = DIR_UP;
  7825  0339  3003               	movlw	3
  7826  033A  2B5A               	goto	L7
  7827  033B                     l5363:	
  7828                           ;APDS9960.c: 808:     } else if( (gesture_ud_count_ == 1) && (gesture_lr_count_ == 0) ) 
      +                          {
  7829                           
  7830  033B  0367               	decf	_gesture_ud_count_,w
  7831  033C  0468               	iorwf	_gesture_ud_count_+1,w
  7832  033D  1D03               	btfss	3,2
  7833  033E  2B45               	goto	l5369
  7834  033F  0865               	movf	_gesture_lr_count_,w
  7835  0340  0466               	iorwf	_gesture_lr_count_+1,w
  7836  0341  1D03               	btfss	3,2
  7837  0342  2B45               	goto	l5369
  7838  0343                     l5367:	
  7839                           
  7840                           ;APDS9960.c: 809:         gesture_motion_ = DIR_DOWN;
  7841  0343  3004               	movlw	4
  7842  0344  2B5A               	goto	L7
  7843  0345                     l5369:	
  7844                           ;APDS9960.c: 810:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 1) ) 
      +                          {
  7845                           
  7846  0345  0867               	movf	_gesture_ud_count_,w
  7847  0346  0468               	iorwf	_gesture_ud_count_+1,w
  7848  0347  1D03               	btfss	3,2
  7849  0348  2B4F               	goto	l5375
  7850  0349  0365               	decf	_gesture_lr_count_,w
  7851  034A  0466               	iorwf	_gesture_lr_count_+1,w
  7852  034B  1D03               	btfss	3,2
  7853  034C  2B4F               	goto	l5375
  7854  034D                     l5373:	
  7855                           
  7856                           ;APDS9960.c: 811:         gesture_motion_ = DIR_RIGHT;
  7857  034D  3002               	movlw	2
  7858  034E  2B5A               	goto	L7
  7859  034F                     l5375:	
  7860                           ;APDS9960.c: 812:     } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == -1) )
      +                           {
  7861                           
  7862  034F  0867               	movf	_gesture_ud_count_,w
  7863  0350  0468               	iorwf	_gesture_ud_count_+1,w
  7864  0351  1D03               	btfss	3,2
  7865  0352  2B5F               	goto	l5381
  7866  0353  0A65               	incf	_gesture_lr_count_,w
  7867  0354  1D03               	skipz
  7868  0355  2B5F               	goto	l5381
  7869  0356  0A66               	incf	_gesture_lr_count_+1,w
  7870  0357  1D03               	btfss	3,2
  7871  0358  2B5F               	goto	l5381
  7872  0359                     l5379:	
  7873                           
  7874                           ;APDS9960.c: 813:         gesture_motion_ = DIR_LEFT;
  7875  0359  3001               	movlw	1
  7876  035A                     L7:	
  7877  035A  0020               	movlb	0	; select bank0
  7878  035B  00DD               	movwf	_gesture_motion_
  7879  035C  3000               	movlw	0
  7880  035D  00DE               	movwf	_gesture_motion_+1
  7881                           
  7882                           ;APDS9960.c: 814:     } else if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 1) )
      +                           {
  7883  035E  2CA5               	goto	l5457
  7884  035F                     l5381:	
  7885  035F  0A67               	incf	_gesture_ud_count_,w
  7886  0360  1D03               	skipz
  7887  0361  2BB0               	goto	l5399
  7888  0362  0A68               	incf	_gesture_ud_count_+1,w
  7889  0363  1D03               	btfss	3,2
  7890  0364  2BB0               	goto	l5399
  7891  0365  0365               	decf	_gesture_lr_count_,w
  7892  0366  0466               	iorwf	_gesture_lr_count_+1,w
  7893  0367  1D03               	btfss	3,2
  7894  0368  2BB0               	goto	l5399
  7895                           
  7896                           ;APDS9960.c: 815:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  7897  0369  086C               	movf	_gesture_ud_delta_+1,w
  7898  036A  3A80               	xorlw	128
  7899  036B  00A0               	movwf	??_decodeGesture
  7900  036C  3080               	movlw	128
  7901  036D  0220               	subwf	??_decodeGesture,w
  7902  036E  1D03               	skipz
  7903  036F  2B72               	goto	u4655
  7904  0370  3001               	movlw	1
  7905  0371  026B               	subwf	_gesture_ud_delta_,w
  7906  0372                     u4655:	
  7907  0372  1803               	skipnc
  7908  0373  2B81               	goto	l5389
  7909  0374  0020               	movlb	0	; select bank0
  7910  0375  096B               	comf	_gesture_ud_delta_,w
  7911  0376  00A0               	movwf	??_decodeGesture
  7912  0377  096C               	comf	_gesture_ud_delta_+1,w
  7913  0378  00A1               	movwf	??_decodeGesture+1
  7914  0379  0AA0               	incf	??_decodeGesture,f
  7915  037A  1903               	skipnz
  7916  037B  0AA1               	incf	??_decodeGesture+1,f
  7917  037C  0820               	movf	??_decodeGesture,w
  7918  037D  00A2               	movwf	_decodeGesture$1277
  7919  037E  0821               	movf	??_decodeGesture+1,w
  7920  037F  00A3               	movwf	_decodeGesture$1277+1
  7921  0380  2B86               	goto	l924
  7922  0381                     l5389:	
  7923  0381  0020               	movlb	0	; select bank0
  7924  0382  086C               	movf	_gesture_ud_delta_+1,w
  7925  0383  00A3               	movwf	_decodeGesture$1277+1
  7926  0384  086B               	movf	_gesture_ud_delta_,w
  7927  0385  00A2               	movwf	_decodeGesture$1277
  7928  0386                     l924:	
  7929  0386  086A               	movf	_gesture_lr_delta_+1,w
  7930  0387  3A80               	xorlw	128
  7931  0388  00A0               	movwf	??_decodeGesture
  7932  0389  3080               	movlw	128
  7933  038A  0220               	subwf	??_decodeGesture,w
  7934  038B  1D03               	skipz
  7935  038C  2B8F               	goto	u4665
  7936  038D  3001               	movlw	1
  7937  038E  0269               	subwf	_gesture_lr_delta_,w
  7938  038F                     u4665:	
  7939  038F  1803               	skipnc
  7940  0390  2B9E               	goto	l5393
  7941  0391  0020               	movlb	0	; select bank0
  7942  0392  0969               	comf	_gesture_lr_delta_,w
  7943  0393  00A0               	movwf	??_decodeGesture
  7944  0394  096A               	comf	_gesture_lr_delta_+1,w
  7945  0395  00A1               	movwf	??_decodeGesture+1
  7946  0396  0AA0               	incf	??_decodeGesture,f
  7947  0397  1903               	skipnz
  7948  0398  0AA1               	incf	??_decodeGesture+1,f
  7949  0399  0820               	movf	??_decodeGesture,w
  7950  039A  00A4               	movwf	_decodeGesture$1278
  7951  039B  0821               	movf	??_decodeGesture+1,w
  7952  039C  00A5               	movwf	_decodeGesture$1278+1
  7953  039D  2BA3               	goto	l928
  7954  039E                     l5393:	
  7955  039E  0020               	movlb	0	; select bank0
  7956  039F  086A               	movf	_gesture_lr_delta_+1,w
  7957  03A0  00A5               	movwf	_decodeGesture$1278+1
  7958  03A1  0869               	movf	_gesture_lr_delta_,w
  7959  03A2  00A4               	movwf	_decodeGesture$1278
  7960  03A3                     l928:	
  7961  03A3  0825               	movf	_decodeGesture$1278+1,w
  7962  03A4  3A80               	xorlw	128
  7963  03A5  00A0               	movwf	??_decodeGesture
  7964  03A6  0823               	movf	_decodeGesture$1277+1,w
  7965  03A7  3A80               	xorlw	128
  7966  03A8  0220               	subwf	??_decodeGesture,w
  7967  03A9  1D03               	skipz
  7968  03AA  2BAD               	goto	u4675
  7969  03AB  0822               	movf	_decodeGesture$1277,w
  7970  03AC  0224               	subwf	_decodeGesture$1278,w
  7971  03AD                     u4675:	
  7972  03AD  1C03               	btfss	3,0
  7973  03AE  2B39               	goto	l5361
  7974  03AF  2B4D               	goto	l5373
  7975  03B0                     l5399:	
  7976  03B0  0367               	decf	_gesture_ud_count_,w
  7977  03B1  0468               	iorwf	_gesture_ud_count_+1,w
  7978  03B2  1D03               	btfss	3,2
  7979  03B3  2C01               	goto	l5417
  7980  03B4  0A65               	incf	_gesture_lr_count_,w
  7981  03B5  1D03               	skipz
  7982  03B6  2C01               	goto	l5417
  7983  03B7  0A66               	incf	_gesture_lr_count_+1,w
  7984  03B8  1D03               	btfss	3,2
  7985  03B9  2C01               	goto	l5417
  7986                           
  7987                           ;APDS9960.c: 821:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  7988  03BA  086C               	movf	_gesture_ud_delta_+1,w
  7989  03BB  3A80               	xorlw	128
  7990  03BC  00A0               	movwf	??_decodeGesture
  7991  03BD  3080               	movlw	128
  7992  03BE  0220               	subwf	??_decodeGesture,w
  7993  03BF  1D03               	skipz
  7994  03C0  2BC3               	goto	u4705
  7995  03C1  3001               	movlw	1
  7996  03C2  026B               	subwf	_gesture_ud_delta_,w
  7997  03C3                     u4705:	
  7998  03C3  1803               	skipnc
  7999  03C4  2BD2               	goto	l5407
  8000  03C5  0020               	movlb	0	; select bank0
  8001  03C6  096B               	comf	_gesture_ud_delta_,w
  8002  03C7  00A0               	movwf	??_decodeGesture
  8003  03C8  096C               	comf	_gesture_ud_delta_+1,w
  8004  03C9  00A1               	movwf	??_decodeGesture+1
  8005  03CA  0AA0               	incf	??_decodeGesture,f
  8006  03CB  1903               	skipnz
  8007  03CC  0AA1               	incf	??_decodeGesture+1,f
  8008  03CD  0820               	movf	??_decodeGesture,w
  8009  03CE  00A6               	movwf	_decodeGesture$1279
  8010  03CF  0821               	movf	??_decodeGesture+1,w
  8011  03D0  00A7               	movwf	_decodeGesture$1279+1
  8012  03D1  2BD7               	goto	l936
  8013  03D2                     l5407:	
  8014  03D2  0020               	movlb	0	; select bank0
  8015  03D3  086C               	movf	_gesture_ud_delta_+1,w
  8016  03D4  00A7               	movwf	_decodeGesture$1279+1
  8017  03D5  086B               	movf	_gesture_ud_delta_,w
  8018  03D6  00A6               	movwf	_decodeGesture$1279
  8019  03D7                     l936:	
  8020  03D7  086A               	movf	_gesture_lr_delta_+1,w
  8021  03D8  3A80               	xorlw	128
  8022  03D9  00A0               	movwf	??_decodeGesture
  8023  03DA  3080               	movlw	128
  8024  03DB  0220               	subwf	??_decodeGesture,w
  8025  03DC  1D03               	skipz
  8026  03DD  2BE0               	goto	u4715
  8027  03DE  3001               	movlw	1
  8028  03DF  0269               	subwf	_gesture_lr_delta_,w
  8029  03E0                     u4715:	
  8030  03E0  1803               	skipnc
  8031  03E1  2BEF               	goto	l5411
  8032  03E2  0020               	movlb	0	; select bank0
  8033  03E3  0969               	comf	_gesture_lr_delta_,w
  8034  03E4  00A0               	movwf	??_decodeGesture
  8035  03E5  096A               	comf	_gesture_lr_delta_+1,w
  8036  03E6  00A1               	movwf	??_decodeGesture+1
  8037  03E7  0AA0               	incf	??_decodeGesture,f
  8038  03E8  1903               	skipnz
  8039  03E9  0AA1               	incf	??_decodeGesture+1,f
  8040  03EA  0820               	movf	??_decodeGesture,w
  8041  03EB  00A8               	movwf	_decodeGesture$1280
  8042  03EC  0821               	movf	??_decodeGesture+1,w
  8043  03ED  00A9               	movwf	_decodeGesture$1280+1
  8044  03EE  2BF4               	goto	l940
  8045  03EF                     l5411:	
  8046  03EF  0020               	movlb	0	; select bank0
  8047  03F0  086A               	movf	_gesture_lr_delta_+1,w
  8048  03F1  00A9               	movwf	_decodeGesture$1280+1
  8049  03F2  0869               	movf	_gesture_lr_delta_,w
  8050  03F3  00A8               	movwf	_decodeGesture$1280
  8051  03F4                     l940:	
  8052  03F4  0829               	movf	_decodeGesture$1280+1,w
  8053  03F5  3A80               	xorlw	128
  8054  03F6  00A0               	movwf	??_decodeGesture
  8055  03F7  0827               	movf	_decodeGesture$1279+1,w
  8056  03F8  3A80               	xorlw	128
  8057  03F9  0220               	subwf	??_decodeGesture,w
  8058  03FA  1D03               	skipz
  8059  03FB  2BFE               	goto	u4725
  8060  03FC  0826               	movf	_decodeGesture$1279,w
  8061  03FD  0228               	subwf	_decodeGesture$1280,w
  8062  03FE                     u4725:	
  8063  03FE  1C03               	btfss	3,0
  8064  03FF  2B43               	goto	l5367
  8065  0400  2B59               	goto	l5379
  8066  0401                     l5417:	
  8067  0401  0A67               	incf	_gesture_ud_count_,w
  8068  0402  1D03               	skipz
  8069  0403  2C54               	goto	l5435
  8070  0404  0A68               	incf	_gesture_ud_count_+1,w
  8071  0405  1D03               	btfss	3,2
  8072  0406  2C54               	goto	l5435
  8073  0407  0A65               	incf	_gesture_lr_count_,w
  8074  0408  1D03               	skipz
  8075  0409  2C54               	goto	l5435
  8076  040A  0A66               	incf	_gesture_lr_count_+1,w
  8077  040B  1D03               	btfss	3,2
  8078  040C  2C54               	goto	l5435
  8079                           
  8080                           ;APDS9960.c: 827:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  8081  040D  086C               	movf	_gesture_ud_delta_+1,w
  8082  040E  3A80               	xorlw	128
  8083  040F  00A0               	movwf	??_decodeGesture
  8084  0410  3080               	movlw	128
  8085  0411  0220               	subwf	??_decodeGesture,w
  8086  0412  1D03               	skipz
  8087  0413  2C16               	goto	u4755
  8088  0414  3001               	movlw	1
  8089  0415  026B               	subwf	_gesture_ud_delta_,w
  8090  0416                     u4755:	
  8091  0416  1803               	skipnc
  8092  0417  2C25               	goto	l5425
  8093  0418  0020               	movlb	0	; select bank0
  8094  0419  096B               	comf	_gesture_ud_delta_,w
  8095  041A  00A0               	movwf	??_decodeGesture
  8096  041B  096C               	comf	_gesture_ud_delta_+1,w
  8097  041C  00A1               	movwf	??_decodeGesture+1
  8098  041D  0AA0               	incf	??_decodeGesture,f
  8099  041E  1903               	skipnz
  8100  041F  0AA1               	incf	??_decodeGesture+1,f
  8101  0420  0820               	movf	??_decodeGesture,w
  8102  0421  00AA               	movwf	_decodeGesture$1281
  8103  0422  0821               	movf	??_decodeGesture+1,w
  8104  0423  00AB               	movwf	_decodeGesture$1281+1
  8105  0424  2C2A               	goto	l948
  8106  0425                     l5425:	
  8107  0425  0020               	movlb	0	; select bank0
  8108  0426  086C               	movf	_gesture_ud_delta_+1,w
  8109  0427  00AB               	movwf	_decodeGesture$1281+1
  8110  0428  086B               	movf	_gesture_ud_delta_,w
  8111  0429  00AA               	movwf	_decodeGesture$1281
  8112  042A                     l948:	
  8113  042A  086A               	movf	_gesture_lr_delta_+1,w
  8114  042B  3A80               	xorlw	128
  8115  042C  00A0               	movwf	??_decodeGesture
  8116  042D  3080               	movlw	128
  8117  042E  0220               	subwf	??_decodeGesture,w
  8118  042F  1D03               	skipz
  8119  0430  2C33               	goto	u4765
  8120  0431  3001               	movlw	1
  8121  0432  0269               	subwf	_gesture_lr_delta_,w
  8122  0433                     u4765:	
  8123  0433  1803               	skipnc
  8124  0434  2C42               	goto	l5429
  8125  0435  0020               	movlb	0	; select bank0
  8126  0436  0969               	comf	_gesture_lr_delta_,w
  8127  0437  00A0               	movwf	??_decodeGesture
  8128  0438  096A               	comf	_gesture_lr_delta_+1,w
  8129  0439  00A1               	movwf	??_decodeGesture+1
  8130  043A  0AA0               	incf	??_decodeGesture,f
  8131  043B  1903               	skipnz
  8132  043C  0AA1               	incf	??_decodeGesture+1,f
  8133  043D  0820               	movf	??_decodeGesture,w
  8134  043E  00AC               	movwf	_decodeGesture$1282
  8135  043F  0821               	movf	??_decodeGesture+1,w
  8136  0440  00AD               	movwf	_decodeGesture$1282+1
  8137  0441  2C47               	goto	l952
  8138  0442                     l5429:	
  8139  0442  0020               	movlb	0	; select bank0
  8140  0443  086A               	movf	_gesture_lr_delta_+1,w
  8141  0444  00AD               	movwf	_decodeGesture$1282+1
  8142  0445  0869               	movf	_gesture_lr_delta_,w
  8143  0446  00AC               	movwf	_decodeGesture$1282
  8144  0447                     l952:	
  8145  0447  082D               	movf	_decodeGesture$1282+1,w
  8146  0448  3A80               	xorlw	128
  8147  0449  00A0               	movwf	??_decodeGesture
  8148  044A  082B               	movf	_decodeGesture$1281+1,w
  8149  044B  3A80               	xorlw	128
  8150  044C  0220               	subwf	??_decodeGesture,w
  8151  044D  1D03               	skipz
  8152  044E  2C51               	goto	u4775
  8153  044F  082A               	movf	_decodeGesture$1281,w
  8154  0450  022C               	subwf	_decodeGesture$1282,w
  8155  0451                     u4775:	
  8156  0451  1C03               	btfss	3,0
  8157  0452  2B39               	goto	l5361
  8158  0453  2B59               	goto	l5379
  8159  0454                     l5435:	
  8160  0454  0367               	decf	_gesture_ud_count_,w
  8161  0455  0468               	iorwf	_gesture_ud_count_+1,w
  8162  0456  1D03               	btfss	3,2
  8163  0457  2CA3               	goto	l5453
  8164  0458  0365               	decf	_gesture_lr_count_,w
  8165  0459  0466               	iorwf	_gesture_lr_count_+1,w
  8166  045A  1D03               	btfss	3,2
  8167  045B  2CA3               	goto	l5453
  8168                           
  8169                           ;APDS9960.c: 833:         if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture
      +                          _ud_delta_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) 
      +                          {
  8170  045C  086C               	movf	_gesture_ud_delta_+1,w
  8171  045D  3A80               	xorlw	128
  8172  045E  00A0               	movwf	??_decodeGesture
  8173  045F  3080               	movlw	128
  8174  0460  0220               	subwf	??_decodeGesture,w
  8175  0461  1D03               	skipz
  8176  0462  2C65               	goto	u4805
  8177  0463  3001               	movlw	1
  8178  0464  026B               	subwf	_gesture_ud_delta_,w
  8179  0465                     u4805:	
  8180  0465  1803               	skipnc
  8181  0466  2C74               	goto	l5443
  8182  0467  0020               	movlb	0	; select bank0
  8183  0468  096B               	comf	_gesture_ud_delta_,w
  8184  0469  00A0               	movwf	??_decodeGesture
  8185  046A  096C               	comf	_gesture_ud_delta_+1,w
  8186  046B  00A1               	movwf	??_decodeGesture+1
  8187  046C  0AA0               	incf	??_decodeGesture,f
  8188  046D  1903               	skipnz
  8189  046E  0AA1               	incf	??_decodeGesture+1,f
  8190  046F  0820               	movf	??_decodeGesture,w
  8191  0470  00AE               	movwf	_decodeGesture$1283
  8192  0471  0821               	movf	??_decodeGesture+1,w
  8193  0472  00AF               	movwf	_decodeGesture$1283+1
  8194  0473  2C79               	goto	l960
  8195  0474                     l5443:	
  8196  0474  0020               	movlb	0	; select bank0
  8197  0475  086C               	movf	_gesture_ud_delta_+1,w
  8198  0476  00AF               	movwf	_decodeGesture$1283+1
  8199  0477  086B               	movf	_gesture_ud_delta_,w
  8200  0478  00AE               	movwf	_decodeGesture$1283
  8201  0479                     l960:	
  8202  0479  086A               	movf	_gesture_lr_delta_+1,w
  8203  047A  3A80               	xorlw	128
  8204  047B  00A0               	movwf	??_decodeGesture
  8205  047C  3080               	movlw	128
  8206  047D  0220               	subwf	??_decodeGesture,w
  8207  047E  1D03               	skipz
  8208  047F  2C82               	goto	u4815
  8209  0480  3001               	movlw	1
  8210  0481  0269               	subwf	_gesture_lr_delta_,w
  8211  0482                     u4815:	
  8212  0482  1803               	skipnc
  8213  0483  2C91               	goto	l5447
  8214  0484  0020               	movlb	0	; select bank0
  8215  0485  0969               	comf	_gesture_lr_delta_,w
  8216  0486  00A0               	movwf	??_decodeGesture
  8217  0487  096A               	comf	_gesture_lr_delta_+1,w
  8218  0488  00A1               	movwf	??_decodeGesture+1
  8219  0489  0AA0               	incf	??_decodeGesture,f
  8220  048A  1903               	skipnz
  8221  048B  0AA1               	incf	??_decodeGesture+1,f
  8222  048C  0820               	movf	??_decodeGesture,w
  8223  048D  00B0               	movwf	_decodeGesture$1284
  8224  048E  0821               	movf	??_decodeGesture+1,w
  8225  048F  00B1               	movwf	_decodeGesture$1284+1
  8226  0490  2C96               	goto	l964
  8227  0491                     l5447:	
  8228  0491  0020               	movlb	0	; select bank0
  8229  0492  086A               	movf	_gesture_lr_delta_+1,w
  8230  0493  00B1               	movwf	_decodeGesture$1284+1
  8231  0494  0869               	movf	_gesture_lr_delta_,w
  8232  0495  00B0               	movwf	_decodeGesture$1284
  8233  0496                     l964:	
  8234  0496  0831               	movf	_decodeGesture$1284+1,w
  8235  0497  3A80               	xorlw	128
  8236  0498  00A0               	movwf	??_decodeGesture
  8237  0499  082F               	movf	_decodeGesture$1283+1,w
  8238  049A  3A80               	xorlw	128
  8239  049B  0220               	subwf	??_decodeGesture,w
  8240  049C  1D03               	skipz
  8241  049D  2CA0               	goto	u4825
  8242  049E  082E               	movf	_decodeGesture$1283,w
  8243  049F  0230               	subwf	_decodeGesture$1284,w
  8244  04A0                     u4825:	
  8245  04A0  1C03               	btfss	3,0
  8246  04A1  2B43               	goto	l5367
  8247  04A2  2B4D               	goto	l5373
  8248  04A3                     l5453:	
  8249                           
  8250                           ;APDS9960.c: 839:         return 0;
  8251  04A3  3000               	movlw	0
  8252  04A4  0008               	return
  8253  04A5                     l5457:	
  8254                           
  8255                           ;APDS9960.c: 842:     return 1;
  8256  04A5  3001               	movlw	1
  8257  04A6  0008               	return
  8258  04A7                     __end_of_decodeGesture:	
  8259                           
  8260                           	psect	text23
  8261  0B16                     __ptext23:	
  8262 ;; *************** function _LEDs_SetLow *****************
  8263 ;; Defined at:
  8264 ;;		line 148 in file "main.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		None
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    5
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_handleGesture
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           
  8293                           ;psect for function _LEDs_SetLow
  8294  0B16                     _LEDs_SetLow:	
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _LEDs_SetLow: []
  8298                           ;main.c: 149:     do { LATCbits.LATC5 = 0; } while(0);
  8299  0B16  0022               	movlb	2	; select bank2
  8300  0B17  128E               	bcf	14,5	;volatile
  8301                           
  8302                           ;main.c: 150:     do { LATAbits.LATA2 = 0; } while(0);
  8303  0B18  110C               	bcf	12,2	;volatile
  8304                           
  8305                           ;main.c: 151:     do { LATAbits.LATA1 = 0; } while(0);
  8306  0B19  108C               	bcf	12,1	;volatile
  8307                           
  8308                           ;main.c: 152:     do { LATAbits.LATA5 = 0; } while(0);
  8309  0B1A  128C               	bcf	12,5	;volatile
  8310  0B1B  0008               	return
  8311  0B1C                     __end_of_LEDs_SetLow:	
  8312                           
  8313                           	psect	text24
  8314  06AD                     __ptext24:	
  8315 ;; *************** function _enableGestureSensor *****************
  8316 ;; Defined at:
  8317 ;;		line 408 in file "APDS9960.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  interrupts      1    wreg     _Bool 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  interrupts      1   17[BANK0 ] _Bool 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      _Bool 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, pclath, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;Total ram usage:        2 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   11
  8338 ;; This function calls:
  8339 ;;		_enablePower
  8340 ;;		_resetGestureParameters
  8341 ;;		_setGestureIntEnable
  8342 ;;		_setGestureMode
  8343 ;;		_setLEDBoost
  8344 ;;		_setMode
  8345 ;;		_wireWriteDataByte
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _enableGestureSensor
  8353  06AD                     _enableGestureSensor:	
  8354                           
  8355                           ;incstack = 0
  8356                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  8357                           ;enableGestureSensor@interrupts stored from wreg
  8358  06AD  0020               	movlb	0	; select bank0
  8359  06AE  00B1               	movwf	enableGestureSensor@interrupts
  8360                           
  8361                           ;APDS9960.c: 408: _Bool enableGestureSensor ( _Bool interrupts);APDS9960.c: 409: {;APDS9
      +                          960.c: 417:     resetGestureParameters();
  8362  06AF  318B  23FC  3186   	fcall	_resetGestureParameters
  8363                           
  8364                           ;APDS9960.c: 418:     if( !wireWriteDataByte(0x83, 0xFF) ) {
  8365  06B2  30FF               	movlw	255
  8366  06B3  0020               	movlb	0	; select bank0
  8367  06B4  00B0               	movwf	??_enableGestureSensor
  8368  06B5  0830               	movf	??_enableGestureSensor,w
  8369  06B6  00A6               	movwf	wireWriteDataByte@val
  8370  06B7  3083               	movlw	131
  8371  06B8  318C  2411  3186   	fcall	_wireWriteDataByte
  8372  06BB  0020               	movlb	0	; select bank0
  8373  06BC  0826               	movf	?_wireWriteDataByte,w
  8374  06BD  0427               	iorwf	?_wireWriteDataByte+1,w
  8375  06BE  1903               	btfsc	3,2
  8376  06BF  2EC3               	goto	l5991
  8377  06C0  2EC5               	goto	l5995
  8378  06C1                     l6009:	
  8379                           
  8380                           ;APDS9960.c: 428:         if( !setGestureIntEnable(1) ) {
  8381  06C1  3001               	movlw	1
  8382  06C2  2EDE               	goto	L8
  8383  06C3                     l5991:	
  8384                           
  8385                           ;APDS9960.c: 419:         return 0;
  8386  06C3  3000               	movlw	0
  8387  06C4  0008               	return
  8388  06C5                     l5995:	
  8389                           
  8390                           ;APDS9960.c: 421:     if( !wireWriteDataByte(0x8E, 0x89) ) {
  8391  06C5  3089               	movlw	137
  8392  06C6  00B0               	movwf	??_enableGestureSensor
  8393  06C7  0830               	movf	??_enableGestureSensor,w
  8394  06C8  00A6               	movwf	wireWriteDataByte@val
  8395  06C9  308E               	movlw	142
  8396  06CA  318C  2411  3186   	fcall	_wireWriteDataByte
  8397  06CD  0020               	movlb	0	; select bank0
  8398  06CE  0826               	movf	?_wireWriteDataByte,w
  8399  06CF  0427               	iorwf	?_wireWriteDataByte+1,w
  8400  06D0  1903               	btfsc	3,2
  8401  06D1  2EC3               	goto	l5991
  8402                           
  8403                           ;APDS9960.c: 424:     if( !setLEDBoost(3) ) {
  8404  06D2  3003               	movlw	3
  8405  06D3  318E  2666  3186   	fcall	_setLEDBoost
  8406  06D6  3A00               	xorlw	0
  8407  06D7  1903               	btfsc	3,2
  8408  06D8  2EC3               	goto	l5991
  8409                           
  8410                           ;APDS9960.c: 427:     if( interrupts ) {
  8411  06D9  0020               	movlb	0	; select bank0
  8412  06DA  0831               	movf	enableGestureSensor@interrupts,w
  8413  06DB  1D03               	btfss	3,2
  8414  06DC  2EC1               	goto	l6009
  8415                           
  8416                           ;APDS9960.c: 432:         if( !setGestureIntEnable(0) ) {
  8417  06DD  3000               	movlw	0
  8418  06DE                     L8:	
  8419  06DE  318E  260A  3186   	fcall	_setGestureIntEnable
  8420  06E1  3A00               	xorlw	0
  8421  06E2  1903               	btfsc	3,2
  8422  06E3  2EC3               	goto	l5991
  8423                           
  8424                           ;APDS9960.c: 436:     if( !setGestureMode(1) ) {
  8425  06E4  3001               	movlw	1
  8426  06E5  318C  24F1  3186   	fcall	_setGestureMode
  8427  06E8  3A00               	xorlw	0
  8428  06E9  1903               	btfsc	3,2
  8429  06EA  2EC3               	goto	l5991
  8430                           
  8431                           ;APDS9960.c: 439:     if( !enablePower() ){
  8432  06EB  318B  238F  3186   	fcall	_enablePower
  8433  06EE  3A00               	xorlw	0
  8434  06EF  1903               	btfsc	3,2
  8435  06F0  2EC3               	goto	l5991
  8436                           
  8437                           ;APDS9960.c: 442:     if( !setMode(3, 1) ) {
  8438  06F1  0020               	movlb	0	; select bank0
  8439  06F2  01AB               	clrf	setMode@enable
  8440  06F3  0AAB               	incf	setMode@enable,f
  8441  06F4  3003               	movlw	3
  8442  06F5  3187  2763  3186   	fcall	_setMode
  8443  06F8  3A00               	xorlw	0
  8444  06F9  1903               	btfsc	3,2
  8445  06FA  2EC3               	goto	l5991
  8446                           
  8447                           ;APDS9960.c: 445:     if( !setMode(2, 1) ) {
  8448  06FB  0020               	movlb	0	; select bank0
  8449  06FC  01AB               	clrf	setMode@enable
  8450  06FD  0AAB               	incf	setMode@enable,f
  8451  06FE  3002               	movlw	2
  8452  06FF  3187  2763  3186   	fcall	_setMode
  8453  0702  3A00               	xorlw	0
  8454  0703  1903               	btfsc	3,2
  8455  0704  2EC3               	goto	l5991
  8456                           
  8457                           ;APDS9960.c: 448:     if( !setMode(6, 1) ) {
  8458  0705  0020               	movlb	0	; select bank0
  8459  0706  01AB               	clrf	setMode@enable
  8460  0707  0AAB               	incf	setMode@enable,f
  8461  0708  3006               	movlw	6
  8462  0709  3187  2763  3186   	fcall	_setMode
  8463  070C  3A00               	xorlw	0
  8464  070D  1903               	btfsc	3,2
  8465  070E  2EC3               	goto	l5991
  8466                           
  8467                           ;APDS9960.c: 452:     return 1;
  8468  070F  3001               	movlw	1
  8469  0710  0008               	return
  8470  0711                     __end_of_enableGestureSensor:	
  8471                           
  8472                           	psect	text25
  8473  0E66                     __ptext25:	
  8474 ;; *************** function _setLEDBoost *****************
  8475 ;; Defined at:
  8476 ;;		line 483 in file "APDS9960.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  boost           1    wreg     unsigned char 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;  boost           1   13[BANK0 ] unsigned char 
  8481 ;;  val             1   12[BANK0 ] unsigned char 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      _Bool 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, pclath, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;Total ram usage:        4 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    8
  8498 ;; This function calls:
  8499 ;;		_wireReadDataByte
  8500 ;;		_wireWriteDataByte
  8501 ;; This function is called by:
  8502 ;;		_enableGestureSensor
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function _setLEDBoost
  8508  0E66                     _setLEDBoost:	
  8509                           
  8510                           ;incstack = 0
  8511                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  8512                           ;setLEDBoost@boost stored from wreg
  8513  0E66  0020               	movlb	0	; select bank0
  8514  0E67  00AD               	movwf	setLEDBoost@boost
  8515                           
  8516                           ;APDS9960.c: 483: _Bool setLEDBoost(uint8_t boost);APDS9960.c: 484: {;APDS9960.c: 485:  
      +                             uint8_t val;;APDS9960.c: 488:     val=wireReadDataByte(0x90);
  8517  0E68  3090               	movlw	144
  8518  0E69  318C  2482  318E   	fcall	_wireReadDataByte
  8519  0E6C  0020               	movlb	0	; select bank0
  8520  0E6D  00AA               	movwf	??_setLEDBoost
  8521  0E6E  082A               	movf	??_setLEDBoost,w
  8522  0E6F  00AC               	movwf	setLEDBoost@val
  8523                           
  8524                           ;APDS9960.c: 491:     boost &= 0b00000011;
  8525  0E70  3003               	movlw	3
  8526  0E71  00AA               	movwf	??_setLEDBoost
  8527  0E72  082A               	movf	??_setLEDBoost,w
  8528  0E73  05AD               	andwf	setLEDBoost@boost,f
  8529                           
  8530                           ;APDS9960.c: 492:     boost = boost << 4;
  8531  0E74  082D               	movf	setLEDBoost@boost,w
  8532  0E75  00AA               	movwf	??_setLEDBoost
  8533  0E76  3003               	movlw	3
  8534  0E77                     u5095:	
  8535  0E77  35AA               	lslf	??_setLEDBoost,f
  8536  0E78  3EFF               	addlw	-1
  8537  0E79  1D03               	skipz
  8538  0E7A  2E77               	goto	u5095
  8539  0E7B  352A               	lslf	??_setLEDBoost,w
  8540  0E7C  00AB               	movwf	??_setLEDBoost+1
  8541  0E7D  082B               	movf	??_setLEDBoost+1,w
  8542  0E7E  00AD               	movwf	setLEDBoost@boost
  8543                           
  8544                           ;APDS9960.c: 493:     val &= 0b11001111;
  8545  0E7F  30CF               	movlw	207
  8546  0E80  00AA               	movwf	??_setLEDBoost
  8547  0E81  082A               	movf	??_setLEDBoost,w
  8548  0E82  05AC               	andwf	setLEDBoost@val,f
  8549                           
  8550                           ;APDS9960.c: 494:     val |= boost;
  8551  0E83  082D               	movf	setLEDBoost@boost,w
  8552  0E84  00AA               	movwf	??_setLEDBoost
  8553  0E85  082A               	movf	??_setLEDBoost,w
  8554  0E86  04AC               	iorwf	setLEDBoost@val,f
  8555                           
  8556                           ;APDS9960.c: 497:     if( !wireWriteDataByte(0x90, val) ) {
  8557  0E87  082C               	movf	setLEDBoost@val,w
  8558  0E88  00AA               	movwf	??_setLEDBoost
  8559  0E89  082A               	movf	??_setLEDBoost,w
  8560  0E8A  00A6               	movwf	wireWriteDataByte@val
  8561  0E8B  3090               	movlw	144
  8562  0E8C  318C  2411  318E   	fcall	_wireWriteDataByte
  8563  0E8F  0020               	movlb	0	; select bank0
  8564  0E90  0826               	movf	?_wireWriteDataByte,w
  8565  0E91  0427               	iorwf	?_wireWriteDataByte+1,w
  8566  0E92  1D03               	btfss	3,2
  8567  0E93  2E96               	goto	l5789
  8568                           
  8569                           ;APDS9960.c: 498:         return 0;
  8570  0E94  3000               	movlw	0
  8571  0E95  0008               	return
  8572  0E96                     l5789:	
  8573                           
  8574                           ;APDS9960.c: 501:     return 1;
  8575  0E96  3001               	movlw	1
  8576  0E97  0008               	return
  8577  0E98                     __end_of_setLEDBoost:	
  8578                           
  8579                           	psect	text26
  8580  0CF1                     __ptext26:	
  8581 ;; *************** function _setGestureMode *****************
  8582 ;; Defined at:
  8583 ;;		line 505 in file "APDS9960.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  mode            1    wreg     unsigned char 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  mode            1   11[BANK0 ] unsigned char 
  8588 ;;  val             1   12[BANK0 ] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      _Bool 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0, pclath, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;Total ram usage:        3 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    8
  8605 ;; This function calls:
  8606 ;;		_wireReadDataByte
  8607 ;;		_wireWriteDataByte
  8608 ;; This function is called by:
  8609 ;;		_enableGestureSensor
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function _setGestureMode
  8615  0CF1                     _setGestureMode:	
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  8619                           ;setGestureMode@mode stored from wreg
  8620  0CF1  0020               	movlb	0	; select bank0
  8621  0CF2  00AB               	movwf	setGestureMode@mode
  8622                           
  8623                           ;APDS9960.c: 505: _Bool setGestureMode(uint8_t mode);APDS9960.c: 506: {;APDS9960.c: 507:
      +                               uint8_t val;;APDS9960.c: 510:     val = wireReadDataByte(0xAB);
  8624  0CF3  30AB               	movlw	171
  8625  0CF4  318C  2482  318C   	fcall	_wireReadDataByte
  8626  0CF7  0020               	movlb	0	; select bank0
  8627  0CF8  00AA               	movwf	??_setGestureMode
  8628  0CF9  082A               	movf	??_setGestureMode,w
  8629  0CFA  00AC               	movwf	setGestureMode@val
  8630                           
  8631                           ;APDS9960.c: 513:     mode &= 0b00000001;
  8632  0CFB  3001               	movlw	1
  8633  0CFC  00AA               	movwf	??_setGestureMode
  8634  0CFD  082A               	movf	??_setGestureMode,w
  8635  0CFE  05AB               	andwf	setGestureMode@mode,f
  8636                           
  8637                           ;APDS9960.c: 514:     val &= 0b11111110;
  8638  0CFF  30FE               	movlw	254
  8639  0D00  00AA               	movwf	??_setGestureMode
  8640  0D01  082A               	movf	??_setGestureMode,w
  8641  0D02  05AC               	andwf	setGestureMode@val,f
  8642                           
  8643                           ;APDS9960.c: 515:     val |= mode;
  8644  0D03  082B               	movf	setGestureMode@mode,w
  8645  0D04  00AA               	movwf	??_setGestureMode
  8646  0D05  082A               	movf	??_setGestureMode,w
  8647  0D06  04AC               	iorwf	setGestureMode@val,f
  8648                           
  8649                           ;APDS9960.c: 518:     if( !wireWriteDataByte(0xAB, val) ) {
  8650  0D07  082C               	movf	setGestureMode@val,w
  8651  0D08  00AA               	movwf	??_setGestureMode
  8652  0D09  082A               	movf	??_setGestureMode,w
  8653  0D0A  00A6               	movwf	wireWriteDataByte@val
  8654  0D0B  30AB               	movlw	171
  8655  0D0C  318C  2411  318C   	fcall	_wireWriteDataByte
  8656  0D0F  0020               	movlb	0	; select bank0
  8657  0D10  0826               	movf	?_wireWriteDataByte,w
  8658  0D11  0427               	iorwf	?_wireWriteDataByte+1,w
  8659  0D12  1D03               	btfss	3,2
  8660  0D13  2D16               	goto	l5807
  8661                           
  8662                           ;APDS9960.c: 519:         return 0;
  8663  0D14  3000               	movlw	0
  8664  0D15  0008               	return
  8665  0D16                     l5807:	
  8666                           
  8667                           ;APDS9960.c: 522:     return 1;
  8668  0D16  3001               	movlw	1
  8669  0D17  0008               	return
  8670  0D18                     __end_of_setGestureMode:	
  8671                           
  8672                           	psect	text27
  8673  0E0A                     __ptext27:	
  8674 ;; *************** function _setGestureIntEnable *****************
  8675 ;; Defined at:
  8676 ;;		line 386 in file "APDS9960.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  enable          1    wreg     unsigned char 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  enable          1   12[BANK0 ] unsigned char 
  8681 ;;  val             1   11[BANK0 ] unsigned char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      _Bool 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2, status,0, pclath, cstack
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;Total ram usage:        3 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:    8
  8698 ;; This function calls:
  8699 ;;		_wireReadDataByte
  8700 ;;		_wireWriteDataByte
  8701 ;; This function is called by:
  8702 ;;		_initialize
  8703 ;;		_enableGestureSensor
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           
  8708                           ;psect for function _setGestureIntEnable
  8709  0E0A                     _setGestureIntEnable:	
  8710                           
  8711                           ;incstack = 0
  8712                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  8713                           ;setGestureIntEnable@enable stored from wreg
  8714  0E0A  0020               	movlb	0	; select bank0
  8715  0E0B  00AC               	movwf	setGestureIntEnable@enable
  8716                           
  8717                           ;APDS9960.c: 386: _Bool setGestureIntEnable(uint8_t enable);APDS9960.c: 387: {;APDS9960.
      +                          c: 388:     uint8_t val;;APDS9960.c: 391:     val = wireReadDataByte(0xAB);
  8718  0E0C  30AB               	movlw	171
  8719  0E0D  318C  2482  318E   	fcall	_wireReadDataByte
  8720  0E10  0020               	movlb	0	; select bank0
  8721  0E11  00AA               	movwf	??_setGestureIntEnable
  8722  0E12  082A               	movf	??_setGestureIntEnable,w
  8723  0E13  00AB               	movwf	setGestureIntEnable@val
  8724                           
  8725                           ;APDS9960.c: 394:     enable &= 0b00000001;
  8726  0E14  3001               	movlw	1
  8727  0E15  00AA               	movwf	??_setGestureIntEnable
  8728  0E16  082A               	movf	??_setGestureIntEnable,w
  8729  0E17  05AC               	andwf	setGestureIntEnable@enable,f
  8730                           
  8731                           ;APDS9960.c: 395:     enable = enable << 1;
  8732  0E18  352C               	lslf	setGestureIntEnable@enable,w
  8733  0E19  00AA               	movwf	??_setGestureIntEnable
  8734  0E1A  082A               	movf	??_setGestureIntEnable,w
  8735  0E1B  00AC               	movwf	setGestureIntEnable@enable
  8736                           
  8737                           ;APDS9960.c: 396:     val &= 0b11111101;
  8738  0E1C  30FD               	movlw	253
  8739  0E1D  00AA               	movwf	??_setGestureIntEnable
  8740  0E1E  082A               	movf	??_setGestureIntEnable,w
  8741  0E1F  05AB               	andwf	setGestureIntEnable@val,f
  8742                           
  8743                           ;APDS9960.c: 397:     val |= enable;
  8744  0E20  082C               	movf	setGestureIntEnable@enable,w
  8745  0E21  00AA               	movwf	??_setGestureIntEnable
  8746  0E22  082A               	movf	??_setGestureIntEnable,w
  8747  0E23  04AB               	iorwf	setGestureIntEnable@val,f
  8748                           
  8749                           ;APDS9960.c: 400:     if( !wireWriteDataByte(0xAB, val) ) {
  8750  0E24  082B               	movf	setGestureIntEnable@val,w
  8751  0E25  00AA               	movwf	??_setGestureIntEnable
  8752  0E26  082A               	movf	??_setGestureIntEnable,w
  8753  0E27  00A6               	movwf	wireWriteDataByte@val
  8754  0E28  30AB               	movlw	171
  8755  0E29  318C  2411  318E   	fcall	_wireWriteDataByte
  8756  0E2C  0020               	movlb	0	; select bank0
  8757  0E2D  0826               	movf	?_wireWriteDataByte,w
  8758  0E2E  0427               	iorwf	?_wireWriteDataByte+1,w
  8759  0E2F  1D03               	btfss	3,2
  8760  0E30  2E33               	goto	l5771
  8761                           
  8762                           ;APDS9960.c: 401:         return 0;
  8763  0E31  3000               	movlw	0
  8764  0E32  0008               	return
  8765  0E33                     l5771:	
  8766                           
  8767                           ;APDS9960.c: 404:     return 1;
  8768  0E33  3001               	movlw	1
  8769  0E34  0008               	return
  8770  0E35                     __end_of_setGestureIntEnable:	
  8771                           
  8772                           	psect	text28
  8773  0BFC                     __ptext28:	
  8774 ;; *************** function _resetGestureParameters *****************
  8775 ;; Defined at:
  8776 ;;		line 456 in file "APDS9960.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		status,2
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    5
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_enableGestureSensor
  8801 ;;		_readGesture
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function _resetGestureParameters
  8807  0BFC                     _resetGestureParameters:	
  8808                           
  8809                           ;APDS9960.c: 459:     gesture_data_.index = 0;
  8810                           
  8811                           ;incstack = 0
  8812                           ; Regs used in _resetGestureParameters: [status,2]
  8813  0BFC  0024               	movlb	4	; select bank4
  8814  0BFD  01E0               	clrf	(_gesture_data_^(0+512)+64)
  8815                           
  8816                           ;APDS9960.c: 460:     gesture_data_.total_gestures = 0;
  8817  0BFE  01E1               	clrf	(_gesture_data_^(0+512)+65)
  8818                           
  8819                           ;APDS9960.c: 462:     gesture_ud_delta_ = 0;
  8820  0BFF  0020               	movlb	0	; select bank0
  8821  0C00  01EB               	clrf	_gesture_ud_delta_
  8822  0C01  01EC               	clrf	_gesture_ud_delta_+1
  8823                           
  8824                           ;APDS9960.c: 463:     gesture_lr_delta_ = 0;
  8825  0C02  01E9               	clrf	_gesture_lr_delta_
  8826  0C03  01EA               	clrf	_gesture_lr_delta_+1
  8827                           
  8828                           ;APDS9960.c: 465:     gesture_ud_count_ = 0;
  8829  0C04  01E7               	clrf	_gesture_ud_count_
  8830  0C05  01E8               	clrf	_gesture_ud_count_+1
  8831                           
  8832                           ;APDS9960.c: 466:     gesture_lr_count_ = 0;
  8833  0C06  01E5               	clrf	_gesture_lr_count_
  8834  0C07  01E6               	clrf	_gesture_lr_count_+1
  8835                           
  8836                           ;APDS9960.c: 468:     gesture_near_count_ = 0;
  8837  0C08  01E3               	clrf	_gesture_near_count_
  8838  0C09  01E4               	clrf	_gesture_near_count_+1
  8839                           
  8840                           ;APDS9960.c: 469:     gesture_far_count_ = 0;
  8841  0C0A  01E1               	clrf	_gesture_far_count_
  8842  0C0B  01E2               	clrf	_gesture_far_count_+1
  8843                           
  8844                           ;APDS9960.c: 471:     gesture_state_ = 0;
  8845  0C0C  01DF               	clrf	_gesture_state_
  8846  0C0D  01E0               	clrf	_gesture_state_+1
  8847                           
  8848                           ;APDS9960.c: 472:     gesture_motion_ = DIR_NONE;
  8849  0C0E  01DD               	clrf	_gesture_motion_
  8850  0C0F  01DE               	clrf	_gesture_motion_+1
  8851  0C10  0008               	return
  8852  0C11                     __end_of_resetGestureParameters:	
  8853                           
  8854                           	psect	text29
  8855  0B8F                     __ptext29:	
  8856 ;; *************** function _enablePower *****************
  8857 ;; Defined at:
  8858 ;;		line 526 in file "APDS9960.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      _Bool 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0, pclath, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:   10
  8879 ;; This function calls:
  8880 ;;		_setMode
  8881 ;; This function is called by:
  8882 ;;		_enableGestureSensor
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           
  8887                           ;psect for function _enablePower
  8888  0B8F                     _enablePower:	
  8889                           
  8890                           ;APDS9960.c: 528:     if( !setMode(0, 1) ) {
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  8894  0B8F  0020               	movlb	0	; select bank0
  8895  0B90  01AB               	clrf	setMode@enable
  8896  0B91  0AAB               	incf	setMode@enable,f
  8897  0B92  3000               	movlw	0
  8898  0B93  3187  2763  318B   	fcall	_setMode
  8899  0B96  3A00               	xorlw	0
  8900  0B97  1D03               	skipz
  8901  0B98  2B9B               	goto	l5817
  8902                           
  8903                           ;APDS9960.c: 529:         return 0;
  8904  0B99  3000               	movlw	0
  8905  0B9A  0008               	return
  8906  0B9B                     l5817:	
  8907                           
  8908                           ;APDS9960.c: 532:     return 1;
  8909  0B9B  3001               	movlw	1
  8910  0B9C  0008               	return
  8911  0B9D                     __end_of_enablePower:	
  8912                           
  8913                           	psect	text30
  8914  0763                     __ptext30:	
  8915 ;; *************** function _setMode *****************
  8916 ;; Defined at:
  8917 ;;		line 123 in file "APDS9960.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  mode            1    wreg     unsigned char 
  8920 ;;  enable          1   11[BANK0 ] unsigned char 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  mode            1   15[BANK0 ] unsigned char 
  8923 ;;  reg_val         1   14[BANK0 ] unsigned char 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      _Bool 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0, pclath, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8933 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;Total ram usage:        5 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    9
  8940 ;; This function calls:
  8941 ;;		_getMode
  8942 ;;		_wireWriteDataByte
  8943 ;; This function is called by:
  8944 ;;		_initialize
  8945 ;;		_enableGestureSensor
  8946 ;;		_enablePower
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function _setMode
  8952  0763                     _setMode:	
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  8956                           ;setMode@mode stored from wreg
  8957  0763  0020               	movlb	0	; select bank0
  8958  0764  00AF               	movwf	setMode@mode
  8959                           
  8960                           ;APDS9960.c: 123: _Bool setMode(uint8_t mode, uint8_t enable);APDS9960.c: 124: {;APDS996
      +                          0.c: 125:     uint8_t reg_val;;APDS9960.c: 128:     reg_val = getMode();
  8961  0765  318B  2358  3187   	fcall	_getMode
  8962  0768  0020               	movlb	0	; select bank0
  8963  0769  00AC               	movwf	??_setMode
  8964  076A  082C               	movf	??_setMode,w
  8965  076B  00AE               	movwf	setMode@reg_val
  8966                           
  8967                           ;APDS9960.c: 129:     if( reg_val == 0xFF ) {
  8968  076C  0A2E               	incf	setMode@reg_val,w
  8969  076D  1D03               	btfss	3,2
  8970  076E  2F71               	goto	l5129
  8971  076F                     l5125:	
  8972                           
  8973                           ;APDS9960.c: 130:         return 0;
  8974  076F  3000               	movlw	0
  8975  0770  0008               	return
  8976  0771                     l5129:	
  8977                           
  8978                           ;APDS9960.c: 134:     enable = enable & 0x01;
  8979  0771  082B               	movf	setMode@enable,w
  8980  0772  3901               	andlw	1
  8981  0773  00AC               	movwf	??_setMode
  8982  0774  082C               	movf	??_setMode,w
  8983  0775  00AB               	movwf	setMode@enable
  8984                           
  8985                           ;APDS9960.c: 135:     if( mode >= 0 && mode <= 6 ) {
  8986  0776  3007               	movlw	7
  8987  0777  022F               	subwf	setMode@mode,w
  8988  0778  1803               	skipnc
  8989  0779  2F96               	goto	l5139
  8990                           
  8991                           ;APDS9960.c: 136:         if (enable) {
  8992  077A  082B               	movf	setMode@enable,w
  8993  077B  1903               	btfsc	3,2
  8994  077C  2F89               	goto	l5137
  8995                           
  8996                           ;APDS9960.c: 137:             reg_val |= (1 << mode);
  8997  077D  3001               	movlw	1
  8998  077E  00AC               	movwf	??_setMode
  8999  077F  0A2F               	incf	setMode@mode,w
  9000  0780  2F82               	goto	u4034
  9001  0781                     u4035:	
  9002  0781  35AC               	lslf	??_setMode,f
  9003  0782                     u4034:	
  9004  0782  0B89               	decfsz	9,f
  9005  0783  2F81               	goto	u4035
  9006  0784  082C               	movf	??_setMode,w
  9007  0785  00AD               	movwf	??_setMode+1
  9008  0786  082D               	movf	??_setMode+1,w
  9009  0787  04AE               	iorwf	setMode@reg_val,f
  9010                           
  9011                           ;APDS9960.c: 138:         } else {
  9012  0788  2FA3               	goto	l5147
  9013  0789                     l5137:	
  9014                           
  9015                           ;APDS9960.c: 139:             reg_val &= ~(1 << mode);
  9016  0789  3001               	movlw	1
  9017  078A  00AC               	movwf	??_setMode
  9018  078B  0A2F               	incf	setMode@mode,w
  9019  078C  2F8E               	goto	u4044
  9020  078D                     u4045:	
  9021  078D  35AC               	lslf	??_setMode,f
  9022  078E                     u4044:	
  9023  078E  0B89               	decfsz	9,f
  9024  078F  2F8D               	goto	u4045
  9025  0790  082C               	movf	??_setMode,w
  9026  0791  3AFF               	xorlw	255
  9027  0792  00AD               	movwf	??_setMode+1
  9028  0793  082D               	movf	??_setMode+1,w
  9029  0794  05AE               	andwf	setMode@reg_val,f
  9030  0795  2FA3               	goto	l5147
  9031  0796                     l5139:	
  9032  0796  3007               	movlw	7
  9033  0797  062F               	xorwf	setMode@mode,w
  9034  0798  1D03               	btfss	3,2
  9035  0799  2FA3               	goto	l5147
  9036                           
  9037                           ;APDS9960.c: 142:         if (enable) {
  9038  079A  082B               	movf	setMode@enable,w
  9039  079B  1903               	btfsc	3,2
  9040  079C  2FA2               	goto	l5145
  9041                           
  9042                           ;APDS9960.c: 143:             reg_val = 0x7F;
  9043  079D  307F               	movlw	127
  9044  079E  00AC               	movwf	??_setMode
  9045  079F  082C               	movf	??_setMode,w
  9046  07A0  00AE               	movwf	setMode@reg_val
  9047                           
  9048                           ;APDS9960.c: 144:         } else {
  9049  07A1  2FA3               	goto	l5147
  9050  07A2                     l5145:	
  9051                           
  9052                           ;APDS9960.c: 145:             reg_val = 0x00;
  9053  07A2  01AE               	clrf	setMode@reg_val
  9054  07A3                     l5147:	
  9055                           
  9056                           ;APDS9960.c: 150:     if( !wireWriteDataByte(0x80, reg_val) ) {
  9057  07A3  082E               	movf	setMode@reg_val,w
  9058  07A4  00AC               	movwf	??_setMode
  9059  07A5  082C               	movf	??_setMode,w
  9060  07A6  00A6               	movwf	wireWriteDataByte@val
  9061  07A7  3080               	movlw	128
  9062  07A8  318C  2411  3187   	fcall	_wireWriteDataByte
  9063  07AB  0020               	movlb	0	; select bank0
  9064  07AC  0826               	movf	?_wireWriteDataByte,w
  9065  07AD  0427               	iorwf	?_wireWriteDataByte+1,w
  9066  07AE  1903               	btfsc	3,2
  9067  07AF  2F6F               	goto	l5125
  9068                           
  9069                           ;APDS9960.c: 154:     return 1;
  9070  07B0  3001               	movlw	1
  9071  07B1  0008               	return
  9072  07B2                     __end_of_setMode:	
  9073                           
  9074                           	psect	text31
  9075  0C11                     __ptext31:	
  9076 ;; *************** function _wireWriteDataByte *****************
  9077 ;; Defined at:
  9078 ;;		line 870 in file "APDS9960.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  reg             1    wreg     unsigned char 
  9081 ;;  val             1    6[BANK0 ] unsigned char 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  reg             1    9[BANK0 ] unsigned char 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2    6[BANK0 ] int 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0, pclath, cstack
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        4 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    7
  9100 ;; This function calls:
  9101 ;;		_I2C_Start
  9102 ;;		_I2C_Stop
  9103 ;;		_I2C_Write_Byte
  9104 ;; This function is called by:
  9105 ;;		_initialize
  9106 ;;		_setMode
  9107 ;;		_setLEDDrive
  9108 ;;		_setProximityGain
  9109 ;;		_setAmbientLightGain
  9110 ;;		_setProxIntLowThresh
  9111 ;;		_setProxIntHighThresh
  9112 ;;		_setLightIntLowThreshold
  9113 ;;		_setLightIntHighThreshold
  9114 ;;		_setGestureEnterThresh
  9115 ;;		_setGestureExitThresh
  9116 ;;		_setGestureGain
  9117 ;;		_setGestureLEDDrive
  9118 ;;		_setGestureWaitTime
  9119 ;;		_setGestureIntEnable
  9120 ;;		_enableGestureSensor
  9121 ;;		_setLEDBoost
  9122 ;;		_setGestureMode
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _wireWriteDataByte
  9128  0C11                     _wireWriteDataByte:	
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  9132                           ;wireWriteDataByte@reg stored from wreg
  9133  0C11  0020               	movlb	0	; select bank0
  9134  0C12  00A9               	movwf	wireWriteDataByte@reg
  9135                           
  9136                           ;APDS9960.c: 870: int wireWriteDataByte(unsigned char reg, unsigned char val);APDS9960.c
      +                          : 871: {;APDS9960.c: 881:     I2C_Start();
  9137  0C13  318A  22C3  318C   	fcall	_I2C_Start
  9138                           
  9139                           ;APDS9960.c: 882:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  9140  0C16  3072               	movlw	114
  9141  0C17  318C  242C  318C   	fcall	_I2C_Write_Byte
  9142                           
  9143                           ;APDS9960.c: 883:     I2C_Write_Byte(reg);
  9144  0C1A  0020               	movlb	0	; select bank0
  9145  0C1B  0829               	movf	wireWriteDataByte@reg,w
  9146  0C1C  318C  242C  318C   	fcall	_I2C_Write_Byte
  9147                           
  9148                           ;APDS9960.c: 884:     I2C_Write_Byte(val);
  9149  0C1F  0020               	movlb	0	; select bank0
  9150  0C20  0826               	movf	wireWriteDataByte@val,w
  9151  0C21  318C  242C  318C   	fcall	_I2C_Write_Byte
  9152                           
  9153                           ;APDS9960.c: 885:     I2C_Stop();
  9154  0C24  318A  22C9         	fcall	_I2C_Stop
  9155                           
  9156                           ;APDS9960.c: 888:     return 1;
  9157  0C26  3001               	movlw	1
  9158  0C27  0020               	movlb	0	; select bank0
  9159  0C28  00A6               	movwf	?_wireWriteDataByte
  9160  0C29  3000               	movlw	0
  9161  0C2A  00A7               	movwf	?_wireWriteDataByte+1
  9162  0C2B  0008               	return
  9163  0C2C                     __end_of_wireWriteDataByte:	
  9164                           
  9165                           	psect	text32
  9166  0B58                     __ptext32:	
  9167 ;; *************** function _getMode *****************
  9168 ;; Defined at:
  9169 ;;		line 158 in file "APDS9960.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  enable_value    1   10[BANK0 ] unsigned char 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      unsigned char 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0, pclath, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;Total ram usage:        2 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    8
  9190 ;; This function calls:
  9191 ;;		_wireReadDataByte
  9192 ;; This function is called by:
  9193 ;;		_setMode
  9194 ;;		_readGesture
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function _getMode
  9200  0B58                     _getMode:	
  9201                           
  9202                           ;APDS9960.c: 160:     uint8_t enable_value;;APDS9960.c: 163:     enable_value = wireRead
      +                          DataByte(0x80);
  9203                           
  9204                           ;incstack = 0
  9205                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  9206  0B58  3080               	movlw	128
  9207  0B59  318C  2482         	fcall	_wireReadDataByte
  9208  0B5B  0020               	movlb	0	; select bank0
  9209  0B5C  00A9               	movwf	??_getMode
  9210  0B5D  0829               	movf	??_getMode,w
  9211  0B5E  00AA               	movwf	getMode@enable_value
  9212                           
  9213                           ;APDS9960.c: 165:     return enable_value;
  9214  0B5F  082A               	movf	getMode@enable_value,w
  9215  0B60  0008               	return
  9216  0B61                     __end_of_getMode:	
  9217                           
  9218                           	psect	text33
  9219  0C82                     __ptext33:	
  9220 ;; *************** function _wireReadDataByte *****************
  9221 ;; Defined at:
  9222 ;;		line 892 in file "APDS9960.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  reg             1    wreg     unsigned char 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  reg             1    7[BANK0 ] unsigned char 
  9227 ;;  val             1    8[BANK0 ] unsigned char 
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      unsigned char 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0, pclath, cstack
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;Total ram usage:        3 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    7
  9244 ;; This function calls:
  9245 ;;		_I2C_ReStart
  9246 ;;		_I2C_Read_Byte
  9247 ;;		_I2C_Send_NACK
  9248 ;;		_I2C_Start
  9249 ;;		_I2C_Stop
  9250 ;;		_I2C_Write_Byte
  9251 ;; This function is called by:
  9252 ;;		_initialize
  9253 ;;		_getMode
  9254 ;;		_setLEDDrive
  9255 ;;		_setProximityGain
  9256 ;;		_setAmbientLightGain
  9257 ;;		_setGestureGain
  9258 ;;		_setGestureLEDDrive
  9259 ;;		_setGestureWaitTime
  9260 ;;		_setGestureIntEnable
  9261 ;;		_setLEDBoost
  9262 ;;		_setGestureMode
  9263 ;;		_isGestureAvailable
  9264 ;;		_readGesture
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _wireReadDataByte
  9270  0C82                     _wireReadDataByte:	
  9271                           
  9272                           ;incstack = 0
  9273                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  9274                           ;wireReadDataByte@reg stored from wreg
  9275  0C82  0020               	movlb	0	; select bank0
  9276  0C83  00A7               	movwf	wireReadDataByte@reg
  9277                           
  9278                           ;APDS9960.c: 892:  unsigned char wireReadDataByte(unsigned char reg);APDS9960.c: 893: {;
      +                          APDS9960.c: 907:     unsigned char val;;APDS9960.c: 908:     I2C_Start();
  9279  0C84  318A  22C3  318C   	fcall	_I2C_Start
  9280                           
  9281                           ;APDS9960.c: 909:     I2C_Write_Byte((0x39 << 1 )| 0x00);
  9282  0C87  3072               	movlw	114
  9283  0C88  318C  242C  318C   	fcall	_I2C_Write_Byte
  9284                           
  9285                           ;APDS9960.c: 910:     I2C_Write_Byte(reg);
  9286  0C8B  0020               	movlb	0	; select bank0
  9287  0C8C  0827               	movf	wireReadDataByte@reg,w
  9288  0C8D  318C  242C  318C   	fcall	_I2C_Write_Byte
  9289                           
  9290                           ;APDS9960.c: 911:     I2C_ReStart();
  9291  0C90  318A  22B4  318C   	fcall	_I2C_ReStart
  9292                           
  9293                           ;APDS9960.c: 913:     I2C_Write_Byte((0x39 << 1) | 0x01);
  9294  0C93  3073               	movlw	115
  9295  0C94  318C  242C  318C   	fcall	_I2C_Write_Byte
  9296                           
  9297                           ;APDS9960.c: 914:     val=I2C_Read_Byte();
  9298  0C97  318B  236B  318C   	fcall	_I2C_Read_Byte
  9299  0C9A  0020               	movlb	0	; select bank0
  9300  0C9B  00A6               	movwf	??_wireReadDataByte
  9301  0C9C  0826               	movf	??_wireReadDataByte,w
  9302  0C9D  00A8               	movwf	wireReadDataByte@val
  9303                           
  9304                           ;APDS9960.c: 915:     I2C_Send_NACK();
  9305  0C9E  318A  22BD  318C   	fcall	_I2C_Send_NACK
  9306                           
  9307                           ;APDS9960.c: 916:     I2C_Stop();
  9308  0CA1  318A  22C9         	fcall	_I2C_Stop
  9309                           
  9310                           ;APDS9960.c: 918:     return val;
  9311  0CA3  0020               	movlb	0	; select bank0
  9312  0CA4  0828               	movf	wireReadDataByte@val,w
  9313  0CA5  0008               	return
  9314  0CA6                     __end_of_wireReadDataByte:	
  9315                           
  9316                           	psect	text34
  9317  0C2C                     __ptext34:	
  9318 ;; *************** function _I2C_Write_Byte *****************
  9319 ;; Defined at:
  9320 ;;		line 75 in file "i2c.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  Byte            1    wreg     unsigned char 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  Byte            1    3[BANK0 ] unsigned char 
  9325 ;;  count           2    4[BANK0 ] unsigned int 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0, pclath, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;Total ram usage:        5 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    6
  9342 ;; This function calls:
  9343 ;;		_i2c1_driver_TXData
  9344 ;; This function is called by:
  9345 ;;		_wireReadDataBlock
  9346 ;;		_wireWriteDataByte
  9347 ;;		_wireReadDataByte
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           
  9352                           ;psect for function _I2C_Write_Byte
  9353  0C2C                     _I2C_Write_Byte:	
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  9357                           ;I2C_Write_Byte@Byte stored from wreg
  9358  0C2C  0020               	movlb	0	; select bank0
  9359  0C2D  00A3               	movwf	I2C_Write_Byte@Byte
  9360                           
  9361                           ;i2c.c: 75: void I2C_Write_Byte(unsigned char Byte);i2c.c: 76: {;i2c.c: 80:     i2c1_dri
      +                          ver_TXData(Byte);
  9362  0C2E  0823               	movf	I2C_Write_Byte@Byte,w
  9363  0C2F  318B  2310  318C   	fcall	_i2c1_driver_TXData
  9364                           
  9365                           ;i2c.c: 83:     unsigned int count = 0;
  9366  0C32  0020               	movlb	0	; select bank0
  9367  0C33  01A4               	clrf	I2C_Write_Byte@count
  9368  0C34  01A5               	clrf	I2C_Write_Byte@count+1
  9369  0C35                     l1027:	
  9370                           ;i2c.c: 84:     while(SSP1CON2bits.ACKSTAT);
  9371                           
  9372  0C35  0024               	movlb	4	; select bank4
  9373  0C36  1B16               	btfsc	22,6	;volatile
  9374  0C37  2C35               	goto	l1027
  9375  0C38                     l4995:	
  9376  0C38  0020               	movlb	0	; select bank0
  9377  0C39  0825               	movf	I2C_Write_Byte@count+1,w
  9378  0C3A  00A2               	movwf	??_I2C_Write_Byte+1
  9379  0C3B  0824               	movf	I2C_Write_Byte@count,w
  9380  0C3C  00A1               	movwf	??_I2C_Write_Byte
  9381  0C3D  0AA4               	incf	I2C_Write_Byte@count,f
  9382  0C3E  1903               	skipnz
  9383  0C3F  0AA5               	incf	I2C_Write_Byte@count+1,f
  9384  0C40  3000               	movlw	0
  9385  0C41  0222               	subwf	??_I2C_Write_Byte+1,w
  9386  0C42  3005               	movlw	5
  9387  0C43  1903               	skipnz
  9388  0C44  0221               	subwf	??_I2C_Write_Byte,w
  9389  0C45  1803               	btfsc	3,0
  9390  0C46  0008               	return
  9391  0C47  2C38               	goto	l4995
  9392  0C48                     __end_of_I2C_Write_Byte:	
  9393                           
  9394                           	psect	text35
  9395  0B10                     __ptext35:	
  9396 ;; *************** function _i2c1_driver_TXData *****************
  9397 ;; Defined at:
  9398 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  d               1    wreg     unsigned char 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  d               1    0[BANK0 ] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;Total ram usage:        1 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    5
  9419 ;; This function calls:
  9420 ;;		Nothing
  9421 ;; This function is called by:
  9422 ;;		_I2C_Write_Byte
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function _i2c1_driver_TXData
  9428  0B10                     _i2c1_driver_TXData:	
  9429                           
  9430                           ;incstack = 0
  9431                           ; Regs used in _i2c1_driver_TXData: [wreg]
  9432                           ;i2c1_driver_TXData@d stored from wreg
  9433  0B10  0020               	movlb	0	; select bank0
  9434  0B11  00A0               	movwf	i2c1_driver_TXData@d
  9435                           
  9436                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
  9437  0B12  0820               	movf	i2c1_driver_TXData@d,w
  9438  0B13  0024               	movlb	4	; select bank4
  9439  0B14  0091               	movwf	17	;volatile
  9440  0B15  0008               	return
  9441  0B16                     __end_of_i2c1_driver_TXData:	
  9442                           
  9443                           	psect	text36
  9444  0AC9                     __ptext36:	
  9445 ;; *************** function _I2C_Stop *****************
  9446 ;; Defined at:
  9447 ;;		line 50 in file "i2c.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;		None
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  1    wreg      void 
  9454 ;; Registers used:
  9455 ;;		status,2, status,0, pclath, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;Total ram usage:        0 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    6
  9468 ;; This function calls:
  9469 ;;		_i2c1_driver_stop
  9470 ;; This function is called by:
  9471 ;;		_wireReadDataBlock
  9472 ;;		_wireWriteDataByte
  9473 ;;		_wireReadDataByte
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function _I2C_Stop
  9479  0AC9                     _I2C_Stop:	
  9480                           
  9481                           ;i2c.c: 52:  i2c1_driver_stop();
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
  9485  0AC9  318A  22C6         	fcall	_i2c1_driver_stop
  9486  0ACB  0008               	return
  9487  0ACC                     __end_of_I2C_Stop:	
  9488                           
  9489                           	psect	text37
  9490  0AC6                     __ptext37:	
  9491 ;; *************** function _i2c1_driver_stop *****************
  9492 ;; Defined at:
  9493 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;		None
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		None
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        0 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    5
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_I2C_Stop
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function _i2c1_driver_stop
  9523  0AC6                     _i2c1_driver_stop:	
  9524                           
  9525                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
  9526                           
  9527                           ;incstack = 0
  9528                           ; Regs used in _i2c1_driver_stop: []
  9529  0AC6  0024               	movlb	4	; select bank4
  9530  0AC7  1516               	bsf	22,2	;volatile
  9531  0AC8  0008               	return
  9532  0AC9                     __end_of_i2c1_driver_stop:	
  9533                           
  9534                           	psect	text38
  9535  0AC3                     __ptext38:	
  9536 ;; *************** function _I2C_Start *****************
  9537 ;; Defined at:
  9538 ;;		line 35 in file "i2c.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;		None
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;		None
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  1    wreg      void 
  9545 ;; Registers used:
  9546 ;;		status,2, status,0, pclath, cstack
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;Total ram usage:        0 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:    6
  9559 ;; This function calls:
  9560 ;;		_i2c1_driver_start
  9561 ;; This function is called by:
  9562 ;;		_wireReadDataBlock
  9563 ;;		_wireWriteDataByte
  9564 ;;		_wireReadDataByte
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function _I2C_Start
  9570  0AC3                     _I2C_Start:	
  9571                           
  9572                           ;i2c.c: 37:  i2c1_driver_start();
  9573                           
  9574                           ;incstack = 0
  9575                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
  9576  0AC3  318A  22C0         	fcall	_i2c1_driver_start
  9577  0AC5  0008               	return
  9578  0AC6                     __end_of_I2C_Start:	
  9579                           
  9580                           	psect	text39
  9581  0AC0                     __ptext39:	
  9582 ;; *************** function _i2c1_driver_start *****************
  9583 ;; Defined at:
  9584 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		None
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    5
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_I2C_Start
  9609 ;;		_i2c_masterOperation
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _i2c1_driver_start
  9615  0AC0                     _i2c1_driver_start:	
  9616                           
  9617                           ;mcc_generated_files/i2c1_driver.c: 148:     SSP1CON2bits.SEN = 1;
  9618                           
  9619                           ;incstack = 0
  9620                           ; Regs used in _i2c1_driver_start: []
  9621  0AC0  0024               	movlb	4	; select bank4
  9622  0AC1  1416               	bsf	22,0	;volatile
  9623  0AC2  0008               	return
  9624  0AC3                     __end_of_i2c1_driver_start:	
  9625                           
  9626                           	psect	text40
  9627  0ABD                     __ptext40:	
  9628 ;; *************** function _I2C_Send_NACK *****************
  9629 ;; Defined at:
  9630 ;;		line 66 in file "i2c.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		status,2, status,0, pclath, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;Total ram usage:        0 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    6
  9651 ;; This function calls:
  9652 ;;		_i2c1_driver_sendNACK
  9653 ;; This function is called by:
  9654 ;;		_wireReadDataBlock
  9655 ;;		_wireReadDataByte
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _I2C_Send_NACK
  9661  0ABD                     _I2C_Send_NACK:	
  9662                           
  9663                           ;i2c.c: 68:     i2c1_driver_sendNACK();
  9664                           
  9665                           ;incstack = 0
  9666                           ; Regs used in _I2C_Send_NACK: [status,2+status,0+pclath+cstack]
  9667  0ABD  3187  27FC         	fcall	_i2c1_driver_sendNACK
  9668  0ABF  0008               	return
  9669  0AC0                     __end_of_I2C_Send_NACK:	
  9670                           
  9671                           	psect	text41
  9672  07FC                     __ptext41:	
  9673 ;; *************** function _i2c1_driver_sendNACK *****************
  9674 ;; Defined at:
  9675 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;		None
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;		None
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  1    wreg      void 
  9682 ;; Registers used:
  9683 ;;		None
  9684 ;; Tracked objects:
  9685 ;;		On entry : 0/0
  9686 ;;		On exit  : 0/0
  9687 ;;		Unchanged: 0/0
  9688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;Total ram usage:        0 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; Hardware stack levels required when called:    5
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_I2C_Send_NACK
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _i2c1_driver_sendNACK
  9705  07FC                     _i2c1_driver_sendNACK:	
  9706                           
  9707                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in _i2c1_driver_sendNACK: []
  9711  07FC  0024               	movlb	4	; select bank4
  9712  07FD  1696               	bsf	22,5	;volatile
  9713                           
  9714                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
  9715  07FE  1616               	bsf	22,4	;volatile
  9716  07FF  0008               	return
  9717  0800                     __end_of_i2c1_driver_sendNACK:	
  9718                           
  9719                           	psect	text42
  9720  0B6B                     __ptext42:	
  9721 ;; *************** function _I2C_Read_Byte *****************
  9722 ;; Defined at:
  9723 ;;		line 115 in file "i2c.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      unsigned char 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0, pclath, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    6
  9744 ;; This function calls:
  9745 ;;		_i2c1_driver_getRXData
  9746 ;;		_i2c1_driver_isBufferFull
  9747 ;;		_i2c1_driver_startRX
  9748 ;; This function is called by:
  9749 ;;		_wireReadDataBlock
  9750 ;;		_wireReadDataByte
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _I2C_Read_Byte
  9756  0B6B                     _I2C_Read_Byte:	
  9757                           
  9758                           ;i2c.c: 117:     i2c1_driver_startRX();
  9759                           
  9760                           ;incstack = 0
  9761                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  9762  0B6B  318A  22BA  318B   	fcall	_i2c1_driver_startRX
  9763  0B6E                     l5001:	
  9764                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
  9765                           
  9766                           
  9767                           ;i2c.c: 121:  while (i2c1_driver_isBufferFull() == 0) {
  9768  0B6E  318B  2330  318B   	fcall	_i2c1_driver_isBufferFull
  9769  0B71  1C03               	btfss	3,0
  9770  0B72  2B6E               	goto	l5001
  9771                           
  9772                           ;i2c.c: 137:   return i2c1_driver_getRXData();
  9773  0B73  318A  22B7         	fcall	_i2c1_driver_getRXData
  9774  0B75  0008               	return
  9775  0B76                     __end_of_I2C_Read_Byte:	
  9776                           
  9777                           	psect	text43
  9778  0ABA                     __ptext43:	
  9779 ;; *************** function _i2c1_driver_startRX *****************
  9780 ;; Defined at:
  9781 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;		None
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		None
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9799 ;;Total ram usage:        0 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    5
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_I2C_Read_Byte
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function _i2c1_driver_startRX
  9811  0ABA                     _i2c1_driver_startRX:	
  9812                           
  9813                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
  9814                           
  9815                           ;incstack = 0
  9816                           ; Regs used in _i2c1_driver_startRX: []
  9817  0ABA  0024               	movlb	4	; select bank4
  9818  0ABB  1596               	bsf	22,3	;volatile
  9819  0ABC  0008               	return
  9820  0ABD                     __end_of_i2c1_driver_startRX:	
  9821                           
  9822                           	psect	text44
  9823  0B30                     __ptext44:	
  9824 ;; *************** function _i2c1_driver_isBufferFull *****************
  9825 ;; Defined at:
  9826 ;;		line 213 in file "mcc_generated_files/i2c1_driver.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;		None
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;		None               void
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;Total ram usage:        1 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; Hardware stack levels required when called:    5
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		_I2C_Read_Byte
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           
  9855                           ;psect for function _i2c1_driver_isBufferFull
  9856  0B30                     _i2c1_driver_isBufferFull:	
  9857                           
  9858                           ;mcc_generated_files/i2c1_driver.c: 215:     return SSP1STATbits.BF;
  9859                           
  9860                           ;incstack = 0
  9861                           ; Regs used in _i2c1_driver_isBufferFull: [wreg+status,2+status,0]
  9862  0B30  0024               	movlb	4	; select bank4
  9863  0B31  0814               	movf	20,w	;volatile
  9864  0B32  3901               	andlw	1
  9865  0B33  0020               	movlb	0	; select bank0
  9866  0B34  00A0               	movwf	??_i2c1_driver_isBufferFull
  9867  0B35  0C20               	rrf	??_i2c1_driver_isBufferFull,w
  9868  0B36  0008               	return
  9869  0B37                     __end_of_i2c1_driver_isBufferFull:	
  9870                           
  9871                           	psect	text45
  9872  0AB7                     __ptext45:	
  9873 ;; *************** function _i2c1_driver_getRXData *****************
  9874 ;; Defined at:
  9875 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      unsigned char 
  9882 ;; Registers used:
  9883 ;;		wreg
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;Total ram usage:        0 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:    5
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_I2C_Read_Byte
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           
  9904                           ;psect for function _i2c1_driver_getRXData
  9905  0AB7                     _i2c1_driver_getRXData:	
  9906                           
  9907                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _i2c1_driver_getRXData: [wreg]
  9911  0AB7  0024               	movlb	4	; select bank4
  9912  0AB8  0811               	movf	17,w	;volatile
  9913  0AB9  0008               	return
  9914  0ABA                     __end_of_i2c1_driver_getRXData:	
  9915                           
  9916                           	psect	text46
  9917  0AB4                     __ptext46:	
  9918 ;; *************** function _I2C_ReStart *****************
  9919 ;; Defined at:
  9920 ;;		line 43 in file "i2c.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;		None
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		status,2, status,0, pclath, cstack
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;Total ram usage:        0 bytes
  9939 ;; Hardware stack levels used:    1
  9940 ;; Hardware stack levels required when called:    6
  9941 ;; This function calls:
  9942 ;;		_i2c1_driver_restart
  9943 ;; This function is called by:
  9944 ;;		_wireReadDataBlock
  9945 ;;		_wireReadDataByte
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _I2C_ReStart
  9951  0AB4                     _I2C_ReStart:	
  9952                           
  9953                           ;i2c.c: 45:  i2c1_driver_restart();
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _I2C_ReStart: [status,2+status,0+pclath+cstack]
  9957  0AB4  318A  22B1         	fcall	_i2c1_driver_restart
  9958  0AB6  0008               	return
  9959  0AB7                     __end_of_I2C_ReStart:	
  9960                           
  9961                           	psect	text47
  9962  0AB1                     __ptext47:	
  9963 ;; *************** function _i2c1_driver_restart *****************
  9964 ;; Defined at:
  9965 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      void 
  9972 ;; Registers used:
  9973 ;;		None
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;Total ram usage:        0 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    5
  9986 ;; This function calls:
  9987 ;;		Nothing
  9988 ;; This function is called by:
  9989 ;;		_I2C_ReStart
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           
  9994                           ;psect for function _i2c1_driver_restart
  9995  0AB1                     _i2c1_driver_restart:	
  9996                           
  9997                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
  9998                           
  9999                           ;incstack = 0
 10000                           ; Regs used in _i2c1_driver_restart: []
 10001  0AB1  0024               	movlb	4	; select bank4
 10002  0AB2  1496               	bsf	22,1	;volatile
 10003  0AB3  0008               	return
 10004  0AB4                     __end_of_i2c1_driver_restart:	
 10005                           
 10006                           	psect	text48
 10007  0B76                     __ptext48:	
 10008 ;; *************** function _SYSTEM_Initialize *****************
 10009 ;; Defined at:
 10010 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        0 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    7
 10031 ;; This function calls:
 10032 ;;		_OSCILLATOR_Initialize
 10033 ;;		_PIN_MANAGER_Initialize
 10034 ;;		_PMD_Initialize
 10035 ;;		_WDT_Initialize
 10036 ;; This function is called by:
 10037 ;;		_main
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           
 10042                           ;psect for function _SYSTEM_Initialize
 10043  0B76                     _SYSTEM_Initialize:	
 10044                           
 10045                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10049  0B76  318B  2347  318B   	fcall	_PMD_Initialize
 10050                           
 10051                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10052  0B79  318F  2730  318B   	fcall	_PIN_MANAGER_Initialize
 10053                           
 10054                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10055  0B7C  318B  234F  318B   	fcall	_OSCILLATOR_Initialize
 10056                           
 10057                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 10058  0B7F  318A  22F0         	fcall	_WDT_Initialize
 10059  0B81  0008               	return
 10060  0B82                     __end_of_SYSTEM_Initialize:	
 10061                           
 10062                           	psect	text49
 10063  0AF0                     __ptext49:	
 10064 ;; *************** function _WDT_Initialize *****************
 10065 ;; Defined at:
 10066 ;;		line 73 in file "mcc_generated_files/mcc.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    5
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_SYSTEM_Initialize
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _WDT_Initialize
 10096  0AF0                     _WDT_Initialize:	
 10097                           
 10098                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in _WDT_Initialize: [wreg]
 10102  0AF0  3016               	movlw	22
 10103  0AF1  0021               	movlb	1	; select bank1
 10104  0AF2  0097               	movwf	23	;volatile
 10105  0AF3  0008               	return
 10106  0AF4                     __end_of_WDT_Initialize:	
 10107                           
 10108                           	psect	text50
 10109  0B47                     __ptext50:	
 10110 ;; *************** function _PMD_Initialize *****************
 10111 ;; Defined at:
 10112 ;;		line 79 in file "mcc_generated_files/mcc.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		status,2
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    5
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_SYSTEM_Initialize
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function _PMD_Initialize
 10142  0B47                     _PMD_Initialize:	
 10143                           
 10144                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 10145                           
 10146                           ;incstack = 0
 10147                           ; Regs used in _PMD_Initialize: [status,2]
 10148  0B47  0032               	movlb	18	; select bank18
 10149  0B48  0191               	clrf	17	;volatile
 10150                           
 10151                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 10152  0B49  0192               	clrf	18	;volatile
 10153                           
 10154                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 10155  0B4A  0193               	clrf	19	;volatile
 10156                           
 10157                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 10158  0B4B  0194               	clrf	20	;volatile
 10159                           
 10160                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 10161  0B4C  0195               	clrf	21	;volatile
 10162                           
 10163                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 10164  0B4D  0196               	clrf	22	;volatile
 10165  0B4E  0008               	return
 10166  0B4F                     __end_of_PMD_Initialize:	
 10167                           
 10168                           	psect	text51
 10169  0F30                     __ptext51:	
 10170 ;; *************** function _PIN_MANAGER_Initialize *****************
 10171 ;; Defined at:
 10172 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0, pclath, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;Total ram usage:        0 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    6
 10193 ;; This function calls:
 10194 ;;		_IOCCF1_SetInterruptHandler
 10195 ;; This function is called by:
 10196 ;;		_SYSTEM_Initialize
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           
 10201                           ;psect for function _PIN_MANAGER_Initialize
 10202  0F30                     _PIN_MANAGER_Initialize:	
 10203                           
 10204                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 10205                           
 10206                           ;incstack = 0
 10207                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10208  0F30  0022               	movlb	2	; select bank2
 10209  0F31  018C               	clrf	12	;volatile
 10210                           
 10211                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10212  0F32  018D               	clrf	13	;volatile
 10213                           
 10214                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10215  0F33  018E               	clrf	14	;volatile
 10216                           
 10217                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
 10218  0F34  3011               	movlw	17
 10219  0F35  0021               	movlb	1	; select bank1
 10220  0F36  008C               	movwf	12	;volatile
 10221                           
 10222                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
 10223  0F37  30F0               	movlw	240
 10224  0F38  008D               	movwf	13	;volatile
 10225                           
 10226                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
 10227  0F39  30DF               	movlw	223
 10228  0F3A  008E               	movwf	14	;volatile
 10229                           
 10230                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xDD;
 10231  0F3B  30DD               	movlw	221
 10232  0F3C  0023               	movlb	3	; select bank3
 10233  0F3D  008E               	movwf	14	;volatile
 10234                           
 10235                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x50;
 10236  0F3E  3050               	movlw	80
 10237  0F3F  008D               	movwf	13	;volatile
 10238                           
 10239                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x11;
 10240  0F40  3011               	movlw	17
 10241  0F41  008C               	movwf	12	;volatile
 10242                           
 10243                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 10244  0F42  0024               	movlb	4	; select bank4
 10245  0F43  018D               	clrf	13	;volatile
 10246                           
 10247                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
 10248  0F44  018C               	clrf	12	;volatile
 10249                           
 10250                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x02;
 10251  0F45  3002               	movlw	2
 10252  0F46  008E               	movwf	14	;volatile
 10253                           
 10254                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
 10255  0F47  0025               	movlb	5	; select bank5
 10256  0F48  018C               	clrf	12	;volatile
 10257                           
 10258                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
 10259  0F49  018D               	clrf	13	;volatile
 10260                           
 10261                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
 10262  0F4A  018E               	clrf	14	;volatile
 10263                           
 10264                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
 10265  0F4B  3037               	movlw	55
 10266  0F4C  0026               	movlb	6	; select bank6
 10267  0F4D  008C               	movwf	12	;volatile
 10268                           
 10269                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
 10270  0F4E  30F0               	movlw	240
 10271  0F4F  008D               	movwf	13	;volatile
 10272                           
 10273                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
 10274  0F50  30FF               	movlw	255
 10275  0F51  008E               	movwf	14	;volatile
 10276                           
 10277                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
 10278  0F52  0027               	movlb	7	; select bank7
 10279  0F53  1099               	bcf	25,1	;volatile
 10280                           
 10281                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 0;
 10282  0F54  1098               	bcf	24,1	;volatile
 10283                           
 10284                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
 10285  0F55  1497               	bsf	23,1	;volatile
 10286                           
 10287                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
 10288  0F56  3092               	movlw	low _IOCCF1_DefaultInterruptHandler
 10289  0F57  0020               	movlb	0	; select bank0
 10290  0F58  00A0               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
 10291  0F59  300A               	movlw	high _IOCCF1_DefaultInterruptHandler
 10292  0F5A  00A1               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
 10293  0F5B  318B  230A         	fcall	_IOCCF1_SetInterruptHandler
 10294                           
 10295                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
 10296  0F5D  0021               	movlb	1	; select bank1
 10297  0F5E  1610               	bsf	16,4	;volatile
 10298                           
 10299                           ;mcc_generated_files/pin_manager.c: 121:     SSP1CLKPPS = 0x0F;
 10300  0F5F  300F               	movlw	15
 10301  0F60  003C               	movlb	28	; select bank28
 10302  0F61  00A0               	movwf	32	;volatile
 10303                           
 10304                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x18;
 10305  0F62  3018               	movlw	24
 10306  0F63  003D               	movlb	29	; select bank29
 10307  0F64  009F               	movwf	31	;volatile
 10308                           
 10309                           ;mcc_generated_files/pin_manager.c: 123:     RB5PPS = 0x19;
 10310  0F65  3019               	movlw	25
 10311  0F66  009D               	movwf	29	;volatile
 10312                           
 10313                           ;mcc_generated_files/pin_manager.c: 124:     SSP1DATPPS = 0x0D;
 10314  0F67  300D               	movlw	13
 10315  0F68  003C               	movlb	28	; select bank28
 10316  0F69  00A1               	movwf	33	;volatile
 10317  0F6A  0008               	return
 10318  0F6B                     __end_of_PIN_MANAGER_Initialize:	
 10319                           
 10320                           	psect	text52
 10321  0B0A                     __ptext52:	
 10322 ;; *************** function _IOCCF1_SetInterruptHandler *****************
 10323 ;; Defined at:
 10324 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10327 ;;		 -> GestureInterruptHandler(1), IOCCF1_DefaultInterruptHandler(1), 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1    wreg      void 
 10332 ;; Registers used:
 10333 ;;		wreg
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;Total ram usage:        2 bytes
 10344 ;; Hardware stack levels used:    1
 10345 ;; Hardware stack levels required when called:    5
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_PIN_MANAGER_Initialize
 10350 ;;		_main
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           
 10355                           ;psect for function _IOCCF1_SetInterruptHandler
 10356  0B0A                     _IOCCF1_SetInterruptHandler:	
 10357                           
 10358                           ;mcc_generated_files/pin_manager.c: 155:     IOCCF1_InterruptHandler = InterruptHandler;
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
 10362  0B0A  0020               	movlb	0	; select bank0
 10363  0B0B  0821               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
 10364  0B0C  00EE               	movwf	_IOCCF1_InterruptHandler+1
 10365  0B0D  0820               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
 10366  0B0E  00ED               	movwf	_IOCCF1_InterruptHandler
 10367  0B0F  0008               	return
 10368  0B10                     __end_of_IOCCF1_SetInterruptHandler:	
 10369                           
 10370                           	psect	text53
 10371  0B4F                     __ptext53:	
 10372 ;; *************** function _OSCILLATOR_Initialize *****************
 10373 ;; Defined at:
 10374 ;;		line 59 in file "mcc_generated_files/mcc.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;		None
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;		None
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  1    wreg      void 
 10381 ;; Registers used:
 10382 ;;		wreg, status,2
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;Total ram usage:        0 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    5
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_SYSTEM_Initialize
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           
 10403                           ;psect for function _OSCILLATOR_Initialize
 10404  0B4F                     _OSCILLATOR_Initialize:	
 10405                           
 10406                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10410  0B4F  3062               	movlw	98
 10411  0B50  0032               	movlb	18	; select bank18
 10412  0B51  0099               	movwf	25	;volatile
 10413                           
 10414                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
 10415  0B52  019B               	clrf	27	;volatile
 10416                           
 10417                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
 10418  0B53  019D               	clrf	29	;volatile
 10419                           
 10420                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x03;
 10421  0B54  3003               	movlw	3
 10422  0B55  009F               	movwf	31	;volatile
 10423                           
 10424                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 10425  0B56  019E               	clrf	30	;volatile
 10426  0B57  0008               	return
 10427  0B58                     __end_of_OSCILLATOR_Initialize:	
 10428                           
 10429                           	psect	intentry
 10430  0004                     __pintentry:	
 10431 ;; *************** function _INTERRUPT_InterruptManager *****************
 10432 ;; Defined at:
 10433 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;		None
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      void 
 10440 ;; Registers used:
 10441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;Total ram usage:        0 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:    4
 10454 ;; This function calls:
 10455 ;;		Absolute function
 10456 ;;		_PIN_MANAGER_IOC
 10457 ;;		_i2c_ISR
 10458 ;;		_i2c_busCollisionISR
 10459 ;; This function is called by:
 10460 ;;		Interrupt level 1
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464  0004                     _INTERRUPT_InterruptManager:	
 10465                           
 10466                           ;incstack = 0
 10467  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10468                           
 10469                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10470  0005  3180               	pagesel	$
 10471                           
 10472                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 10473  0006  0021               	movlb	1	; select bank1
 10474  0007  1E10               	btfss	16,4	;volatile
 10475  0008  2810               	goto	i1l245
 10476  0009  0020               	movlb	0	; select bank0
 10477  000A  1E10               	btfss	16,4	;volatile
 10478  000B  2810               	goto	i1l245
 10479                           
 10480                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 10481  000C  318A  22FE  3180   	fcall	_PIN_MANAGER_IOC
 10482                           
 10483                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10484  000F  2829               	goto	i1l253
 10485  0010                     i1l245:	
 10486                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 10487                           
 10488  0010  1F0B               	btfss	11,6	;volatile
 10489  0011  2829               	goto	i1l253
 10490                           
 10491                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 10492  0012  0021               	movlb	1	; select bank1
 10493  0013  1D11               	btfss	17,2	;volatile
 10494  0014  281E               	goto	i1l248
 10495  0015  0020               	movlb	0	; select bank0
 10496  0016  1D11               	btfss	17,2	;volatile
 10497  0017  281E               	goto	i1l248
 10498                           
 10499                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
 10500  0018  0873               	movf	_i2c1_driver_busCollisionISR+1,w
 10501  0019  008A               	movwf	10
 10502  001A  0872               	movf	_i2c1_driver_busCollisionISR,w
 10503  001B  000A               	callw
 10504  001C  3180               	pagesel	$
 10505                           
 10506                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 10507  001D  2829               	goto	i1l253
 10508  001E                     i1l248:	
 10509                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 10510                           
 10511  001E  0021               	movlb	1	; select bank1
 10512  001F  1D91               	btfss	17,3	;volatile
 10513  0020  2829               	goto	i1l253
 10514  0021  0020               	movlb	0	; select bank0
 10515  0022  1D91               	btfss	17,3	;volatile
 10516  0023  2829               	goto	i1l253
 10517                           
 10518                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
 10519  0024  0871               	movf	_i2c1_driver_i2cISR+1,w
 10520  0025  008A               	movwf	10
 10521  0026  0870               	movf	_i2c1_driver_i2cISR,w
 10522  0027  000A               	callw
 10523  0028  3180               	pagesel	$
 10524  0029                     i1l253:	
 10525                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
 10526                           
 10527                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10528                           
 10529  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10530  002A  0009               	retfie
 10531  002B                     __end_of_INTERRUPT_InterruptManager:	
 10532                           
 10533                           	psect	text55
 10534  0AAE                     __ptext55:	
 10535 ;; *************** function _i2c_busCollisionISR *****************
 10536 ;; Defined at:
 10537 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    1
 10558 ;; This function calls:
 10559 ;;		_i2c1_driver_clearBusCollision
 10560 ;; This function is called by:
 10561 ;;		_i2c_open
 10562 ;;		_INTERRUPT_InterruptManager
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           
 10567                           ;psect for function _i2c_busCollisionISR
 10568  0AAE                     _i2c_busCollisionISR:	
 10569                           
 10570                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 10574  0AAE  318A  22AB         	fcall	_i2c1_driver_clearBusCollision
 10575  0AB0  0008               	return
 10576  0AB1                     __end_of_i2c_busCollisionISR:	
 10577                           
 10578                           	psect	text56
 10579  0AAB                     __ptext56:	
 10580 ;; *************** function _i2c1_driver_clearBusCollision *****************
 10581 ;; Defined at:
 10582 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		None
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_i2c_busCollisionISR
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function _i2c1_driver_clearBusCollision
 10611  0AAB                     _i2c1_driver_clearBusCollision:	
 10612                           
 10613                           ;mcc_generated_files/i2c1_driver.c: 255:     PIR1bits.BCL1IF = 0;
 10614                           
 10615                           ;incstack = 0
 10616                           ; Regs used in _i2c1_driver_clearBusCollision: []
 10617  0AAB  0020               	movlb	0	; select bank0
 10618  0AAC  1111               	bcf	17,2	;volatile
 10619  0AAD  0008               	return
 10620  0AAE                     __end_of_i2c1_driver_clearBusCollision:	
 10621                           
 10622                           	psect	text57
 10623  0CCB                     __ptext57:	
 10624 ;; *************** function _i2c_ISR *****************
 10625 ;; Defined at:
 10626 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;Total ram usage:        3 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    3
 10647 ;; This function calls:
 10648 ;;		_do_I2C_DO_ACK
 10649 ;;		_do_I2C_DO_ADDRESS_NACK
 10650 ;;		_do_I2C_DO_NACK_RESTART
 10651 ;;		_do_I2C_DO_NACK_STOP
 10652 ;;		_do_I2C_IDLE
 10653 ;;		_do_I2C_RCEN
 10654 ;;		_do_I2C_RESET
 10655 ;;		_do_I2C_RX
 10656 ;;		_do_I2C_SEND_ADR_READ
 10657 ;;		_do_I2C_SEND_ADR_WRITE
 10658 ;;		_do_I2C_SEND_RESTART
 10659 ;;		_do_I2C_SEND_RESTART_READ
 10660 ;;		_do_I2C_SEND_RESTART_WRITE
 10661 ;;		_do_I2C_SEND_STOP
 10662 ;;		_do_I2C_TX
 10663 ;;		_do_I2C_TX_EMPTY
 10664 ;;		_i2c1_driver_isNACK
 10665 ;;		_mssp1_clearIRQ
 10666 ;; This function is called by:
 10667 ;;		_i2c_open
 10668 ;;		_i2c_poller
 10669 ;;		_INTERRUPT_InterruptManager
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _i2c_ISR
 10675  0CCB                     _i2c_ISR:	
 10676                           
 10677                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 10678                           
 10679                           ;incstack = 0
 10680                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10681  0CCB  318A  22A8  318C   	fcall	_mssp1_clearIRQ
 10682                           
 10683                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 10684  0CCE  0023               	movlb	3	; select bank3
 10685  0CCF  1DA0               	btfss	_i2c_status^(0+384),3
 10686  0CD0  2CDB               	goto	i1l4445
 10687  0CD1  318B  2337  318C   	fcall	_i2c1_driver_isNACK
 10688  0CD4  1C03               	btfss	3,0
 10689  0CD5  2CDB               	goto	i1l4445
 10690                           
 10691                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 10692  0CD6  300F               	movlw	15
 10693  0CD7  00F9               	movwf	??_i2c_ISR
 10694  0CD8  0879               	movf	??_i2c_ISR,w
 10695  0CD9  0023               	movlb	3	; select bank3
 10696  0CDA  00A9               	movwf	(_i2c_status^(0+384)+9)
 10697  0CDB                     i1l4445:	
 10698                           
 10699                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 10700  0CDB  0023               	movlb	3	; select bank3
 10701  0CDC  0829               	movf	(_i2c_status^(0+384)+9),w
 10702  0CDD  00F9               	movwf	??_i2c_ISR
 10703  0CDE  01FA               	clrf	??_i2c_ISR+1
 10704  0CDF  35F9               	lslf	??_i2c_ISR,f
 10705  0CE0  0DFA               	rlf	??_i2c_ISR+1,f
 10706  0CE1  3000               	movlw	low (_fsmStateTable| (0+32768))
 10707  0CE2  0779               	addwf	??_i2c_ISR,w
 10708  0CE3  0084               	movwf	4
 10709  0CE4  3090               	movlw	high (_fsmStateTable| (0+32768))
 10710  0CE5  3D7A               	addwfc	??_i2c_ISR+1,w
 10711  0CE6  0085               	movwf	5
 10712  0CE7  3F01               	moviw [1]fsr0
 10713  0CE8  008A               	movwf	10
 10714  0CE9  3F00               	moviw [0]fsr0
 10715  0CEA  000A               	callw
 10716  0CEB  318C               	pagesel	$
 10717  0CEC  00FB               	movwf	??_i2c_ISR+2
 10718  0CED  087B               	movf	??_i2c_ISR+2,w
 10719  0CEE  0023               	movlb	3	; select bank3
 10720  0CEF  00A9               	movwf	(_i2c_status^(0+384)+9)
 10721  0CF0  0008               	return
 10722  0CF1                     __end_of_i2c_ISR:	
 10723                           
 10724                           	psect	text58
 10725  0AA8                     __ptext58:	
 10726 ;; *************** function _mssp1_clearIRQ *****************
 10727 ;; Defined at:
 10728 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		None
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;Total ram usage:        0 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_i2c_ISR
 10752 ;;		_i2c_open
 10753 ;;		_i2c_close
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           
 10758                           ;psect for function _mssp1_clearIRQ
 10759  0AA8                     _mssp1_clearIRQ:	
 10760                           
 10761                           ;mcc_generated_files/i2c1_driver.c: 55:         SSP1STAT = 0x00;
 10762                           
 10763                           ;incstack = 0
 10764                           ; Regs used in _mssp1_clearIRQ: []
 10765  0AA8  0020               	movlb	0	; select bank0
 10766  0AA9  1191               	bcf	17,3	;volatile
 10767  0AAA  0008               	return
 10768  0AAB                     __end_of_mssp1_clearIRQ:	
 10769                           
 10770                           	psect	text59
 10771  0F6B                     __ptext59:	
 10772 ;; *************** function _do_I2C_RX *****************
 10773 ;; Defined at:
 10774 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;		None
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      enum E7120
 10781 ;; Registers used:
 10782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;Total ram usage:        3 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    2
 10795 ;; This function calls:
 10796 ;;		_do_I2C_DO_NACK_RESTART
 10797 ;;		_do_I2C_DO_NACK_STOP
 10798 ;;		_i2c1_driver_sendACK
 10799 ;;		_returnReset
 10800 ;;		_returnStop
 10801 ;;		i1_i2c1_driver_getRXData
 10802 ;; This function is called by:
 10803 ;;		_i2c_ISR
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           
 10808                           ;psect for function _do_I2C_RX
 10809  0F6B                     _do_I2C_RX:	
 10810                           
 10811                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 10812                           
 10813                           ;incstack = 0
 10814                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10815  0F6B  318A  22A2  318F   	fcall	i1_i2c1_driver_getRXData
 10816  0F6E  00F6               	movwf	??_do_I2C_RX
 10817  0F6F  0023               	movlb	3	; select bank3
 10818  0F70  0822               	movf	(low ((_i2c_status| (0+256)+2)))^(0+128),w
 10819  0F71  0086               	movwf	6
 10820  0F72  0187               	clrf	7
 10821  0F73  0876               	movf	??_do_I2C_RX,w
 10822  0F74  0081               	movwf	1
 10823  0F75  3001               	movlw	1
 10824  0F76  00F6               	movwf	??_do_I2C_RX
 10825  0F77  0876               	movf	??_do_I2C_RX,w
 10826  0F78  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^(0+128),f
 10827                           
 10828                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 10829  0F79  3001               	movlw	1
 10830  0F7A  02A3               	subwf	(_i2c_status^(0+384)+3),f
 10831  0F7B  3000               	movlw	0
 10832  0F7C  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 10833  0F7D  0823               	movf	(_i2c_status^(0+384)+3),w
 10834  0F7E  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 10835  0F7F  1903               	btfsc	3,2
 10836  0F80  2F85               	goto	i1l173
 10837                           
 10838                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 10839  0F81  318A  22CC         	fcall	_i2c1_driver_sendACK
 10840                           
 10841                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 10842  0F83  3005               	movlw	5
 10843  0F84  0008               	return
 10844  0F85                     i1l173:	
 10845                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 10846                           
 10847                           
 10848                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 10849  0F85  1520               	bsf	_i2c_status^(0+384),2
 10850                           
 10851                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 10852  0F86  2F8D               	goto	i1l4029
 10853  0F87                     i1l4019:	
 10854                           
 10855                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 10856  0F87  318A  22EC         	fcall	_do_I2C_DO_NACK_RESTART
 10857  0F89  0008               	return
 10858  0F8A                     i1l4023:	
 10859                           
 10860                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 10861  0F8A  318A  22E8         	fcall	_do_I2C_DO_NACK_STOP
 10862  0F8C  0008               	return
 10863  0F8D                     i1l4029:	
 10864  0F8D  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 10865  0F8E  00F6               	movwf	??_do_I2C_RX
 10866  0F8F  0876               	movf	??_do_I2C_RX,w
 10867  0F90  00F6               	movwf	returnReset@p
 10868  0F91  300B               	movlw	11
 10869  0F92  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 10870  0F93  0086               	movwf	6
 10871  0F94  3001               	movlw	1	; select bank3/4
 10872  0F95  0087               	movwf	7
 10873  0F96  3F41               	moviw [1]fsr1
 10874  0F97  008A               	movwf	10
 10875  0F98  3F40               	moviw [0]fsr1
 10876  0F99  000A               	callw
 10877  0F9A  318F               	pagesel	$
 10878  0F9B  00F7               	movwf	??_do_I2C_RX+1
 10879  0F9C  01F8               	clrf	??_do_I2C_RX+2
 10880                           
 10881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10882                           ; Switch size 1, requested type "simple"
 10883                           ; Number of cases is 1, Range of values is 0 to 0
 10884                           ; switch strategies available:
 10885                           ; Name         Instructions Cycles
 10886                           ; simple_byte            4     3 (average)
 10887                           ; direct_byte            8     6 (fixed)
 10888                           ; jumptable            260     6 (fixed)
 10889                           ;	Chosen strategy is simple_byte
 10890  0F9D  0878               	movf	??_do_I2C_RX+2,w
 10891  0F9E  3A00               	xorlw	0	; case 0
 10892  0F9F  1903               	skipnz
 10893  0FA0  2FA2               	goto	i1l6275
 10894  0FA1  2F8A               	goto	i1l4023
 10895  0FA2                     i1l6275:	
 10896                           
 10897                           ; Switch size 1, requested type "simple"
 10898                           ; Number of cases is 4, Range of values is 1 to 4
 10899                           ; switch strategies available:
 10900                           ; Name         Instructions Cycles
 10901                           ; simple_byte           13     7 (average)
 10902                           ; direct_byte           17     9 (fixed)
 10903                           ; jumptable            263     9 (fixed)
 10904                           ;	Chosen strategy is simple_byte
 10905  0FA2  0877               	movf	??_do_I2C_RX+1,w
 10906  0FA3  3A01               	xorlw	1	; case 1
 10907  0FA4  1903               	skipnz
 10908  0FA5  2F8A               	goto	i1l4023
 10909  0FA6  3A03               	xorlw	3	; case 2
 10910  0FA7  1903               	skipnz
 10911  0FA8  2F87               	goto	i1l4019
 10912  0FA9  3A01               	xorlw	1	; case 3
 10913  0FAA  1903               	skipnz
 10914  0FAB  2F87               	goto	i1l4019
 10915  0FAC  3A07               	xorlw	7	; case 4
 10916  0FAD  1903               	skipnz
 10917  0FAE  2F8A               	goto	i1l4023
 10918  0FAF  2F8A               	goto	i1l4023
 10919  0FB0  0008               	return
 10920  0FB1                     __end_of_do_I2C_RX:	
 10921                           
 10922                           	psect	text60
 10923  0FB1                     __ptext60:	
 10924 ;; *************** function _do_I2C_TX *****************
 10925 ;; Defined at:
 10926 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;		None
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;		None
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      enum E7120
 10933 ;; Registers used:
 10934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;Total ram usage:        3 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    2
 10947 ;; This function calls:
 10948 ;;		_do_I2C_SEND_RESTART_READ
 10949 ;;		_do_I2C_SEND_RESTART_WRITE
 10950 ;;		_do_I2C_SEND_STOP
 10951 ;;		_i2c1_driver_isNACK
 10952 ;;		_returnReset
 10953 ;;		_returnStop
 10954 ;;		i1_i2c1_driver_TXData
 10955 ;; This function is called by:
 10956 ;;		_i2c_ISR
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function _do_I2C_TX
 10962  0FB1                     _do_I2C_TX:	
 10963                           
 10964                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 10965                           
 10966                           ;incstack = 0
 10967                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10968  0FB1  318B  2337  318F   	fcall	_i2c1_driver_isNACK
 10969  0FB4  1803               	btfsc	3,0
 10970  0FB5  2FC0               	goto	i1l3989
 10971  0FB6  2FE4               	goto	i1l157
 10972  0FB7                     i1l3975:	
 10973                           
 10974                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 10975  0FB7  318A  22D4         	fcall	_do_I2C_SEND_RESTART_READ
 10976  0FB9  0008               	return
 10977  0FBA                     i1l3979:	
 10978                           
 10979                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 10980  0FBA  318A  22D8         	fcall	_do_I2C_SEND_RESTART_WRITE
 10981  0FBC  0008               	return
 10982  0FBD                     i1l3983:	
 10983                           
 10984                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 10985  0FBD  318A  22E0         	fcall	_do_I2C_SEND_STOP
 10986  0FBF  0008               	return
 10987  0FC0                     i1l3989:	
 10988  0FC0  0023               	movlb	3	; select bank3
 10989  0FC1  083A               	movf	(low ((_i2c_status| (0+256)+26)))^(0+128),w
 10990  0FC2  00F6               	movwf	??_do_I2C_TX
 10991  0FC3  0876               	movf	??_do_I2C_TX,w
 10992  0FC4  00F6               	movwf	returnReset@p
 10993  0FC5  3011               	movlw	17
 10994  0FC6  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 10995  0FC7  0086               	movwf	6
 10996  0FC8  3001               	movlw	1	; select bank3/4
 10997  0FC9  0087               	movwf	7
 10998  0FCA  3F41               	moviw [1]fsr1
 10999  0FCB  008A               	movwf	10
 11000  0FCC  3F40               	moviw [0]fsr1
 11001  0FCD  000A               	callw
 11002  0FCE  318F               	pagesel	$
 11003  0FCF  00F7               	movwf	??_do_I2C_TX+1
 11004  0FD0  01F8               	clrf	??_do_I2C_TX+2
 11005                           
 11006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11007                           ; Switch size 1, requested type "simple"
 11008                           ; Number of cases is 1, Range of values is 0 to 0
 11009                           ; switch strategies available:
 11010                           ; Name         Instructions Cycles
 11011                           ; simple_byte            4     3 (average)
 11012                           ; direct_byte            8     6 (fixed)
 11013                           ; jumptable            260     6 (fixed)
 11014                           ;	Chosen strategy is simple_byte
 11015  0FD1  0878               	movf	??_do_I2C_TX+2,w
 11016  0FD2  3A00               	xorlw	0	; case 0
 11017  0FD3  1903               	skipnz
 11018  0FD4  2FD6               	goto	i1l6277
 11019  0FD5  2FBD               	goto	i1l3983
 11020  0FD6                     i1l6277:	
 11021                           
 11022                           ; Switch size 1, requested type "simple"
 11023                           ; Number of cases is 4, Range of values is 1 to 4
 11024                           ; switch strategies available:
 11025                           ; Name         Instructions Cycles
 11026                           ; simple_byte           13     7 (average)
 11027                           ; direct_byte           17     9 (fixed)
 11028                           ; jumptable            263     9 (fixed)
 11029                           ;	Chosen strategy is simple_byte
 11030  0FD6  0877               	movf	??_do_I2C_TX+1,w
 11031  0FD7  3A01               	xorlw	1	; case 1
 11032  0FD8  1903               	skipnz
 11033  0FD9  2FBD               	goto	i1l3983
 11034  0FDA  3A03               	xorlw	3	; case 2
 11035  0FDB  1903               	skipnz
 11036  0FDC  2FB7               	goto	i1l3975
 11037  0FDD  3A01               	xorlw	1	; case 3
 11038  0FDE  1903               	skipnz
 11039  0FDF  2FBA               	goto	i1l3979
 11040  0FE0  3A07               	xorlw	7	; case 4
 11041  0FE1  1903               	skipnz
 11042  0FE2  2FBD               	goto	i1l3983
 11043  0FE3  2FBD               	goto	i1l3983
 11044  0FE4                     i1l157:	
 11045                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 11046                           
 11047                           
 11048                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 11049  0FE4  0023               	movlb	3	; select bank3
 11050  0FE5  11A0               	bcf	_i2c_status^(0+384),3
 11051                           
 11052                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 11053  0FE6  3002               	movlw	2
 11054  0FE7  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 11055  0FE8  0086               	movwf	6
 11056  0FE9  3001               	movlw	1	; select bank3/4
 11057  0FEA  0087               	movwf	7
 11058  0FEB  3F40               	moviw [0]fsr1
 11059  0FEC  0084               	movwf	4
 11060  0FED  0185               	clrf	5
 11061  0FEE  0A81               	incf	1,f
 11062  0FEF  0800               	movf	0,w
 11063  0FF0  318A  22F4  318F   	fcall	i1_i2c1_driver_TXData
 11064                           
 11065                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 11066  0FF3  3001               	movlw	1
 11067  0FF4  0023               	movlb	3	; select bank3
 11068  0FF5  02A3               	subwf	(_i2c_status^(0+384)+3),f
 11069  0FF6  3000               	movlw	0
 11070  0FF7  3BA4               	subwfb	((_i2c_status+1)^(0+384)+3),f
 11071  0FF8  0823               	movf	(_i2c_status^(0+384)+3),w
 11072  0FF9  0424               	iorwf	((_i2c_status+1)^(0+384)+3),w
 11073  0FFA  1D03               	btfss	3,2
 11074  0FFB  2FFE               	goto	i1l3997
 11075  0FFC  3006               	movlw	6
 11076  0FFD  0008               	return
 11077  0FFE                     i1l3997:	
 11078  0FFE  3003               	movlw	3
 11079  0FFF  0008               	return
 11080  1000                     __end_of_do_I2C_TX:	
 11081                           
 11082                           	psect	text61
 11083  0DDF                     __ptext61:	
 11084 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 11085 ;; Defined at:
 11086 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;		None
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      enum E7120
 11093 ;; Registers used:
 11094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;Total ram usage:        3 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    2
 11107 ;; This function calls:
 11108 ;;		_do_I2C_SEND_RESTART
 11109 ;;		_do_I2C_SEND_STOP
 11110 ;;		_returnReset
 11111 ;;		_returnStop
 11112 ;; This function is called by:
 11113 ;;		_i2c_ISR
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           
 11118                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 11119  0DDF                     _do_I2C_DO_ADDRESS_NACK:	
 11120                           
 11121                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 11122                           
 11123                           ;incstack = 0
 11124                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11125  0DDF  0023               	movlb	3	; select bank3
 11126  0DE0  11A0               	bcf	_i2c_status^(0+384),3
 11127                           
 11128                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 11129  0DE1  3002               	movlw	2
 11130  0DE2  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
 11131  0DE3  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 11132  0DE4  00AA               	movwf	(_i2c_status^(0+384)+10)
 11133                           
 11134                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 11135  0DE5  2DEC               	goto	i1l3963
 11136  0DE6                     i1l3953:	
 11137                           
 11138                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 11139  0DE6  318A  22DC         	fcall	_do_I2C_SEND_RESTART
 11140  0DE8  0008               	return
 11141  0DE9                     i1l3957:	
 11142                           
 11143                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 11144  0DE9  318A  22E0         	fcall	_do_I2C_SEND_STOP
 11145  0DEB  0008               	return
 11146  0DEC                     i1l3963:	
 11147  0DEC  0839               	movf	(low ((_i2c_status| (0+256)+25)))^(0+128),w
 11148  0DED  00F6               	movwf	??_do_I2C_DO_ADDRESS_NACK
 11149  0DEE  0876               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 11150  0DEF  00F6               	movwf	returnReset@p
 11151  0DF0  300F               	movlw	15
 11152  0DF1  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 11153  0DF2  0086               	movwf	6
 11154  0DF3  3001               	movlw	1	; select bank3/4
 11155  0DF4  0087               	movwf	7
 11156  0DF5  3F41               	moviw [1]fsr1
 11157  0DF6  008A               	movwf	10
 11158  0DF7  3F40               	moviw [0]fsr1
 11159  0DF8  000A               	callw
 11160  0DF9  318D               	pagesel	$
 11161  0DFA  00F7               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 11162  0DFB  01F8               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 11163                           
 11164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11165                           ; Switch size 1, requested type "simple"
 11166                           ; Number of cases is 1, Range of values is 0 to 0
 11167                           ; switch strategies available:
 11168                           ; Name         Instructions Cycles
 11169                           ; simple_byte            4     3 (average)
 11170                           ; direct_byte            8     6 (fixed)
 11171                           ; jumptable            260     6 (fixed)
 11172                           ;	Chosen strategy is simple_byte
 11173  0DFC  0878               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 11174  0DFD  3A00               	xorlw	0	; case 0
 11175  0DFE  1903               	skipnz
 11176  0DFF  2E01               	goto	i1l6279
 11177  0E00  2DE9               	goto	i1l3957
 11178  0E01                     i1l6279:	
 11179                           
 11180                           ; Switch size 1, requested type "simple"
 11181                           ; Number of cases is 2, Range of values is 2 to 3
 11182                           ; switch strategies available:
 11183                           ; Name         Instructions Cycles
 11184                           ; simple_byte            7     4 (average)
 11185                           ; direct_byte           13     9 (fixed)
 11186                           ; jumptable            263     9 (fixed)
 11187                           ;	Chosen strategy is simple_byte
 11188  0E01  0877               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 11189  0E02  3A02               	xorlw	2	; case 2
 11190  0E03  1903               	skipnz
 11191  0E04  2DE6               	goto	i1l3953
 11192  0E05  3A01               	xorlw	1	; case 3
 11193  0E06  1903               	skipnz
 11194  0E07  2DE6               	goto	i1l3953
 11195  0E08  2DE9               	goto	i1l3957
 11196  0E09  0008               	return
 11197  0E0A                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 11198                           
 11199                           	psect	text62
 11200  0AEC                     __ptext62:	
 11201 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 11202 ;; Defined at:
 11203 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      enum E7120
 11210 ;; Registers used:
 11211 ;;		wreg, status,2, status,0, pclath, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;Total ram usage:        0 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    1
 11224 ;; This function calls:
 11225 ;;		i1_i2c1_driver_sendNACK
 11226 ;; This function is called by:
 11227 ;;		_do_I2C_RX
 11228 ;;		_i2c_ISR
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           
 11232                           
 11233                           ;psect for function _do_I2C_DO_NACK_RESTART
 11234  0AEC                     _do_I2C_DO_NACK_RESTART:	
 11235                           
 11236                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 11237                           
 11238                           ;incstack = 0
 11239                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11240  0AEC  318A  22D0         	fcall	i1_i2c1_driver_sendNACK
 11241                           
 11242                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 11243  0AEE  3009               	movlw	9
 11244  0AEF  0008               	return
 11245  0AF0                     __end_of_do_I2C_DO_NACK_RESTART:	
 11246                           
 11247                           	psect	text63
 11248  0AE8                     __ptext63:	
 11249 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 11250 ;; Defined at:
 11251 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      enum E7120
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0, pclath, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    1
 11272 ;; This function calls:
 11273 ;;		i1_i2c1_driver_sendNACK
 11274 ;; This function is called by:
 11275 ;;		_do_I2C_RX
 11276 ;;		_i2c_ISR
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function _do_I2C_DO_NACK_STOP
 11282  0AE8                     _do_I2C_DO_NACK_STOP:	
 11283                           
 11284                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 11285                           
 11286                           ;incstack = 0
 11287                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11288  0AE8  318A  22D0         	fcall	i1_i2c1_driver_sendNACK
 11289                           
 11290                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 11291  0AEA  300A               	movlw	10
 11292  0AEB  0008               	return
 11293  0AEC                     __end_of_do_I2C_DO_NACK_STOP:	
 11294                           
 11295                           	psect	text64
 11296  0AE4                     __ptext64:	
 11297 ;; *************** function _do_I2C_DO_ACK *****************
 11298 ;; Defined at:
 11299 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      enum E7120
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0, pclath, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;Total ram usage:        0 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    1
 11320 ;; This function calls:
 11321 ;;		_i2c1_driver_sendACK
 11322 ;; This function is called by:
 11323 ;;		_i2c_ISR
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           
 11328                           ;psect for function _do_I2C_DO_ACK
 11329  0AE4                     _do_I2C_DO_ACK:	
 11330                           
 11331                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 11332                           
 11333                           ;incstack = 0
 11334                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 11335  0AE4  318A  22CC         	fcall	_i2c1_driver_sendACK
 11336                           
 11337                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 11338  0AE6  3005               	movlw	5
 11339  0AE7  0008               	return
 11340  0AE8                     __end_of_do_I2C_DO_ACK:	
 11341                           
 11342                           	psect	text65
 11343  0B04                     __ptext65:	
 11344 ;; *************** function _do_I2C_RCEN *****************
 11345 ;; Defined at:
 11346 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;		None
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      enum E7120
 11353 ;; Registers used:
 11354 ;;		wreg, status,2, status,0, pclath, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;Total ram usage:        0 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    1
 11367 ;; This function calls:
 11368 ;;		i1_i2c1_driver_startRX
 11369 ;; This function is called by:
 11370 ;;		_i2c_ISR
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           
 11375                           ;psect for function _do_I2C_RCEN
 11376  0B04                     _do_I2C_RCEN:	
 11377                           
 11378                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 11379                           
 11380                           ;incstack = 0
 11381                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11382  0B04  0023               	movlb	3	; select bank3
 11383  0B05  11A0               	bcf	_i2c_status^(0+384),3
 11384                           
 11385                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 11386  0B06  318A  229F         	fcall	i1_i2c1_driver_startRX
 11387                           
 11388                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 11389  0B08  3004               	movlw	4
 11390  0B09  0008               	return
 11391  0B0A                     __end_of_do_I2C_RCEN:	
 11392                           
 11393                           	psect	text66
 11394  0B29                     __ptext66:	
 11395 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 11396 ;; Defined at:
 11397 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      enum E7120
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0, pclath, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;Total ram usage:        0 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:    1
 11418 ;; This function calls:
 11419 ;;		i1_i2c1_driver_TXData
 11420 ;; This function is called by:
 11421 ;;		_i2c_ISR
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function _do_I2C_SEND_ADR_WRITE
 11427  0B29                     _do_I2C_SEND_ADR_WRITE:	
 11428                           
 11429                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 11430                           
 11431                           ;incstack = 0
 11432                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11433  0B29  0023               	movlb	3	; select bank3
 11434  0B2A  15A0               	bsf	_i2c_status^(0+384),3
 11435                           
 11436                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 11437  0B2B  3521               	lslf	(_i2c_status^(0+384)+1),w
 11438  0B2C  318A  22F4         	fcall	i1_i2c1_driver_TXData
 11439                           
 11440                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 11441  0B2E  3003               	movlw	3
 11442  0B2F  0008               	return
 11443  0B30                     __end_of_do_I2C_SEND_ADR_WRITE:	
 11444                           
 11445                           	psect	text67
 11446  0B3F                     __ptext67:	
 11447 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 11448 ;; Defined at:
 11449 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1    wreg      enum E7120
 11456 ;; Registers used:
 11457 ;;		wreg, status,2, status,0, pclath, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:    1
 11470 ;; This function calls:
 11471 ;;		i1_i2c1_driver_TXData
 11472 ;; This function is called by:
 11473 ;;		_i2c_ISR
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           
 11478                           ;psect for function _do_I2C_SEND_ADR_READ
 11479  0B3F                     _do_I2C_SEND_ADR_READ:	
 11480                           
 11481                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 11482                           
 11483                           ;incstack = 0
 11484                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11485  0B3F  0023               	movlb	3	; select bank3
 11486  0B40  15A0               	bsf	_i2c_status^(0+384),3
 11487                           
 11488                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 11489  0B41  1403               	setc
 11490  0B42  0D21               	rlf	(_i2c_status^(0+384)+1),w
 11491  0B43  318A  22F4         	fcall	i1_i2c1_driver_TXData
 11492                           
 11493                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 11494  0B45  3005               	movlw	5
 11495  0B46  0008               	return
 11496  0B47                     __end_of_do_I2C_SEND_ADR_READ:	
 11497                           
 11498                           	psect	text68
 11499  0AE0                     __ptext68:	
 11500 ;; *************** function _do_I2C_SEND_STOP *****************
 11501 ;; Defined at:
 11502 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;		None
 11505 ;; Auto vars:     Size  Location     Type
 11506 ;;		None
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      enum E7120
 11509 ;; Registers used:
 11510 ;;		wreg, status,2, status,0, pclath, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11520 ;;Total ram usage:        0 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:    1
 11523 ;; This function calls:
 11524 ;;		i1_i2c1_driver_stop
 11525 ;; This function is called by:
 11526 ;;		_do_I2C_DO_ADDRESS_NACK
 11527 ;;		_do_I2C_TX
 11528 ;;		_do_I2C_TX_EMPTY
 11529 ;;		_i2c_ISR
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           
 11534                           ;psect for function _do_I2C_SEND_STOP
 11535  0AE0                     _do_I2C_SEND_STOP:	
 11536                           
 11537                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 11538                           
 11539                           ;incstack = 0
 11540                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11541  0AE0  318A  229C         	fcall	i1_i2c1_driver_stop
 11542                           
 11543                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 11544  0AE2  3000               	movlw	0
 11545  0AE3  0008               	return
 11546  0AE4                     __end_of_do_I2C_SEND_STOP:	
 11547                           
 11548                           	psect	text69
 11549  0ADC                     __ptext69:	
 11550 ;; *************** function _do_I2C_SEND_RESTART *****************
 11551 ;; Defined at:
 11552 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;		None
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;		None
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1    wreg      enum E7120
 11559 ;; Registers used:
 11560 ;;		wreg, status,2, status,0, pclath, cstack
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;Total ram usage:        0 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:    1
 11573 ;; This function calls:
 11574 ;;		i1_i2c1_driver_restart
 11575 ;; This function is called by:
 11576 ;;		_do_I2C_DO_ADDRESS_NACK
 11577 ;;		_do_I2C_TX_EMPTY
 11578 ;;		_i2c_ISR
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           
 11583                           ;psect for function _do_I2C_SEND_RESTART
 11584  0ADC                     _do_I2C_SEND_RESTART:	
 11585                           
 11586                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 11587                           
 11588                           ;incstack = 0
 11589                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11590  0ADC  318A  2299         	fcall	i1_i2c1_driver_restart
 11591                           
 11592                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 11593  0ADE  3001               	movlw	1
 11594  0ADF  0008               	return
 11595  0AE0                     __end_of_do_I2C_SEND_RESTART:	
 11596                           
 11597                           	psect	text70
 11598  0AD8                     __ptext70:	
 11599 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 11600 ;; Defined at:
 11601 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;		None
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;		None
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  1    wreg      enum E7120
 11608 ;; Registers used:
 11609 ;;		wreg, status,2, status,0, pclath, cstack
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;Total ram usage:        0 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; Hardware stack levels required when called:    1
 11622 ;; This function calls:
 11623 ;;		i1_i2c1_driver_restart
 11624 ;; This function is called by:
 11625 ;;		_do_I2C_TX
 11626 ;;		_i2c_ISR
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 11632  0AD8                     _do_I2C_SEND_RESTART_WRITE:	
 11633                           
 11634                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 11635                           
 11636                           ;incstack = 0
 11637                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11638  0AD8  318A  2299         	fcall	i1_i2c1_driver_restart
 11639                           
 11640                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 11641  0ADA  3002               	movlw	2
 11642  0ADB  0008               	return
 11643  0ADC                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 11644                           
 11645                           	psect	text71
 11646  0AD4                     __ptext71:	
 11647 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 11648 ;; Defined at:
 11649 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;		None
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;		None
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      enum E7120
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0, pclath, cstack
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;Total ram usage:        0 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    1
 11670 ;; This function calls:
 11671 ;;		i1_i2c1_driver_restart
 11672 ;; This function is called by:
 11673 ;;		_do_I2C_TX
 11674 ;;		_i2c_ISR
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _do_I2C_SEND_RESTART_READ
 11680  0AD4                     _do_I2C_SEND_RESTART_READ:	
 11681                           
 11682                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 11683                           
 11684                           ;incstack = 0
 11685                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11686  0AD4  318A  2299         	fcall	i1_i2c1_driver_restart
 11687                           
 11688                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 11689  0AD6  3001               	movlw	1
 11690  0AD7  0008               	return
 11691  0AD8                     __end_of_do_I2C_SEND_RESTART_READ:	
 11692                           
 11693                           	psect	text72
 11694  0AF9                     __ptext72:	
 11695 ;; *************** function _do_I2C_IDLE *****************
 11696 ;; Defined at:
 11697 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      enum E7120
 11704 ;; Registers used:
 11705 ;;		wreg, status,2
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;Total ram usage:        0 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; This function calls:
 11718 ;;		Nothing
 11719 ;; This function is called by:
 11720 ;;		_i2c_ISR
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           
 11725                           ;psect for function _do_I2C_IDLE
 11726  0AF9                     _do_I2C_IDLE:	
 11727                           
 11728                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 11729                           
 11730                           ;incstack = 0
 11731                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 11732  0AF9  0023               	movlb	3	; select bank3
 11733  0AFA  1020               	bcf	_i2c_status^(0+384),0
 11734                           
 11735                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 11736  0AFB  01AA               	clrf	(_i2c_status^(0+384)+10)
 11737                           
 11738                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 11739  0AFC  300E               	movlw	14
 11740  0AFD  0008               	return
 11741  0AFE                     __end_of_do_I2C_IDLE:	
 11742                           
 11743                           	psect	text73
 11744  0B22                     __ptext73:	
 11745 ;; *************** function _do_I2C_RESET *****************
 11746 ;; Defined at:
 11747 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1    wreg      enum E7120
 11754 ;; Registers used:
 11755 ;;		wreg, status,2, status,0, pclath, cstack
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; Hardware stack levels required when called:    1
 11768 ;; This function calls:
 11769 ;;		_i2c1_driver_resetBus
 11770 ;; This function is called by:
 11771 ;;		_i2c_ISR
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           
 11776                           ;psect for function _do_I2C_RESET
 11777  0B22                     _do_I2C_RESET:	
 11778                           
 11779                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 11780                           
 11781                           ;incstack = 0
 11782                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 11783  0B22  318A  2293         	fcall	_i2c1_driver_resetBus
 11784                           
 11785                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 11786  0B24  0023               	movlb	3	; select bank3
 11787  0B25  1020               	bcf	_i2c_status^(0+384),0
 11788                           
 11789                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 11790  0B26  01AA               	clrf	(_i2c_status^(0+384)+10)
 11791                           
 11792                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 11793  0B27  300E               	movlw	14
 11794  0B28  0008               	return
 11795  0B29                     __end_of_do_I2C_RESET:	
 11796                           
 11797                           	psect	text74
 11798  0E35                     __ptext74:	
 11799 ;; *************** function _do_I2C_TX_EMPTY *****************
 11800 ;; Defined at:
 11801 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;		None
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;		None
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  1    wreg      enum E7120
 11808 ;; Registers used:
 11809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;Total ram usage:        3 bytes
 11820 ;; Hardware stack levels used:    1
 11821 ;; Hardware stack levels required when called:    2
 11822 ;; This function calls:
 11823 ;;		_do_I2C_SEND_RESTART
 11824 ;;		_do_I2C_SEND_STOP
 11825 ;;		_mssp1_setIRQ
 11826 ;;		_returnReset
 11827 ;;		_returnStop
 11828 ;; This function is called by:
 11829 ;;		_i2c_ISR
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           
 11834                           ;psect for function _do_I2C_TX_EMPTY
 11835  0E35                     _do_I2C_TX_EMPTY:	
 11836                           
 11837                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 11838                           
 11839                           ;incstack = 0
 11840                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11841  0E35  0023               	movlb	3	; select bank3
 11842  0E36  1520               	bsf	_i2c_status^(0+384),2
 11843                           
 11844                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 11845  0E37  2E42               	goto	i1l4055
 11846  0E38                     i1l4039:	
 11847                           
 11848                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 11849  0E38  318A  22DC         	fcall	_do_I2C_SEND_RESTART
 11850  0E3A  0008               	return
 11851  0E3B                     i1l4043:	
 11852                           
 11853                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 11854  0E3B  318A  22A5         	fcall	_mssp1_setIRQ
 11855                           
 11856                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 11857  0E3D  3003               	movlw	3
 11858  0E3E  0008               	return
 11859  0E3F                     i1l4049:	
 11860                           
 11861                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 11862  0E3F  318A  22E0         	fcall	_do_I2C_SEND_STOP
 11863  0E41  0008               	return
 11864  0E42                     i1l4055:	
 11865  0E42  0837               	movf	(low ((_i2c_status| (0+256)+23)))^(0+128),w
 11866  0E43  00F6               	movwf	??_do_I2C_TX_EMPTY
 11867  0E44  0876               	movf	??_do_I2C_TX_EMPTY,w
 11868  0E45  00F6               	movwf	returnReset@p
 11869  0E46  300B               	movlw	11
 11870  0E47  3EA0               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 11871  0E48  0086               	movwf	6
 11872  0E49  3001               	movlw	1	; select bank3/4
 11873  0E4A  0087               	movwf	7
 11874  0E4B  3F41               	moviw [1]fsr1
 11875  0E4C  008A               	movwf	10
 11876  0E4D  3F40               	moviw [0]fsr1
 11877  0E4E  000A               	callw
 11878  0E4F  318E               	pagesel	$
 11879  0E50  00F7               	movwf	??_do_I2C_TX_EMPTY+1
 11880  0E51  01F8               	clrf	??_do_I2C_TX_EMPTY+2
 11881                           
 11882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11883                           ; Switch size 1, requested type "simple"
 11884                           ; Number of cases is 1, Range of values is 0 to 0
 11885                           ; switch strategies available:
 11886                           ; Name         Instructions Cycles
 11887                           ; simple_byte            4     3 (average)
 11888                           ; direct_byte            8     6 (fixed)
 11889                           ; jumptable            260     6 (fixed)
 11890                           ;	Chosen strategy is simple_byte
 11891  0E52  0878               	movf	??_do_I2C_TX_EMPTY+2,w
 11892  0E53  3A00               	xorlw	0	; case 0
 11893  0E54  1903               	skipnz
 11894  0E55  2E57               	goto	i1l6281
 11895  0E56  2E3F               	goto	i1l4049
 11896  0E57                     i1l6281:	
 11897                           
 11898                           ; Switch size 1, requested type "simple"
 11899                           ; Number of cases is 4, Range of values is 1 to 4
 11900                           ; switch strategies available:
 11901                           ; Name         Instructions Cycles
 11902                           ; simple_byte           13     7 (average)
 11903                           ; direct_byte           17     9 (fixed)
 11904                           ; jumptable            263     9 (fixed)
 11905                           ;	Chosen strategy is simple_byte
 11906  0E57  0877               	movf	??_do_I2C_TX_EMPTY+1,w
 11907  0E58  3A01               	xorlw	1	; case 1
 11908  0E59  1903               	skipnz
 11909  0E5A  2E3F               	goto	i1l4049
 11910  0E5B  3A03               	xorlw	3	; case 2
 11911  0E5C  1903               	skipnz
 11912  0E5D  2E38               	goto	i1l4039
 11913  0E5E  3A01               	xorlw	1	; case 3
 11914  0E5F  1903               	skipnz
 11915  0E60  2E38               	goto	i1l4039
 11916  0E61  3A07               	xorlw	7	; case 4
 11917  0E62  1903               	skipnz
 11918  0E63  2E3B               	goto	i1l4043
 11919  0E64  2E3F               	goto	i1l4049
 11920  0E65  0008               	return
 11921  0E66                     __end_of_do_I2C_TX_EMPTY:	
 11922                           
 11923                           	psect	text75
 11924  0AA5                     __ptext75:	
 11925 ;; *************** function _mssp1_setIRQ *****************
 11926 ;; Defined at:
 11927 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;		None
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		None
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;Total ram usage:        0 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_do_I2C_TX_EMPTY
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _mssp1_setIRQ
 11956  0AA5                     _mssp1_setIRQ:	
 11957                           
 11958                           ;mcc_generated_files/i2c1_driver.c: 60:     }
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _mssp1_setIRQ: []
 11962  0AA5  0020               	movlb	0	; select bank0
 11963  0AA6  1591               	bsf	17,3	;volatile
 11964  0AA7  0008               	return
 11965  0AA8                     __end_of_mssp1_setIRQ:	
 11966                           
 11967                           	psect	text76
 11968  0B37                     __ptext76:	
 11969 ;; *************** function _i2c1_driver_isNACK *****************
 11970 ;; Defined at:
 11971 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;		None               void
 11978 ;; Registers used:
 11979 ;;		wreg, status,2, status,0
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;Total ram usage:        1 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; This function calls:
 11992 ;;		Nothing
 11993 ;; This function is called by:
 11994 ;;		_do_I2C_TX
 11995 ;;		_i2c_ISR
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           
 12000                           ;psect for function _i2c1_driver_isNACK
 12001  0B37                     _i2c1_driver_isNACK:	
 12002                           
 12003                           ;mcc_generated_files/i2c1_driver.c: 163:     return SSP1CON2bits.ACKSTAT;
 12004                           
 12005                           ;incstack = 0
 12006                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 12007  0B37  0024               	movlb	4	; select bank4
 12008  0B38  0E16               	swapf	22,w	;volatile
 12009  0B39  0C89               	rrf	9,f
 12010  0B3A  0C89               	rrf	9,f
 12011  0B3B  3901               	andlw	1
 12012  0B3C  00F6               	movwf	??_i2c1_driver_isNACK
 12013  0B3D  0C76               	rrf	??_i2c1_driver_isNACK,w
 12014  0B3E  0008               	return
 12015  0B3F                     __end_of_i2c1_driver_isNACK:	
 12016                           
 12017                           	psect	text77
 12018  0AF4                     __ptext77:	
 12019 ;; *************** function i1_i2c1_driver_TXData *****************
 12020 ;; Defined at:
 12021 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  d               1    wreg     unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  d               1    0[COMMON] unsigned char 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;Total ram usage:        1 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; This function calls:
 12042 ;;		Nothing
 12043 ;; This function is called by:
 12044 ;;		_do_I2C_SEND_ADR_READ
 12045 ;;		_do_I2C_SEND_ADR_WRITE
 12046 ;;		_do_I2C_TX
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           
 12051                           ;psect for function i1_i2c1_driver_TXData
 12052  0AF4                     i1_i2c1_driver_TXData:	
 12053                           
 12054                           ;incstack = 0
 12055                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 12056                           ;i1i2c1_driver_TXData@d stored from wreg
 12057  0AF4  00F6               	movwf	i1i2c1_driver_TXData@d
 12058                           
 12059                           ;mcc_generated_files/i2c1_driver.c: 186: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 187: {;mcc_generated_files/i2c1_driver.c: 18
      +                          8:     SSP1BUF = d;
 12060  0AF5  0876               	movf	i1i2c1_driver_TXData@d,w
 12061  0AF6  0024               	movlb	4	; select bank4
 12062  0AF7  0091               	movwf	17	;volatile
 12063  0AF8  0008               	return
 12064  0AF9                     __end_ofi1_i2c1_driver_TXData:	
 12065                           
 12066                           	psect	text78
 12067  0AA2                     __ptext78:	
 12068 ;; *************** function i1_i2c1_driver_getRXData *****************
 12069 ;; Defined at:
 12070 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      unsigned char 
 12077 ;; Registers used:
 12078 ;;		wreg
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;Total ram usage:        0 bytes
 12089 ;; Hardware stack levels used:    1
 12090 ;; This function calls:
 12091 ;;		Nothing
 12092 ;; This function is called by:
 12093 ;;		_do_I2C_RX
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           
 12098                           ;psect for function i1_i2c1_driver_getRXData
 12099  0AA2                     i1_i2c1_driver_getRXData:	
 12100                           
 12101                           ;mcc_generated_files/i2c1_driver.c: 173:     return SSP1BUF;
 12102                           
 12103                           ;incstack = 0
 12104                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 12105  0AA2  0024               	movlb	4	; select bank4
 12106  0AA3  0811               	movf	17,w	;volatile
 12107  0AA4  0008               	return
 12108  0AA5                     __end_ofi1_i2c1_driver_getRXData:	
 12109                           
 12110                           	psect	text79
 12111  0AD0                     __ptext79:	
 12112 ;; *************** function i1_i2c1_driver_sendNACK *****************
 12113 ;; Defined at:
 12114 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;		None
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		None
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;Total ram usage:        0 bytes
 12133 ;; Hardware stack levels used:    1
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_do_I2C_DO_NACK_STOP
 12138 ;;		_do_I2C_DO_NACK_RESTART
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           
 12143                           ;psect for function i1_i2c1_driver_sendNACK
 12144  0AD0                     i1_i2c1_driver_sendNACK:	
 12145                           
 12146                           ;mcc_generated_files/i2c1_driver.c: 204:     SSP1CON2bits.ACKDT = 1;
 12147                           
 12148                           ;incstack = 0
 12149                           ; Regs used in i1_i2c1_driver_sendNACK: []
 12150  0AD0  0024               	movlb	4	; select bank4
 12151  0AD1  1696               	bsf	22,5	;volatile
 12152                           
 12153                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKEN = 1;
 12154  0AD2  1616               	bsf	22,4	;volatile
 12155  0AD3  0008               	return
 12156  0AD4                     __end_ofi1_i2c1_driver_sendNACK:	
 12157                           
 12158                           	psect	text80
 12159  0A93                     __ptext80:	
 12160 ;; *************** function _i2c1_driver_resetBus *****************
 12161 ;; Defined at:
 12162 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;		None
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  1    wreg      void 
 12169 ;; Registers used:
 12170 ;;		None
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:        0 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_do_I2C_RESET
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           
 12190                           ;psect for function _i2c1_driver_resetBus
 12191  0A93                     _i2c1_driver_resetBus:	
 12192                           
 12193                           ;incstack = 0
 12194                           ; Regs used in _i2c1_driver_resetBus: []
 12195  0A93  0008               	return
 12196  0A94                     __end_of_i2c1_driver_resetBus:	
 12197                           
 12198                           	psect	text81
 12199  0A9F                     __ptext81:	
 12200 ;; *************** function i1_i2c1_driver_startRX *****************
 12201 ;; Defined at:
 12202 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		None
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_do_I2C_RCEN
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function i1_i2c1_driver_startRX
 12231  0A9F                     i1_i2c1_driver_startRX:	
 12232                           
 12233                           ;mcc_generated_files/i2c1_driver.c: 168:     SSP1CON2bits.RCEN = 1;
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in i1_i2c1_driver_startRX: []
 12237  0A9F  0024               	movlb	4	; select bank4
 12238  0AA0  1596               	bsf	22,3	;volatile
 12239  0AA1  0008               	return
 12240  0AA2                     __end_ofi1_i2c1_driver_startRX:	
 12241                           
 12242                           	psect	text82
 12243  0002                     __ptext82:	
 12244 ;; *************** function _returnReset *****************
 12245 ;; Defined at:
 12246 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  p               1    0[COMMON] PTR void 
 12249 ;;		 -> NULL(0), 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      enum E6966
 12254 ;; Registers used:
 12255 ;;		wreg
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        1 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_i2c_open
 12271 ;;		_do_I2C_DO_ADDRESS_NACK
 12272 ;;		_do_I2C_TX
 12273 ;;		_do_I2C_RX
 12274 ;;		_do_I2C_TX_EMPTY
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           
 12279                           ;psect for function _returnReset
 12280  0002                     _returnReset:	
 12281                           
 12282                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _returnReset: [wreg]
 12286  0002  3005               	movlw	5
 12287  0003  0008               	return
 12288  0004                     __end_of_returnReset:	
 12289                           
 12290                           	psect	text83
 12291  0A94                     __ptext83:	
 12292 ;; *************** function _returnStop *****************
 12293 ;; Defined at:
 12294 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  p               1    0[COMMON] PTR void 
 12297 ;;		 -> NULL(0), 
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;		None
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      enum E6966
 12302 ;; Registers used:
 12303 ;;		wreg
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;Total ram usage:        1 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; This function calls:
 12316 ;;		Nothing
 12317 ;; This function is called by:
 12318 ;;		_i2c_open
 12319 ;;		_setCallBack
 12320 ;;		_do_I2C_DO_ADDRESS_NACK
 12321 ;;		_do_I2C_TX
 12322 ;;		_do_I2C_RX
 12323 ;;		_do_I2C_TX_EMPTY
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           
 12328                           ;psect for function _returnStop
 12329  0A94                     _returnStop:	
 12330                           
 12331                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 12332                           
 12333                           ;incstack = 0
 12334                           ; Regs used in _returnStop: [wreg]
 12335  0A94  3001               	movlw	1
 12336  0A95  0008               	return
 12337  0A96                     __end_of_returnStop:	
 12338                           
 12339                           	psect	text84
 12340  0A9C                     __ptext84:	
 12341 ;; *************** function i1_i2c1_driver_stop *****************
 12342 ;; Defined at:
 12343 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		None
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_do_I2C_SEND_STOP
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370                           
 12371                           ;psect for function i1_i2c1_driver_stop
 12372  0A9C                     i1_i2c1_driver_stop:	
 12373                           
 12374                           ;mcc_generated_files/i2c1_driver.c: 158:     SSP1CON2bits.PEN = 1;
 12375                           
 12376                           ;incstack = 0
 12377                           ; Regs used in i1_i2c1_driver_stop: []
 12378  0A9C  0024               	movlb	4	; select bank4
 12379  0A9D  1516               	bsf	22,2	;volatile
 12380  0A9E  0008               	return
 12381  0A9F                     __end_ofi1_i2c1_driver_stop:	
 12382                           
 12383                           	psect	text85
 12384  0A99                     __ptext85:	
 12385 ;; *************** function i1_i2c1_driver_restart *****************
 12386 ;; Defined at:
 12387 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;		None
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;		None
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		None
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;Total ram usage:        0 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_do_I2C_SEND_RESTART_READ
 12411 ;;		_do_I2C_SEND_RESTART_WRITE
 12412 ;;		_do_I2C_SEND_RESTART
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           
 12417                           ;psect for function i1_i2c1_driver_restart
 12418  0A99                     i1_i2c1_driver_restart:	
 12419                           
 12420                           ;mcc_generated_files/i2c1_driver.c: 153:     SSP1CON2bits.RSEN = 1;
 12421                           
 12422                           ;incstack = 0
 12423                           ; Regs used in i1_i2c1_driver_restart: []
 12424  0A99  0024               	movlb	4	; select bank4
 12425  0A9A  1496               	bsf	22,1	;volatile
 12426  0A9B  0008               	return
 12427  0A9C                     __end_ofi1_i2c1_driver_restart:	
 12428                           
 12429                           	psect	text86
 12430  0ACC                     __ptext86:	
 12431 ;; *************** function _i2c1_driver_sendACK *****************
 12432 ;; Defined at:
 12433 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;		None
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		None
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;Total ram usage:        0 bytes
 12452 ;; Hardware stack levels used:    1
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_do_I2C_DO_ACK
 12457 ;;		_do_I2C_RX
 12458 ;;		_I2C_Send_ACK
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _i2c1_driver_sendACK
 12464  0ACC                     _i2c1_driver_sendACK:	
 12465                           
 12466                           ;mcc_generated_files/i2c1_driver.c: 198:     SSP1CON2bits.ACKDT = 0;
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _i2c1_driver_sendACK: []
 12470  0ACC  0024               	movlb	4	; select bank4
 12471  0ACD  1296               	bcf	22,5	;volatile
 12472                           
 12473                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKEN = 1;
 12474  0ACE  1616               	bsf	22,4	;volatile
 12475  0ACF  0008               	return
 12476  0AD0                     __end_of_i2c1_driver_sendACK:	
 12477                           
 12478                           	psect	text87
 12479  0AFE                     __ptext87:	
 12480 ;; *************** function _PIN_MANAGER_IOC *****************
 12481 ;; Defined at:
 12482 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;		None
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;		None
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, status,2, status,0, pclath, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;Total ram usage:        0 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    2
 12503 ;; This function calls:
 12504 ;;		_IOCCF1_ISR
 12505 ;; This function is called by:
 12506 ;;		_INTERRUPT_InterruptManager
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           
 12511                           ;psect for function _PIN_MANAGER_IOC
 12512  0AFE                     _PIN_MANAGER_IOC:	
 12513                           
 12514                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCCFbits.IOCCF1 == 1)
 12515                           
 12516                           ;incstack = 0
 12517                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 12518  0AFE  0027               	movlb	7	; select bank7
 12519  0AFF  1C99               	btfss	25,1	;volatile
 12520  0B00  0008               	return
 12521                           
 12522                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCCF1_ISR();
 12523  0B01  318B  2382         	fcall	_IOCCF1_ISR
 12524  0B03  0008               	return
 12525  0B04                     __end_of_PIN_MANAGER_IOC:	
 12526                           
 12527                           	psect	text88
 12528  0B82                     __ptext88:	
 12529 ;; *************** function _IOCCF1_ISR *****************
 12530 ;; Defined at:
 12531 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;		None
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;		None
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1    wreg      void 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0, pclath, cstack
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;Total ram usage:        0 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:    1
 12552 ;; This function calls:
 12553 ;;		Absolute function
 12554 ;;		_GestureInterruptHandler
 12555 ;;		_IOCCF1_DefaultInterruptHandler
 12556 ;; This function is called by:
 12557 ;;		_PIN_MANAGER_IOC
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           
 12562                           ;psect for function _IOCCF1_ISR
 12563  0B82                     _IOCCF1_ISR:	
 12564                           
 12565                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCCF1_InterruptHandler)
 12566                           
 12567                           ;incstack = 0
 12568                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12569  0B82  0020               	movlb	0	; select bank0
 12570  0B83  086D               	movf	_IOCCF1_InterruptHandler,w
 12571  0B84  046E               	iorwf	_IOCCF1_InterruptHandler+1,w
 12572  0B85  1903               	btfsc	3,2
 12573  0B86  2B8C               	goto	i1l4119
 12574                           
 12575                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCCF1_InterruptHandler();
 12576  0B87  086E               	movf	_IOCCF1_InterruptHandler+1,w
 12577  0B88  008A               	movwf	10
 12578  0B89  086D               	movf	_IOCCF1_InterruptHandler,w
 12579  0B8A  000A               	callw
 12580  0B8B  318B               	pagesel	$
 12581  0B8C                     i1l4119:	
 12582                           
 12583                           ;mcc_generated_files/pin_manager.c: 148:     IOCCFbits.IOCCF1 = 0;
 12584  0B8C  0027               	movlb	7	; select bank7
 12585  0B8D  1099               	bcf	25,1	;volatile
 12586  0B8E  0008               	return
 12587  0B8F                     __end_of_IOCCF1_ISR:	
 12588                           
 12589                           	psect	text89
 12590  0A96                     __ptext89:	
 12591 ;; *************** function _GestureInterruptHandler *****************
 12592 ;; Defined at:
 12593 ;;		line 54 in file "main.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      void 
 12600 ;; Registers used:
 12601 ;;		None
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;Total ram usage:        0 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_main
 12617 ;;		_IOCCF1_ISR
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           
 12622                           ;psect for function _GestureInterruptHandler
 12623  0A96                     _GestureInterruptHandler:	
 12624                           
 12625                           ;main.c: 55:     handleGestureFlag = 1;
 12626                           
 12627                           ;incstack = 0
 12628                           ; Regs used in _GestureInterruptHandler: []
 12629  0A96  01F5               	clrf	_handleGestureFlag
 12630  0A97  0AF5               	incf	_handleGestureFlag,f
 12631  0A98  0008               	return
 12632  0A99                     __end_of_GestureInterruptHandler:	
 12633                           
 12634                           	psect	text90
 12635  0A92                     __ptext90:	
 12636 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 12637 ;; Defined at:
 12638 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;		None
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;		None
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      void 
 12645 ;; Registers used:
 12646 ;;		None
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:        0 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; This function calls:
 12659 ;;		Nothing
 12660 ;; This function is called by:
 12661 ;;		_PIN_MANAGER_Initialize
 12662 ;;		_IOCCF1_ISR
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           
 12667                           ;psect for function _IOCCF1_DefaultInterruptHandler
 12668  0A92                     _IOCCF1_DefaultInterruptHandler:	
 12669                           
 12670                           ;incstack = 0
 12671                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 12672  0A92  0008               	return
 12673  0A93                     __end_of_IOCCF1_DefaultInterruptHandler:	
 12674  007E                     btemp	set	126	;btemp
 12675  007E                     int$flags	set	126
 12676  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         119
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     61      79
    BANK1            80     66      66
    BANK2            80     64      64
    BANK3            80      0      29
    BANK4            80      0      68
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_ISR$2093	const PTR FTN()enum E7120 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    wireReadDataBlock@val	PTR unsigned char  size(2) Largest target is 64
		 -> readGesture@fifo_data2(BANK1[64]), readGesture@fifo_data(BANK2[64]), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GestureInterruptHandler(), IOCCF1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    fsmStateTable	const PTR FTN()enum E7120[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    S52$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S52$callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E6966[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S52$data_ptr	PTR unsigned char  size(1) Largest target is 0

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY

Critical Paths under _main in BANK0

    _main->_handleGesture
    _initialize->_setMode
    _setProximityGain->_wireWriteDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireWriteDataByte
    _setGestureWaitTime->_wireWriteDataByte
    _setGestureLEDDrive->_wireWriteDataByte
    _setGestureGain->_wireWriteDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireWriteDataByte
    _handleGesture->_readGesture
    _readGesture->_processGestureData
    _wireReadDataBlock->_I2C_Write_Byte
    _processGestureData->___awdiv
    ___awdiv->___wmul
    _isGestureAvailable->_wireReadDataByte
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireWriteDataByte
    _setGestureMode->_wireWriteDataByte
    _setGestureIntEnable->_wireWriteDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_I2C_Write_Byte
    _getMode->_wireReadDataByte
    _wireReadDataByte->_I2C_Write_Byte
    _I2C_Write_Byte->_i2c1_driver_TXData
    _I2C_Read_Byte->_i2c1_driver_isBufferFull
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _handleGesture->_readGesture

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _handleGesture->_readGesture

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   85705
                                             64 BANK1      2     2      0
         _IOCCF1_SetInterruptHandler
                  _SYSTEM_Initialize
                _enableGestureSensor
                      _handleGesture
                         _initialize
                 _isGestureAvailable
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   54520
                                             16 BANK0      2     2      0
                   _i2c1_driver_open
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    3618
                                             10 BANK0      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    3429
                                             10 BANK0      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleGesture                                        2     2      0    7486
                                             59 BANK0      2     2      0
                        _LEDs_SetLow
                        _readGesture
 ---------------------------------------------------------------------------------
 (2) _readGesture                                        140   138      2    7486
                                             47 BANK0     12    10      2
                                              0 BANK1     64    64      0
                                              0 BANK2     64    64      0
                      _decodeGesture
                            _getMode
                 _isGestureAvailable
                 _processGestureData
             _resetGestureParameters
                  _wireReadDataBlock
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _wireReadDataBlock                                   11     7      4     651
                                              6 BANK0     11     7      4
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _processGestureData                                  32    32      0    5314
                                             15 BANK0     32    32      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1846
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1165
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _isGestureAvailable                                   2     2      0     198
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (3) _decodeGesture                                       18    18      0     296
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) _LEDs_SetLow                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   23076
                                             16 BANK0      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    3667
                                             10 BANK0      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    3633
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    3667
                                             10 BANK0      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (3) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enablePower                                          0     0      0    4340
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    4340
                                             11 BANK0      5     4      1
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    3398
                                              6 BANK0      4     1      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0     195
                                              9 BANK0      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0     161
                                              6 BANK0      3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       5     5      0      96
                                              1 BANK0      5     5      0
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_TXData                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                  _i2c1_driver_start
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
              _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_isBufferFull                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     914
                   Absolute function *
                    _PIN_MANAGER_IOC
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (9) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_ISR                                              3     3      0     914
                                              3 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (10) _mssp1_clearIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX_EMPTY                                     3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX                                           3     3      0     234
                                              0 COMMON     3     3      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_READ                            0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_READ                                0     0      0      22
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_TXData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RX                                           3     3      0     212
                                              0 COMMON     3     3      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
            i1_i2c1_driver_getRXData
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_STOP                                 0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_RESTART                              0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RCEN                                         0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (11) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ADDRESS_NACK                              3     3      0     212
                                              0 COMMON     3     3      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (11) _returnStop                                          1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _returnReset                                         1     0      1     212
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_STOP                                    0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART                                 0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF1_ISR                                          0     0      0       0
                   Absolute function *
            _GestureInterruptHandler *
     _IOCCF1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _IOCCF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _GestureInterruptHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF1_SetInterruptHandler
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _I2C_ReStart
               _i2c1_driver_restart
             _I2C_Read_Byte
               _i2c1_driver_getRXData
               _i2c1_driver_isBufferFull
               _i2c1_driver_startRX
             _I2C_Send_NACK
               _i2c1_driver_sendNACK
             _I2C_Start
               _i2c1_driver_start
             _I2C_Stop
               _i2c1_driver_stop
             _I2C_Write_Byte
               _i2c1_driver_TXData
         _wireWriteDataByte
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureMode
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDBoost
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _handleGesture
     _LEDs_SetLow
     _readGesture
       _decodeGesture
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _isGestureAvailable
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _processGestureData
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _resetGestureParameters
       _wireReadDataBlock
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
   _initialize
     _i2c1_driver_open
     _setAmbientLightGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureEnterThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureExitThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureIntEnable
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setGestureWaitTime
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLEDDrive
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntHighThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setLightIntLowThreshold
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setMode
       _getMode
         _wireReadDataByte
           _I2C_ReStart
             _i2c1_driver_restart
           _I2C_Read_Byte
             _i2c1_driver_getRXData
             _i2c1_driver_isBufferFull
             _i2c1_driver_startRX
           _I2C_Send_NACK
             _i2c1_driver_sendNACK
           _I2C_Start
             _i2c1_driver_start
           _I2C_Stop
             _i2c1_driver_stop
           _I2C_Write_Byte
             _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntHighThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProxIntLowThresh
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _setProximityGain
       _wireReadDataByte
         _I2C_ReStart
           _i2c1_driver_restart
         _I2C_Read_Byte
           _i2c1_driver_getRXData
           _i2c1_driver_isBufferFull
           _i2c1_driver_startRX
         _I2C_Send_NACK
           _i2c1_driver_sendNACK
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
       _wireWriteDataByte
         _I2C_Start
           _i2c1_driver_start
         _I2C_Stop
           _i2c1_driver_stop
         _I2C_Write_Byte
           _i2c1_driver_TXData
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
     _wireWriteDataByte
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData
   _isGestureAvailable
     _wireReadDataByte
       _I2C_ReStart
         _i2c1_driver_restart
       _I2C_Read_Byte
         _i2c1_driver_getRXData
         _i2c1_driver_isBufferFull
         _i2c1_driver_startRX
       _I2C_Send_NACK
         _i2c1_driver_sendNACK
       _I2C_Start
         _i2c1_driver_start
       _I2C_Stop
         _i2c1_driver_stop
       _I2C_Write_Byte
         _i2c1_driver_TXData

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _PIN_MANAGER_IOC *
     _IOCCF1_ISR
       Absolute function(Fake) *
       _GestureInterruptHandler *
       _IOCCF1_DefaultInterruptHandler *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _returnReset *
       _returnStop *
     _do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       i1_i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       _do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       _i2c1_driver_sendACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_getRXData *
     _do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     _do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     _do_I2C_TX *
       _do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _i2c1_driver_isNACK
       _returnReset *
       _returnStop *
       i1_i2c1_driver_TXData *
     _do_I2C_TX_EMPTY *
       _do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       _do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       _mssp1_setIRQ
       _returnReset *
       _returnStop *
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     40      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      1D      11       36.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      44      13       85.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 13:23:39 2019

                              returnReset@p 0076                       ?_setGestureExitThresh 0076  
                        __size_of_I2C_Start 0003                                 __CFG_CP$OFF 0000  
                              ___awdiv@sign 002C                        __size_of_do_I2C_IDLE 0005  
                       _do_I2C_SEND_RESTART 0ADC                        __size_of_do_I2C_RCEN 0006  
                       ___wmul@multiplicand 0022                                 __CFG_LVP$ON 0000  
                                       l610 0F12                                         l603 0EFD  
                                       l613 0F15                                         l607 0F0F  
                                       l615 0F2F                                         l902 02EC  
                                       l903 0304            processGestureData@ud_ratio_first 0031  
                                       l940 03F4                                         l924 0386  
                                       l960 0479                                         l952 0447  
                                       l936 03D7                                         l928 03A3  
                                       l856 006D                                         l891 02A4  
                                       l883 0251                                         l964 0496  
                                       l948 042A                                         l885 0276  
                                       l879 0228                                         l898 02C3  
                              __CFG_CPD$OFF 0000                       __end_of_decodeGesture 04A7  
                      __size_of_I2C_ReStart 0003                     __size_of_PMD_Initialize 0008  
                        I2C_Write_Byte@Byte 0023                       __size_of_do_I2C_RESET 0007  
                                       wreg 0009                          i1_i2c1_driver_stop 0A9C  
                                      l1027 0C35                                        l1191 0C51  
                                      l5001 0B6E                                        l5211 0069  
                                      l5125 076F                                        l5117 0BAE  
                                      l5301 0272                                        l5213 00C3  
                                      l5047 0C4B                                        l5311 0298  
                                      l5145 07A2                                        l5137 0789  
                                      l5129 0771                                        l6009 06C1  
                                      l5073 0727                                        l5241 00DA  
                                      l5147 07A3                                        l5139 0796  
                                      l5411 03EF                                        l5091 074D  
                                      l5083 072F                                        l5067 071C  
                                      l5323 02BE                                        l5227 00DE  
                                      l5085 073B                                        l5245 0128  
                                      l5181 07F1                                        l5407 03D2  
                                      l5351 0324                                        l5095 0756  
                                      l5319 02A6                                        l5263 01DB  
                                      l5191 005C                                        l6135 0CBB  
                                      l5425 0425                                        l5417 0401  
                                      l5361 0339                                        l5329 02E7  
                                      l5273 0200                                        l5265 01DE  
                                      l6057 0EFF                                        l6137 0CBF  
                                      l5443 0474                                        l5435 0454  
                                      l5363 033B                                        l5099 075E  
                                      l5283 0223                                        l5275 0203  
                                      l5259 01C9                                        l5195 005E  
                                      l5179 07C2                                        l5531 05CC  
                                      l6075 0F18                                        l5453 04A3  
                                      l5429 0442                                        l5381 035F  
                                      l5373 034D                                        l5357 032F  
                                      l5269 01EE                                        l5541 05D0  
                                      l5447 0491                                        l5375 034F  
                                      l5367 0343                                        l5535 0681  
                                      l5393 039E                                        l5369 0345  
                                      l5457 04A5                                        l5297 026A  
                                      l5289 024C                                        l6273 0F21  
                                      l5379 0359                                        l5571 0675  
                                      l5389 0381                                        l5557 0606  
                                      l5549 05E3                                        l5717 0EC8  
                                      l5653 0D7E                                        l5629 0BFA  
                                      l5807 0D16                                        l5399 03B0  
                                      l5575 067E                                        l5735 0EFA  
                                      l5639 0BE7                                        l5817 0B9B  
                                      l5569 0614                                        l5753 0D3D  
                                      l5673 0D57                                        l5649 0D7C  
                                      l5771 0E33                                        l5669 0D55  
                                      l5863 04BC                                        l5689 0BC1  
                                      l4995 0C38                                        l5699 0BD4  
                                      l5859 04BA                                        l5789 0E96  
                                      l5991 06C3                                        l5995 06C5  
                                      _LATA 010C                                        _LATB 010D  
                                      _LATC 010E                                        u4034 0782  
                                      u4035 0781                                        u4044 078E  
                                      u4045 078D                                        u5035 0EA9  
                                      u4405 027F                                        u4325 0214  
                                      u4165 0078                                        u4085 07CB  
                                      u4415 028B                                        u4335 0231  
                                      u5055 0EDB                                        u4345 023D  
                                      u4265 01C2                                        u4355 025A  
                                      u4275 01D3                                        _PMD0 0911  
                                      u4525 030D                                        u4285 01E7  
                                      _PMD1 0912                                        _PMD2 0913  
                                      u5095 0E77                                        u4295 01F8  
                                      _PMD3 0914                                        _PMD4 0915  
                                      u4705 03C3                                        u4465 02AF  
                                      _PMD5 0916                                        u4715 03E0  
                                      u4475 02CC                                        u4805 0465  
                                      u4725 03FE                                        u3925 0732  
                                      u4485 02D8                                        u4815 0482  
                                      u4655 0372                                        u4495 02F5  
                                      u5527 0F05                                        u4825 04A0  
                                      u4665 038F                                        u3945 073C  
                                      u3865 0C52                                        u4905 060F  
                                      u5537 0685                                        u4755 0416  
                                      u4675 03AD                                        u3955 0746  
                                      u3875 0C57                                        u5547 0698  
                                      u4915 061E                                        u4765 0433  
                                      u3965 074E                                        u4775 0451  
                                      u4935 0D9E                                        u4945 0DC7  
                      ?_do_I2C_SEND_RESTART 0076                                        _WPUA 020C  
                                      _WPUB 020D                                        _WPUC 020E  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
         __size_of_do_I2C_SEND_RESTART_READ 0004                         ?i1_i2c1_driver_stop 0076  
                 ?_do_I2C_SEND_RESTART_READ 0076                                        _main 0CA6  
                 __size_of_do_I2C_SEND_STOP 0004                      __size_of_do_I2C_DO_ACK 0004  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                       ??_setGestureIntEnable 002A  
                          __end_of_I2C_Stop 0ACC                               __CFG_BOREN$ON 0000  
                   i1_i2c1_driver_getRXData 0AA2                       ?_do_I2C_SEND_ADR_READ 0076  
                             __CFG_BORV$LOW 0000             ??_i2c1_driver_clearBusCollision 0076  
                                      start 002B                         I2C_Write_Byte@count 0024  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 0CF1                    ??_do_I2C_DO_NACK_RESTART 0076  
                              ?_readGesture 004F                                _do_I2C_RESET 0B22  
            __size_of_OSCILLATOR_Initialize 0009                                ?_LEDs_SetLow 0076  
             __end_of_OSCILLATOR_Initialize 0B58                         __size_of_IOCCF1_ISR 000D  
                      ??i1_i2c1_driver_stop 0076                    __end_of_i2c1_driver_open 0B6B  
                                     ?_main 0076                             __end_of___awdiv 0763  
                  __end_of_i2c1_driver_stop 0AC9                               __CFG_WDTE$OFF 0000  
                           ___awdiv@divisor 0026                  __end_of_i2c1_driver_TXData 0B16  
                            __CFG_DEBUG$OFF 0000                                       i1l157 0FE4  
                                     i1l173 0F85                                       i1l253 0029  
                                     i1l245 0010                                       i1l248 001E  
                              ?_setLEDBoost 0076                             ___awdiv@counter 002B  
                              ?_setLEDDrive 0076                              _setGestureGain 0E98  
                                     _OSCEN 091D                          wireReadDataBlock@j 0030  
                            _setGestureMode 0CF1                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
               __end_of_setProxIntLowThresh 0BFC                             __end_of_getMode 0B61  
                     isGestureAvailable@val 002A                     __end_of_PIN_MANAGER_IOC 0B04  
                __end_of_i2c1_driver_isNACK 0B3F                      __size_of_I2C_Read_Byte 000B  
                            _WDT_Initialize 0AF0                            _b_i2c_error_flag 0074  
              __end_of_setProxIntHighThresh 0BE9                  ?_do_I2C_SEND_RESTART_WRITE 0076  
                     ??_do_I2C_SEND_RESTART 0076                             __end_of_setMode 07B2  
                         __end_of_I2C_Start 0AC6                                       pclath 000A  
                   __size_of_mssp1_clearIRQ 0003                        i1_i2c1_driver_TXData 0AF4  
              __size_of_setAmbientLightGain 001E                      ?_do_I2C_SEND_ADR_WRITE 0076  
                    __size_of_I2C_Send_NACK 0003                                       status 0003  
                                     wtemp0 007E                    ?_setLightIntLowThreshold 002A  
                __end_of_setGestureLEDDrive 0EFC                       setGestureWaitTime@val 002C  
                             _fsmStateTable 1000                               _gesture_data_ 0220  
                           __initialization 002D                      ??_setGestureExitThresh 002A  
                processGestureData@lr_delta 004B                                  _i2c_status 01A0  
                              __end_of_main 0CCB                           _handleGestureFlag 0075  
                processGestureData@ud_delta 0049                 ?_INTERRUPT_InterruptManager 0076  
                    __end_of_setGestureGain 0ECA                   __size_of_setProximityGain 0029  
                    __end_of_setGestureMode 0D18                               _do_I2C_DO_ACK 0AE4  
                                    ??_main 005D               __size_of_i2c1_driver_sendNACK 0004  
         __size_of_setLightIntHighThreshold 0027               __size_of_i2c1_driver_resetBus 0001  
                    __end_of_WDT_Initialize 0AF4                     ?_do_I2C_DO_ADDRESS_NACK 0076  
                 ?_setLightIntHighThreshold 002A           setLightIntHighThreshold@threshold 002A  
                      __size_of_enablePower 000E                ??_IOCCF1_SetInterruptHandler 0022  
                          ___awdiv@dividend 0028                          _processGestureData 004E  
                                    _ANSELA 018C                                      _ANSELB 018D  
                                    _ANSELC 018E                          __CFG_RSTOSC$HFINT1 0000  
              setProxIntLowThresh@threshold 002B                       ?i1_i2c1_driver_TXData 0076  
                                    _RB5PPS 0E9D                                      _RB7PPS 0E9F  
                                    _ODCONA 028C                                      _ODCONB 028D  
                                    _ODCONC 028E                                      i1l4023 0F8A  
                                    i1l4043 0E3B                                      i1l4019 0F87  
                                    i1l4029 0F8D                                      i1l4119 0B8C  
                                    i1l4039 0E38                                      i1l4055 0E42  
                                    i1l4049 0E3F                                      i1l4445 0CDB  
                                    i1l6281 0E57                                      i1l3953 0DE6  
                                    i1l3963 0DEC                                      i1l6275 0FA2  
                                    i1l3957 0DE9                                      i1l6277 0FD6  
                 ??i1_i2c1_driver_getRXData 0076                                      i1l6279 0E01  
                                    i1l3983 0FBD                                      i1l3975 0FB7  
                                    i1l3979 0FBA                                      i1l3997 0FFE  
                                    i1l3989 0FC0                            _wireReadDataByte 0C82  
                                    _OSCFRQ 091F                     ?_resetGestureParameters 0076  
                    ??_do_I2C_SEND_ADR_READ 0076                                      _WDTCON 0097  
                                 ??_i2c_ISR 0079                         ?_processGestureData 0076  
                         _gesture_lr_delta_ 0069                              __CFG_PWRTE$OFF 0000  
             setProxIntHighThresh@threshold 002B                           _gesture_lr_count_ 0065  
                       wireReadDataByte@reg 0027                       _i2c1_driver_getRXData 0AB7  
                       wireReadDataByte@val 0028                           _gesture_ud_delta_ 006B  
               __end_of_do_I2C_DO_NACK_STOP 0AEC                               _I2C_Read_Byte 0B6B  
                __end_of_isGestureAvailable 0BB0                           _gesture_ud_count_ 0067  
                                    ___wmul 0C48                                   ??___awdiv 002A  
     __end_of_i2c1_driver_clearBusCollision 0AAE      __size_of_i2c1_driver_clearBusCollision 0003  
             _i2c1_driver_clearBusCollision 0AAB                  __end_of_setGestureWaitTime 0D3F  
                            __CFG_STVREN$ON 0000             __size_of_do_I2C_DO_NACK_RESTART 0004  
                          ___awdiv@quotient 002D                              ?_do_I2C_DO_ACK 0076  
                           ?_setGestureGain 0076                               _I2C_Send_NACK 0ABD  
                                 ??_getMode 0029                             ?_setGestureMode 0076  
       __size_of_IOCCF1_SetInterruptHandler 0006                     ??_setGestureEnterThresh 002A  
                      ??_processGestureData 002F                 __end_of_i2c1_driver_sendACK 0AD0  
                            _PMD_Initialize 0B47              __end_of_do_I2C_DO_ADDRESS_NACK 0E0A  
                                 ?_I2C_Stop 0076                                   ??_setMode 002C  
                           ?_WDT_Initialize 0076                 __end_of_i2c1_driver_restart 0AB4  
                              ?_returnReset 0076                           readGesture@motion 0053  
               __end_of_i2c1_driver_startRX 0ABD                    ?_GestureInterruptHandler 0076  
IOCCF1_SetInterruptHandler@InterruptHandler 0020                            ?_PIN_MANAGER_IOC 0076  
                              ??_IOCCF1_ISR 0076              __end_of_resetGestureParameters 0C11  
                         _SYSTEM_Initialize 0B76                     __end_of__initialization 004A  
                          _do_I2C_SEND_STOP 0AE0                          __size_of_do_I2C_RX 0046  
                        __size_of_do_I2C_TX 004F                          ?_SYSTEM_Initialize 0076  
                    setGestureWaitTime@time 002B                    __size_of_do_I2C_TX_EMPTY 0031  
                            ?_I2C_Read_Byte 0076                              __pcstackCOMMON 0076  
                       ??_SYSTEM_Initialize 0022                       i1i2c1_driver_TXData@d 0076  
                      _setProxIntHighThresh 0BD6                              _gesture_state_ 005F  
                            ?_I2C_Send_NACK 0076                       i1_i2c1_driver_restart 0A99  
                    __end_of_PMD_Initialize 0B4F                       i1_i2c1_driver_startRX 0A9F  
                        __end_of_IOCCF1_ISR 0B8F                        __size_of_readGesture 00F0  
                     __end_of_handleGesture 0F30                        __size_of_LEDs_SetLow 0006  
         __size_of_i2c1_driver_isBufferFull 0007                                  ??_I2C_Stop 0020  
                 ?_i2c1_driver_isBufferFull 0076                          _gesture_far_count_ 0061  
                      __size_of_setLEDBoost 0032                        __size_of_setLEDDrive 0029  
                    _do_I2C_DO_NACK_RESTART 0AEC                      ??i1_i2c1_driver_TXData 0076  
                 __end_of_SYSTEM_Initialize 0B82                              _mssp1_clearIRQ 0AA8  
                                __pbssBANK0 005D                                  __pbssBANK3 01A0  
                                __pbssBANK4 0220                        wireWriteDataByte@reg 0029  
                      wireWriteDataByte@val 0026                         getMode@enable_value 002A  
                  ??i1_i2c1_driver_sendNACK 0076                      ?_i2c1_driver_getRXData 0076  
              __size_of_i2c_busCollisionISR 0003                                  __pmaintext 0CA6  
                             ??_do_I2C_IDLE 0076                               ??_do_I2C_RCEN 0076  
                   setGestureLEDDrive@drive 002D                                     ?___wmul 0020  
                           __CFG_PPS1WAY$ON 0000                             ??_do_I2C_DO_ACK 0076  
              __size_of_enableGestureSensor 0064                                  __pintentry 0004  
                     ?_setProxIntHighThresh 0076                     __size_of_I2C_Write_Byte 001C  
                             ??_I2C_ReStart 0020                            _setProximityGain 0DB6  
                               setMode@mode 002F                             ?_PMD_Initialize 0076  
                       _setAmbientLightGain 0C64              ?_i2c1_driver_clearBusCollision 0076  
                         ?_i2c1_driver_open 0076                           __end_of_do_I2C_RX 0FB1  
                         __end_of_do_I2C_TX 1000                           ?_i2c1_driver_stop 0076  
           __end_of_GestureInterruptHandler 0A99                           _wireReadDataBlock 07B2  
                        ??_i2c1_driver_open 0020                          ??_i2c1_driver_stop 0020  
                                   _OSCCON1 0919                                     _OSCCON3 091B  
                             ?_mssp1_setIRQ 0076          __end_of_IOCCF1_SetInterruptHandler 0B10  
                _IOCCF1_SetInterruptHandler 0B0A                                     _OSCTUNE 091E  
                      wireReadDataBlock@len 0028                        wireReadDataBlock@reg 002F  
                      wireReadDataBlock@val 0026                                     _SSP1ADD 0212  
                                   _SLRCONA 030C                                     _SLRCONB 030D  
                                   _SLRCONC 030E                                     _SSP1BUF 0211  
                    __end_of_mssp1_clearIRQ 0AAB                          ?_wireReadDataBlock 0026  
                                   _SSP1MSK 0213                 __end_of_setGestureIntEnable 0E35  
                   ??_do_I2C_SEND_ADR_WRITE 0076             processGestureData@lr_ratio_last 0037  
               ??_do_I2C_SEND_RESTART_WRITE 0076                                readGesture@i 0059  
                        _i2c1_driver_TXData 0B10                        ?_setAmbientLightGain 0076  
                        _i2c1_driver_i2cISR 0070                         ??_wireReadDataBlock 002A  
                                   _i2c_ISR 0CCB                                   _I2C_Start 0AC3  
                           ??_I2C_Read_Byte 0021                               setMode@enable 002B  
                        _i2c1_driver_isNACK 0B37                      __size_of_decodeGesture 018E  
                       ?_i2c1_driver_TXData 0076                             ??_I2C_Send_NACK 0020  
                                   ___awdiv 0711                             __size_of___wmul 001C  
                    ?i1_i2c1_driver_restart 0076                           ??_do_I2C_TX_EMPTY 0076  
                       ?_i2c1_driver_isNACK 0076                      ?i1_i2c1_driver_startRX 0076  
                  __end_of_wireReadDataByte 0CA6                                  _initialize 04A7  
                                   _getMode 0B58            __size_of_setLightIntLowThreshold 0027  
                        _setGestureLEDDrive 0ECA                                     __ptext1 04A7  
                                   __ptext2 0DB6                                     __ptext3 0BE9  
                                   __ptext4 0BD6                                     __ptext5 0D66  
                                   __ptext6 0D3F                                     __ptext7 0D8D  
                                   __ptext8 0D18                                     __ptext9 0ECA  
               __size_ofi1_i2c1_driver_stop 0003                         __end_of_do_I2C_IDLE 0AFE  
                 __end_of_wireReadDataBlock 07FC                         __end_of_do_I2C_RCEN 0B0A  
                     _OSCILLATOR_Initialize 0B4F                 __end_of_do_I2C_SEND_RESTART 0AE0  
                            ??_mssp1_setIRQ 0076                        ??_i2c1_driver_TXData 0020  
                                   _setMode 0763                    ??_PIN_MANAGER_Initialize 0022  
                                 _IOCCFbits 0399                         __end_of_I2C_ReStart 0AB7  
                                 _IOCCNbits 0398                         ?_setGestureLEDDrive 0076  
                                 _IOCCPbits 0397                             ?_mssp1_clearIRQ 0076  
                  _do_I2C_SEND_RESTART_READ 0AD4                  __size_of_SYSTEM_Initialize 000C  
                                   clrloop0 0B1D                        __size_of_returnReset 0002  
                      end_of_initialization 004A                        ??_i2c1_driver_isNACK 0076  
                     ??_setAmbientLightGain 002A                __size_of_setProxIntLowThresh 0013  
              __end_of_i2c1_driver_sendNACK 0800             __size_ofi1_i2c1_driver_sendNACK 0004  
                                ?_I2C_Start 0076               enableGestureSensor@interrupts 0031  
              __end_of_i2c1_driver_resetBus 0A94               setGestureExitThresh@threshold 002B  
                      ??_setGestureLEDDrive 002A                          readGesture@gstatus 0055  
                              initialize@id 0031                            ??_setGestureGain 002A  
                    ??_setProxIntHighThresh 002A                            ??_setGestureMode 002A  
                 _do_I2C_SEND_RESTART_WRITE 0AD8               __size_of_setGestureExitThresh 0013  
                          ??_WDT_Initialize 0020                           _wireWriteDataByte 0C11  
                                _returnStop 0A94                    __end_of_do_I2C_SEND_STOP 0AE4  
                             ??_enablePower 0030                          ?_wireWriteDataByte 0026  
           setLightIntHighThreshold@val_low 002D              __size_of_setGestureEnterThresh 0013  
             __end_of_setGestureEnterThresh 0BC3                               _decodeGesture 0319  
                        _isGestureAvailable 0B9D                          _setGestureWaitTime 0D18  
                         __size_of_I2C_Stop 0003                                 returnStop@p 0076  
                       ??_wireWriteDataByte 0029                            __CFG_FEXTOSC$OFF 0000  
           processGestureData@ud_ratio_last 0035                         ?_isGestureAvailable 0076  
                       ?_setGestureWaitTime 0076               __size_of_do_I2C_SEND_ADR_READ 0008  
                     setProximityGain@drive 002D            __size_of_GestureInterruptHandler 0003  
          __end_of_i2c1_driver_isBufferFull 0B37                                 _do_I2C_IDLE 0AF9  
                               _do_I2C_RCEN 0B04                   __end_of_wireWriteDataByte 0C2C  
                            _I2C_Write_Byte 0C2C                        ??_isGestureAvailable 0029  
                            __end_of___wmul 0C64                        ??_setGestureWaitTime 002A  
                               ?_initialize 0076                                 _I2C_ReStart 0AB4  
                    i1_i2c1_driver_sendNACK 0AD0                      ?_OSCILLATOR_Initialize 0076  
                  _setLightIntHighThreshold 0D3F                  __size_of_wireReadDataBlock 004A  
                           _gesture_motion_ 005D                __size_of_do_I2C_DO_NACK_STOP 0004  
               __size_of_processGestureData 02CB                              ?_decodeGesture 0076  
                   ?_do_I2C_DO_NACK_RESTART 0076                         start_initialization 002D  
                        setGestureGain@gain 002D                         _i2c_busCollisionISR 0AAE  
           __size_of_PIN_MANAGER_Initialize 003B                    ?i1_i2c1_driver_getRXData 0076  
          setLightIntHighThreshold@val_high 002E                         _enableGestureSensor 06AD  
                       __end_of_enablePower 0B9D                __size_of_i2c1_driver_sendACK 0004  
                   ??_i2c1_driver_getRXData 0020                    __end_of_setProximityGain 0DDF  
              __size_of_i2c1_driver_restart 0003                    processGestureData@d_last 0042  
              __size_of_i2c1_driver_startRX 0003                    processGestureData@l_last 0043  
                               ??_I2C_Start 0020                    processGestureData@r_last 0044  
                  __size_of_PIN_MANAGER_IOC 0006                    processGestureData@u_last 0041  
                   _processGestureData$1272 0039                     _processGestureData$1273 003B  
                   _processGestureData$1274 003D                     _processGestureData$1275 003F  
                      ?_i2c_busCollisionISR 0076                            __CFG_LPBOREN$OFF 0000  
                      __end_of_mssp1_setIRQ 0AA8                      __end_of_I2C_Write_Byte 0C48  
                          ??_PMD_Initialize 0020             setLightIntLowThreshold@val_high 002E  
                                  ??___wmul 0024                        ?_enableGestureSensor 0076  
                             ??_readGesture 0051                               ?_do_I2C_RESET 0076  
                        setGestureMode@mode 002B                     _setLightIntLowThreshold 0D66  
                 setGestureIntEnable@enable 002C                               ??_LEDs_SetLow 0020  
                  setAmbientLightGain@drive 002B                                 ?_returnStop 0076  
            __end_of_do_I2C_DO_NACK_RESTART 0AF0                               ??_setLEDBoost 002A  
                             ??_setLEDDrive 002A                        _i2c1_driver_sendNACK 07FC  
                    setGestureIntEnable@val 002B                                 __pbssCOMMON 0070  
                                 ___latbits 0002                        _i2c1_driver_resetBus 0A93  
                             __pcstackBANK0 0020                               __pcstackBANK1 00A0  
                             __pcstackBANK2 0120                                   _do_I2C_RX 0F6B  
                                 _do_I2C_TX 0FB1                 ?_IOCCF1_SetInterruptHandler 0020  
            __size_of_do_I2C_SEND_ADR_WRITE 0007               __size_ofi1_i2c1_driver_TXData 0005  
             __end_of_do_I2C_SEND_ADR_WRITE 0B30                       readGesture@fifo_data2 00A0  
                 __size_of_i2c1_driver_open 000A                       readGesture@fifo_level 0058  
                 __size_of_i2c1_driver_stop 0003                                    ?_i2c_ISR 0076  
                       __size_of_initialize 0116                             _do_I2C_TX_EMPTY 0E35  
                                 __pnvBANK0 006D                      __size_of_handleGesture 0034  
                     ??_i2c_busCollisionISR 0076                       __end_of_fsmStateTable 1020  
                    _PIN_MANAGER_Initialize 0F30                     ??i1_i2c1_driver_restart 0076  
                   ??i1_i2c1_driver_startRX 0076                             ?_I2C_Write_Byte 0076  
                     ??_enableGestureSensor 0030                              ??_do_I2C_RESET 0076  
                                  ?___awdiv 0026                  __size_of_wireWriteDataByte 001B  
                  ??_do_I2C_DO_ADDRESS_NACK 0076                 _i2c1_driver_busCollisionISR 0072  
                       _setProxIntLowThresh 0BE9                       __end_of_do_I2C_DO_ACK 0AE8  
              ??_INTERRUPT_InterruptManager 007C                    _i2c1_driver_isBufferFull 0B30  
                                  ?_getMode 0076                             ??_decodeGesture 0020  
                         ?_wireReadDataByte 0076                  ??_do_I2C_SEND_RESTART_READ 0076  
                     ?_i2c1_driver_sendNACK 0076             __end_ofi1_i2c1_driver_getRXData 0AA5  
                          ??_mssp1_clearIRQ 0076            ??_IOCCF1_DefaultInterruptHandler 0076  
           ?_IOCCF1_DefaultInterruptHandler 0076                                 _enablePower 0B8F  
                        ??_wireReadDataByte 0026                         __end_of_readGesture 06AD  
                     ?_i2c1_driver_resetBus 0076          __size_of_do_I2C_SEND_RESTART_WRITE 0004  
                                  _I2C_Stop 0AC9                    ??_resetGestureParameters 0020  
                                  ?_setMode 002B                         __end_of_LEDs_SetLow 0B1C  
                                ?_do_I2C_RX 0076                                  ?_do_I2C_TX 0076  
                         _i2c1_driver_start 0AC0                         __end_of_setLEDBoost 0E98  
                       __end_of_setLEDDrive 0DB6                        ?_setProxIntLowThresh 0076  
                     readGesture@bytes_read 0056                          ?_i2c1_driver_start 0076  
                            ___wmul@product 0024                                    _LATAbits 010C  
                                  _LATCbits 010E                         __size_of_returnStop 0002  
                                 clear_ram0 0B1C                                    _PIE0bits 0090  
                                  _PIE1bits 0091                __size_of_setGestureIntEnable 002B  
                   _GestureInterruptHandler 0A96                         _gesture_near_count_ 0063  
                       ??_i2c1_driver_start 0020         __size_of_INTERRUPT_InterruptManager 0027  
                                  _PIR0bits 0010                                    _PIR1bits 0011  
                     __end_of_I2C_Read_Byte 0B76                   ??_setLightIntLowThreshold 002C  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
                            setLEDBoost@val 002C                                    _SSP1STAT 0214  
                __end_ofi1_i2c1_driver_stop 0A9F                           ??_PIN_MANAGER_IOC 0076  
                     __end_of_I2C_Send_NACK 0AC0                              setLEDDrive@val 002C  
          processGestureData@lr_ratio_first 0033                           ___wmul@multiplier 0020  
                         ?_do_I2C_SEND_STOP 0076                   processGestureData@d_first 0046  
                             _handleGesture 0EFC                   __end_of_i2c1_driver_start 0AC3  
                             ??_returnReset 0077                          ??_do_I2C_SEND_STOP 0076  
               __size_of_i2c1_driver_TXData 0006                 __end_of_setAmbientLightGain 0C82  
                 processGestureData@l_first 0047           __end_of_do_I2C_SEND_RESTART_WRITE 0ADC  
                   __end_of_do_I2C_TX_EMPTY 0E66                __end_of_setGestureExitThresh 0BD6  
                 processGestureData@r_first 0048                   processGestureData@u_first 0045  
                     ??_setProxIntLowThresh 002A                __size_of_do_I2C_SEND_RESTART 0004  
               __size_of_i2c1_driver_isNACK 0008                           setGestureGain@val 002C  
                     __size_of_mssp1_setIRQ 0003                         _do_I2C_DO_NACK_STOP 0AE8  
                          __size_of_i2c_ISR 0026                  ??_setLightIntHighThreshold 002C  
               __size_of_setGestureLEDDrive 0032                              setMode@reg_val 002E  
            setLightIntLowThreshold@val_low 002D                                ?_do_I2C_IDLE 0076  
                              ?_do_I2C_RCEN 0076                           setGestureMode@val 002C  
                   ?i1_i2c1_driver_sendNACK 0076                     ??_OSCILLATOR_Initialize 0020  
                       _i2c1_driver_sendACK 0ACC                            __size_of___awdiv 0052  
             __size_of_setProxIntHighThresh 0013                                 _readGesture 05BD  
           __size_of_do_I2C_DO_ADDRESS_NACK 002B                         i2c1_driver_TXData@d 0020  
                    ??_i2c1_driver_sendNACK 0020                                ??_initialize 0030  
                               _LEDs_SetLow 0B16                                ?_I2C_ReStart 0076  
                       _i2c1_driver_restart 0AB1            setLightIntLowThreshold@threshold 002A  
                      ?_do_I2C_DO_NACK_STOP 0076                         _i2c1_driver_startRX 0ABA  
                            ?_handleGesture 0076                __end_of_do_I2C_SEND_ADR_READ 0B47  
                          __size_of_getMode 0009                      ??_i2c1_driver_resetBus 0076  
                      readGesture@fifo_data 0120                                 _setLEDBoost 0E66  
                               _setLEDDrive 0D8D             __size_of_resetGestureParameters 0015  
                              _mssp1_setIRQ 0AA5             __end_of_setLightIntLowThreshold 0D8D  
                               ??_do_I2C_RX 0076                                 ??_do_I2C_TX 0076  
                     setGestureLEDDrive@val 002C                            __size_of_setMode 004F  
                                  __ptext10 0E98                                    __ptext11 0BC3  
                                  __ptext20 0711                                    __ptext12 0BB0  
                                  __ptext21 0B9D                                    __ptext13 0C64  
                                  __ptext30 0763                                    __ptext22 0319  
                                  __ptext14 0B61                                    __ptext31 0C11  
                                  __ptext23 0B16                                    __ptext15 0EFC  
                                  __ptext40 0ABD                                    __ptext32 0B58  
                                  __ptext24 06AD                                    __ptext16 05BD  
                                  __ptext41 07FC                                    __ptext33 0C82  
                                  __ptext25 0E66                                    __ptext17 07B2  
                                  __ptext50 0B47                                    __ptext42 0B6B  
                                  __ptext34 0C2C                                    __ptext26 0CF1  
                                  __ptext18 004E                                    __ptext51 0F30  
                                  __ptext43 0ABA                                    __ptext35 0B10  
                                  __ptext27 0E0A                                    __ptext19 0C48  
                                  __ptext60 0FB1                                    __ptext52 0B0A  
                                  __ptext44 0B30                                    __ptext36 0AC9  
                                  __ptext28 0BFC                                    __ptext61 0DDF  
                                  __ptext53 0B4F                                    __ptext45 0AB7  
                                  __ptext37 0AC6                                    __ptext29 0B8F  
                                  __ptext70 0AD8                                    __ptext62 0AEC  
                                  __ptext46 0AB4                                    __ptext38 0AC3  
                                  __ptext71 0AD4                                    __ptext63 0AE8  
                                  __ptext55 0AAE                                    __ptext47 0AB1  
                                  __ptext39 0AC0                                    __ptext80 0A93  
                                  __ptext72 0AF9                                    __ptext64 0AE4  
                                  __ptext56 0AAB                                    __ptext48 0B76  
                                  __ptext81 0A9F                                    __ptext73 0B22  
                                  __ptext65 0B04                                    __ptext57 0CCB  
                                  __ptext49 0AF0                                    __ptext90 0A92  
                                  __ptext82 0002                                    __ptext74 0E35  
                                  __ptext66 0B29                                    __ptext58 0AA8  
                                  __ptext83 0A94                                    __ptext75 0AA5  
                                  __ptext67 0B3F                                    __ptext59 0F6B  
                                  __ptext84 0A9C                                    __ptext76 0B37  
                                  __ptext68 0AE0                                    __ptext85 0A99  
                                  __ptext77 0AF4                                    __ptext69 0ADC  
                                  __ptext86 0ACC                                    __ptext78 0AA2  
                                  __ptext87 0AFE                                    __ptext79 0AD0  
                                  __ptext88 0B82                                    __ptext89 0A96  
                     _setGestureEnterThresh 0BB0                                _SSP1CON1bits 0215  
                              _SSP1CON2bits 0216              setGestureEnterThresh@threshold 002B  
                      ?_i2c1_driver_sendACK 0076                        __end_of_do_I2C_RESET 0B29  
                                _IOCCF1_ISR 0B82                        ?_i2c1_driver_restart 0076  
                       __end_of_returnReset 0004                   ??_GestureInterruptHandler 0076  
                          _i2c1_driver_open 0B61                            _i2c1_driver_stop 0AC6  
                             __size_of_main 0025                        ?_i2c1_driver_startRX 0076  
                         ?_setProximityGain 0076              __size_of_i2c1_driver_getRXData 0003  
             __end_of_i2c1_driver_getRXData 0ABA                          __end_of_initialize 05BD  
                        ??_setProximityGain 002A            __size_ofi1_i2c1_driver_getRXData 0003  
                        _decodeGesture$1280 0028                          _decodeGesture$1281 002A  
                        _decodeGesture$1282 002C                          _decodeGesture$1283 002E  
                        _decodeGesture$1284 0030                          _decodeGesture$1277 0022  
                        _decodeGesture$1278 0024                          _decodeGesture$1279 0026  
            __end_ofi1_i2c1_driver_sendNACK 0AD4                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 002B                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                 __size_of_isGestureAvailable 0013  
                       setProximityGain@val 002C            __end_of_do_I2C_SEND_RESTART_READ 0AD8  
               __size_of_setGestureWaitTime 0027                  __end_of_processGestureData 0319  
                              ??_returnStop 0077                       ??_do_I2C_DO_NACK_STOP 0076  
                   __size_of_setGestureGain 0032                                  _INTCONbits 000B  
                   __size_of_setGestureMode 0027                  __size_of_i2c1_driver_start 0003  
                    setAmbientLightGain@val 002C                       ??_i2c1_driver_sendACK 0076  
                          ?_do_I2C_TX_EMPTY 0076                     __size_of_WDT_Initialize 0004  
                    _do_I2C_DO_ADDRESS_NACK 0DDF                                    intlevel1 0000  
                     ??_i2c1_driver_restart 0020                       ??_i2c1_driver_startRX 0020  
                   ?_PIN_MANAGER_Initialize 0076                            ??_I2C_Write_Byte 0021  
                         __CFG_CLKOUTEN$OFF 0000                          __end_of_returnStop 0A96  
                    _resetGestureParameters 0BFC                  ??_i2c1_driver_isBufferFull 0020  
            __size_ofi1_i2c1_driver_restart 0003               __end_ofi1_i2c1_driver_restart 0A9C  
            __size_ofi1_i2c1_driver_startRX 0003                __end_ofi1_i2c1_driver_TXData 0AF9  
             __end_ofi1_i2c1_driver_startRX 0AA2                        _setGestureExitThresh 0BC3  
                           ??_handleGesture 005B                               __pstringtext1 1000  
                                _SSP1DATPPS 0E21                                ?_enablePower 0076  
                                _SSP1CLKPPS 0E20                         _setGestureIntEnable 0E0A  
                          setLEDBoost@boost 002D                      ?_setGestureEnterThresh 0076  
                               _returnReset 0002                                 ?_IOCCF1_ISR 0076  
            __end_of_PIN_MANAGER_Initialize 0F6B                 __end_of_i2c_busCollisionISR 0AB1  
                 __size_of_wireReadDataByte 0024      __end_of_IOCCF1_DefaultInterruptHandler 0A93  
   __size_of_IOCCF1_DefaultInterruptHandler 0001              _IOCCF1_DefaultInterruptHandler 0A92  
                          setLEDDrive@drive 002D                         processGestureData@i 004D  
                           _PIN_MANAGER_IOC 0AFE                 __end_of_enableGestureSensor 0711  
                     _do_I2C_SEND_ADR_WRITE 0B29                        ?_setGestureIntEnable 0076  
                      _do_I2C_SEND_ADR_READ 0B3F                     _IOCCF1_InterruptHandler 006D  
          __end_of_setLightIntHighThreshold 0D66  
