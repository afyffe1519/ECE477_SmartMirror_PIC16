

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 16:55:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F18345 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0097                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  0197                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021D                     	;# 
   189  021D                     	;# 
   190  021E                     	;# 
   191  021F                     	;# 
   192  028C                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  0291                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0294                     	;# 
   200  0295                     	;# 
   201  0295                     	;# 
   202  0296                     	;# 
   203  0297                     	;# 
   204  0298                     	;# 
   205  029F                     	;# 
   206  030C                     	;# 
   207  030D                     	;# 
   208  030E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0314                     	;# 
   214  0315                     	;# 
   215  0315                     	;# 
   216  0316                     	;# 
   217  0317                     	;# 
   218  0318                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  039A                     	;# 
   232  039C                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0411                     	;# 
   237  0411                     	;# 
   238  0412                     	;# 
   239  0413                     	;# 
   240  0414                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  0418                     	;# 
   245  0418                     	;# 
   246  0419                     	;# 
   247  041A                     	;# 
   248  041B                     	;# 
   249  041C                     	;# 
   250  041D                     	;# 
   251  041E                     	;# 
   252  041F                     	;# 
   253  0498                     	;# 
   254  0498                     	;# 
   255  0499                     	;# 
   256  049A                     	;# 
   257  049B                     	;# 
   258  049B                     	;# 
   259  049C                     	;# 
   260  049D                     	;# 
   261  049E                     	;# 
   262  049F                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  061F                     	;# 
   272  0691                     	;# 
   273  0692                     	;# 
   274  0693                     	;# 
   275  0694                     	;# 
   276  0695                     	;# 
   277  0696                     	;# 
   278  0697                     	;# 
   279  0698                     	;# 
   280  0699                     	;# 
   281  0711                     	;# 
   282  0712                     	;# 
   283  0713                     	;# 
   284  0714                     	;# 
   285  0715                     	;# 
   286  0716                     	;# 
   287  0717                     	;# 
   288  0718                     	;# 
   289  0719                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0892                     	;# 
   297  0892                     	;# 
   298  0892                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0894                     	;# 
   306  0894                     	;# 
   307  0894                     	;# 
   308  0895                     	;# 
   309  0895                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0896                     	;# 
   313  0896                     	;# 
   314  089B                     	;# 
   315  0911                     	;# 
   316  0912                     	;# 
   317  0913                     	;# 
   318  0914                     	;# 
   319  0915                     	;# 
   320  0916                     	;# 
   321  0918                     	;# 
   322  0919                     	;# 
   323  091A                     	;# 
   324  091B                     	;# 
   325  091C                     	;# 
   326  091D                     	;# 
   327  091E                     	;# 
   328  091F                     	;# 
   329  0E0F                     	;# 
   330  0E10                     	;# 
   331  0E11                     	;# 
   332  0E12                     	;# 
   333  0E13                     	;# 
   334  0E14                     	;# 
   335  0E15                     	;# 
   336  0E16                     	;# 
   337  0E17                     	;# 
   338  0E18                     	;# 
   339  0E19                     	;# 
   340  0E1A                     	;# 
   341  0E1B                     	;# 
   342  0E1C                     	;# 
   343  0E1D                     	;# 
   344  0E1E                     	;# 
   345  0E1F                     	;# 
   346  0E20                     	;# 
   347  0E21                     	;# 
   348  0E22                     	;# 
   349  0E24                     	;# 
   350  0E25                     	;# 
   351  0E28                     	;# 
   352  0E29                     	;# 
   353  0E2A                     	;# 
   354  0E2B                     	;# 
   355  0E2C                     	;# 
   356  0E2D                     	;# 
   357  0E2E                     	;# 
   358  0E2F                     	;# 
   359  0E90                     	;# 
   360  0E91                     	;# 
   361  0E92                     	;# 
   362  0E94                     	;# 
   363  0E95                     	;# 
   364  0E9C                     	;# 
   365  0E9D                     	;# 
   366  0E9E                     	;# 
   367  0E9F                     	;# 
   368  0EA0                     	;# 
   369  0EA1                     	;# 
   370  0EA2                     	;# 
   371  0EA3                     	;# 
   372  0EA4                     	;# 
   373  0EA5                     	;# 
   374  0EA6                     	;# 
   375  0EA7                     	;# 
   376  0F0F                     	;# 
   377  0F10                     	;# 
   378  0F11                     	;# 
   379  0F12                     	;# 
   380  0F13                     	;# 
   381  0F14                     	;# 
   382  0F15                     	;# 
   383  0F16                     	;# 
   384  0F17                     	;# 
   385  0F18                     	;# 
   386  0F19                     	;# 
   387  0F1A                     	;# 
   388  0F1B                     	;# 
   389  0F1C                     	;# 
   390  0F1D                     	;# 
   391  0F1E                     	;# 
   392  0F1F                     	;# 
   393  0F20                     	;# 
   394  0F21                     	;# 
   395  0F22                     	;# 
   396  0F23                     	;# 
   397  0F24                     	;# 
   398  0F25                     	;# 
   399  0F26                     	;# 
   400  0F27                     	;# 
   401  0F28                     	;# 
   402  0F29                     	;# 
   403  0F2A                     	;# 
   404  0F2B                     	;# 
   405  0F2C                     	;# 
   406  0F2D                     	;# 
   407  0F2E                     	;# 
   408  0F2F                     	;# 
   409  0F30                     	;# 
   410  0F31                     	;# 
   411  0F32                     	;# 
   412  0F33                     	;# 
   413  0F34                     	;# 
   414  0F35                     	;# 
   415  0F36                     	;# 
   416  0F37                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  000E                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0016                     	;# 
   452  0017                     	;# 
   453  0018                     	;# 
   454  0019                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001D                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0090                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0097                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  009F                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  0111                     	;# 
   481  0112                     	;# 
   482  0113                     	;# 
   483  0114                     	;# 
   484  0115                     	;# 
   485  0116                     	;# 
   486  0117                     	;# 
   487  0118                     	;# 
   488  0119                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  018E                     	;# 
   492  0197                     	;# 
   493  0199                     	;# 
   494  0199                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019A                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019D                     	;# 
   509  019D                     	;# 
   510  019E                     	;# 
   511  019E                     	;# 
   512  019E                     	;# 
   513  019F                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  020C                     	;# 
   519  020D                     	;# 
   520  020E                     	;# 
   521  0211                     	;# 
   522  0211                     	;# 
   523  0212                     	;# 
   524  0212                     	;# 
   525  0213                     	;# 
   526  0213                     	;# 
   527  0214                     	;# 
   528  0214                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0216                     	;# 
   534  0216                     	;# 
   535  0217                     	;# 
   536  0217                     	;# 
   537  0219                     	;# 
   538  021A                     	;# 
   539  021B                     	;# 
   540  021C                     	;# 
   541  021D                     	;# 
   542  021D                     	;# 
   543  021E                     	;# 
   544  021F                     	;# 
   545  028C                     	;# 
   546  028D                     	;# 
   547  028E                     	;# 
   548  0291                     	;# 
   549  0291                     	;# 
   550  0292                     	;# 
   551  0293                     	;# 
   552  0294                     	;# 
   553  0295                     	;# 
   554  0295                     	;# 
   555  0296                     	;# 
   556  0297                     	;# 
   557  0298                     	;# 
   558  029F                     	;# 
   559  030C                     	;# 
   560  030D                     	;# 
   561  030E                     	;# 
   562  0311                     	;# 
   563  0311                     	;# 
   564  0312                     	;# 
   565  0313                     	;# 
   566  0314                     	;# 
   567  0315                     	;# 
   568  0315                     	;# 
   569  0316                     	;# 
   570  0317                     	;# 
   571  0318                     	;# 
   572  038C                     	;# 
   573  038D                     	;# 
   574  038E                     	;# 
   575  0391                     	;# 
   576  0392                     	;# 
   577  0393                     	;# 
   578  0394                     	;# 
   579  0395                     	;# 
   580  0396                     	;# 
   581  0397                     	;# 
   582  0398                     	;# 
   583  0399                     	;# 
   584  039A                     	;# 
   585  039C                     	;# 
   586  039D                     	;# 
   587  039E                     	;# 
   588  039F                     	;# 
   589  0411                     	;# 
   590  0411                     	;# 
   591  0412                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  0418                     	;# 
   598  0418                     	;# 
   599  0419                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  041F                     	;# 
   606  0498                     	;# 
   607  0498                     	;# 
   608  0499                     	;# 
   609  049A                     	;# 
   610  049B                     	;# 
   611  049B                     	;# 
   612  049C                     	;# 
   613  049D                     	;# 
   614  049E                     	;# 
   615  049F                     	;# 
   616  0617                     	;# 
   617  0618                     	;# 
   618  0619                     	;# 
   619  0619                     	;# 
   620  061A                     	;# 
   621  061B                     	;# 
   622  061C                     	;# 
   623  061C                     	;# 
   624  061F                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0711                     	;# 
   635  0712                     	;# 
   636  0713                     	;# 
   637  0714                     	;# 
   638  0715                     	;# 
   639  0716                     	;# 
   640  0717                     	;# 
   641  0718                     	;# 
   642  0719                     	;# 
   643  0891                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0892                     	;# 
   650  0892                     	;# 
   651  0892                     	;# 
   652  0893                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0894                     	;# 
   659  0894                     	;# 
   660  0894                     	;# 
   661  0895                     	;# 
   662  0895                     	;# 
   663  0895                     	;# 
   664  0896                     	;# 
   665  0896                     	;# 
   666  0896                     	;# 
   667  089B                     	;# 
   668  0911                     	;# 
   669  0912                     	;# 
   670  0913                     	;# 
   671  0914                     	;# 
   672  0915                     	;# 
   673  0916                     	;# 
   674  0918                     	;# 
   675  0919                     	;# 
   676  091A                     	;# 
   677  091B                     	;# 
   678  091C                     	;# 
   679  091D                     	;# 
   680  091E                     	;# 
   681  091F                     	;# 
   682  0E0F                     	;# 
   683  0E10                     	;# 
   684  0E11                     	;# 
   685  0E12                     	;# 
   686  0E13                     	;# 
   687  0E14                     	;# 
   688  0E15                     	;# 
   689  0E16                     	;# 
   690  0E17                     	;# 
   691  0E18                     	;# 
   692  0E19                     	;# 
   693  0E1A                     	;# 
   694  0E1B                     	;# 
   695  0E1C                     	;# 
   696  0E1D                     	;# 
   697  0E1E                     	;# 
   698  0E1F                     	;# 
   699  0E20                     	;# 
   700  0E21                     	;# 
   701  0E22                     	;# 
   702  0E24                     	;# 
   703  0E25                     	;# 
   704  0E28                     	;# 
   705  0E29                     	;# 
   706  0E2A                     	;# 
   707  0E2B                     	;# 
   708  0E2C                     	;# 
   709  0E2D                     	;# 
   710  0E2E                     	;# 
   711  0E2F                     	;# 
   712  0E90                     	;# 
   713  0E91                     	;# 
   714  0E92                     	;# 
   715  0E94                     	;# 
   716  0E95                     	;# 
   717  0E9C                     	;# 
   718  0E9D                     	;# 
   719  0E9E                     	;# 
   720  0E9F                     	;# 
   721  0EA0                     	;# 
   722  0EA1                     	;# 
   723  0EA2                     	;# 
   724  0EA3                     	;# 
   725  0EA4                     	;# 
   726  0EA5                     	;# 
   727  0EA6                     	;# 
   728  0EA7                     	;# 
   729  0F0F                     	;# 
   730  0F10                     	;# 
   731  0F11                     	;# 
   732  0F12                     	;# 
   733  0F13                     	;# 
   734  0F14                     	;# 
   735  0F15                     	;# 
   736  0F16                     	;# 
   737  0F17                     	;# 
   738  0F18                     	;# 
   739  0F19                     	;# 
   740  0F1A                     	;# 
   741  0F1B                     	;# 
   742  0F1C                     	;# 
   743  0F1D                     	;# 
   744  0F1E                     	;# 
   745  0F1F                     	;# 
   746  0F20                     	;# 
   747  0F21                     	;# 
   748  0F22                     	;# 
   749  0F23                     	;# 
   750  0F24                     	;# 
   751  0F25                     	;# 
   752  0F26                     	;# 
   753  0F27                     	;# 
   754  0F28                     	;# 
   755  0F29                     	;# 
   756  0F2A                     	;# 
   757  0F2B                     	;# 
   758  0F2C                     	;# 
   759  0F2D                     	;# 
   760  0F2E                     	;# 
   761  0F2F                     	;# 
   762  0F30                     	;# 
   763  0F31                     	;# 
   764  0F32                     	;# 
   765  0F33                     	;# 
   766  0F34                     	;# 
   767  0F35                     	;# 
   768  0F36                     	;# 
   769  0F37                     	;# 
   770  0FE4                     	;# 
   771  0FE5                     	;# 
   772  0FE6                     	;# 
   773  0FE7                     	;# 
   774  0FE8                     	;# 
   775  0FE9                     	;# 
   776  0FEA                     	;# 
   777  0FEB                     	;# 
   778  0FED                     	;# 
   779  0FEE                     	;# 
   780  0FEF                     	;# 
   781  0000                     	;# 
   782  0001                     	;# 
   783  0002                     	;# 
   784  0003                     	;# 
   785  0004                     	;# 
   786  0005                     	;# 
   787  0006                     	;# 
   788  0007                     	;# 
   789  0008                     	;# 
   790  0009                     	;# 
   791  000A                     	;# 
   792  000B                     	;# 
   793  000C                     	;# 
   794  000D                     	;# 
   795  000E                     	;# 
   796  0010                     	;# 
   797  0011                     	;# 
   798  0012                     	;# 
   799  0013                     	;# 
   800  0014                     	;# 
   801  0015                     	;# 
   802  0015                     	;# 
   803  0016                     	;# 
   804  0016                     	;# 
   805  0017                     	;# 
   806  0018                     	;# 
   807  0019                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  001D                     	;# 
   813  001E                     	;# 
   814  001F                     	;# 
   815  008C                     	;# 
   816  008D                     	;# 
   817  008E                     	;# 
   818  0090                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0093                     	;# 
   822  0094                     	;# 
   823  0097                     	;# 
   824  009B                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  0111                     	;# 
   834  0112                     	;# 
   835  0113                     	;# 
   836  0114                     	;# 
   837  0115                     	;# 
   838  0116                     	;# 
   839  0117                     	;# 
   840  0118                     	;# 
   841  0119                     	;# 
   842  018C                     	;# 
   843  018D                     	;# 
   844  018E                     	;# 
   845  0197                     	;# 
   846  0199                     	;# 
   847  0199                     	;# 
   848  0199                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019A                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019D                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019E                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020D                     	;# 
   873  020E                     	;# 
   874  0211                     	;# 
   875  0211                     	;# 
   876  0212                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0213                     	;# 
   880  0214                     	;# 
   881  0214                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0216                     	;# 
   888  0217                     	;# 
   889  0217                     	;# 
   890  0219                     	;# 
   891  021A                     	;# 
   892  021B                     	;# 
   893  021C                     	;# 
   894  021D                     	;# 
   895  021D                     	;# 
   896  021E                     	;# 
   897  021F                     	;# 
   898  028C                     	;# 
   899  028D                     	;# 
   900  028E                     	;# 
   901  0291                     	;# 
   902  0291                     	;# 
   903  0292                     	;# 
   904  0293                     	;# 
   905  0294                     	;# 
   906  0295                     	;# 
   907  0295                     	;# 
   908  0296                     	;# 
   909  0297                     	;# 
   910  0298                     	;# 
   911  029F                     	;# 
   912  030C                     	;# 
   913  030D                     	;# 
   914  030E                     	;# 
   915  0311                     	;# 
   916  0311                     	;# 
   917  0312                     	;# 
   918  0313                     	;# 
   919  0314                     	;# 
   920  0315                     	;# 
   921  0315                     	;# 
   922  0316                     	;# 
   923  0317                     	;# 
   924  0318                     	;# 
   925  038C                     	;# 
   926  038D                     	;# 
   927  038E                     	;# 
   928  0391                     	;# 
   929  0392                     	;# 
   930  0393                     	;# 
   931  0394                     	;# 
   932  0395                     	;# 
   933  0396                     	;# 
   934  0397                     	;# 
   935  0398                     	;# 
   936  0399                     	;# 
   937  039A                     	;# 
   938  039C                     	;# 
   939  039D                     	;# 
   940  039E                     	;# 
   941  039F                     	;# 
   942  0411                     	;# 
   943  0411                     	;# 
   944  0412                     	;# 
   945  0413                     	;# 
   946  0414                     	;# 
   947  0415                     	;# 
   948  0416                     	;# 
   949  0417                     	;# 
   950  0418                     	;# 
   951  0418                     	;# 
   952  0419                     	;# 
   953  041A                     	;# 
   954  041B                     	;# 
   955  041C                     	;# 
   956  041D                     	;# 
   957  041E                     	;# 
   958  041F                     	;# 
   959  0498                     	;# 
   960  0498                     	;# 
   961  0499                     	;# 
   962  049A                     	;# 
   963  049B                     	;# 
   964  049B                     	;# 
   965  049C                     	;# 
   966  049D                     	;# 
   967  049E                     	;# 
   968  049F                     	;# 
   969  0617                     	;# 
   970  0618                     	;# 
   971  0619                     	;# 
   972  0619                     	;# 
   973  061A                     	;# 
   974  061B                     	;# 
   975  061C                     	;# 
   976  061C                     	;# 
   977  061F                     	;# 
   978  0691                     	;# 
   979  0692                     	;# 
   980  0693                     	;# 
   981  0694                     	;# 
   982  0695                     	;# 
   983  0696                     	;# 
   984  0697                     	;# 
   985  0698                     	;# 
   986  0699                     	;# 
   987  0711                     	;# 
   988  0712                     	;# 
   989  0713                     	;# 
   990  0714                     	;# 
   991  0715                     	;# 
   992  0716                     	;# 
   993  0717                     	;# 
   994  0718                     	;# 
   995  0719                     	;# 
   996  0891                     	;# 
   997  0891                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0892                     	;# 
  1003  0892                     	;# 
  1004  0892                     	;# 
  1005  0893                     	;# 
  1006  0893                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0894                     	;# 
  1012  0894                     	;# 
  1013  0894                     	;# 
  1014  0895                     	;# 
  1015  0895                     	;# 
  1016  0895                     	;# 
  1017  0896                     	;# 
  1018  0896                     	;# 
  1019  0896                     	;# 
  1020  089B                     	;# 
  1021  0911                     	;# 
  1022  0912                     	;# 
  1023  0913                     	;# 
  1024  0914                     	;# 
  1025  0915                     	;# 
  1026  0916                     	;# 
  1027  0918                     	;# 
  1028  0919                     	;# 
  1029  091A                     	;# 
  1030  091B                     	;# 
  1031  091C                     	;# 
  1032  091D                     	;# 
  1033  091E                     	;# 
  1034  091F                     	;# 
  1035  0E0F                     	;# 
  1036  0E10                     	;# 
  1037  0E11                     	;# 
  1038  0E12                     	;# 
  1039  0E13                     	;# 
  1040  0E14                     	;# 
  1041  0E15                     	;# 
  1042  0E16                     	;# 
  1043  0E17                     	;# 
  1044  0E18                     	;# 
  1045  0E19                     	;# 
  1046  0E1A                     	;# 
  1047  0E1B                     	;# 
  1048  0E1C                     	;# 
  1049  0E1D                     	;# 
  1050  0E1E                     	;# 
  1051  0E1F                     	;# 
  1052  0E20                     	;# 
  1053  0E21                     	;# 
  1054  0E22                     	;# 
  1055  0E24                     	;# 
  1056  0E25                     	;# 
  1057  0E28                     	;# 
  1058  0E29                     	;# 
  1059  0E2A                     	;# 
  1060  0E2B                     	;# 
  1061  0E2C                     	;# 
  1062  0E2D                     	;# 
  1063  0E2E                     	;# 
  1064  0E2F                     	;# 
  1065  0E90                     	;# 
  1066  0E91                     	;# 
  1067  0E92                     	;# 
  1068  0E94                     	;# 
  1069  0E95                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0E9F                     	;# 
  1074  0EA0                     	;# 
  1075  0EA1                     	;# 
  1076  0EA2                     	;# 
  1077  0EA3                     	;# 
  1078  0EA4                     	;# 
  1079  0EA5                     	;# 
  1080  0EA6                     	;# 
  1081  0EA7                     	;# 
  1082  0F0F                     	;# 
  1083  0F10                     	;# 
  1084  0F11                     	;# 
  1085  0F12                     	;# 
  1086  0F13                     	;# 
  1087  0F14                     	;# 
  1088  0F15                     	;# 
  1089  0F16                     	;# 
  1090  0F17                     	;# 
  1091  0F18                     	;# 
  1092  0F19                     	;# 
  1093  0F1A                     	;# 
  1094  0F1B                     	;# 
  1095  0F1C                     	;# 
  1096  0F1D                     	;# 
  1097  0F1E                     	;# 
  1098  0F1F                     	;# 
  1099  0F20                     	;# 
  1100  0F21                     	;# 
  1101  0F22                     	;# 
  1102  0F23                     	;# 
  1103  0F24                     	;# 
  1104  0F25                     	;# 
  1105  0F26                     	;# 
  1106  0F27                     	;# 
  1107  0F28                     	;# 
  1108  0F29                     	;# 
  1109  0F2A                     	;# 
  1110  0F2B                     	;# 
  1111  0F2C                     	;# 
  1112  0F2D                     	;# 
  1113  0F2E                     	;# 
  1114  0F2F                     	;# 
  1115  0F30                     	;# 
  1116  0F31                     	;# 
  1117  0F32                     	;# 
  1118  0F33                     	;# 
  1119  0F34                     	;# 
  1120  0F35                     	;# 
  1121  0F36                     	;# 
  1122  0F37                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0013                     	;# 
  1153  0014                     	;# 
  1154  0015                     	;# 
  1155  0015                     	;# 
  1156  0016                     	;# 
  1157  0016                     	;# 
  1158  0017                     	;# 
  1159  0018                     	;# 
  1160  0019                     	;# 
  1161  0019                     	;# 
  1162  001A                     	;# 
  1163  001B                     	;# 
  1164  001C                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  0090                     	;# 
  1172  0091                     	;# 
  1173  0092                     	;# 
  1174  0093                     	;# 
  1175  0094                     	;# 
  1176  0097                     	;# 
  1177  009B                     	;# 
  1178  009B                     	;# 
  1179  009C                     	;# 
  1180  009D                     	;# 
  1181  009E                     	;# 
  1182  009F                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0115                     	;# 
  1191  0116                     	;# 
  1192  0117                     	;# 
  1193  0118                     	;# 
  1194  0119                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  0197                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  020C                     	;# 
  1225  020D                     	;# 
  1226  020E                     	;# 
  1227  0211                     	;# 
  1228  0211                     	;# 
  1229  0212                     	;# 
  1230  0212                     	;# 
  1231  0213                     	;# 
  1232  0213                     	;# 
  1233  0214                     	;# 
  1234  0214                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0216                     	;# 
  1240  0216                     	;# 
  1241  0217                     	;# 
  1242  0217                     	;# 
  1243  0219                     	;# 
  1244  021A                     	;# 
  1245  021B                     	;# 
  1246  021C                     	;# 
  1247  021D                     	;# 
  1248  021D                     	;# 
  1249  021E                     	;# 
  1250  021F                     	;# 
  1251  028C                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  0291                     	;# 
  1255  0291                     	;# 
  1256  0292                     	;# 
  1257  0293                     	;# 
  1258  0294                     	;# 
  1259  0295                     	;# 
  1260  0295                     	;# 
  1261  0296                     	;# 
  1262  0297                     	;# 
  1263  0298                     	;# 
  1264  029F                     	;# 
  1265  030C                     	;# 
  1266  030D                     	;# 
  1267  030E                     	;# 
  1268  0311                     	;# 
  1269  0311                     	;# 
  1270  0312                     	;# 
  1271  0313                     	;# 
  1272  0314                     	;# 
  1273  0315                     	;# 
  1274  0315                     	;# 
  1275  0316                     	;# 
  1276  0317                     	;# 
  1277  0318                     	;# 
  1278  038C                     	;# 
  1279  038D                     	;# 
  1280  038E                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  0393                     	;# 
  1284  0394                     	;# 
  1285  0395                     	;# 
  1286  0396                     	;# 
  1287  0397                     	;# 
  1288  0398                     	;# 
  1289  0399                     	;# 
  1290  039A                     	;# 
  1291  039C                     	;# 
  1292  039D                     	;# 
  1293  039E                     	;# 
  1294  039F                     	;# 
  1295  0411                     	;# 
  1296  0411                     	;# 
  1297  0412                     	;# 
  1298  0413                     	;# 
  1299  0414                     	;# 
  1300  0415                     	;# 
  1301  0416                     	;# 
  1302  0417                     	;# 
  1303  0418                     	;# 
  1304  0418                     	;# 
  1305  0419                     	;# 
  1306  041A                     	;# 
  1307  041B                     	;# 
  1308  041C                     	;# 
  1309  041D                     	;# 
  1310  041E                     	;# 
  1311  041F                     	;# 
  1312  0498                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  049E                     	;# 
  1321  049F                     	;# 
  1322  0617                     	;# 
  1323  0618                     	;# 
  1324  0619                     	;# 
  1325  0619                     	;# 
  1326  061A                     	;# 
  1327  061B                     	;# 
  1328  061C                     	;# 
  1329  061C                     	;# 
  1330  061F                     	;# 
  1331  0691                     	;# 
  1332  0692                     	;# 
  1333  0693                     	;# 
  1334  0694                     	;# 
  1335  0695                     	;# 
  1336  0696                     	;# 
  1337  0697                     	;# 
  1338  0698                     	;# 
  1339  0699                     	;# 
  1340  0711                     	;# 
  1341  0712                     	;# 
  1342  0713                     	;# 
  1343  0714                     	;# 
  1344  0715                     	;# 
  1345  0716                     	;# 
  1346  0717                     	;# 
  1347  0718                     	;# 
  1348  0719                     	;# 
  1349  0891                     	;# 
  1350  0891                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0892                     	;# 
  1356  0892                     	;# 
  1357  0892                     	;# 
  1358  0893                     	;# 
  1359  0893                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0894                     	;# 
  1365  0894                     	;# 
  1366  0894                     	;# 
  1367  0895                     	;# 
  1368  0895                     	;# 
  1369  0895                     	;# 
  1370  0896                     	;# 
  1371  0896                     	;# 
  1372  0896                     	;# 
  1373  089B                     	;# 
  1374  0911                     	;# 
  1375  0912                     	;# 
  1376  0913                     	;# 
  1377  0914                     	;# 
  1378  0915                     	;# 
  1379  0916                     	;# 
  1380  0918                     	;# 
  1381  0919                     	;# 
  1382  091A                     	;# 
  1383  091B                     	;# 
  1384  091C                     	;# 
  1385  091D                     	;# 
  1386  091E                     	;# 
  1387  091F                     	;# 
  1388  0E0F                     	;# 
  1389  0E10                     	;# 
  1390  0E11                     	;# 
  1391  0E12                     	;# 
  1392  0E13                     	;# 
  1393  0E14                     	;# 
  1394  0E15                     	;# 
  1395  0E16                     	;# 
  1396  0E17                     	;# 
  1397  0E18                     	;# 
  1398  0E19                     	;# 
  1399  0E1A                     	;# 
  1400  0E1B                     	;# 
  1401  0E1C                     	;# 
  1402  0E1D                     	;# 
  1403  0E1E                     	;# 
  1404  0E1F                     	;# 
  1405  0E20                     	;# 
  1406  0E21                     	;# 
  1407  0E22                     	;# 
  1408  0E24                     	;# 
  1409  0E25                     	;# 
  1410  0E28                     	;# 
  1411  0E29                     	;# 
  1412  0E2A                     	;# 
  1413  0E2B                     	;# 
  1414  0E2C                     	;# 
  1415  0E2D                     	;# 
  1416  0E2E                     	;# 
  1417  0E2F                     	;# 
  1418  0E90                     	;# 
  1419  0E91                     	;# 
  1420  0E92                     	;# 
  1421  0E94                     	;# 
  1422  0E95                     	;# 
  1423  0E9C                     	;# 
  1424  0E9D                     	;# 
  1425  0E9E                     	;# 
  1426  0E9F                     	;# 
  1427  0EA0                     	;# 
  1428  0EA1                     	;# 
  1429  0EA2                     	;# 
  1430  0EA3                     	;# 
  1431  0EA4                     	;# 
  1432  0EA5                     	;# 
  1433  0EA6                     	;# 
  1434  0EA7                     	;# 
  1435  0F0F                     	;# 
  1436  0F10                     	;# 
  1437  0F11                     	;# 
  1438  0F12                     	;# 
  1439  0F13                     	;# 
  1440  0F14                     	;# 
  1441  0F15                     	;# 
  1442  0F16                     	;# 
  1443  0F17                     	;# 
  1444  0F18                     	;# 
  1445  0F19                     	;# 
  1446  0F1A                     	;# 
  1447  0F1B                     	;# 
  1448  0F1C                     	;# 
  1449  0F1D                     	;# 
  1450  0F1E                     	;# 
  1451  0F1F                     	;# 
  1452  0F20                     	;# 
  1453  0F21                     	;# 
  1454  0F22                     	;# 
  1455  0F23                     	;# 
  1456  0F24                     	;# 
  1457  0F25                     	;# 
  1458  0F26                     	;# 
  1459  0F27                     	;# 
  1460  0F28                     	;# 
  1461  0F29                     	;# 
  1462  0F2A                     	;# 
  1463  0F2B                     	;# 
  1464  0F2C                     	;# 
  1465  0F2D                     	;# 
  1466  0F2E                     	;# 
  1467  0F2F                     	;# 
  1468  0F30                     	;# 
  1469  0F31                     	;# 
  1470  0F32                     	;# 
  1471  0F33                     	;# 
  1472  0F34                     	;# 
  1473  0F35                     	;# 
  1474  0F36                     	;# 
  1475  0F37                     	;# 
  1476  0FE4                     	;# 
  1477  0FE5                     	;# 
  1478  0FE6                     	;# 
  1479  0FE7                     	;# 
  1480  0FE8                     	;# 
  1481  0FE9                     	;# 
  1482  0FEA                     	;# 
  1483  0FEB                     	;# 
  1484  0FED                     	;# 
  1485  0FEE                     	;# 
  1486  0FEF                     	;# 
  1487  0000                     	;# 
  1488  0001                     	;# 
  1489  0002                     	;# 
  1490  0003                     	;# 
  1491  0004                     	;# 
  1492  0005                     	;# 
  1493  0006                     	;# 
  1494  0007                     	;# 
  1495  0008                     	;# 
  1496  0009                     	;# 
  1497  000A                     	;# 
  1498  000B                     	;# 
  1499  000C                     	;# 
  1500  000D                     	;# 
  1501  000E                     	;# 
  1502  0010                     	;# 
  1503  0011                     	;# 
  1504  0012                     	;# 
  1505  0013                     	;# 
  1506  0014                     	;# 
  1507  0015                     	;# 
  1508  0015                     	;# 
  1509  0016                     	;# 
  1510  0016                     	;# 
  1511  0017                     	;# 
  1512  0018                     	;# 
  1513  0019                     	;# 
  1514  0019                     	;# 
  1515  001A                     	;# 
  1516  001B                     	;# 
  1517  001C                     	;# 
  1518  001D                     	;# 
  1519  001E                     	;# 
  1520  001F                     	;# 
  1521  008C                     	;# 
  1522  008D                     	;# 
  1523  008E                     	;# 
  1524  0090                     	;# 
  1525  0091                     	;# 
  1526  0092                     	;# 
  1527  0093                     	;# 
  1528  0094                     	;# 
  1529  0097                     	;# 
  1530  009B                     	;# 
  1531  009B                     	;# 
  1532  009C                     	;# 
  1533  009D                     	;# 
  1534  009E                     	;# 
  1535  009F                     	;# 
  1536  010C                     	;# 
  1537  010D                     	;# 
  1538  010E                     	;# 
  1539  0111                     	;# 
  1540  0112                     	;# 
  1541  0113                     	;# 
  1542  0114                     	;# 
  1543  0115                     	;# 
  1544  0116                     	;# 
  1545  0117                     	;# 
  1546  0118                     	;# 
  1547  0119                     	;# 
  1548  018C                     	;# 
  1549  018D                     	;# 
  1550  018E                     	;# 
  1551  0197                     	;# 
  1552  0199                     	;# 
  1553  0199                     	;# 
  1554  0199                     	;# 
  1555  019A                     	;# 
  1556  019A                     	;# 
  1557  019A                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019C                     	;# 
  1564  019C                     	;# 
  1565  019C                     	;# 
  1566  019D                     	;# 
  1567  019D                     	;# 
  1568  019D                     	;# 
  1569  019E                     	;# 
  1570  019E                     	;# 
  1571  019E                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  020C                     	;# 
  1578  020D                     	;# 
  1579  020E                     	;# 
  1580  0211                     	;# 
  1581  0211                     	;# 
  1582  0212                     	;# 
  1583  0212                     	;# 
  1584  0213                     	;# 
  1585  0213                     	;# 
  1586  0214                     	;# 
  1587  0214                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0216                     	;# 
  1593  0216                     	;# 
  1594  0217                     	;# 
  1595  0217                     	;# 
  1596  0219                     	;# 
  1597  021A                     	;# 
  1598  021B                     	;# 
  1599  021C                     	;# 
  1600  021D                     	;# 
  1601  021D                     	;# 
  1602  021E                     	;# 
  1603  021F                     	;# 
  1604  028C                     	;# 
  1605  028D                     	;# 
  1606  028E                     	;# 
  1607  0291                     	;# 
  1608  0291                     	;# 
  1609  0292                     	;# 
  1610  0293                     	;# 
  1611  0294                     	;# 
  1612  0295                     	;# 
  1613  0295                     	;# 
  1614  0296                     	;# 
  1615  0297                     	;# 
  1616  0298                     	;# 
  1617  029F                     	;# 
  1618  030C                     	;# 
  1619  030D                     	;# 
  1620  030E                     	;# 
  1621  0311                     	;# 
  1622  0311                     	;# 
  1623  0312                     	;# 
  1624  0313                     	;# 
  1625  0314                     	;# 
  1626  0315                     	;# 
  1627  0315                     	;# 
  1628  0316                     	;# 
  1629  0317                     	;# 
  1630  0318                     	;# 
  1631  038C                     	;# 
  1632  038D                     	;# 
  1633  038E                     	;# 
  1634  0391                     	;# 
  1635  0392                     	;# 
  1636  0393                     	;# 
  1637  0394                     	;# 
  1638  0395                     	;# 
  1639  0396                     	;# 
  1640  0397                     	;# 
  1641  0398                     	;# 
  1642  0399                     	;# 
  1643  039A                     	;# 
  1644  039C                     	;# 
  1645  039D                     	;# 
  1646  039E                     	;# 
  1647  039F                     	;# 
  1648  0411                     	;# 
  1649  0411                     	;# 
  1650  0412                     	;# 
  1651  0413                     	;# 
  1652  0414                     	;# 
  1653  0415                     	;# 
  1654  0416                     	;# 
  1655  0417                     	;# 
  1656  0418                     	;# 
  1657  0418                     	;# 
  1658  0419                     	;# 
  1659  041A                     	;# 
  1660  041B                     	;# 
  1661  041C                     	;# 
  1662  041D                     	;# 
  1663  041E                     	;# 
  1664  041F                     	;# 
  1665  0498                     	;# 
  1666  0498                     	;# 
  1667  0499                     	;# 
  1668  049A                     	;# 
  1669  049B                     	;# 
  1670  049B                     	;# 
  1671  049C                     	;# 
  1672  049D                     	;# 
  1673  049E                     	;# 
  1674  049F                     	;# 
  1675  0617                     	;# 
  1676  0618                     	;# 
  1677  0619                     	;# 
  1678  0619                     	;# 
  1679  061A                     	;# 
  1680  061B                     	;# 
  1681  061C                     	;# 
  1682  061C                     	;# 
  1683  061F                     	;# 
  1684  0691                     	;# 
  1685  0692                     	;# 
  1686  0693                     	;# 
  1687  0694                     	;# 
  1688  0695                     	;# 
  1689  0696                     	;# 
  1690  0697                     	;# 
  1691  0698                     	;# 
  1692  0699                     	;# 
  1693  0711                     	;# 
  1694  0712                     	;# 
  1695  0713                     	;# 
  1696  0714                     	;# 
  1697  0715                     	;# 
  1698  0716                     	;# 
  1699  0717                     	;# 
  1700  0718                     	;# 
  1701  0719                     	;# 
  1702  0891                     	;# 
  1703  0891                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0892                     	;# 
  1709  0892                     	;# 
  1710  0892                     	;# 
  1711  0893                     	;# 
  1712  0893                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0894                     	;# 
  1718  0894                     	;# 
  1719  0894                     	;# 
  1720  0895                     	;# 
  1721  0895                     	;# 
  1722  0895                     	;# 
  1723  0896                     	;# 
  1724  0896                     	;# 
  1725  0896                     	;# 
  1726  089B                     	;# 
  1727  0911                     	;# 
  1728  0912                     	;# 
  1729  0913                     	;# 
  1730  0914                     	;# 
  1731  0915                     	;# 
  1732  0916                     	;# 
  1733  0918                     	;# 
  1734  0919                     	;# 
  1735  091A                     	;# 
  1736  091B                     	;# 
  1737  091C                     	;# 
  1738  091D                     	;# 
  1739  091E                     	;# 
  1740  091F                     	;# 
  1741  0E0F                     	;# 
  1742  0E10                     	;# 
  1743  0E11                     	;# 
  1744  0E12                     	;# 
  1745  0E13                     	;# 
  1746  0E14                     	;# 
  1747  0E15                     	;# 
  1748  0E16                     	;# 
  1749  0E17                     	;# 
  1750  0E18                     	;# 
  1751  0E19                     	;# 
  1752  0E1A                     	;# 
  1753  0E1B                     	;# 
  1754  0E1C                     	;# 
  1755  0E1D                     	;# 
  1756  0E1E                     	;# 
  1757  0E1F                     	;# 
  1758  0E20                     	;# 
  1759  0E21                     	;# 
  1760  0E22                     	;# 
  1761  0E24                     	;# 
  1762  0E25                     	;# 
  1763  0E28                     	;# 
  1764  0E29                     	;# 
  1765  0E2A                     	;# 
  1766  0E2B                     	;# 
  1767  0E2C                     	;# 
  1768  0E2D                     	;# 
  1769  0E2E                     	;# 
  1770  0E2F                     	;# 
  1771  0E90                     	;# 
  1772  0E91                     	;# 
  1773  0E92                     	;# 
  1774  0E94                     	;# 
  1775  0E95                     	;# 
  1776  0E9C                     	;# 
  1777  0E9D                     	;# 
  1778  0E9E                     	;# 
  1779  0E9F                     	;# 
  1780  0EA0                     	;# 
  1781  0EA1                     	;# 
  1782  0EA2                     	;# 
  1783  0EA3                     	;# 
  1784  0EA4                     	;# 
  1785  0EA5                     	;# 
  1786  0EA6                     	;# 
  1787  0EA7                     	;# 
  1788  0F0F                     	;# 
  1789  0F10                     	;# 
  1790  0F11                     	;# 
  1791  0F12                     	;# 
  1792  0F13                     	;# 
  1793  0F14                     	;# 
  1794  0F15                     	;# 
  1795  0F16                     	;# 
  1796  0F17                     	;# 
  1797  0F18                     	;# 
  1798  0F19                     	;# 
  1799  0F1A                     	;# 
  1800  0F1B                     	;# 
  1801  0F1C                     	;# 
  1802  0F1D                     	;# 
  1803  0F1E                     	;# 
  1804  0F1F                     	;# 
  1805  0F20                     	;# 
  1806  0F21                     	;# 
  1807  0F22                     	;# 
  1808  0F23                     	;# 
  1809  0F24                     	;# 
  1810  0F25                     	;# 
  1811  0F26                     	;# 
  1812  0F27                     	;# 
  1813  0F28                     	;# 
  1814  0F29                     	;# 
  1815  0F2A                     	;# 
  1816  0F2B                     	;# 
  1817  0F2C                     	;# 
  1818  0F2D                     	;# 
  1819  0F2E                     	;# 
  1820  0F2F                     	;# 
  1821  0F30                     	;# 
  1822  0F31                     	;# 
  1823  0F32                     	;# 
  1824  0F33                     	;# 
  1825  0F34                     	;# 
  1826  0F35                     	;# 
  1827  0F36                     	;# 
  1828  0F37                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0010                     	;# 
  1856  0011                     	;# 
  1857  0012                     	;# 
  1858  0013                     	;# 
  1859  0014                     	;# 
  1860  0015                     	;# 
  1861  0015                     	;# 
  1862  0016                     	;# 
  1863  0016                     	;# 
  1864  0017                     	;# 
  1865  0018                     	;# 
  1866  0019                     	;# 
  1867  0019                     	;# 
  1868  001A                     	;# 
  1869  001B                     	;# 
  1870  001C                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0097                     	;# 
  1883  009B                     	;# 
  1884  009B                     	;# 
  1885  009C                     	;# 
  1886  009D                     	;# 
  1887  009E                     	;# 
  1888  009F                     	;# 
  1889  010C                     	;# 
  1890  010D                     	;# 
  1891  010E                     	;# 
  1892  0111                     	;# 
  1893  0112                     	;# 
  1894  0113                     	;# 
  1895  0114                     	;# 
  1896  0115                     	;# 
  1897  0116                     	;# 
  1898  0117                     	;# 
  1899  0118                     	;# 
  1900  0119                     	;# 
  1901  018C                     	;# 
  1902  018D                     	;# 
  1903  018E                     	;# 
  1904  0197                     	;# 
  1905  0199                     	;# 
  1906  0199                     	;# 
  1907  0199                     	;# 
  1908  019A                     	;# 
  1909  019A                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019C                     	;# 
  1919  019D                     	;# 
  1920  019D                     	;# 
  1921  019D                     	;# 
  1922  019E                     	;# 
  1923  019E                     	;# 
  1924  019E                     	;# 
  1925  019F                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  020C                     	;# 
  1931  020D                     	;# 
  1932  020E                     	;# 
  1933  0211                     	;# 
  1934  0211                     	;# 
  1935  0212                     	;# 
  1936  0212                     	;# 
  1937  0213                     	;# 
  1938  0213                     	;# 
  1939  0214                     	;# 
  1940  0214                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0219                     	;# 
  1950  021A                     	;# 
  1951  021B                     	;# 
  1952  021C                     	;# 
  1953  021D                     	;# 
  1954  021D                     	;# 
  1955  021E                     	;# 
  1956  021F                     	;# 
  1957  028C                     	;# 
  1958  028D                     	;# 
  1959  028E                     	;# 
  1960  0291                     	;# 
  1961  0291                     	;# 
  1962  0292                     	;# 
  1963  0293                     	;# 
  1964  0294                     	;# 
  1965  0295                     	;# 
  1966  0295                     	;# 
  1967  0296                     	;# 
  1968  0297                     	;# 
  1969  0298                     	;# 
  1970  029F                     	;# 
  1971  030C                     	;# 
  1972  030D                     	;# 
  1973  030E                     	;# 
  1974  0311                     	;# 
  1975  0311                     	;# 
  1976  0312                     	;# 
  1977  0313                     	;# 
  1978  0314                     	;# 
  1979  0315                     	;# 
  1980  0315                     	;# 
  1981  0316                     	;# 
  1982  0317                     	;# 
  1983  0318                     	;# 
  1984  038C                     	;# 
  1985  038D                     	;# 
  1986  038E                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  0393                     	;# 
  1990  0394                     	;# 
  1991  0395                     	;# 
  1992  0396                     	;# 
  1993  0397                     	;# 
  1994  0398                     	;# 
  1995  0399                     	;# 
  1996  039A                     	;# 
  1997  039C                     	;# 
  1998  039D                     	;# 
  1999  039E                     	;# 
  2000  039F                     	;# 
  2001  0411                     	;# 
  2002  0411                     	;# 
  2003  0412                     	;# 
  2004  0413                     	;# 
  2005  0414                     	;# 
  2006  0415                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  0418                     	;# 
  2011  0419                     	;# 
  2012  041A                     	;# 
  2013  041B                     	;# 
  2014  041C                     	;# 
  2015  041D                     	;# 
  2016  041E                     	;# 
  2017  041F                     	;# 
  2018  0498                     	;# 
  2019  0498                     	;# 
  2020  0499                     	;# 
  2021  049A                     	;# 
  2022  049B                     	;# 
  2023  049B                     	;# 
  2024  049C                     	;# 
  2025  049D                     	;# 
  2026  049E                     	;# 
  2027  049F                     	;# 
  2028  0617                     	;# 
  2029  0618                     	;# 
  2030  0619                     	;# 
  2031  0619                     	;# 
  2032  061A                     	;# 
  2033  061B                     	;# 
  2034  061C                     	;# 
  2035  061C                     	;# 
  2036  061F                     	;# 
  2037  0691                     	;# 
  2038  0692                     	;# 
  2039  0693                     	;# 
  2040  0694                     	;# 
  2041  0695                     	;# 
  2042  0696                     	;# 
  2043  0697                     	;# 
  2044  0698                     	;# 
  2045  0699                     	;# 
  2046  0711                     	;# 
  2047  0712                     	;# 
  2048  0713                     	;# 
  2049  0714                     	;# 
  2050  0715                     	;# 
  2051  0716                     	;# 
  2052  0717                     	;# 
  2053  0718                     	;# 
  2054  0719                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0892                     	;# 
  2062  0892                     	;# 
  2063  0892                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0894                     	;# 
  2071  0894                     	;# 
  2072  0894                     	;# 
  2073  0895                     	;# 
  2074  0895                     	;# 
  2075  0895                     	;# 
  2076  0896                     	;# 
  2077  0896                     	;# 
  2078  0896                     	;# 
  2079  089B                     	;# 
  2080  0911                     	;# 
  2081  0912                     	;# 
  2082  0913                     	;# 
  2083  0914                     	;# 
  2084  0915                     	;# 
  2085  0916                     	;# 
  2086  0918                     	;# 
  2087  0919                     	;# 
  2088  091A                     	;# 
  2089  091B                     	;# 
  2090  091C                     	;# 
  2091  091D                     	;# 
  2092  091E                     	;# 
  2093  091F                     	;# 
  2094  0E0F                     	;# 
  2095  0E10                     	;# 
  2096  0E11                     	;# 
  2097  0E12                     	;# 
  2098  0E13                     	;# 
  2099  0E14                     	;# 
  2100  0E15                     	;# 
  2101  0E16                     	;# 
  2102  0E17                     	;# 
  2103  0E18                     	;# 
  2104  0E19                     	;# 
  2105  0E1A                     	;# 
  2106  0E1B                     	;# 
  2107  0E1C                     	;# 
  2108  0E1D                     	;# 
  2109  0E1E                     	;# 
  2110  0E1F                     	;# 
  2111  0E20                     	;# 
  2112  0E21                     	;# 
  2113  0E22                     	;# 
  2114  0E24                     	;# 
  2115  0E25                     	;# 
  2116  0E28                     	;# 
  2117  0E29                     	;# 
  2118  0E2A                     	;# 
  2119  0E2B                     	;# 
  2120  0E2C                     	;# 
  2121  0E2D                     	;# 
  2122  0E2E                     	;# 
  2123  0E2F                     	;# 
  2124  0E90                     	;# 
  2125  0E91                     	;# 
  2126  0E92                     	;# 
  2127  0E94                     	;# 
  2128  0E95                     	;# 
  2129  0E9C                     	;# 
  2130  0E9D                     	;# 
  2131  0E9E                     	;# 
  2132  0E9F                     	;# 
  2133  0EA0                     	;# 
  2134  0EA1                     	;# 
  2135  0EA2                     	;# 
  2136  0EA3                     	;# 
  2137  0EA4                     	;# 
  2138  0EA5                     	;# 
  2139  0EA6                     	;# 
  2140  0EA7                     	;# 
  2141  0F0F                     	;# 
  2142  0F10                     	;# 
  2143  0F11                     	;# 
  2144  0F12                     	;# 
  2145  0F13                     	;# 
  2146  0F14                     	;# 
  2147  0F15                     	;# 
  2148  0F16                     	;# 
  2149  0F17                     	;# 
  2150  0F18                     	;# 
  2151  0F19                     	;# 
  2152  0F1A                     	;# 
  2153  0F1B                     	;# 
  2154  0F1C                     	;# 
  2155  0F1D                     	;# 
  2156  0F1E                     	;# 
  2157  0F1F                     	;# 
  2158  0F20                     	;# 
  2159  0F21                     	;# 
  2160  0F22                     	;# 
  2161  0F23                     	;# 
  2162  0F24                     	;# 
  2163  0F25                     	;# 
  2164  0F26                     	;# 
  2165  0F27                     	;# 
  2166  0F28                     	;# 
  2167  0F29                     	;# 
  2168  0F2A                     	;# 
  2169  0F2B                     	;# 
  2170  0F2C                     	;# 
  2171  0F2D                     	;# 
  2172  0F2E                     	;# 
  2173  0F2F                     	;# 
  2174  0F30                     	;# 
  2175  0F31                     	;# 
  2176  0F32                     	;# 
  2177  0F33                     	;# 
  2178  0F34                     	;# 
  2179  0F35                     	;# 
  2180  0F36                     	;# 
  2181  0F37                     	;# 
  2182  0FE4                     	;# 
  2183  0FE5                     	;# 
  2184  0FE6                     	;# 
  2185  0FE7                     	;# 
  2186  0FE8                     	;# 
  2187  0FE9                     	;# 
  2188  0FEA                     	;# 
  2189  0FEB                     	;# 
  2190  0FED                     	;# 
  2191  0FEE                     	;# 
  2192  0FEF                     	;# 
  2193                           
  2194                           	psect	nvBANK0
  2195  005B                     __pnvBANK0:	
  2196  005B                     _EUSART_ErrorHandler:	
  2197  005B                     	ds	2
  2198  005D                     _EUSART_OverrunErrorHandler:	
  2199  005D                     	ds	2
  2200  005F                     _EUSART_FramingErrorHandler:	
  2201  005F                     	ds	2
  2202  0061                     _EUSART_RxDefaultInterruptHandler:	
  2203  0061                     	ds	2
  2204  0063                     _EUSART_TxDefaultInterruptHandler:	
  2205  0063                     	ds	2
  2206  0065                     _eusartTxBufferRemaining:	
  2207  0065                     	ds	1
  2208  0011                     _PIR1bits	set	17
  2209  000B                     _INTCONbits	set	11
  2210  008E                     _TRISC	set	142
  2211  008D                     _TRISB	set	141
  2212  008C                     _TRISA	set	140
  2213  0097                     _WDTCON	set	151
  2214  0091                     _PIE1bits	set	145
  2215  010E                     _LATC	set	270
  2216  010D                     _LATB	set	269
  2217  010C                     _LATA	set	268
  2218  018C                     _ANSELA	set	396
  2219  018D                     _ANSELB	set	397
  2220  018E                     _ANSELC	set	398
  2221  0199                     _RC1REG	set	409
  2222  019D                     _RC1STAbits	set	413
  2223  019A                     _TX1REG	set	410
  2224  019E                     _TX1STAbits	set	414
  2225  019C                     _SP1BRGH	set	412
  2226  019B                     _SP1BRGL	set	411
  2227  019E                     _TX1STA	set	414
  2228  019D                     _RC1STA	set	413
  2229  019F                     _BAUD1CON	set	415
  2230  020E                     _WPUC	set	526
  2231  020C                     _WPUA	set	524
  2232  020D                     _WPUB	set	525
  2233  028E                     _ODCONC	set	654
  2234  028D                     _ODCONB	set	653
  2235  028C                     _ODCONA	set	652
  2236  030E                     _SLRCONC	set	782
  2237  030D                     _SLRCONB	set	781
  2238  030C                     _SLRCONA	set	780
  2239  0916                     _PMD5	set	2326
  2240  0915                     _PMD4	set	2325
  2241  0914                     _PMD3	set	2324
  2242  0913                     _PMD2	set	2323
  2243  0912                     _PMD1	set	2322
  2244  0911                     _PMD0	set	2321
  2245  091E                     _OSCTUNE	set	2334
  2246  091F                     _OSCFRQ	set	2335
  2247  091D                     _OSCEN	set	2333
  2248  091B                     _OSCCON3	set	2331
  2249  0919                     _OSCCON1	set	2329
  2250  0E24                     _RXPPS	set	3620
  2251  0E95                     _RA5PPS	set	3733
  2252                           
  2253                           	psect	stringtext1
  2254  0217                     __pstringtext1:	
  2255  0217                     STR_1:	
  2256  0217  3448               	retlw	72	;'H'
  2257  0218  3465               	retlw	101	;'e'
  2258  0219  346C               	retlw	108	;'l'
  2259  021A  346C               	retlw	108	;'l'
  2260  021B  346F               	retlw	111	;'o'
  2261  021C  3420               	retlw	32	;' '
  2262  021D  3457               	retlw	87	;'W'
  2263  021E  346F               	retlw	111	;'o'
  2264  021F  3472               	retlw	114	;'r'
  2265  0220  346C               	retlw	108	;'l'
  2266  0221  3464               	retlw	100	;'d'
  2267  0222  3400               	retlw	0
  2268                           
  2269                           	psect	stringtext2
  2270  0000                     __pstringtext2:	
  2271                           
  2272                           ; #config settings
  2273  0000                     
  2274                           	psect	cinit
  2275  0023                     start_initialization:	
  2276  0023                     __initialization:	
  2277                           
  2278                           ; Clear objects allocated to COMMON
  2279  0023  01FC               	clrf	__pbssCOMMON& (0+127)
  2280                           
  2281                           ; Clear objects allocated to BANK0
  2282  0024  3020               	movlw	low __pbssBANK0
  2283  0025  0084               	movwf	4
  2284  0026  3000               	movlw	high __pbssBANK0
  2285  0027  0085               	movwf	5
  2286  0028  3025               	movlw	37
  2287  0029  3182  2240  3180   	fcall	clear_ram0
  2288                           
  2289                           ; Clear objects allocated to BANK1
  2290  002C  30A0               	movlw	low __pbssBANK1
  2291  002D  0084               	movwf	4
  2292  002E  3000               	movlw	high __pbssBANK1
  2293  002F  0085               	movwf	5
  2294  0030  3020               	movlw	32
  2295  0031  3182  2240         	fcall	clear_ram0
  2296  0033                     end_of_initialization:	
  2297                           ;End of C runtime variable initialization code
  2298                           
  2299  0033                     __end_of__initialization:	
  2300  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2301  0034  0020               	movlb	0
  2302  0035  3182  2A23         	ljmp	_main	;jump to C main() function
  2303                           
  2304                           	psect	bssCOMMON
  2305  007C                     __pbssCOMMON:	
  2306  007C                     _eusartRxHead:	
  2307  007C                     	ds	1
  2308                           
  2309                           	psect	bssBANK0
  2310  0020                     __pbssBANK0:	
  2311  0020                     _eusartRxStatusBuffer:	
  2312  0020                     	ds	8
  2313  0028                     _eusartRxBuffer:	
  2314  0028                     	ds	8
  2315  0030                     _eusartTxBuffer:	
  2316  0030                     	ds	8
  2317  0038                     _nout:	
  2318  0038                     	ds	2
  2319  003A                     _width:	
  2320  003A                     	ds	2
  2321  003C                     _prec:	
  2322  003C                     	ds	2
  2323  003E                     _flags:	
  2324  003E                     	ds	2
  2325  0040                     _eusartRxLastError:	
  2326  0040                     	ds	1
  2327  0041                     _eusartRxCount:	
  2328  0041                     	ds	1
  2329  0042                     _eusartRxTail:	
  2330  0042                     	ds	1
  2331  0043                     _eusartTxTail:	
  2332  0043                     	ds	1
  2333  0044                     _eusartTxHead:	
  2334  0044                     	ds	1
  2335                           
  2336                           	psect	bssBANK1
  2337  00A0                     __pbssBANK1:	
  2338  00A0                     _dbuf:	
  2339  00A0                     	ds	32
  2340                           
  2341                           	psect	clrtext
  2342  0240                     clear_ram0:	
  2343                           ;	Called with FSR0 containing the base address, and
  2344                           ;	WREG with the size to clear
  2345                           
  2346  0240  0064               	clrwdt	;clear the watchdog before getting into this loop
  2347  0241                     clrloop0:	
  2348  0241  0180               	clrf	0	;clear RAM location pointed to by FSR
  2349  0242  3101               	addfsr 0,1
  2350  0243  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2351  0244  2A41               	goto	clrloop0	;have we reached the end yet?
  2352  0245  3400               	retlw	0	;all done for this memory range, return
  2353                           
  2354                           	psect	cstackCOMMON
  2355  0070                     __pcstackCOMMON:	
  2356  0070                     ?_SYSTEM_Initialize:	
  2357  0070                     ?_EUSART_Receive_ISR:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_EUSART_Transmit_ISR:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ??_EUSART_Transmit_ISR:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_EUSART_DefaultErrorHandler:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_EUSART_RxDataHandler:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ??_EUSART_RxDataHandler:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_PMD_Initialize:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_PIN_MANAGER_Initialize:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_OSCILLATOR_Initialize:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ?_WDT_Initialize:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_main:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ?_EUSART_Initialize:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_EUSART_Write:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?_putch:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_INTERRUPT_InterruptManager:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414                           
  2415                           ; 1 bytes @ 0x0
  2416  0070                     	ds	1
  2417  0071                     ?_EUSART_SetRxInterruptHandler:	
  2418  0071                     ??_EUSART_Receive_ISR:	
  2419                           ; 1 bytes @ 0x1
  2420                           
  2421  0071                     ?_EUSART_SetTxInterruptHandler:	
  2422                           ; 1 bytes @ 0x1
  2423                           
  2424  0071                     ?_EUSART_SetFramingErrorHandler:	
  2425                           ; 1 bytes @ 0x1
  2426                           
  2427  0071                     ?_EUSART_SetOverrunErrorHandler:	
  2428                           ; 1 bytes @ 0x1
  2429                           
  2430  0071                     ?_EUSART_SetErrorHandler:	
  2431                           ; 1 bytes @ 0x1
  2432                           
  2433  0071                     ??_EUSART_DefaultErrorHandler:	
  2434                           ; 1 bytes @ 0x1
  2435                           
  2436  0071                     ??_PMD_Initialize:	
  2437                           ; 1 bytes @ 0x1
  2438                           
  2439  0071                     ??_PIN_MANAGER_Initialize:	
  2440                           ; 1 bytes @ 0x1
  2441                           
  2442  0071                     ??_OSCILLATOR_Initialize:	
  2443                           ; 1 bytes @ 0x1
  2444                           
  2445  0071                     ??_WDT_Initialize:	
  2446                           ; 1 bytes @ 0x1
  2447                           
  2448  0071                     ??_EUSART_Write:	
  2449                           ; 1 bytes @ 0x1
  2450                           
  2451  0071                     ??_INTERRUPT_InterruptManager:	
  2452                           ; 1 bytes @ 0x1
  2453                           
  2454  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2455                           ; 1 bytes @ 0x1
  2456                           
  2457  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2458                           ; 2 bytes @ 0x1
  2459                           
  2460  0071                     EUSART_SetErrorHandler@interruptHandler:	
  2461                           ; 2 bytes @ 0x1
  2462                           
  2463  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2464                           ; 2 bytes @ 0x1
  2465                           
  2466  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2467                           ; 2 bytes @ 0x1
  2468                           
  2469                           
  2470                           ; 2 bytes @ 0x1
  2471  0071                     	ds	1
  2472  0072                     EUSART_Write@txData:	
  2473                           
  2474                           ; 1 bytes @ 0x2
  2475  0072                     	ds	1
  2476  0073                     ??_EUSART_SetRxInterruptHandler:	
  2477  0073                     ??_EUSART_SetTxInterruptHandler:	
  2478                           ; 1 bytes @ 0x3
  2479                           
  2480  0073                     ??_EUSART_SetFramingErrorHandler:	
  2481                           ; 1 bytes @ 0x3
  2482                           
  2483  0073                     ??_EUSART_SetOverrunErrorHandler:	
  2484                           ; 1 bytes @ 0x3
  2485                           
  2486  0073                     ??_EUSART_SetErrorHandler:	
  2487                           ; 1 bytes @ 0x3
  2488                           
  2489  0073                     ??_EUSART_Initialize:	
  2490                           ; 1 bytes @ 0x3
  2491                           
  2492  0073                     ??_putch:	
  2493                           ; 1 bytes @ 0x3
  2494                           
  2495  0073                     putch@txData:	
  2496                           ; 1 bytes @ 0x3
  2497                           
  2498                           
  2499                           ; 1 bytes @ 0x3
  2500  0073                     	ds	1
  2501  0074                     ??_SYSTEM_Initialize:	
  2502  0074                     ?_fputc:	
  2503                           ; 1 bytes @ 0x4
  2504                           
  2505  0074                     fputc@c:	
  2506                           ; 2 bytes @ 0x4
  2507                           
  2508                           
  2509                           ; 2 bytes @ 0x4
  2510  0074                     	ds	2
  2511  0076                     fputc@fp:	
  2512                           
  2513                           ; 1 bytes @ 0x6
  2514  0076                     	ds	1
  2515  0077                     ??_fputc:	
  2516                           
  2517                           ; 1 bytes @ 0x7
  2518  0077                     	ds	5
  2519  007C                     ??_main:	
  2520                           
  2521                           	psect	cstackBANK0
  2522  0045                     __pcstackBANK0:	
  2523                           ; 1 bytes @ 0xC
  2524                           
  2525  0045                     ?_vfpfcnvrt:	
  2526  0045                     vfpfcnvrt@fmt:	
  2527                           ; 2 bytes @ 0x0
  2528                           
  2529                           
  2530                           ; 1 bytes @ 0x0
  2531  0045                     	ds	1
  2532  0046                     vfpfcnvrt@ap:	
  2533                           
  2534                           ; 1 bytes @ 0x1
  2535  0046                     	ds	1
  2536  0047                     ??_vfpfcnvrt:	
  2537                           
  2538                           ; 1 bytes @ 0x2
  2539  0047                     	ds	5
  2540  004C                     vfpfcnvrt@fp:	
  2541                           
  2542                           ; 1 bytes @ 0x7
  2543  004C                     	ds	1
  2544  004D                     ?_vfprintf:	
  2545  004D                     vfprintf@fmt:	
  2546                           ; 2 bytes @ 0x8
  2547                           
  2548                           
  2549                           ; 2 bytes @ 0x8
  2550  004D                     	ds	2
  2551  004F                     vfprintf@ap:	
  2552                           
  2553                           ; 1 bytes @ 0xA
  2554  004F                     	ds	1
  2555  0050                     ??_vfprintf:	
  2556                           
  2557                           ; 1 bytes @ 0xB
  2558  0050                     	ds	2
  2559  0052                     vfprintf@fp:	
  2560                           
  2561                           ; 1 bytes @ 0xD
  2562  0052                     	ds	1
  2563  0053                     vfprintf@cfmt:	
  2564                           
  2565                           ; 2 bytes @ 0xE
  2566  0053                     	ds	2
  2567  0055                     ?_printf:	
  2568  0055                     printf@fmt:	
  2569                           ; 2 bytes @ 0x10
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x10
  2573  0055                     	ds	2
  2574  0057                     ??_printf:	
  2575                           
  2576                           ; 1 bytes @ 0x12
  2577  0057                     	ds	3
  2578  005A                     printf@ap:	
  2579                           
  2580                           ; 1 bytes @ 0x15
  2581  005A                     	ds	1
  2582                           
  2583                           	psect	maintext
  2584  0223                     __pmaintext:	
  2585 ;;
  2586 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2587 ;;
  2588 ;; *************** function _main *****************
  2589 ;; Defined at:
  2590 ;;		line 49 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : B1F/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels required when called:   10
  2610 ;; This function calls:
  2611 ;;		_SYSTEM_Initialize
  2612 ;;		_printf
  2613 ;; This function is called by:
  2614 ;;		Startup code after reset
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _main
  2620  0223                     _main:	
  2621                           
  2622                           ;main.c: 52:     SYSTEM_Initialize();
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2626  0223  3182  2208  3182   	fcall	_SYSTEM_Initialize
  2627  0226                     l1545:	
  2628                           
  2629                           ;main.c: 70:     {;main.c: 74:         printf("Hello World");
  2630  0226  3017               	movlw	low (STR_1| (0+32768))
  2631  0227  0020               	movlb	0	; select bank0
  2632  0228  00D5               	movwf	printf@fmt
  2633  0229  3082               	movlw	high (STR_1| (0+32768))
  2634  022A  00D6               	movwf	printf@fmt+1
  2635  022B  3181  21F7  3182   	fcall	_printf
  2636  022E  2A26               	goto	l1545
  2637  022F                     __end_of_main:	
  2638                           
  2639                           	psect	text1
  2640  01F7                     __ptext1:	
  2641 ;; *************** function _printf *****************
  2642 ;; Defined at:
  2643 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  2646 ;;		 -> STR_1(12), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  ret             2    0        int 
  2649 ;;  ap              1   21[BANK0 ] PTR void [1]
  2650 ;;		 -> ?_printf(2), 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2   16[BANK0 ] int 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;Total ram usage:        6 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    9
  2667 ;; This function calls:
  2668 ;;		_vfprintf
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _printf
  2676  01F7                     _printf:	
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2680  01F7  3057               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2681  01F8  0020               	movlb	0	; select bank0
  2682  01F9  00D7               	movwf	??_printf
  2683  01FA  0857               	movf	??_printf,w
  2684  01FB  00DA               	movwf	printf@ap
  2685  01FC  0856               	movf	printf@fmt+1,w
  2686  01FD  00CE               	movwf	vfprintf@fmt+1
  2687  01FE  0855               	movf	printf@fmt,w
  2688  01FF  00CD               	movwf	vfprintf@fmt
  2689  0200  305A               	movlw	(low (printf@ap| 0))& (0+255)
  2690  0201  00D7               	movwf	??_printf
  2691  0202  0857               	movf	??_printf,w
  2692  0203  00CF               	movwf	vfprintf@ap
  2693  0204  3000               	movlw	0
  2694  0205  3181  217A         	fcall	_vfprintf
  2695  0207  0008               	return
  2696  0208                     __end_of_printf:	
  2697                           
  2698                           	psect	text2
  2699  017A                     __ptext2:	
  2700 ;; *************** function _vfprintf *****************
  2701 ;; Defined at:
  2702 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  fp              1    wreg     PTR struct _IO_FILE
  2705 ;;		 -> NULL(0), 
  2706 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2707 ;;		 -> STR_1(12), 
  2708 ;;  ap              1   10[BANK0 ] PTR PTR void 
  2709 ;;		 -> printf@ap(1), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  2712 ;;		 -> NULL(0), 
  2713 ;;  cfmt            2   14[BANK0 ] PTR unsigned char 
  2714 ;;		 -> STR_1(12), 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    8[BANK0 ] int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2724 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;Total ram usage:        8 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    8
  2731 ;; This function calls:
  2732 ;;		_vfpfcnvrt
  2733 ;; This function is called by:
  2734 ;;		_printf
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _vfprintf
  2740  017A                     _vfprintf:	
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2744                           ;vfprintf@fp stored from wreg
  2745  017A  0020               	movlb	0	; select bank0
  2746  017B  00D2               	movwf	vfprintf@fp
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2749  017C  084E               	movf	vfprintf@fmt+1,w
  2750  017D  00D4               	movwf	vfprintf@cfmt+1
  2751  017E  084D               	movf	vfprintf@fmt,w
  2752  017F  00D3               	movwf	vfprintf@cfmt
  2753                           
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2755  0180  01B8               	clrf	_nout
  2756  0181  01B9               	clrf	_nout+1
  2757  0182                     l1531:	
  2758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2759                           
  2760                           
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2762  0182  0853               	movf	vfprintf@cfmt,w
  2763  0183  0084               	movwf	4
  2764  0184  0854               	movf	vfprintf@cfmt+1,w
  2765  0185  0085               	movwf	5
  2766  0186  0012               	moviw fsr0++
  2767  0187  1903               	btfsc	3,2
  2768  0188  299B               	goto	l1533
  2769                           
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2771  0189  3053               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2772  018A  00D0               	movwf	??_vfprintf
  2773  018B  0850               	movf	??_vfprintf,w
  2774  018C  00C5               	movwf	vfpfcnvrt@fmt
  2775  018D  084F               	movf	vfprintf@ap,w
  2776  018E  00D1               	movwf	??_vfprintf+1
  2777  018F  0851               	movf	??_vfprintf+1,w
  2778  0190  00C6               	movwf	vfpfcnvrt@ap
  2779  0191  0852               	movf	vfprintf@fp,w
  2780  0192  3180  2037  3181   	fcall	_vfpfcnvrt
  2781  0195  0020               	movlb	0	; select bank0
  2782  0196  0845               	movf	?_vfpfcnvrt,w
  2783  0197  07B8               	addwf	_nout,f
  2784  0198  0846               	movf	?_vfpfcnvrt+1,w
  2785  0199  3DB9               	addwfc	_nout+1,f
  2786  019A  2982               	goto	l1531
  2787  019B                     l1533:	
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2790  019B  0839               	movf	_nout+1,w
  2791  019C  00CE               	movwf	?_vfprintf+1
  2792  019D  0838               	movf	_nout,w
  2793  019E  00CD               	movwf	?_vfprintf
  2794  019F  0008               	return
  2795  01A0                     __end_of_vfprintf:	
  2796                           
  2797                           	psect	text3
  2798  0037                     __ptext3:	
  2799 ;; *************** function _vfpfcnvrt *****************
  2800 ;; Defined at:
  2801 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  fp              1    wreg     PTR struct _IO_FILE
  2804 ;;		 -> NULL(0), 
  2805 ;;  fmt             1    0[BANK0 ] PTR PTR unsigned char 
  2806 ;;		 -> vfprintf@cfmt(2), 
  2807 ;;  ap              1    1[BANK0 ] PTR PTR void 
  2808 ;;		 -> printf@ap(1), 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  2811 ;;		 -> NULL(0), 
  2812 ;;  llu             8    0        unsigned long long 
  2813 ;;  ll              8    0        long long 
  2814 ;;  f               4    0        long long 
  2815 ;;  ct              3    0        unsigned char [3]
  2816 ;;  vp              2    0        PTR void 
  2817 ;;  i               2    0        int 
  2818 ;;  done            2    0        int 
  2819 ;;  cp              2    0        PTR unsigned char 
  2820 ;;  c               1    0        unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2    0[BANK0 ] int 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        8 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    7
  2837 ;; This function calls:
  2838 ;;		_fputc
  2839 ;; This function is called by:
  2840 ;;		_vfprintf
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _vfpfcnvrt
  2846  0037                     _vfpfcnvrt:	
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2850                           ;vfpfcnvrt@fp stored from wreg
  2851  0037  0020               	movlb	0	; select bank0
  2852  0038  00CC               	movwf	vfpfcnvrt@fp
  2853                           
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2855  0039  0845               	movf	vfpfcnvrt@fmt,w
  2856  003A  0086               	movwf	6
  2857  003B  0187               	clrf	7
  2858  003C  3F40               	moviw [0]fsr1
  2859  003D  00C7               	movwf	??_vfpfcnvrt
  2860  003E  3F41               	moviw [1]fsr1
  2861  003F  00C8               	movwf	??_vfpfcnvrt+1
  2862  0040  0847               	movf	??_vfpfcnvrt,w
  2863  0041  0084               	movwf	4
  2864  0042  0848               	movf	??_vfpfcnvrt+1,w
  2865  0043  0085               	movwf	5
  2866  0044  0012               	moviw fsr0++
  2867  0045  3A25               	xorlw	37
  2868  0046  1D03               	btfss	3,2
  2869  0047  288A               	goto	l1517
  2870                           
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2872  0048  0845               	movf	vfpfcnvrt@fmt,w
  2873  0049  0086               	movwf	6
  2874  004A  0187               	clrf	7
  2875  004B  3001               	movlw	1
  2876  004C  0781               	addwf	1,f
  2877  004D  3141               	addfsr 1,1
  2878  004E  1803               	skipnc
  2879  004F  0A81               	incf	1,f
  2880                           
  2881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2882  0050  01BA               	clrf	_width
  2883  0051  01BB               	clrf	_width+1
  2884  0052  01BE               	clrf	_flags
  2885  0053  01BF               	clrf	_flags+1
  2886                           
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2888  0054  30FF               	movlw	255
  2889  0055  00BC               	movwf	_prec
  2890  0056  30FF               	movlw	255
  2891  0057  00BD               	movwf	_prec+1
  2892                           
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2894  0058  0845               	movf	vfpfcnvrt@fmt,w
  2895  0059  0086               	movwf	6
  2896  005A  0187               	clrf	7
  2897  005B  3F40               	moviw [0]fsr1
  2898  005C  00C7               	movwf	??_vfpfcnvrt
  2899  005D  3F41               	moviw [1]fsr1
  2900  005E  00C8               	movwf	??_vfpfcnvrt+1
  2901  005F  0847               	movf	??_vfpfcnvrt,w
  2902  0060  0084               	movwf	4
  2903  0061  0848               	movf	??_vfpfcnvrt+1,w
  2904  0062  0085               	movwf	5
  2905  0063  0012               	moviw fsr0++
  2906  0064  3A25               	xorlw	37
  2907  0065  1D03               	btfss	3,2
  2908  0066  287F               	goto	l1511
  2909                           
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2911  0067  0845               	movf	vfpfcnvrt@fmt,w
  2912  0068  0086               	movwf	6
  2913  0069  0187               	clrf	7
  2914  006A  3001               	movlw	1
  2915  006B  0781               	addwf	1,f
  2916  006C  3141               	addfsr 1,1
  2917  006D  1803               	skipnc
  2918  006E  0A81               	incf	1,f
  2919                           
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2921  006F  3025               	movlw	37
  2922  0070  00F4               	movwf	fputc@c
  2923  0071  3000               	movlw	0
  2924  0072  00F5               	movwf	fputc@c+1
  2925  0073  084C               	movf	vfpfcnvrt@fp,w
  2926  0074  00C7               	movwf	??_vfpfcnvrt
  2927  0075  0847               	movf	??_vfpfcnvrt,w
  2928  0076  00F6               	movwf	fputc@fp
  2929  0077  3180  20EB         	fcall	_fputc
  2930  0079                     l1507:	
  2931                           
  2932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2933  0079  3001               	movlw	1
  2934  007A  0020               	movlb	0	; select bank0
  2935  007B  00C5               	movwf	?_vfpfcnvrt
  2936  007C  3000               	movlw	0
  2937  007D  00C6               	movwf	?_vfpfcnvrt+1
  2938  007E  0008               	return
  2939  007F                     l1511:	
  2940                           
  2941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2942  007F  0845               	movf	vfpfcnvrt@fmt,w
  2943  0080  0086               	movwf	6
  2944  0081  0187               	clrf	7
  2945  0082  3001               	movlw	1
  2946  0083  0781               	addwf	1,f
  2947  0084  3141               	addfsr 1,1
  2948  0085  1803               	skipnc
  2949  0086  0A81               	incf	1,f
  2950                           
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2952  0087  01C5               	clrf	?_vfpfcnvrt
  2953  0088  01C6               	clrf	?_vfpfcnvrt+1
  2954  0089  0008               	return
  2955  008A                     l1517:	
  2956                           
  2957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2958  008A  0845               	movf	vfpfcnvrt@fmt,w
  2959  008B  0086               	movwf	6
  2960  008C  0187               	clrf	7
  2961  008D  3F40               	moviw [0]fsr1
  2962  008E  00C7               	movwf	??_vfpfcnvrt
  2963  008F  3F41               	moviw [1]fsr1
  2964  0090  00C8               	movwf	??_vfpfcnvrt+1
  2965  0091  0847               	movf	??_vfpfcnvrt,w
  2966  0092  0084               	movwf	4
  2967  0093  0848               	movf	??_vfpfcnvrt+1,w
  2968  0094  0085               	movwf	5
  2969  0095  0800               	movf	0,w	;code access
  2970  0096  00C9               	movwf	??_vfpfcnvrt+2
  2971  0097  01CA               	clrf	??_vfpfcnvrt+3
  2972  0098  0849               	movf	??_vfpfcnvrt+2,w
  2973  0099  00F4               	movwf	fputc@c
  2974  009A  084A               	movf	??_vfpfcnvrt+3,w
  2975  009B  00F5               	movwf	fputc@c+1
  2976  009C  084C               	movf	vfpfcnvrt@fp,w
  2977  009D  00CB               	movwf	??_vfpfcnvrt+4
  2978  009E  084B               	movf	??_vfpfcnvrt+4,w
  2979  009F  00F6               	movwf	fputc@fp
  2980  00A0  3180  20EB  3180   	fcall	_fputc
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2983  00A3  0020               	movlb	0	; select bank0
  2984  00A4  0845               	movf	vfpfcnvrt@fmt,w
  2985  00A5  0086               	movwf	6
  2986  00A6  0187               	clrf	7
  2987  00A7  3001               	movlw	1
  2988  00A8  0781               	addwf	1,f
  2989  00A9  3141               	addfsr 1,1
  2990  00AA  1803               	skipnc
  2991  00AB  0A81               	incf	1,f
  2992  00AC  2879               	goto	l1507
  2993  00AD                     __end_of_vfpfcnvrt:	
  2994                           
  2995                           	psect	text4
  2996  00EB                     __ptext4:	
  2997 ;; *************** function _fputc *****************
  2998 ;; Defined at:
  2999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  c               2    4[COMMON] int 
  3002 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  3003 ;;		 -> NULL(0), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2    4[COMMON] int 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3015 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;Total ram usage:        8 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    6
  3022 ;; This function calls:
  3023 ;;		_putch
  3024 ;; This function is called by:
  3025 ;;		_vfpfcnvrt
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _fputc
  3031  00EB                     _fputc:	
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3035  00EB  0876               	movf	fputc@fp,w
  3036  00EC  1D03               	btfss	3,2
  3037  00ED  0876               	movf	fputc@fp,w
  3038  00EE  1D03               	btfss	3,2
  3039  00EF  28F4               	goto	l1485
  3040  00F0  0874               	movf	fputc@c,w
  3041  00F1  3182  2264         	fcall	_putch
  3042  00F3  0008               	return
  3043  00F4                     l1485:	
  3044  00F4  0876               	movf	fputc@fp,w
  3045  00F5  3E03               	addlw	3
  3046  00F6  0086               	movwf	6
  3047  00F7  0187               	clrf	7
  3048  00F8  0016               	moviw fsr1++
  3049  00F9  0401               	iorwf	1,w
  3050  00FA  1903               	btfsc	3,2
  3051  00FB  2917               	goto	l1489
  3052  00FC  0876               	movf	fputc@fp,w
  3053  00FD  3E03               	addlw	3
  3054  00FE  0086               	movwf	6
  3055  00FF  0187               	clrf	7
  3056  0100  3F40               	moviw [0]fsr1
  3057  0101  00F7               	movwf	??_fputc
  3058  0102  3F41               	moviw [1]fsr1
  3059  0103  00F8               	movwf	??_fputc+1
  3060  0104  0A76               	incf	fputc@fp,w
  3061  0105  0086               	movwf	6
  3062  0106  0187               	clrf	7
  3063  0107  3F40               	moviw [0]fsr1
  3064  0108  00F9               	movwf	??_fputc+2
  3065  0109  3F41               	moviw [1]fsr1
  3066  010A  00FA               	movwf	??_fputc+3
  3067  010B  087A               	movf	??_fputc+3,w
  3068  010C  3A80               	xorlw	128
  3069  010D  00FB               	movwf	??_fputc+4
  3070  010E  0878               	movf	??_fputc+1,w
  3071  010F  3A80               	xorlw	128
  3072  0110  027B               	subwf	??_fputc+4,w
  3073  0111  1D03               	skipz
  3074  0112  2915               	goto	u535
  3075  0113  0877               	movf	??_fputc,w
  3076  0114  0279               	subwf	??_fputc+2,w
  3077  0115                     u535:	
  3078  0115  1803               	skipnc
  3079  0116  0008               	return
  3080  0117                     l1489:	
  3081  0117  0A76               	incf	fputc@fp,w
  3082  0118  0086               	movwf	6
  3083  0119  0187               	clrf	7
  3084  011A  3001               	movlw	1
  3085  011B  0781               	addwf	1,f
  3086  011C  3141               	addfsr 1,1
  3087  011D  1803               	skipnc
  3088  011E  0A81               	incf	1,f
  3089  011F  0008               	return
  3090  0120                     __end_of_fputc:	
  3091                           
  3092                           	psect	text5
  3093  0264                     __ptext5:	
  3094 ;; *************** function _putch *****************
  3095 ;; Defined at:
  3096 ;;		line 198 in file "mcc_generated_files/eusart.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  txData          1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  txData          1    3[COMMON] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;Total ram usage:        1 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    5
  3117 ;; This function calls:
  3118 ;;		_EUSART_Write
  3119 ;; This function is called by:
  3120 ;;		_fputc
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _putch
  3126  0264                     _putch:	
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3130                           ;putch@txData stored from wreg
  3131  0264  00F3               	movwf	putch@txData
  3132                           
  3133                           ;mcc_generated_files/eusart.c: 198: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 199: {;mcc_generated_files/eusart.c: 200:     EUSART_Write(txData);
  3134  0265  0873               	movf	putch@txData,w
  3135  0266  3181  21A0         	fcall	_EUSART_Write
  3136  0268  0008               	return
  3137  0269                     __end_of_putch:	
  3138                           
  3139                           	psect	text6
  3140  01A0                     __ptext6:	
  3141 ;; *************** function _EUSART_Write *****************
  3142 ;; Defined at:
  3143 ;;		line 170 in file "mcc_generated_files/eusart.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  txData          1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  txData          1    2[COMMON] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;Total ram usage:        2 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    4
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_putch
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _EUSART_Write
  3173  01A0                     _EUSART_Write:	
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3177                           ;EUSART_Write@txData stored from wreg
  3178  01A0  00F2               	movwf	EUSART_Write@txData
  3179  01A1                     l1461:	
  3180                           ;mcc_generated_files/eusart.c: 170: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 171: {;mcc_generated_files/eusart.c: 172:     while(0 == eusartTxBufferRemai
      +                          ning)
  3181                           
  3182                           
  3183                           ;mcc_generated_files/eusart.c: 172:     while(0 == eusartTxBufferRemaining)
  3184  01A1  0020               	movlb	0	; select bank0
  3185  01A2  0865               	movf	_eusartTxBufferRemaining,w	;volatile
  3186  01A3  1903               	btfsc	3,2
  3187  01A4  29A1               	goto	l1461
  3188                           
  3189                           ;mcc_generated_files/eusart.c: 176:     if(0 == PIE1bits.TXIE)
  3190  01A5  0021               	movlb	1	; select bank1
  3191  01A6  1A11               	btfsc	17,4	;volatile
  3192  01A7  29AC               	goto	l116
  3193                           
  3194                           ;mcc_generated_files/eusart.c: 177:     {;mcc_generated_files/eusart.c: 178:         TX1
      +                          REG = txData;
  3195  01A8  0872               	movf	EUSART_Write@txData,w
  3196  01A9  0023               	movlb	3	; select bank3
  3197  01AA  009A               	movwf	26	;volatile
  3198                           
  3199                           ;mcc_generated_files/eusart.c: 179:     }
  3200  01AB  29C0               	goto	l1475
  3201  01AC                     l116:	
  3202                           ;mcc_generated_files/eusart.c: 180:     else
  3203                           
  3204                           
  3205                           ;mcc_generated_files/eusart.c: 181:     {;mcc_generated_files/eusart.c: 182:         PIE
      +                          1bits.TXIE = 0;
  3206  01AC  1211               	bcf	17,4	;volatile
  3207                           
  3208                           ;mcc_generated_files/eusart.c: 183:         eusartTxBuffer[eusartTxHead++] = txData;
  3209  01AD  0872               	movf	EUSART_Write@txData,w
  3210  01AE  00F1               	movwf	??_EUSART_Write
  3211  01AF  0020               	movlb	0	; select bank0
  3212  01B0  0844               	movf	_eusartTxHead,w
  3213  01B1  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3214  01B2  0086               	movwf	6
  3215  01B3  0187               	clrf	7
  3216  01B4  0871               	movf	??_EUSART_Write,w
  3217  01B5  0081               	movwf	1
  3218  01B6  3001               	movlw	1
  3219  01B7  00F1               	movwf	??_EUSART_Write
  3220  01B8  0871               	movf	??_EUSART_Write,w
  3221  01B9  07C4               	addwf	_eusartTxHead,f	;volatile
  3222                           
  3223                           ;mcc_generated_files/eusart.c: 184:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3224  01BA  3008               	movlw	8
  3225  01BB  0244               	subwf	_eusartTxHead,w	;volatile
  3226  01BC  1803               	btfsc	3,0
  3227                           
  3228                           ;mcc_generated_files/eusart.c: 185:         {;mcc_generated_files/eusart.c: 186:        
      +                               eusartTxHead = 0;
  3229  01BD  01C4               	clrf	_eusartTxHead	;volatile
  3230                           
  3231                           ;mcc_generated_files/eusart.c: 188:         eusartTxBufferRemaining--;
  3232  01BE  3001               	movlw	1
  3233  01BF  02E5               	subwf	_eusartTxBufferRemaining,f	;volatile
  3234  01C0                     l1475:	
  3235                           
  3236                           ;mcc_generated_files/eusart.c: 190:     PIE1bits.TXIE = 1;
  3237  01C0  0021               	movlb	1	; select bank1
  3238  01C1  1611               	bsf	17,4	;volatile
  3239  01C2  0008               	return
  3240  01C3                     __end_of_EUSART_Write:	
  3241                           
  3242                           	psect	text7
  3243  0208                     __ptext7:	
  3244 ;; *************** function _SYSTEM_Initialize *****************
  3245 ;; Defined at:
  3246 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    6
  3267 ;; This function calls:
  3268 ;;		_EUSART_Initialize
  3269 ;;		_OSCILLATOR_Initialize
  3270 ;;		_PIN_MANAGER_Initialize
  3271 ;;		_PMD_Initialize
  3272 ;;		_WDT_Initialize
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _SYSTEM_Initialize
  3280  0208                     _SYSTEM_Initialize:	
  3281                           
  3282                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3286  0208  3182  2238  3182   	fcall	_PMD_Initialize
  3287                           
  3288                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3289  020B  3181  2152  3182   	fcall	_PIN_MANAGER_Initialize
  3290                           
  3291                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3292  020E  3182  222F  3182   	fcall	_OSCILLATOR_Initialize
  3293                           
  3294                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3295  0211  3182  2269  3182   	fcall	_WDT_Initialize
  3296                           
  3297                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3298  0214  3180  20AD         	fcall	_EUSART_Initialize
  3299  0216  0008               	return
  3300  0217                     __end_of_SYSTEM_Initialize:	
  3301                           
  3302                           	psect	text8
  3303  0269                     __ptext8:	
  3304 ;; *************** function _WDT_Initialize *****************
  3305 ;; Defined at:
  3306 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    4
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_SYSTEM_Initialize
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _WDT_Initialize
  3336  0269                     _WDT_Initialize:	
  3337                           
  3338                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _WDT_Initialize: [wreg]
  3342  0269  3016               	movlw	22
  3343  026A  0021               	movlb	1	; select bank1
  3344  026B  0097               	movwf	23	;volatile
  3345  026C  0008               	return
  3346  026D                     __end_of_WDT_Initialize:	
  3347                           
  3348                           	psect	text9
  3349  0238                     __ptext9:	
  3350 ;; *************** function _PMD_Initialize *****************
  3351 ;; Defined at:
  3352 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		status,2
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    4
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_SYSTEM_Initialize
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _PMD_Initialize
  3382  0238                     _PMD_Initialize:	
  3383                           
  3384                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _PMD_Initialize: [status,2]
  3388  0238  0032               	movlb	18	; select bank18
  3389  0239  0191               	clrf	17	;volatile
  3390                           
  3391                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  3392  023A  0192               	clrf	18	;volatile
  3393                           
  3394                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  3395  023B  0193               	clrf	19	;volatile
  3396                           
  3397                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  3398  023C  0194               	clrf	20	;volatile
  3399                           
  3400                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  3401  023D  0195               	clrf	21	;volatile
  3402                           
  3403                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  3404  023E  0196               	clrf	22	;volatile
  3405  023F  0008               	return
  3406  0240                     __end_of_PMD_Initialize:	
  3407                           
  3408                           	psect	text10
  3409  0152                     __ptext10:	
  3410 ;; *************** function _PIN_MANAGER_Initialize *****************
  3411 ;; Defined at:
  3412 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_SYSTEM_Initialize
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _PIN_MANAGER_Initialize
  3442  0152                     _PIN_MANAGER_Initialize:	
  3443                           
  3444                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3448  0152  0022               	movlb	2	; select bank2
  3449  0153  018C               	clrf	12	;volatile
  3450                           
  3451                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3452  0154  018D               	clrf	13	;volatile
  3453                           
  3454                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3455  0155  018E               	clrf	14	;volatile
  3456                           
  3457                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x17;
  3458  0156  3017               	movlw	23
  3459  0157  0021               	movlb	1	; select bank1
  3460  0158  008C               	movwf	12	;volatile
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3463  0159  30F0               	movlw	240
  3464  015A  008D               	movwf	13	;volatile
  3465                           
  3466                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  3467  015B  30FF               	movlw	255
  3468  015C  008E               	movwf	14	;volatile
  3469                           
  3470                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  3471  015D  30FF               	movlw	255
  3472  015E  0023               	movlb	3	; select bank3
  3473  015F  008E               	movwf	14	;volatile
  3474                           
  3475                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  3476  0160  30F0               	movlw	240
  3477  0161  008D               	movwf	13	;volatile
  3478                           
  3479                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x27;
  3480  0162  3027               	movlw	39
  3481  0163  008C               	movwf	12	;volatile
  3482                           
  3483                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3484  0164  0024               	movlb	4	; select bank4
  3485  0165  018D               	clrf	13	;volatile
  3486                           
  3487                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3488  0166  018C               	clrf	12	;volatile
  3489                           
  3490                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3491  0167  018E               	clrf	14	;volatile
  3492                           
  3493                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3494  0168  0025               	movlb	5	; select bank5
  3495  0169  018C               	clrf	12	;volatile
  3496                           
  3497                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3498  016A  018D               	clrf	13	;volatile
  3499                           
  3500                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3501  016B  018E               	clrf	14	;volatile
  3502                           
  3503                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  3504  016C  3037               	movlw	55
  3505  016D  0026               	movlb	6	; select bank6
  3506  016E  008C               	movwf	12	;volatile
  3507                           
  3508                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  3509  016F  30F0               	movlw	240
  3510  0170  008D               	movwf	13	;volatile
  3511                           
  3512                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  3513  0171  30FF               	movlw	255
  3514  0172  008E               	movwf	14	;volatile
  3515                           
  3516                           ;mcc_generated_files/pin_manager.c: 106:     RXPPS = 0x04;
  3517  0173  3004               	movlw	4
  3518  0174  003C               	movlb	28	; select bank28
  3519  0175  00A4               	movwf	36	;volatile
  3520                           
  3521                           ;mcc_generated_files/pin_manager.c: 107:     RA5PPS = 0x14;
  3522  0176  3014               	movlw	20
  3523  0177  003D               	movlb	29	; select bank29
  3524  0178  0095               	movwf	21	;volatile
  3525  0179  0008               	return
  3526  017A                     __end_of_PIN_MANAGER_Initialize:	
  3527                           
  3528                           	psect	text11
  3529  022F                     __ptext11:	
  3530 ;; *************** function _OSCILLATOR_Initialize *****************
  3531 ;; Defined at:
  3532 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_SYSTEM_Initialize
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           
  3561                           ;psect for function _OSCILLATOR_Initialize
  3562  022F                     _OSCILLATOR_Initialize:	
  3563                           
  3564                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3568  022F  3062               	movlw	98
  3569  0230  0032               	movlb	18	; select bank18
  3570  0231  0099               	movwf	25	;volatile
  3571                           
  3572                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  3573  0232  019B               	clrf	27	;volatile
  3574                           
  3575                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  3576  0233  019D               	clrf	29	;volatile
  3577                           
  3578                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  3579  0234  3003               	movlw	3
  3580  0235  009F               	movwf	31	;volatile
  3581                           
  3582                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3583  0236  019E               	clrf	30	;volatile
  3584  0237  0008               	return
  3585  0238                     __end_of_OSCILLATOR_Initialize:	
  3586                           
  3587                           	psect	text12
  3588  00AD                     __ptext12:	
  3589 ;; *************** function _EUSART_Initialize *****************
  3590 ;; Defined at:
  3591 ;;		line 85 in file "mcc_generated_files/eusart.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        1 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    5
  3612 ;; This function calls:
  3613 ;;		_EUSART_SetErrorHandler
  3614 ;;		_EUSART_SetFramingErrorHandler
  3615 ;;		_EUSART_SetOverrunErrorHandler
  3616 ;;		_EUSART_SetRxInterruptHandler
  3617 ;;		_EUSART_SetTxInterruptHandler
  3618 ;; This function is called by:
  3619 ;;		_SYSTEM_Initialize
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _EUSART_Initialize
  3625  00AD                     _EUSART_Initialize:	
  3626                           
  3627                           ;mcc_generated_files/eusart.c: 88:     PIE1bits.RCIE = 0;
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3631  00AD  0021               	movlb	1	; select bank1
  3632  00AE  1291               	bcf	17,5	;volatile
  3633                           
  3634                           ;mcc_generated_files/eusart.c: 89:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3635  00AF  3020               	movlw	low _EUSART_Receive_ISR
  3636  00B0  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3637  00B1  3001               	movlw	high _EUSART_Receive_ISR
  3638  00B2  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3639  00B3  3182  224C  3180   	fcall	_EUSART_SetRxInterruptHandler
  3640                           
  3641                           ;mcc_generated_files/eusart.c: 90:     PIE1bits.TXIE = 0;
  3642  00B6  0021               	movlb	1	; select bank1
  3643  00B7  1211               	bcf	17,4	;volatile
  3644                           
  3645                           ;mcc_generated_files/eusart.c: 91:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3646  00B8  30C3               	movlw	low _EUSART_Transmit_ISR
  3647  00B9  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3648  00BA  3001               	movlw	high _EUSART_Transmit_ISR
  3649  00BB  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3650  00BC  3182  2246  3180   	fcall	_EUSART_SetTxInterruptHandler
  3651                           
  3652                           ;mcc_generated_files/eusart.c: 95:     BAUD1CON = 0x0A;
  3653  00BF  300A               	movlw	10
  3654  00C0  0023               	movlb	3	; select bank3
  3655  00C1  009F               	movwf	31	;volatile
  3656                           
  3657                           ;mcc_generated_files/eusart.c: 98:     RC1STA = 0x90;
  3658  00C2  3090               	movlw	144
  3659  00C3  009D               	movwf	29	;volatile
  3660                           
  3661                           ;mcc_generated_files/eusart.c: 101:     TX1STA = 0x24;
  3662  00C4  3024               	movlw	36
  3663  00C5  009E               	movwf	30	;volatile
  3664                           
  3665                           ;mcc_generated_files/eusart.c: 104:     SP1BRGL = 0x19;
  3666  00C6  3019               	movlw	25
  3667  00C7  009B               	movwf	27	;volatile
  3668                           
  3669                           ;mcc_generated_files/eusart.c: 107:     SP1BRGH = 0x00;
  3670  00C8  019C               	clrf	28	;volatile
  3671                           
  3672                           ;mcc_generated_files/eusart.c: 110:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3673  00C9  3074               	movlw	low _EUSART_DefaultFramingErrorHandler
  3674  00CA  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3675  00CB  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  3676  00CC  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3677  00CD  3182  2258  3180   	fcall	_EUSART_SetFramingErrorHandler
  3678                           
  3679                           ;mcc_generated_files/eusart.c: 111:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3680  00D0  306D               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3681  00D1  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3682  00D2  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3683  00D3  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3684  00D4  3182  2252  3180   	fcall	_EUSART_SetOverrunErrorHandler
  3685                           
  3686                           ;mcc_generated_files/eusart.c: 112:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3687  00D7  3071               	movlw	low _EUSART_DefaultErrorHandler
  3688  00D8  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  3689  00D9  3002               	movlw	high _EUSART_DefaultErrorHandler
  3690  00DA  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3691  00DB  3182  225E         	fcall	_EUSART_SetErrorHandler
  3692                           
  3693                           ;mcc_generated_files/eusart.c: 114:     eusartRxLastError.status = 0;
  3694  00DD  0020               	movlb	0	; select bank0
  3695  00DE  01C0               	clrf	_eusartRxLastError	;volatile
  3696                           
  3697                           ;mcc_generated_files/eusart.c: 117:     eusartTxHead = 0;
  3698  00DF  01C4               	clrf	_eusartTxHead	;volatile
  3699                           
  3700                           ;mcc_generated_files/eusart.c: 118:     eusartTxTail = 0;
  3701  00E0  01C3               	clrf	_eusartTxTail	;volatile
  3702                           
  3703                           ;mcc_generated_files/eusart.c: 119:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3704  00E1  3008               	movlw	8
  3705  00E2  00F3               	movwf	??_EUSART_Initialize
  3706  00E3  0873               	movf	??_EUSART_Initialize,w
  3707  00E4  00E5               	movwf	_eusartTxBufferRemaining	;volatile
  3708                           
  3709                           ;mcc_generated_files/eusart.c: 121:     eusartRxHead = 0;
  3710  00E5  01FC               	clrf	_eusartRxHead	;volatile
  3711                           
  3712                           ;mcc_generated_files/eusart.c: 122:     eusartRxTail = 0;
  3713  00E6  01C2               	clrf	_eusartRxTail	;volatile
  3714                           
  3715                           ;mcc_generated_files/eusart.c: 123:     eusartRxCount = 0;
  3716  00E7  01C1               	clrf	_eusartRxCount	;volatile
  3717                           
  3718                           ;mcc_generated_files/eusart.c: 126:     PIE1bits.RCIE = 1;
  3719  00E8  0021               	movlb	1	; select bank1
  3720  00E9  1691               	bsf	17,5	;volatile
  3721  00EA  0008               	return
  3722  00EB                     __end_of_EUSART_Initialize:	
  3723                           
  3724                           	psect	text13
  3725  0246                     __ptext13:	
  3726 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3727 ;; Defined at:
  3728 ;;		line 282 in file "mcc_generated_files/eusart.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3731 ;;		 -> EUSART_Transmit_ISR(1), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    4
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_EUSART_Initialize
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _EUSART_SetTxInterruptHandler
  3759  0246                     _EUSART_SetTxInterruptHandler:	
  3760                           
  3761                           ;mcc_generated_files/eusart.c: 283:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3765  0246  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3766  0247  0020               	movlb	0	; select bank0
  3767  0248  00E4               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3768  0249  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3769  024A  00E3               	movwf	_EUSART_TxDefaultInterruptHandler
  3770  024B  0008               	return
  3771  024C                     __end_of_EUSART_SetTxInterruptHandler:	
  3772                           
  3773                           	psect	text14
  3774  024C                     __ptext14:	
  3775 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3776 ;; Defined at:
  3777 ;;		line 286 in file "mcc_generated_files/eusart.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3780 ;;		 -> EUSART_Receive_ISR(1), 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;Total ram usage:        2 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    4
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_EUSART_Initialize
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _EUSART_SetRxInterruptHandler
  3808  024C                     _EUSART_SetRxInterruptHandler:	
  3809                           
  3810                           ;mcc_generated_files/eusart.c: 287:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3814  024C  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3815  024D  0020               	movlb	0	; select bank0
  3816  024E  00E2               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3817  024F  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3818  0250  00E1               	movwf	_EUSART_RxDefaultInterruptHandler
  3819  0251  0008               	return
  3820  0252                     __end_of_EUSART_SetRxInterruptHandler:	
  3821                           
  3822                           	psect	text15
  3823  0252                     __ptext15:	
  3824 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3825 ;; Defined at:
  3826 ;;		line 274 in file "mcc_generated_files/eusart.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3829 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;Total ram usage:        2 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    4
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_EUSART_Initialize
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function _EUSART_SetOverrunErrorHandler
  3857  0252                     _EUSART_SetOverrunErrorHandler:	
  3858                           
  3859                           ;mcc_generated_files/eusart.c: 275:     EUSART_OverrunErrorHandler = interruptHandler;
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3863  0252  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3864  0253  0020               	movlb	0	; select bank0
  3865  0254  00DE               	movwf	_EUSART_OverrunErrorHandler+1
  3866  0255  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3867  0256  00DD               	movwf	_EUSART_OverrunErrorHandler
  3868  0257  0008               	return
  3869  0258                     __end_of_EUSART_SetOverrunErrorHandler:	
  3870                           
  3871                           	psect	text16
  3872  0258                     __ptext16:	
  3873 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3874 ;; Defined at:
  3875 ;;		line 270 in file "mcc_generated_files/eusart.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3878 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_EUSART_Initialize
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _EUSART_SetFramingErrorHandler
  3906  0258                     _EUSART_SetFramingErrorHandler:	
  3907                           
  3908                           ;mcc_generated_files/eusart.c: 271:     EUSART_FramingErrorHandler = interruptHandler;
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3912  0258  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3913  0259  0020               	movlb	0	; select bank0
  3914  025A  00E0               	movwf	_EUSART_FramingErrorHandler+1
  3915  025B  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3916  025C  00DF               	movwf	_EUSART_FramingErrorHandler
  3917  025D  0008               	return
  3918  025E                     __end_of_EUSART_SetFramingErrorHandler:	
  3919                           
  3920                           	psect	text17
  3921  025E                     __ptext17:	
  3922 ;; *************** function _EUSART_SetErrorHandler *****************
  3923 ;; Defined at:
  3924 ;;		line 278 in file "mcc_generated_files/eusart.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3927 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    4
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_EUSART_Initialize
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _EUSART_SetErrorHandler
  3955  025E                     _EUSART_SetErrorHandler:	
  3956                           
  3957                           ;mcc_generated_files/eusart.c: 279:     EUSART_ErrorHandler = interruptHandler;
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3961  025E  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3962  025F  0020               	movlb	0	; select bank0
  3963  0260  00DC               	movwf	_EUSART_ErrorHandler+1
  3964  0261  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3965  0262  00DB               	movwf	_EUSART_ErrorHandler
  3966  0263  0008               	return
  3967  0264                     __end_of_EUSART_SetErrorHandler:	
  3968                           
  3969                           	psect	intentry
  3970  0004                     __pintentry:	
  3971 ;; *************** function _INTERRUPT_InterruptManager *****************
  3972 ;; Defined at:
  3973 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    3
  3994 ;; This function calls:
  3995 ;;		Absolute function
  3996 ;;		_EUSART_Receive_ISR
  3997 ;;		_EUSART_Transmit_ISR
  3998 ;; This function is called by:
  3999 ;;		Interrupt level 1
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003  0004                     _INTERRUPT_InterruptManager:	
  4004                           
  4005                           ;incstack = 0
  4006  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4007                           
  4008                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4009  0005  3180               	pagesel	$
  4010                           
  4011                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4012  0006  1F0B               	btfss	11,6	;volatile
  4013  0007  281F               	goto	i1l187
  4014                           
  4015                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4016  0008  0021               	movlb	1	; select bank1
  4017  0009  1E11               	btfss	17,4	;volatile
  4018  000A  2814               	goto	i1l182
  4019  000B  0020               	movlb	0	; select bank0
  4020  000C  1E11               	btfss	17,4	;volatile
  4021  000D  2814               	goto	i1l182
  4022                           
  4023                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4024  000E  0864               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4025  000F  008A               	movwf	10
  4026  0010  0863               	movf	_EUSART_TxDefaultInterruptHandler,w
  4027  0011  000A               	callw
  4028  0012  3180               	pagesel	$
  4029                           
  4030                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4031  0013  281F               	goto	i1l187
  4032  0014                     i1l182:	
  4033                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4034                           
  4035  0014  0021               	movlb	1	; select bank1
  4036  0015  1E91               	btfss	17,5	;volatile
  4037  0016  281F               	goto	i1l187
  4038  0017  0020               	movlb	0	; select bank0
  4039  0018  1E91               	btfss	17,5	;volatile
  4040  0019  281F               	goto	i1l187
  4041                           
  4042                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4043  001A  0862               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4044  001B  008A               	movwf	10
  4045  001C  0861               	movf	_EUSART_RxDefaultInterruptHandler,w
  4046  001D  000A               	callw
  4047  001E  3180               	pagesel	$
  4048  001F                     i1l187:	
  4049                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  4050                           
  4051                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4052                           
  4053  001F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4054  0020  0009               	retfie
  4055  0021                     __end_of_INTERRUPT_InterruptManager:	
  4056                           
  4057                           	psect	text19
  4058  01C3                     __ptext19:	
  4059 ;; *************** function _EUSART_Transmit_ISR *****************
  4060 ;; Defined at:
  4061 ;;		line 203 in file "mcc_generated_files/eusart.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;Total ram usage:        1 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_EUSART_Initialize
  4085 ;;		_INTERRUPT_InterruptManager
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _EUSART_Transmit_ISR
  4091  01C3                     _EUSART_Transmit_ISR:	
  4092                           
  4093                           ;mcc_generated_files/eusart.c: 207:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4097  01C3  3008               	movlw	8
  4098  01C4  0020               	movlb	0	; select bank0
  4099  01C5  0265               	subwf	_eusartTxBufferRemaining,w	;volatile
  4100  01C6  1803               	skipnc
  4101  01C7  29DD               	goto	i1l128
  4102                           
  4103                           ;mcc_generated_files/eusart.c: 208:     {;mcc_generated_files/eusart.c: 209:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  4104  01C8  0843               	movf	_eusartTxTail,w
  4105  01C9  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4106  01CA  0086               	movwf	6
  4107  01CB  0187               	clrf	7
  4108  01CC  0801               	movf	1,w
  4109  01CD  0023               	movlb	3	; select bank3
  4110  01CE  009A               	movwf	26	;volatile
  4111  01CF  3001               	movlw	1
  4112  01D0  00F0               	movwf	??_EUSART_Transmit_ISR
  4113  01D1  0870               	movf	??_EUSART_Transmit_ISR,w
  4114  01D2  0020               	movlb	0	; select bank0
  4115  01D3  07C3               	addwf	_eusartTxTail,f	;volatile
  4116                           
  4117                           ;mcc_generated_files/eusart.c: 210:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4118  01D4  3008               	movlw	8
  4119  01D5  0243               	subwf	_eusartTxTail,w	;volatile
  4120  01D6  1803               	btfsc	3,0
  4121                           
  4122                           ;mcc_generated_files/eusart.c: 211:         {;mcc_generated_files/eusart.c: 212:        
      +                               eusartTxTail = 0;
  4123  01D7  01C3               	clrf	_eusartTxTail	;volatile
  4124                           
  4125                           ;mcc_generated_files/eusart.c: 214:         eusartTxBufferRemaining++;
  4126  01D8  3001               	movlw	1
  4127  01D9  00F0               	movwf	??_EUSART_Transmit_ISR
  4128  01DA  0870               	movf	??_EUSART_Transmit_ISR,w
  4129  01DB  07E5               	addwf	_eusartTxBufferRemaining,f	;volatile
  4130                           
  4131                           ;mcc_generated_files/eusart.c: 215:     }
  4132  01DC  0008               	return
  4133  01DD                     i1l128:	
  4134                           ;mcc_generated_files/eusart.c: 216:     else
  4135                           
  4136                           
  4137                           ;mcc_generated_files/eusart.c: 217:     {;mcc_generated_files/eusart.c: 218:         PIE
      +                          1bits.TXIE = 0;
  4138  01DD  0021               	movlb	1	; select bank1
  4139  01DE  1211               	bcf	17,4	;volatile
  4140  01DF  0008               	return
  4141  01E0                     __end_of_EUSART_Transmit_ISR:	
  4142                           
  4143                           	psect	text20
  4144  0120                     __ptext20:	
  4145 ;; *************** function _EUSART_Receive_ISR *****************
  4146 ;; Defined at:
  4147 ;;		line 222 in file "mcc_generated_files/eusart.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    2
  4168 ;; This function calls:
  4169 ;;		Absolute function
  4170 ;;		_EUSART_DefaultErrorHandler
  4171 ;;		_EUSART_DefaultFramingErrorHandler
  4172 ;;		_EUSART_DefaultOverrunErrorHandler
  4173 ;;		_EUSART_RxDataHandler
  4174 ;; This function is called by:
  4175 ;;		_EUSART_Initialize
  4176 ;;		_INTERRUPT_InterruptManager
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _EUSART_Receive_ISR
  4182  0120                     _EUSART_Receive_ISR:	
  4183                           
  4184                           ;mcc_generated_files/eusart.c: 225:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4188  0120  087C               	movf	_eusartRxHead,w	;volatile
  4189  0121  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4190  0122  0086               	movwf	6
  4191  0123  0187               	clrf	7
  4192  0124  0181               	clrf	1
  4193                           
  4194                           ;mcc_generated_files/eusart.c: 227:     if(RC1STAbits.FERR){
  4195  0125  0023               	movlb	3	; select bank3
  4196  0126  1D1D               	btfss	29,2	;volatile
  4197  0127  2933               	goto	i1l1427
  4198                           
  4199                           ;mcc_generated_files/eusart.c: 228:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4200  0128  087C               	movf	_eusartRxHead,w	;volatile
  4201  0129  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4202  012A  0086               	movwf	6
  4203  012B  0187               	clrf	7
  4204  012C  1481               	bsf	1,1
  4205                           
  4206                           ;mcc_generated_files/eusart.c: 229:         EUSART_FramingErrorHandler();
  4207  012D  0020               	movlb	0	; select bank0
  4208  012E  0860               	movf	_EUSART_FramingErrorHandler+1,w
  4209  012F  008A               	movwf	10
  4210  0130  085F               	movf	_EUSART_FramingErrorHandler,w
  4211  0131  000A               	callw
  4212  0132  3181               	pagesel	$
  4213  0133                     i1l1427:	
  4214                           
  4215                           ;mcc_generated_files/eusart.c: 232:     if(RC1STAbits.OERR){
  4216  0133  0023               	movlb	3	; select bank3
  4217  0134  1C9D               	btfss	29,1	;volatile
  4218  0135  2941               	goto	i1l1433
  4219                           
  4220                           ;mcc_generated_files/eusart.c: 233:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4221  0136  087C               	movf	_eusartRxHead,w	;volatile
  4222  0137  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4223  0138  0086               	movwf	6
  4224  0139  0187               	clrf	7
  4225  013A  1501               	bsf	1,2
  4226                           
  4227                           ;mcc_generated_files/eusart.c: 234:         EUSART_OverrunErrorHandler();
  4228  013B  0020               	movlb	0	; select bank0
  4229  013C  085E               	movf	_EUSART_OverrunErrorHandler+1,w
  4230  013D  008A               	movwf	10
  4231  013E  085D               	movf	_EUSART_OverrunErrorHandler,w
  4232  013F  000A               	callw
  4233  0140  3181               	pagesel	$
  4234  0141                     i1l1433:	
  4235                           
  4236                           ;mcc_generated_files/eusart.c: 237:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4237  0141  087C               	movf	_eusartRxHead,w	;volatile
  4238  0142  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4239  0143  0086               	movwf	6
  4240  0144  0187               	clrf	7
  4241  0145  0801               	movf	1,w
  4242  0146  1903               	btfsc	3,2
  4243  0147  294F               	goto	i1l1437
  4244                           
  4245                           ;mcc_generated_files/eusart.c: 238:         EUSART_ErrorHandler();
  4246  0148  0020               	movlb	0	; select bank0
  4247  0149  085C               	movf	_EUSART_ErrorHandler+1,w
  4248  014A  008A               	movwf	10
  4249  014B  085B               	movf	_EUSART_ErrorHandler,w
  4250  014C  000A               	callw
  4251  014D  3181               	pagesel	$
  4252                           
  4253                           ;mcc_generated_files/eusart.c: 239:     } else {
  4254  014E  0008               	return
  4255  014F                     i1l1437:	
  4256                           
  4257                           ;mcc_generated_files/eusart.c: 240:         EUSART_RxDataHandler();
  4258  014F  3181  21E0         	fcall	_EUSART_RxDataHandler
  4259  0151  0008               	return
  4260  0152                     __end_of_EUSART_Receive_ISR:	
  4261                           
  4262                           	psect	text21
  4263  026D                     __ptext21:	
  4264 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4265 ;; Defined at:
  4266 ;;		line 258 in file "mcc_generated_files/eusart.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		None
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_EUSART_Initialize
  4290 ;;		_EUSART_Receive_ISR
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4296  026D                     _EUSART_DefaultOverrunErrorHandler:	
  4297                           
  4298                           ;mcc_generated_files/eusart.c: 261:     RC1STAbits.CREN = 0;
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4302  026D  0023               	movlb	3	; select bank3
  4303  026E  121D               	bcf	29,4	;volatile
  4304                           
  4305                           ;mcc_generated_files/eusart.c: 262:     RC1STAbits.CREN = 1;
  4306  026F  161D               	bsf	29,4	;volatile
  4307  0270  0008               	return
  4308  0271                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  4309                           
  4310                           	psect	text22
  4311  0274                     __ptext22:	
  4312 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4313 ;; Defined at:
  4314 ;;		line 256 in file "mcc_generated_files/eusart.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		None
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_EUSART_Initialize
  4338 ;;		_EUSART_Receive_ISR
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4344  0274                     _EUSART_DefaultFramingErrorHandler:	
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4348  0274  0008               	return
  4349  0275                     __end_of_EUSART_DefaultFramingErrorHandler:	
  4350                           
  4351                           	psect	text23
  4352  0271                     __ptext23:	
  4353 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4354 ;; Defined at:
  4355 ;;		line 266 in file "mcc_generated_files/eusart.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    1
  4376 ;; This function calls:
  4377 ;;		_EUSART_RxDataHandler
  4378 ;; This function is called by:
  4379 ;;		_EUSART_Initialize
  4380 ;;		_EUSART_Receive_ISR
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _EUSART_DefaultErrorHandler
  4386  0271                     _EUSART_DefaultErrorHandler:	
  4387                           
  4388                           ;mcc_generated_files/eusart.c: 267:     EUSART_RxDataHandler();
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4392  0271  3181  21E0         	fcall	_EUSART_RxDataHandler
  4393  0273  0008               	return
  4394  0274                     __end_of_EUSART_DefaultErrorHandler:	
  4395                           
  4396                           	psect	text24
  4397  01E0                     __ptext24:	
  4398 ;; *************** function _EUSART_RxDataHandler *****************
  4399 ;; Defined at:
  4400 ;;		line 246 in file "mcc_generated_files/eusart.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_EUSART_Receive_ISR
  4424 ;;		_EUSART_DefaultErrorHandler
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           
  4429                           ;psect for function _EUSART_RxDataHandler
  4430  01E0                     _EUSART_RxDataHandler:	
  4431                           
  4432                           ;mcc_generated_files/eusart.c: 248:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4436  01E0  0023               	movlb	3	; select bank3
  4437  01E1  0819               	movf	25,w	;volatile
  4438  01E2  00F0               	movwf	??_EUSART_RxDataHandler
  4439  01E3  087C               	movf	_eusartRxHead,w
  4440  01E4  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4441  01E5  0086               	movwf	6
  4442  01E6  0187               	clrf	7
  4443  01E7  0870               	movf	??_EUSART_RxDataHandler,w
  4444  01E8  0081               	movwf	1
  4445  01E9  3001               	movlw	1
  4446  01EA  00F0               	movwf	??_EUSART_RxDataHandler
  4447  01EB  0870               	movf	??_EUSART_RxDataHandler,w
  4448  01EC  07FC               	addwf	_eusartRxHead,f	;volatile
  4449                           
  4450                           ;mcc_generated_files/eusart.c: 249:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4451  01ED  3008               	movlw	8
  4452  01EE  027C               	subwf	_eusartRxHead,w	;volatile
  4453  01EF  1803               	btfsc	3,0
  4454                           
  4455                           ;mcc_generated_files/eusart.c: 250:     {;mcc_generated_files/eusart.c: 251:         eus
      +                          artRxHead = 0;
  4456  01F0  01FC               	clrf	_eusartRxHead	;volatile
  4457                           
  4458                           ;mcc_generated_files/eusart.c: 253:     eusartRxCount++;
  4459  01F1  3001               	movlw	1
  4460  01F2  00F0               	movwf	??_EUSART_RxDataHandler
  4461  01F3  0870               	movf	??_EUSART_RxDataHandler,w
  4462  01F4  0020               	movlb	0	; select bank0
  4463  01F5  07C1               	addwf	_eusartRxCount,f	;volatile
  4464  01F6  0008               	return
  4465  01F7                     __end_of_EUSART_RxDataHandler:	
  4466  007E                     btemp	set	126	;btemp
  4467  007E                     int$flags	set	126
  4468  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         70
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     22      70
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S881_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2552
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2062
                                             16 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1897
                                              8 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1471
                                              0 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     957
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      62
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      73      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      73      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 16:55:38 2019

                ?_EUSART_SetRxInterruptHandler 0071                                    __CFG_CP$OFF 0000  
                                  __CFG_LVP$ON 0000                                            l116 01AC  
                                 __CFG_CPD$OFF 0000                                            u535 0115  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0071  
                      __size_of_PMD_Initialize 0008                                            wreg 0009  
                                         l1511 007F                                           l1507 0079  
                                         l1531 0182                                           l1461 01A1  
                                         l1517 008A                                           l1533 019B  
                                         l1545 0226                                           l1475 01C0  
                                         l1485 00F4                                           l1489 0117  
                                         STR_1 0217                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _dbuf 00A0  
                                         _main 0223                                           _prec 003C  
                                         _nout 0038                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                  __CFG_BORV$LOW 0000  
                                         start 0021                                  __CFG_CSWEN$ON 0000  
                                __CFG_MCLRE$ON 0000                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 0238  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                               __CFG_DEBUG$OFF 0000                                          i1l128 01DD  
                                        i1l182 0014                                          i1l187 001F  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 0045  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                                        _flags 003E                                 _WDT_Initialize 0269  
                                        _fputc 00EB                                          _width 003A  
                                        _putch 0264                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0023                                   __end_of_main 022F  
                               ??_EUSART_Write 0071                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0073                                         ??_main 007C  
                       __end_of_WDT_Initialize 026D      __end_of_EUSART_DefaultFramingErrorHandler 0275  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0274  
                   _EUSART_OverrunErrorHandler 005D                                         ?_fputc 0074  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                           __CFG_RSTOSC$HFINT1 0000                                         _RC1REG 0199  
                                       _RA5PPS 0E95                                         _RC1STA 019D  
                                       i1l1433 0141                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l1427 0133  
                                       _ODCONC 028E                                         i1l1437 014F  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0053  
                               __CFG_STVREN$ON 0000                            _EUSART_Transmit_ISR 01C3  
                                       _printf 01F7                                         fputc@c 0074  
                               _PMD_Initialize 0238                                ?_WDT_Initialize 0070  
                             __end_of_vfprintf 01A0                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 0208                        __end_of__initialization 0033  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 024C  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0246  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0074  
                                __end_of_fputc 0120                                  __end_of_putch 0269  
                       __end_of_PMD_Initialize 0240                           _eusartRxStatusBuffer 0020  
              ??_EUSART_SetOverrunErrorHandler 0073                                        ??_fputc 0077  
                    __end_of_SYSTEM_Initialize 0217                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0073                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 01C3  
                  __size_of_EUSART_Receive_ISR 0032                                     __pmaintext 0223  
                ?_EUSART_SetTxInterruptHandler 0071               _EUSART_TxDefaultInterruptHandler 0063  
                              __CFG_PPS1WAY$ON 0000                                     __pintentry 0004  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 0055  
                              ?_PMD_Initialize 0070                                  _eusartRxCount 0041  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                           __size_of_vfpfcnvrt 0076                  __size_of_EUSART_RxDataHandler 0017  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0073            __size_of_EUSART_DefaultErrorHandler 0003  
                                    ?_vfprintf 004D                                        __ptext1 01F7  
                                      __ptext2 017A                                        __ptext3 0037  
                                      __ptext4 00EB                                        __ptext5 0264  
                                      __ptext6 01A0                                        __ptext7 0208  
                                      __ptext8 0269                                        __ptext9 0238  
                              __size_of_printf 0011                          _OSCILLATOR_Initialize 022F  
                     ??_PIN_MANAGER_Initialize 0071                     __size_of_SYSTEM_Initialize 000F  
                                      clrloop0 0241                           end_of_initialization 0033  
        __end_of_EUSART_SetOverrunErrorHandler 0258         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0252                                        fputc@fp 0076  
                            _EUSART_Initialize 00AD                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 00AD                                     ??_vfprintf 0050  
                          ??_EUSART_Initialize 0073                               ??_WDT_Initialize 0071  
               ??_EUSART_SetTxInterruptHandler 0073                          __size_of_EUSART_Write 0023  
                             __CFG_FEXTOSC$OFF 0000                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 00EB             __end_of_EUSART_DefaultErrorHandler 0274  
                   _EUSART_DefaultErrorHandler 0271                                    vfpfcnvrt@ap 0046  
                                  vfpfcnvrt@fp 004C                                   _EUSART_Write 01A0  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0208  
                          start_initialization 0023                __size_of_PIN_MANAGER_Initialize 0028  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0073                 ?_EUSART_SetOverrunErrorHandler 0071  
                             __CFG_LPBOREN$OFF 0000                                    vfprintf@fmt 004D  
                   _EUSART_FramingErrorHandler 005F                               ??_PMD_Initialize 0071  
                       _EUSART_SetErrorHandler 025E                                       ??_printf 0057  
                  __end_of_EUSART_Transmit_ISR 01E0                                    __pbssCOMMON 007C  
                                    ___latbits 0002                                  __pcstackBANK0 0045  
                   __end_of_EUSART_Receive_ISR 0152                     __size_of_EUSART_Initialize 003E  
             _EUSART_RxDefaultInterruptHandler 0061                                      __pnvBANK0 005B  
                 __end_of_EUSART_RxDataHandler 01F7                         _PIN_MANAGER_Initialize 0152  
                                 _eusartRxHead 007C                                   _eusartTxHead 0044  
                                 _eusartRxTail 0042                                   _eusartTxTail 0043  
                 ??_INTERRUPT_InterruptManager 0071                              __size_of_vfprintf 0026  
                      _eusartTxBufferRemaining 0065                                       _BAUD1CON 019F  
                               __size_of_fputc 0035                                 __size_of_putch 0005  
                               _eusartRxBuffer 0028                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0071                                      clear_ram0 0240  
                                     _PIE1bits 0091                              _eusartRxLastError 0040  
          __size_of_INTERRUPT_InterruptManager 001D                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0073      __end_of_EUSART_DefaultOverrunErrorHandler 0271  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 026D  
                                    _vfpfcnvrt 0037                                     vfprintf@ap 004F  
                                   vfprintf@fp 0052                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 005B                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0045                           _EUSART_RxDataHandler 01E0  
                                     __ptext10 0152                                       __ptext11 022F  
                                     __ptext20 0120                                       __ptext12 00AD  
                                     __ptext21 026D                                       __ptext13 0246  
                                     __ptext22 0274                                       __ptext14 024C  
                                     __ptext23 0271                                       __ptext15 0252  
                                     __ptext24 01E0                                       __ptext16 0258  
                                     __ptext17 025E                                       __ptext19 01C3  
                                __size_of_main 000C                        ?_EUSART_SetErrorHandler 0071  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E                                       _vfprintf 017A  
           __end_of_INTERRUPT_InterruptManager 0021                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0055          __end_of_EUSART_SetFramingErrorHandler 025E  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0258  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0264  
                            __CFG_CLKOUTEN$OFF 0000           __end_of_EUSART_SetRxInterruptHandler 0252  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 024C  
                                     printf@ap 005A                             _EUSART_Receive_ISR 0120  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                    ??_vfpfcnvrt 0047  
                                __pstringtext1 0217                                  __pstringtext2 0000  
                          ?_EUSART_Receive_ISR 0070                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 001D  
               __end_of_PIN_MANAGER_Initialize 017A                           ??_EUSART_Receive_ISR 0071  
