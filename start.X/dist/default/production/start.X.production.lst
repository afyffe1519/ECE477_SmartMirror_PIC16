

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 11 18:51:24 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F18345 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0097                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018E                     	;# 
   139  0197                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021D                     	;# 
   189  021D                     	;# 
   190  021E                     	;# 
   191  021F                     	;# 
   192  028C                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  0291                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0294                     	;# 
   200  0295                     	;# 
   201  0295                     	;# 
   202  0296                     	;# 
   203  0297                     	;# 
   204  0298                     	;# 
   205  029F                     	;# 
   206  030C                     	;# 
   207  030D                     	;# 
   208  030E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0314                     	;# 
   214  0315                     	;# 
   215  0315                     	;# 
   216  0316                     	;# 
   217  0317                     	;# 
   218  0318                     	;# 
   219  038C                     	;# 
   220  038D                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  0397                     	;# 
   229  0398                     	;# 
   230  0399                     	;# 
   231  039A                     	;# 
   232  039C                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0411                     	;# 
   237  0411                     	;# 
   238  0412                     	;# 
   239  0413                     	;# 
   240  0414                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  0418                     	;# 
   245  0418                     	;# 
   246  0419                     	;# 
   247  041A                     	;# 
   248  041B                     	;# 
   249  041C                     	;# 
   250  041D                     	;# 
   251  041E                     	;# 
   252  041F                     	;# 
   253  0498                     	;# 
   254  0498                     	;# 
   255  0499                     	;# 
   256  049A                     	;# 
   257  049B                     	;# 
   258  049B                     	;# 
   259  049C                     	;# 
   260  049D                     	;# 
   261  049E                     	;# 
   262  049F                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  061F                     	;# 
   272  0691                     	;# 
   273  0692                     	;# 
   274  0693                     	;# 
   275  0694                     	;# 
   276  0695                     	;# 
   277  0696                     	;# 
   278  0697                     	;# 
   279  0698                     	;# 
   280  0699                     	;# 
   281  0711                     	;# 
   282  0712                     	;# 
   283  0713                     	;# 
   284  0714                     	;# 
   285  0715                     	;# 
   286  0716                     	;# 
   287  0717                     	;# 
   288  0718                     	;# 
   289  0719                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0892                     	;# 
   297  0892                     	;# 
   298  0892                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0894                     	;# 
   306  0894                     	;# 
   307  0894                     	;# 
   308  0895                     	;# 
   309  0895                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0896                     	;# 
   313  0896                     	;# 
   314  089B                     	;# 
   315  0911                     	;# 
   316  0912                     	;# 
   317  0913                     	;# 
   318  0914                     	;# 
   319  0915                     	;# 
   320  0916                     	;# 
   321  0918                     	;# 
   322  0919                     	;# 
   323  091A                     	;# 
   324  091B                     	;# 
   325  091C                     	;# 
   326  091D                     	;# 
   327  091E                     	;# 
   328  091F                     	;# 
   329  0E0F                     	;# 
   330  0E10                     	;# 
   331  0E11                     	;# 
   332  0E12                     	;# 
   333  0E13                     	;# 
   334  0E14                     	;# 
   335  0E15                     	;# 
   336  0E16                     	;# 
   337  0E17                     	;# 
   338  0E18                     	;# 
   339  0E19                     	;# 
   340  0E1A                     	;# 
   341  0E1B                     	;# 
   342  0E1C                     	;# 
   343  0E1D                     	;# 
   344  0E1E                     	;# 
   345  0E1F                     	;# 
   346  0E20                     	;# 
   347  0E21                     	;# 
   348  0E22                     	;# 
   349  0E24                     	;# 
   350  0E25                     	;# 
   351  0E28                     	;# 
   352  0E29                     	;# 
   353  0E2A                     	;# 
   354  0E2B                     	;# 
   355  0E2C                     	;# 
   356  0E2D                     	;# 
   357  0E2E                     	;# 
   358  0E2F                     	;# 
   359  0E90                     	;# 
   360  0E91                     	;# 
   361  0E92                     	;# 
   362  0E94                     	;# 
   363  0E95                     	;# 
   364  0E9C                     	;# 
   365  0E9D                     	;# 
   366  0E9E                     	;# 
   367  0E9F                     	;# 
   368  0EA0                     	;# 
   369  0EA1                     	;# 
   370  0EA2                     	;# 
   371  0EA3                     	;# 
   372  0EA4                     	;# 
   373  0EA5                     	;# 
   374  0EA6                     	;# 
   375  0EA7                     	;# 
   376  0F0F                     	;# 
   377  0F10                     	;# 
   378  0F11                     	;# 
   379  0F12                     	;# 
   380  0F13                     	;# 
   381  0F14                     	;# 
   382  0F15                     	;# 
   383  0F16                     	;# 
   384  0F17                     	;# 
   385  0F18                     	;# 
   386  0F19                     	;# 
   387  0F1A                     	;# 
   388  0F1B                     	;# 
   389  0F1C                     	;# 
   390  0F1D                     	;# 
   391  0F1E                     	;# 
   392  0F1F                     	;# 
   393  0F20                     	;# 
   394  0F21                     	;# 
   395  0F22                     	;# 
   396  0F23                     	;# 
   397  0F24                     	;# 
   398  0F25                     	;# 
   399  0F26                     	;# 
   400  0F27                     	;# 
   401  0F28                     	;# 
   402  0F29                     	;# 
   403  0F2A                     	;# 
   404  0F2B                     	;# 
   405  0F2C                     	;# 
   406  0F2D                     	;# 
   407  0F2E                     	;# 
   408  0F2F                     	;# 
   409  0F30                     	;# 
   410  0F31                     	;# 
   411  0F32                     	;# 
   412  0F33                     	;# 
   413  0F34                     	;# 
   414  0F35                     	;# 
   415  0F36                     	;# 
   416  0F37                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  000E                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0016                     	;# 
   452  0017                     	;# 
   453  0018                     	;# 
   454  0019                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001D                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0090                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0097                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  009F                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  0111                     	;# 
   481  0112                     	;# 
   482  0113                     	;# 
   483  0114                     	;# 
   484  0115                     	;# 
   485  0116                     	;# 
   486  0117                     	;# 
   487  0118                     	;# 
   488  0119                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  018E                     	;# 
   492  0197                     	;# 
   493  0199                     	;# 
   494  0199                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019A                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019D                     	;# 
   509  019D                     	;# 
   510  019E                     	;# 
   511  019E                     	;# 
   512  019E                     	;# 
   513  019F                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  020C                     	;# 
   519  020D                     	;# 
   520  020E                     	;# 
   521  0211                     	;# 
   522  0211                     	;# 
   523  0212                     	;# 
   524  0212                     	;# 
   525  0213                     	;# 
   526  0213                     	;# 
   527  0214                     	;# 
   528  0214                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0216                     	;# 
   534  0216                     	;# 
   535  0217                     	;# 
   536  0217                     	;# 
   537  0219                     	;# 
   538  021A                     	;# 
   539  021B                     	;# 
   540  021C                     	;# 
   541  021D                     	;# 
   542  021D                     	;# 
   543  021E                     	;# 
   544  021F                     	;# 
   545  028C                     	;# 
   546  028D                     	;# 
   547  028E                     	;# 
   548  0291                     	;# 
   549  0291                     	;# 
   550  0292                     	;# 
   551  0293                     	;# 
   552  0294                     	;# 
   553  0295                     	;# 
   554  0295                     	;# 
   555  0296                     	;# 
   556  0297                     	;# 
   557  0298                     	;# 
   558  029F                     	;# 
   559  030C                     	;# 
   560  030D                     	;# 
   561  030E                     	;# 
   562  0311                     	;# 
   563  0311                     	;# 
   564  0312                     	;# 
   565  0313                     	;# 
   566  0314                     	;# 
   567  0315                     	;# 
   568  0315                     	;# 
   569  0316                     	;# 
   570  0317                     	;# 
   571  0318                     	;# 
   572  038C                     	;# 
   573  038D                     	;# 
   574  038E                     	;# 
   575  0391                     	;# 
   576  0392                     	;# 
   577  0393                     	;# 
   578  0394                     	;# 
   579  0395                     	;# 
   580  0396                     	;# 
   581  0397                     	;# 
   582  0398                     	;# 
   583  0399                     	;# 
   584  039A                     	;# 
   585  039C                     	;# 
   586  039D                     	;# 
   587  039E                     	;# 
   588  039F                     	;# 
   589  0411                     	;# 
   590  0411                     	;# 
   591  0412                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  0418                     	;# 
   598  0418                     	;# 
   599  0419                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  041F                     	;# 
   606  0498                     	;# 
   607  0498                     	;# 
   608  0499                     	;# 
   609  049A                     	;# 
   610  049B                     	;# 
   611  049B                     	;# 
   612  049C                     	;# 
   613  049D                     	;# 
   614  049E                     	;# 
   615  049F                     	;# 
   616  0617                     	;# 
   617  0618                     	;# 
   618  0619                     	;# 
   619  0619                     	;# 
   620  061A                     	;# 
   621  061B                     	;# 
   622  061C                     	;# 
   623  061C                     	;# 
   624  061F                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0711                     	;# 
   635  0712                     	;# 
   636  0713                     	;# 
   637  0714                     	;# 
   638  0715                     	;# 
   639  0716                     	;# 
   640  0717                     	;# 
   641  0718                     	;# 
   642  0719                     	;# 
   643  0891                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0892                     	;# 
   650  0892                     	;# 
   651  0892                     	;# 
   652  0893                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0894                     	;# 
   659  0894                     	;# 
   660  0894                     	;# 
   661  0895                     	;# 
   662  0895                     	;# 
   663  0895                     	;# 
   664  0896                     	;# 
   665  0896                     	;# 
   666  0896                     	;# 
   667  089B                     	;# 
   668  0911                     	;# 
   669  0912                     	;# 
   670  0913                     	;# 
   671  0914                     	;# 
   672  0915                     	;# 
   673  0916                     	;# 
   674  0918                     	;# 
   675  0919                     	;# 
   676  091A                     	;# 
   677  091B                     	;# 
   678  091C                     	;# 
   679  091D                     	;# 
   680  091E                     	;# 
   681  091F                     	;# 
   682  0E0F                     	;# 
   683  0E10                     	;# 
   684  0E11                     	;# 
   685  0E12                     	;# 
   686  0E13                     	;# 
   687  0E14                     	;# 
   688  0E15                     	;# 
   689  0E16                     	;# 
   690  0E17                     	;# 
   691  0E18                     	;# 
   692  0E19                     	;# 
   693  0E1A                     	;# 
   694  0E1B                     	;# 
   695  0E1C                     	;# 
   696  0E1D                     	;# 
   697  0E1E                     	;# 
   698  0E1F                     	;# 
   699  0E20                     	;# 
   700  0E21                     	;# 
   701  0E22                     	;# 
   702  0E24                     	;# 
   703  0E25                     	;# 
   704  0E28                     	;# 
   705  0E29                     	;# 
   706  0E2A                     	;# 
   707  0E2B                     	;# 
   708  0E2C                     	;# 
   709  0E2D                     	;# 
   710  0E2E                     	;# 
   711  0E2F                     	;# 
   712  0E90                     	;# 
   713  0E91                     	;# 
   714  0E92                     	;# 
   715  0E94                     	;# 
   716  0E95                     	;# 
   717  0E9C                     	;# 
   718  0E9D                     	;# 
   719  0E9E                     	;# 
   720  0E9F                     	;# 
   721  0EA0                     	;# 
   722  0EA1                     	;# 
   723  0EA2                     	;# 
   724  0EA3                     	;# 
   725  0EA4                     	;# 
   726  0EA5                     	;# 
   727  0EA6                     	;# 
   728  0EA7                     	;# 
   729  0F0F                     	;# 
   730  0F10                     	;# 
   731  0F11                     	;# 
   732  0F12                     	;# 
   733  0F13                     	;# 
   734  0F14                     	;# 
   735  0F15                     	;# 
   736  0F16                     	;# 
   737  0F17                     	;# 
   738  0F18                     	;# 
   739  0F19                     	;# 
   740  0F1A                     	;# 
   741  0F1B                     	;# 
   742  0F1C                     	;# 
   743  0F1D                     	;# 
   744  0F1E                     	;# 
   745  0F1F                     	;# 
   746  0F20                     	;# 
   747  0F21                     	;# 
   748  0F22                     	;# 
   749  0F23                     	;# 
   750  0F24                     	;# 
   751  0F25                     	;# 
   752  0F26                     	;# 
   753  0F27                     	;# 
   754  0F28                     	;# 
   755  0F29                     	;# 
   756  0F2A                     	;# 
   757  0F2B                     	;# 
   758  0F2C                     	;# 
   759  0F2D                     	;# 
   760  0F2E                     	;# 
   761  0F2F                     	;# 
   762  0F30                     	;# 
   763  0F31                     	;# 
   764  0F32                     	;# 
   765  0F33                     	;# 
   766  0F34                     	;# 
   767  0F35                     	;# 
   768  0F36                     	;# 
   769  0F37                     	;# 
   770  0FE4                     	;# 
   771  0FE5                     	;# 
   772  0FE6                     	;# 
   773  0FE7                     	;# 
   774  0FE8                     	;# 
   775  0FE9                     	;# 
   776  0FEA                     	;# 
   777  0FEB                     	;# 
   778  0FED                     	;# 
   779  0FEE                     	;# 
   780  0FEF                     	;# 
   781  0000                     	;# 
   782  0001                     	;# 
   783  0002                     	;# 
   784  0003                     	;# 
   785  0004                     	;# 
   786  0005                     	;# 
   787  0006                     	;# 
   788  0007                     	;# 
   789  0008                     	;# 
   790  0009                     	;# 
   791  000A                     	;# 
   792  000B                     	;# 
   793  000C                     	;# 
   794  000D                     	;# 
   795  000E                     	;# 
   796  0010                     	;# 
   797  0011                     	;# 
   798  0012                     	;# 
   799  0013                     	;# 
   800  0014                     	;# 
   801  0015                     	;# 
   802  0015                     	;# 
   803  0016                     	;# 
   804  0016                     	;# 
   805  0017                     	;# 
   806  0018                     	;# 
   807  0019                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  001D                     	;# 
   813  001E                     	;# 
   814  001F                     	;# 
   815  008C                     	;# 
   816  008D                     	;# 
   817  008E                     	;# 
   818  0090                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0093                     	;# 
   822  0094                     	;# 
   823  0097                     	;# 
   824  009B                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  0111                     	;# 
   834  0112                     	;# 
   835  0113                     	;# 
   836  0114                     	;# 
   837  0115                     	;# 
   838  0116                     	;# 
   839  0117                     	;# 
   840  0118                     	;# 
   841  0119                     	;# 
   842  018C                     	;# 
   843  018D                     	;# 
   844  018E                     	;# 
   845  0197                     	;# 
   846  0199                     	;# 
   847  0199                     	;# 
   848  0199                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019A                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019D                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019E                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020D                     	;# 
   873  020E                     	;# 
   874  0211                     	;# 
   875  0211                     	;# 
   876  0212                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0213                     	;# 
   880  0214                     	;# 
   881  0214                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0216                     	;# 
   888  0217                     	;# 
   889  0217                     	;# 
   890  0219                     	;# 
   891  021A                     	;# 
   892  021B                     	;# 
   893  021C                     	;# 
   894  021D                     	;# 
   895  021D                     	;# 
   896  021E                     	;# 
   897  021F                     	;# 
   898  028C                     	;# 
   899  028D                     	;# 
   900  028E                     	;# 
   901  0291                     	;# 
   902  0291                     	;# 
   903  0292                     	;# 
   904  0293                     	;# 
   905  0294                     	;# 
   906  0295                     	;# 
   907  0295                     	;# 
   908  0296                     	;# 
   909  0297                     	;# 
   910  0298                     	;# 
   911  029F                     	;# 
   912  030C                     	;# 
   913  030D                     	;# 
   914  030E                     	;# 
   915  0311                     	;# 
   916  0311                     	;# 
   917  0312                     	;# 
   918  0313                     	;# 
   919  0314                     	;# 
   920  0315                     	;# 
   921  0315                     	;# 
   922  0316                     	;# 
   923  0317                     	;# 
   924  0318                     	;# 
   925  038C                     	;# 
   926  038D                     	;# 
   927  038E                     	;# 
   928  0391                     	;# 
   929  0392                     	;# 
   930  0393                     	;# 
   931  0394                     	;# 
   932  0395                     	;# 
   933  0396                     	;# 
   934  0397                     	;# 
   935  0398                     	;# 
   936  0399                     	;# 
   937  039A                     	;# 
   938  039C                     	;# 
   939  039D                     	;# 
   940  039E                     	;# 
   941  039F                     	;# 
   942  0411                     	;# 
   943  0411                     	;# 
   944  0412                     	;# 
   945  0413                     	;# 
   946  0414                     	;# 
   947  0415                     	;# 
   948  0416                     	;# 
   949  0417                     	;# 
   950  0418                     	;# 
   951  0418                     	;# 
   952  0419                     	;# 
   953  041A                     	;# 
   954  041B                     	;# 
   955  041C                     	;# 
   956  041D                     	;# 
   957  041E                     	;# 
   958  041F                     	;# 
   959  0498                     	;# 
   960  0498                     	;# 
   961  0499                     	;# 
   962  049A                     	;# 
   963  049B                     	;# 
   964  049B                     	;# 
   965  049C                     	;# 
   966  049D                     	;# 
   967  049E                     	;# 
   968  049F                     	;# 
   969  0617                     	;# 
   970  0618                     	;# 
   971  0619                     	;# 
   972  0619                     	;# 
   973  061A                     	;# 
   974  061B                     	;# 
   975  061C                     	;# 
   976  061C                     	;# 
   977  061F                     	;# 
   978  0691                     	;# 
   979  0692                     	;# 
   980  0693                     	;# 
   981  0694                     	;# 
   982  0695                     	;# 
   983  0696                     	;# 
   984  0697                     	;# 
   985  0698                     	;# 
   986  0699                     	;# 
   987  0711                     	;# 
   988  0712                     	;# 
   989  0713                     	;# 
   990  0714                     	;# 
   991  0715                     	;# 
   992  0716                     	;# 
   993  0717                     	;# 
   994  0718                     	;# 
   995  0719                     	;# 
   996  0891                     	;# 
   997  0891                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0892                     	;# 
  1003  0892                     	;# 
  1004  0892                     	;# 
  1005  0893                     	;# 
  1006  0893                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0894                     	;# 
  1012  0894                     	;# 
  1013  0894                     	;# 
  1014  0895                     	;# 
  1015  0895                     	;# 
  1016  0895                     	;# 
  1017  0896                     	;# 
  1018  0896                     	;# 
  1019  0896                     	;# 
  1020  089B                     	;# 
  1021  0911                     	;# 
  1022  0912                     	;# 
  1023  0913                     	;# 
  1024  0914                     	;# 
  1025  0915                     	;# 
  1026  0916                     	;# 
  1027  0918                     	;# 
  1028  0919                     	;# 
  1029  091A                     	;# 
  1030  091B                     	;# 
  1031  091C                     	;# 
  1032  091D                     	;# 
  1033  091E                     	;# 
  1034  091F                     	;# 
  1035  0E0F                     	;# 
  1036  0E10                     	;# 
  1037  0E11                     	;# 
  1038  0E12                     	;# 
  1039  0E13                     	;# 
  1040  0E14                     	;# 
  1041  0E15                     	;# 
  1042  0E16                     	;# 
  1043  0E17                     	;# 
  1044  0E18                     	;# 
  1045  0E19                     	;# 
  1046  0E1A                     	;# 
  1047  0E1B                     	;# 
  1048  0E1C                     	;# 
  1049  0E1D                     	;# 
  1050  0E1E                     	;# 
  1051  0E1F                     	;# 
  1052  0E20                     	;# 
  1053  0E21                     	;# 
  1054  0E22                     	;# 
  1055  0E24                     	;# 
  1056  0E25                     	;# 
  1057  0E28                     	;# 
  1058  0E29                     	;# 
  1059  0E2A                     	;# 
  1060  0E2B                     	;# 
  1061  0E2C                     	;# 
  1062  0E2D                     	;# 
  1063  0E2E                     	;# 
  1064  0E2F                     	;# 
  1065  0E90                     	;# 
  1066  0E91                     	;# 
  1067  0E92                     	;# 
  1068  0E94                     	;# 
  1069  0E95                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0E9F                     	;# 
  1074  0EA0                     	;# 
  1075  0EA1                     	;# 
  1076  0EA2                     	;# 
  1077  0EA3                     	;# 
  1078  0EA4                     	;# 
  1079  0EA5                     	;# 
  1080  0EA6                     	;# 
  1081  0EA7                     	;# 
  1082  0F0F                     	;# 
  1083  0F10                     	;# 
  1084  0F11                     	;# 
  1085  0F12                     	;# 
  1086  0F13                     	;# 
  1087  0F14                     	;# 
  1088  0F15                     	;# 
  1089  0F16                     	;# 
  1090  0F17                     	;# 
  1091  0F18                     	;# 
  1092  0F19                     	;# 
  1093  0F1A                     	;# 
  1094  0F1B                     	;# 
  1095  0F1C                     	;# 
  1096  0F1D                     	;# 
  1097  0F1E                     	;# 
  1098  0F1F                     	;# 
  1099  0F20                     	;# 
  1100  0F21                     	;# 
  1101  0F22                     	;# 
  1102  0F23                     	;# 
  1103  0F24                     	;# 
  1104  0F25                     	;# 
  1105  0F26                     	;# 
  1106  0F27                     	;# 
  1107  0F28                     	;# 
  1108  0F29                     	;# 
  1109  0F2A                     	;# 
  1110  0F2B                     	;# 
  1111  0F2C                     	;# 
  1112  0F2D                     	;# 
  1113  0F2E                     	;# 
  1114  0F2F                     	;# 
  1115  0F30                     	;# 
  1116  0F31                     	;# 
  1117  0F32                     	;# 
  1118  0F33                     	;# 
  1119  0F34                     	;# 
  1120  0F35                     	;# 
  1121  0F36                     	;# 
  1122  0F37                     	;# 
  1123  0FE4                     	;# 
  1124  0FE5                     	;# 
  1125  0FE6                     	;# 
  1126  0FE7                     	;# 
  1127  0FE8                     	;# 
  1128  0FE9                     	;# 
  1129  0FEA                     	;# 
  1130  0FEB                     	;# 
  1131  0FED                     	;# 
  1132  0FEE                     	;# 
  1133  0FEF                     	;# 
  1134  0000                     	;# 
  1135  0001                     	;# 
  1136  0002                     	;# 
  1137  0003                     	;# 
  1138  0004                     	;# 
  1139  0005                     	;# 
  1140  0006                     	;# 
  1141  0007                     	;# 
  1142  0008                     	;# 
  1143  0009                     	;# 
  1144  000A                     	;# 
  1145  000B                     	;# 
  1146  000C                     	;# 
  1147  000D                     	;# 
  1148  000E                     	;# 
  1149  0010                     	;# 
  1150  0011                     	;# 
  1151  0012                     	;# 
  1152  0013                     	;# 
  1153  0014                     	;# 
  1154  0015                     	;# 
  1155  0015                     	;# 
  1156  0016                     	;# 
  1157  0016                     	;# 
  1158  0017                     	;# 
  1159  0018                     	;# 
  1160  0019                     	;# 
  1161  0019                     	;# 
  1162  001A                     	;# 
  1163  001B                     	;# 
  1164  001C                     	;# 
  1165  001D                     	;# 
  1166  001E                     	;# 
  1167  001F                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  0090                     	;# 
  1172  0091                     	;# 
  1173  0092                     	;# 
  1174  0093                     	;# 
  1175  0094                     	;# 
  1176  0097                     	;# 
  1177  009B                     	;# 
  1178  009B                     	;# 
  1179  009C                     	;# 
  1180  009D                     	;# 
  1181  009E                     	;# 
  1182  009F                     	;# 
  1183  010C                     	;# 
  1184  010D                     	;# 
  1185  010E                     	;# 
  1186  0111                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0115                     	;# 
  1191  0116                     	;# 
  1192  0117                     	;# 
  1193  0118                     	;# 
  1194  0119                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  0197                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  020C                     	;# 
  1225  020D                     	;# 
  1226  020E                     	;# 
  1227  0211                     	;# 
  1228  0211                     	;# 
  1229  0212                     	;# 
  1230  0212                     	;# 
  1231  0213                     	;# 
  1232  0213                     	;# 
  1233  0214                     	;# 
  1234  0214                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0216                     	;# 
  1240  0216                     	;# 
  1241  0217                     	;# 
  1242  0217                     	;# 
  1243  0219                     	;# 
  1244  021A                     	;# 
  1245  021B                     	;# 
  1246  021C                     	;# 
  1247  021D                     	;# 
  1248  021D                     	;# 
  1249  021E                     	;# 
  1250  021F                     	;# 
  1251  028C                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  0291                     	;# 
  1255  0291                     	;# 
  1256  0292                     	;# 
  1257  0293                     	;# 
  1258  0294                     	;# 
  1259  0295                     	;# 
  1260  0295                     	;# 
  1261  0296                     	;# 
  1262  0297                     	;# 
  1263  0298                     	;# 
  1264  029F                     	;# 
  1265  030C                     	;# 
  1266  030D                     	;# 
  1267  030E                     	;# 
  1268  0311                     	;# 
  1269  0311                     	;# 
  1270  0312                     	;# 
  1271  0313                     	;# 
  1272  0314                     	;# 
  1273  0315                     	;# 
  1274  0315                     	;# 
  1275  0316                     	;# 
  1276  0317                     	;# 
  1277  0318                     	;# 
  1278  038C                     	;# 
  1279  038D                     	;# 
  1280  038E                     	;# 
  1281  0391                     	;# 
  1282  0392                     	;# 
  1283  0393                     	;# 
  1284  0394                     	;# 
  1285  0395                     	;# 
  1286  0396                     	;# 
  1287  0397                     	;# 
  1288  0398                     	;# 
  1289  0399                     	;# 
  1290  039A                     	;# 
  1291  039C                     	;# 
  1292  039D                     	;# 
  1293  039E                     	;# 
  1294  039F                     	;# 
  1295  0411                     	;# 
  1296  0411                     	;# 
  1297  0412                     	;# 
  1298  0413                     	;# 
  1299  0414                     	;# 
  1300  0415                     	;# 
  1301  0416                     	;# 
  1302  0417                     	;# 
  1303  0418                     	;# 
  1304  0418                     	;# 
  1305  0419                     	;# 
  1306  041A                     	;# 
  1307  041B                     	;# 
  1308  041C                     	;# 
  1309  041D                     	;# 
  1310  041E                     	;# 
  1311  041F                     	;# 
  1312  0498                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  049E                     	;# 
  1321  049F                     	;# 
  1322  0617                     	;# 
  1323  0618                     	;# 
  1324  0619                     	;# 
  1325  0619                     	;# 
  1326  061A                     	;# 
  1327  061B                     	;# 
  1328  061C                     	;# 
  1329  061C                     	;# 
  1330  061F                     	;# 
  1331  0691                     	;# 
  1332  0692                     	;# 
  1333  0693                     	;# 
  1334  0694                     	;# 
  1335  0695                     	;# 
  1336  0696                     	;# 
  1337  0697                     	;# 
  1338  0698                     	;# 
  1339  0699                     	;# 
  1340  0711                     	;# 
  1341  0712                     	;# 
  1342  0713                     	;# 
  1343  0714                     	;# 
  1344  0715                     	;# 
  1345  0716                     	;# 
  1346  0717                     	;# 
  1347  0718                     	;# 
  1348  0719                     	;# 
  1349  0891                     	;# 
  1350  0891                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0892                     	;# 
  1356  0892                     	;# 
  1357  0892                     	;# 
  1358  0893                     	;# 
  1359  0893                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0894                     	;# 
  1365  0894                     	;# 
  1366  0894                     	;# 
  1367  0895                     	;# 
  1368  0895                     	;# 
  1369  0895                     	;# 
  1370  0896                     	;# 
  1371  0896                     	;# 
  1372  0896                     	;# 
  1373  089B                     	;# 
  1374  0911                     	;# 
  1375  0912                     	;# 
  1376  0913                     	;# 
  1377  0914                     	;# 
  1378  0915                     	;# 
  1379  0916                     	;# 
  1380  0918                     	;# 
  1381  0919                     	;# 
  1382  091A                     	;# 
  1383  091B                     	;# 
  1384  091C                     	;# 
  1385  091D                     	;# 
  1386  091E                     	;# 
  1387  091F                     	;# 
  1388  0E0F                     	;# 
  1389  0E10                     	;# 
  1390  0E11                     	;# 
  1391  0E12                     	;# 
  1392  0E13                     	;# 
  1393  0E14                     	;# 
  1394  0E15                     	;# 
  1395  0E16                     	;# 
  1396  0E17                     	;# 
  1397  0E18                     	;# 
  1398  0E19                     	;# 
  1399  0E1A                     	;# 
  1400  0E1B                     	;# 
  1401  0E1C                     	;# 
  1402  0E1D                     	;# 
  1403  0E1E                     	;# 
  1404  0E1F                     	;# 
  1405  0E20                     	;# 
  1406  0E21                     	;# 
  1407  0E22                     	;# 
  1408  0E24                     	;# 
  1409  0E25                     	;# 
  1410  0E28                     	;# 
  1411  0E29                     	;# 
  1412  0E2A                     	;# 
  1413  0E2B                     	;# 
  1414  0E2C                     	;# 
  1415  0E2D                     	;# 
  1416  0E2E                     	;# 
  1417  0E2F                     	;# 
  1418  0E90                     	;# 
  1419  0E91                     	;# 
  1420  0E92                     	;# 
  1421  0E94                     	;# 
  1422  0E95                     	;# 
  1423  0E9C                     	;# 
  1424  0E9D                     	;# 
  1425  0E9E                     	;# 
  1426  0E9F                     	;# 
  1427  0EA0                     	;# 
  1428  0EA1                     	;# 
  1429  0EA2                     	;# 
  1430  0EA3                     	;# 
  1431  0EA4                     	;# 
  1432  0EA5                     	;# 
  1433  0EA6                     	;# 
  1434  0EA7                     	;# 
  1435  0F0F                     	;# 
  1436  0F10                     	;# 
  1437  0F11                     	;# 
  1438  0F12                     	;# 
  1439  0F13                     	;# 
  1440  0F14                     	;# 
  1441  0F15                     	;# 
  1442  0F16                     	;# 
  1443  0F17                     	;# 
  1444  0F18                     	;# 
  1445  0F19                     	;# 
  1446  0F1A                     	;# 
  1447  0F1B                     	;# 
  1448  0F1C                     	;# 
  1449  0F1D                     	;# 
  1450  0F1E                     	;# 
  1451  0F1F                     	;# 
  1452  0F20                     	;# 
  1453  0F21                     	;# 
  1454  0F22                     	;# 
  1455  0F23                     	;# 
  1456  0F24                     	;# 
  1457  0F25                     	;# 
  1458  0F26                     	;# 
  1459  0F27                     	;# 
  1460  0F28                     	;# 
  1461  0F29                     	;# 
  1462  0F2A                     	;# 
  1463  0F2B                     	;# 
  1464  0F2C                     	;# 
  1465  0F2D                     	;# 
  1466  0F2E                     	;# 
  1467  0F2F                     	;# 
  1468  0F30                     	;# 
  1469  0F31                     	;# 
  1470  0F32                     	;# 
  1471  0F33                     	;# 
  1472  0F34                     	;# 
  1473  0F35                     	;# 
  1474  0F36                     	;# 
  1475  0F37                     	;# 
  1476  0FE4                     	;# 
  1477  0FE5                     	;# 
  1478  0FE6                     	;# 
  1479  0FE7                     	;# 
  1480  0FE8                     	;# 
  1481  0FE9                     	;# 
  1482  0FEA                     	;# 
  1483  0FEB                     	;# 
  1484  0FED                     	;# 
  1485  0FEE                     	;# 
  1486  0FEF                     	;# 
  1487  0000                     	;# 
  1488  0001                     	;# 
  1489  0002                     	;# 
  1490  0003                     	;# 
  1491  0004                     	;# 
  1492  0005                     	;# 
  1493  0006                     	;# 
  1494  0007                     	;# 
  1495  0008                     	;# 
  1496  0009                     	;# 
  1497  000A                     	;# 
  1498  000B                     	;# 
  1499  000C                     	;# 
  1500  000D                     	;# 
  1501  000E                     	;# 
  1502  0010                     	;# 
  1503  0011                     	;# 
  1504  0012                     	;# 
  1505  0013                     	;# 
  1506  0014                     	;# 
  1507  0015                     	;# 
  1508  0015                     	;# 
  1509  0016                     	;# 
  1510  0016                     	;# 
  1511  0017                     	;# 
  1512  0018                     	;# 
  1513  0019                     	;# 
  1514  0019                     	;# 
  1515  001A                     	;# 
  1516  001B                     	;# 
  1517  001C                     	;# 
  1518  001D                     	;# 
  1519  001E                     	;# 
  1520  001F                     	;# 
  1521  008C                     	;# 
  1522  008D                     	;# 
  1523  008E                     	;# 
  1524  0090                     	;# 
  1525  0091                     	;# 
  1526  0092                     	;# 
  1527  0093                     	;# 
  1528  0094                     	;# 
  1529  0097                     	;# 
  1530  009B                     	;# 
  1531  009B                     	;# 
  1532  009C                     	;# 
  1533  009D                     	;# 
  1534  009E                     	;# 
  1535  009F                     	;# 
  1536  010C                     	;# 
  1537  010D                     	;# 
  1538  010E                     	;# 
  1539  0111                     	;# 
  1540  0112                     	;# 
  1541  0113                     	;# 
  1542  0114                     	;# 
  1543  0115                     	;# 
  1544  0116                     	;# 
  1545  0117                     	;# 
  1546  0118                     	;# 
  1547  0119                     	;# 
  1548  018C                     	;# 
  1549  018D                     	;# 
  1550  018E                     	;# 
  1551  0197                     	;# 
  1552  0199                     	;# 
  1553  0199                     	;# 
  1554  0199                     	;# 
  1555  019A                     	;# 
  1556  019A                     	;# 
  1557  019A                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019C                     	;# 
  1564  019C                     	;# 
  1565  019C                     	;# 
  1566  019D                     	;# 
  1567  019D                     	;# 
  1568  019D                     	;# 
  1569  019E                     	;# 
  1570  019E                     	;# 
  1571  019E                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  020C                     	;# 
  1578  020D                     	;# 
  1579  020E                     	;# 
  1580  0211                     	;# 
  1581  0211                     	;# 
  1582  0212                     	;# 
  1583  0212                     	;# 
  1584  0213                     	;# 
  1585  0213                     	;# 
  1586  0214                     	;# 
  1587  0214                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0216                     	;# 
  1593  0216                     	;# 
  1594  0217                     	;# 
  1595  0217                     	;# 
  1596  0219                     	;# 
  1597  021A                     	;# 
  1598  021B                     	;# 
  1599  021C                     	;# 
  1600  021D                     	;# 
  1601  021D                     	;# 
  1602  021E                     	;# 
  1603  021F                     	;# 
  1604  028C                     	;# 
  1605  028D                     	;# 
  1606  028E                     	;# 
  1607  0291                     	;# 
  1608  0291                     	;# 
  1609  0292                     	;# 
  1610  0293                     	;# 
  1611  0294                     	;# 
  1612  0295                     	;# 
  1613  0295                     	;# 
  1614  0296                     	;# 
  1615  0297                     	;# 
  1616  0298                     	;# 
  1617  029F                     	;# 
  1618  030C                     	;# 
  1619  030D                     	;# 
  1620  030E                     	;# 
  1621  0311                     	;# 
  1622  0311                     	;# 
  1623  0312                     	;# 
  1624  0313                     	;# 
  1625  0314                     	;# 
  1626  0315                     	;# 
  1627  0315                     	;# 
  1628  0316                     	;# 
  1629  0317                     	;# 
  1630  0318                     	;# 
  1631  038C                     	;# 
  1632  038D                     	;# 
  1633  038E                     	;# 
  1634  0391                     	;# 
  1635  0392                     	;# 
  1636  0393                     	;# 
  1637  0394                     	;# 
  1638  0395                     	;# 
  1639  0396                     	;# 
  1640  0397                     	;# 
  1641  0398                     	;# 
  1642  0399                     	;# 
  1643  039A                     	;# 
  1644  039C                     	;# 
  1645  039D                     	;# 
  1646  039E                     	;# 
  1647  039F                     	;# 
  1648  0411                     	;# 
  1649  0411                     	;# 
  1650  0412                     	;# 
  1651  0413                     	;# 
  1652  0414                     	;# 
  1653  0415                     	;# 
  1654  0416                     	;# 
  1655  0417                     	;# 
  1656  0418                     	;# 
  1657  0418                     	;# 
  1658  0419                     	;# 
  1659  041A                     	;# 
  1660  041B                     	;# 
  1661  041C                     	;# 
  1662  041D                     	;# 
  1663  041E                     	;# 
  1664  041F                     	;# 
  1665  0498                     	;# 
  1666  0498                     	;# 
  1667  0499                     	;# 
  1668  049A                     	;# 
  1669  049B                     	;# 
  1670  049B                     	;# 
  1671  049C                     	;# 
  1672  049D                     	;# 
  1673  049E                     	;# 
  1674  049F                     	;# 
  1675  0617                     	;# 
  1676  0618                     	;# 
  1677  0619                     	;# 
  1678  0619                     	;# 
  1679  061A                     	;# 
  1680  061B                     	;# 
  1681  061C                     	;# 
  1682  061C                     	;# 
  1683  061F                     	;# 
  1684  0691                     	;# 
  1685  0692                     	;# 
  1686  0693                     	;# 
  1687  0694                     	;# 
  1688  0695                     	;# 
  1689  0696                     	;# 
  1690  0697                     	;# 
  1691  0698                     	;# 
  1692  0699                     	;# 
  1693  0711                     	;# 
  1694  0712                     	;# 
  1695  0713                     	;# 
  1696  0714                     	;# 
  1697  0715                     	;# 
  1698  0716                     	;# 
  1699  0717                     	;# 
  1700  0718                     	;# 
  1701  0719                     	;# 
  1702  0891                     	;# 
  1703  0891                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0892                     	;# 
  1709  0892                     	;# 
  1710  0892                     	;# 
  1711  0893                     	;# 
  1712  0893                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0894                     	;# 
  1718  0894                     	;# 
  1719  0894                     	;# 
  1720  0895                     	;# 
  1721  0895                     	;# 
  1722  0895                     	;# 
  1723  0896                     	;# 
  1724  0896                     	;# 
  1725  0896                     	;# 
  1726  089B                     	;# 
  1727  0911                     	;# 
  1728  0912                     	;# 
  1729  0913                     	;# 
  1730  0914                     	;# 
  1731  0915                     	;# 
  1732  0916                     	;# 
  1733  0918                     	;# 
  1734  0919                     	;# 
  1735  091A                     	;# 
  1736  091B                     	;# 
  1737  091C                     	;# 
  1738  091D                     	;# 
  1739  091E                     	;# 
  1740  091F                     	;# 
  1741  0E0F                     	;# 
  1742  0E10                     	;# 
  1743  0E11                     	;# 
  1744  0E12                     	;# 
  1745  0E13                     	;# 
  1746  0E14                     	;# 
  1747  0E15                     	;# 
  1748  0E16                     	;# 
  1749  0E17                     	;# 
  1750  0E18                     	;# 
  1751  0E19                     	;# 
  1752  0E1A                     	;# 
  1753  0E1B                     	;# 
  1754  0E1C                     	;# 
  1755  0E1D                     	;# 
  1756  0E1E                     	;# 
  1757  0E1F                     	;# 
  1758  0E20                     	;# 
  1759  0E21                     	;# 
  1760  0E22                     	;# 
  1761  0E24                     	;# 
  1762  0E25                     	;# 
  1763  0E28                     	;# 
  1764  0E29                     	;# 
  1765  0E2A                     	;# 
  1766  0E2B                     	;# 
  1767  0E2C                     	;# 
  1768  0E2D                     	;# 
  1769  0E2E                     	;# 
  1770  0E2F                     	;# 
  1771  0E90                     	;# 
  1772  0E91                     	;# 
  1773  0E92                     	;# 
  1774  0E94                     	;# 
  1775  0E95                     	;# 
  1776  0E9C                     	;# 
  1777  0E9D                     	;# 
  1778  0E9E                     	;# 
  1779  0E9F                     	;# 
  1780  0EA0                     	;# 
  1781  0EA1                     	;# 
  1782  0EA2                     	;# 
  1783  0EA3                     	;# 
  1784  0EA4                     	;# 
  1785  0EA5                     	;# 
  1786  0EA6                     	;# 
  1787  0EA7                     	;# 
  1788  0F0F                     	;# 
  1789  0F10                     	;# 
  1790  0F11                     	;# 
  1791  0F12                     	;# 
  1792  0F13                     	;# 
  1793  0F14                     	;# 
  1794  0F15                     	;# 
  1795  0F16                     	;# 
  1796  0F17                     	;# 
  1797  0F18                     	;# 
  1798  0F19                     	;# 
  1799  0F1A                     	;# 
  1800  0F1B                     	;# 
  1801  0F1C                     	;# 
  1802  0F1D                     	;# 
  1803  0F1E                     	;# 
  1804  0F1F                     	;# 
  1805  0F20                     	;# 
  1806  0F21                     	;# 
  1807  0F22                     	;# 
  1808  0F23                     	;# 
  1809  0F24                     	;# 
  1810  0F25                     	;# 
  1811  0F26                     	;# 
  1812  0F27                     	;# 
  1813  0F28                     	;# 
  1814  0F29                     	;# 
  1815  0F2A                     	;# 
  1816  0F2B                     	;# 
  1817  0F2C                     	;# 
  1818  0F2D                     	;# 
  1819  0F2E                     	;# 
  1820  0F2F                     	;# 
  1821  0F30                     	;# 
  1822  0F31                     	;# 
  1823  0F32                     	;# 
  1824  0F33                     	;# 
  1825  0F34                     	;# 
  1826  0F35                     	;# 
  1827  0F36                     	;# 
  1828  0F37                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0010                     	;# 
  1856  0011                     	;# 
  1857  0012                     	;# 
  1858  0013                     	;# 
  1859  0014                     	;# 
  1860  0015                     	;# 
  1861  0015                     	;# 
  1862  0016                     	;# 
  1863  0016                     	;# 
  1864  0017                     	;# 
  1865  0018                     	;# 
  1866  0019                     	;# 
  1867  0019                     	;# 
  1868  001A                     	;# 
  1869  001B                     	;# 
  1870  001C                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0097                     	;# 
  1883  009B                     	;# 
  1884  009B                     	;# 
  1885  009C                     	;# 
  1886  009D                     	;# 
  1887  009E                     	;# 
  1888  009F                     	;# 
  1889  010C                     	;# 
  1890  010D                     	;# 
  1891  010E                     	;# 
  1892  0111                     	;# 
  1893  0112                     	;# 
  1894  0113                     	;# 
  1895  0114                     	;# 
  1896  0115                     	;# 
  1897  0116                     	;# 
  1898  0117                     	;# 
  1899  0118                     	;# 
  1900  0119                     	;# 
  1901  018C                     	;# 
  1902  018D                     	;# 
  1903  018E                     	;# 
  1904  0197                     	;# 
  1905  0199                     	;# 
  1906  0199                     	;# 
  1907  0199                     	;# 
  1908  019A                     	;# 
  1909  019A                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019C                     	;# 
  1919  019D                     	;# 
  1920  019D                     	;# 
  1921  019D                     	;# 
  1922  019E                     	;# 
  1923  019E                     	;# 
  1924  019E                     	;# 
  1925  019F                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  020C                     	;# 
  1931  020D                     	;# 
  1932  020E                     	;# 
  1933  0211                     	;# 
  1934  0211                     	;# 
  1935  0212                     	;# 
  1936  0212                     	;# 
  1937  0213                     	;# 
  1938  0213                     	;# 
  1939  0214                     	;# 
  1940  0214                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0219                     	;# 
  1950  021A                     	;# 
  1951  021B                     	;# 
  1952  021C                     	;# 
  1953  021D                     	;# 
  1954  021D                     	;# 
  1955  021E                     	;# 
  1956  021F                     	;# 
  1957  028C                     	;# 
  1958  028D                     	;# 
  1959  028E                     	;# 
  1960  0291                     	;# 
  1961  0291                     	;# 
  1962  0292                     	;# 
  1963  0293                     	;# 
  1964  0294                     	;# 
  1965  0295                     	;# 
  1966  0295                     	;# 
  1967  0296                     	;# 
  1968  0297                     	;# 
  1969  0298                     	;# 
  1970  029F                     	;# 
  1971  030C                     	;# 
  1972  030D                     	;# 
  1973  030E                     	;# 
  1974  0311                     	;# 
  1975  0311                     	;# 
  1976  0312                     	;# 
  1977  0313                     	;# 
  1978  0314                     	;# 
  1979  0315                     	;# 
  1980  0315                     	;# 
  1981  0316                     	;# 
  1982  0317                     	;# 
  1983  0318                     	;# 
  1984  038C                     	;# 
  1985  038D                     	;# 
  1986  038E                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  0393                     	;# 
  1990  0394                     	;# 
  1991  0395                     	;# 
  1992  0396                     	;# 
  1993  0397                     	;# 
  1994  0398                     	;# 
  1995  0399                     	;# 
  1996  039A                     	;# 
  1997  039C                     	;# 
  1998  039D                     	;# 
  1999  039E                     	;# 
  2000  039F                     	;# 
  2001  0411                     	;# 
  2002  0411                     	;# 
  2003  0412                     	;# 
  2004  0413                     	;# 
  2005  0414                     	;# 
  2006  0415                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  0418                     	;# 
  2011  0419                     	;# 
  2012  041A                     	;# 
  2013  041B                     	;# 
  2014  041C                     	;# 
  2015  041D                     	;# 
  2016  041E                     	;# 
  2017  041F                     	;# 
  2018  0498                     	;# 
  2019  0498                     	;# 
  2020  0499                     	;# 
  2021  049A                     	;# 
  2022  049B                     	;# 
  2023  049B                     	;# 
  2024  049C                     	;# 
  2025  049D                     	;# 
  2026  049E                     	;# 
  2027  049F                     	;# 
  2028  0617                     	;# 
  2029  0618                     	;# 
  2030  0619                     	;# 
  2031  0619                     	;# 
  2032  061A                     	;# 
  2033  061B                     	;# 
  2034  061C                     	;# 
  2035  061C                     	;# 
  2036  061F                     	;# 
  2037  0691                     	;# 
  2038  0692                     	;# 
  2039  0693                     	;# 
  2040  0694                     	;# 
  2041  0695                     	;# 
  2042  0696                     	;# 
  2043  0697                     	;# 
  2044  0698                     	;# 
  2045  0699                     	;# 
  2046  0711                     	;# 
  2047  0712                     	;# 
  2048  0713                     	;# 
  2049  0714                     	;# 
  2050  0715                     	;# 
  2051  0716                     	;# 
  2052  0717                     	;# 
  2053  0718                     	;# 
  2054  0719                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0892                     	;# 
  2062  0892                     	;# 
  2063  0892                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0894                     	;# 
  2071  0894                     	;# 
  2072  0894                     	;# 
  2073  0895                     	;# 
  2074  0895                     	;# 
  2075  0895                     	;# 
  2076  0896                     	;# 
  2077  0896                     	;# 
  2078  0896                     	;# 
  2079  089B                     	;# 
  2080  0911                     	;# 
  2081  0912                     	;# 
  2082  0913                     	;# 
  2083  0914                     	;# 
  2084  0915                     	;# 
  2085  0916                     	;# 
  2086  0918                     	;# 
  2087  0919                     	;# 
  2088  091A                     	;# 
  2089  091B                     	;# 
  2090  091C                     	;# 
  2091  091D                     	;# 
  2092  091E                     	;# 
  2093  091F                     	;# 
  2094  0E0F                     	;# 
  2095  0E10                     	;# 
  2096  0E11                     	;# 
  2097  0E12                     	;# 
  2098  0E13                     	;# 
  2099  0E14                     	;# 
  2100  0E15                     	;# 
  2101  0E16                     	;# 
  2102  0E17                     	;# 
  2103  0E18                     	;# 
  2104  0E19                     	;# 
  2105  0E1A                     	;# 
  2106  0E1B                     	;# 
  2107  0E1C                     	;# 
  2108  0E1D                     	;# 
  2109  0E1E                     	;# 
  2110  0E1F                     	;# 
  2111  0E20                     	;# 
  2112  0E21                     	;# 
  2113  0E22                     	;# 
  2114  0E24                     	;# 
  2115  0E25                     	;# 
  2116  0E28                     	;# 
  2117  0E29                     	;# 
  2118  0E2A                     	;# 
  2119  0E2B                     	;# 
  2120  0E2C                     	;# 
  2121  0E2D                     	;# 
  2122  0E2E                     	;# 
  2123  0E2F                     	;# 
  2124  0E90                     	;# 
  2125  0E91                     	;# 
  2126  0E92                     	;# 
  2127  0E94                     	;# 
  2128  0E95                     	;# 
  2129  0E9C                     	;# 
  2130  0E9D                     	;# 
  2131  0E9E                     	;# 
  2132  0E9F                     	;# 
  2133  0EA0                     	;# 
  2134  0EA1                     	;# 
  2135  0EA2                     	;# 
  2136  0EA3                     	;# 
  2137  0EA4                     	;# 
  2138  0EA5                     	;# 
  2139  0EA6                     	;# 
  2140  0EA7                     	;# 
  2141  0F0F                     	;# 
  2142  0F10                     	;# 
  2143  0F11                     	;# 
  2144  0F12                     	;# 
  2145  0F13                     	;# 
  2146  0F14                     	;# 
  2147  0F15                     	;# 
  2148  0F16                     	;# 
  2149  0F17                     	;# 
  2150  0F18                     	;# 
  2151  0F19                     	;# 
  2152  0F1A                     	;# 
  2153  0F1B                     	;# 
  2154  0F1C                     	;# 
  2155  0F1D                     	;# 
  2156  0F1E                     	;# 
  2157  0F1F                     	;# 
  2158  0F20                     	;# 
  2159  0F21                     	;# 
  2160  0F22                     	;# 
  2161  0F23                     	;# 
  2162  0F24                     	;# 
  2163  0F25                     	;# 
  2164  0F26                     	;# 
  2165  0F27                     	;# 
  2166  0F28                     	;# 
  2167  0F29                     	;# 
  2168  0F2A                     	;# 
  2169  0F2B                     	;# 
  2170  0F2C                     	;# 
  2171  0F2D                     	;# 
  2172  0F2E                     	;# 
  2173  0F2F                     	;# 
  2174  0F30                     	;# 
  2175  0F31                     	;# 
  2176  0F32                     	;# 
  2177  0F33                     	;# 
  2178  0F34                     	;# 
  2179  0F35                     	;# 
  2180  0F36                     	;# 
  2181  0F37                     	;# 
  2182  0FE4                     	;# 
  2183  0FE5                     	;# 
  2184  0FE6                     	;# 
  2185  0FE7                     	;# 
  2186  0FE8                     	;# 
  2187  0FE9                     	;# 
  2188  0FEA                     	;# 
  2189  0FEB                     	;# 
  2190  0FED                     	;# 
  2191  0FEE                     	;# 
  2192  0FEF                     	;# 
  2193  0000                     	;# 
  2194  0001                     	;# 
  2195  0002                     	;# 
  2196  0003                     	;# 
  2197  0004                     	;# 
  2198  0005                     	;# 
  2199  0006                     	;# 
  2200  0007                     	;# 
  2201  0008                     	;# 
  2202  0009                     	;# 
  2203  000A                     	;# 
  2204  000B                     	;# 
  2205  000C                     	;# 
  2206  000D                     	;# 
  2207  000E                     	;# 
  2208  0010                     	;# 
  2209  0011                     	;# 
  2210  0012                     	;# 
  2211  0013                     	;# 
  2212  0014                     	;# 
  2213  0015                     	;# 
  2214  0015                     	;# 
  2215  0016                     	;# 
  2216  0016                     	;# 
  2217  0017                     	;# 
  2218  0018                     	;# 
  2219  0019                     	;# 
  2220  0019                     	;# 
  2221  001A                     	;# 
  2222  001B                     	;# 
  2223  001C                     	;# 
  2224  001D                     	;# 
  2225  001E                     	;# 
  2226  001F                     	;# 
  2227  008C                     	;# 
  2228  008D                     	;# 
  2229  008E                     	;# 
  2230  0090                     	;# 
  2231  0091                     	;# 
  2232  0092                     	;# 
  2233  0093                     	;# 
  2234  0094                     	;# 
  2235  0097                     	;# 
  2236  009B                     	;# 
  2237  009B                     	;# 
  2238  009C                     	;# 
  2239  009D                     	;# 
  2240  009E                     	;# 
  2241  009F                     	;# 
  2242  010C                     	;# 
  2243  010D                     	;# 
  2244  010E                     	;# 
  2245  0111                     	;# 
  2246  0112                     	;# 
  2247  0113                     	;# 
  2248  0114                     	;# 
  2249  0115                     	;# 
  2250  0116                     	;# 
  2251  0117                     	;# 
  2252  0118                     	;# 
  2253  0119                     	;# 
  2254  018C                     	;# 
  2255  018D                     	;# 
  2256  018E                     	;# 
  2257  0197                     	;# 
  2258  0199                     	;# 
  2259  0199                     	;# 
  2260  0199                     	;# 
  2261  019A                     	;# 
  2262  019A                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019C                     	;# 
  2270  019C                     	;# 
  2271  019C                     	;# 
  2272  019D                     	;# 
  2273  019D                     	;# 
  2274  019D                     	;# 
  2275  019E                     	;# 
  2276  019E                     	;# 
  2277  019E                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  020C                     	;# 
  2284  020D                     	;# 
  2285  020E                     	;# 
  2286  0211                     	;# 
  2287  0211                     	;# 
  2288  0212                     	;# 
  2289  0212                     	;# 
  2290  0213                     	;# 
  2291  0213                     	;# 
  2292  0214                     	;# 
  2293  0214                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0216                     	;# 
  2299  0216                     	;# 
  2300  0217                     	;# 
  2301  0217                     	;# 
  2302  0219                     	;# 
  2303  021A                     	;# 
  2304  021B                     	;# 
  2305  021C                     	;# 
  2306  021D                     	;# 
  2307  021D                     	;# 
  2308  021E                     	;# 
  2309  021F                     	;# 
  2310  028C                     	;# 
  2311  028D                     	;# 
  2312  028E                     	;# 
  2313  0291                     	;# 
  2314  0291                     	;# 
  2315  0292                     	;# 
  2316  0293                     	;# 
  2317  0294                     	;# 
  2318  0295                     	;# 
  2319  0295                     	;# 
  2320  0296                     	;# 
  2321  0297                     	;# 
  2322  0298                     	;# 
  2323  029F                     	;# 
  2324  030C                     	;# 
  2325  030D                     	;# 
  2326  030E                     	;# 
  2327  0311                     	;# 
  2328  0311                     	;# 
  2329  0312                     	;# 
  2330  0313                     	;# 
  2331  0314                     	;# 
  2332  0315                     	;# 
  2333  0315                     	;# 
  2334  0316                     	;# 
  2335  0317                     	;# 
  2336  0318                     	;# 
  2337  038C                     	;# 
  2338  038D                     	;# 
  2339  038E                     	;# 
  2340  0391                     	;# 
  2341  0392                     	;# 
  2342  0393                     	;# 
  2343  0394                     	;# 
  2344  0395                     	;# 
  2345  0396                     	;# 
  2346  0397                     	;# 
  2347  0398                     	;# 
  2348  0399                     	;# 
  2349  039A                     	;# 
  2350  039C                     	;# 
  2351  039D                     	;# 
  2352  039E                     	;# 
  2353  039F                     	;# 
  2354  0411                     	;# 
  2355  0411                     	;# 
  2356  0412                     	;# 
  2357  0413                     	;# 
  2358  0414                     	;# 
  2359  0415                     	;# 
  2360  0416                     	;# 
  2361  0417                     	;# 
  2362  0418                     	;# 
  2363  0418                     	;# 
  2364  0419                     	;# 
  2365  041A                     	;# 
  2366  041B                     	;# 
  2367  041C                     	;# 
  2368  041D                     	;# 
  2369  041E                     	;# 
  2370  041F                     	;# 
  2371  0498                     	;# 
  2372  0498                     	;# 
  2373  0499                     	;# 
  2374  049A                     	;# 
  2375  049B                     	;# 
  2376  049B                     	;# 
  2377  049C                     	;# 
  2378  049D                     	;# 
  2379  049E                     	;# 
  2380  049F                     	;# 
  2381  0617                     	;# 
  2382  0618                     	;# 
  2383  0619                     	;# 
  2384  0619                     	;# 
  2385  061A                     	;# 
  2386  061B                     	;# 
  2387  061C                     	;# 
  2388  061C                     	;# 
  2389  061F                     	;# 
  2390  0691                     	;# 
  2391  0692                     	;# 
  2392  0693                     	;# 
  2393  0694                     	;# 
  2394  0695                     	;# 
  2395  0696                     	;# 
  2396  0697                     	;# 
  2397  0698                     	;# 
  2398  0699                     	;# 
  2399  0711                     	;# 
  2400  0712                     	;# 
  2401  0713                     	;# 
  2402  0714                     	;# 
  2403  0715                     	;# 
  2404  0716                     	;# 
  2405  0717                     	;# 
  2406  0718                     	;# 
  2407  0719                     	;# 
  2408  0891                     	;# 
  2409  0891                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0892                     	;# 
  2415  0892                     	;# 
  2416  0892                     	;# 
  2417  0893                     	;# 
  2418  0893                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0894                     	;# 
  2424  0894                     	;# 
  2425  0894                     	;# 
  2426  0895                     	;# 
  2427  0895                     	;# 
  2428  0895                     	;# 
  2429  0896                     	;# 
  2430  0896                     	;# 
  2431  0896                     	;# 
  2432  089B                     	;# 
  2433  0911                     	;# 
  2434  0912                     	;# 
  2435  0913                     	;# 
  2436  0914                     	;# 
  2437  0915                     	;# 
  2438  0916                     	;# 
  2439  0918                     	;# 
  2440  0919                     	;# 
  2441  091A                     	;# 
  2442  091B                     	;# 
  2443  091C                     	;# 
  2444  091D                     	;# 
  2445  091E                     	;# 
  2446  091F                     	;# 
  2447  0E0F                     	;# 
  2448  0E10                     	;# 
  2449  0E11                     	;# 
  2450  0E12                     	;# 
  2451  0E13                     	;# 
  2452  0E14                     	;# 
  2453  0E15                     	;# 
  2454  0E16                     	;# 
  2455  0E17                     	;# 
  2456  0E18                     	;# 
  2457  0E19                     	;# 
  2458  0E1A                     	;# 
  2459  0E1B                     	;# 
  2460  0E1C                     	;# 
  2461  0E1D                     	;# 
  2462  0E1E                     	;# 
  2463  0E1F                     	;# 
  2464  0E20                     	;# 
  2465  0E21                     	;# 
  2466  0E22                     	;# 
  2467  0E24                     	;# 
  2468  0E25                     	;# 
  2469  0E28                     	;# 
  2470  0E29                     	;# 
  2471  0E2A                     	;# 
  2472  0E2B                     	;# 
  2473  0E2C                     	;# 
  2474  0E2D                     	;# 
  2475  0E2E                     	;# 
  2476  0E2F                     	;# 
  2477  0E90                     	;# 
  2478  0E91                     	;# 
  2479  0E92                     	;# 
  2480  0E94                     	;# 
  2481  0E95                     	;# 
  2482  0E9C                     	;# 
  2483  0E9D                     	;# 
  2484  0E9E                     	;# 
  2485  0E9F                     	;# 
  2486  0EA0                     	;# 
  2487  0EA1                     	;# 
  2488  0EA2                     	;# 
  2489  0EA3                     	;# 
  2490  0EA4                     	;# 
  2491  0EA5                     	;# 
  2492  0EA6                     	;# 
  2493  0EA7                     	;# 
  2494  0F0F                     	;# 
  2495  0F10                     	;# 
  2496  0F11                     	;# 
  2497  0F12                     	;# 
  2498  0F13                     	;# 
  2499  0F14                     	;# 
  2500  0F15                     	;# 
  2501  0F16                     	;# 
  2502  0F17                     	;# 
  2503  0F18                     	;# 
  2504  0F19                     	;# 
  2505  0F1A                     	;# 
  2506  0F1B                     	;# 
  2507  0F1C                     	;# 
  2508  0F1D                     	;# 
  2509  0F1E                     	;# 
  2510  0F1F                     	;# 
  2511  0F20                     	;# 
  2512  0F21                     	;# 
  2513  0F22                     	;# 
  2514  0F23                     	;# 
  2515  0F24                     	;# 
  2516  0F25                     	;# 
  2517  0F26                     	;# 
  2518  0F27                     	;# 
  2519  0F28                     	;# 
  2520  0F29                     	;# 
  2521  0F2A                     	;# 
  2522  0F2B                     	;# 
  2523  0F2C                     	;# 
  2524  0F2D                     	;# 
  2525  0F2E                     	;# 
  2526  0F2F                     	;# 
  2527  0F30                     	;# 
  2528  0F31                     	;# 
  2529  0F32                     	;# 
  2530  0F33                     	;# 
  2531  0F34                     	;# 
  2532  0F35                     	;# 
  2533  0F36                     	;# 
  2534  0F37                     	;# 
  2535  0FE4                     	;# 
  2536  0FE5                     	;# 
  2537  0FE6                     	;# 
  2538  0FE7                     	;# 
  2539  0FE8                     	;# 
  2540  0FE9                     	;# 
  2541  0FEA                     	;# 
  2542  0FEB                     	;# 
  2543  0FED                     	;# 
  2544  0FEE                     	;# 
  2545  0FEF                     	;# 
  2546  0000                     	;# 
  2547  0001                     	;# 
  2548  0002                     	;# 
  2549  0003                     	;# 
  2550  0004                     	;# 
  2551  0005                     	;# 
  2552  0006                     	;# 
  2553  0007                     	;# 
  2554  0008                     	;# 
  2555  0009                     	;# 
  2556  000A                     	;# 
  2557  000B                     	;# 
  2558  000C                     	;# 
  2559  000D                     	;# 
  2560  000E                     	;# 
  2561  0010                     	;# 
  2562  0011                     	;# 
  2563  0012                     	;# 
  2564  0013                     	;# 
  2565  0014                     	;# 
  2566  0015                     	;# 
  2567  0015                     	;# 
  2568  0016                     	;# 
  2569  0016                     	;# 
  2570  0017                     	;# 
  2571  0018                     	;# 
  2572  0019                     	;# 
  2573  0019                     	;# 
  2574  001A                     	;# 
  2575  001B                     	;# 
  2576  001C                     	;# 
  2577  001D                     	;# 
  2578  001E                     	;# 
  2579  001F                     	;# 
  2580  008C                     	;# 
  2581  008D                     	;# 
  2582  008E                     	;# 
  2583  0090                     	;# 
  2584  0091                     	;# 
  2585  0092                     	;# 
  2586  0093                     	;# 
  2587  0094                     	;# 
  2588  0097                     	;# 
  2589  009B                     	;# 
  2590  009B                     	;# 
  2591  009C                     	;# 
  2592  009D                     	;# 
  2593  009E                     	;# 
  2594  009F                     	;# 
  2595  010C                     	;# 
  2596  010D                     	;# 
  2597  010E                     	;# 
  2598  0111                     	;# 
  2599  0112                     	;# 
  2600  0113                     	;# 
  2601  0114                     	;# 
  2602  0115                     	;# 
  2603  0116                     	;# 
  2604  0117                     	;# 
  2605  0118                     	;# 
  2606  0119                     	;# 
  2607  018C                     	;# 
  2608  018D                     	;# 
  2609  018E                     	;# 
  2610  0197                     	;# 
  2611  0199                     	;# 
  2612  0199                     	;# 
  2613  0199                     	;# 
  2614  019A                     	;# 
  2615  019A                     	;# 
  2616  019A                     	;# 
  2617  019B                     	;# 
  2618  019B                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019C                     	;# 
  2623  019C                     	;# 
  2624  019C                     	;# 
  2625  019D                     	;# 
  2626  019D                     	;# 
  2627  019D                     	;# 
  2628  019E                     	;# 
  2629  019E                     	;# 
  2630  019E                     	;# 
  2631  019F                     	;# 
  2632  019F                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  020C                     	;# 
  2637  020D                     	;# 
  2638  020E                     	;# 
  2639  0211                     	;# 
  2640  0211                     	;# 
  2641  0212                     	;# 
  2642  0212                     	;# 
  2643  0213                     	;# 
  2644  0213                     	;# 
  2645  0214                     	;# 
  2646  0214                     	;# 
  2647  0215                     	;# 
  2648  0215                     	;# 
  2649  0215                     	;# 
  2650  0215                     	;# 
  2651  0216                     	;# 
  2652  0216                     	;# 
  2653  0217                     	;# 
  2654  0217                     	;# 
  2655  0219                     	;# 
  2656  021A                     	;# 
  2657  021B                     	;# 
  2658  021C                     	;# 
  2659  021D                     	;# 
  2660  021D                     	;# 
  2661  021E                     	;# 
  2662  021F                     	;# 
  2663  028C                     	;# 
  2664  028D                     	;# 
  2665  028E                     	;# 
  2666  0291                     	;# 
  2667  0291                     	;# 
  2668  0292                     	;# 
  2669  0293                     	;# 
  2670  0294                     	;# 
  2671  0295                     	;# 
  2672  0295                     	;# 
  2673  0296                     	;# 
  2674  0297                     	;# 
  2675  0298                     	;# 
  2676  029F                     	;# 
  2677  030C                     	;# 
  2678  030D                     	;# 
  2679  030E                     	;# 
  2680  0311                     	;# 
  2681  0311                     	;# 
  2682  0312                     	;# 
  2683  0313                     	;# 
  2684  0314                     	;# 
  2685  0315                     	;# 
  2686  0315                     	;# 
  2687  0316                     	;# 
  2688  0317                     	;# 
  2689  0318                     	;# 
  2690  038C                     	;# 
  2691  038D                     	;# 
  2692  038E                     	;# 
  2693  0391                     	;# 
  2694  0392                     	;# 
  2695  0393                     	;# 
  2696  0394                     	;# 
  2697  0395                     	;# 
  2698  0396                     	;# 
  2699  0397                     	;# 
  2700  0398                     	;# 
  2701  0399                     	;# 
  2702  039A                     	;# 
  2703  039C                     	;# 
  2704  039D                     	;# 
  2705  039E                     	;# 
  2706  039F                     	;# 
  2707  0411                     	;# 
  2708  0411                     	;# 
  2709  0412                     	;# 
  2710  0413                     	;# 
  2711  0414                     	;# 
  2712  0415                     	;# 
  2713  0416                     	;# 
  2714  0417                     	;# 
  2715  0418                     	;# 
  2716  0418                     	;# 
  2717  0419                     	;# 
  2718  041A                     	;# 
  2719  041B                     	;# 
  2720  041C                     	;# 
  2721  041D                     	;# 
  2722  041E                     	;# 
  2723  041F                     	;# 
  2724  0498                     	;# 
  2725  0498                     	;# 
  2726  0499                     	;# 
  2727  049A                     	;# 
  2728  049B                     	;# 
  2729  049B                     	;# 
  2730  049C                     	;# 
  2731  049D                     	;# 
  2732  049E                     	;# 
  2733  049F                     	;# 
  2734  0617                     	;# 
  2735  0618                     	;# 
  2736  0619                     	;# 
  2737  0619                     	;# 
  2738  061A                     	;# 
  2739  061B                     	;# 
  2740  061C                     	;# 
  2741  061C                     	;# 
  2742  061F                     	;# 
  2743  0691                     	;# 
  2744  0692                     	;# 
  2745  0693                     	;# 
  2746  0694                     	;# 
  2747  0695                     	;# 
  2748  0696                     	;# 
  2749  0697                     	;# 
  2750  0698                     	;# 
  2751  0699                     	;# 
  2752  0711                     	;# 
  2753  0712                     	;# 
  2754  0713                     	;# 
  2755  0714                     	;# 
  2756  0715                     	;# 
  2757  0716                     	;# 
  2758  0717                     	;# 
  2759  0718                     	;# 
  2760  0719                     	;# 
  2761  0891                     	;# 
  2762  0891                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0892                     	;# 
  2768  0892                     	;# 
  2769  0892                     	;# 
  2770  0893                     	;# 
  2771  0893                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0894                     	;# 
  2777  0894                     	;# 
  2778  0894                     	;# 
  2779  0895                     	;# 
  2780  0895                     	;# 
  2781  0895                     	;# 
  2782  0896                     	;# 
  2783  0896                     	;# 
  2784  0896                     	;# 
  2785  089B                     	;# 
  2786  0911                     	;# 
  2787  0912                     	;# 
  2788  0913                     	;# 
  2789  0914                     	;# 
  2790  0915                     	;# 
  2791  0916                     	;# 
  2792  0918                     	;# 
  2793  0919                     	;# 
  2794  091A                     	;# 
  2795  091B                     	;# 
  2796  091C                     	;# 
  2797  091D                     	;# 
  2798  091E                     	;# 
  2799  091F                     	;# 
  2800  0E0F                     	;# 
  2801  0E10                     	;# 
  2802  0E11                     	;# 
  2803  0E12                     	;# 
  2804  0E13                     	;# 
  2805  0E14                     	;# 
  2806  0E15                     	;# 
  2807  0E16                     	;# 
  2808  0E17                     	;# 
  2809  0E18                     	;# 
  2810  0E19                     	;# 
  2811  0E1A                     	;# 
  2812  0E1B                     	;# 
  2813  0E1C                     	;# 
  2814  0E1D                     	;# 
  2815  0E1E                     	;# 
  2816  0E1F                     	;# 
  2817  0E20                     	;# 
  2818  0E21                     	;# 
  2819  0E22                     	;# 
  2820  0E24                     	;# 
  2821  0E25                     	;# 
  2822  0E28                     	;# 
  2823  0E29                     	;# 
  2824  0E2A                     	;# 
  2825  0E2B                     	;# 
  2826  0E2C                     	;# 
  2827  0E2D                     	;# 
  2828  0E2E                     	;# 
  2829  0E2F                     	;# 
  2830  0E90                     	;# 
  2831  0E91                     	;# 
  2832  0E92                     	;# 
  2833  0E94                     	;# 
  2834  0E95                     	;# 
  2835  0E9C                     	;# 
  2836  0E9D                     	;# 
  2837  0E9E                     	;# 
  2838  0E9F                     	;# 
  2839  0EA0                     	;# 
  2840  0EA1                     	;# 
  2841  0EA2                     	;# 
  2842  0EA3                     	;# 
  2843  0EA4                     	;# 
  2844  0EA5                     	;# 
  2845  0EA6                     	;# 
  2846  0EA7                     	;# 
  2847  0F0F                     	;# 
  2848  0F10                     	;# 
  2849  0F11                     	;# 
  2850  0F12                     	;# 
  2851  0F13                     	;# 
  2852  0F14                     	;# 
  2853  0F15                     	;# 
  2854  0F16                     	;# 
  2855  0F17                     	;# 
  2856  0F18                     	;# 
  2857  0F19                     	;# 
  2858  0F1A                     	;# 
  2859  0F1B                     	;# 
  2860  0F1C                     	;# 
  2861  0F1D                     	;# 
  2862  0F1E                     	;# 
  2863  0F1F                     	;# 
  2864  0F20                     	;# 
  2865  0F21                     	;# 
  2866  0F22                     	;# 
  2867  0F23                     	;# 
  2868  0F24                     	;# 
  2869  0F25                     	;# 
  2870  0F26                     	;# 
  2871  0F27                     	;# 
  2872  0F28                     	;# 
  2873  0F29                     	;# 
  2874  0F2A                     	;# 
  2875  0F2B                     	;# 
  2876  0F2C                     	;# 
  2877  0F2D                     	;# 
  2878  0F2E                     	;# 
  2879  0F2F                     	;# 
  2880  0F30                     	;# 
  2881  0F31                     	;# 
  2882  0F32                     	;# 
  2883  0F33                     	;# 
  2884  0F34                     	;# 
  2885  0F35                     	;# 
  2886  0F36                     	;# 
  2887  0F37                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE9                     	;# 
  2894  0FEA                     	;# 
  2895  0FEB                     	;# 
  2896  0FED                     	;# 
  2897  0FEE                     	;# 
  2898  0FEF                     	;# 
  2899                           
  2900                           	psect	idataBANK0
  2901  0520                     __pidataBANK0:	
  2902                           
  2903                           ;initializer for _event
  2904  0520  3401               	retlw	1
  2905                           
  2906                           	psect	nvBANK0
  2907  0025                     __pnvBANK0:	
  2908  0025                     _timer1ReloadVal:	
  2909  0025                     	ds	2
  2910  001F                     _T2CONbits	set	31
  2911  001F                     _T2CON	set	31
  2912  001D                     _TMR2	set	29
  2913  001E                     _PR2	set	30
  2914  001C                     _T1GCONbits	set	28
  2915  001B                     _T1CONbits	set	27
  2916  001B                     _T1CON	set	27
  2917  0011                     _PIR1bits	set	17
  2918  0019                     _TMR1L	set	25
  2919  001A                     _TMR1H	set	26
  2920  001C                     _T1GCON	set	28
  2921  000E                     _PORTCbits	set	14
  2922  0088                     _TMR1IF	set	136
  2923  009D                     _ADCON0bits	set	157
  2924  009C                     _ADRESH	set	156
  2925  009B                     _ADRESL	set	155
  2926  009F                     _ADACT	set	159
  2927  009E                     _ADCON1	set	158
  2928  009D                     _ADCON0	set	157
  2929  008E                     _TRISC	set	142
  2930  008D                     _TRISB	set	141
  2931  008C                     _TRISA	set	140
  2932  0097                     _WDTCON	set	151
  2933  010E                     _LATC	set	270
  2934  010D                     _LATB	set	269
  2935  010C                     _LATAbits	set	268
  2936  010E                     _LATCbits	set	270
  2937  010C                     _LATA	set	268
  2938  018C                     _ANSELA	set	396
  2939  018D                     _ANSELB	set	397
  2940  018E                     _ANSELC	set	398
  2941  020E                     _WPUC	set	526
  2942  020C                     _WPUA	set	524
  2943  020D                     _WPUB	set	525
  2944  0293                     _CCP1CONbits	set	659
  2945  029F                     _CCPTMRSbits	set	671
  2946  0291                     _CCPR1L	set	657
  2947  0292                     _CCPR1H	set	658
  2948  0293                     _CCP1CON	set	659
  2949  028E                     _ODCONC	set	654
  2950  028D                     _ODCONB	set	653
  2951  028C                     _ODCONA	set	652
  2952  030E                     _SLRCONC	set	782
  2953  030D                     _SLRCONB	set	781
  2954  030C                     _SLRCONA	set	780
  2955  0916                     _PMD5	set	2326
  2956  0915                     _PMD4	set	2325
  2957  0914                     _PMD3	set	2324
  2958  0913                     _PMD2	set	2323
  2959  0912                     _PMD1	set	2322
  2960  0911                     _PMD0	set	2321
  2961  091E                     _OSCTUNE	set	2334
  2962  091F                     _OSCFRQ	set	2335
  2963  091D                     _OSCEN	set	2333
  2964  091B                     _OSCCON3	set	2331
  2965  0919                     _OSCCON1	set	2329
  2966  0EA5                     _RC5PPS	set	3749
  2967                           
  2968                           ; #config settings
  2969  0000                     
  2970                           	psect	cinit
  2971  07F0                     start_initialization:	
  2972  07F0                     __initialization:	
  2973                           
  2974                           ; Initialize objects allocated to BANK0
  2975  07F0  3185  2520         	fcall	__pidataBANK0	;fetch initializer
  2976  07F2  00A7               	movwf	__pdataBANK0& (0+127)
  2977                           
  2978                           ; Clear objects allocated to COMMON
  2979  07F3  01F9               	clrf	__pbssCOMMON& (0+127)
  2980  07F4  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2981  07F5  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2982  07F6  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2983  07F7  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  2984                           
  2985                           ; Clear objects allocated to BANK0
  2986  07F8  01A0               	clrf	__pbssBANK0& (0+127)
  2987  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  2988  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  2989  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  2990  07FC  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  2991  07FD                     end_of_initialization:	
  2992                           ;End of C runtime variable initialization code
  2993                           
  2994  07FD                     __end_of__initialization:	
  2995  07FD  0020               	movlb	0
  2996  07FE  3186  2E9B         	ljmp	_main	;jump to C main() function
  2997                           
  2998                           	psect	bssCOMMON
  2999  0079                     __pbssCOMMON:	
  3000  0079                     _state:	
  3001  0079                     	ds	1
  3002  007A                     _button:	
  3003  007A                     	ds	1
  3004  007B                     _switch1:	
  3005  007B                     	ds	1
  3006  007C                     _rotateVal:	
  3007  007C                     	ds	1
  3008  007D                     _adcResult:	
  3009  007D                     	ds	1
  3010                           
  3011                           	psect	bssBANK0
  3012  0020                     __pbssBANK0:	
  3013  0020                     _adcResult2:	
  3014  0020                     	ds	2
  3015  0022                     _pause:	
  3016  0022                     	ds	1
  3017  0023                     _delayVal:	
  3018  0023                     	ds	1
  3019  0024                     _secondCount:	
  3020  0024                     	ds	1
  3021                           
  3022                           	psect	dataBANK0
  3023  0027                     __pdataBANK0:	
  3024  0027                     _event:	
  3025  0027                     	ds	1
  3026                           
  3027                           	psect	cstackCOMMON
  3028  0070                     __pcstackCOMMON:	
  3029  0070                     ?_SYSTEM_Initialize:	
  3030  0070                     ??_SYSTEM_Initialize:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0070                     ?_checkButtonS1:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0070                     ??_checkButtonS1:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0070                     ?_HelloWorld:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0070                     ??_HelloWorld:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0070                     ?_Blink:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0070                     ?_Rotate:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0070                     ??_Rotate:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054  0070                     ?_ADC:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057  0070                     ?_VSR:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060  0070                     ?_PWM:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0070                     ?_next:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0070                     ??_next:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0070                     ?_TMR1_StartTimer:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0070                     ??_TMR1_StartTimer:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0070                     ?_TMR1_HasOverflowOccured:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0070                     ??_TMR1_HasOverflowOccured:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0070                     ?_TMR1_Reload:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0070                     ?_TMR1_StopTimer:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0070                     ??_TMR1_StopTimer:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0070                     ?_PWM_Output_D7_Enable:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0070                     ??_PWM_Output_D7_Enable:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0070                     ?_TMR2_StartTimer:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0070                     ??_TMR2_StartTimer:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0070                     ?_PWM1_LoadDutyValue:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0070                     ?_PWM_Output_D7_Disable:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0070                     ??_PWM_Output_D7_Disable:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0070                     ?_PMD_Initialize:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0070                     ??_PMD_Initialize:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0070                     ?_PIN_MANAGER_Initialize:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0070                     ??_PIN_MANAGER_Initialize:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0070                     ?_OSCILLATOR_Initialize:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0070                     ??_OSCILLATOR_Initialize:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129  0070                     ?_WDT_Initialize:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0070                     ??_WDT_Initialize:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135  0070                     ?_PWM1_Initialize:	
  3136                           ; 1 bytes @ 0x0
  3137                           
  3138  0070                     ??_PWM1_Initialize:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141  0070                     ?_ADC_Initialize:	
  3142                           ; 1 bytes @ 0x0
  3143                           
  3144  0070                     ??_ADC_Initialize:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147  0070                     ?_TMR2_Initialize:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150  0070                     ??_TMR2_Initialize:	
  3151                           ; 1 bytes @ 0x0
  3152                           
  3153  0070                     ?_TMR1_Initialize:	
  3154                           ; 1 bytes @ 0x0
  3155                           
  3156  0070                     ??_TMR1_Initialize:	
  3157                           ; 1 bytes @ 0x0
  3158                           
  3159  0070                     ?_main:	
  3160                           ; 1 bytes @ 0x0
  3161                           
  3162  0070                     ?_TMR1_WriteTimer:	
  3163                           ; 1 bytes @ 0x0
  3164                           
  3165  0070                     ?_ADC_GetConversion:	
  3166                           ; 1 bytes @ 0x0
  3167                           
  3168  0070                     TMR1_WriteTimer@timerVal:	
  3169                           ; 2 bytes @ 0x0
  3170                           
  3171  0070                     PWM1_LoadDutyValue@dutyValue:	
  3172                           ; 2 bytes @ 0x0
  3173                           
  3174                           
  3175                           ; 2 bytes @ 0x0
  3176  0070                     	ds	2
  3177  0072                     ??_Blink:	
  3178  0072                     ??_TMR1_Reload:	
  3179                           ; 1 bytes @ 0x2
  3180                           
  3181  0072                     ??_ADC_GetConversion:	
  3182                           ; 1 bytes @ 0x2
  3183                           
  3184  0072                     ??_PWM1_LoadDutyValue:	
  3185                           ; 1 bytes @ 0x2
  3186                           
  3187  0072                     ??_TMR1_WriteTimer:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190                           
  3191                           ; 1 bytes @ 0x2
  3192  0072                     	ds	1
  3193  0073                     ADC_GetConversion@channel:	
  3194                           
  3195                           ; 1 bytes @ 0x3
  3196  0073                     	ds	1
  3197  0074                     ??_ADC:	
  3198  0074                     ??_VSR:	
  3199                           ; 1 bytes @ 0x4
  3200                           
  3201  0074                     ??_PWM:	
  3202                           ; 1 bytes @ 0x4
  3203                           
  3204                           
  3205                           ; 1 bytes @ 0x4
  3206  0074                     	ds	3
  3207  0077                     ??_main:	
  3208                           
  3209                           ; 1 bytes @ 0x7
  3210  0077                     	ds	2
  3211                           
  3212                           	psect	maintext
  3213  069B                     __pmaintext:	
  3214 ;;
  3215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3216 ;;
  3217 ;; *************** function _main *****************
  3218 ;; Defined at:
  3219 ;;		line 85 in file "main.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : B1F/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels required when called:    3
  3239 ;; This function calls:
  3240 ;;		_ADC
  3241 ;;		_Blink
  3242 ;;		_HelloWorld
  3243 ;;		_PWM
  3244 ;;		_Rotate
  3245 ;;		_SYSTEM_Initialize
  3246 ;;		_VSR
  3247 ;;		_checkButtonS1
  3248 ;;		_next
  3249 ;; This function is called by:
  3250 ;;		Startup code after reset
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _main
  3256  069B                     _main:	
  3257                           
  3258                           ;main.c: 88:     SYSTEM_Initialize();
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3262  069B  3185  25D5  3186   	fcall	_SYSTEM_Initialize
  3263  069E                     l75:	
  3264                           ;main.c: 105:     while (1)
  3265                           
  3266                           
  3267                           ;main.c: 106:     {;main.c: 108:         checkButtonS1();
  3268  069E  3185  25ED  3186   	fcall	_checkButtonS1
  3269                           
  3270                           ;main.c: 109:         switch(event) {
  3271  06A1  2EBA               	goto	l1732
  3272  06A2                     l1718:	
  3273  06A2  3185  25AB  3186   	fcall	_HelloWorld
  3274  06A5  2ED7               	goto	l1734
  3275  06A6                     l1720:	
  3276  06A6  3186  2627  3186   	fcall	_Blink
  3277  06A9  2ED7               	goto	l1734
  3278  06AA                     l1722:	
  3279  06AA  3187  2732  3186   	fcall	_Rotate
  3280  06AD  2ED7               	goto	l1734
  3281  06AE                     l1724:	
  3282  06AE  3186  26DE  3186   	fcall	_ADC
  3283  06B1  2ED7               	goto	l1734
  3284  06B2                     l1726:	
  3285  06B2  3187  2788  3186   	fcall	_VSR
  3286  06B5  2ED7               	goto	l1734
  3287  06B6                     l1728:	
  3288  06B6  3186  265D  3186   	fcall	_PWM
  3289  06B9  2ED7               	goto	l1734
  3290  06BA                     l1732:	
  3291  06BA  0020               	movlb	0	; select bank0
  3292  06BB  0827               	movf	_event,w
  3293  06BC  00F7               	movwf	??_main
  3294  06BD  01F8               	clrf	??_main+1
  3295                           
  3296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3297                           ; Switch size 1, requested type "simple"
  3298                           ; Number of cases is 1, Range of values is 0 to 0
  3299                           ; switch strategies available:
  3300                           ; Name         Instructions Cycles
  3301                           ; simple_byte            4     3 (average)
  3302                           ; direct_byte            8     6 (fixed)
  3303                           ; jumptable            260     6 (fixed)
  3304                           ;	Chosen strategy is simple_byte
  3305  06BE  0878               	movf	??_main+1,w
  3306  06BF  3A00               	xorlw	0	; case 0
  3307  06C0  1903               	skipnz
  3308  06C1  2EC3               	goto	l1762
  3309  06C2  2ED7               	goto	l1734
  3310  06C3                     l1762:	
  3311                           
  3312                           ; Switch size 1, requested type "simple"
  3313                           ; Number of cases is 6, Range of values is 1 to 6
  3314                           ; switch strategies available:
  3315                           ; Name         Instructions Cycles
  3316                           ; simple_byte           19    10 (average)
  3317                           ; direct_byte           21     9 (fixed)
  3318                           ; jumptable            263     9 (fixed)
  3319                           ;	Chosen strategy is simple_byte
  3320  06C3  0877               	movf	??_main,w
  3321  06C4  3A01               	xorlw	1	; case 1
  3322  06C5  1903               	skipnz
  3323  06C6  2EA2               	goto	l1718
  3324  06C7  3A03               	xorlw	3	; case 2
  3325  06C8  1903               	skipnz
  3326  06C9  2EA6               	goto	l1720
  3327  06CA  3A01               	xorlw	1	; case 3
  3328  06CB  1903               	skipnz
  3329  06CC  2EAA               	goto	l1722
  3330  06CD  3A07               	xorlw	7	; case 4
  3331  06CE  1903               	skipnz
  3332  06CF  2EAE               	goto	l1724
  3333  06D0  3A01               	xorlw	1	; case 5
  3334  06D1  1903               	skipnz
  3335  06D2  2EB2               	goto	l1726
  3336  06D3  3A03               	xorlw	3	; case 6
  3337  06D4  1903               	skipnz
  3338  06D5  2EB6               	goto	l1728
  3339  06D6  2ED7               	goto	l1734
  3340  06D7                     l1734:	
  3341                           
  3342                           ;main.c: 118:         if(switch1) {
  3343  06D7  087B               	movf	_switch1,w
  3344  06D8  1903               	btfsc	3,2
  3345  06D9  2E9E               	goto	l75
  3346                           
  3347                           ;main.c: 119:             next();
  3348  06DA  3185  258A  3186   	fcall	_next
  3349  06DD  2E9E               	goto	l75
  3350  06DE                     __end_of_main:	
  3351                           
  3352                           	psect	text1
  3353  058A                     __ptext1:	
  3354 ;; *************** function _next *****************
  3355 ;; Defined at:
  3356 ;;		line 137 in file "main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;Total ram usage:        1 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _next
  3385  058A                     _next:	
  3386                           
  3387                           ;main.c: 138:     switch1 = 0;
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _next: [wreg+status,2+status,0]
  3391  058A  01FB               	clrf	_switch1
  3392                           
  3393                           ;main.c: 139:     if (!pause){
  3394  058B  0020               	movlb	0	; select bank0
  3395  058C  0822               	movf	_pause,w
  3396  058D  1D03               	btfss	3,2
  3397  058E  0008               	return
  3398                           
  3399                           ;main.c: 140:         event++;
  3400  058F  3001               	movlw	1
  3401  0590  00F0               	movwf	??_next
  3402  0591  0870               	movf	??_next,w
  3403  0592  07A7               	addwf	_event,f
  3404                           
  3405                           ;main.c: 142:         if (event > 6) {
  3406  0593  3007               	movlw	7
  3407  0594  0227               	subwf	_event,w
  3408  0595  1C03               	skipc
  3409  0596  0008               	return
  3410                           
  3411                           ;main.c: 143:             event = 1;
  3412  0597  01A7               	clrf	_event
  3413  0598  0AA7               	incf	_event,f
  3414  0599  0008               	return
  3415  059A                     __end_of_next:	
  3416                           
  3417                           	psect	text2
  3418  05ED                     __ptext2:	
  3419 ;; *************** function _checkButtonS1 *****************
  3420 ;; Defined at:
  3421 ;;		line 125 in file "main.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _checkButtonS1
  3450  05ED                     _checkButtonS1:	
  3451                           
  3452                           ;main.c: 126:     if(button == 0){
  3453                           
  3454                           ;incstack = 0
  3455                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
  3456  05ED  087A               	movf	_button,w
  3457  05EE  1D03               	btfss	3,2
  3458  05EF  2DFE               	goto	l90
  3459                           
  3460                           ;main.c: 127:         if(PORTCbits.RC4 == 0){
  3461  05F0  0020               	movlb	0	; select bank0
  3462  05F1  1A0E               	btfsc	14,4	;volatile
  3463  05F2  0008               	return
  3464                           
  3465                           ;main.c: 128:             _delay((unsigned long)((100)*(500000/4000.0)));
  3466  05F3  3011               	movlw	17
  3467  05F4  00F0               	movwf	??_checkButtonS1
  3468  05F5  303A               	movlw	58
  3469  05F6                     u867:	
  3470  05F6  0B89               	decfsz	9,f
  3471  05F7  2DF6               	goto	u867
  3472  05F8  0BF0               	decfsz	??_checkButtonS1,f
  3473  05F9  2DF6               	goto	u867
  3474  05FA  3200               	nop2
  3475                           
  3476                           ;main.c: 129:             button = 1;
  3477  05FB  01FA               	clrf	_button
  3478  05FC  0AFA               	incf	_button,f
  3479  05FD  0008               	return
  3480  05FE                     l90:	
  3481  05FE  0020               	movlb	0	; select bank0
  3482  05FF  1E0E               	btfss	14,4	;volatile
  3483  0600  0008               	return
  3484                           
  3485                           ;main.c: 132:             button = 0;
  3486  0601  01FA               	clrf	_button
  3487                           
  3488                           ;main.c: 133:             switch1 = 1;
  3489  0602  01FB               	clrf	_switch1
  3490  0603  0AFB               	incf	_switch1,f
  3491  0604  0008               	return
  3492  0605                     __end_of_checkButtonS1:	
  3493                           
  3494                           	psect	text3
  3495  0788                     __ptext3:	
  3496 ;; *************** function _VSR *****************
  3497 ;; Defined at:
  3498 ;;		line 238 in file "main.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		_ADC_GetConversion
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _VSR
  3528  0788                     _VSR:	
  3529                           
  3530                           ;main.c: 239:     if(state == 0) {
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _VSR: [wreg+status,2+status,0+pclath+cstack]
  3534  0788  0879               	movf	_state,w
  3535  0789  1D03               	btfss	3,2
  3536  078A  2F92               	goto	l1664
  3537  078B  0022               	movlb	2	; select bank2
  3538  078C  018C               	clrf	12	;volatile
  3539  078D  128E               	bcf	14,5	;volatile
  3540                           
  3541                           ;main.c: 241:         rotateVal = 1;
  3542  078E  01FC               	clrf	_rotateVal
  3543  078F  0AFC               	incf	_rotateVal,f
  3544                           
  3545                           ;main.c: 242:         state = 1;
  3546  0790  01F9               	clrf	_state
  3547  0791  0AF9               	incf	_state,f
  3548  0792                     l1664:	
  3549                           
  3550                           ;main.c: 244:     if(state == 1) {
  3551  0792  0379               	decf	_state,w
  3552  0793  1D03               	btfss	3,2
  3553  0794  2FEB               	goto	l1678
  3554                           
  3555                           ;main.c: 245:         delayVal = ADC_GetConversion(POT_CHANNEL) >> 8;
  3556  0795  3010               	movlw	16
  3557  0796  3185  25BD  3187   	fcall	_ADC_GetConversion
  3558  0799  0871               	movf	?_ADC_GetConversion+1,w
  3559  079A  00F4               	movwf	??_VSR
  3560  079B  0874               	movf	??_VSR,w
  3561  079C  0020               	movlb	0	; select bank0
  3562  079D  00A3               	movwf	_delayVal
  3563                           
  3564                           ;main.c: 246:         _delay((unsigned long)((5)*(500000/4000.0)));
  3565  079E  30D0               	movlw	208
  3566  079F                     u877:	
  3567  079F  0B89               	decfsz	9,f
  3568  07A0  2F9F               	goto	u877
  3569  07A1  0000               	nop
  3570  07A2                     l1672:	
  3571                           ;main.c: 248:         while(delayVal -- != 0) {
  3572                           
  3573                           
  3574                           ;main.c: 248:         while(delayVal -- != 0) {
  3575  07A2  3001               	movlw	1
  3576  07A3  0020               	movlb	0	; select bank0
  3577  07A4  02A3               	subwf	_delayVal,f
  3578  07A5  0A23               	incf	_delayVal,w
  3579  07A6  1903               	btfsc	3,2
  3580  07A7  2FAD               	goto	l1674
  3581                           
  3582                           ;main.c: 249:             _delay((unsigned long)((2)*(500000/4000.0)));
  3583  07A8  3053               	movlw	83
  3584  07A9                     u887:	
  3585  07A9  0B89               	decfsz	9,f
  3586  07AA  2FA9               	goto	u887
  3587  07AB  0000               	nop
  3588  07AC  2FA2               	goto	l1672
  3589  07AD                     l1674:	
  3590                           
  3591                           ;main.c: 252:         LATAbits.LATA5 = rotateVal & 1;
  3592  07AD  087C               	movf	_rotateVal,w
  3593  07AE  3901               	andlw	1
  3594  07AF  00F4               	movwf	??_VSR
  3595  07B0  0EF4               	swapf	??_VSR,f
  3596  07B1  0DF4               	rlf	??_VSR,f
  3597  07B2  0022               	movlb	2	; select bank2
  3598  07B3  080C               	movf	12,w	;volatile
  3599  07B4  0674               	xorwf	??_VSR,w
  3600  07B5  39DF               	andlw	-33
  3601  07B6  0674               	xorwf	??_VSR,w
  3602  07B7  008C               	movwf	12	;volatile
  3603                           
  3604                           ;main.c: 253:         LATAbits.LATA1 = (rotateVal & 2) >> 1;
  3605  07B8  367C               	lsrf	_rotateVal,w
  3606  07B9  3901               	andlw	1
  3607  07BA  00F4               	movwf	??_VSR
  3608  07BB  0DF4               	rlf	??_VSR,f
  3609  07BC  080C               	movf	12,w	;volatile
  3610  07BD  0674               	xorwf	??_VSR,w
  3611  07BE  39FD               	andlw	-3
  3612  07BF  0674               	xorwf	??_VSR,w
  3613  07C0  008C               	movwf	12	;volatile
  3614                           
  3615                           ;main.c: 254:         LATAbits.LATA2 = (rotateVal & 4) >> 2;
  3616  07C1  087C               	movf	_rotateVal,w
  3617  07C2  00F4               	movwf	??_VSR
  3618  07C3  3002               	movlw	2
  3619  07C4                     u755:	
  3620  07C4  36F4               	lsrf	??_VSR,f
  3621  07C5  0B89               	decfsz	9,f
  3622  07C6  2FC4               	goto	u755
  3623  07C7  0874               	movf	??_VSR,w
  3624  07C8  3901               	andlw	1
  3625  07C9  00F5               	movwf	??_VSR+1
  3626  07CA  0DF5               	rlf	??_VSR+1,f
  3627  07CB  0DF5               	rlf	??_VSR+1,f
  3628  07CC  080C               	movf	12,w	;volatile
  3629  07CD  0675               	xorwf	??_VSR+1,w
  3630  07CE  39FB               	andlw	-5
  3631  07CF  0675               	xorwf	??_VSR+1,w
  3632  07D0  008C               	movwf	12	;volatile
  3633                           
  3634                           ;main.c: 255:         LATCbits.LATC5 = (rotateVal & 8) >> 3;
  3635  07D1  087C               	movf	_rotateVal,w
  3636  07D2  00F4               	movwf	??_VSR
  3637  07D3  3003               	movlw	3
  3638  07D4                     u765:	
  3639  07D4  36F4               	lsrf	??_VSR,f
  3640  07D5  0B89               	decfsz	9,f
  3641  07D6  2FD4               	goto	u765
  3642  07D7  0874               	movf	??_VSR,w
  3643  07D8  3901               	andlw	1
  3644  07D9  00F5               	movwf	??_VSR+1
  3645  07DA  0EF5               	swapf	??_VSR+1,f
  3646  07DB  0DF5               	rlf	??_VSR+1,f
  3647  07DC  080E               	movf	14,w	;volatile
  3648  07DD  0675               	xorwf	??_VSR+1,w
  3649  07DE  39DF               	andlw	-33
  3650  07DF  0675               	xorwf	??_VSR+1,w
  3651  07E0  008E               	movwf	14	;volatile
  3652                           
  3653                           ;main.c: 257:         rotateVal = rotateVal << 1;
  3654  07E1  357C               	lslf	_rotateVal,w
  3655  07E2  00F4               	movwf	??_VSR
  3656  07E3  0874               	movf	??_VSR,w
  3657  07E4  00FC               	movwf	_rotateVal
  3658                           
  3659                           ;main.c: 259:         if(rotateVal == 16) {
  3660  07E5  3010               	movlw	16
  3661  07E6  067C               	xorwf	_rotateVal,w
  3662  07E7  1D03               	btfss	3,2
  3663  07E8  2FEB               	goto	l1678
  3664                           
  3665                           ;main.c: 260:             rotateVal = 1;
  3666  07E9  01FC               	clrf	_rotateVal
  3667  07EA  0AFC               	incf	_rotateVal,f
  3668  07EB                     l1678:	
  3669                           
  3670                           ;main.c: 264:     if(switch1) {
  3671  07EB  087B               	movf	_switch1,w
  3672  07EC  1903               	btfsc	3,2
  3673  07ED  0008               	return
  3674                           
  3675                           ;main.c: 265:         state = 0;
  3676  07EE  01F9               	clrf	_state
  3677  07EF  0008               	return
  3678  07F0                     __end_of_VSR:	
  3679                           
  3680                           	psect	text4
  3681  05D5                     __ptext4:	
  3682 ;; *************** function _SYSTEM_Initialize *****************
  3683 ;; Defined at:
  3684 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		_ADC_Initialize
  3707 ;;		_OSCILLATOR_Initialize
  3708 ;;		_PIN_MANAGER_Initialize
  3709 ;;		_PMD_Initialize
  3710 ;;		_PWM1_Initialize
  3711 ;;		_TMR1_Initialize
  3712 ;;		_TMR2_Initialize
  3713 ;;		_WDT_Initialize
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           
  3720                           ;psect for function _SYSTEM_Initialize
  3721  05D5                     _SYSTEM_Initialize:	
  3722                           
  3723                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3724                           
  3725                           ;incstack = 0
  3726                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3727  05D5  3185  2551  3185   	fcall	_PMD_Initialize
  3728                           
  3729                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3730  05D8  3186  2605  3185   	fcall	_PIN_MANAGER_Initialize
  3731                           
  3732                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3733  05DB  3185  2549  3185   	fcall	_OSCILLATOR_Initialize
  3734                           
  3735                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3736  05DE  3185  2535  3185   	fcall	_WDT_Initialize
  3737                           
  3738                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3739  05E1  3185  2561  3185   	fcall	_PWM1_Initialize
  3740                           
  3741                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3742  05E4  3185  2541  3185   	fcall	_ADC_Initialize
  3743                           
  3744                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3745  05E7  3185  2559  3185   	fcall	_TMR2_Initialize
  3746                           
  3747                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3748  05EA  3185  256D         	fcall	_TMR1_Initialize
  3749  05EC  0008               	return
  3750  05ED                     __end_of_SYSTEM_Initialize:	
  3751                           
  3752                           	psect	text5
  3753  0535                     __ptext5:	
  3754 ;; *************** function _WDT_Initialize *****************
  3755 ;; Defined at:
  3756 ;;		line 77 in file "mcc_generated_files/mcc.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_SYSTEM_Initialize
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           
  3784                           ;psect for function _WDT_Initialize
  3785  0535                     _WDT_Initialize:	
  3786                           
  3787                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _WDT_Initialize: [wreg]
  3791  0535  3018               	movlw	24
  3792  0536  0021               	movlb	1	; select bank1
  3793  0537  0097               	movwf	23	;volatile
  3794  0538  0008               	return
  3795  0539                     __end_of_WDT_Initialize:	
  3796                           
  3797                           	psect	text6
  3798  0559                     __ptext6:	
  3799 ;; *************** function _TMR2_Initialize *****************
  3800 ;; Defined at:
  3801 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_SYSTEM_Initialize
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function _TMR2_Initialize
  3830  0559                     _TMR2_Initialize:	
  3831                           
  3832                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3836  0559  30FF               	movlw	255
  3837  055A  0020               	movlb	0	; select bank0
  3838  055B  009E               	movwf	30	;volatile
  3839                           
  3840                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3841  055C  019D               	clrf	29	;volatile
  3842                           
  3843                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3844  055D  1091               	bcf	17,1	;volatile
  3845                           
  3846                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  3847  055E  3004               	movlw	4
  3848  055F  009F               	movwf	31	;volatile
  3849  0560  0008               	return
  3850  0561                     __end_of_TMR2_Initialize:	
  3851                           
  3852                           	psect	text7
  3853  056D                     __ptext7:	
  3854 ;; *************** function _TMR1_Initialize *****************
  3855 ;; Defined at:
  3856 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_SYSTEM_Initialize
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _TMR1_Initialize
  3885  056D                     _TMR1_Initialize:	
  3886                           
  3887                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  3891  056D  0020               	movlb	0	; select bank0
  3892  056E  019C               	clrf	28	;volatile
  3893                           
  3894                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  3895  056F  300B               	movlw	11
  3896  0570  009A               	movwf	26	;volatile
  3897                           
  3898                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  3899  0571  30DC               	movlw	220
  3900  0572  0099               	movwf	25	;volatile
  3901                           
  3902                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3903  0573  081A               	movf	26,w	;volatile
  3904  0574  00A6               	movwf	_timer1ReloadVal+1	;volatile
  3905  0575  0819               	movf	25,w	;volatile
  3906  0576  00A5               	movwf	_timer1ReloadVal	;volatile
  3907                           
  3908                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  3909  0577  1011               	bcf	17,0	;volatile
  3910                           
  3911                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  3912  0578  3001               	movlw	1
  3913  0579  009B               	movwf	27	;volatile
  3914  057A  0008               	return
  3915  057B                     __end_of_TMR1_Initialize:	
  3916                           
  3917                           	psect	text8
  3918  0561                     __ptext8:	
  3919 ;; *************** function _PWM1_Initialize *****************
  3920 ;; Defined at:
  3921 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_SYSTEM_Initialize
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _PWM1_Initialize
  3950  0561                     _PWM1_Initialize:	
  3951                           
  3952                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  3956  0561  308F               	movlw	143
  3957  0562  0025               	movlb	5	; select bank5
  3958  0563  0093               	movwf	19	;volatile
  3959                           
  3960                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  3961  0564  3003               	movlw	3
  3962  0565  0092               	movwf	18	;volatile
  3963                           
  3964                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x32;
  3965  0566  3032               	movlw	50
  3966  0567  0091               	movwf	17	;volatile
  3967                           
  3968                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
  3969  0568  081F               	movf	31,w	;volatile
  3970  0569  39FC               	andlw	-4
  3971  056A  3801               	iorlw	1
  3972  056B  009F               	movwf	31	;volatile
  3973  056C  0008               	return
  3974  056D                     __end_of_PWM1_Initialize:	
  3975                           
  3976                           	psect	text9
  3977  0551                     __ptext9:	
  3978 ;; *************** function _PMD_Initialize *****************
  3979 ;; Defined at:
  3980 ;;		line 83 in file "mcc_generated_files/mcc.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		status,2
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_SYSTEM_Initialize
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _PMD_Initialize
  4009  0551                     _PMD_Initialize:	
  4010                           
  4011                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
  4012                           
  4013                           ;incstack = 0
  4014                           ; Regs used in _PMD_Initialize: [status,2]
  4015  0551  0032               	movlb	18	; select bank18
  4016  0552  0191               	clrf	17	;volatile
  4017                           
  4018                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
  4019  0553  0192               	clrf	18	;volatile
  4020                           
  4021                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
  4022  0554  0193               	clrf	19	;volatile
  4023                           
  4024                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
  4025  0555  0194               	clrf	20	;volatile
  4026                           
  4027                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
  4028  0556  0195               	clrf	21	;volatile
  4029                           
  4030                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
  4031  0557  0196               	clrf	22	;volatile
  4032  0558  0008               	return
  4033  0559                     __end_of_PMD_Initialize:	
  4034                           
  4035                           	psect	text10
  4036  0605                     __ptext10:	
  4037 ;; *************** function _PIN_MANAGER_Initialize *****************
  4038 ;; Defined at:
  4039 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_SYSTEM_Initialize
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           
  4067                           ;psect for function _PIN_MANAGER_Initialize
  4068  0605                     _PIN_MANAGER_Initialize:	
  4069                           
  4070                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4071                           
  4072                           ;incstack = 0
  4073                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4074  0605  0022               	movlb	2	; select bank2
  4075  0606  018C               	clrf	12	;volatile
  4076                           
  4077                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4078  0607  018D               	clrf	13	;volatile
  4079                           
  4080                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4081  0608  018E               	clrf	14	;volatile
  4082                           
  4083                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  4084  0609  3011               	movlw	17
  4085  060A  0021               	movlb	1	; select bank1
  4086  060B  008C               	movwf	12	;volatile
  4087                           
  4088                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  4089  060C  30F0               	movlw	240
  4090  060D  008D               	movwf	13	;volatile
  4091                           
  4092                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  4093  060E  30DF               	movlw	223
  4094  060F  008E               	movwf	14	;volatile
  4095                           
  4096                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xEF;
  4097  0610  30EF               	movlw	239
  4098  0611  0023               	movlb	3	; select bank3
  4099  0612  008E               	movwf	14	;volatile
  4100                           
  4101                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF0;
  4102  0613  30F0               	movlw	240
  4103  0614  008D               	movwf	13	;volatile
  4104                           
  4105                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x37;
  4106  0615  3037               	movlw	55
  4107  0616  008C               	movwf	12	;volatile
  4108                           
  4109                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  4110  0617  0024               	movlb	4	; select bank4
  4111  0618  018D               	clrf	13	;volatile
  4112                           
  4113                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  4114  0619  018C               	clrf	12	;volatile
  4115                           
  4116                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  4117  061A  018E               	clrf	14	;volatile
  4118                           
  4119                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  4120  061B  0025               	movlb	5	; select bank5
  4121  061C  018C               	clrf	12	;volatile
  4122                           
  4123                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  4124  061D  018D               	clrf	13	;volatile
  4125                           
  4126                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  4127  061E  018E               	clrf	14	;volatile
  4128                           
  4129                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  4130  061F  3037               	movlw	55
  4131  0620  0026               	movlb	6	; select bank6
  4132  0621  008C               	movwf	12	;volatile
  4133                           
  4134                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  4135  0622  30F0               	movlw	240
  4136  0623  008D               	movwf	13	;volatile
  4137                           
  4138                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  4139  0624  30FF               	movlw	255
  4140  0625  008E               	movwf	14	;volatile
  4141  0626  0008               	return
  4142  0627                     __end_of_PIN_MANAGER_Initialize:	
  4143                           
  4144                           	psect	text11
  4145  0549                     __ptext11:	
  4146 ;; *************** function _OSCILLATOR_Initialize *****************
  4147 ;; Defined at:
  4148 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_SYSTEM_Initialize
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _OSCILLATOR_Initialize
  4177  0549                     _OSCILLATOR_Initialize:	
  4178                           
  4179                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4183  0549  3061               	movlw	97
  4184  054A  0032               	movlb	18	; select bank18
  4185  054B  0099               	movwf	25	;volatile
  4186                           
  4187                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  4188  054C  019B               	clrf	27	;volatile
  4189                           
  4190                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  4191  054D  019D               	clrf	29	;volatile
  4192                           
  4193                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  4194  054E  019F               	clrf	31	;volatile
  4195                           
  4196                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4197  054F  019E               	clrf	30	;volatile
  4198  0550  0008               	return
  4199  0551                     __end_of_OSCILLATOR_Initialize:	
  4200                           
  4201                           	psect	text12
  4202  0541                     __ptext12:	
  4203 ;; *************** function _ADC_Initialize *****************
  4204 ;; Defined at:
  4205 ;;		line 65 in file "mcc_generated_files/adc.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;Total ram usage:        0 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_SYSTEM_Initialize
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _ADC_Initialize
  4234  0541                     _ADC_Initialize:	
  4235                           
  4236                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4240  0541  3001               	movlw	1
  4241  0542  0021               	movlb	1	; select bank1
  4242  0543  009D               	movwf	29	;volatile
  4243                           
  4244                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  4245  0544  019E               	clrf	30	;volatile
  4246                           
  4247                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  4248  0545  019F               	clrf	31	;volatile
  4249                           
  4250                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  4251  0546  019B               	clrf	27	;volatile
  4252                           
  4253                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  4254  0547  019C               	clrf	28	;volatile
  4255  0548  0008               	return
  4256  0549                     __end_of_ADC_Initialize:	
  4257                           
  4258                           	psect	text13
  4259  0732                     __ptext13:	
  4260 ;; *************** function _Rotate *****************
  4261 ;; Defined at:
  4262 ;;		line 187 in file "main.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;Total ram usage:        2 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _Rotate
  4291  0732                     _Rotate:	
  4292                           
  4293                           ;main.c: 188:     if(state == 0) {
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _Rotate: [wreg+status,2+status,0]
  4297  0732  0879               	movf	_state,w
  4298  0733  1D03               	btfss	3,2
  4299  0734  2F3D               	goto	l1618
  4300  0735  0022               	movlb	2	; select bank2
  4301  0736  018C               	clrf	12	;volatile
  4302  0737  128E               	bcf	14,5	;volatile
  4303  0738  168C               	bsf	12,5	;volatile
  4304                           
  4305                           ;main.c: 192:         rotateVal = 1;
  4306  0739  01FC               	clrf	_rotateVal
  4307  073A  0AFC               	incf	_rotateVal,f
  4308                           
  4309                           ;main.c: 194:         state = 1;
  4310  073B  01F9               	clrf	_state
  4311  073C  0AF9               	incf	_state,f
  4312  073D                     l1618:	
  4313                           
  4314                           ;main.c: 197:     if(state == 1) {
  4315  073D  0379               	decf	_state,w
  4316  073E  1D03               	btfss	3,2
  4317  073F  2F83               	goto	l131
  4318                           
  4319                           ;main.c: 198:         _delay((unsigned long)((500)*(500000/4000.0)));
  4320  0740  3052               	movlw	82
  4321  0741  00F0               	movwf	??_Rotate
  4322  0742  302A               	movlw	42
  4323  0743                     u897:	
  4324  0743  0B89               	decfsz	9,f
  4325  0744  2F43               	goto	u897
  4326  0745  0BF0               	decfsz	??_Rotate,f
  4327  0746  2F43               	goto	u897
  4328                           
  4329                           ;main.c: 200:         rotateVal <<= 1;
  4330  0747  1003               	clrc
  4331  0748  0DFC               	rlf	_rotateVal,f
  4332                           
  4333                           ;main.c: 202:         if(rotateVal == 16) {
  4334  0749  3010               	movlw	16
  4335  074A  067C               	xorwf	_rotateVal,w
  4336  074B  1D03               	btfss	3,2
  4337  074C  2F4F               	goto	l1626
  4338                           
  4339                           ;main.c: 203:             rotateVal = 1;
  4340  074D  01FC               	clrf	_rotateVal
  4341  074E  0AFC               	incf	_rotateVal,f
  4342  074F                     l1626:	
  4343                           
  4344                           ;main.c: 206:         LATAbits.LATA5 = rotateVal & 1;
  4345  074F  087C               	movf	_rotateVal,w
  4346  0750  3901               	andlw	1
  4347  0751  00F0               	movwf	??_Rotate
  4348  0752  0EF0               	swapf	??_Rotate,f
  4349  0753  0DF0               	rlf	??_Rotate,f
  4350  0754  0022               	movlb	2	; select bank2
  4351  0755  080C               	movf	12,w	;volatile
  4352  0756  0670               	xorwf	??_Rotate,w
  4353  0757  39DF               	andlw	-33
  4354  0758  0670               	xorwf	??_Rotate,w
  4355  0759  008C               	movwf	12	;volatile
  4356                           
  4357                           ;main.c: 207:         LATAbits.LATA1 = (rotateVal & 2) >> 1;
  4358  075A  367C               	lsrf	_rotateVal,w
  4359  075B  3901               	andlw	1
  4360  075C  00F0               	movwf	??_Rotate
  4361  075D  0DF0               	rlf	??_Rotate,f
  4362  075E  080C               	movf	12,w	;volatile
  4363  075F  0670               	xorwf	??_Rotate,w
  4364  0760  39FD               	andlw	-3
  4365  0761  0670               	xorwf	??_Rotate,w
  4366  0762  008C               	movwf	12	;volatile
  4367                           
  4368                           ;main.c: 208:         LATAbits.LATA2 = (rotateVal & 4) >> 2;
  4369  0763  087C               	movf	_rotateVal,w
  4370  0764  00F0               	movwf	??_Rotate
  4371  0765  3002               	movlw	2
  4372  0766                     u645:	
  4373  0766  36F0               	lsrf	??_Rotate,f
  4374  0767  0B89               	decfsz	9,f
  4375  0768  2F66               	goto	u645
  4376  0769  0870               	movf	??_Rotate,w
  4377  076A  3901               	andlw	1
  4378  076B  00F1               	movwf	??_Rotate+1
  4379  076C  0DF1               	rlf	??_Rotate+1,f
  4380  076D  0DF1               	rlf	??_Rotate+1,f
  4381  076E  080C               	movf	12,w	;volatile
  4382  076F  0671               	xorwf	??_Rotate+1,w
  4383  0770  39FB               	andlw	-5
  4384  0771  0671               	xorwf	??_Rotate+1,w
  4385  0772  008C               	movwf	12	;volatile
  4386                           
  4387                           ;main.c: 209:         LATCbits.LATC5 = (rotateVal & 8) >> 3;
  4388  0773  087C               	movf	_rotateVal,w
  4389  0774  00F0               	movwf	??_Rotate
  4390  0775  3003               	movlw	3
  4391  0776                     u655:	
  4392  0776  36F0               	lsrf	??_Rotate,f
  4393  0777  0B89               	decfsz	9,f
  4394  0778  2F76               	goto	u655
  4395  0779  0870               	movf	??_Rotate,w
  4396  077A  3901               	andlw	1
  4397  077B  00F1               	movwf	??_Rotate+1
  4398  077C  0EF1               	swapf	??_Rotate+1,f
  4399  077D  0DF1               	rlf	??_Rotate+1,f
  4400  077E  080E               	movf	14,w	;volatile
  4401  077F  0671               	xorwf	??_Rotate+1,w
  4402  0780  39DF               	andlw	-33
  4403  0781  0671               	xorwf	??_Rotate+1,w
  4404  0782  008E               	movwf	14	;volatile
  4405  0783                     l131:	
  4406                           ;main.c: 210:     }
  4407                           
  4408                           
  4409                           ;main.c: 212:     if(switch1) {
  4410  0783  087B               	movf	_switch1,w
  4411  0784  1903               	btfsc	3,2
  4412  0785  0008               	return
  4413                           
  4414                           ;main.c: 213:         state = 0;
  4415  0786  01F9               	clrf	_state
  4416  0787  0008               	return
  4417  0788                     __end_of_Rotate:	
  4418                           
  4419                           	psect	text14
  4420  065D                     __ptext14:	
  4421 ;; *************** function _PWM *****************
  4422 ;; Defined at:
  4423 ;;		line 269 in file "main.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, pclath, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;Total ram usage:        2 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    1
  4444 ;; This function calls:
  4445 ;;		_ADC_GetConversion
  4446 ;;		_PWM1_LoadDutyValue
  4447 ;;		_PWM_Output_D7_Disable
  4448 ;;		_PWM_Output_D7_Enable
  4449 ;;		_TMR2_StartTimer
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _PWM
  4457  065D                     _PWM:	
  4458                           
  4459                           ;main.c: 270:     if(state == 0) {
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _PWM: [wreg+status,2+status,0+pclath+cstack]
  4463  065D  0879               	movf	_state,w
  4464  065E  1D03               	btfss	3,2
  4465  065F  2E6E               	goto	l1696
  4466  0660  0022               	movlb	2	; select bank2
  4467  0661  018C               	clrf	12	;volatile
  4468  0662  128E               	bcf	14,5	;volatile
  4469                           
  4470                           ;main.c: 272:         PWM_Output_D7_Enable();
  4471  0663  3185  2531  3186   	fcall	_PWM_Output_D7_Enable
  4472                           
  4473                           ;main.c: 273:         TMR2_StartTimer();
  4474  0666  3185  252A  3186   	fcall	_TMR2_StartTimer
  4475                           
  4476                           ;main.c: 274:         pause = 1;
  4477  0669  0020               	movlb	0	; select bank0
  4478  066A  01A2               	clrf	_pause
  4479  066B  0AA2               	incf	_pause,f
  4480                           
  4481                           ;main.c: 275:         state = 1;
  4482  066C  01F9               	clrf	_state
  4483  066D  0AF9               	incf	_state,f
  4484  066E                     l1696:	
  4485                           
  4486                           ;main.c: 278:     if(state == 1) {
  4487  066E  0379               	decf	_state,w
  4488  066F  1D03               	btfss	3,2
  4489  0670  2E8A               	goto	l1700
  4490                           
  4491                           ;main.c: 279:         adcResult2 = ADC_GetConversion(POT_CHANNEL) >> 6;
  4492  0671  3010               	movlw	16
  4493  0672  3185  25BD  3186   	fcall	_ADC_GetConversion
  4494  0675  0870               	movf	?_ADC_GetConversion,w
  4495  0676  00F4               	movwf	??_PWM
  4496  0677  0871               	movf	?_ADC_GetConversion+1,w
  4497  0678  00F5               	movwf	??_PWM+1
  4498  0679  3006               	movlw	6
  4499  067A                     u815:	
  4500  067A  36F5               	lsrf	??_PWM+1,f
  4501  067B  0CF4               	rrf	??_PWM,f
  4502  067C  0B89               	decfsz	9,f
  4503  067D  2E7A               	goto	u815
  4504  067E  0874               	movf	??_PWM,w
  4505  067F  0020               	movlb	0	; select bank0
  4506  0680  00A0               	movwf	_adcResult2
  4507  0681  0875               	movf	??_PWM+1,w
  4508  0682  00A1               	movwf	_adcResult2+1
  4509                           
  4510                           ;main.c: 280:         PWM1_LoadDutyValue(adcResult2);
  4511  0683  0821               	movf	_adcResult2+1,w
  4512  0684  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  4513  0685  0820               	movf	_adcResult2,w
  4514  0686  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  4515  0687  3185  259A  3186   	fcall	_PWM1_LoadDutyValue
  4516  068A                     l1700:	
  4517                           
  4518                           ;main.c: 283:     if (button == 1){
  4519  068A  037A               	decf	_button,w
  4520  068B  1D03               	btfss	3,2
  4521  068C  0008               	return
  4522                           
  4523                           ;main.c: 284:         PWM_Output_D7_Enable();
  4524  068D  3185  2531  3186   	fcall	_PWM_Output_D7_Enable
  4525                           
  4526                           ;main.c: 285:         _delay((unsigned long)((100)*(500000/4000.0)));
  4527  0690  3011               	movlw	17
  4528  0691  00F4               	movwf	??_PWM
  4529  0692  303A               	movlw	58
  4530  0693                     u907:	
  4531  0693  0B89               	decfsz	9,f
  4532  0694  2E93               	goto	u907
  4533  0695  0BF4               	decfsz	??_PWM,f
  4534  0696  2E93               	goto	u907
  4535  0697  3200               	nop2
  4536                           
  4537                           ;main.c: 286:         PWM_Output_D7_Disable();
  4538  0698  3185  2527         	fcall	_PWM_Output_D7_Disable
  4539  069A  0008               	return
  4540  069B                     __end_of_PWM:	
  4541                           
  4542                           	psect	text15
  4543  052A                     __ptext15:	
  4544 ;; *************** function _TMR2_StartTimer *****************
  4545 ;; Defined at:
  4546 ;;		line 79 in file "mcc_generated_files/tmr2.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		None
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_PWM
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _TMR2_StartTimer
  4575  052A                     _TMR2_StartTimer:	
  4576                           
  4577                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _TMR2_StartTimer: []
  4581  052A  0020               	movlb	0	; select bank0
  4582  052B  151F               	bsf	31,2	;volatile
  4583  052C  0008               	return
  4584  052D                     __end_of_TMR2_StartTimer:	
  4585                           
  4586                           	psect	text16
  4587  0531                     __ptext16:	
  4588 ;; *************** function _PWM_Output_D7_Enable *****************
  4589 ;; Defined at:
  4590 ;;		line 295 in file "main.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_PWM
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _PWM_Output_D7_Enable
  4619  0531                     _PWM_Output_D7_Enable:	
  4620                           
  4621                           ;main.c: 296:     RC5PPS = 0x0C;
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in _PWM_Output_D7_Enable: [wreg]
  4625  0531  300C               	movlw	12
  4626  0532  003D               	movlb	29	; select bank29
  4627  0533  00A5               	movwf	37	;volatile
  4628  0534  0008               	return
  4629  0535                     __end_of_PWM_Output_D7_Enable:	
  4630                           
  4631                           	psect	text17
  4632  0527                     __ptext17:	
  4633 ;; *************** function _PWM_Output_D7_Disable *****************
  4634 ;; Defined at:
  4635 ;;		line 299 in file "main.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		status,2
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;Total ram usage:        0 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_PWM
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _PWM_Output_D7_Disable
  4664  0527                     _PWM_Output_D7_Disable:	
  4665                           
  4666                           ;main.c: 300:     RC5PPS = 0x00;
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _PWM_Output_D7_Disable: [status,2]
  4670  0527  003D               	movlb	29	; select bank29
  4671  0528  01A5               	clrf	37	;volatile
  4672  0529  0008               	return
  4673  052A                     __end_of_PWM_Output_D7_Disable:	
  4674                           
  4675                           	psect	text18
  4676  059A                     __ptext18:	
  4677 ;; *************** function _PWM1_LoadDutyValue *****************
  4678 ;; Defined at:
  4679 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  dutyValue       2    0[COMMON] unsigned short 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;		None
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_PWM
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _PWM1_LoadDutyValue
  4708  059A                     _PWM1_LoadDutyValue:	
  4709                           
  4710                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
  4714  059A  30FF               	movlw	255
  4715  059B  05F0               	andwf	PWM1_LoadDutyValue@dutyValue,f
  4716  059C  3003               	movlw	3
  4717  059D  05F1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  4718                           
  4719                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.CCP1FMT)
  4720  059E  0025               	movlb	5	; select bank5
  4721  059F  1E13               	btfss	19,4	;volatile
  4722  05A0  2DA6               	goto	l1454
  4723                           
  4724                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  4725  05A1  3006               	movlw	6
  4726  05A2                     u475:	
  4727  05A2  35F0               	lslf	PWM1_LoadDutyValue@dutyValue,f
  4728  05A3  0DF1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  4729  05A4  0B89               	decfsz	9,f
  4730  05A5  2DA2               	goto	u475
  4731  05A6                     l1454:	
  4732                           
  4733                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  4734  05A6  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  4735  05A7  0092               	movwf	18	;volatile
  4736                           
  4737                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  4738  05A8  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  4739  05A9  0091               	movwf	17	;volatile
  4740                           
  4741                           ;mcc_generated_files/pwm1.c: 92:     }
  4742  05AA  0008               	return
  4743  05AB                     __end_of_PWM1_LoadDutyValue:	
  4744                           
  4745                           	psect	text19
  4746  05AB                     __ptext19:	
  4747 ;; *************** function _HelloWorld *****************
  4748 ;; Defined at:
  4749 ;;		line 148 in file "main.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _HelloWorld
  4778  05AB                     _HelloWorld:	
  4779                           
  4780                           ;main.c: 149:     if(state == 0) {
  4781                           
  4782                           ;incstack = 0
  4783                           ; Regs used in _HelloWorld: [wreg+status,2+status,0]
  4784  05AB  0879               	movf	_state,w
  4785  05AC  1D03               	btfss	3,2
  4786  05AD  2DB3               	goto	l1568
  4787  05AE  0022               	movlb	2	; select bank2
  4788  05AF  018C               	clrf	12	;volatile
  4789  05B0  128E               	bcf	14,5	;volatile
  4790                           
  4791                           ;main.c: 151:         state = 1;
  4792  05B1  01F9               	clrf	_state
  4793  05B2  0AF9               	incf	_state,f
  4794  05B3                     l1568:	
  4795                           
  4796                           ;main.c: 153:     if(state == 1) {
  4797  05B3  0379               	decf	_state,w
  4798  05B4  1D03               	btfss	3,2
  4799  05B5  2DB8               	goto	l1570
  4800                           
  4801                           ;main.c: 154:         do { LATAbits.LATA5 = 1; } while(0);
  4802  05B6  0022               	movlb	2	; select bank2
  4803  05B7  168C               	bsf	12,5	;volatile
  4804  05B8                     l1570:	
  4805                           
  4806                           ;main.c: 156:     if(switch1) {
  4807  05B8  087B               	movf	_switch1,w
  4808  05B9  1903               	btfsc	3,2
  4809  05BA  0008               	return
  4810                           
  4811                           ;main.c: 157:         state = 0;
  4812  05BB  01F9               	clrf	_state
  4813  05BC  0008               	return
  4814  05BD                     __end_of_HelloWorld:	
  4815                           
  4816                           	psect	text20
  4817  0627                     __ptext20:	
  4818 ;; *************** function _Blink *****************
  4819 ;; Defined at:
  4820 ;;		line 161 in file "main.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    2
  4841 ;; This function calls:
  4842 ;;		_TMR1_HasOverflowOccured
  4843 ;;		_TMR1_Reload
  4844 ;;		_TMR1_StartTimer
  4845 ;;		_TMR1_StopTimer
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _Blink
  4853  0627                     _Blink:	
  4854                           
  4855                           ;main.c: 162:     if(state == 0) {
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  4859  0627  0879               	movf	_state,w
  4860  0628  1D03               	btfss	3,2
  4861  0629  2E32               	goto	l1584
  4862  062A  0022               	movlb	2	; select bank2
  4863  062B  018C               	clrf	12	;volatile
  4864  062C  128E               	bcf	14,5	;volatile
  4865                           
  4866                           ;main.c: 164:         TMR1_StartTimer();
  4867  062D  3185  2521  3186   	fcall	_TMR1_StartTimer
  4868                           
  4869                           ;main.c: 166:         state = 1;
  4870  0630  01F9               	clrf	_state
  4871  0631  0AF9               	incf	_state,f
  4872  0632                     l1584:	
  4873                           
  4874                           ;main.c: 169:     if(state == 1) {
  4875  0632  0379               	decf	_state,w
  4876  0633  1D03               	btfss	3,2
  4877  0634  2E56               	goto	l1600
  4878  0635                     l1588:	
  4879  0635  3185  252D  3186   	fcall	_TMR1_HasOverflowOccured
  4880  0638  3A00               	xorlw	0
  4881  0639  1903               	skipnz
  4882  063A  2E35               	goto	l1588
  4883                           
  4884                           ;main.c: 171:         TMR1IF = 0;
  4885  063B  0020               	movlb	0	; select bank0
  4886  063C  1011               	bcf	17,0	;volatile
  4887                           
  4888                           ;main.c: 172:         TMR1_Reload();
  4889  063D  3185  2539  3186   	fcall	_TMR1_Reload
  4890                           
  4891                           ;main.c: 173:         secondCount++;
  4892  0640  3001               	movlw	1
  4893  0641  00F2               	movwf	??_Blink
  4894  0642  0872               	movf	??_Blink,w
  4895  0643  0020               	movlb	0	; select bank0
  4896  0644  07A4               	addwf	_secondCount,f
  4897                           
  4898                           ;main.c: 175:         if(secondCount == 4) {
  4899  0645  3004               	movlw	4
  4900  0646  0624               	xorwf	_secondCount,w
  4901  0647  1D03               	btfss	3,2
  4902  0648  2E56               	goto	l1600
  4903  0649  1003               	clrc
  4904  064A  0022               	movlb	2	; select bank2
  4905  064B  1E8C               	btfss	12,5	;volatile
  4906  064C  1403               	setc
  4907  064D  1C03               	btfss	3,0
  4908  064E  2E52               	goto	u580
  4909  064F  0022               	movlb	2	; select bank2
  4910  0650  168C               	bsf	12,5	;volatile
  4911  0651  2E54               	goto	l1598
  4912  0652                     u580:	
  4913  0652  0022               	movlb	2	; select bank2
  4914  0653  128C               	bcf	12,5	;volatile
  4915  0654                     l1598:	
  4916                           
  4917                           ;main.c: 177:             secondCount = 0;
  4918  0654  0020               	movlb	0	; select bank0
  4919  0655  01A4               	clrf	_secondCount
  4920  0656                     l1600:	
  4921                           
  4922                           ;main.c: 181:     if(switch1) {
  4923  0656  087B               	movf	_switch1,w
  4924  0657  1903               	btfsc	3,2
  4925  0658  0008               	return
  4926                           
  4927                           ;main.c: 182:         TMR1_StopTimer();
  4928  0659  3185  2524         	fcall	_TMR1_StopTimer
  4929                           
  4930                           ;main.c: 183:         state = 0;
  4931  065B  01F9               	clrf	_state
  4932  065C  0008               	return
  4933  065D                     __end_of_Blink:	
  4934                           
  4935                           	psect	text21
  4936  0524                     __ptext21:	
  4937 ;; *************** function _TMR1_StopTimer *****************
  4938 ;; Defined at:
  4939 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		None
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_Blink
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           
  4967                           ;psect for function _TMR1_StopTimer
  4968  0524                     _TMR1_StopTimer:	
  4969                           
  4970                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 0;
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _TMR1_StopTimer: []
  4974  0524  0020               	movlb	0	; select bank0
  4975  0525  101B               	bcf	27,0	;volatile
  4976  0526  0008               	return
  4977  0527                     __end_of_TMR1_StopTimer:	
  4978                           
  4979                           	psect	text22
  4980  0521                     __ptext22:	
  4981 ;; *************** function _TMR1_StartTimer *****************
  4982 ;; Defined at:
  4983 ;;		line 86 in file "mcc_generated_files/tmr1.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		None
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_Blink
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function _TMR1_StartTimer
  5012  0521                     _TMR1_StartTimer:	
  5013                           
  5014                           ;mcc_generated_files/tmr1.c: 89:     T1CONbits.TMR1ON = 1;
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in _TMR1_StartTimer: []
  5018  0521  0020               	movlb	0	; select bank0
  5019  0522  141B               	bsf	27,0	;volatile
  5020  0523  0008               	return
  5021  0524                     __end_of_TMR1_StartTimer:	
  5022                           
  5023                           	psect	text23
  5024  0539                     __ptext23:	
  5025 ;; *************** function _TMR1_Reload *****************
  5026 ;; Defined at:
  5027 ;;		line 135 in file "mcc_generated_files/tmr1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    1
  5048 ;; This function calls:
  5049 ;;		_TMR1_WriteTimer
  5050 ;; This function is called by:
  5051 ;;		_Blink
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _TMR1_Reload
  5057  0539                     _TMR1_Reload:	
  5058                           
  5059                           ;mcc_generated_files/tmr1.c: 137:     TMR1_WriteTimer(timer1ReloadVal);
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  5063  0539  0020               	movlb	0	; select bank0
  5064  053A  0826               	movf	_timer1ReloadVal+1,w	;volatile
  5065  053B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5066  053C  0825               	movf	_timer1ReloadVal,w	;volatile
  5067  053D  00F0               	movwf	TMR1_WriteTimer@timerVal
  5068  053E  3185  257B         	fcall	_TMR1_WriteTimer
  5069  0540  0008               	return
  5070  0541                     __end_of_TMR1_Reload:	
  5071                           
  5072                           	psect	text24
  5073  057B                     __ptext24:	
  5074 ;; *************** function _TMR1_WriteTimer *****************
  5075 ;; Defined at:
  5076 ;;		line 113 in file "mcc_generated_files/tmr1.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  timerVal        2    0[COMMON] unsigned short 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;Total ram usage:        2 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_TMR1_Reload
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _TMR1_WriteTimer
  5105  057B                     _TMR1_WriteTimer:	
  5106                           
  5107                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.T1SYNC == 1)
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5111  057B  0020               	movlb	0	; select bank0
  5112  057C  1D1B               	btfss	27,2	;volatile
  5113  057D  2D85               	goto	l1418
  5114                           
  5115                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
  5116  057E  101B               	bcf	27,0	;volatile
  5117                           
  5118                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
  5119  057F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5120  0580  009A               	movwf	26	;volatile
  5121                           
  5122                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
  5123  0581  0870               	movf	TMR1_WriteTimer@timerVal,w
  5124  0582  0099               	movwf	25	;volatile
  5125                           
  5126                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
  5127  0583  141B               	bsf	27,0	;volatile
  5128                           
  5129                           ;mcc_generated_files/tmr1.c: 126:     }
  5130  0584  0008               	return
  5131  0585                     l1418:	
  5132                           
  5133                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
  5134  0585  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5135  0586  009A               	movwf	26	;volatile
  5136                           
  5137                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
  5138  0587  0870               	movf	TMR1_WriteTimer@timerVal,w
  5139  0588  0099               	movwf	25	;volatile
  5140  0589  0008               	return
  5141  058A                     __end_of_TMR1_WriteTimer:	
  5142                           
  5143                           	psect	text25
  5144  052D                     __ptext25:	
  5145 ;; *************** function _TMR1_HasOverflowOccured *****************
  5146 ;; Defined at:
  5147 ;;		line 150 in file "mcc_generated_files/tmr1.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      _Bool 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;Total ram usage:        0 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_Blink
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _TMR1_HasOverflowOccured
  5176  052D                     _TMR1_HasOverflowOccured:	
  5177                           
  5178                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
  5182  052D  0020               	movlb	0	; select bank0
  5183  052E  0811               	movf	17,w	;volatile
  5184  052F  3901               	andlw	1
  5185  0530  0008               	return
  5186  0531                     __end_of_TMR1_HasOverflowOccured:	
  5187                           
  5188                           	psect	text26
  5189  06DE                     __ptext26:	
  5190 ;; *************** function _ADC *****************
  5191 ;; Defined at:
  5192 ;;		line 217 in file "main.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        3 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    1
  5213 ;; This function calls:
  5214 ;;		_ADC_GetConversion
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _ADC
  5222  06DE                     _ADC:	
  5223                           
  5224                           ;main.c: 218:     if(state == 0) {
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
  5228  06DE  0879               	movf	_state,w
  5229  06DF  1D03               	btfss	3,2
  5230  06E0  2EE6               	goto	l1638
  5231  06E1  0022               	movlb	2	; select bank2
  5232  06E2  018C               	clrf	12	;volatile
  5233  06E3  128E               	bcf	14,5	;volatile
  5234                           
  5235                           ;main.c: 221:         state = 1;
  5236  06E4  01F9               	clrf	_state
  5237  06E5  0AF9               	incf	_state,f
  5238  06E6                     l1638:	
  5239                           
  5240                           ;main.c: 224:     if(state == 1) {
  5241  06E6  0379               	decf	_state,w
  5242  06E7  1D03               	btfss	3,2
  5243  06E8  2F2D               	goto	l1650
  5244                           
  5245                           ;main.c: 225:         adcResult = ADC_GetConversion(POT_CHANNEL) >> 12;
  5246  06E9  3010               	movlw	16
  5247  06EA  3185  25BD  3186   	fcall	_ADC_GetConversion
  5248  06ED  0870               	movf	?_ADC_GetConversion,w
  5249  06EE  00F4               	movwf	??_ADC
  5250  06EF  0871               	movf	?_ADC_GetConversion+1,w
  5251  06F0  00F5               	movwf	??_ADC+1
  5252  06F1  0E75               	swapf	??_ADC+1,w
  5253  06F2  390F               	andlw	15
  5254  06F3  00F4               	movwf	??_ADC
  5255  06F4  01F5               	clrf	??_ADC+1
  5256  06F5  0874               	movf	??_ADC,w
  5257  06F6  00F6               	movwf	??_ADC+2
  5258  06F7  0876               	movf	??_ADC+2,w
  5259  06F8  00FD               	movwf	_adcResult
  5260                           
  5261                           ;main.c: 227:         LATAbits.LATA5 = adcResult & 1;
  5262  06F9  087D               	movf	_adcResult,w
  5263  06FA  3901               	andlw	1
  5264  06FB  00F4               	movwf	??_ADC
  5265  06FC  0EF4               	swapf	??_ADC,f
  5266  06FD  0DF4               	rlf	??_ADC,f
  5267  06FE  0022               	movlb	2	; select bank2
  5268  06FF  080C               	movf	12,w	;volatile
  5269  0700  0674               	xorwf	??_ADC,w
  5270  0701  39DF               	andlw	-33
  5271  0702  0674               	xorwf	??_ADC,w
  5272  0703  008C               	movwf	12	;volatile
  5273                           
  5274                           ;main.c: 228:         LATAbits.LATA1 = (adcResult & 2) >> 1;
  5275  0704  367D               	lsrf	_adcResult,w
  5276  0705  3901               	andlw	1
  5277  0706  00F4               	movwf	??_ADC
  5278  0707  0DF4               	rlf	??_ADC,f
  5279  0708  080C               	movf	12,w	;volatile
  5280  0709  0674               	xorwf	??_ADC,w
  5281  070A  39FD               	andlw	-3
  5282  070B  0674               	xorwf	??_ADC,w
  5283  070C  008C               	movwf	12	;volatile
  5284                           
  5285                           ;main.c: 229:         LATAbits.LATA2 = (adcResult & 4) >> 2;
  5286  070D  087D               	movf	_adcResult,w
  5287  070E  00F4               	movwf	??_ADC
  5288  070F  3002               	movlw	2
  5289  0710                     u695:	
  5290  0710  36F4               	lsrf	??_ADC,f
  5291  0711  0B89               	decfsz	9,f
  5292  0712  2F10               	goto	u695
  5293  0713  0874               	movf	??_ADC,w
  5294  0714  3901               	andlw	1
  5295  0715  00F5               	movwf	??_ADC+1
  5296  0716  0DF5               	rlf	??_ADC+1,f
  5297  0717  0DF5               	rlf	??_ADC+1,f
  5298  0718  080C               	movf	12,w	;volatile
  5299  0719  0675               	xorwf	??_ADC+1,w
  5300  071A  39FB               	andlw	-5
  5301  071B  0675               	xorwf	??_ADC+1,w
  5302  071C  008C               	movwf	12	;volatile
  5303                           
  5304                           ;main.c: 230:         LATCbits.LATC5 = (adcResult & 8) >> 3;
  5305  071D  087D               	movf	_adcResult,w
  5306  071E  00F4               	movwf	??_ADC
  5307  071F  3003               	movlw	3
  5308  0720                     u705:	
  5309  0720  36F4               	lsrf	??_ADC,f
  5310  0721  0B89               	decfsz	9,f
  5311  0722  2F20               	goto	u705
  5312  0723  0874               	movf	??_ADC,w
  5313  0724  3901               	andlw	1
  5314  0725  00F5               	movwf	??_ADC+1
  5315  0726  0EF5               	swapf	??_ADC+1,f
  5316  0727  0DF5               	rlf	??_ADC+1,f
  5317  0728  080E               	movf	14,w	;volatile
  5318  0729  0675               	xorwf	??_ADC+1,w
  5319  072A  39DF               	andlw	-33
  5320  072B  0675               	xorwf	??_ADC+1,w
  5321  072C  008E               	movwf	14	;volatile
  5322  072D                     l1650:	
  5323                           
  5324                           ;main.c: 233:     if(switch1) {
  5325  072D  087B               	movf	_switch1,w
  5326  072E  1903               	btfsc	3,2
  5327  072F  0008               	return
  5328                           
  5329                           ;main.c: 234:         state = 0;
  5330  0730  01F9               	clrf	_state
  5331  0731  0008               	return
  5332  0732                     __end_of_ADC:	
  5333                           
  5334                           	psect	text27
  5335  05BD                     __ptext27:	
  5336 ;; *************** function _ADC_GetConversion *****************
  5337 ;; Defined at:
  5338 ;;		line 113 in file "mcc_generated_files/adc.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  channel         1    wreg     enum E6648
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  channel         1    3[COMMON] enum E6648
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  2    0[COMMON] unsigned short 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:        4 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_ADC
  5362 ;;		_VSR
  5363 ;;		_PWM
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _ADC_GetConversion
  5369  05BD                     _ADC_GetConversion:	
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5373                           ;ADC_GetConversion@channel stored from wreg
  5374  05BD  00F3               	movwf	ADC_GetConversion@channel
  5375                           
  5376                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  5377  05BE  0873               	movf	ADC_GetConversion@channel,w
  5378  05BF  00F2               	movwf	??_ADC_GetConversion
  5379  05C0  0DF2               	rlf	??_ADC_GetConversion,f
  5380  05C1  0DF2               	rlf	??_ADC_GetConversion,f
  5381  05C2  0021               	movlb	1	; select bank1
  5382  05C3  081D               	movf	29,w	;volatile
  5383  05C4  0672               	xorwf	??_ADC_GetConversion,w
  5384  05C5  3903               	andlw	-253
  5385  05C6  0672               	xorwf	??_ADC_GetConversion,w
  5386  05C7  009D               	movwf	29	;volatile
  5387                           
  5388                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  5389  05C8  141D               	bsf	29,0	;volatile
  5390                           
  5391                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
  5392                           
  5393                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
  5394  05C9  0021               	movlb	1	; select bank1
  5395  05CA  149D               	bsf	29,1	;volatile
  5396  05CB                     l339:	
  5397                           ;mcc_generated_files/adc.c: 131:     }
  5398                           
  5399                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5400                           
  5401                           
  5402                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5403  05CB  0021               	movlb	1	; select bank1
  5404  05CC  1C9D               	btfss	29,1	;volatile
  5405  05CD  2DD0               	goto	l1440
  5406  05CE  0064               	clrwdt	;# 
  5407  05CF  2DCB               	goto	l339
  5408  05D0                     l1440:	
  5409                           
  5410                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5411  05D0  081C               	movf	28,w	;volatile
  5412  05D1  00F1               	movwf	?_ADC_GetConversion+1
  5413  05D2  081B               	movf	27,w	;volatile
  5414  05D3  00F0               	movwf	?_ADC_GetConversion
  5415  05D4  0008               	return
  5416  05D5                     __end_of_ADC_GetConversion:	
  5417  007E                     btemp	set	126	;btemp
  5418  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         10
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC
    _VSR->_ADC_GetConversion
    _PWM->_ADC_GetConversion
    _TMR1_Reload->_TMR1_WriteTimer
    _ADC->_ADC_GetConversion

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     396
                                              7 COMMON     2     2      0
                                _ADC
                              _Blink
                         _HelloWorld
                                _PWM
                             _Rotate
                  _SYSTEM_Initialize
                                _VSR
                      _checkButtonS1
                               _next
 ---------------------------------------------------------------------------------
 (1) _next                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VSR                                                  2     2      0      22
                                              4 COMMON     2     2      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotate                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM                                                  2     2      0     188
                                              4 COMMON     2     2      0
                  _ADC_GetConversion
                 _PWM1_LoadDutyValue
              _PWM_Output_D7_Disable
               _PWM_Output_D7_Enable
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D7_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D7_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HelloWorld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Blink                                                1     1      0     164
                                              2 COMMON     1     1      0
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  3     3      0      22
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADC_GetConversion
   _Blink
     _TMR1_HasOverflowOccured
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _HelloWorld
   _PWM
     _ADC_GetConversion
     _PWM1_LoadDutyValue
     _PWM_Output_D7_Disable
     _PWM_Output_D7_Enable
     _TMR2_StartTimer
   _Rotate
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _VSR
     _ADC_GetConversion
   _checkButtonS1
   _next

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       8       5       10.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      16      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      16      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 11 18:51:24 2019

                     __CFG_CP$OFF 0000                                l90 05FE                                l75 069E  
                     __CFG_LVP$ON 0000                               l131 0783                               _ADC 06DE  
                             l339 05CB                               _PR2 001E                      __CFG_CPD$OFF 0000  
                             u705 0720                               u475 05A2                               u580 0652  
                             u645 0766                               u815 067A                               u655 0776  
                             u907 0693                               u755 07C4                               u765 07D4  
                             u695 0710                               u867 05F6                               u877 079F  
                             u887 07A9                               u897 0743                               _PWM 065D  
                             _VSR 0788                   _timer1ReloadVal 0025           __size_of_PMD_Initialize 0008  
                 _TMR2_Initialize 0559                               wreg 0009                              ?_ADC 0070  
                            ?_PWM 0070                              ?_VSR 0070                              l1440 05D0  
                            l1600 0656                              l1418 0585                              l1700 068A  
                            l1454 05A6                              l1720 06A6                              l1650 072D  
                            l1570 05B8                              l1626 074F                              l1618 073D  
                            l1722 06AA                              l1724 06AE                              l1732 06BA  
                            l1638 06E6                              l1726 06B2                              l1734 06D7  
                            l1718 06A2                              l1584 0632                              l1568 05B3  
                            l1672 07A2                              l1664 0792                              l1728 06B6  
                            l1674 07AD                              l1762 06C3                              l1588 0635  
                            l1598 0654                              l1678 07EB                              l1696 066E  
         __end_of_PWM1_Initialize 056D                              _LATA 010C                              _LATB 010D  
                            _LATC 010E                              _PMD0 0911                              _PMD1 0912  
                            _PMD2 0913                              _PMD3 0914                              _PMD4 0915  
                            _PMD5 0916           _TMR1_HasOverflowOccured 052D                              _TMR2 001D  
                            _WPUA 020C                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _main 069B  
                            _next 058A                              btemp 007E                     __CFG_BOREN$ON 0000  
                   __CFG_BORV$LOW 0000                              start 0002                     __CFG_CSWEN$ON 0000  
                   __CFG_MCLRE$ON 0000                             ??_ADC 0074                             ??_PWM 0074  
                           ??_VSR 0074    __size_of_OSCILLATOR_Initialize 0008     __end_of_OSCILLATOR_Initialize 0551  
                           _ADACT 009F                             ?_main 0070                             ?_next 0070  
                 _TMR1_StartTimer 0521                             _T1CON 001B                             _T2CON 001F  
                  __CFG_DEBUG$OFF 0000                             _OSCEN 091D                             _TMR1H 001A  
                           _TMR1L 0019                             _TRISA 008C                             _TRISB 008D  
                           _TRISC 008E                             _Blink 0627                        _HelloWorld 05AB  
                  _WDT_Initialize 0535                             _event 0027                             _pause 0022  
                           _state 0079           __end_of_TMR1_Initialize 057B                             status 0003  
                           wtemp0 007E                   _TMR2_StartTimer 052A                   _TMR1_WriteTimer 057B  
          ??_PWM_Output_D7_Enable 0070                   __initialization 07F0                      __end_of_main 06DE  
                    __end_of_next 059A           __end_of_TMR2_Initialize 0561                            ??_main 0077  
                          ??_next 0070                            ?_Blink 0070            __end_of_WDT_Initialize 0539  
       ??_TMR1_HasOverflowOccured 0070                            _ADCON0 009D                            _ADCON1 009E  
                          _ADRESH 009C                            _ADRESL 009B                            _CCPR1H 0292  
                          _CCPR1L 0291                            _ANSELA 018C                            _ANSELB 018D  
                          _ANSELC 018E                __CFG_RSTOSC$HFINT1 0000                            _T1GCON 001C  
         TMR1_WriteTimer@timerVal 0070                  ?_PWM1_Initialize 0070                            _RC5PPS 0EA5  
                          _ODCONA 028C                            _ODCONB 028D                            _ODCONC 028E  
                          _OSCFRQ 091F                            _TMR1IF 0088                            _WDTCON 0097  
                  __CFG_PWRTE$OFF 0000                            _Rotate 0732           __end_of_TMR1_StartTimer 0524  
                    ?_TMR1_Reload 0070                    __CFG_STVREN$ON 0000                            _button 007A  
                  _PMD_Initialize 0551                       ?_HelloWorld 0070                   ?_WDT_Initialize 0070  
        ADC_GetConversion@channel 0073           __end_of_TMR2_StartTimer 052D           __end_of_TMR1_WriteTimer 058A  
                ?_TMR1_Initialize 0070                 _SYSTEM_Initialize 05D5           __end_of__initialization 07FD  
         ??_PWM_Output_D7_Disable 0070                ?_SYSTEM_Initialize 0070                        _adcResult2 0020  
     PWM1_LoadDutyValue@dutyValue 0070                     __end_of_Blink 065D                    __pcstackCOMMON 0070  
                    __pidataBANK0 0520               ??_SYSTEM_Initialize 0070                _PWM1_LoadDutyValue 059A  
                ?_TMR2_Initialize 0070            __end_of_PMD_Initialize 0559               ?_PWM1_LoadDutyValue 0070  
                         ??_Blink 0072         __end_of_SYSTEM_Initialize 05ED                        __pbssBANK0 0020  
            ??_PWM1_LoadDutyValue 0072                        __pmaintext 069B                           ?_Rotate 0070  
             __size_of_HelloWorld 0012                  ?_TMR1_StartTimer 0070                   __CFG_PPS1WAY$ON 0000  
                         _CCP1CON 0293                   ?_PMD_Initialize 0070           __size_of_ADC_Initialize 0008  
         __size_of_TMR1_StopTimer 0003                           _OSCCON1 0919                           _OSCCON3 091B  
                         _OSCTUNE 091E                           _SLRCONA 030C                           _SLRCONB 030D  
                         _SLRCONC 030E            __size_of_checkButtonS1 0018                  ?_TMR2_StartTimer 0070  
                ?_TMR1_WriteTimer 0070                   __size_of_Rotate 0056              __size_of_TMR1_Reload 0008  
                         __ptext1 058A                           __ptext2 05ED                           __ptext3 0788  
                         __ptext4 05D5                           __ptext5 0535                           __ptext6 0559  
                         __ptext7 056D                           __ptext8 0561                           __ptext9 0551  
                    __size_of_ADC 0054                         _T1CONbits 001B                      __size_of_PWM 003E  
                    __size_of_VSR 0068             _OSCILLATOR_Initialize 0549                         _T2CONbits 001F  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0018                           _switch1 007B  
            end_of_initialization 07FD     __size_of_PWM_Output_D7_Enable 0004                     _checkButtonS1 05ED  
                ??_WDT_Initialize 0070                         _PORTCbits 000E                      ??_HelloWorld 0070  
                __CFG_FEXTOSC$OFF 0000                       _CCP1CONbits 0293    __size_of_PWM_Output_D7_Disable 0003  
   __end_of_PWM_Output_D7_Disable 052A          __size_of_PWM1_Initialize 000C                    ?_checkButtonS1 0070  
              __end_of_HelloWorld 05BD                    __end_of_Rotate 0788                    _ADC_Initialize 0541  
                  _TMR1_StopTimer 0524            ?_OSCILLATOR_Initialize 0070          ?_TMR1_HasOverflowOccured 0070  
             start_initialization 07F0                       __end_of_ADC 0732                       __end_of_PWM 069B  
                     __end_of_VSR 07F0   __size_of_PIN_MANAGER_Initialize 0022                  __CFG_LPBOREN$OFF 0000  
        __size_of_TMR1_Initialize 000E                          ??_Rotate 0070                  ??_PMD_Initialize 0070  
                     _CCPTMRSbits 029F            __end_of_ADC_Initialize 0549            __end_of_TMR1_StopTimer 0527  
                     __pdataBANK0 0027                       __pbssCOMMON 0079                         ___latbits 0002  
                       _adcResult 007D          __size_of_TMR2_Initialize 0008                         __pnvBANK0 0025  
                 ??_checkButtonS1 0070       __size_of_PWM1_LoadDutyValue 0011            _PIN_MANAGER_Initialize 0605  
 __end_of_TMR1_HasOverflowOccured 0531                   ?_ADC_Initialize 0070                   ?_TMR1_StopTimer 0070  
               ??_PWM1_Initialize 0070          __size_of_TMR1_StartTimer 0003                    __size_of_Blink 0036  
                __CFG_WDTE$SWDTEN 0000                          _LATAbits 010C                          _LATCbits 010E  
        __size_of_TMR2_StartTimer 0003          __size_of_TMR1_WriteTimer 000F                          _PIR1bits 0011  
                   ??_TMR1_Reload 0072                 ??_TMR1_Initialize 0070                         _rotateVal 007C  
                      _ADCON0bits 009D      __end_of_PWM_Output_D7_Enable 0535                 ??_TMR2_Initialize 0070  
               _ADC_GetConversion 05BD           ??_OSCILLATOR_Initialize 0070                ?_ADC_GetConversion 0070  
             __end_of_TMR1_Reload 0541               ??_ADC_GetConversion 0072                          _delayVal 0023  
                        __ptext10 0605                          __ptext11 0549                          __ptext20 0627  
                        __ptext12 0541                          __ptext21 0524                          __ptext13 0732  
                      _T1GCONbits 001C                          __ptext22 0521                          __ptext14 065D  
                        __ptext23 0539                          __ptext15 052A                          __ptext24 057B  
                        __ptext16 0531                          __ptext25 052D                          __ptext17 0527  
                        __ptext26 06DE                          __ptext18 059A                          __ptext27 05BD  
                        __ptext19 05AB                 ??_TMR1_StartTimer 0070  __size_of_TMR1_HasOverflowOccured 0004  
                   __size_of_main 0043                     __size_of_next 0010         __end_of_ADC_GetConversion 05D5  
           _PWM_Output_D7_Disable 0527                 ??_TMR2_StartTimer 0070                 ??_TMR1_WriteTimer 0072  
                     _secondCount 0024           __size_of_WDT_Initialize 0004           ?_PIN_MANAGER_Initialize 0070  
               __CFG_CLKOUTEN$OFF 0000                   _PWM1_Initialize 0561                  ??_ADC_Initialize 0070  
                ??_TMR1_StopTimer 0070              _PWM_Output_D7_Enable 0531                       _TMR1_Reload 0539  
  __end_of_PIN_MANAGER_Initialize 0627        __end_of_PWM1_LoadDutyValue 05AB        __size_of_ADC_GetConversion 0018  
                 _TMR1_Initialize 056D             ?_PWM_Output_D7_Enable 0070            ?_PWM_Output_D7_Disable 0070  
           __end_of_checkButtonS1 0605  
