

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 11 16:45:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F18345 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0097                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0219                     	;# 
   180  021A                     	;# 
   181  021B                     	;# 
   182  021C                     	;# 
   183  021D                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  028C                     	;# 
   188  028D                     	;# 
   189  028E                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0297                     	;# 
   199  0298                     	;# 
   200  029F                     	;# 
   201  030C                     	;# 
   202  030D                     	;# 
   203  030E                     	;# 
   204  0311                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0314                     	;# 
   209  0315                     	;# 
   210  0315                     	;# 
   211  0316                     	;# 
   212  0317                     	;# 
   213  0318                     	;# 
   214  038C                     	;# 
   215  038D                     	;# 
   216  038E                     	;# 
   217  0391                     	;# 
   218  0392                     	;# 
   219  0393                     	;# 
   220  0394                     	;# 
   221  0395                     	;# 
   222  0396                     	;# 
   223  0397                     	;# 
   224  0398                     	;# 
   225  0399                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0411                     	;# 
   232  0411                     	;# 
   233  0412                     	;# 
   234  0413                     	;# 
   235  0414                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  0418                     	;# 
   240  0418                     	;# 
   241  0419                     	;# 
   242  041A                     	;# 
   243  041B                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  041F                     	;# 
   248  0498                     	;# 
   249  0498                     	;# 
   250  0499                     	;# 
   251  049A                     	;# 
   252  049B                     	;# 
   253  049B                     	;# 
   254  049C                     	;# 
   255  049D                     	;# 
   256  049E                     	;# 
   257  049F                     	;# 
   258  0617                     	;# 
   259  0618                     	;# 
   260  0619                     	;# 
   261  0619                     	;# 
   262  061A                     	;# 
   263  061B                     	;# 
   264  061C                     	;# 
   265  061C                     	;# 
   266  061F                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0698                     	;# 
   275  0699                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0716                     	;# 
   282  0717                     	;# 
   283  0718                     	;# 
   284  0719                     	;# 
   285  0891                     	;# 
   286  0891                     	;# 
   287  0891                     	;# 
   288  0891                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0892                     	;# 
   292  0892                     	;# 
   293  0892                     	;# 
   294  0893                     	;# 
   295  0893                     	;# 
   296  0893                     	;# 
   297  0893                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0894                     	;# 
   301  0894                     	;# 
   302  0894                     	;# 
   303  0895                     	;# 
   304  0895                     	;# 
   305  0895                     	;# 
   306  0896                     	;# 
   307  0896                     	;# 
   308  0896                     	;# 
   309  089B                     	;# 
   310  0911                     	;# 
   311  0912                     	;# 
   312  0913                     	;# 
   313  0914                     	;# 
   314  0915                     	;# 
   315  0916                     	;# 
   316  0918                     	;# 
   317  0919                     	;# 
   318  091A                     	;# 
   319  091B                     	;# 
   320  091C                     	;# 
   321  091D                     	;# 
   322  091E                     	;# 
   323  091F                     	;# 
   324  0E0F                     	;# 
   325  0E10                     	;# 
   326  0E11                     	;# 
   327  0E12                     	;# 
   328  0E13                     	;# 
   329  0E14                     	;# 
   330  0E15                     	;# 
   331  0E16                     	;# 
   332  0E17                     	;# 
   333  0E18                     	;# 
   334  0E19                     	;# 
   335  0E1A                     	;# 
   336  0E1B                     	;# 
   337  0E1C                     	;# 
   338  0E1D                     	;# 
   339  0E1E                     	;# 
   340  0E1F                     	;# 
   341  0E20                     	;# 
   342  0E21                     	;# 
   343  0E22                     	;# 
   344  0E24                     	;# 
   345  0E25                     	;# 
   346  0E28                     	;# 
   347  0E29                     	;# 
   348  0E2A                     	;# 
   349  0E2B                     	;# 
   350  0E2C                     	;# 
   351  0E2D                     	;# 
   352  0E2E                     	;# 
   353  0E2F                     	;# 
   354  0E90                     	;# 
   355  0E91                     	;# 
   356  0E92                     	;# 
   357  0E94                     	;# 
   358  0E95                     	;# 
   359  0E9C                     	;# 
   360  0E9D                     	;# 
   361  0E9E                     	;# 
   362  0E9F                     	;# 
   363  0EA0                     	;# 
   364  0EA1                     	;# 
   365  0EA2                     	;# 
   366  0EA3                     	;# 
   367  0EA4                     	;# 
   368  0EA5                     	;# 
   369  0EA6                     	;# 
   370  0EA7                     	;# 
   371  0F0F                     	;# 
   372  0F10                     	;# 
   373  0F11                     	;# 
   374  0F12                     	;# 
   375  0F13                     	;# 
   376  0F14                     	;# 
   377  0F15                     	;# 
   378  0F16                     	;# 
   379  0F17                     	;# 
   380  0F18                     	;# 
   381  0F19                     	;# 
   382  0F1A                     	;# 
   383  0F1B                     	;# 
   384  0F1C                     	;# 
   385  0F1D                     	;# 
   386  0F1E                     	;# 
   387  0F1F                     	;# 
   388  0F20                     	;# 
   389  0F21                     	;# 
   390  0F22                     	;# 
   391  0F23                     	;# 
   392  0F24                     	;# 
   393  0F25                     	;# 
   394  0F26                     	;# 
   395  0F27                     	;# 
   396  0F28                     	;# 
   397  0F29                     	;# 
   398  0F2A                     	;# 
   399  0F2B                     	;# 
   400  0F2C                     	;# 
   401  0F2D                     	;# 
   402  0F2E                     	;# 
   403  0F2F                     	;# 
   404  0F30                     	;# 
   405  0F31                     	;# 
   406  0F32                     	;# 
   407  0F33                     	;# 
   408  0F34                     	;# 
   409  0F35                     	;# 
   410  0F36                     	;# 
   411  0F37                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000D                     	;# 
   437  000E                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  0019                     	;# 
   451  001A                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001D                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0097                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  009F                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  018E                     	;# 
   487  0197                     	;# 
   488  0199                     	;# 
   489  0199                     	;# 
   490  0199                     	;# 
   491  019A                     	;# 
   492  019A                     	;# 
   493  019A                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019C                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019D                     	;# 
   503  019D                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019E                     	;# 
   507  019E                     	;# 
   508  019F                     	;# 
   509  019F                     	;# 
   510  019F                     	;# 
   511  019F                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  020E                     	;# 
   516  0211                     	;# 
   517  0211                     	;# 
   518  0212                     	;# 
   519  0212                     	;# 
   520  0213                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0216                     	;# 
   529  0216                     	;# 
   530  0217                     	;# 
   531  0217                     	;# 
   532  0219                     	;# 
   533  021A                     	;# 
   534  021B                     	;# 
   535  021C                     	;# 
   536  021D                     	;# 
   537  021D                     	;# 
   538  021E                     	;# 
   539  021F                     	;# 
   540  028C                     	;# 
   541  028D                     	;# 
   542  028E                     	;# 
   543  0291                     	;# 
   544  0291                     	;# 
   545  0292                     	;# 
   546  0293                     	;# 
   547  0294                     	;# 
   548  0295                     	;# 
   549  0295                     	;# 
   550  0296                     	;# 
   551  0297                     	;# 
   552  0298                     	;# 
   553  029F                     	;# 
   554  030C                     	;# 
   555  030D                     	;# 
   556  030E                     	;# 
   557  0311                     	;# 
   558  0311                     	;# 
   559  0312                     	;# 
   560  0313                     	;# 
   561  0314                     	;# 
   562  0315                     	;# 
   563  0315                     	;# 
   564  0316                     	;# 
   565  0317                     	;# 
   566  0318                     	;# 
   567  038C                     	;# 
   568  038D                     	;# 
   569  038E                     	;# 
   570  0391                     	;# 
   571  0392                     	;# 
   572  0393                     	;# 
   573  0394                     	;# 
   574  0395                     	;# 
   575  0396                     	;# 
   576  0397                     	;# 
   577  0398                     	;# 
   578  0399                     	;# 
   579  039A                     	;# 
   580  039C                     	;# 
   581  039D                     	;# 
   582  039E                     	;# 
   583  039F                     	;# 
   584  0411                     	;# 
   585  0411                     	;# 
   586  0412                     	;# 
   587  0413                     	;# 
   588  0414                     	;# 
   589  0415                     	;# 
   590  0416                     	;# 
   591  0417                     	;# 
   592  0418                     	;# 
   593  0418                     	;# 
   594  0419                     	;# 
   595  041A                     	;# 
   596  041B                     	;# 
   597  041C                     	;# 
   598  041D                     	;# 
   599  041E                     	;# 
   600  041F                     	;# 
   601  0498                     	;# 
   602  0498                     	;# 
   603  0499                     	;# 
   604  049A                     	;# 
   605  049B                     	;# 
   606  049B                     	;# 
   607  049C                     	;# 
   608  049D                     	;# 
   609  049E                     	;# 
   610  049F                     	;# 
   611  0617                     	;# 
   612  0618                     	;# 
   613  0619                     	;# 
   614  0619                     	;# 
   615  061A                     	;# 
   616  061B                     	;# 
   617  061C                     	;# 
   618  061C                     	;# 
   619  061F                     	;# 
   620  0691                     	;# 
   621  0692                     	;# 
   622  0693                     	;# 
   623  0694                     	;# 
   624  0695                     	;# 
   625  0696                     	;# 
   626  0697                     	;# 
   627  0698                     	;# 
   628  0699                     	;# 
   629  0711                     	;# 
   630  0712                     	;# 
   631  0713                     	;# 
   632  0714                     	;# 
   633  0715                     	;# 
   634  0716                     	;# 
   635  0717                     	;# 
   636  0718                     	;# 
   637  0719                     	;# 
   638  0891                     	;# 
   639  0891                     	;# 
   640  0891                     	;# 
   641  0891                     	;# 
   642  0891                     	;# 
   643  0891                     	;# 
   644  0892                     	;# 
   645  0892                     	;# 
   646  0892                     	;# 
   647  0893                     	;# 
   648  0893                     	;# 
   649  0893                     	;# 
   650  0893                     	;# 
   651  0893                     	;# 
   652  0893                     	;# 
   653  0894                     	;# 
   654  0894                     	;# 
   655  0894                     	;# 
   656  0895                     	;# 
   657  0895                     	;# 
   658  0895                     	;# 
   659  0896                     	;# 
   660  0896                     	;# 
   661  0896                     	;# 
   662  089B                     	;# 
   663  0911                     	;# 
   664  0912                     	;# 
   665  0913                     	;# 
   666  0914                     	;# 
   667  0915                     	;# 
   668  0916                     	;# 
   669  0918                     	;# 
   670  0919                     	;# 
   671  091A                     	;# 
   672  091B                     	;# 
   673  091C                     	;# 
   674  091D                     	;# 
   675  091E                     	;# 
   676  091F                     	;# 
   677  0E0F                     	;# 
   678  0E10                     	;# 
   679  0E11                     	;# 
   680  0E12                     	;# 
   681  0E13                     	;# 
   682  0E14                     	;# 
   683  0E15                     	;# 
   684  0E16                     	;# 
   685  0E17                     	;# 
   686  0E18                     	;# 
   687  0E19                     	;# 
   688  0E1A                     	;# 
   689  0E1B                     	;# 
   690  0E1C                     	;# 
   691  0E1D                     	;# 
   692  0E1E                     	;# 
   693  0E1F                     	;# 
   694  0E20                     	;# 
   695  0E21                     	;# 
   696  0E22                     	;# 
   697  0E24                     	;# 
   698  0E25                     	;# 
   699  0E28                     	;# 
   700  0E29                     	;# 
   701  0E2A                     	;# 
   702  0E2B                     	;# 
   703  0E2C                     	;# 
   704  0E2D                     	;# 
   705  0E2E                     	;# 
   706  0E2F                     	;# 
   707  0E90                     	;# 
   708  0E91                     	;# 
   709  0E92                     	;# 
   710  0E94                     	;# 
   711  0E95                     	;# 
   712  0E9C                     	;# 
   713  0E9D                     	;# 
   714  0E9E                     	;# 
   715  0E9F                     	;# 
   716  0EA0                     	;# 
   717  0EA1                     	;# 
   718  0EA2                     	;# 
   719  0EA3                     	;# 
   720  0EA4                     	;# 
   721  0EA5                     	;# 
   722  0EA6                     	;# 
   723  0EA7                     	;# 
   724  0F0F                     	;# 
   725  0F10                     	;# 
   726  0F11                     	;# 
   727  0F12                     	;# 
   728  0F13                     	;# 
   729  0F14                     	;# 
   730  0F15                     	;# 
   731  0F16                     	;# 
   732  0F17                     	;# 
   733  0F18                     	;# 
   734  0F19                     	;# 
   735  0F1A                     	;# 
   736  0F1B                     	;# 
   737  0F1C                     	;# 
   738  0F1D                     	;# 
   739  0F1E                     	;# 
   740  0F1F                     	;# 
   741  0F20                     	;# 
   742  0F21                     	;# 
   743  0F22                     	;# 
   744  0F23                     	;# 
   745  0F24                     	;# 
   746  0F25                     	;# 
   747  0F26                     	;# 
   748  0F27                     	;# 
   749  0F28                     	;# 
   750  0F29                     	;# 
   751  0F2A                     	;# 
   752  0F2B                     	;# 
   753  0F2C                     	;# 
   754  0F2D                     	;# 
   755  0F2E                     	;# 
   756  0F2F                     	;# 
   757  0F30                     	;# 
   758  0F31                     	;# 
   759  0F32                     	;# 
   760  0F33                     	;# 
   761  0F34                     	;# 
   762  0F35                     	;# 
   763  0F36                     	;# 
   764  0F37                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  0010                     	;# 
   792  0011                     	;# 
   793  0012                     	;# 
   794  0013                     	;# 
   795  0014                     	;# 
   796  0015                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0016                     	;# 
   800  0017                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  001D                     	;# 
   808  001E                     	;# 
   809  001F                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  0090                     	;# 
   814  0091                     	;# 
   815  0092                     	;# 
   816  0093                     	;# 
   817  0094                     	;# 
   818  0097                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010D                     	;# 
   827  010E                     	;# 
   828  0111                     	;# 
   829  0112                     	;# 
   830  0113                     	;# 
   831  0114                     	;# 
   832  0115                     	;# 
   833  0116                     	;# 
   834  0117                     	;# 
   835  0118                     	;# 
   836  0119                     	;# 
   837  018C                     	;# 
   838  018D                     	;# 
   839  018E                     	;# 
   840  0197                     	;# 
   841  0199                     	;# 
   842  0199                     	;# 
   843  0199                     	;# 
   844  019A                     	;# 
   845  019A                     	;# 
   846  019A                     	;# 
   847  019B                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019C                     	;# 
   853  019C                     	;# 
   854  019C                     	;# 
   855  019D                     	;# 
   856  019D                     	;# 
   857  019D                     	;# 
   858  019E                     	;# 
   859  019E                     	;# 
   860  019E                     	;# 
   861  019F                     	;# 
   862  019F                     	;# 
   863  019F                     	;# 
   864  019F                     	;# 
   865  019F                     	;# 
   866  020C                     	;# 
   867  020D                     	;# 
   868  020E                     	;# 
   869  0211                     	;# 
   870  0211                     	;# 
   871  0212                     	;# 
   872  0212                     	;# 
   873  0213                     	;# 
   874  0213                     	;# 
   875  0214                     	;# 
   876  0214                     	;# 
   877  0215                     	;# 
   878  0215                     	;# 
   879  0215                     	;# 
   880  0215                     	;# 
   881  0216                     	;# 
   882  0216                     	;# 
   883  0217                     	;# 
   884  0217                     	;# 
   885  0219                     	;# 
   886  021A                     	;# 
   887  021B                     	;# 
   888  021C                     	;# 
   889  021D                     	;# 
   890  021D                     	;# 
   891  021E                     	;# 
   892  021F                     	;# 
   893  028C                     	;# 
   894  028D                     	;# 
   895  028E                     	;# 
   896  0291                     	;# 
   897  0291                     	;# 
   898  0292                     	;# 
   899  0293                     	;# 
   900  0294                     	;# 
   901  0295                     	;# 
   902  0295                     	;# 
   903  0296                     	;# 
   904  0297                     	;# 
   905  0298                     	;# 
   906  029F                     	;# 
   907  030C                     	;# 
   908  030D                     	;# 
   909  030E                     	;# 
   910  0311                     	;# 
   911  0311                     	;# 
   912  0312                     	;# 
   913  0313                     	;# 
   914  0314                     	;# 
   915  0315                     	;# 
   916  0315                     	;# 
   917  0316                     	;# 
   918  0317                     	;# 
   919  0318                     	;# 
   920  038C                     	;# 
   921  038D                     	;# 
   922  038E                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  0397                     	;# 
   930  0398                     	;# 
   931  0399                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0411                     	;# 
   938  0411                     	;# 
   939  0412                     	;# 
   940  0413                     	;# 
   941  0414                     	;# 
   942  0415                     	;# 
   943  0416                     	;# 
   944  0417                     	;# 
   945  0418                     	;# 
   946  0418                     	;# 
   947  0419                     	;# 
   948  041A                     	;# 
   949  041B                     	;# 
   950  041C                     	;# 
   951  041D                     	;# 
   952  041E                     	;# 
   953  041F                     	;# 
   954  0498                     	;# 
   955  0498                     	;# 
   956  0499                     	;# 
   957  049A                     	;# 
   958  049B                     	;# 
   959  049B                     	;# 
   960  049C                     	;# 
   961  049D                     	;# 
   962  049E                     	;# 
   963  049F                     	;# 
   964  0617                     	;# 
   965  0618                     	;# 
   966  0619                     	;# 
   967  0619                     	;# 
   968  061A                     	;# 
   969  061B                     	;# 
   970  061C                     	;# 
   971  061C                     	;# 
   972  061F                     	;# 
   973  0691                     	;# 
   974  0692                     	;# 
   975  0693                     	;# 
   976  0694                     	;# 
   977  0695                     	;# 
   978  0696                     	;# 
   979  0697                     	;# 
   980  0698                     	;# 
   981  0699                     	;# 
   982  0711                     	;# 
   983  0712                     	;# 
   984  0713                     	;# 
   985  0714                     	;# 
   986  0715                     	;# 
   987  0716                     	;# 
   988  0717                     	;# 
   989  0718                     	;# 
   990  0719                     	;# 
   991  0891                     	;# 
   992  0891                     	;# 
   993  0891                     	;# 
   994  0891                     	;# 
   995  0891                     	;# 
   996  0891                     	;# 
   997  0892                     	;# 
   998  0892                     	;# 
   999  0892                     	;# 
  1000  0893                     	;# 
  1001  0893                     	;# 
  1002  0893                     	;# 
  1003  0893                     	;# 
  1004  0893                     	;# 
  1005  0893                     	;# 
  1006  0894                     	;# 
  1007  0894                     	;# 
  1008  0894                     	;# 
  1009  0895                     	;# 
  1010  0895                     	;# 
  1011  0895                     	;# 
  1012  0896                     	;# 
  1013  0896                     	;# 
  1014  0896                     	;# 
  1015  089B                     	;# 
  1016  0911                     	;# 
  1017  0912                     	;# 
  1018  0913                     	;# 
  1019  0914                     	;# 
  1020  0915                     	;# 
  1021  0916                     	;# 
  1022  0918                     	;# 
  1023  0919                     	;# 
  1024  091A                     	;# 
  1025  091B                     	;# 
  1026  091C                     	;# 
  1027  091D                     	;# 
  1028  091E                     	;# 
  1029  091F                     	;# 
  1030  0E0F                     	;# 
  1031  0E10                     	;# 
  1032  0E11                     	;# 
  1033  0E12                     	;# 
  1034  0E13                     	;# 
  1035  0E14                     	;# 
  1036  0E15                     	;# 
  1037  0E16                     	;# 
  1038  0E17                     	;# 
  1039  0E18                     	;# 
  1040  0E19                     	;# 
  1041  0E1A                     	;# 
  1042  0E1B                     	;# 
  1043  0E1C                     	;# 
  1044  0E1D                     	;# 
  1045  0E1E                     	;# 
  1046  0E1F                     	;# 
  1047  0E20                     	;# 
  1048  0E21                     	;# 
  1049  0E22                     	;# 
  1050  0E24                     	;# 
  1051  0E25                     	;# 
  1052  0E28                     	;# 
  1053  0E29                     	;# 
  1054  0E2A                     	;# 
  1055  0E2B                     	;# 
  1056  0E2C                     	;# 
  1057  0E2D                     	;# 
  1058  0E2E                     	;# 
  1059  0E2F                     	;# 
  1060  0E90                     	;# 
  1061  0E91                     	;# 
  1062  0E92                     	;# 
  1063  0E94                     	;# 
  1064  0E95                     	;# 
  1065  0E9C                     	;# 
  1066  0E9D                     	;# 
  1067  0E9E                     	;# 
  1068  0E9F                     	;# 
  1069  0EA0                     	;# 
  1070  0EA1                     	;# 
  1071  0EA2                     	;# 
  1072  0EA3                     	;# 
  1073  0EA4                     	;# 
  1074  0EA5                     	;# 
  1075  0EA6                     	;# 
  1076  0EA7                     	;# 
  1077  0F0F                     	;# 
  1078  0F10                     	;# 
  1079  0F11                     	;# 
  1080  0F12                     	;# 
  1081  0F13                     	;# 
  1082  0F14                     	;# 
  1083  0F15                     	;# 
  1084  0F16                     	;# 
  1085  0F17                     	;# 
  1086  0F18                     	;# 
  1087  0F19                     	;# 
  1088  0F1A                     	;# 
  1089  0F1B                     	;# 
  1090  0F1C                     	;# 
  1091  0F1D                     	;# 
  1092  0F1E                     	;# 
  1093  0F1F                     	;# 
  1094  0F20                     	;# 
  1095  0F21                     	;# 
  1096  0F22                     	;# 
  1097  0F23                     	;# 
  1098  0F24                     	;# 
  1099  0F25                     	;# 
  1100  0F26                     	;# 
  1101  0F27                     	;# 
  1102  0F28                     	;# 
  1103  0F29                     	;# 
  1104  0F2A                     	;# 
  1105  0F2B                     	;# 
  1106  0F2C                     	;# 
  1107  0F2D                     	;# 
  1108  0F2E                     	;# 
  1109  0F2F                     	;# 
  1110  0F30                     	;# 
  1111  0F31                     	;# 
  1112  0F32                     	;# 
  1113  0F33                     	;# 
  1114  0F34                     	;# 
  1115  0F35                     	;# 
  1116  0F36                     	;# 
  1117  0F37                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000D                     	;# 
  1143  000E                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0014                     	;# 
  1149  0015                     	;# 
  1150  0015                     	;# 
  1151  0016                     	;# 
  1152  0016                     	;# 
  1153  0017                     	;# 
  1154  0018                     	;# 
  1155  0019                     	;# 
  1156  0019                     	;# 
  1157  001A                     	;# 
  1158  001B                     	;# 
  1159  001C                     	;# 
  1160  001D                     	;# 
  1161  001E                     	;# 
  1162  001F                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  0090                     	;# 
  1167  0091                     	;# 
  1168  0092                     	;# 
  1169  0093                     	;# 
  1170  0094                     	;# 
  1171  0097                     	;# 
  1172  009B                     	;# 
  1173  009B                     	;# 
  1174  009C                     	;# 
  1175  009D                     	;# 
  1176  009E                     	;# 
  1177  009F                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  0111                     	;# 
  1182  0112                     	;# 
  1183  0113                     	;# 
  1184  0114                     	;# 
  1185  0115                     	;# 
  1186  0116                     	;# 
  1187  0117                     	;# 
  1188  0118                     	;# 
  1189  0119                     	;# 
  1190  018C                     	;# 
  1191  018D                     	;# 
  1192  018E                     	;# 
  1193  0197                     	;# 
  1194  0199                     	;# 
  1195  0199                     	;# 
  1196  0199                     	;# 
  1197  019A                     	;# 
  1198  019A                     	;# 
  1199  019A                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019C                     	;# 
  1206  019C                     	;# 
  1207  019C                     	;# 
  1208  019D                     	;# 
  1209  019D                     	;# 
  1210  019D                     	;# 
  1211  019E                     	;# 
  1212  019E                     	;# 
  1213  019E                     	;# 
  1214  019F                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  019F                     	;# 
  1218  019F                     	;# 
  1219  020C                     	;# 
  1220  020D                     	;# 
  1221  020E                     	;# 
  1222  0211                     	;# 
  1223  0211                     	;# 
  1224  0212                     	;# 
  1225  0212                     	;# 
  1226  0213                     	;# 
  1227  0213                     	;# 
  1228  0214                     	;# 
  1229  0214                     	;# 
  1230  0215                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0216                     	;# 
  1235  0216                     	;# 
  1236  0217                     	;# 
  1237  0217                     	;# 
  1238  0219                     	;# 
  1239  021A                     	;# 
  1240  021B                     	;# 
  1241  021C                     	;# 
  1242  021D                     	;# 
  1243  021D                     	;# 
  1244  021E                     	;# 
  1245  021F                     	;# 
  1246  028C                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  0291                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0293                     	;# 
  1253  0294                     	;# 
  1254  0295                     	;# 
  1255  0295                     	;# 
  1256  0296                     	;# 
  1257  0297                     	;# 
  1258  0298                     	;# 
  1259  029F                     	;# 
  1260  030C                     	;# 
  1261  030D                     	;# 
  1262  030E                     	;# 
  1263  0311                     	;# 
  1264  0311                     	;# 
  1265  0312                     	;# 
  1266  0313                     	;# 
  1267  0314                     	;# 
  1268  0315                     	;# 
  1269  0315                     	;# 
  1270  0316                     	;# 
  1271  0317                     	;# 
  1272  0318                     	;# 
  1273  038C                     	;# 
  1274  038D                     	;# 
  1275  038E                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  0393                     	;# 
  1279  0394                     	;# 
  1280  0395                     	;# 
  1281  0396                     	;# 
  1282  0397                     	;# 
  1283  0398                     	;# 
  1284  0399                     	;# 
  1285  039A                     	;# 
  1286  039C                     	;# 
  1287  039D                     	;# 
  1288  039E                     	;# 
  1289  039F                     	;# 
  1290  0411                     	;# 
  1291  0411                     	;# 
  1292  0412                     	;# 
  1293  0413                     	;# 
  1294  0414                     	;# 
  1295  0415                     	;# 
  1296  0416                     	;# 
  1297  0417                     	;# 
  1298  0418                     	;# 
  1299  0418                     	;# 
  1300  0419                     	;# 
  1301  041A                     	;# 
  1302  041B                     	;# 
  1303  041C                     	;# 
  1304  041D                     	;# 
  1305  041E                     	;# 
  1306  041F                     	;# 
  1307  0498                     	;# 
  1308  0498                     	;# 
  1309  0499                     	;# 
  1310  049A                     	;# 
  1311  049B                     	;# 
  1312  049B                     	;# 
  1313  049C                     	;# 
  1314  049D                     	;# 
  1315  049E                     	;# 
  1316  049F                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  0619                     	;# 
  1321  061A                     	;# 
  1322  061B                     	;# 
  1323  061C                     	;# 
  1324  061C                     	;# 
  1325  061F                     	;# 
  1326  0691                     	;# 
  1327  0692                     	;# 
  1328  0693                     	;# 
  1329  0694                     	;# 
  1330  0695                     	;# 
  1331  0696                     	;# 
  1332  0697                     	;# 
  1333  0698                     	;# 
  1334  0699                     	;# 
  1335  0711                     	;# 
  1336  0712                     	;# 
  1337  0713                     	;# 
  1338  0714                     	;# 
  1339  0715                     	;# 
  1340  0716                     	;# 
  1341  0717                     	;# 
  1342  0718                     	;# 
  1343  0719                     	;# 
  1344  0891                     	;# 
  1345  0891                     	;# 
  1346  0891                     	;# 
  1347  0891                     	;# 
  1348  0891                     	;# 
  1349  0891                     	;# 
  1350  0892                     	;# 
  1351  0892                     	;# 
  1352  0892                     	;# 
  1353  0893                     	;# 
  1354  0893                     	;# 
  1355  0893                     	;# 
  1356  0893                     	;# 
  1357  0893                     	;# 
  1358  0893                     	;# 
  1359  0894                     	;# 
  1360  0894                     	;# 
  1361  0894                     	;# 
  1362  0895                     	;# 
  1363  0895                     	;# 
  1364  0895                     	;# 
  1365  0896                     	;# 
  1366  0896                     	;# 
  1367  0896                     	;# 
  1368  089B                     	;# 
  1369  0911                     	;# 
  1370  0912                     	;# 
  1371  0913                     	;# 
  1372  0914                     	;# 
  1373  0915                     	;# 
  1374  0916                     	;# 
  1375  0918                     	;# 
  1376  0919                     	;# 
  1377  091A                     	;# 
  1378  091B                     	;# 
  1379  091C                     	;# 
  1380  091D                     	;# 
  1381  091E                     	;# 
  1382  091F                     	;# 
  1383  0E0F                     	;# 
  1384  0E10                     	;# 
  1385  0E11                     	;# 
  1386  0E12                     	;# 
  1387  0E13                     	;# 
  1388  0E14                     	;# 
  1389  0E15                     	;# 
  1390  0E16                     	;# 
  1391  0E17                     	;# 
  1392  0E18                     	;# 
  1393  0E19                     	;# 
  1394  0E1A                     	;# 
  1395  0E1B                     	;# 
  1396  0E1C                     	;# 
  1397  0E1D                     	;# 
  1398  0E1E                     	;# 
  1399  0E1F                     	;# 
  1400  0E20                     	;# 
  1401  0E21                     	;# 
  1402  0E22                     	;# 
  1403  0E24                     	;# 
  1404  0E25                     	;# 
  1405  0E28                     	;# 
  1406  0E29                     	;# 
  1407  0E2A                     	;# 
  1408  0E2B                     	;# 
  1409  0E2C                     	;# 
  1410  0E2D                     	;# 
  1411  0E2E                     	;# 
  1412  0E2F                     	;# 
  1413  0E90                     	;# 
  1414  0E91                     	;# 
  1415  0E92                     	;# 
  1416  0E94                     	;# 
  1417  0E95                     	;# 
  1418  0E9C                     	;# 
  1419  0E9D                     	;# 
  1420  0E9E                     	;# 
  1421  0E9F                     	;# 
  1422  0EA0                     	;# 
  1423  0EA1                     	;# 
  1424  0EA2                     	;# 
  1425  0EA3                     	;# 
  1426  0EA4                     	;# 
  1427  0EA5                     	;# 
  1428  0EA6                     	;# 
  1429  0EA7                     	;# 
  1430  0F0F                     	;# 
  1431  0F10                     	;# 
  1432  0F11                     	;# 
  1433  0F12                     	;# 
  1434  0F13                     	;# 
  1435  0F14                     	;# 
  1436  0F15                     	;# 
  1437  0F16                     	;# 
  1438  0F17                     	;# 
  1439  0F18                     	;# 
  1440  0F19                     	;# 
  1441  0F1A                     	;# 
  1442  0F1B                     	;# 
  1443  0F1C                     	;# 
  1444  0F1D                     	;# 
  1445  0F1E                     	;# 
  1446  0F1F                     	;# 
  1447  0F20                     	;# 
  1448  0F21                     	;# 
  1449  0F22                     	;# 
  1450  0F23                     	;# 
  1451  0F24                     	;# 
  1452  0F25                     	;# 
  1453  0F26                     	;# 
  1454  0F27                     	;# 
  1455  0F28                     	;# 
  1456  0F29                     	;# 
  1457  0F2A                     	;# 
  1458  0F2B                     	;# 
  1459  0F2C                     	;# 
  1460  0F2D                     	;# 
  1461  0F2E                     	;# 
  1462  0F2F                     	;# 
  1463  0F30                     	;# 
  1464  0F31                     	;# 
  1465  0F32                     	;# 
  1466  0F33                     	;# 
  1467  0F34                     	;# 
  1468  0F35                     	;# 
  1469  0F36                     	;# 
  1470  0F37                     	;# 
  1471  0FE4                     	;# 
  1472  0FE5                     	;# 
  1473  0FE6                     	;# 
  1474  0FE7                     	;# 
  1475  0FE8                     	;# 
  1476  0FE9                     	;# 
  1477  0FEA                     	;# 
  1478  0FEB                     	;# 
  1479  0FED                     	;# 
  1480  0FEE                     	;# 
  1481  0FEF                     	;# 
  1482  0000                     	;# 
  1483  0001                     	;# 
  1484  0002                     	;# 
  1485  0003                     	;# 
  1486  0004                     	;# 
  1487  0005                     	;# 
  1488  0006                     	;# 
  1489  0007                     	;# 
  1490  0008                     	;# 
  1491  0009                     	;# 
  1492  000A                     	;# 
  1493  000B                     	;# 
  1494  000C                     	;# 
  1495  000D                     	;# 
  1496  000E                     	;# 
  1497  0010                     	;# 
  1498  0011                     	;# 
  1499  0012                     	;# 
  1500  0013                     	;# 
  1501  0014                     	;# 
  1502  0015                     	;# 
  1503  0015                     	;# 
  1504  0016                     	;# 
  1505  0016                     	;# 
  1506  0017                     	;# 
  1507  0018                     	;# 
  1508  0019                     	;# 
  1509  0019                     	;# 
  1510  001A                     	;# 
  1511  001B                     	;# 
  1512  001C                     	;# 
  1513  001D                     	;# 
  1514  001E                     	;# 
  1515  001F                     	;# 
  1516  008C                     	;# 
  1517  008D                     	;# 
  1518  008E                     	;# 
  1519  0090                     	;# 
  1520  0091                     	;# 
  1521  0092                     	;# 
  1522  0093                     	;# 
  1523  0094                     	;# 
  1524  0097                     	;# 
  1525  009B                     	;# 
  1526  009B                     	;# 
  1527  009C                     	;# 
  1528  009D                     	;# 
  1529  009E                     	;# 
  1530  009F                     	;# 
  1531  010C                     	;# 
  1532  010D                     	;# 
  1533  010E                     	;# 
  1534  0111                     	;# 
  1535  0112                     	;# 
  1536  0113                     	;# 
  1537  0114                     	;# 
  1538  0115                     	;# 
  1539  0116                     	;# 
  1540  0117                     	;# 
  1541  0118                     	;# 
  1542  0119                     	;# 
  1543  018C                     	;# 
  1544  018D                     	;# 
  1545  018E                     	;# 
  1546  0197                     	;# 
  1547  0199                     	;# 
  1548  0199                     	;# 
  1549  0199                     	;# 
  1550  019A                     	;# 
  1551  019A                     	;# 
  1552  019A                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019C                     	;# 
  1559  019C                     	;# 
  1560  019C                     	;# 
  1561  019D                     	;# 
  1562  019D                     	;# 
  1563  019D                     	;# 
  1564  019E                     	;# 
  1565  019E                     	;# 
  1566  019E                     	;# 
  1567  019F                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  019F                     	;# 
  1571  019F                     	;# 
  1572  020C                     	;# 
  1573  020D                     	;# 
  1574  020E                     	;# 
  1575  0211                     	;# 
  1576  0211                     	;# 
  1577  0212                     	;# 
  1578  0212                     	;# 
  1579  0213                     	;# 
  1580  0213                     	;# 
  1581  0214                     	;# 
  1582  0214                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0216                     	;# 
  1588  0216                     	;# 
  1589  0217                     	;# 
  1590  0217                     	;# 
  1591  0219                     	;# 
  1592  021A                     	;# 
  1593  021B                     	;# 
  1594  021C                     	;# 
  1595  021D                     	;# 
  1596  021D                     	;# 
  1597  021E                     	;# 
  1598  021F                     	;# 
  1599  028C                     	;# 
  1600  028D                     	;# 
  1601  028E                     	;# 
  1602  0291                     	;# 
  1603  0291                     	;# 
  1604  0292                     	;# 
  1605  0293                     	;# 
  1606  0294                     	;# 
  1607  0295                     	;# 
  1608  0295                     	;# 
  1609  0296                     	;# 
  1610  0297                     	;# 
  1611  0298                     	;# 
  1612  029F                     	;# 
  1613  030C                     	;# 
  1614  030D                     	;# 
  1615  030E                     	;# 
  1616  0311                     	;# 
  1617  0311                     	;# 
  1618  0312                     	;# 
  1619  0313                     	;# 
  1620  0314                     	;# 
  1621  0315                     	;# 
  1622  0315                     	;# 
  1623  0316                     	;# 
  1624  0317                     	;# 
  1625  0318                     	;# 
  1626  038C                     	;# 
  1627  038D                     	;# 
  1628  038E                     	;# 
  1629  0391                     	;# 
  1630  0392                     	;# 
  1631  0393                     	;# 
  1632  0394                     	;# 
  1633  0395                     	;# 
  1634  0396                     	;# 
  1635  0397                     	;# 
  1636  0398                     	;# 
  1637  0399                     	;# 
  1638  039A                     	;# 
  1639  039C                     	;# 
  1640  039D                     	;# 
  1641  039E                     	;# 
  1642  039F                     	;# 
  1643  0411                     	;# 
  1644  0411                     	;# 
  1645  0412                     	;# 
  1646  0413                     	;# 
  1647  0414                     	;# 
  1648  0415                     	;# 
  1649  0416                     	;# 
  1650  0417                     	;# 
  1651  0418                     	;# 
  1652  0418                     	;# 
  1653  0419                     	;# 
  1654  041A                     	;# 
  1655  041B                     	;# 
  1656  041C                     	;# 
  1657  041D                     	;# 
  1658  041E                     	;# 
  1659  041F                     	;# 
  1660  0498                     	;# 
  1661  0498                     	;# 
  1662  0499                     	;# 
  1663  049A                     	;# 
  1664  049B                     	;# 
  1665  049B                     	;# 
  1666  049C                     	;# 
  1667  049D                     	;# 
  1668  049E                     	;# 
  1669  049F                     	;# 
  1670  0617                     	;# 
  1671  0618                     	;# 
  1672  0619                     	;# 
  1673  0619                     	;# 
  1674  061A                     	;# 
  1675  061B                     	;# 
  1676  061C                     	;# 
  1677  061C                     	;# 
  1678  061F                     	;# 
  1679  0691                     	;# 
  1680  0692                     	;# 
  1681  0693                     	;# 
  1682  0694                     	;# 
  1683  0695                     	;# 
  1684  0696                     	;# 
  1685  0697                     	;# 
  1686  0698                     	;# 
  1687  0699                     	;# 
  1688  0711                     	;# 
  1689  0712                     	;# 
  1690  0713                     	;# 
  1691  0714                     	;# 
  1692  0715                     	;# 
  1693  0716                     	;# 
  1694  0717                     	;# 
  1695  0718                     	;# 
  1696  0719                     	;# 
  1697  0891                     	;# 
  1698  0891                     	;# 
  1699  0891                     	;# 
  1700  0891                     	;# 
  1701  0891                     	;# 
  1702  0891                     	;# 
  1703  0892                     	;# 
  1704  0892                     	;# 
  1705  0892                     	;# 
  1706  0893                     	;# 
  1707  0893                     	;# 
  1708  0893                     	;# 
  1709  0893                     	;# 
  1710  0893                     	;# 
  1711  0893                     	;# 
  1712  0894                     	;# 
  1713  0894                     	;# 
  1714  0894                     	;# 
  1715  0895                     	;# 
  1716  0895                     	;# 
  1717  0895                     	;# 
  1718  0896                     	;# 
  1719  0896                     	;# 
  1720  0896                     	;# 
  1721  089B                     	;# 
  1722  0911                     	;# 
  1723  0912                     	;# 
  1724  0913                     	;# 
  1725  0914                     	;# 
  1726  0915                     	;# 
  1727  0916                     	;# 
  1728  0918                     	;# 
  1729  0919                     	;# 
  1730  091A                     	;# 
  1731  091B                     	;# 
  1732  091C                     	;# 
  1733  091D                     	;# 
  1734  091E                     	;# 
  1735  091F                     	;# 
  1736  0E0F                     	;# 
  1737  0E10                     	;# 
  1738  0E11                     	;# 
  1739  0E12                     	;# 
  1740  0E13                     	;# 
  1741  0E14                     	;# 
  1742  0E15                     	;# 
  1743  0E16                     	;# 
  1744  0E17                     	;# 
  1745  0E18                     	;# 
  1746  0E19                     	;# 
  1747  0E1A                     	;# 
  1748  0E1B                     	;# 
  1749  0E1C                     	;# 
  1750  0E1D                     	;# 
  1751  0E1E                     	;# 
  1752  0E1F                     	;# 
  1753  0E20                     	;# 
  1754  0E21                     	;# 
  1755  0E22                     	;# 
  1756  0E24                     	;# 
  1757  0E25                     	;# 
  1758  0E28                     	;# 
  1759  0E29                     	;# 
  1760  0E2A                     	;# 
  1761  0E2B                     	;# 
  1762  0E2C                     	;# 
  1763  0E2D                     	;# 
  1764  0E2E                     	;# 
  1765  0E2F                     	;# 
  1766  0E90                     	;# 
  1767  0E91                     	;# 
  1768  0E92                     	;# 
  1769  0E94                     	;# 
  1770  0E95                     	;# 
  1771  0E9C                     	;# 
  1772  0E9D                     	;# 
  1773  0E9E                     	;# 
  1774  0E9F                     	;# 
  1775  0EA0                     	;# 
  1776  0EA1                     	;# 
  1777  0EA2                     	;# 
  1778  0EA3                     	;# 
  1779  0EA4                     	;# 
  1780  0EA5                     	;# 
  1781  0EA6                     	;# 
  1782  0EA7                     	;# 
  1783  0F0F                     	;# 
  1784  0F10                     	;# 
  1785  0F11                     	;# 
  1786  0F12                     	;# 
  1787  0F13                     	;# 
  1788  0F14                     	;# 
  1789  0F15                     	;# 
  1790  0F16                     	;# 
  1791  0F17                     	;# 
  1792  0F18                     	;# 
  1793  0F19                     	;# 
  1794  0F1A                     	;# 
  1795  0F1B                     	;# 
  1796  0F1C                     	;# 
  1797  0F1D                     	;# 
  1798  0F1E                     	;# 
  1799  0F1F                     	;# 
  1800  0F20                     	;# 
  1801  0F21                     	;# 
  1802  0F22                     	;# 
  1803  0F23                     	;# 
  1804  0F24                     	;# 
  1805  0F25                     	;# 
  1806  0F26                     	;# 
  1807  0F27                     	;# 
  1808  0F28                     	;# 
  1809  0F29                     	;# 
  1810  0F2A                     	;# 
  1811  0F2B                     	;# 
  1812  0F2C                     	;# 
  1813  0F2D                     	;# 
  1814  0F2E                     	;# 
  1815  0F2F                     	;# 
  1816  0F30                     	;# 
  1817  0F31                     	;# 
  1818  0F32                     	;# 
  1819  0F33                     	;# 
  1820  0F34                     	;# 
  1821  0F35                     	;# 
  1822  0F36                     	;# 
  1823  0F37                     	;# 
  1824  0FE4                     	;# 
  1825  0FE5                     	;# 
  1826  0FE6                     	;# 
  1827  0FE7                     	;# 
  1828  0FE8                     	;# 
  1829  0FE9                     	;# 
  1830  0FEA                     	;# 
  1831  0FEB                     	;# 
  1832  0FED                     	;# 
  1833  0FEE                     	;# 
  1834  0FEF                     	;# 
  1835  0000                     	;# 
  1836  0001                     	;# 
  1837  0002                     	;# 
  1838  0003                     	;# 
  1839  0004                     	;# 
  1840  0005                     	;# 
  1841  0006                     	;# 
  1842  0007                     	;# 
  1843  0008                     	;# 
  1844  0009                     	;# 
  1845  000A                     	;# 
  1846  000B                     	;# 
  1847  000C                     	;# 
  1848  000D                     	;# 
  1849  000E                     	;# 
  1850  0010                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0013                     	;# 
  1854  0014                     	;# 
  1855  0015                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  0019                     	;# 
  1863  001A                     	;# 
  1864  001B                     	;# 
  1865  001C                     	;# 
  1866  001D                     	;# 
  1867  001E                     	;# 
  1868  001F                     	;# 
  1869  008C                     	;# 
  1870  008D                     	;# 
  1871  008E                     	;# 
  1872  0090                     	;# 
  1873  0091                     	;# 
  1874  0092                     	;# 
  1875  0093                     	;# 
  1876  0094                     	;# 
  1877  0097                     	;# 
  1878  009B                     	;# 
  1879  009B                     	;# 
  1880  009C                     	;# 
  1881  009D                     	;# 
  1882  009E                     	;# 
  1883  009F                     	;# 
  1884  010C                     	;# 
  1885  010D                     	;# 
  1886  010E                     	;# 
  1887  0111                     	;# 
  1888  0112                     	;# 
  1889  0113                     	;# 
  1890  0114                     	;# 
  1891  0115                     	;# 
  1892  0116                     	;# 
  1893  0117                     	;# 
  1894  0118                     	;# 
  1895  0119                     	;# 
  1896  018C                     	;# 
  1897  018D                     	;# 
  1898  018E                     	;# 
  1899  0197                     	;# 
  1900  0199                     	;# 
  1901  0199                     	;# 
  1902  0199                     	;# 
  1903  019A                     	;# 
  1904  019A                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019C                     	;# 
  1912  019C                     	;# 
  1913  019C                     	;# 
  1914  019D                     	;# 
  1915  019D                     	;# 
  1916  019D                     	;# 
  1917  019E                     	;# 
  1918  019E                     	;# 
  1919  019E                     	;# 
  1920  019F                     	;# 
  1921  019F                     	;# 
  1922  019F                     	;# 
  1923  019F                     	;# 
  1924  019F                     	;# 
  1925  020C                     	;# 
  1926  020D                     	;# 
  1927  020E                     	;# 
  1928  0211                     	;# 
  1929  0211                     	;# 
  1930  0212                     	;# 
  1931  0212                     	;# 
  1932  0213                     	;# 
  1933  0213                     	;# 
  1934  0214                     	;# 
  1935  0214                     	;# 
  1936  0215                     	;# 
  1937  0215                     	;# 
  1938  0215                     	;# 
  1939  0215                     	;# 
  1940  0216                     	;# 
  1941  0216                     	;# 
  1942  0217                     	;# 
  1943  0217                     	;# 
  1944  0219                     	;# 
  1945  021A                     	;# 
  1946  021B                     	;# 
  1947  021C                     	;# 
  1948  021D                     	;# 
  1949  021D                     	;# 
  1950  021E                     	;# 
  1951  021F                     	;# 
  1952  028C                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  0291                     	;# 
  1956  0291                     	;# 
  1957  0292                     	;# 
  1958  0293                     	;# 
  1959  0294                     	;# 
  1960  0295                     	;# 
  1961  0295                     	;# 
  1962  0296                     	;# 
  1963  0297                     	;# 
  1964  0298                     	;# 
  1965  029F                     	;# 
  1966  030C                     	;# 
  1967  030D                     	;# 
  1968  030E                     	;# 
  1969  0311                     	;# 
  1970  0311                     	;# 
  1971  0312                     	;# 
  1972  0313                     	;# 
  1973  0314                     	;# 
  1974  0315                     	;# 
  1975  0315                     	;# 
  1976  0316                     	;# 
  1977  0317                     	;# 
  1978  0318                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0391                     	;# 
  1983  0392                     	;# 
  1984  0393                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  0397                     	;# 
  1989  0398                     	;# 
  1990  0399                     	;# 
  1991  039A                     	;# 
  1992  039C                     	;# 
  1993  039D                     	;# 
  1994  039E                     	;# 
  1995  039F                     	;# 
  1996  0411                     	;# 
  1997  0411                     	;# 
  1998  0412                     	;# 
  1999  0413                     	;# 
  2000  0414                     	;# 
  2001  0415                     	;# 
  2002  0416                     	;# 
  2003  0417                     	;# 
  2004  0418                     	;# 
  2005  0418                     	;# 
  2006  0419                     	;# 
  2007  041A                     	;# 
  2008  041B                     	;# 
  2009  041C                     	;# 
  2010  041D                     	;# 
  2011  041E                     	;# 
  2012  041F                     	;# 
  2013  0498                     	;# 
  2014  0498                     	;# 
  2015  0499                     	;# 
  2016  049A                     	;# 
  2017  049B                     	;# 
  2018  049B                     	;# 
  2019  049C                     	;# 
  2020  049D                     	;# 
  2021  049E                     	;# 
  2022  049F                     	;# 
  2023  0617                     	;# 
  2024  0618                     	;# 
  2025  0619                     	;# 
  2026  0619                     	;# 
  2027  061A                     	;# 
  2028  061B                     	;# 
  2029  061C                     	;# 
  2030  061C                     	;# 
  2031  061F                     	;# 
  2032  0691                     	;# 
  2033  0692                     	;# 
  2034  0693                     	;# 
  2035  0694                     	;# 
  2036  0695                     	;# 
  2037  0696                     	;# 
  2038  0697                     	;# 
  2039  0698                     	;# 
  2040  0699                     	;# 
  2041  0711                     	;# 
  2042  0712                     	;# 
  2043  0713                     	;# 
  2044  0714                     	;# 
  2045  0715                     	;# 
  2046  0716                     	;# 
  2047  0717                     	;# 
  2048  0718                     	;# 
  2049  0719                     	;# 
  2050  0891                     	;# 
  2051  0891                     	;# 
  2052  0891                     	;# 
  2053  0891                     	;# 
  2054  0891                     	;# 
  2055  0891                     	;# 
  2056  0892                     	;# 
  2057  0892                     	;# 
  2058  0892                     	;# 
  2059  0893                     	;# 
  2060  0893                     	;# 
  2061  0893                     	;# 
  2062  0893                     	;# 
  2063  0893                     	;# 
  2064  0893                     	;# 
  2065  0894                     	;# 
  2066  0894                     	;# 
  2067  0894                     	;# 
  2068  0895                     	;# 
  2069  0895                     	;# 
  2070  0895                     	;# 
  2071  0896                     	;# 
  2072  0896                     	;# 
  2073  0896                     	;# 
  2074  089B                     	;# 
  2075  0911                     	;# 
  2076  0912                     	;# 
  2077  0913                     	;# 
  2078  0914                     	;# 
  2079  0915                     	;# 
  2080  0916                     	;# 
  2081  0918                     	;# 
  2082  0919                     	;# 
  2083  091A                     	;# 
  2084  091B                     	;# 
  2085  091C                     	;# 
  2086  091D                     	;# 
  2087  091E                     	;# 
  2088  091F                     	;# 
  2089  0E0F                     	;# 
  2090  0E10                     	;# 
  2091  0E11                     	;# 
  2092  0E12                     	;# 
  2093  0E13                     	;# 
  2094  0E14                     	;# 
  2095  0E15                     	;# 
  2096  0E16                     	;# 
  2097  0E17                     	;# 
  2098  0E18                     	;# 
  2099  0E19                     	;# 
  2100  0E1A                     	;# 
  2101  0E1B                     	;# 
  2102  0E1C                     	;# 
  2103  0E1D                     	;# 
  2104  0E1E                     	;# 
  2105  0E1F                     	;# 
  2106  0E20                     	;# 
  2107  0E21                     	;# 
  2108  0E22                     	;# 
  2109  0E24                     	;# 
  2110  0E25                     	;# 
  2111  0E28                     	;# 
  2112  0E29                     	;# 
  2113  0E2A                     	;# 
  2114  0E2B                     	;# 
  2115  0E2C                     	;# 
  2116  0E2D                     	;# 
  2117  0E2E                     	;# 
  2118  0E2F                     	;# 
  2119  0E90                     	;# 
  2120  0E91                     	;# 
  2121  0E92                     	;# 
  2122  0E94                     	;# 
  2123  0E95                     	;# 
  2124  0E9C                     	;# 
  2125  0E9D                     	;# 
  2126  0E9E                     	;# 
  2127  0E9F                     	;# 
  2128  0EA0                     	;# 
  2129  0EA1                     	;# 
  2130  0EA2                     	;# 
  2131  0EA3                     	;# 
  2132  0EA4                     	;# 
  2133  0EA5                     	;# 
  2134  0EA6                     	;# 
  2135  0EA7                     	;# 
  2136  0F0F                     	;# 
  2137  0F10                     	;# 
  2138  0F11                     	;# 
  2139  0F12                     	;# 
  2140  0F13                     	;# 
  2141  0F14                     	;# 
  2142  0F15                     	;# 
  2143  0F16                     	;# 
  2144  0F17                     	;# 
  2145  0F18                     	;# 
  2146  0F19                     	;# 
  2147  0F1A                     	;# 
  2148  0F1B                     	;# 
  2149  0F1C                     	;# 
  2150  0F1D                     	;# 
  2151  0F1E                     	;# 
  2152  0F1F                     	;# 
  2153  0F20                     	;# 
  2154  0F21                     	;# 
  2155  0F22                     	;# 
  2156  0F23                     	;# 
  2157  0F24                     	;# 
  2158  0F25                     	;# 
  2159  0F26                     	;# 
  2160  0F27                     	;# 
  2161  0F28                     	;# 
  2162  0F29                     	;# 
  2163  0F2A                     	;# 
  2164  0F2B                     	;# 
  2165  0F2C                     	;# 
  2166  0F2D                     	;# 
  2167  0F2E                     	;# 
  2168  0F2F                     	;# 
  2169  0F30                     	;# 
  2170  0F31                     	;# 
  2171  0F32                     	;# 
  2172  0F33                     	;# 
  2173  0F34                     	;# 
  2174  0F35                     	;# 
  2175  0F36                     	;# 
  2176  0F37                     	;# 
  2177  0FE4                     	;# 
  2178  0FE5                     	;# 
  2179  0FE6                     	;# 
  2180  0FE7                     	;# 
  2181  0FE8                     	;# 
  2182  0FE9                     	;# 
  2183  0FEA                     	;# 
  2184  0FEB                     	;# 
  2185  0FED                     	;# 
  2186  0FEE                     	;# 
  2187  0FEF                     	;# 
  2188  0000                     	;# 
  2189  0001                     	;# 
  2190  0002                     	;# 
  2191  0003                     	;# 
  2192  0004                     	;# 
  2193  0005                     	;# 
  2194  0006                     	;# 
  2195  0007                     	;# 
  2196  0008                     	;# 
  2197  0009                     	;# 
  2198  000A                     	;# 
  2199  000B                     	;# 
  2200  000C                     	;# 
  2201  000D                     	;# 
  2202  000E                     	;# 
  2203  0010                     	;# 
  2204  0011                     	;# 
  2205  0012                     	;# 
  2206  0013                     	;# 
  2207  0014                     	;# 
  2208  0015                     	;# 
  2209  0015                     	;# 
  2210  0016                     	;# 
  2211  0016                     	;# 
  2212  0017                     	;# 
  2213  0018                     	;# 
  2214  0019                     	;# 
  2215  0019                     	;# 
  2216  001A                     	;# 
  2217  001B                     	;# 
  2218  001C                     	;# 
  2219  001D                     	;# 
  2220  001E                     	;# 
  2221  001F                     	;# 
  2222  008C                     	;# 
  2223  008D                     	;# 
  2224  008E                     	;# 
  2225  0090                     	;# 
  2226  0091                     	;# 
  2227  0092                     	;# 
  2228  0093                     	;# 
  2229  0094                     	;# 
  2230  0097                     	;# 
  2231  009B                     	;# 
  2232  009B                     	;# 
  2233  009C                     	;# 
  2234  009D                     	;# 
  2235  009E                     	;# 
  2236  009F                     	;# 
  2237  010C                     	;# 
  2238  010D                     	;# 
  2239  010E                     	;# 
  2240  0111                     	;# 
  2241  0112                     	;# 
  2242  0113                     	;# 
  2243  0114                     	;# 
  2244  0115                     	;# 
  2245  0116                     	;# 
  2246  0117                     	;# 
  2247  0118                     	;# 
  2248  0119                     	;# 
  2249  018C                     	;# 
  2250  018D                     	;# 
  2251  018E                     	;# 
  2252  0197                     	;# 
  2253  0199                     	;# 
  2254  0199                     	;# 
  2255  0199                     	;# 
  2256  019A                     	;# 
  2257  019A                     	;# 
  2258  019A                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019B                     	;# 
  2263  019B                     	;# 
  2264  019C                     	;# 
  2265  019C                     	;# 
  2266  019C                     	;# 
  2267  019D                     	;# 
  2268  019D                     	;# 
  2269  019D                     	;# 
  2270  019E                     	;# 
  2271  019E                     	;# 
  2272  019E                     	;# 
  2273  019F                     	;# 
  2274  019F                     	;# 
  2275  019F                     	;# 
  2276  019F                     	;# 
  2277  019F                     	;# 
  2278  020C                     	;# 
  2279  020D                     	;# 
  2280  020E                     	;# 
  2281  0211                     	;# 
  2282  0211                     	;# 
  2283  0212                     	;# 
  2284  0212                     	;# 
  2285  0213                     	;# 
  2286  0213                     	;# 
  2287  0214                     	;# 
  2288  0214                     	;# 
  2289  0215                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0216                     	;# 
  2294  0216                     	;# 
  2295  0217                     	;# 
  2296  0217                     	;# 
  2297  0219                     	;# 
  2298  021A                     	;# 
  2299  021B                     	;# 
  2300  021C                     	;# 
  2301  021D                     	;# 
  2302  021D                     	;# 
  2303  021E                     	;# 
  2304  021F                     	;# 
  2305  028C                     	;# 
  2306  028D                     	;# 
  2307  028E                     	;# 
  2308  0291                     	;# 
  2309  0291                     	;# 
  2310  0292                     	;# 
  2311  0293                     	;# 
  2312  0294                     	;# 
  2313  0295                     	;# 
  2314  0295                     	;# 
  2315  0296                     	;# 
  2316  0297                     	;# 
  2317  0298                     	;# 
  2318  029F                     	;# 
  2319  030C                     	;# 
  2320  030D                     	;# 
  2321  030E                     	;# 
  2322  0311                     	;# 
  2323  0311                     	;# 
  2324  0312                     	;# 
  2325  0313                     	;# 
  2326  0314                     	;# 
  2327  0315                     	;# 
  2328  0315                     	;# 
  2329  0316                     	;# 
  2330  0317                     	;# 
  2331  0318                     	;# 
  2332  038C                     	;# 
  2333  038D                     	;# 
  2334  038E                     	;# 
  2335  0391                     	;# 
  2336  0392                     	;# 
  2337  0393                     	;# 
  2338  0394                     	;# 
  2339  0395                     	;# 
  2340  0396                     	;# 
  2341  0397                     	;# 
  2342  0398                     	;# 
  2343  0399                     	;# 
  2344  039A                     	;# 
  2345  039C                     	;# 
  2346  039D                     	;# 
  2347  039E                     	;# 
  2348  039F                     	;# 
  2349  0411                     	;# 
  2350  0411                     	;# 
  2351  0412                     	;# 
  2352  0413                     	;# 
  2353  0414                     	;# 
  2354  0415                     	;# 
  2355  0416                     	;# 
  2356  0417                     	;# 
  2357  0418                     	;# 
  2358  0418                     	;# 
  2359  0419                     	;# 
  2360  041A                     	;# 
  2361  041B                     	;# 
  2362  041C                     	;# 
  2363  041D                     	;# 
  2364  041E                     	;# 
  2365  041F                     	;# 
  2366  0498                     	;# 
  2367  0498                     	;# 
  2368  0499                     	;# 
  2369  049A                     	;# 
  2370  049B                     	;# 
  2371  049B                     	;# 
  2372  049C                     	;# 
  2373  049D                     	;# 
  2374  049E                     	;# 
  2375  049F                     	;# 
  2376  0617                     	;# 
  2377  0618                     	;# 
  2378  0619                     	;# 
  2379  0619                     	;# 
  2380  061A                     	;# 
  2381  061B                     	;# 
  2382  061C                     	;# 
  2383  061C                     	;# 
  2384  061F                     	;# 
  2385  0691                     	;# 
  2386  0692                     	;# 
  2387  0693                     	;# 
  2388  0694                     	;# 
  2389  0695                     	;# 
  2390  0696                     	;# 
  2391  0697                     	;# 
  2392  0698                     	;# 
  2393  0699                     	;# 
  2394  0711                     	;# 
  2395  0712                     	;# 
  2396  0713                     	;# 
  2397  0714                     	;# 
  2398  0715                     	;# 
  2399  0716                     	;# 
  2400  0717                     	;# 
  2401  0718                     	;# 
  2402  0719                     	;# 
  2403  0891                     	;# 
  2404  0891                     	;# 
  2405  0891                     	;# 
  2406  0891                     	;# 
  2407  0891                     	;# 
  2408  0891                     	;# 
  2409  0892                     	;# 
  2410  0892                     	;# 
  2411  0892                     	;# 
  2412  0893                     	;# 
  2413  0893                     	;# 
  2414  0893                     	;# 
  2415  0893                     	;# 
  2416  0893                     	;# 
  2417  0893                     	;# 
  2418  0894                     	;# 
  2419  0894                     	;# 
  2420  0894                     	;# 
  2421  0895                     	;# 
  2422  0895                     	;# 
  2423  0895                     	;# 
  2424  0896                     	;# 
  2425  0896                     	;# 
  2426  0896                     	;# 
  2427  089B                     	;# 
  2428  0911                     	;# 
  2429  0912                     	;# 
  2430  0913                     	;# 
  2431  0914                     	;# 
  2432  0915                     	;# 
  2433  0916                     	;# 
  2434  0918                     	;# 
  2435  0919                     	;# 
  2436  091A                     	;# 
  2437  091B                     	;# 
  2438  091C                     	;# 
  2439  091D                     	;# 
  2440  091E                     	;# 
  2441  091F                     	;# 
  2442  0E0F                     	;# 
  2443  0E10                     	;# 
  2444  0E11                     	;# 
  2445  0E12                     	;# 
  2446  0E13                     	;# 
  2447  0E14                     	;# 
  2448  0E15                     	;# 
  2449  0E16                     	;# 
  2450  0E17                     	;# 
  2451  0E18                     	;# 
  2452  0E19                     	;# 
  2453  0E1A                     	;# 
  2454  0E1B                     	;# 
  2455  0E1C                     	;# 
  2456  0E1D                     	;# 
  2457  0E1E                     	;# 
  2458  0E1F                     	;# 
  2459  0E20                     	;# 
  2460  0E21                     	;# 
  2461  0E22                     	;# 
  2462  0E24                     	;# 
  2463  0E25                     	;# 
  2464  0E28                     	;# 
  2465  0E29                     	;# 
  2466  0E2A                     	;# 
  2467  0E2B                     	;# 
  2468  0E2C                     	;# 
  2469  0E2D                     	;# 
  2470  0E2E                     	;# 
  2471  0E2F                     	;# 
  2472  0E90                     	;# 
  2473  0E91                     	;# 
  2474  0E92                     	;# 
  2475  0E94                     	;# 
  2476  0E95                     	;# 
  2477  0E9C                     	;# 
  2478  0E9D                     	;# 
  2479  0E9E                     	;# 
  2480  0E9F                     	;# 
  2481  0EA0                     	;# 
  2482  0EA1                     	;# 
  2483  0EA2                     	;# 
  2484  0EA3                     	;# 
  2485  0EA4                     	;# 
  2486  0EA5                     	;# 
  2487  0EA6                     	;# 
  2488  0EA7                     	;# 
  2489  0F0F                     	;# 
  2490  0F10                     	;# 
  2491  0F11                     	;# 
  2492  0F12                     	;# 
  2493  0F13                     	;# 
  2494  0F14                     	;# 
  2495  0F15                     	;# 
  2496  0F16                     	;# 
  2497  0F17                     	;# 
  2498  0F18                     	;# 
  2499  0F19                     	;# 
  2500  0F1A                     	;# 
  2501  0F1B                     	;# 
  2502  0F1C                     	;# 
  2503  0F1D                     	;# 
  2504  0F1E                     	;# 
  2505  0F1F                     	;# 
  2506  0F20                     	;# 
  2507  0F21                     	;# 
  2508  0F22                     	;# 
  2509  0F23                     	;# 
  2510  0F24                     	;# 
  2511  0F25                     	;# 
  2512  0F26                     	;# 
  2513  0F27                     	;# 
  2514  0F28                     	;# 
  2515  0F29                     	;# 
  2516  0F2A                     	;# 
  2517  0F2B                     	;# 
  2518  0F2C                     	;# 
  2519  0F2D                     	;# 
  2520  0F2E                     	;# 
  2521  0F2F                     	;# 
  2522  0F30                     	;# 
  2523  0F31                     	;# 
  2524  0F32                     	;# 
  2525  0F33                     	;# 
  2526  0F34                     	;# 
  2527  0F35                     	;# 
  2528  0F36                     	;# 
  2529  0F37                     	;# 
  2530  0FE4                     	;# 
  2531  0FE5                     	;# 
  2532  0FE6                     	;# 
  2533  0FE7                     	;# 
  2534  0FE8                     	;# 
  2535  0FE9                     	;# 
  2536  0FEA                     	;# 
  2537  0FEB                     	;# 
  2538  0FED                     	;# 
  2539  0FEE                     	;# 
  2540  0FEF                     	;# 
  2541  0000                     	;# 
  2542  0001                     	;# 
  2543  0002                     	;# 
  2544  0003                     	;# 
  2545  0004                     	;# 
  2546  0005                     	;# 
  2547  0006                     	;# 
  2548  0007                     	;# 
  2549  0008                     	;# 
  2550  0009                     	;# 
  2551  000A                     	;# 
  2552  000B                     	;# 
  2553  000C                     	;# 
  2554  000D                     	;# 
  2555  000E                     	;# 
  2556  0010                     	;# 
  2557  0011                     	;# 
  2558  0012                     	;# 
  2559  0013                     	;# 
  2560  0014                     	;# 
  2561  0015                     	;# 
  2562  0015                     	;# 
  2563  0016                     	;# 
  2564  0016                     	;# 
  2565  0017                     	;# 
  2566  0018                     	;# 
  2567  0019                     	;# 
  2568  0019                     	;# 
  2569  001A                     	;# 
  2570  001B                     	;# 
  2571  001C                     	;# 
  2572  001D                     	;# 
  2573  001E                     	;# 
  2574  001F                     	;# 
  2575  008C                     	;# 
  2576  008D                     	;# 
  2577  008E                     	;# 
  2578  0090                     	;# 
  2579  0091                     	;# 
  2580  0092                     	;# 
  2581  0093                     	;# 
  2582  0094                     	;# 
  2583  0097                     	;# 
  2584  009B                     	;# 
  2585  009B                     	;# 
  2586  009C                     	;# 
  2587  009D                     	;# 
  2588  009E                     	;# 
  2589  009F                     	;# 
  2590  010C                     	;# 
  2591  010D                     	;# 
  2592  010E                     	;# 
  2593  0111                     	;# 
  2594  0112                     	;# 
  2595  0113                     	;# 
  2596  0114                     	;# 
  2597  0115                     	;# 
  2598  0116                     	;# 
  2599  0117                     	;# 
  2600  0118                     	;# 
  2601  0119                     	;# 
  2602  018C                     	;# 
  2603  018D                     	;# 
  2604  018E                     	;# 
  2605  0197                     	;# 
  2606  0199                     	;# 
  2607  0199                     	;# 
  2608  0199                     	;# 
  2609  019A                     	;# 
  2610  019A                     	;# 
  2611  019A                     	;# 
  2612  019B                     	;# 
  2613  019B                     	;# 
  2614  019B                     	;# 
  2615  019B                     	;# 
  2616  019B                     	;# 
  2617  019C                     	;# 
  2618  019C                     	;# 
  2619  019C                     	;# 
  2620  019D                     	;# 
  2621  019D                     	;# 
  2622  019D                     	;# 
  2623  019E                     	;# 
  2624  019E                     	;# 
  2625  019E                     	;# 
  2626  019F                     	;# 
  2627  019F                     	;# 
  2628  019F                     	;# 
  2629  019F                     	;# 
  2630  019F                     	;# 
  2631  020C                     	;# 
  2632  020D                     	;# 
  2633  020E                     	;# 
  2634  0211                     	;# 
  2635  0211                     	;# 
  2636  0212                     	;# 
  2637  0212                     	;# 
  2638  0213                     	;# 
  2639  0213                     	;# 
  2640  0214                     	;# 
  2641  0214                     	;# 
  2642  0215                     	;# 
  2643  0215                     	;# 
  2644  0215                     	;# 
  2645  0215                     	;# 
  2646  0216                     	;# 
  2647  0216                     	;# 
  2648  0217                     	;# 
  2649  0217                     	;# 
  2650  0219                     	;# 
  2651  021A                     	;# 
  2652  021B                     	;# 
  2653  021C                     	;# 
  2654  021D                     	;# 
  2655  021D                     	;# 
  2656  021E                     	;# 
  2657  021F                     	;# 
  2658  028C                     	;# 
  2659  028D                     	;# 
  2660  028E                     	;# 
  2661  0291                     	;# 
  2662  0291                     	;# 
  2663  0292                     	;# 
  2664  0293                     	;# 
  2665  0294                     	;# 
  2666  0295                     	;# 
  2667  0295                     	;# 
  2668  0296                     	;# 
  2669  0297                     	;# 
  2670  0298                     	;# 
  2671  029F                     	;# 
  2672  030C                     	;# 
  2673  030D                     	;# 
  2674  030E                     	;# 
  2675  0311                     	;# 
  2676  0311                     	;# 
  2677  0312                     	;# 
  2678  0313                     	;# 
  2679  0314                     	;# 
  2680  0315                     	;# 
  2681  0315                     	;# 
  2682  0316                     	;# 
  2683  0317                     	;# 
  2684  0318                     	;# 
  2685  038C                     	;# 
  2686  038D                     	;# 
  2687  038E                     	;# 
  2688  0391                     	;# 
  2689  0392                     	;# 
  2690  0393                     	;# 
  2691  0394                     	;# 
  2692  0395                     	;# 
  2693  0396                     	;# 
  2694  0397                     	;# 
  2695  0398                     	;# 
  2696  0399                     	;# 
  2697  039A                     	;# 
  2698  039C                     	;# 
  2699  039D                     	;# 
  2700  039E                     	;# 
  2701  039F                     	;# 
  2702  0411                     	;# 
  2703  0411                     	;# 
  2704  0412                     	;# 
  2705  0413                     	;# 
  2706  0414                     	;# 
  2707  0415                     	;# 
  2708  0416                     	;# 
  2709  0417                     	;# 
  2710  0418                     	;# 
  2711  0418                     	;# 
  2712  0419                     	;# 
  2713  041A                     	;# 
  2714  041B                     	;# 
  2715  041C                     	;# 
  2716  041D                     	;# 
  2717  041E                     	;# 
  2718  041F                     	;# 
  2719  0498                     	;# 
  2720  0498                     	;# 
  2721  0499                     	;# 
  2722  049A                     	;# 
  2723  049B                     	;# 
  2724  049B                     	;# 
  2725  049C                     	;# 
  2726  049D                     	;# 
  2727  049E                     	;# 
  2728  049F                     	;# 
  2729  0617                     	;# 
  2730  0618                     	;# 
  2731  0619                     	;# 
  2732  0619                     	;# 
  2733  061A                     	;# 
  2734  061B                     	;# 
  2735  061C                     	;# 
  2736  061C                     	;# 
  2737  061F                     	;# 
  2738  0691                     	;# 
  2739  0692                     	;# 
  2740  0693                     	;# 
  2741  0694                     	;# 
  2742  0695                     	;# 
  2743  0696                     	;# 
  2744  0697                     	;# 
  2745  0698                     	;# 
  2746  0699                     	;# 
  2747  0711                     	;# 
  2748  0712                     	;# 
  2749  0713                     	;# 
  2750  0714                     	;# 
  2751  0715                     	;# 
  2752  0716                     	;# 
  2753  0717                     	;# 
  2754  0718                     	;# 
  2755  0719                     	;# 
  2756  0891                     	;# 
  2757  0891                     	;# 
  2758  0891                     	;# 
  2759  0891                     	;# 
  2760  0891                     	;# 
  2761  0891                     	;# 
  2762  0892                     	;# 
  2763  0892                     	;# 
  2764  0892                     	;# 
  2765  0893                     	;# 
  2766  0893                     	;# 
  2767  0893                     	;# 
  2768  0893                     	;# 
  2769  0893                     	;# 
  2770  0893                     	;# 
  2771  0894                     	;# 
  2772  0894                     	;# 
  2773  0894                     	;# 
  2774  0895                     	;# 
  2775  0895                     	;# 
  2776  0895                     	;# 
  2777  0896                     	;# 
  2778  0896                     	;# 
  2779  0896                     	;# 
  2780  089B                     	;# 
  2781  0911                     	;# 
  2782  0912                     	;# 
  2783  0913                     	;# 
  2784  0914                     	;# 
  2785  0915                     	;# 
  2786  0916                     	;# 
  2787  0918                     	;# 
  2788  0919                     	;# 
  2789  091A                     	;# 
  2790  091B                     	;# 
  2791  091C                     	;# 
  2792  091D                     	;# 
  2793  091E                     	;# 
  2794  091F                     	;# 
  2795  0E0F                     	;# 
  2796  0E10                     	;# 
  2797  0E11                     	;# 
  2798  0E12                     	;# 
  2799  0E13                     	;# 
  2800  0E14                     	;# 
  2801  0E15                     	;# 
  2802  0E16                     	;# 
  2803  0E17                     	;# 
  2804  0E18                     	;# 
  2805  0E19                     	;# 
  2806  0E1A                     	;# 
  2807  0E1B                     	;# 
  2808  0E1C                     	;# 
  2809  0E1D                     	;# 
  2810  0E1E                     	;# 
  2811  0E1F                     	;# 
  2812  0E20                     	;# 
  2813  0E21                     	;# 
  2814  0E22                     	;# 
  2815  0E24                     	;# 
  2816  0E25                     	;# 
  2817  0E28                     	;# 
  2818  0E29                     	;# 
  2819  0E2A                     	;# 
  2820  0E2B                     	;# 
  2821  0E2C                     	;# 
  2822  0E2D                     	;# 
  2823  0E2E                     	;# 
  2824  0E2F                     	;# 
  2825  0E90                     	;# 
  2826  0E91                     	;# 
  2827  0E92                     	;# 
  2828  0E94                     	;# 
  2829  0E95                     	;# 
  2830  0E9C                     	;# 
  2831  0E9D                     	;# 
  2832  0E9E                     	;# 
  2833  0E9F                     	;# 
  2834  0EA0                     	;# 
  2835  0EA1                     	;# 
  2836  0EA2                     	;# 
  2837  0EA3                     	;# 
  2838  0EA4                     	;# 
  2839  0EA5                     	;# 
  2840  0EA6                     	;# 
  2841  0EA7                     	;# 
  2842  0F0F                     	;# 
  2843  0F10                     	;# 
  2844  0F11                     	;# 
  2845  0F12                     	;# 
  2846  0F13                     	;# 
  2847  0F14                     	;# 
  2848  0F15                     	;# 
  2849  0F16                     	;# 
  2850  0F17                     	;# 
  2851  0F18                     	;# 
  2852  0F19                     	;# 
  2853  0F1A                     	;# 
  2854  0F1B                     	;# 
  2855  0F1C                     	;# 
  2856  0F1D                     	;# 
  2857  0F1E                     	;# 
  2858  0F1F                     	;# 
  2859  0F20                     	;# 
  2860  0F21                     	;# 
  2861  0F22                     	;# 
  2862  0F23                     	;# 
  2863  0F24                     	;# 
  2864  0F25                     	;# 
  2865  0F26                     	;# 
  2866  0F27                     	;# 
  2867  0F28                     	;# 
  2868  0F29                     	;# 
  2869  0F2A                     	;# 
  2870  0F2B                     	;# 
  2871  0F2C                     	;# 
  2872  0F2D                     	;# 
  2873  0F2E                     	;# 
  2874  0F2F                     	;# 
  2875  0F30                     	;# 
  2876  0F31                     	;# 
  2877  0F32                     	;# 
  2878  0F33                     	;# 
  2879  0F34                     	;# 
  2880  0F35                     	;# 
  2881  0F36                     	;# 
  2882  0F37                     	;# 
  2883  0FE4                     	;# 
  2884  0FE5                     	;# 
  2885  0FE6                     	;# 
  2886  0FE7                     	;# 
  2887  0FE8                     	;# 
  2888  0FE9                     	;# 
  2889  0FEA                     	;# 
  2890  0FEB                     	;# 
  2891  0FED                     	;# 
  2892  0FEE                     	;# 
  2893  0FEF                     	;# 
  2894                           
  2895                           	psect	idataCOMMON
  2896  0586                     __pidataCOMMON:	
  2897                           
  2898                           ;initializer for _event
  2899  0586  3401               	retlw	1
  2900                           
  2901                           	psect	nvBANK0
  2902  0025                     __pnvBANK0:	
  2903  0025                     _timer1ReloadVal:	
  2904  0025                     	ds	2
  2905  001F                     _T2CONbits	set	31
  2906  001F                     _T2CON	set	31
  2907  001D                     _TMR2	set	29
  2908  001E                     _PR2	set	30
  2909  001C                     _T1GCONbits	set	28
  2910  001B                     _T1CONbits	set	27
  2911  001B                     _T1CON	set	27
  2912  0011                     _PIR1bits	set	17
  2913  0019                     _TMR1L	set	25
  2914  001A                     _TMR1H	set	26
  2915  001C                     _T1GCON	set	28
  2916  000E                     _PORTCbits	set	14
  2917  0088                     _TMR1IF	set	136
  2918  009D                     _ADCON0bits	set	157
  2919  009C                     _ADRESH	set	156
  2920  009B                     _ADRESL	set	155
  2921  009F                     _ADACT	set	159
  2922  009E                     _ADCON1	set	158
  2923  009D                     _ADCON0	set	157
  2924  008E                     _TRISC	set	142
  2925  008D                     _TRISB	set	141
  2926  008C                     _TRISA	set	140
  2927  0097                     _WDTCON	set	151
  2928  010E                     _LATC	set	270
  2929  010D                     _LATB	set	269
  2930  010C                     _LATAbits	set	268
  2931  010E                     _LATCbits	set	270
  2932  010C                     _LATA	set	268
  2933  018C                     _ANSELA	set	396
  2934  018D                     _ANSELB	set	397
  2935  018E                     _ANSELC	set	398
  2936  020E                     _WPUC	set	526
  2937  020C                     _WPUA	set	524
  2938  020D                     _WPUB	set	525
  2939  0293                     _CCP1CONbits	set	659
  2940  029F                     _CCPTMRSbits	set	671
  2941  0291                     _CCPR1L	set	657
  2942  0292                     _CCPR1H	set	658
  2943  0293                     _CCP1CON	set	659
  2944  028E                     _ODCONC	set	654
  2945  028D                     _ODCONB	set	653
  2946  028C                     _ODCONA	set	652
  2947  030E                     _SLRCONC	set	782
  2948  030D                     _SLRCONB	set	781
  2949  030C                     _SLRCONA	set	780
  2950  0916                     _PMD5	set	2326
  2951  0915                     _PMD4	set	2325
  2952  0914                     _PMD3	set	2324
  2953  0913                     _PMD2	set	2323
  2954  0912                     _PMD1	set	2322
  2955  0911                     _PMD0	set	2321
  2956  091E                     _OSCTUNE	set	2334
  2957  091F                     _OSCFRQ	set	2335
  2958  091D                     _OSCEN	set	2333
  2959  091B                     _OSCCON3	set	2331
  2960  0919                     _OSCCON1	set	2329
  2961  0EA5                     _RC5PPS	set	3749
  2962                           
  2963                           ; #config settings
  2964  0000                     
  2965                           	psect	cinit
  2966  07F1                     start_initialization:	
  2967  07F1                     __initialization:	
  2968                           
  2969                           ; Initialize objects allocated to COMMON
  2970  07F1  3185  2586         	fcall	__pidataCOMMON	;fetch initializer
  2971  07F3  00FD               	movwf	__pdataCOMMON& (0+127)
  2972                           
  2973                           ; Clear objects allocated to COMMON
  2974  07F4  01F9               	clrf	__pbssCOMMON& (0+127)
  2975  07F5  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2976  07F6  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2977  07F7  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2978                           
  2979                           ; Clear objects allocated to BANK0
  2980  07F8  01A0               	clrf	__pbssBANK0& (0+127)
  2981  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  2982  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  2983  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  2984  07FC  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  2985  07FD                     end_of_initialization:	
  2986                           ;End of C runtime variable initialization code
  2987                           
  2988  07FD                     __end_of__initialization:	
  2989  07FD  0020               	movlb	0
  2990  07FE  3186  2EA4         	ljmp	_main	;jump to C main() function
  2991                           
  2992                           	psect	bssCOMMON
  2993  0079                     __pbssCOMMON:	
  2994  0079                     _state:	
  2995  0079                     	ds	1
  2996  007A                     _switch1:	
  2997  007A                     	ds	1
  2998  007B                     _rotateVal:	
  2999  007B                     	ds	1
  3000  007C                     _adcResult:	
  3001  007C                     	ds	1
  3002                           
  3003                           	psect	dataCOMMON
  3004  007D                     __pdataCOMMON:	
  3005  007D                     _event:	
  3006  007D                     	ds	1
  3007                           
  3008                           	psect	bssBANK0
  3009  0020                     __pbssBANK0:	
  3010  0020                     _adcResult2:	
  3011  0020                     	ds	2
  3012  0022                     _button:	
  3013  0022                     	ds	1
  3014  0023                     _delayVal:	
  3015  0023                     	ds	1
  3016  0024                     _secondCount:	
  3017  0024                     	ds	1
  3018                           
  3019                           	psect	cstackCOMMON
  3020  0070                     __pcstackCOMMON:	
  3021  0070                     ?_SYSTEM_Initialize:	
  3022  0070                     ??_SYSTEM_Initialize:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0070                     ?_checkButtonS1:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0070                     ??_checkButtonS1:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0070                     ?_HelloWorld:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0070                     ??_HelloWorld:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0070                     ?_Blink:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0070                     ?_Rotate:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0070                     ??_Rotate:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0070                     ?_ADC:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0070                     ?_VSR:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0070                     ?_next:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0070                     ??_next:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0070                     ?_TMR1_StartTimer:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0070                     ??_TMR1_StartTimer:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0070                     ?_TMR1_HasOverflowOccured:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0070                     ??_TMR1_HasOverflowOccured:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0070                     ?_TMR1_Reload:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0070                     ?_TMR1_StopTimer:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0070                     ??_TMR1_StopTimer:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0070                     ?_PMD_Initialize:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0070                     ??_PMD_Initialize:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0070                     ?_PIN_MANAGER_Initialize:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0070                     ??_PIN_MANAGER_Initialize:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0070                     ?_OSCILLATOR_Initialize:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0070                     ??_OSCILLATOR_Initialize:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0070                     ?_WDT_Initialize:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0070                     ??_WDT_Initialize:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0070                     ?_PWM1_Initialize:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0070                     ??_PWM1_Initialize:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0070                     ?_ADC_Initialize:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0070                     ??_ADC_Initialize:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0070                     ?_TMR2_Initialize:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0070                     ??_TMR2_Initialize:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0070                     ?_TMR1_Initialize:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0070                     ??_TMR1_Initialize:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0070                     ?_main:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0070                     ?_TMR1_WriteTimer:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0070                     ?_ADC_GetConversion:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0070                     TMR1_WriteTimer@timerVal:	
  3137                           ; 2 bytes @ 0x0
  3138                           
  3139                           
  3140                           ; 2 bytes @ 0x0
  3141  0070                     	ds	2
  3142  0072                     ??_Blink:	
  3143  0072                     ??_TMR1_Reload:	
  3144                           ; 1 bytes @ 0x2
  3145                           
  3146  0072                     ??_ADC_GetConversion:	
  3147                           ; 1 bytes @ 0x2
  3148                           
  3149  0072                     ??_TMR1_WriteTimer:	
  3150                           ; 1 bytes @ 0x2
  3151                           
  3152                           
  3153                           ; 1 bytes @ 0x2
  3154  0072                     	ds	1
  3155  0073                     ADC_GetConversion@channel:	
  3156                           
  3157                           ; 1 bytes @ 0x3
  3158  0073                     	ds	1
  3159  0074                     ??_ADC:	
  3160  0074                     ??_VSR:	
  3161                           ; 1 bytes @ 0x4
  3162                           
  3163                           
  3164                           ; 1 bytes @ 0x4
  3165  0074                     	ds	3
  3166  0077                     ??_main:	
  3167                           
  3168                           ; 1 bytes @ 0x7
  3169  0077                     	ds	2
  3170                           
  3171                           	psect	maintext
  3172  06A4                     __pmaintext:	
  3173 ;;
  3174 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3175 ;;
  3176 ;; *************** function _main *****************
  3177 ;; Defined at:
  3178 ;;		line 84 in file "main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : B1F/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;Total ram usage:        2 bytes
  3197 ;; Hardware stack levels required when called:    3
  3198 ;; This function calls:
  3199 ;;		_ADC
  3200 ;;		_Blink
  3201 ;;		_HelloWorld
  3202 ;;		_Rotate
  3203 ;;		_SYSTEM_Initialize
  3204 ;;		_VSR
  3205 ;;		_checkButtonS1
  3206 ;;		_next
  3207 ;; This function is called by:
  3208 ;;		Startup code after reset
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           
  3213                           ;psect for function _main
  3214  06A4                     _main:	
  3215                           
  3216                           ;main.c: 87:     SYSTEM_Initialize();
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3220  06A4  3186  261C  3186   	fcall	_SYSTEM_Initialize
  3221  06A7                     l73:	
  3222                           ;main.c: 104:     while (1)
  3223                           
  3224                           
  3225                           ;main.c: 105:     {;main.c: 107:         checkButtonS1();
  3226  06A7  3186  2634  3186   	fcall	_checkButtonS1
  3227                           
  3228                           ;main.c: 108:         switch(event) {
  3229  06AA  2EBF               	goto	l1574
  3230  06AB                     l1562:	
  3231  06AB  3185  25F2  3186   	fcall	_HelloWorld
  3232  06AE  2ED8               	goto	l1576
  3233  06AF                     l1564:	
  3234  06AF  3186  266E  3186   	fcall	_Blink
  3235  06B2  2ED8               	goto	l1576
  3236  06B3                     l1566:	
  3237  06B3  3187  2733  3186   	fcall	_Rotate
  3238  06B6  2ED8               	goto	l1576
  3239  06B7                     l1568:	
  3240  06B7  3186  26DF  3186   	fcall	_ADC
  3241  06BA  2ED8               	goto	l1576
  3242  06BB                     l1570:	
  3243  06BB  3187  2789  3186   	fcall	_VSR
  3244  06BE  2ED8               	goto	l1576
  3245  06BF                     l1574:	
  3246  06BF  087D               	movf	_event,w
  3247  06C0  00F7               	movwf	??_main
  3248  06C1  01F8               	clrf	??_main+1
  3249                           
  3250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3251                           ; Switch size 1, requested type "simple"
  3252                           ; Number of cases is 1, Range of values is 0 to 0
  3253                           ; switch strategies available:
  3254                           ; Name         Instructions Cycles
  3255                           ; simple_byte            4     3 (average)
  3256                           ; direct_byte            8     6 (fixed)
  3257                           ; jumptable            260     6 (fixed)
  3258                           ;	Chosen strategy is simple_byte
  3259  06C2  0878               	movf	??_main+1,w
  3260  06C3  3A00               	xorlw	0	; case 0
  3261  06C4  1903               	skipnz
  3262  06C5  2EC7               	goto	l1648
  3263  06C6  2ED8               	goto	l1576
  3264  06C7                     l1648:	
  3265                           
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 5, Range of values is 1 to 5
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte           16     9 (average)
  3271                           ; direct_byte           19     9 (fixed)
  3272                           ; jumptable            263     9 (fixed)
  3273                           ;	Chosen strategy is simple_byte
  3274  06C7  0877               	movf	??_main,w
  3275  06C8  3A01               	xorlw	1	; case 1
  3276  06C9  1903               	skipnz
  3277  06CA  2EAB               	goto	l1562
  3278  06CB  3A03               	xorlw	3	; case 2
  3279  06CC  1903               	skipnz
  3280  06CD  2EAF               	goto	l1564
  3281  06CE  3A01               	xorlw	1	; case 3
  3282  06CF  1903               	skipnz
  3283  06D0  2EB3               	goto	l1566
  3284  06D1  3A07               	xorlw	7	; case 4
  3285  06D2  1903               	skipnz
  3286  06D3  2EB7               	goto	l1568
  3287  06D4  3A01               	xorlw	1	; case 5
  3288  06D5  1903               	skipnz
  3289  06D6  2EBB               	goto	l1570
  3290  06D7  2ED8               	goto	l1576
  3291  06D8                     l1576:	
  3292                           
  3293                           ;main.c: 116:         if(switch1) {
  3294  06D8  087A               	movf	_switch1,w
  3295  06D9  1903               	btfsc	3,2
  3296  06DA  2EA7               	goto	l73
  3297                           
  3298                           ;main.c: 117:             next();
  3299  06DB  3185  25C9  3186   	fcall	_next
  3300  06DE  2EA7               	goto	l73
  3301  06DF                     __end_of_main:	
  3302                           
  3303                           	psect	text1
  3304  05C9                     __ptext1:	
  3305 ;; *************** function _next *****************
  3306 ;; Defined at:
  3307 ;;		line 135 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _next
  3336  05C9                     _next:	
  3337                           
  3338                           ;main.c: 136:     switch1 = 0;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _next: [wreg+status,2+status,0]
  3342  05C9  01FA               	clrf	_switch1
  3343                           
  3344                           ;main.c: 137:     event++;
  3345  05CA  3001               	movlw	1
  3346  05CB  00F0               	movwf	??_next
  3347  05CC  0870               	movf	??_next,w
  3348  05CD  07FD               	addwf	_event,f
  3349                           
  3350                           ;main.c: 139:     if (event > 4) {
  3351  05CE  3005               	movlw	5
  3352  05CF  027D               	subwf	_event,w
  3353  05D0  1C03               	skipc
  3354  05D1  0008               	return
  3355                           
  3356                           ;main.c: 140:         event = 1;
  3357  05D2  01FD               	clrf	_event
  3358  05D3  0AFD               	incf	_event,f
  3359  05D4  0008               	return
  3360  05D5                     __end_of_next:	
  3361                           
  3362                           	psect	text2
  3363  0634                     __ptext2:	
  3364 ;; *************** function _checkButtonS1 *****************
  3365 ;; Defined at:
  3366 ;;		line 123 in file "main.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;Total ram usage:        1 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _checkButtonS1
  3395  0634                     _checkButtonS1:	
  3396                           
  3397                           ;main.c: 124:     if(button == 0){
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
  3401  0634  0020               	movlb	0	; select bank0
  3402  0635  0822               	movf	_button,w
  3403  0636  1D03               	btfss	3,2
  3404  0637  2E46               	goto	l87
  3405                           
  3406                           ;main.c: 125:         if(PORTCbits.RC4 == 0){
  3407  0638  1A0E               	btfsc	14,4	;volatile
  3408  0639  0008               	return
  3409                           
  3410                           ;main.c: 126:             _delay((unsigned long)((100)*(500000/4000.0)));
  3411  063A  3011               	movlw	17
  3412  063B  00F0               	movwf	??_checkButtonS1
  3413  063C  303A               	movlw	58
  3414  063D                     u747:	
  3415  063D  0B89               	decfsz	9,f
  3416  063E  2E3D               	goto	u747
  3417  063F  0BF0               	decfsz	??_checkButtonS1,f
  3418  0640  2E3D               	goto	u747
  3419  0641  3200               	nop2
  3420                           
  3421                           ;main.c: 127:             button = 1;
  3422  0642  0020               	movlb	0	; select bank0
  3423  0643  01A2               	clrf	_button
  3424  0644  0AA2               	incf	_button,f
  3425  0645  0008               	return
  3426  0646                     l87:	
  3427  0646  1E0E               	btfss	14,4	;volatile
  3428  0647  0008               	return
  3429                           
  3430                           ;main.c: 130:             button = 0;
  3431  0648  01A2               	clrf	_button
  3432                           
  3433                           ;main.c: 131:             switch1 = 1;
  3434  0649  01FA               	clrf	_switch1
  3435  064A  0AFA               	incf	_switch1,f
  3436  064B  0008               	return
  3437  064C                     __end_of_checkButtonS1:	
  3438                           
  3439                           	psect	text3
  3440  0789                     __ptext3:	
  3441 ;; *************** function _VSR *****************
  3442 ;; Defined at:
  3443 ;;		line 234 in file "main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    1
  3464 ;; This function calls:
  3465 ;;		_ADC_GetConversion
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _VSR
  3473  0789                     _VSR:	
  3474                           
  3475                           ;main.c: 235:     if(state == 0) {
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _VSR: [wreg+status,2+status,0+pclath+cstack]
  3479  0789  0879               	movf	_state,w
  3480  078A  1D03               	btfss	3,2
  3481  078B  2F93               	goto	l1542
  3482  078C  0022               	movlb	2	; select bank2
  3483  078D  018C               	clrf	12	;volatile
  3484  078E  128E               	bcf	14,5	;volatile
  3485                           
  3486                           ;main.c: 237:         rotateVal = 1;
  3487  078F  01FB               	clrf	_rotateVal
  3488  0790  0AFB               	incf	_rotateVal,f
  3489                           
  3490                           ;main.c: 238:         state = 1;
  3491  0791  01F9               	clrf	_state
  3492  0792  0AF9               	incf	_state,f
  3493  0793                     l1542:	
  3494                           
  3495                           ;main.c: 240:     if(state == 1) {
  3496  0793  0379               	decf	_state,w
  3497  0794  1D03               	btfss	3,2
  3498  0795  2FEC               	goto	l1556
  3499                           
  3500                           ;main.c: 241:         delayVal = ADC_GetConversion(POT_CHANNEL) >> 8;
  3501  0796  3010               	movlw	16
  3502  0797  3186  2604  3187   	fcall	_ADC_GetConversion
  3503  079A  0871               	movf	?_ADC_GetConversion+1,w
  3504  079B  00F4               	movwf	??_VSR
  3505  079C  0874               	movf	??_VSR,w
  3506  079D  0020               	movlb	0	; select bank0
  3507  079E  00A3               	movwf	_delayVal
  3508                           
  3509                           ;main.c: 242:         _delay((unsigned long)((5)*(500000/4000.0)));
  3510  079F  30D0               	movlw	208
  3511  07A0                     u757:	
  3512  07A0  0B89               	decfsz	9,f
  3513  07A1  2FA0               	goto	u757
  3514  07A2  0000               	nop
  3515  07A3                     l1550:	
  3516                           ;main.c: 244:         while(delayVal -- != 0) {
  3517                           
  3518                           
  3519                           ;main.c: 244:         while(delayVal -- != 0) {
  3520  07A3  3001               	movlw	1
  3521  07A4  0020               	movlb	0	; select bank0
  3522  07A5  02A3               	subwf	_delayVal,f
  3523  07A6  0A23               	incf	_delayVal,w
  3524  07A7  1903               	btfsc	3,2
  3525  07A8  2FAE               	goto	l1552
  3526                           
  3527                           ;main.c: 245:             _delay((unsigned long)((2)*(500000/4000.0)));
  3528  07A9  3053               	movlw	83
  3529  07AA                     u767:	
  3530  07AA  0B89               	decfsz	9,f
  3531  07AB  2FAA               	goto	u767
  3532  07AC  0000               	nop
  3533  07AD  2FA3               	goto	l1550
  3534  07AE                     l1552:	
  3535                           
  3536                           ;main.c: 248:         LATAbits.LATA5 = rotateVal & 1;
  3537  07AE  087B               	movf	_rotateVal,w
  3538  07AF  3901               	andlw	1
  3539  07B0  00F4               	movwf	??_VSR
  3540  07B1  0EF4               	swapf	??_VSR,f
  3541  07B2  0DF4               	rlf	??_VSR,f
  3542  07B3  0022               	movlb	2	; select bank2
  3543  07B4  080C               	movf	12,w	;volatile
  3544  07B5  0674               	xorwf	??_VSR,w
  3545  07B6  39DF               	andlw	-33
  3546  07B7  0674               	xorwf	??_VSR,w
  3547  07B8  008C               	movwf	12	;volatile
  3548                           
  3549                           ;main.c: 249:         LATAbits.LATA1 = (rotateVal & 2) >> 1;
  3550  07B9  367B               	lsrf	_rotateVal,w
  3551  07BA  3901               	andlw	1
  3552  07BB  00F4               	movwf	??_VSR
  3553  07BC  0DF4               	rlf	??_VSR,f
  3554  07BD  080C               	movf	12,w	;volatile
  3555  07BE  0674               	xorwf	??_VSR,w
  3556  07BF  39FD               	andlw	-3
  3557  07C0  0674               	xorwf	??_VSR,w
  3558  07C1  008C               	movwf	12	;volatile
  3559                           
  3560                           ;main.c: 250:         LATAbits.LATA2 = (rotateVal & 4) >> 2;
  3561  07C2  087B               	movf	_rotateVal,w
  3562  07C3  00F4               	movwf	??_VSR
  3563  07C4  3002               	movlw	2
  3564  07C5                     u635:	
  3565  07C5  36F4               	lsrf	??_VSR,f
  3566  07C6  0B89               	decfsz	9,f
  3567  07C7  2FC5               	goto	u635
  3568  07C8  0874               	movf	??_VSR,w
  3569  07C9  3901               	andlw	1
  3570  07CA  00F5               	movwf	??_VSR+1
  3571  07CB  0DF5               	rlf	??_VSR+1,f
  3572  07CC  0DF5               	rlf	??_VSR+1,f
  3573  07CD  080C               	movf	12,w	;volatile
  3574  07CE  0675               	xorwf	??_VSR+1,w
  3575  07CF  39FB               	andlw	-5
  3576  07D0  0675               	xorwf	??_VSR+1,w
  3577  07D1  008C               	movwf	12	;volatile
  3578                           
  3579                           ;main.c: 251:         LATCbits.LATC5 = (rotateVal & 8) >> 3;
  3580  07D2  087B               	movf	_rotateVal,w
  3581  07D3  00F4               	movwf	??_VSR
  3582  07D4  3003               	movlw	3
  3583  07D5                     u645:	
  3584  07D5  36F4               	lsrf	??_VSR,f
  3585  07D6  0B89               	decfsz	9,f
  3586  07D7  2FD5               	goto	u645
  3587  07D8  0874               	movf	??_VSR,w
  3588  07D9  3901               	andlw	1
  3589  07DA  00F5               	movwf	??_VSR+1
  3590  07DB  0EF5               	swapf	??_VSR+1,f
  3591  07DC  0DF5               	rlf	??_VSR+1,f
  3592  07DD  080E               	movf	14,w	;volatile
  3593  07DE  0675               	xorwf	??_VSR+1,w
  3594  07DF  39DF               	andlw	-33
  3595  07E0  0675               	xorwf	??_VSR+1,w
  3596  07E1  008E               	movwf	14	;volatile
  3597                           
  3598                           ;main.c: 253:         rotateVal = rotateVal << 1;
  3599  07E2  357B               	lslf	_rotateVal,w
  3600  07E3  00F4               	movwf	??_VSR
  3601  07E4  0874               	movf	??_VSR,w
  3602  07E5  00FB               	movwf	_rotateVal
  3603                           
  3604                           ;main.c: 255:         if(rotateVal == 16) {
  3605  07E6  3010               	movlw	16
  3606  07E7  067B               	xorwf	_rotateVal,w
  3607  07E8  1D03               	btfss	3,2
  3608  07E9  2FEC               	goto	l1556
  3609                           
  3610                           ;main.c: 256:             rotateVal = 1;
  3611  07EA  01FB               	clrf	_rotateVal
  3612  07EB  0AFB               	incf	_rotateVal,f
  3613  07EC                     l1556:	
  3614                           
  3615                           ;main.c: 260:     if(switch1) {
  3616  07EC  087A               	movf	_switch1,w
  3617  07ED  1903               	btfsc	3,2
  3618  07EE  0008               	return
  3619                           
  3620                           ;main.c: 261:         state = 0;
  3621  07EF  01F9               	clrf	_state
  3622  07F0  0008               	return
  3623  07F1                     __end_of_VSR:	
  3624                           
  3625                           	psect	text4
  3626  061C                     __ptext4:	
  3627 ;; *************** function _SYSTEM_Initialize *****************
  3628 ;; Defined at:
  3629 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    1
  3650 ;; This function calls:
  3651 ;;		_ADC_Initialize
  3652 ;;		_OSCILLATOR_Initialize
  3653 ;;		_PIN_MANAGER_Initialize
  3654 ;;		_PMD_Initialize
  3655 ;;		_PWM1_Initialize
  3656 ;;		_TMR1_Initialize
  3657 ;;		_TMR2_Initialize
  3658 ;;		_WDT_Initialize
  3659 ;; This function is called by:
  3660 ;;		_main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _SYSTEM_Initialize
  3666  061C                     _SYSTEM_Initialize:	
  3667                           
  3668                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3672  061C  3185  25AD  3186   	fcall	_PMD_Initialize
  3673                           
  3674                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3675  061F  3186  264C  3186   	fcall	_PIN_MANAGER_Initialize
  3676                           
  3677                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3678  0622  3185  25A5  3186   	fcall	_OSCILLATOR_Initialize
  3679                           
  3680                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3681  0625  3185  2591  3186   	fcall	_WDT_Initialize
  3682                           
  3683                           ;mcc_generated_files/mcc.c: 57:     PWM1_Initialize();
  3684  0628  3185  25BD  3186   	fcall	_PWM1_Initialize
  3685                           
  3686                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3687  062B  3185  259D  3186   	fcall	_ADC_Initialize
  3688                           
  3689                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3690  062E  3185  25B5  3186   	fcall	_TMR2_Initialize
  3691                           
  3692                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3693  0631  3185  25D5         	fcall	_TMR1_Initialize
  3694  0633  0008               	return
  3695  0634                     __end_of_SYSTEM_Initialize:	
  3696                           
  3697                           	psect	text5
  3698  0591                     __ptext5:	
  3699 ;; *************** function _WDT_Initialize *****************
  3700 ;; Defined at:
  3701 ;;		line 77 in file "mcc_generated_files/mcc.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_SYSTEM_Initialize
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _WDT_Initialize
  3730  0591                     _WDT_Initialize:	
  3731                           
  3732                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
  3733                           
  3734                           ;incstack = 0
  3735                           ; Regs used in _WDT_Initialize: [wreg]
  3736  0591  3018               	movlw	24
  3737  0592  0021               	movlb	1	; select bank1
  3738  0593  0097               	movwf	23	;volatile
  3739  0594  0008               	return
  3740  0595                     __end_of_WDT_Initialize:	
  3741                           
  3742                           	psect	text6
  3743  05B5                     __ptext6:	
  3744 ;; *************** function _TMR2_Initialize *****************
  3745 ;; Defined at:
  3746 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_SYSTEM_Initialize
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _TMR2_Initialize
  3775  05B5                     _TMR2_Initialize:	
  3776                           
  3777                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3781  05B5  30FF               	movlw	255
  3782  05B6  0020               	movlb	0	; select bank0
  3783  05B7  009E               	movwf	30	;volatile
  3784                           
  3785                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3786  05B8  019D               	clrf	29	;volatile
  3787                           
  3788                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3789  05B9  1091               	bcf	17,1	;volatile
  3790                           
  3791                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  3792  05BA  3004               	movlw	4
  3793  05BB  009F               	movwf	31	;volatile
  3794  05BC  0008               	return
  3795  05BD                     __end_of_TMR2_Initialize:	
  3796                           
  3797                           	psect	text7
  3798  05D5                     __ptext7:	
  3799 ;; *************** function _TMR1_Initialize *****************
  3800 ;; Defined at:
  3801 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_SYSTEM_Initialize
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function _TMR1_Initialize
  3830  05D5                     _TMR1_Initialize:	
  3831                           
  3832                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  3836  05D5  0020               	movlb	0	; select bank0
  3837  05D6  019C               	clrf	28	;volatile
  3838                           
  3839                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  3840  05D7  300B               	movlw	11
  3841  05D8  009A               	movwf	26	;volatile
  3842                           
  3843                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  3844  05D9  30DC               	movlw	220
  3845  05DA  0099               	movwf	25	;volatile
  3846                           
  3847                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3848  05DB  081A               	movf	26,w	;volatile
  3849  05DC  00A6               	movwf	_timer1ReloadVal+1	;volatile
  3850  05DD  0819               	movf	25,w	;volatile
  3851  05DE  00A5               	movwf	_timer1ReloadVal	;volatile
  3852                           
  3853                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  3854  05DF  1011               	bcf	17,0	;volatile
  3855                           
  3856                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  3857  05E0  3001               	movlw	1
  3858  05E1  009B               	movwf	27	;volatile
  3859  05E2  0008               	return
  3860  05E3                     __end_of_TMR1_Initialize:	
  3861                           
  3862                           	psect	text8
  3863  05BD                     __ptext8:	
  3864 ;; *************** function _PWM1_Initialize *****************
  3865 ;; Defined at:
  3866 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_SYSTEM_Initialize
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _PWM1_Initialize
  3895  05BD                     _PWM1_Initialize:	
  3896                           
  3897                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  3901  05BD  308F               	movlw	143
  3902  05BE  0025               	movlb	5	; select bank5
  3903  05BF  0093               	movwf	19	;volatile
  3904                           
  3905                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x03;
  3906  05C0  3003               	movlw	3
  3907  05C1  0092               	movwf	18	;volatile
  3908                           
  3909                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x32;
  3910  05C2  3032               	movlw	50
  3911  05C3  0091               	movwf	17	;volatile
  3912                           
  3913                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
  3914  05C4  081F               	movf	31,w	;volatile
  3915  05C5  39FC               	andlw	-4
  3916  05C6  3801               	iorlw	1
  3917  05C7  009F               	movwf	31	;volatile
  3918  05C8  0008               	return
  3919  05C9                     __end_of_PWM1_Initialize:	
  3920                           
  3921                           	psect	text9
  3922  05AD                     __ptext9:	
  3923 ;; *************** function _PMD_Initialize *****************
  3924 ;; Defined at:
  3925 ;;		line 83 in file "mcc_generated_files/mcc.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		status,2
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;Total ram usage:        0 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_SYSTEM_Initialize
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function _PMD_Initialize
  3954  05AD                     _PMD_Initialize:	
  3955                           
  3956                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _PMD_Initialize: [status,2]
  3960  05AD  0032               	movlb	18	; select bank18
  3961  05AE  0191               	clrf	17	;volatile
  3962                           
  3963                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
  3964  05AF  0192               	clrf	18	;volatile
  3965                           
  3966                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
  3967  05B0  0193               	clrf	19	;volatile
  3968                           
  3969                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
  3970  05B1  0194               	clrf	20	;volatile
  3971                           
  3972                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
  3973  05B2  0195               	clrf	21	;volatile
  3974                           
  3975                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
  3976  05B3  0196               	clrf	22	;volatile
  3977  05B4  0008               	return
  3978  05B5                     __end_of_PMD_Initialize:	
  3979                           
  3980                           	psect	text10
  3981  064C                     __ptext10:	
  3982 ;; *************** function _PIN_MANAGER_Initialize *****************
  3983 ;; Defined at:
  3984 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_SYSTEM_Initialize
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _PIN_MANAGER_Initialize
  4013  064C                     _PIN_MANAGER_Initialize:	
  4014                           
  4015                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4019  064C  0022               	movlb	2	; select bank2
  4020  064D  018C               	clrf	12	;volatile
  4021                           
  4022                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4023  064E  018D               	clrf	13	;volatile
  4024                           
  4025                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4026  064F  018E               	clrf	14	;volatile
  4027                           
  4028                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x11;
  4029  0650  3011               	movlw	17
  4030  0651  0021               	movlb	1	; select bank1
  4031  0652  008C               	movwf	12	;volatile
  4032                           
  4033                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF0;
  4034  0653  30F0               	movlw	240
  4035  0654  008D               	movwf	13	;volatile
  4036                           
  4037                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  4038  0655  30DF               	movlw	223
  4039  0656  008E               	movwf	14	;volatile
  4040                           
  4041                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xEF;
  4042  0657  30EF               	movlw	239
  4043  0658  0023               	movlb	3	; select bank3
  4044  0659  008E               	movwf	14	;volatile
  4045                           
  4046                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF0;
  4047  065A  30F0               	movlw	240
  4048  065B  008D               	movwf	13	;volatile
  4049                           
  4050                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x37;
  4051  065C  3037               	movlw	55
  4052  065D  008C               	movwf	12	;volatile
  4053                           
  4054                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  4055  065E  0024               	movlb	4	; select bank4
  4056  065F  018D               	clrf	13	;volatile
  4057                           
  4058                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  4059  0660  018C               	clrf	12	;volatile
  4060                           
  4061                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  4062  0661  018E               	clrf	14	;volatile
  4063                           
  4064                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  4065  0662  0025               	movlb	5	; select bank5
  4066  0663  018C               	clrf	12	;volatile
  4067                           
  4068                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  4069  0664  018D               	clrf	13	;volatile
  4070                           
  4071                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  4072  0665  018E               	clrf	14	;volatile
  4073                           
  4074                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  4075  0666  3037               	movlw	55
  4076  0667  0026               	movlb	6	; select bank6
  4077  0668  008C               	movwf	12	;volatile
  4078                           
  4079                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  4080  0669  30F0               	movlw	240
  4081  066A  008D               	movwf	13	;volatile
  4082                           
  4083                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  4084  066B  30FF               	movlw	255
  4085  066C  008E               	movwf	14	;volatile
  4086  066D  0008               	return
  4087  066E                     __end_of_PIN_MANAGER_Initialize:	
  4088                           
  4089                           	psect	text11
  4090  05A5                     __ptext11:	
  4091 ;; *************** function _OSCILLATOR_Initialize *****************
  4092 ;; Defined at:
  4093 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_SYSTEM_Initialize
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _OSCILLATOR_Initialize
  4122  05A5                     _OSCILLATOR_Initialize:	
  4123                           
  4124                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4128  05A5  3061               	movlw	97
  4129  05A6  0032               	movlb	18	; select bank18
  4130  05A7  0099               	movwf	25	;volatile
  4131                           
  4132                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  4133  05A8  019B               	clrf	27	;volatile
  4134                           
  4135                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  4136  05A9  019D               	clrf	29	;volatile
  4137                           
  4138                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  4139  05AA  019F               	clrf	31	;volatile
  4140                           
  4141                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4142  05AB  019E               	clrf	30	;volatile
  4143  05AC  0008               	return
  4144  05AD                     __end_of_OSCILLATOR_Initialize:	
  4145                           
  4146                           	psect	text12
  4147  059D                     __ptext12:	
  4148 ;; *************** function _ADC_Initialize *****************
  4149 ;; Defined at:
  4150 ;;		line 65 in file "mcc_generated_files/adc.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_SYSTEM_Initialize
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function _ADC_Initialize
  4179  059D                     _ADC_Initialize:	
  4180                           
  4181                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4185  059D  3001               	movlw	1
  4186  059E  0021               	movlb	1	; select bank1
  4187  059F  009D               	movwf	29	;volatile
  4188                           
  4189                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  4190  05A0  019E               	clrf	30	;volatile
  4191                           
  4192                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  4193  05A1  019F               	clrf	31	;volatile
  4194                           
  4195                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  4196  05A2  019B               	clrf	27	;volatile
  4197                           
  4198                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  4199  05A3  019C               	clrf	28	;volatile
  4200  05A4  0008               	return
  4201  05A5                     __end_of_ADC_Initialize:	
  4202                           
  4203                           	psect	text13
  4204  0733                     __ptext13:	
  4205 ;; *************** function _Rotate *****************
  4206 ;; Defined at:
  4207 ;;		line 183 in file "main.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        2 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _Rotate
  4236  0733                     _Rotate:	
  4237                           
  4238                           ;main.c: 184:     if(state == 0) {
  4239                           
  4240                           ;incstack = 0
  4241                           ; Regs used in _Rotate: [wreg+status,2+status,0]
  4242  0733  0879               	movf	_state,w
  4243  0734  1D03               	btfss	3,2
  4244  0735  2F3E               	goto	l1194
  4245  0736  0022               	movlb	2	; select bank2
  4246  0737  018C               	clrf	12	;volatile
  4247  0738  128E               	bcf	14,5	;volatile
  4248  0739  168C               	bsf	12,5	;volatile
  4249                           
  4250                           ;main.c: 188:         rotateVal = 1;
  4251  073A  01FB               	clrf	_rotateVal
  4252  073B  0AFB               	incf	_rotateVal,f
  4253                           
  4254                           ;main.c: 190:         state = 1;
  4255  073C  01F9               	clrf	_state
  4256  073D  0AF9               	incf	_state,f
  4257  073E                     l1194:	
  4258                           
  4259                           ;main.c: 193:     if(state == 1) {
  4260  073E  0379               	decf	_state,w
  4261  073F  1D03               	btfss	3,2
  4262  0740  2F84               	goto	l127
  4263                           
  4264                           ;main.c: 194:         _delay((unsigned long)((500)*(500000/4000.0)));
  4265  0741  3052               	movlw	82
  4266  0742  00F0               	movwf	??_Rotate
  4267  0743  302A               	movlw	42
  4268  0744                     u777:	
  4269  0744  0B89               	decfsz	9,f
  4270  0745  2F44               	goto	u777
  4271  0746  0BF0               	decfsz	??_Rotate,f
  4272  0747  2F44               	goto	u777
  4273                           
  4274                           ;main.c: 196:         rotateVal <<= 1;
  4275  0748  1003               	clrc
  4276  0749  0DFB               	rlf	_rotateVal,f
  4277                           
  4278                           ;main.c: 198:         if(rotateVal == 16) {
  4279  074A  3010               	movlw	16
  4280  074B  067B               	xorwf	_rotateVal,w
  4281  074C  1D03               	btfss	3,2
  4282  074D  2F50               	goto	l1202
  4283                           
  4284                           ;main.c: 199:             rotateVal = 1;
  4285  074E  01FB               	clrf	_rotateVal
  4286  074F  0AFB               	incf	_rotateVal,f
  4287  0750                     l1202:	
  4288                           
  4289                           ;main.c: 202:         LATAbits.LATA5 = rotateVal & 1;
  4290  0750  087B               	movf	_rotateVal,w
  4291  0751  3901               	andlw	1
  4292  0752  00F0               	movwf	??_Rotate
  4293  0753  0EF0               	swapf	??_Rotate,f
  4294  0754  0DF0               	rlf	??_Rotate,f
  4295  0755  0022               	movlb	2	; select bank2
  4296  0756  080C               	movf	12,w	;volatile
  4297  0757  0670               	xorwf	??_Rotate,w
  4298  0758  39DF               	andlw	-33
  4299  0759  0670               	xorwf	??_Rotate,w
  4300  075A  008C               	movwf	12	;volatile
  4301                           
  4302                           ;main.c: 203:         LATAbits.LATA1 = (rotateVal & 2) >> 1;
  4303  075B  367B               	lsrf	_rotateVal,w
  4304  075C  3901               	andlw	1
  4305  075D  00F0               	movwf	??_Rotate
  4306  075E  0DF0               	rlf	??_Rotate,f
  4307  075F  080C               	movf	12,w	;volatile
  4308  0760  0670               	xorwf	??_Rotate,w
  4309  0761  39FD               	andlw	-3
  4310  0762  0670               	xorwf	??_Rotate,w
  4311  0763  008C               	movwf	12	;volatile
  4312                           
  4313                           ;main.c: 204:         LATAbits.LATA2 = (rotateVal & 4) >> 2;
  4314  0764  087B               	movf	_rotateVal,w
  4315  0765  00F0               	movwf	??_Rotate
  4316  0766  3002               	movlw	2
  4317  0767                     u195:	
  4318  0767  36F0               	lsrf	??_Rotate,f
  4319  0768  0B89               	decfsz	9,f
  4320  0769  2F67               	goto	u195
  4321  076A  0870               	movf	??_Rotate,w
  4322  076B  3901               	andlw	1
  4323  076C  00F1               	movwf	??_Rotate+1
  4324  076D  0DF1               	rlf	??_Rotate+1,f
  4325  076E  0DF1               	rlf	??_Rotate+1,f
  4326  076F  080C               	movf	12,w	;volatile
  4327  0770  0671               	xorwf	??_Rotate+1,w
  4328  0771  39FB               	andlw	-5
  4329  0772  0671               	xorwf	??_Rotate+1,w
  4330  0773  008C               	movwf	12	;volatile
  4331                           
  4332                           ;main.c: 205:         LATCbits.LATC5 = (rotateVal & 8) >> 3;
  4333  0774  087B               	movf	_rotateVal,w
  4334  0775  00F0               	movwf	??_Rotate
  4335  0776  3003               	movlw	3
  4336  0777                     u205:	
  4337  0777  36F0               	lsrf	??_Rotate,f
  4338  0778  0B89               	decfsz	9,f
  4339  0779  2F77               	goto	u205
  4340  077A  0870               	movf	??_Rotate,w
  4341  077B  3901               	andlw	1
  4342  077C  00F1               	movwf	??_Rotate+1
  4343  077D  0EF1               	swapf	??_Rotate+1,f
  4344  077E  0DF1               	rlf	??_Rotate+1,f
  4345  077F  080E               	movf	14,w	;volatile
  4346  0780  0671               	xorwf	??_Rotate+1,w
  4347  0781  39DF               	andlw	-33
  4348  0782  0671               	xorwf	??_Rotate+1,w
  4349  0783  008E               	movwf	14	;volatile
  4350  0784                     l127:	
  4351                           ;main.c: 206:     }
  4352                           
  4353                           
  4354                           ;main.c: 208:     if(switch1) {
  4355  0784  087A               	movf	_switch1,w
  4356  0785  1903               	btfsc	3,2
  4357  0786  0008               	return
  4358                           
  4359                           ;main.c: 209:         state = 0;
  4360  0787  01F9               	clrf	_state
  4361  0788  0008               	return
  4362  0789                     __end_of_Rotate:	
  4363                           
  4364                           	psect	text14
  4365  05F2                     __ptext14:	
  4366 ;; *************** function _HelloWorld *****************
  4367 ;; Defined at:
  4368 ;;		line 144 in file "main.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _HelloWorld
  4397  05F2                     _HelloWorld:	
  4398                           
  4399                           ;main.c: 145:     if(state == 0) {
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _HelloWorld: [wreg+status,2+status,0]
  4403  05F2  0879               	movf	_state,w
  4404  05F3  1D03               	btfss	3,2
  4405  05F4  2DFA               	goto	l1144
  4406  05F5  0022               	movlb	2	; select bank2
  4407  05F6  018C               	clrf	12	;volatile
  4408  05F7  128E               	bcf	14,5	;volatile
  4409                           
  4410                           ;main.c: 147:         state = 1;
  4411  05F8  01F9               	clrf	_state
  4412  05F9  0AF9               	incf	_state,f
  4413  05FA                     l1144:	
  4414                           
  4415                           ;main.c: 149:     if(state == 1) {
  4416  05FA  0379               	decf	_state,w
  4417  05FB  1D03               	btfss	3,2
  4418  05FC  2DFF               	goto	l1146
  4419                           
  4420                           ;main.c: 150:         do { LATAbits.LATA5 = 1; } while(0);
  4421  05FD  0022               	movlb	2	; select bank2
  4422  05FE  168C               	bsf	12,5	;volatile
  4423  05FF                     l1146:	
  4424                           
  4425                           ;main.c: 152:     if(switch1) {
  4426  05FF  087A               	movf	_switch1,w
  4427  0600  1903               	btfsc	3,2
  4428  0601  0008               	return
  4429                           
  4430                           ;main.c: 153:         state = 0;
  4431  0602  01F9               	clrf	_state
  4432  0603  0008               	return
  4433  0604                     __end_of_HelloWorld:	
  4434                           
  4435                           	psect	text15
  4436  066E                     __ptext15:	
  4437 ;; *************** function _Blink *****************
  4438 ;; Defined at:
  4439 ;;		line 157 in file "main.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    2
  4460 ;; This function calls:
  4461 ;;		_TMR1_HasOverflowOccured
  4462 ;;		_TMR1_Reload
  4463 ;;		_TMR1_StartTimer
  4464 ;;		_TMR1_StopTimer
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           
  4471                           ;psect for function _Blink
  4472  066E                     _Blink:	
  4473                           
  4474                           ;main.c: 158:     if(state == 0) {
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  4478  066E  0879               	movf	_state,w
  4479  066F  1D03               	btfss	3,2
  4480  0670  2E79               	goto	l1486
  4481  0671  0022               	movlb	2	; select bank2
  4482  0672  018C               	clrf	12	;volatile
  4483  0673  128E               	bcf	14,5	;volatile
  4484                           
  4485                           ;main.c: 160:         TMR1_StartTimer();
  4486  0674  3185  2587  3186   	fcall	_TMR1_StartTimer
  4487                           
  4488                           ;main.c: 162:         state = 1;
  4489  0677  01F9               	clrf	_state
  4490  0678  0AF9               	incf	_state,f
  4491  0679                     l1486:	
  4492                           
  4493                           ;main.c: 165:     if(state == 1) {
  4494  0679  0379               	decf	_state,w
  4495  067A  1D03               	btfss	3,2
  4496  067B  2E9D               	goto	l1502
  4497  067C                     l1490:	
  4498  067C  3185  258D  3186   	fcall	_TMR1_HasOverflowOccured
  4499  067F  3A00               	xorlw	0
  4500  0680  1903               	skipnz
  4501  0681  2E7C               	goto	l1490
  4502                           
  4503                           ;main.c: 167:         TMR1IF = 0;
  4504  0682  0020               	movlb	0	; select bank0
  4505  0683  1011               	bcf	17,0	;volatile
  4506                           
  4507                           ;main.c: 168:         TMR1_Reload();
  4508  0684  3185  2595  3186   	fcall	_TMR1_Reload
  4509                           
  4510                           ;main.c: 169:         secondCount++;
  4511  0687  3001               	movlw	1
  4512  0688  00F2               	movwf	??_Blink
  4513  0689  0872               	movf	??_Blink,w
  4514  068A  0020               	movlb	0	; select bank0
  4515  068B  07A4               	addwf	_secondCount,f
  4516                           
  4517                           ;main.c: 171:         if(secondCount == 4) {
  4518  068C  3004               	movlw	4
  4519  068D  0624               	xorwf	_secondCount,w
  4520  068E  1D03               	btfss	3,2
  4521  068F  2E9D               	goto	l1502
  4522  0690  1003               	clrc
  4523  0691  0022               	movlb	2	; select bank2
  4524  0692  1E8C               	btfss	12,5	;volatile
  4525  0693  1403               	setc
  4526  0694  1C03               	btfss	3,0
  4527  0695  2E99               	goto	u520
  4528  0696  0022               	movlb	2	; select bank2
  4529  0697  168C               	bsf	12,5	;volatile
  4530  0698  2E9B               	goto	l1500
  4531  0699                     u520:	
  4532  0699  0022               	movlb	2	; select bank2
  4533  069A  128C               	bcf	12,5	;volatile
  4534  069B                     l1500:	
  4535                           
  4536                           ;main.c: 173:             secondCount = 0;
  4537  069B  0020               	movlb	0	; select bank0
  4538  069C  01A4               	clrf	_secondCount
  4539  069D                     l1502:	
  4540                           
  4541                           ;main.c: 177:     if(switch1) {
  4542  069D  087A               	movf	_switch1,w
  4543  069E  1903               	btfsc	3,2
  4544  069F  0008               	return
  4545                           
  4546                           ;main.c: 178:         TMR1_StopTimer();
  4547  06A0  3185  258A         	fcall	_TMR1_StopTimer
  4548                           
  4549                           ;main.c: 179:         state = 0;
  4550  06A2  01F9               	clrf	_state
  4551  06A3  0008               	return
  4552  06A4                     __end_of_Blink:	
  4553                           
  4554                           	psect	text16
  4555  058A                     __ptext16:	
  4556 ;; *************** function _TMR1_StopTimer *****************
  4557 ;; Defined at:
  4558 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		None
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_Blink
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _TMR1_StopTimer
  4587  058A                     _TMR1_StopTimer:	
  4588                           
  4589                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 0;
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _TMR1_StopTimer: []
  4593  058A  0020               	movlb	0	; select bank0
  4594  058B  101B               	bcf	27,0	;volatile
  4595  058C  0008               	return
  4596  058D                     __end_of_TMR1_StopTimer:	
  4597                           
  4598                           	psect	text17
  4599  0587                     __ptext17:	
  4600 ;; *************** function _TMR1_StartTimer *****************
  4601 ;; Defined at:
  4602 ;;		line 86 in file "mcc_generated_files/tmr1.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		None
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_Blink
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function _TMR1_StartTimer
  4631  0587                     _TMR1_StartTimer:	
  4632                           
  4633                           ;mcc_generated_files/tmr1.c: 89:     T1CONbits.TMR1ON = 1;
  4634                           
  4635                           ;incstack = 0
  4636                           ; Regs used in _TMR1_StartTimer: []
  4637  0587  0020               	movlb	0	; select bank0
  4638  0588  141B               	bsf	27,0	;volatile
  4639  0589  0008               	return
  4640  058A                     __end_of_TMR1_StartTimer:	
  4641                           
  4642                           	psect	text18
  4643  0595                     __ptext18:	
  4644 ;; *************** function _TMR1_Reload *****************
  4645 ;; Defined at:
  4646 ;;		line 135 in file "mcc_generated_files/tmr1.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, pclath, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		_TMR1_WriteTimer
  4669 ;; This function is called by:
  4670 ;;		_Blink
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _TMR1_Reload
  4676  0595                     _TMR1_Reload:	
  4677                           
  4678                           ;mcc_generated_files/tmr1.c: 137:     TMR1_WriteTimer(timer1ReloadVal);
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  4682  0595  0020               	movlb	0	; select bank0
  4683  0596  0826               	movf	_timer1ReloadVal+1,w	;volatile
  4684  0597  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4685  0598  0825               	movf	_timer1ReloadVal,w	;volatile
  4686  0599  00F0               	movwf	TMR1_WriteTimer@timerVal
  4687  059A  3185  25E3         	fcall	_TMR1_WriteTimer
  4688  059C  0008               	return
  4689  059D                     __end_of_TMR1_Reload:	
  4690                           
  4691                           	psect	text19
  4692  05E3                     __ptext19:	
  4693 ;; *************** function _TMR1_WriteTimer *****************
  4694 ;; Defined at:
  4695 ;;		line 113 in file "mcc_generated_files/tmr1.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  timerVal        2    0[COMMON] unsigned short 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_TMR1_Reload
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _TMR1_WriteTimer
  4724  05E3                     _TMR1_WriteTimer:	
  4725                           
  4726                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.T1SYNC == 1)
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4730  05E3  0020               	movlb	0	; select bank0
  4731  05E4  1D1B               	btfss	27,2	;volatile
  4732  05E5  2DED               	goto	l1410
  4733                           
  4734                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
  4735  05E6  101B               	bcf	27,0	;volatile
  4736                           
  4737                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
  4738  05E7  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4739  05E8  009A               	movwf	26	;volatile
  4740                           
  4741                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
  4742  05E9  0870               	movf	TMR1_WriteTimer@timerVal,w
  4743  05EA  0099               	movwf	25	;volatile
  4744                           
  4745                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
  4746  05EB  141B               	bsf	27,0	;volatile
  4747                           
  4748                           ;mcc_generated_files/tmr1.c: 126:     }
  4749  05EC  0008               	return
  4750  05ED                     l1410:	
  4751                           
  4752                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
  4753  05ED  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4754  05EE  009A               	movwf	26	;volatile
  4755                           
  4756                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
  4757  05EF  0870               	movf	TMR1_WriteTimer@timerVal,w
  4758  05F0  0099               	movwf	25	;volatile
  4759  05F1  0008               	return
  4760  05F2                     __end_of_TMR1_WriteTimer:	
  4761                           
  4762                           	psect	text20
  4763  058D                     __ptext20:	
  4764 ;; *************** function _TMR1_HasOverflowOccured *****************
  4765 ;; Defined at:
  4766 ;;		line 150 in file "mcc_generated_files/tmr1.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      _Bool 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_Blink
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _TMR1_HasOverflowOccured
  4795  058D                     _TMR1_HasOverflowOccured:	
  4796                           
  4797                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
  4798                           
  4799                           ;incstack = 0
  4800                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
  4801  058D  0020               	movlb	0	; select bank0
  4802  058E  0811               	movf	17,w	;volatile
  4803  058F  3901               	andlw	1
  4804  0590  0008               	return
  4805  0591                     __end_of_TMR1_HasOverflowOccured:	
  4806                           
  4807                           	psect	text21
  4808  06DF                     __ptext21:	
  4809 ;; *************** function _ADC *****************
  4810 ;; Defined at:
  4811 ;;		line 213 in file "main.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;Total ram usage:        3 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    1
  4832 ;; This function calls:
  4833 ;;		_ADC_GetConversion
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _ADC
  4841  06DF                     _ADC:	
  4842                           
  4843                           ;main.c: 214:     if(state == 0) {
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
  4847  06DF  0879               	movf	_state,w
  4848  06E0  1D03               	btfss	3,2
  4849  06E1  2EE7               	goto	l1516
  4850  06E2  0022               	movlb	2	; select bank2
  4851  06E3  018C               	clrf	12	;volatile
  4852  06E4  128E               	bcf	14,5	;volatile
  4853                           
  4854                           ;main.c: 217:         state = 1;
  4855  06E5  01F9               	clrf	_state
  4856  06E6  0AF9               	incf	_state,f
  4857  06E7                     l1516:	
  4858                           
  4859                           ;main.c: 220:     if(state == 1) {
  4860  06E7  0379               	decf	_state,w
  4861  06E8  1D03               	btfss	3,2
  4862  06E9  2F2E               	goto	l1528
  4863                           
  4864                           ;main.c: 221:         adcResult = ADC_GetConversion(POT_CHANNEL) >> 12;
  4865  06EA  3010               	movlw	16
  4866  06EB  3186  2604  3186   	fcall	_ADC_GetConversion
  4867  06EE  0870               	movf	?_ADC_GetConversion,w
  4868  06EF  00F4               	movwf	??_ADC
  4869  06F0  0871               	movf	?_ADC_GetConversion+1,w
  4870  06F1  00F5               	movwf	??_ADC+1
  4871  06F2  0E75               	swapf	??_ADC+1,w
  4872  06F3  390F               	andlw	15
  4873  06F4  00F4               	movwf	??_ADC
  4874  06F5  01F5               	clrf	??_ADC+1
  4875  06F6  0874               	movf	??_ADC,w
  4876  06F7  00F6               	movwf	??_ADC+2
  4877  06F8  0876               	movf	??_ADC+2,w
  4878  06F9  00FC               	movwf	_adcResult
  4879                           
  4880                           ;main.c: 223:         LATAbits.LATA5 = adcResult & 1;
  4881  06FA  087C               	movf	_adcResult,w
  4882  06FB  3901               	andlw	1
  4883  06FC  00F4               	movwf	??_ADC
  4884  06FD  0EF4               	swapf	??_ADC,f
  4885  06FE  0DF4               	rlf	??_ADC,f
  4886  06FF  0022               	movlb	2	; select bank2
  4887  0700  080C               	movf	12,w	;volatile
  4888  0701  0674               	xorwf	??_ADC,w
  4889  0702  39DF               	andlw	-33
  4890  0703  0674               	xorwf	??_ADC,w
  4891  0704  008C               	movwf	12	;volatile
  4892                           
  4893                           ;main.c: 224:         LATAbits.LATA1 = (adcResult & 2) >> 1;
  4894  0705  367C               	lsrf	_adcResult,w
  4895  0706  3901               	andlw	1
  4896  0707  00F4               	movwf	??_ADC
  4897  0708  0DF4               	rlf	??_ADC,f
  4898  0709  080C               	movf	12,w	;volatile
  4899  070A  0674               	xorwf	??_ADC,w
  4900  070B  39FD               	andlw	-3
  4901  070C  0674               	xorwf	??_ADC,w
  4902  070D  008C               	movwf	12	;volatile
  4903                           
  4904                           ;main.c: 225:         LATAbits.LATA2 = (adcResult & 4) >> 2;
  4905  070E  087C               	movf	_adcResult,w
  4906  070F  00F4               	movwf	??_ADC
  4907  0710  3002               	movlw	2
  4908  0711                     u575:	
  4909  0711  36F4               	lsrf	??_ADC,f
  4910  0712  0B89               	decfsz	9,f
  4911  0713  2F11               	goto	u575
  4912  0714  0874               	movf	??_ADC,w
  4913  0715  3901               	andlw	1
  4914  0716  00F5               	movwf	??_ADC+1
  4915  0717  0DF5               	rlf	??_ADC+1,f
  4916  0718  0DF5               	rlf	??_ADC+1,f
  4917  0719  080C               	movf	12,w	;volatile
  4918  071A  0675               	xorwf	??_ADC+1,w
  4919  071B  39FB               	andlw	-5
  4920  071C  0675               	xorwf	??_ADC+1,w
  4921  071D  008C               	movwf	12	;volatile
  4922                           
  4923                           ;main.c: 226:         LATCbits.LATC5 = (adcResult & 8) >> 3;
  4924  071E  087C               	movf	_adcResult,w
  4925  071F  00F4               	movwf	??_ADC
  4926  0720  3003               	movlw	3
  4927  0721                     u585:	
  4928  0721  36F4               	lsrf	??_ADC,f
  4929  0722  0B89               	decfsz	9,f
  4930  0723  2F21               	goto	u585
  4931  0724  0874               	movf	??_ADC,w
  4932  0725  3901               	andlw	1
  4933  0726  00F5               	movwf	??_ADC+1
  4934  0727  0EF5               	swapf	??_ADC+1,f
  4935  0728  0DF5               	rlf	??_ADC+1,f
  4936  0729  080E               	movf	14,w	;volatile
  4937  072A  0675               	xorwf	??_ADC+1,w
  4938  072B  39DF               	andlw	-33
  4939  072C  0675               	xorwf	??_ADC+1,w
  4940  072D  008E               	movwf	14	;volatile
  4941  072E                     l1528:	
  4942                           
  4943                           ;main.c: 229:     if(switch1) {
  4944  072E  087A               	movf	_switch1,w
  4945  072F  1903               	btfsc	3,2
  4946  0730  0008               	return
  4947                           
  4948                           ;main.c: 230:         state = 0;
  4949  0731  01F9               	clrf	_state
  4950  0732  0008               	return
  4951  0733                     __end_of_ADC:	
  4952                           
  4953                           	psect	text22
  4954  0604                     __ptext22:	
  4955 ;; *************** function _ADC_GetConversion *****************
  4956 ;; Defined at:
  4957 ;;		line 113 in file "mcc_generated_files/adc.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  channel         1    wreg     enum E6648
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  channel         1    3[COMMON] enum E6648
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2    0[COMMON] unsigned short 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;Total ram usage:        4 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_ADC
  4981 ;;		_VSR
  4982 ;;		_PWM
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _ADC_GetConversion
  4988  0604                     _ADC_GetConversion:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4992                           ;ADC_GetConversion@channel stored from wreg
  4993  0604  00F3               	movwf	ADC_GetConversion@channel
  4994                           
  4995                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  4996  0605  0873               	movf	ADC_GetConversion@channel,w
  4997  0606  00F2               	movwf	??_ADC_GetConversion
  4998  0607  0DF2               	rlf	??_ADC_GetConversion,f
  4999  0608  0DF2               	rlf	??_ADC_GetConversion,f
  5000  0609  0021               	movlb	1	; select bank1
  5001  060A  081D               	movf	29,w	;volatile
  5002  060B  0672               	xorwf	??_ADC_GetConversion,w
  5003  060C  3903               	andlw	-253
  5004  060D  0672               	xorwf	??_ADC_GetConversion,w
  5005  060E  009D               	movwf	29	;volatile
  5006                           
  5007                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  5008  060F  141D               	bsf	29,0	;volatile
  5009                           
  5010                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
  5011                           
  5012                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
  5013  0610  0021               	movlb	1	; select bank1
  5014  0611  149D               	bsf	29,1	;volatile
  5015  0612                     l335:	
  5016                           ;mcc_generated_files/adc.c: 131:     }
  5017                           
  5018                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5019                           
  5020                           
  5021                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5022  0612  0021               	movlb	1	; select bank1
  5023  0613  1C9D               	btfss	29,1	;volatile
  5024  0614  2E17               	goto	l1432
  5025  0615  0064               	clrwdt	;# 
  5026  0616  2E12               	goto	l335
  5027  0617                     l1432:	
  5028                           
  5029                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5030  0617  081C               	movf	28,w	;volatile
  5031  0618  00F1               	movwf	?_ADC_GetConversion+1
  5032  0619  081B               	movf	27,w	;volatile
  5033  061A  00F0               	movwf	?_ADC_GetConversion
  5034  061B  0008               	return
  5035  061C                     __end_of_ADC_GetConversion:	
  5036  007E                     btemp	set	126	;btemp
  5037  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC
    _VSR->_ADC_GetConversion
    _TMR1_Reload->_TMR1_WriteTimer
    _ADC->_ADC_GetConversion

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     208
                                              7 COMMON     2     2      0
                                _ADC
                              _Blink
                         _HelloWorld
                             _Rotate
                  _SYSTEM_Initialize
                                _VSR
                      _checkButtonS1
                               _next
 ---------------------------------------------------------------------------------
 (1) _next                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VSR                                                  2     2      0      22
                                              4 COMMON     2     2      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotate                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HelloWorld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Blink                                                1     1      0     164
                                              2 COMMON     1     1      0
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  3     3      0      22
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADC_GetConversion
   _Blink
     _TMR1_HasOverflowOccured
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _HelloWorld
   _Rotate
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _VSR
     _ADC_GetConversion
   _checkButtonS1
   _next

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       7       5        8.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      15      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      15      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 11 16:45:46 2019

                     __CFG_CP$OFF 0000                                l73 06A7                                l87 0646  
                     __CFG_LVP$ON 0000                               l127 0784                               l335 0612  
                             _ADC 06DF                               u205 0777                               _PR2 001E  
                             u520 0699                      __CFG_CPD$OFF 0000                               u195 0767  
                             u635 07C5                               u645 07D5                               u575 0711  
                             u585 0721                               u747 063D                               u757 07A0  
                             u767 07AA                               u777 0744                               _VSR 0789  
                 _timer1ReloadVal 0025           __size_of_PMD_Initialize 0008                   _TMR2_Initialize 05B5  
                             wreg 0009                              ?_ADC 0070                              ?_VSR 0070  
                            l1202 0750                              l1144 05FA                              l1410 05ED  
                            l1146 05FF                              l1500 069B                              l1502 069D  
                            l1432 0617                              l1194 073E                              l1516 06E7  
                            l1550 07A3                              l1542 0793                              l1528 072E  
                            l1552 07AE                              l1490 067C                              l1570 06BB  
                            l1562 06AB                              l1556 07EC                              l1564 06AF  
                            l1486 0679                              l1566 06B3                              l1574 06BF  
                            l1648 06C7                              l1568 06B7                              l1576 06D8  
         __end_of_PWM1_Initialize 05C9                              _LATA 010C                              _LATB 010D  
                            _LATC 010E                              _PMD0 0911                              _PMD1 0912  
                            _PMD2 0913                              _PMD3 0914                              _PMD4 0915  
                            _PMD5 0916           _TMR1_HasOverflowOccured 058D                              _TMR2 001D  
                            _WPUA 020C                              _WPUB 020D                              _WPUC 020E  
                    __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000                              _main 06A4  
                            _next 05C9                              btemp 007E                     __CFG_BOREN$ON 0000  
                   __CFG_BORV$LOW 0000                              start 0002                     __CFG_CSWEN$ON 0000  
                   __CFG_MCLRE$ON 0000                             ??_ADC 0074                             ??_VSR 0074  
  __size_of_OSCILLATOR_Initialize 0008     __end_of_OSCILLATOR_Initialize 05AD                             _ADACT 009F  
                           ?_main 0070                             ?_next 0070                   _TMR1_StartTimer 0587  
                           _T1CON 001B                             _T2CON 001F                    __CFG_DEBUG$OFF 0000  
                           _OSCEN 091D                             _TMR1H 001A                             _TMR1L 0019  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _Blink 066E                        _HelloWorld 05F2                    _WDT_Initialize 0591  
                           _event 007D                             _state 0079           __end_of_TMR1_Initialize 05E3  
                           status 0003                             wtemp0 007E                   _TMR1_WriteTimer 05E3  
                 __initialization 07F1                      __end_of_main 06DF                      __end_of_next 05D5  
         __end_of_TMR2_Initialize 05BD                            ??_main 0077                            ??_next 0070  
                          ?_Blink 0070            __end_of_WDT_Initialize 0595         ??_TMR1_HasOverflowOccured 0070  
                          _ADCON0 009D                            _ADCON1 009E                            _ADRESH 009C  
                          _ADRESL 009B                            _CCPR1H 0292                            _CCPR1L 0291  
                          _ANSELA 018C                            _ANSELB 018D                            _ANSELC 018E  
              __CFG_RSTOSC$HFINT1 0000                            _T1GCON 001C           TMR1_WriteTimer@timerVal 0070  
                ?_PWM1_Initialize 0070                            _RC5PPS 0EA5                            _ODCONA 028C  
                          _ODCONB 028D                            _ODCONC 028E                            _OSCFRQ 091F  
                          _TMR1IF 0088                            _WDTCON 0097                    __CFG_PWRTE$OFF 0000  
                          _Rotate 0733           __end_of_TMR1_StartTimer 058A                      ?_TMR1_Reload 0070  
                  __CFG_STVREN$ON 0000                            _button 0022                    _PMD_Initialize 05AD  
                    __pdataCOMMON 007D                       ?_HelloWorld 0070                   ?_WDT_Initialize 0070  
        ADC_GetConversion@channel 0073           __end_of_TMR1_WriteTimer 05F2                  ?_TMR1_Initialize 0070  
               _SYSTEM_Initialize 061C           __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070  
                      _adcResult2 0020                     __end_of_Blink 06A4                    __pcstackCOMMON 0070  
             ??_SYSTEM_Initialize 0070                  ?_TMR2_Initialize 0070            __end_of_PMD_Initialize 05B5  
                         ??_Blink 0072         __end_of_SYSTEM_Initialize 0634                        __pbssBANK0 0020  
                      __pmaintext 06A4                           ?_Rotate 0070               __size_of_HelloWorld 0012  
                ?_TMR1_StartTimer 0070                   __CFG_PPS1WAY$ON 0000                           _CCP1CON 0293  
                 ?_PMD_Initialize 0070           __size_of_ADC_Initialize 0008           __size_of_TMR1_StopTimer 0003  
                         _OSCCON1 0919                           _OSCCON3 091B                           _OSCTUNE 091E  
                         _SLRCONA 030C                           _SLRCONB 030D                           _SLRCONC 030E  
          __size_of_checkButtonS1 0018                  ?_TMR1_WriteTimer 0070                   __size_of_Rotate 0056  
            __size_of_TMR1_Reload 0008                           __ptext1 05C9                           __ptext2 0634  
                         __ptext3 0789                           __ptext4 061C                           __ptext5 0591  
                         __ptext6 05B5                           __ptext7 05D5                           __ptext8 05BD  
                         __ptext9 05AD                      __size_of_ADC 0054                         _T1CONbits 001B  
                    __size_of_VSR 0068             _OSCILLATOR_Initialize 05A5                         _T2CONbits 001F  
        ??_PIN_MANAGER_Initialize 0070        __size_of_SYSTEM_Initialize 0018                           _switch1 007A  
            end_of_initialization 07FD                     _checkButtonS1 0634                  ??_WDT_Initialize 0070  
                       _PORTCbits 000E                      ??_HelloWorld 0070                  __CFG_FEXTOSC$OFF 0000  
                     _CCP1CONbits 0293          __size_of_PWM1_Initialize 000C                    ?_checkButtonS1 0070  
              __end_of_HelloWorld 0604                    __end_of_Rotate 0789                     __pidataCOMMON 0586  
                  _ADC_Initialize 059D                    _TMR1_StopTimer 058A            ?_OSCILLATOR_Initialize 0070  
        ?_TMR1_HasOverflowOccured 0070               start_initialization 07F1                       __end_of_ADC 0733  
                     __end_of_VSR 07F1   __size_of_PIN_MANAGER_Initialize 0022                  __CFG_LPBOREN$OFF 0000  
        __size_of_TMR1_Initialize 000E                          ??_Rotate 0070                  ??_PMD_Initialize 0070  
                     _CCPTMRSbits 029F            __end_of_ADC_Initialize 05A5            __end_of_TMR1_StopTimer 058D  
                     __pbssCOMMON 0079                         ___latbits 0002                         _adcResult 007C  
        __size_of_TMR2_Initialize 0008                         __pnvBANK0 0025                   ??_checkButtonS1 0070  
          _PIN_MANAGER_Initialize 064C   __end_of_TMR1_HasOverflowOccured 0591                   ?_ADC_Initialize 0070  
                 ?_TMR1_StopTimer 0070                 ??_PWM1_Initialize 0070          __size_of_TMR1_StartTimer 0003  
                  __size_of_Blink 0036                  __CFG_WDTE$SWDTEN 0000                          _LATAbits 010C  
                        _LATCbits 010E          __size_of_TMR1_WriteTimer 000F                          _PIR1bits 0011  
                   ??_TMR1_Reload 0072                 ??_TMR1_Initialize 0070                         _rotateVal 007B  
                      _ADCON0bits 009D                 ??_TMR2_Initialize 0070                 _ADC_GetConversion 0604  
         ??_OSCILLATOR_Initialize 0070                ?_ADC_GetConversion 0070               __end_of_TMR1_Reload 059D  
             ??_ADC_GetConversion 0072                          _delayVal 0023                          __ptext10 064C  
                        __ptext11 05A5                          __ptext20 058D                          __ptext12 059D  
                        __ptext21 06DF                          __ptext13 0733                        _T1GCONbits 001C  
                        __ptext22 0604                          __ptext14 05F2                          __ptext15 066E  
                        __ptext16 058A                          __ptext17 0587                          __ptext18 0595  
                        __ptext19 05E3                 ??_TMR1_StartTimer 0070  __size_of_TMR1_HasOverflowOccured 0004  
                   __size_of_main 003B                     __size_of_next 000C         __end_of_ADC_GetConversion 061C  
               ??_TMR1_WriteTimer 0072                       _secondCount 0024           __size_of_WDT_Initialize 0004  
         ?_PIN_MANAGER_Initialize 0070                 __CFG_CLKOUTEN$OFF 0000                   _PWM1_Initialize 05BD  
                ??_ADC_Initialize 0070                  ??_TMR1_StopTimer 0070                       _TMR1_Reload 0595  
  __end_of_PIN_MANAGER_Initialize 066E        __size_of_ADC_GetConversion 0018                   _TMR1_Initialize 05D5  
           __end_of_checkButtonS1 064C  
