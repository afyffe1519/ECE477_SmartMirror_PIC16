

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 01 13:04:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F18345 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0097                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  0311                     	;# 
   212  0311                     	;# 
   213  0312                     	;# 
   214  0313                     	;# 
   215  0314                     	;# 
   216  0315                     	;# 
   217  0315                     	;# 
   218  0316                     	;# 
   219  0317                     	;# 
   220  0318                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039A                     	;# 
   234  039C                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  041F                     	;# 
   255  0498                     	;# 
   256  0498                     	;# 
   257  0499                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049B                     	;# 
   261  049C                     	;# 
   262  049D                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0617                     	;# 
   266  0618                     	;# 
   267  0619                     	;# 
   268  0619                     	;# 
   269  061A                     	;# 
   270  061B                     	;# 
   271  061C                     	;# 
   272  061C                     	;# 
   273  061F                     	;# 
   274  0691                     	;# 
   275  0692                     	;# 
   276  0693                     	;# 
   277  0694                     	;# 
   278  0695                     	;# 
   279  0696                     	;# 
   280  0697                     	;# 
   281  0698                     	;# 
   282  0699                     	;# 
   283  0711                     	;# 
   284  0712                     	;# 
   285  0713                     	;# 
   286  0714                     	;# 
   287  0715                     	;# 
   288  0716                     	;# 
   289  0717                     	;# 
   290  0718                     	;# 
   291  0719                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  089B                     	;# 
   317  0911                     	;# 
   318  0912                     	;# 
   319  0913                     	;# 
   320  0914                     	;# 
   321  0915                     	;# 
   322  0916                     	;# 
   323  0918                     	;# 
   324  0919                     	;# 
   325  091A                     	;# 
   326  091B                     	;# 
   327  091C                     	;# 
   328  091D                     	;# 
   329  091E                     	;# 
   330  091F                     	;# 
   331  0E0F                     	;# 
   332  0E10                     	;# 
   333  0E11                     	;# 
   334  0E12                     	;# 
   335  0E13                     	;# 
   336  0E14                     	;# 
   337  0E15                     	;# 
   338  0E16                     	;# 
   339  0E17                     	;# 
   340  0E18                     	;# 
   341  0E19                     	;# 
   342  0E1A                     	;# 
   343  0E1B                     	;# 
   344  0E1C                     	;# 
   345  0E1D                     	;# 
   346  0E1E                     	;# 
   347  0E1F                     	;# 
   348  0E20                     	;# 
   349  0E21                     	;# 
   350  0E22                     	;# 
   351  0E24                     	;# 
   352  0E25                     	;# 
   353  0E28                     	;# 
   354  0E29                     	;# 
   355  0E2A                     	;# 
   356  0E2B                     	;# 
   357  0E2C                     	;# 
   358  0E2D                     	;# 
   359  0E2E                     	;# 
   360  0E2F                     	;# 
   361  0E90                     	;# 
   362  0E91                     	;# 
   363  0E92                     	;# 
   364  0E94                     	;# 
   365  0E95                     	;# 
   366  0E9C                     	;# 
   367  0E9D                     	;# 
   368  0E9E                     	;# 
   369  0E9F                     	;# 
   370  0EA0                     	;# 
   371  0EA1                     	;# 
   372  0EA2                     	;# 
   373  0EA3                     	;# 
   374  0EA4                     	;# 
   375  0EA5                     	;# 
   376  0EA6                     	;# 
   377  0EA7                     	;# 
   378  0F0F                     	;# 
   379  0F10                     	;# 
   380  0F11                     	;# 
   381  0F12                     	;# 
   382  0F13                     	;# 
   383  0F14                     	;# 
   384  0F15                     	;# 
   385  0F16                     	;# 
   386  0F17                     	;# 
   387  0F18                     	;# 
   388  0F19                     	;# 
   389  0F1A                     	;# 
   390  0F1B                     	;# 
   391  0F1C                     	;# 
   392  0F1D                     	;# 
   393  0F1E                     	;# 
   394  0F1F                     	;# 
   395  0F20                     	;# 
   396  0F21                     	;# 
   397  0F22                     	;# 
   398  0F23                     	;# 
   399  0F24                     	;# 
   400  0F25                     	;# 
   401  0F26                     	;# 
   402  0F27                     	;# 
   403  0F28                     	;# 
   404  0F29                     	;# 
   405  0F2A                     	;# 
   406  0F2B                     	;# 
   407  0F2C                     	;# 
   408  0F2D                     	;# 
   409  0F2E                     	;# 
   410  0F2F                     	;# 
   411  0F30                     	;# 
   412  0F31                     	;# 
   413  0F32                     	;# 
   414  0F33                     	;# 
   415  0F34                     	;# 
   416  0F35                     	;# 
   417  0F36                     	;# 
   418  0F37                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  000E                     	;# 
   445  0010                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0090                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0097                     	;# 
   473  009B                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  018E                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  0199                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019A                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019C                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019D                     	;# 
   510  019D                     	;# 
   511  019D                     	;# 
   512  019E                     	;# 
   513  019E                     	;# 
   514  019E                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  020C                     	;# 
   521  020D                     	;# 
   522  020E                     	;# 
   523  0211                     	;# 
   524  0211                     	;# 
   525  0212                     	;# 
   526  0212                     	;# 
   527  0213                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0219                     	;# 
   540  021A                     	;# 
   541  021B                     	;# 
   542  021C                     	;# 
   543  021D                     	;# 
   544  021D                     	;# 
   545  021E                     	;# 
   546  021F                     	;# 
   547  028C                     	;# 
   548  028D                     	;# 
   549  028E                     	;# 
   550  0291                     	;# 
   551  0291                     	;# 
   552  0292                     	;# 
   553  0293                     	;# 
   554  0294                     	;# 
   555  0295                     	;# 
   556  0295                     	;# 
   557  0296                     	;# 
   558  0297                     	;# 
   559  0298                     	;# 
   560  029F                     	;# 
   561  030C                     	;# 
   562  030D                     	;# 
   563  030E                     	;# 
   564  0311                     	;# 
   565  0311                     	;# 
   566  0312                     	;# 
   567  0313                     	;# 
   568  0314                     	;# 
   569  0315                     	;# 
   570  0315                     	;# 
   571  0316                     	;# 
   572  0317                     	;# 
   573  0318                     	;# 
   574  038C                     	;# 
   575  038D                     	;# 
   576  038E                     	;# 
   577  0391                     	;# 
   578  0392                     	;# 
   579  0393                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0397                     	;# 
   584  0398                     	;# 
   585  0399                     	;# 
   586  039A                     	;# 
   587  039C                     	;# 
   588  039D                     	;# 
   589  039E                     	;# 
   590  039F                     	;# 
   591  0411                     	;# 
   592  0411                     	;# 
   593  0412                     	;# 
   594  0413                     	;# 
   595  0414                     	;# 
   596  0415                     	;# 
   597  0416                     	;# 
   598  0417                     	;# 
   599  0418                     	;# 
   600  0418                     	;# 
   601  0419                     	;# 
   602  041A                     	;# 
   603  041B                     	;# 
   604  041C                     	;# 
   605  041D                     	;# 
   606  041E                     	;# 
   607  041F                     	;# 
   608  0498                     	;# 
   609  0498                     	;# 
   610  0499                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049B                     	;# 
   614  049C                     	;# 
   615  049D                     	;# 
   616  049E                     	;# 
   617  049F                     	;# 
   618  0617                     	;# 
   619  0618                     	;# 
   620  0619                     	;# 
   621  0619                     	;# 
   622  061A                     	;# 
   623  061B                     	;# 
   624  061C                     	;# 
   625  061C                     	;# 
   626  061F                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  0695                     	;# 
   632  0696                     	;# 
   633  0697                     	;# 
   634  0698                     	;# 
   635  0699                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0715                     	;# 
   641  0716                     	;# 
   642  0717                     	;# 
   643  0718                     	;# 
   644  0719                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0892                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0894                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0895                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0896                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  089B                     	;# 
   670  0911                     	;# 
   671  0912                     	;# 
   672  0913                     	;# 
   673  0914                     	;# 
   674  0915                     	;# 
   675  0916                     	;# 
   676  0918                     	;# 
   677  0919                     	;# 
   678  091A                     	;# 
   679  091B                     	;# 
   680  091C                     	;# 
   681  091D                     	;# 
   682  091E                     	;# 
   683  091F                     	;# 
   684  0E0F                     	;# 
   685  0E10                     	;# 
   686  0E11                     	;# 
   687  0E12                     	;# 
   688  0E13                     	;# 
   689  0E14                     	;# 
   690  0E15                     	;# 
   691  0E16                     	;# 
   692  0E17                     	;# 
   693  0E18                     	;# 
   694  0E19                     	;# 
   695  0E1A                     	;# 
   696  0E1B                     	;# 
   697  0E1C                     	;# 
   698  0E1D                     	;# 
   699  0E1E                     	;# 
   700  0E1F                     	;# 
   701  0E20                     	;# 
   702  0E21                     	;# 
   703  0E22                     	;# 
   704  0E24                     	;# 
   705  0E25                     	;# 
   706  0E28                     	;# 
   707  0E29                     	;# 
   708  0E2A                     	;# 
   709  0E2B                     	;# 
   710  0E2C                     	;# 
   711  0E2D                     	;# 
   712  0E2E                     	;# 
   713  0E2F                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E94                     	;# 
   718  0E95                     	;# 
   719  0E9C                     	;# 
   720  0E9D                     	;# 
   721  0E9E                     	;# 
   722  0E9F                     	;# 
   723  0EA0                     	;# 
   724  0EA1                     	;# 
   725  0EA2                     	;# 
   726  0EA3                     	;# 
   727  0EA4                     	;# 
   728  0EA5                     	;# 
   729  0EA6                     	;# 
   730  0EA7                     	;# 
   731  0F0F                     	;# 
   732  0F10                     	;# 
   733  0F11                     	;# 
   734  0F12                     	;# 
   735  0F13                     	;# 
   736  0F14                     	;# 
   737  0F15                     	;# 
   738  0F16                     	;# 
   739  0F17                     	;# 
   740  0F18                     	;# 
   741  0F19                     	;# 
   742  0F1A                     	;# 
   743  0F1B                     	;# 
   744  0F1C                     	;# 
   745  0F1D                     	;# 
   746  0F1E                     	;# 
   747  0F1F                     	;# 
   748  0F20                     	;# 
   749  0F21                     	;# 
   750  0F22                     	;# 
   751  0F23                     	;# 
   752  0F24                     	;# 
   753  0F25                     	;# 
   754  0F26                     	;# 
   755  0F27                     	;# 
   756  0F28                     	;# 
   757  0F29                     	;# 
   758  0F2A                     	;# 
   759  0F2B                     	;# 
   760  0F2C                     	;# 
   761  0F2D                     	;# 
   762  0F2E                     	;# 
   763  0F2F                     	;# 
   764  0F30                     	;# 
   765  0F31                     	;# 
   766  0F32                     	;# 
   767  0F33                     	;# 
   768  0F34                     	;# 
   769  0F35                     	;# 
   770  0F36                     	;# 
   771  0F37                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  0010                     	;# 
   799  0011                     	;# 
   800  0012                     	;# 
   801  0013                     	;# 
   802  0014                     	;# 
   803  0015                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  001D                     	;# 
   815  001E                     	;# 
   816  001F                     	;# 
   817  008C                     	;# 
   818  008D                     	;# 
   819  008E                     	;# 
   820  0090                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0093                     	;# 
   824  0094                     	;# 
   825  0097                     	;# 
   826  009B                     	;# 
   827  009B                     	;# 
   828  009C                     	;# 
   829  009D                     	;# 
   830  009E                     	;# 
   831  009F                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018E                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  020E                     	;# 
   876  0211                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0213                     	;# 
   882  0214                     	;# 
   883  0214                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0216                     	;# 
   890  0217                     	;# 
   891  0217                     	;# 
   892  0219                     	;# 
   893  021A                     	;# 
   894  021B                     	;# 
   895  021C                     	;# 
   896  021D                     	;# 
   897  021D                     	;# 
   898  021E                     	;# 
   899  021F                     	;# 
   900  028C                     	;# 
   901  028D                     	;# 
   902  028E                     	;# 
   903  0291                     	;# 
   904  0291                     	;# 
   905  0292                     	;# 
   906  0293                     	;# 
   907  0294                     	;# 
   908  0295                     	;# 
   909  0295                     	;# 
   910  0296                     	;# 
   911  0297                     	;# 
   912  0298                     	;# 
   913  029F                     	;# 
   914  030C                     	;# 
   915  030D                     	;# 
   916  030E                     	;# 
   917  0311                     	;# 
   918  0311                     	;# 
   919  0312                     	;# 
   920  0313                     	;# 
   921  0314                     	;# 
   922  0315                     	;# 
   923  0315                     	;# 
   924  0316                     	;# 
   925  0317                     	;# 
   926  0318                     	;# 
   927  038C                     	;# 
   928  038D                     	;# 
   929  038E                     	;# 
   930  0391                     	;# 
   931  0392                     	;# 
   932  0393                     	;# 
   933  0394                     	;# 
   934  0395                     	;# 
   935  0396                     	;# 
   936  0397                     	;# 
   937  0398                     	;# 
   938  0399                     	;# 
   939  039A                     	;# 
   940  039C                     	;# 
   941  039D                     	;# 
   942  039E                     	;# 
   943  039F                     	;# 
   944  0411                     	;# 
   945  0411                     	;# 
   946  0412                     	;# 
   947  0413                     	;# 
   948  0414                     	;# 
   949  0415                     	;# 
   950  0416                     	;# 
   951  0417                     	;# 
   952  0418                     	;# 
   953  0418                     	;# 
   954  0419                     	;# 
   955  041A                     	;# 
   956  041B                     	;# 
   957  041C                     	;# 
   958  041D                     	;# 
   959  041E                     	;# 
   960  041F                     	;# 
   961  0498                     	;# 
   962  0498                     	;# 
   963  0499                     	;# 
   964  049A                     	;# 
   965  049B                     	;# 
   966  049B                     	;# 
   967  049C                     	;# 
   968  049D                     	;# 
   969  049E                     	;# 
   970  049F                     	;# 
   971  0617                     	;# 
   972  0618                     	;# 
   973  0619                     	;# 
   974  0619                     	;# 
   975  061A                     	;# 
   976  061B                     	;# 
   977  061C                     	;# 
   978  061C                     	;# 
   979  061F                     	;# 
   980  0691                     	;# 
   981  0692                     	;# 
   982  0693                     	;# 
   983  0694                     	;# 
   984  0695                     	;# 
   985  0696                     	;# 
   986  0697                     	;# 
   987  0698                     	;# 
   988  0699                     	;# 
   989  0711                     	;# 
   990  0712                     	;# 
   991  0713                     	;# 
   992  0714                     	;# 
   993  0715                     	;# 
   994  0716                     	;# 
   995  0717                     	;# 
   996  0718                     	;# 
   997  0719                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0892                     	;# 
  1005  0892                     	;# 
  1006  0892                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0894                     	;# 
  1014  0894                     	;# 
  1015  0894                     	;# 
  1016  0895                     	;# 
  1017  0895                     	;# 
  1018  0895                     	;# 
  1019  0896                     	;# 
  1020  0896                     	;# 
  1021  0896                     	;# 
  1022  089B                     	;# 
  1023  0911                     	;# 
  1024  0912                     	;# 
  1025  0913                     	;# 
  1026  0914                     	;# 
  1027  0915                     	;# 
  1028  0916                     	;# 
  1029  0918                     	;# 
  1030  0919                     	;# 
  1031  091A                     	;# 
  1032  091B                     	;# 
  1033  091C                     	;# 
  1034  091D                     	;# 
  1035  091E                     	;# 
  1036  091F                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E16                     	;# 
  1045  0E17                     	;# 
  1046  0E18                     	;# 
  1047  0E19                     	;# 
  1048  0E1A                     	;# 
  1049  0E1B                     	;# 
  1050  0E1C                     	;# 
  1051  0E1D                     	;# 
  1052  0E1E                     	;# 
  1053  0E1F                     	;# 
  1054  0E20                     	;# 
  1055  0E21                     	;# 
  1056  0E22                     	;# 
  1057  0E24                     	;# 
  1058  0E25                     	;# 
  1059  0E28                     	;# 
  1060  0E29                     	;# 
  1061  0E2A                     	;# 
  1062  0E2B                     	;# 
  1063  0E2C                     	;# 
  1064  0E2D                     	;# 
  1065  0E2E                     	;# 
  1066  0E2F                     	;# 
  1067  0E90                     	;# 
  1068  0E91                     	;# 
  1069  0E92                     	;# 
  1070  0E94                     	;# 
  1071  0E95                     	;# 
  1072  0E9C                     	;# 
  1073  0E9D                     	;# 
  1074  0E9E                     	;# 
  1075  0E9F                     	;# 
  1076  0EA0                     	;# 
  1077  0EA1                     	;# 
  1078  0EA2                     	;# 
  1079  0EA3                     	;# 
  1080  0EA4                     	;# 
  1081  0EA5                     	;# 
  1082  0EA6                     	;# 
  1083  0EA7                     	;# 
  1084  0F0F                     	;# 
  1085  0F10                     	;# 
  1086  0F11                     	;# 
  1087  0F12                     	;# 
  1088  0F13                     	;# 
  1089  0F14                     	;# 
  1090  0F15                     	;# 
  1091  0F16                     	;# 
  1092  0F17                     	;# 
  1093  0F18                     	;# 
  1094  0F19                     	;# 
  1095  0F1A                     	;# 
  1096  0F1B                     	;# 
  1097  0F1C                     	;# 
  1098  0F1D                     	;# 
  1099  0F1E                     	;# 
  1100  0F1F                     	;# 
  1101  0F20                     	;# 
  1102  0F21                     	;# 
  1103  0F22                     	;# 
  1104  0F23                     	;# 
  1105  0F24                     	;# 
  1106  0F25                     	;# 
  1107  0F26                     	;# 
  1108  0F27                     	;# 
  1109  0F28                     	;# 
  1110  0F29                     	;# 
  1111  0F2A                     	;# 
  1112  0F2B                     	;# 
  1113  0F2C                     	;# 
  1114  0F2D                     	;# 
  1115  0F2E                     	;# 
  1116  0F2F                     	;# 
  1117  0F30                     	;# 
  1118  0F31                     	;# 
  1119  0F32                     	;# 
  1120  0F33                     	;# 
  1121  0F34                     	;# 
  1122  0F35                     	;# 
  1123  0F36                     	;# 
  1124  0F37                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0014                     	;# 
  1156  0015                     	;# 
  1157  0015                     	;# 
  1158  0016                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  0019                     	;# 
  1163  0019                     	;# 
  1164  001A                     	;# 
  1165  001B                     	;# 
  1166  001C                     	;# 
  1167  001D                     	;# 
  1168  001E                     	;# 
  1169  001F                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  0090                     	;# 
  1174  0091                     	;# 
  1175  0092                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0097                     	;# 
  1179  009B                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009E                     	;# 
  1184  009F                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  018C                     	;# 
  1198  018D                     	;# 
  1199  018E                     	;# 
  1200  0197                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  0219                     	;# 
  1246  021A                     	;# 
  1247  021B                     	;# 
  1248  021C                     	;# 
  1249  021D                     	;# 
  1250  021D                     	;# 
  1251  021E                     	;# 
  1252  021F                     	;# 
  1253  028C                     	;# 
  1254  028D                     	;# 
  1255  028E                     	;# 
  1256  0291                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0293                     	;# 
  1260  0294                     	;# 
  1261  0295                     	;# 
  1262  0295                     	;# 
  1263  0296                     	;# 
  1264  0297                     	;# 
  1265  0298                     	;# 
  1266  029F                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  0311                     	;# 
  1271  0311                     	;# 
  1272  0312                     	;# 
  1273  0313                     	;# 
  1274  0314                     	;# 
  1275  0315                     	;# 
  1276  0315                     	;# 
  1277  0316                     	;# 
  1278  0317                     	;# 
  1279  0318                     	;# 
  1280  038C                     	;# 
  1281  038D                     	;# 
  1282  038E                     	;# 
  1283  0391                     	;# 
  1284  0392                     	;# 
  1285  0393                     	;# 
  1286  0394                     	;# 
  1287  0395                     	;# 
  1288  0396                     	;# 
  1289  0397                     	;# 
  1290  0398                     	;# 
  1291  0399                     	;# 
  1292  039A                     	;# 
  1293  039C                     	;# 
  1294  039D                     	;# 
  1295  039E                     	;# 
  1296  039F                     	;# 
  1297  0411                     	;# 
  1298  0411                     	;# 
  1299  0412                     	;# 
  1300  0413                     	;# 
  1301  0414                     	;# 
  1302  0415                     	;# 
  1303  0416                     	;# 
  1304  0417                     	;# 
  1305  0418                     	;# 
  1306  0418                     	;# 
  1307  0419                     	;# 
  1308  041A                     	;# 
  1309  041B                     	;# 
  1310  041C                     	;# 
  1311  041D                     	;# 
  1312  041E                     	;# 
  1313  041F                     	;# 
  1314  0498                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  049E                     	;# 
  1323  049F                     	;# 
  1324  0617                     	;# 
  1325  0618                     	;# 
  1326  0619                     	;# 
  1327  0619                     	;# 
  1328  061A                     	;# 
  1329  061B                     	;# 
  1330  061C                     	;# 
  1331  061C                     	;# 
  1332  061F                     	;# 
  1333  0691                     	;# 
  1334  0692                     	;# 
  1335  0693                     	;# 
  1336  0694                     	;# 
  1337  0695                     	;# 
  1338  0696                     	;# 
  1339  0697                     	;# 
  1340  0698                     	;# 
  1341  0699                     	;# 
  1342  0711                     	;# 
  1343  0712                     	;# 
  1344  0713                     	;# 
  1345  0714                     	;# 
  1346  0715                     	;# 
  1347  0716                     	;# 
  1348  0717                     	;# 
  1349  0718                     	;# 
  1350  0719                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0892                     	;# 
  1358  0892                     	;# 
  1359  0892                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0894                     	;# 
  1367  0894                     	;# 
  1368  0894                     	;# 
  1369  0895                     	;# 
  1370  0895                     	;# 
  1371  0895                     	;# 
  1372  0896                     	;# 
  1373  0896                     	;# 
  1374  0896                     	;# 
  1375  089B                     	;# 
  1376  0911                     	;# 
  1377  0912                     	;# 
  1378  0913                     	;# 
  1379  0914                     	;# 
  1380  0915                     	;# 
  1381  0916                     	;# 
  1382  0918                     	;# 
  1383  0919                     	;# 
  1384  091A                     	;# 
  1385  091B                     	;# 
  1386  091C                     	;# 
  1387  091D                     	;# 
  1388  091E                     	;# 
  1389  091F                     	;# 
  1390  0E0F                     	;# 
  1391  0E10                     	;# 
  1392  0E11                     	;# 
  1393  0E12                     	;# 
  1394  0E13                     	;# 
  1395  0E14                     	;# 
  1396  0E15                     	;# 
  1397  0E16                     	;# 
  1398  0E17                     	;# 
  1399  0E18                     	;# 
  1400  0E19                     	;# 
  1401  0E1A                     	;# 
  1402  0E1B                     	;# 
  1403  0E1C                     	;# 
  1404  0E1D                     	;# 
  1405  0E1E                     	;# 
  1406  0E1F                     	;# 
  1407  0E20                     	;# 
  1408  0E21                     	;# 
  1409  0E22                     	;# 
  1410  0E24                     	;# 
  1411  0E25                     	;# 
  1412  0E28                     	;# 
  1413  0E29                     	;# 
  1414  0E2A                     	;# 
  1415  0E2B                     	;# 
  1416  0E2C                     	;# 
  1417  0E2D                     	;# 
  1418  0E2E                     	;# 
  1419  0E2F                     	;# 
  1420  0E90                     	;# 
  1421  0E91                     	;# 
  1422  0E92                     	;# 
  1423  0E94                     	;# 
  1424  0E95                     	;# 
  1425  0E9C                     	;# 
  1426  0E9D                     	;# 
  1427  0E9E                     	;# 
  1428  0E9F                     	;# 
  1429  0EA0                     	;# 
  1430  0EA1                     	;# 
  1431  0EA2                     	;# 
  1432  0EA3                     	;# 
  1433  0EA4                     	;# 
  1434  0EA5                     	;# 
  1435  0EA6                     	;# 
  1436  0EA7                     	;# 
  1437  0F0F                     	;# 
  1438  0F10                     	;# 
  1439  0F11                     	;# 
  1440  0F12                     	;# 
  1441  0F13                     	;# 
  1442  0F14                     	;# 
  1443  0F15                     	;# 
  1444  0F16                     	;# 
  1445  0F17                     	;# 
  1446  0F18                     	;# 
  1447  0F19                     	;# 
  1448  0F1A                     	;# 
  1449  0F1B                     	;# 
  1450  0F1C                     	;# 
  1451  0F1D                     	;# 
  1452  0F1E                     	;# 
  1453  0F1F                     	;# 
  1454  0F20                     	;# 
  1455  0F21                     	;# 
  1456  0F22                     	;# 
  1457  0F23                     	;# 
  1458  0F24                     	;# 
  1459  0F25                     	;# 
  1460  0F26                     	;# 
  1461  0F27                     	;# 
  1462  0F28                     	;# 
  1463  0F29                     	;# 
  1464  0F2A                     	;# 
  1465  0F2B                     	;# 
  1466  0F2C                     	;# 
  1467  0F2D                     	;# 
  1468  0F2E                     	;# 
  1469  0F2F                     	;# 
  1470  0F30                     	;# 
  1471  0F31                     	;# 
  1472  0F32                     	;# 
  1473  0F33                     	;# 
  1474  0F34                     	;# 
  1475  0F35                     	;# 
  1476  0F36                     	;# 
  1477  0F37                     	;# 
  1478  0FE4                     	;# 
  1479  0FE5                     	;# 
  1480  0FE6                     	;# 
  1481  0FE7                     	;# 
  1482  0FE8                     	;# 
  1483  0FE9                     	;# 
  1484  0FEA                     	;# 
  1485  0FEB                     	;# 
  1486  0FED                     	;# 
  1487  0FEE                     	;# 
  1488  0FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  0010                     	;# 
  1505  0011                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0015                     	;# 
  1510  0015                     	;# 
  1511  0016                     	;# 
  1512  0016                     	;# 
  1513  0017                     	;# 
  1514  0018                     	;# 
  1515  0019                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  001B                     	;# 
  1519  001C                     	;# 
  1520  001D                     	;# 
  1521  001E                     	;# 
  1522  001F                     	;# 
  1523  008C                     	;# 
  1524  008D                     	;# 
  1525  008E                     	;# 
  1526  0090                     	;# 
  1527  0091                     	;# 
  1528  0092                     	;# 
  1529  0093                     	;# 
  1530  0094                     	;# 
  1531  0097                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010D                     	;# 
  1540  010E                     	;# 
  1541  0111                     	;# 
  1542  0112                     	;# 
  1543  0113                     	;# 
  1544  0114                     	;# 
  1545  0115                     	;# 
  1546  0116                     	;# 
  1547  0117                     	;# 
  1548  0118                     	;# 
  1549  0119                     	;# 
  1550  018C                     	;# 
  1551  018D                     	;# 
  1552  018E                     	;# 
  1553  0197                     	;# 
  1554  0199                     	;# 
  1555  0199                     	;# 
  1556  0199                     	;# 
  1557  019A                     	;# 
  1558  019A                     	;# 
  1559  019A                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019C                     	;# 
  1568  019D                     	;# 
  1569  019D                     	;# 
  1570  019D                     	;# 
  1571  019E                     	;# 
  1572  019E                     	;# 
  1573  019E                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  019F                     	;# 
  1579  020C                     	;# 
  1580  020D                     	;# 
  1581  020E                     	;# 
  1582  0211                     	;# 
  1583  0211                     	;# 
  1584  0212                     	;# 
  1585  0212                     	;# 
  1586  0213                     	;# 
  1587  0213                     	;# 
  1588  0214                     	;# 
  1589  0214                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0215                     	;# 
  1594  0216                     	;# 
  1595  0216                     	;# 
  1596  0217                     	;# 
  1597  0217                     	;# 
  1598  0219                     	;# 
  1599  021A                     	;# 
  1600  021B                     	;# 
  1601  021C                     	;# 
  1602  021D                     	;# 
  1603  021D                     	;# 
  1604  021E                     	;# 
  1605  021F                     	;# 
  1606  028C                     	;# 
  1607  028D                     	;# 
  1608  028E                     	;# 
  1609  0291                     	;# 
  1610  0291                     	;# 
  1611  0292                     	;# 
  1612  0293                     	;# 
  1613  0294                     	;# 
  1614  0295                     	;# 
  1615  0295                     	;# 
  1616  0296                     	;# 
  1617  0297                     	;# 
  1618  0298                     	;# 
  1619  029F                     	;# 
  1620  030C                     	;# 
  1621  030D                     	;# 
  1622  030E                     	;# 
  1623  0311                     	;# 
  1624  0311                     	;# 
  1625  0312                     	;# 
  1626  0313                     	;# 
  1627  0314                     	;# 
  1628  0315                     	;# 
  1629  0315                     	;# 
  1630  0316                     	;# 
  1631  0317                     	;# 
  1632  0318                     	;# 
  1633  038C                     	;# 
  1634  038D                     	;# 
  1635  038E                     	;# 
  1636  0391                     	;# 
  1637  0392                     	;# 
  1638  0393                     	;# 
  1639  0394                     	;# 
  1640  0395                     	;# 
  1641  0396                     	;# 
  1642  0397                     	;# 
  1643  0398                     	;# 
  1644  0399                     	;# 
  1645  039A                     	;# 
  1646  039C                     	;# 
  1647  039D                     	;# 
  1648  039E                     	;# 
  1649  039F                     	;# 
  1650  0411                     	;# 
  1651  0411                     	;# 
  1652  0412                     	;# 
  1653  0413                     	;# 
  1654  0414                     	;# 
  1655  0415                     	;# 
  1656  0416                     	;# 
  1657  0417                     	;# 
  1658  0418                     	;# 
  1659  0418                     	;# 
  1660  0419                     	;# 
  1661  041A                     	;# 
  1662  041B                     	;# 
  1663  041C                     	;# 
  1664  041D                     	;# 
  1665  041E                     	;# 
  1666  041F                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0617                     	;# 
  1678  0618                     	;# 
  1679  0619                     	;# 
  1680  0619                     	;# 
  1681  061A                     	;# 
  1682  061B                     	;# 
  1683  061C                     	;# 
  1684  061C                     	;# 
  1685  061F                     	;# 
  1686  0691                     	;# 
  1687  0692                     	;# 
  1688  0693                     	;# 
  1689  0694                     	;# 
  1690  0695                     	;# 
  1691  0696                     	;# 
  1692  0697                     	;# 
  1693  0698                     	;# 
  1694  0699                     	;# 
  1695  0711                     	;# 
  1696  0712                     	;# 
  1697  0713                     	;# 
  1698  0714                     	;# 
  1699  0715                     	;# 
  1700  0716                     	;# 
  1701  0717                     	;# 
  1702  0718                     	;# 
  1703  0719                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0892                     	;# 
  1711  0892                     	;# 
  1712  0892                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0894                     	;# 
  1720  0894                     	;# 
  1721  0894                     	;# 
  1722  0895                     	;# 
  1723  0895                     	;# 
  1724  0895                     	;# 
  1725  0896                     	;# 
  1726  0896                     	;# 
  1727  0896                     	;# 
  1728  089B                     	;# 
  1729  0911                     	;# 
  1730  0912                     	;# 
  1731  0913                     	;# 
  1732  0914                     	;# 
  1733  0915                     	;# 
  1734  0916                     	;# 
  1735  0918                     	;# 
  1736  0919                     	;# 
  1737  091A                     	;# 
  1738  091B                     	;# 
  1739  091C                     	;# 
  1740  091D                     	;# 
  1741  091E                     	;# 
  1742  091F                     	;# 
  1743  0E0F                     	;# 
  1744  0E10                     	;# 
  1745  0E11                     	;# 
  1746  0E12                     	;# 
  1747  0E13                     	;# 
  1748  0E14                     	;# 
  1749  0E15                     	;# 
  1750  0E16                     	;# 
  1751  0E17                     	;# 
  1752  0E18                     	;# 
  1753  0E19                     	;# 
  1754  0E1A                     	;# 
  1755  0E1B                     	;# 
  1756  0E1C                     	;# 
  1757  0E1D                     	;# 
  1758  0E1E                     	;# 
  1759  0E1F                     	;# 
  1760  0E20                     	;# 
  1761  0E21                     	;# 
  1762  0E22                     	;# 
  1763  0E24                     	;# 
  1764  0E25                     	;# 
  1765  0E28                     	;# 
  1766  0E29                     	;# 
  1767  0E2A                     	;# 
  1768  0E2B                     	;# 
  1769  0E2C                     	;# 
  1770  0E2D                     	;# 
  1771  0E2E                     	;# 
  1772  0E2F                     	;# 
  1773  0E90                     	;# 
  1774  0E91                     	;# 
  1775  0E92                     	;# 
  1776  0E94                     	;# 
  1777  0E95                     	;# 
  1778  0E9C                     	;# 
  1779  0E9D                     	;# 
  1780  0E9E                     	;# 
  1781  0E9F                     	;# 
  1782  0EA0                     	;# 
  1783  0EA1                     	;# 
  1784  0EA2                     	;# 
  1785  0EA3                     	;# 
  1786  0EA4                     	;# 
  1787  0EA5                     	;# 
  1788  0EA6                     	;# 
  1789  0EA7                     	;# 
  1790  0F0F                     	;# 
  1791  0F10                     	;# 
  1792  0F11                     	;# 
  1793  0F12                     	;# 
  1794  0F13                     	;# 
  1795  0F14                     	;# 
  1796  0F15                     	;# 
  1797  0F16                     	;# 
  1798  0F17                     	;# 
  1799  0F18                     	;# 
  1800  0F19                     	;# 
  1801  0F1A                     	;# 
  1802  0F1B                     	;# 
  1803  0F1C                     	;# 
  1804  0F1D                     	;# 
  1805  0F1E                     	;# 
  1806  0F1F                     	;# 
  1807  0F20                     	;# 
  1808  0F21                     	;# 
  1809  0F22                     	;# 
  1810  0F23                     	;# 
  1811  0F24                     	;# 
  1812  0F25                     	;# 
  1813  0F26                     	;# 
  1814  0F27                     	;# 
  1815  0F28                     	;# 
  1816  0F29                     	;# 
  1817  0F2A                     	;# 
  1818  0F2B                     	;# 
  1819  0F2C                     	;# 
  1820  0F2D                     	;# 
  1821  0F2E                     	;# 
  1822  0F2F                     	;# 
  1823  0F30                     	;# 
  1824  0F31                     	;# 
  1825  0F32                     	;# 
  1826  0F33                     	;# 
  1827  0F34                     	;# 
  1828  0F35                     	;# 
  1829  0F36                     	;# 
  1830  0F37                     	;# 
  1831  0FE4                     	;# 
  1832  0FE5                     	;# 
  1833  0FE6                     	;# 
  1834  0FE7                     	;# 
  1835  0FE8                     	;# 
  1836  0FE9                     	;# 
  1837  0FEA                     	;# 
  1838  0FEB                     	;# 
  1839  0FED                     	;# 
  1840  0FEE                     	;# 
  1841  0FEF                     	;# 
  1842  0000                     	;# 
  1843  0001                     	;# 
  1844  0002                     	;# 
  1845  0003                     	;# 
  1846  0004                     	;# 
  1847  0005                     	;# 
  1848  0006                     	;# 
  1849  0007                     	;# 
  1850  0008                     	;# 
  1851  0009                     	;# 
  1852  000A                     	;# 
  1853  000B                     	;# 
  1854  000C                     	;# 
  1855  000D                     	;# 
  1856  000E                     	;# 
  1857  0010                     	;# 
  1858  0011                     	;# 
  1859  0012                     	;# 
  1860  0013                     	;# 
  1861  0014                     	;# 
  1862  0015                     	;# 
  1863  0015                     	;# 
  1864  0016                     	;# 
  1865  0016                     	;# 
  1866  0017                     	;# 
  1867  0018                     	;# 
  1868  0019                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001B                     	;# 
  1872  001C                     	;# 
  1873  001D                     	;# 
  1874  001E                     	;# 
  1875  001F                     	;# 
  1876  008C                     	;# 
  1877  008D                     	;# 
  1878  008E                     	;# 
  1879  0090                     	;# 
  1880  0091                     	;# 
  1881  0092                     	;# 
  1882  0093                     	;# 
  1883  0094                     	;# 
  1884  0097                     	;# 
  1885  009B                     	;# 
  1886  009B                     	;# 
  1887  009C                     	;# 
  1888  009D                     	;# 
  1889  009E                     	;# 
  1890  009F                     	;# 
  1891  010C                     	;# 
  1892  010D                     	;# 
  1893  010E                     	;# 
  1894  0111                     	;# 
  1895  0112                     	;# 
  1896  0113                     	;# 
  1897  0114                     	;# 
  1898  0115                     	;# 
  1899  0116                     	;# 
  1900  0117                     	;# 
  1901  0118                     	;# 
  1902  0119                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  0197                     	;# 
  1907  0199                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019D                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019E                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  020C                     	;# 
  1933  020D                     	;# 
  1934  020E                     	;# 
  1935  0211                     	;# 
  1936  0211                     	;# 
  1937  0212                     	;# 
  1938  0212                     	;# 
  1939  0213                     	;# 
  1940  0213                     	;# 
  1941  0214                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0216                     	;# 
  1948  0216                     	;# 
  1949  0217                     	;# 
  1950  0217                     	;# 
  1951  0219                     	;# 
  1952  021A                     	;# 
  1953  021B                     	;# 
  1954  021C                     	;# 
  1955  021D                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  028C                     	;# 
  1960  028D                     	;# 
  1961  028E                     	;# 
  1962  0291                     	;# 
  1963  0291                     	;# 
  1964  0292                     	;# 
  1965  0293                     	;# 
  1966  0294                     	;# 
  1967  0295                     	;# 
  1968  0295                     	;# 
  1969  0296                     	;# 
  1970  0297                     	;# 
  1971  0298                     	;# 
  1972  029F                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  0311                     	;# 
  1977  0311                     	;# 
  1978  0312                     	;# 
  1979  0313                     	;# 
  1980  0314                     	;# 
  1981  0315                     	;# 
  1982  0315                     	;# 
  1983  0316                     	;# 
  1984  0317                     	;# 
  1985  0318                     	;# 
  1986  038C                     	;# 
  1987  038D                     	;# 
  1988  038E                     	;# 
  1989  0391                     	;# 
  1990  0392                     	;# 
  1991  0393                     	;# 
  1992  0394                     	;# 
  1993  0395                     	;# 
  1994  0396                     	;# 
  1995  0397                     	;# 
  1996  0398                     	;# 
  1997  0399                     	;# 
  1998  039A                     	;# 
  1999  039C                     	;# 
  2000  039D                     	;# 
  2001  039E                     	;# 
  2002  039F                     	;# 
  2003  0411                     	;# 
  2004  0411                     	;# 
  2005  0412                     	;# 
  2006  0413                     	;# 
  2007  0414                     	;# 
  2008  0415                     	;# 
  2009  0416                     	;# 
  2010  0417                     	;# 
  2011  0418                     	;# 
  2012  0418                     	;# 
  2013  0419                     	;# 
  2014  041A                     	;# 
  2015  041B                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  0498                     	;# 
  2021  0498                     	;# 
  2022  0499                     	;# 
  2023  049A                     	;# 
  2024  049B                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  049E                     	;# 
  2029  049F                     	;# 
  2030  0617                     	;# 
  2031  0618                     	;# 
  2032  0619                     	;# 
  2033  0619                     	;# 
  2034  061A                     	;# 
  2035  061B                     	;# 
  2036  061C                     	;# 
  2037  061C                     	;# 
  2038  061F                     	;# 
  2039  0691                     	;# 
  2040  0692                     	;# 
  2041  0693                     	;# 
  2042  0694                     	;# 
  2043  0695                     	;# 
  2044  0696                     	;# 
  2045  0697                     	;# 
  2046  0698                     	;# 
  2047  0699                     	;# 
  2048  0711                     	;# 
  2049  0712                     	;# 
  2050  0713                     	;# 
  2051  0714                     	;# 
  2052  0715                     	;# 
  2053  0716                     	;# 
  2054  0717                     	;# 
  2055  0718                     	;# 
  2056  0719                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0892                     	;# 
  2064  0892                     	;# 
  2065  0892                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0894                     	;# 
  2073  0894                     	;# 
  2074  0894                     	;# 
  2075  0895                     	;# 
  2076  0895                     	;# 
  2077  0895                     	;# 
  2078  0896                     	;# 
  2079  0896                     	;# 
  2080  0896                     	;# 
  2081  089B                     	;# 
  2082  0911                     	;# 
  2083  0912                     	;# 
  2084  0913                     	;# 
  2085  0914                     	;# 
  2086  0915                     	;# 
  2087  0916                     	;# 
  2088  0918                     	;# 
  2089  0919                     	;# 
  2090  091A                     	;# 
  2091  091B                     	;# 
  2092  091C                     	;# 
  2093  091D                     	;# 
  2094  091E                     	;# 
  2095  091F                     	;# 
  2096  0E0F                     	;# 
  2097  0E10                     	;# 
  2098  0E11                     	;# 
  2099  0E12                     	;# 
  2100  0E13                     	;# 
  2101  0E14                     	;# 
  2102  0E15                     	;# 
  2103  0E16                     	;# 
  2104  0E17                     	;# 
  2105  0E18                     	;# 
  2106  0E19                     	;# 
  2107  0E1A                     	;# 
  2108  0E1B                     	;# 
  2109  0E1C                     	;# 
  2110  0E1D                     	;# 
  2111  0E1E                     	;# 
  2112  0E1F                     	;# 
  2113  0E20                     	;# 
  2114  0E21                     	;# 
  2115  0E22                     	;# 
  2116  0E24                     	;# 
  2117  0E25                     	;# 
  2118  0E28                     	;# 
  2119  0E29                     	;# 
  2120  0E2A                     	;# 
  2121  0E2B                     	;# 
  2122  0E2C                     	;# 
  2123  0E2D                     	;# 
  2124  0E2E                     	;# 
  2125  0E2F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E9C                     	;# 
  2132  0E9D                     	;# 
  2133  0E9E                     	;# 
  2134  0E9F                     	;# 
  2135  0EA0                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA6                     	;# 
  2142  0EA7                     	;# 
  2143  0F0F                     	;# 
  2144  0F10                     	;# 
  2145  0F11                     	;# 
  2146  0F12                     	;# 
  2147  0F13                     	;# 
  2148  0F14                     	;# 
  2149  0F15                     	;# 
  2150  0F16                     	;# 
  2151  0F17                     	;# 
  2152  0F18                     	;# 
  2153  0F19                     	;# 
  2154  0F1A                     	;# 
  2155  0F1B                     	;# 
  2156  0F1C                     	;# 
  2157  0F1D                     	;# 
  2158  0F1E                     	;# 
  2159  0F1F                     	;# 
  2160  0F20                     	;# 
  2161  0F21                     	;# 
  2162  0F22                     	;# 
  2163  0F23                     	;# 
  2164  0F24                     	;# 
  2165  0F25                     	;# 
  2166  0F26                     	;# 
  2167  0F27                     	;# 
  2168  0F28                     	;# 
  2169  0F29                     	;# 
  2170  0F2A                     	;# 
  2171  0F2B                     	;# 
  2172  0F2C                     	;# 
  2173  0F2D                     	;# 
  2174  0F2E                     	;# 
  2175  0F2F                     	;# 
  2176  0F30                     	;# 
  2177  0F31                     	;# 
  2178  0F32                     	;# 
  2179  0F33                     	;# 
  2180  0F34                     	;# 
  2181  0F35                     	;# 
  2182  0F36                     	;# 
  2183  0F37                     	;# 
  2184  0FE4                     	;# 
  2185  0FE5                     	;# 
  2186  0FE6                     	;# 
  2187  0FE7                     	;# 
  2188  0FE8                     	;# 
  2189  0FE9                     	;# 
  2190  0FEA                     	;# 
  2191  0FEB                     	;# 
  2192  0FED                     	;# 
  2193  0FEE                     	;# 
  2194  0FEF                     	;# 
  2195  0000                     	;# 
  2196  0001                     	;# 
  2197  0002                     	;# 
  2198  0003                     	;# 
  2199  0004                     	;# 
  2200  0005                     	;# 
  2201  0006                     	;# 
  2202  0007                     	;# 
  2203  0008                     	;# 
  2204  0009                     	;# 
  2205  000A                     	;# 
  2206  000B                     	;# 
  2207  000C                     	;# 
  2208  000D                     	;# 
  2209  000E                     	;# 
  2210  0010                     	;# 
  2211  0011                     	;# 
  2212  0012                     	;# 
  2213  0013                     	;# 
  2214  0014                     	;# 
  2215  0015                     	;# 
  2216  0015                     	;# 
  2217  0016                     	;# 
  2218  0016                     	;# 
  2219  0017                     	;# 
  2220  0018                     	;# 
  2221  0019                     	;# 
  2222  0019                     	;# 
  2223  001A                     	;# 
  2224  001B                     	;# 
  2225  001C                     	;# 
  2226  001D                     	;# 
  2227  001E                     	;# 
  2228  001F                     	;# 
  2229  008C                     	;# 
  2230  008D                     	;# 
  2231  008E                     	;# 
  2232  0090                     	;# 
  2233  0091                     	;# 
  2234  0092                     	;# 
  2235  0093                     	;# 
  2236  0094                     	;# 
  2237  0097                     	;# 
  2238  009B                     	;# 
  2239  009B                     	;# 
  2240  009C                     	;# 
  2241  009D                     	;# 
  2242  009E                     	;# 
  2243  009F                     	;# 
  2244  010C                     	;# 
  2245  010D                     	;# 
  2246  010E                     	;# 
  2247  0111                     	;# 
  2248  0112                     	;# 
  2249  0113                     	;# 
  2250  0114                     	;# 
  2251  0115                     	;# 
  2252  0116                     	;# 
  2253  0117                     	;# 
  2254  0118                     	;# 
  2255  0119                     	;# 
  2256  018C                     	;# 
  2257  018D                     	;# 
  2258  018E                     	;# 
  2259  0197                     	;# 
  2260  0199                     	;# 
  2261  0199                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019A                     	;# 
  2265  019A                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  019C                     	;# 
  2273  019C                     	;# 
  2274  019D                     	;# 
  2275  019D                     	;# 
  2276  019D                     	;# 
  2277  019E                     	;# 
  2278  019E                     	;# 
  2279  019E                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  020C                     	;# 
  2286  020D                     	;# 
  2287  020E                     	;# 
  2288  0211                     	;# 
  2289  0211                     	;# 
  2290  0212                     	;# 
  2291  0212                     	;# 
  2292  0213                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0215                     	;# 
  2300  0216                     	;# 
  2301  0216                     	;# 
  2302  0217                     	;# 
  2303  0217                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021D                     	;# 
  2309  021D                     	;# 
  2310  021E                     	;# 
  2311  021F                     	;# 
  2312  028C                     	;# 
  2313  028D                     	;# 
  2314  028E                     	;# 
  2315  0291                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0293                     	;# 
  2319  0294                     	;# 
  2320  0295                     	;# 
  2321  0295                     	;# 
  2322  0296                     	;# 
  2323  0297                     	;# 
  2324  0298                     	;# 
  2325  029F                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  0311                     	;# 
  2330  0311                     	;# 
  2331  0312                     	;# 
  2332  0313                     	;# 
  2333  0314                     	;# 
  2334  0315                     	;# 
  2335  0315                     	;# 
  2336  0316                     	;# 
  2337  0317                     	;# 
  2338  0318                     	;# 
  2339  038C                     	;# 
  2340  038D                     	;# 
  2341  038E                     	;# 
  2342  0391                     	;# 
  2343  0392                     	;# 
  2344  0393                     	;# 
  2345  0394                     	;# 
  2346  0395                     	;# 
  2347  0396                     	;# 
  2348  0397                     	;# 
  2349  0398                     	;# 
  2350  0399                     	;# 
  2351  039A                     	;# 
  2352  039C                     	;# 
  2353  039D                     	;# 
  2354  039E                     	;# 
  2355  039F                     	;# 
  2356  0411                     	;# 
  2357  0411                     	;# 
  2358  0412                     	;# 
  2359  0413                     	;# 
  2360  0414                     	;# 
  2361  0415                     	;# 
  2362  0416                     	;# 
  2363  0417                     	;# 
  2364  0418                     	;# 
  2365  0418                     	;# 
  2366  0419                     	;# 
  2367  041A                     	;# 
  2368  041B                     	;# 
  2369  041C                     	;# 
  2370  041D                     	;# 
  2371  041E                     	;# 
  2372  041F                     	;# 
  2373  0498                     	;# 
  2374  0498                     	;# 
  2375  0499                     	;# 
  2376  049A                     	;# 
  2377  049B                     	;# 
  2378  049B                     	;# 
  2379  049C                     	;# 
  2380  049D                     	;# 
  2381  049E                     	;# 
  2382  049F                     	;# 
  2383  0617                     	;# 
  2384  0618                     	;# 
  2385  0619                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061C                     	;# 
  2391  061F                     	;# 
  2392  0691                     	;# 
  2393  0692                     	;# 
  2394  0693                     	;# 
  2395  0694                     	;# 
  2396  0695                     	;# 
  2397  0696                     	;# 
  2398  0697                     	;# 
  2399  0698                     	;# 
  2400  0699                     	;# 
  2401  0711                     	;# 
  2402  0712                     	;# 
  2403  0713                     	;# 
  2404  0714                     	;# 
  2405  0715                     	;# 
  2406  0716                     	;# 
  2407  0717                     	;# 
  2408  0718                     	;# 
  2409  0719                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0891                     	;# 
  2416  0892                     	;# 
  2417  0892                     	;# 
  2418  0892                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0893                     	;# 
  2425  0894                     	;# 
  2426  0894                     	;# 
  2427  0894                     	;# 
  2428  0895                     	;# 
  2429  0895                     	;# 
  2430  0895                     	;# 
  2431  0896                     	;# 
  2432  0896                     	;# 
  2433  0896                     	;# 
  2434  089B                     	;# 
  2435  0911                     	;# 
  2436  0912                     	;# 
  2437  0913                     	;# 
  2438  0914                     	;# 
  2439  0915                     	;# 
  2440  0916                     	;# 
  2441  0918                     	;# 
  2442  0919                     	;# 
  2443  091A                     	;# 
  2444  091B                     	;# 
  2445  091C                     	;# 
  2446  091D                     	;# 
  2447  091E                     	;# 
  2448  091F                     	;# 
  2449  0E0F                     	;# 
  2450  0E10                     	;# 
  2451  0E11                     	;# 
  2452  0E12                     	;# 
  2453  0E13                     	;# 
  2454  0E14                     	;# 
  2455  0E15                     	;# 
  2456  0E16                     	;# 
  2457  0E17                     	;# 
  2458  0E18                     	;# 
  2459  0E19                     	;# 
  2460  0E1A                     	;# 
  2461  0E1B                     	;# 
  2462  0E1C                     	;# 
  2463  0E1D                     	;# 
  2464  0E1E                     	;# 
  2465  0E1F                     	;# 
  2466  0E20                     	;# 
  2467  0E21                     	;# 
  2468  0E22                     	;# 
  2469  0E24                     	;# 
  2470  0E25                     	;# 
  2471  0E28                     	;# 
  2472  0E29                     	;# 
  2473  0E2A                     	;# 
  2474  0E2B                     	;# 
  2475  0E2C                     	;# 
  2476  0E2D                     	;# 
  2477  0E2E                     	;# 
  2478  0E2F                     	;# 
  2479  0E90                     	;# 
  2480  0E91                     	;# 
  2481  0E92                     	;# 
  2482  0E94                     	;# 
  2483  0E95                     	;# 
  2484  0E9C                     	;# 
  2485  0E9D                     	;# 
  2486  0E9E                     	;# 
  2487  0E9F                     	;# 
  2488  0EA0                     	;# 
  2489  0EA1                     	;# 
  2490  0EA2                     	;# 
  2491  0EA3                     	;# 
  2492  0EA4                     	;# 
  2493  0EA5                     	;# 
  2494  0EA6                     	;# 
  2495  0EA7                     	;# 
  2496  0F0F                     	;# 
  2497  0F10                     	;# 
  2498  0F11                     	;# 
  2499  0F12                     	;# 
  2500  0F13                     	;# 
  2501  0F14                     	;# 
  2502  0F15                     	;# 
  2503  0F16                     	;# 
  2504  0F17                     	;# 
  2505  0F18                     	;# 
  2506  0F19                     	;# 
  2507  0F1A                     	;# 
  2508  0F1B                     	;# 
  2509  0F1C                     	;# 
  2510  0F1D                     	;# 
  2511  0F1E                     	;# 
  2512  0F1F                     	;# 
  2513  0F20                     	;# 
  2514  0F21                     	;# 
  2515  0F22                     	;# 
  2516  0F23                     	;# 
  2517  0F24                     	;# 
  2518  0F25                     	;# 
  2519  0F26                     	;# 
  2520  0F27                     	;# 
  2521  0F28                     	;# 
  2522  0F29                     	;# 
  2523  0F2A                     	;# 
  2524  0F2B                     	;# 
  2525  0F2C                     	;# 
  2526  0F2D                     	;# 
  2527  0F2E                     	;# 
  2528  0F2F                     	;# 
  2529  0F30                     	;# 
  2530  0F31                     	;# 
  2531  0F32                     	;# 
  2532  0F33                     	;# 
  2533  0F34                     	;# 
  2534  0F35                     	;# 
  2535  0F36                     	;# 
  2536  0F37                     	;# 
  2537  0FE4                     	;# 
  2538  0FE5                     	;# 
  2539  0FE6                     	;# 
  2540  0FE7                     	;# 
  2541  0FE8                     	;# 
  2542  0FE9                     	;# 
  2543  0FEA                     	;# 
  2544  0FEB                     	;# 
  2545  0FED                     	;# 
  2546  0FEE                     	;# 
  2547  0FEF                     	;# 
  2548  0000                     	;# 
  2549  0001                     	;# 
  2550  0002                     	;# 
  2551  0003                     	;# 
  2552  0004                     	;# 
  2553  0005                     	;# 
  2554  0006                     	;# 
  2555  0007                     	;# 
  2556  0008                     	;# 
  2557  0009                     	;# 
  2558  000A                     	;# 
  2559  000B                     	;# 
  2560  000C                     	;# 
  2561  000D                     	;# 
  2562  000E                     	;# 
  2563  0010                     	;# 
  2564  0011                     	;# 
  2565  0012                     	;# 
  2566  0013                     	;# 
  2567  0014                     	;# 
  2568  0015                     	;# 
  2569  0015                     	;# 
  2570  0016                     	;# 
  2571  0016                     	;# 
  2572  0017                     	;# 
  2573  0018                     	;# 
  2574  0019                     	;# 
  2575  0019                     	;# 
  2576  001A                     	;# 
  2577  001B                     	;# 
  2578  001C                     	;# 
  2579  001D                     	;# 
  2580  001E                     	;# 
  2581  001F                     	;# 
  2582  008C                     	;# 
  2583  008D                     	;# 
  2584  008E                     	;# 
  2585  0090                     	;# 
  2586  0091                     	;# 
  2587  0092                     	;# 
  2588  0093                     	;# 
  2589  0094                     	;# 
  2590  0097                     	;# 
  2591  009B                     	;# 
  2592  009B                     	;# 
  2593  009C                     	;# 
  2594  009D                     	;# 
  2595  009E                     	;# 
  2596  009F                     	;# 
  2597  010C                     	;# 
  2598  010D                     	;# 
  2599  010E                     	;# 
  2600  0111                     	;# 
  2601  0112                     	;# 
  2602  0113                     	;# 
  2603  0114                     	;# 
  2604  0115                     	;# 
  2605  0116                     	;# 
  2606  0117                     	;# 
  2607  0118                     	;# 
  2608  0119                     	;# 
  2609  018C                     	;# 
  2610  018D                     	;# 
  2611  018E                     	;# 
  2612  0197                     	;# 
  2613  0199                     	;# 
  2614  0199                     	;# 
  2615  0199                     	;# 
  2616  019A                     	;# 
  2617  019A                     	;# 
  2618  019A                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019C                     	;# 
  2625  019C                     	;# 
  2626  019C                     	;# 
  2627  019D                     	;# 
  2628  019D                     	;# 
  2629  019D                     	;# 
  2630  019E                     	;# 
  2631  019E                     	;# 
  2632  019E                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  019F                     	;# 
  2637  019F                     	;# 
  2638  020C                     	;# 
  2639  020D                     	;# 
  2640  020E                     	;# 
  2641  0211                     	;# 
  2642  0211                     	;# 
  2643  0212                     	;# 
  2644  0212                     	;# 
  2645  0213                     	;# 
  2646  0213                     	;# 
  2647  0214                     	;# 
  2648  0214                     	;# 
  2649  0215                     	;# 
  2650  0215                     	;# 
  2651  0215                     	;# 
  2652  0215                     	;# 
  2653  0216                     	;# 
  2654  0216                     	;# 
  2655  0217                     	;# 
  2656  0217                     	;# 
  2657  0219                     	;# 
  2658  021A                     	;# 
  2659  021B                     	;# 
  2660  021C                     	;# 
  2661  021D                     	;# 
  2662  021D                     	;# 
  2663  021E                     	;# 
  2664  021F                     	;# 
  2665  028C                     	;# 
  2666  028D                     	;# 
  2667  028E                     	;# 
  2668  0291                     	;# 
  2669  0291                     	;# 
  2670  0292                     	;# 
  2671  0293                     	;# 
  2672  0294                     	;# 
  2673  0295                     	;# 
  2674  0295                     	;# 
  2675  0296                     	;# 
  2676  0297                     	;# 
  2677  0298                     	;# 
  2678  029F                     	;# 
  2679  030C                     	;# 
  2680  030D                     	;# 
  2681  030E                     	;# 
  2682  0311                     	;# 
  2683  0311                     	;# 
  2684  0312                     	;# 
  2685  0313                     	;# 
  2686  0314                     	;# 
  2687  0315                     	;# 
  2688  0315                     	;# 
  2689  0316                     	;# 
  2690  0317                     	;# 
  2691  0318                     	;# 
  2692  038C                     	;# 
  2693  038D                     	;# 
  2694  038E                     	;# 
  2695  0391                     	;# 
  2696  0392                     	;# 
  2697  0393                     	;# 
  2698  0394                     	;# 
  2699  0395                     	;# 
  2700  0396                     	;# 
  2701  0397                     	;# 
  2702  0398                     	;# 
  2703  0399                     	;# 
  2704  039A                     	;# 
  2705  039C                     	;# 
  2706  039D                     	;# 
  2707  039E                     	;# 
  2708  039F                     	;# 
  2709  0411                     	;# 
  2710  0411                     	;# 
  2711  0412                     	;# 
  2712  0413                     	;# 
  2713  0414                     	;# 
  2714  0415                     	;# 
  2715  0416                     	;# 
  2716  0417                     	;# 
  2717  0418                     	;# 
  2718  0418                     	;# 
  2719  0419                     	;# 
  2720  041A                     	;# 
  2721  041B                     	;# 
  2722  041C                     	;# 
  2723  041D                     	;# 
  2724  041E                     	;# 
  2725  041F                     	;# 
  2726  0498                     	;# 
  2727  0498                     	;# 
  2728  0499                     	;# 
  2729  049A                     	;# 
  2730  049B                     	;# 
  2731  049B                     	;# 
  2732  049C                     	;# 
  2733  049D                     	;# 
  2734  049E                     	;# 
  2735  049F                     	;# 
  2736  0617                     	;# 
  2737  0618                     	;# 
  2738  0619                     	;# 
  2739  0619                     	;# 
  2740  061A                     	;# 
  2741  061B                     	;# 
  2742  061C                     	;# 
  2743  061C                     	;# 
  2744  061F                     	;# 
  2745  0691                     	;# 
  2746  0692                     	;# 
  2747  0693                     	;# 
  2748  0694                     	;# 
  2749  0695                     	;# 
  2750  0696                     	;# 
  2751  0697                     	;# 
  2752  0698                     	;# 
  2753  0699                     	;# 
  2754  0711                     	;# 
  2755  0712                     	;# 
  2756  0713                     	;# 
  2757  0714                     	;# 
  2758  0715                     	;# 
  2759  0716                     	;# 
  2760  0717                     	;# 
  2761  0718                     	;# 
  2762  0719                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0892                     	;# 
  2770  0892                     	;# 
  2771  0892                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0894                     	;# 
  2779  0894                     	;# 
  2780  0894                     	;# 
  2781  0895                     	;# 
  2782  0895                     	;# 
  2783  0895                     	;# 
  2784  0896                     	;# 
  2785  0896                     	;# 
  2786  0896                     	;# 
  2787  089B                     	;# 
  2788  0911                     	;# 
  2789  0912                     	;# 
  2790  0913                     	;# 
  2791  0914                     	;# 
  2792  0915                     	;# 
  2793  0916                     	;# 
  2794  0918                     	;# 
  2795  0919                     	;# 
  2796  091A                     	;# 
  2797  091B                     	;# 
  2798  091C                     	;# 
  2799  091D                     	;# 
  2800  091E                     	;# 
  2801  091F                     	;# 
  2802  0E0F                     	;# 
  2803  0E10                     	;# 
  2804  0E11                     	;# 
  2805  0E12                     	;# 
  2806  0E13                     	;# 
  2807  0E14                     	;# 
  2808  0E15                     	;# 
  2809  0E16                     	;# 
  2810  0E17                     	;# 
  2811  0E18                     	;# 
  2812  0E19                     	;# 
  2813  0E1A                     	;# 
  2814  0E1B                     	;# 
  2815  0E1C                     	;# 
  2816  0E1D                     	;# 
  2817  0E1E                     	;# 
  2818  0E1F                     	;# 
  2819  0E20                     	;# 
  2820  0E21                     	;# 
  2821  0E22                     	;# 
  2822  0E24                     	;# 
  2823  0E25                     	;# 
  2824  0E28                     	;# 
  2825  0E29                     	;# 
  2826  0E2A                     	;# 
  2827  0E2B                     	;# 
  2828  0E2C                     	;# 
  2829  0E2D                     	;# 
  2830  0E2E                     	;# 
  2831  0E2F                     	;# 
  2832  0E90                     	;# 
  2833  0E91                     	;# 
  2834  0E92                     	;# 
  2835  0E94                     	;# 
  2836  0E95                     	;# 
  2837  0E9C                     	;# 
  2838  0E9D                     	;# 
  2839  0E9E                     	;# 
  2840  0E9F                     	;# 
  2841  0EA0                     	;# 
  2842  0EA1                     	;# 
  2843  0EA2                     	;# 
  2844  0EA3                     	;# 
  2845  0EA4                     	;# 
  2846  0EA5                     	;# 
  2847  0EA6                     	;# 
  2848  0EA7                     	;# 
  2849  0F0F                     	;# 
  2850  0F10                     	;# 
  2851  0F11                     	;# 
  2852  0F12                     	;# 
  2853  0F13                     	;# 
  2854  0F14                     	;# 
  2855  0F15                     	;# 
  2856  0F16                     	;# 
  2857  0F17                     	;# 
  2858  0F18                     	;# 
  2859  0F19                     	;# 
  2860  0F1A                     	;# 
  2861  0F1B                     	;# 
  2862  0F1C                     	;# 
  2863  0F1D                     	;# 
  2864  0F1E                     	;# 
  2865  0F1F                     	;# 
  2866  0F20                     	;# 
  2867  0F21                     	;# 
  2868  0F22                     	;# 
  2869  0F23                     	;# 
  2870  0F24                     	;# 
  2871  0F25                     	;# 
  2872  0F26                     	;# 
  2873  0F27                     	;# 
  2874  0F28                     	;# 
  2875  0F29                     	;# 
  2876  0F2A                     	;# 
  2877  0F2B                     	;# 
  2878  0F2C                     	;# 
  2879  0F2D                     	;# 
  2880  0F2E                     	;# 
  2881  0F2F                     	;# 
  2882  0F30                     	;# 
  2883  0F31                     	;# 
  2884  0F32                     	;# 
  2885  0F33                     	;# 
  2886  0F34                     	;# 
  2887  0F35                     	;# 
  2888  0F36                     	;# 
  2889  0F37                     	;# 
  2890  0FE4                     	;# 
  2891  0FE5                     	;# 
  2892  0FE6                     	;# 
  2893  0FE7                     	;# 
  2894  0FE8                     	;# 
  2895  0FE9                     	;# 
  2896  0FEA                     	;# 
  2897  0FEB                     	;# 
  2898  0FED                     	;# 
  2899  0FEE                     	;# 
  2900  0FEF                     	;# 
  2901                           
  2902                           	psect	idataBANK0
  2903  029F                     __pidataBANK0:	
  2904                           
  2905                           ;initializer for _txt
  2906  029F  34DB               	retlw	low (STR_1| (0+32768))
  2907  02A0  3489               	retlw	high (STR_1| (0+32768))
  2908                           
  2909                           ;initializer for _wrap
  2910  02A1  3401               	retlw	1
  2911  02A2  3400               	retlw	0
  2912                           
  2913                           ;initializer for _event
  2914  02A3  3401               	retlw	1
  2915                           
  2916                           	psect	stringtext1
  2917  0800                     __pstringtext1:	
  2918  0800                     _Font:	
  2919  0800  3400               	retlw	0
  2920  0801  3400               	retlw	0
  2921  0802  3400               	retlw	0
  2922  0803  3400               	retlw	0
  2923  0804  3400               	retlw	0
  2924  0805  3400               	retlw	0
  2925  0806  3400               	retlw	0
  2926  0807  345F               	retlw	95
  2927  0808  3400               	retlw	0
  2928  0809  3400               	retlw	0
  2929  080A  3400               	retlw	0
  2930  080B  3407               	retlw	7
  2931  080C  3400               	retlw	0
  2932  080D  3407               	retlw	7
  2933  080E  3400               	retlw	0
  2934  080F  3414               	retlw	20
  2935  0810  347F               	retlw	127
  2936  0811  3414               	retlw	20
  2937  0812  347F               	retlw	127
  2938  0813  3414               	retlw	20
  2939  0814  3424               	retlw	36
  2940  0815  342A               	retlw	42
  2941  0816  347F               	retlw	127
  2942  0817  342A               	retlw	42
  2943  0818  3412               	retlw	18
  2944  0819  3423               	retlw	35
  2945  081A  3413               	retlw	19
  2946  081B  3408               	retlw	8
  2947  081C  3464               	retlw	100
  2948  081D  3462               	retlw	98
  2949  081E  3436               	retlw	54
  2950  081F  3449               	retlw	73
  2951  0820  3456               	retlw	86
  2952  0821  3420               	retlw	32
  2953  0822  3450               	retlw	80
  2954  0823  3400               	retlw	0
  2955  0824  3408               	retlw	8
  2956  0825  3407               	retlw	7
  2957  0826  3403               	retlw	3
  2958  0827  3400               	retlw	0
  2959  0828  3400               	retlw	0
  2960  0829  341C               	retlw	28
  2961  082A  3422               	retlw	34
  2962  082B  3441               	retlw	65
  2963  082C  3400               	retlw	0
  2964  082D  3400               	retlw	0
  2965  082E  3441               	retlw	65
  2966  082F  3422               	retlw	34
  2967  0830  341C               	retlw	28
  2968  0831  3400               	retlw	0
  2969  0832  342A               	retlw	42
  2970  0833  341C               	retlw	28
  2971  0834  347F               	retlw	127
  2972  0835  341C               	retlw	28
  2973  0836  342A               	retlw	42
  2974  0837  3408               	retlw	8
  2975  0838  3408               	retlw	8
  2976  0839  343E               	retlw	62
  2977  083A  3408               	retlw	8
  2978  083B  3408               	retlw	8
  2979  083C  3400               	retlw	0
  2980  083D  3480               	retlw	128
  2981  083E  3470               	retlw	112
  2982  083F  3430               	retlw	48
  2983  0840  3400               	retlw	0
  2984  0841  3408               	retlw	8
  2985  0842  3408               	retlw	8
  2986  0843  3408               	retlw	8
  2987  0844  3408               	retlw	8
  2988  0845  3408               	retlw	8
  2989  0846  3400               	retlw	0
  2990  0847  3400               	retlw	0
  2991  0848  3460               	retlw	96
  2992  0849  3460               	retlw	96
  2993  084A  3400               	retlw	0
  2994  084B  3420               	retlw	32
  2995  084C  3410               	retlw	16
  2996  084D  3408               	retlw	8
  2997  084E  3404               	retlw	4
  2998  084F  3402               	retlw	2
  2999  0850  343E               	retlw	62
  3000  0851  3451               	retlw	81
  3001  0852  3449               	retlw	73
  3002  0853  3445               	retlw	69
  3003  0854  343E               	retlw	62
  3004  0855  3400               	retlw	0
  3005  0856  3442               	retlw	66
  3006  0857  347F               	retlw	127
  3007  0858  3440               	retlw	64
  3008  0859  3400               	retlw	0
  3009  085A  3472               	retlw	114
  3010  085B  3449               	retlw	73
  3011  085C  3449               	retlw	73
  3012  085D  3449               	retlw	73
  3013  085E  3446               	retlw	70
  3014  085F  3421               	retlw	33
  3015  0860  3441               	retlw	65
  3016  0861  3449               	retlw	73
  3017  0862  344D               	retlw	77
  3018  0863  3433               	retlw	51
  3019  0864  3418               	retlw	24
  3020  0865  3414               	retlw	20
  3021  0866  3412               	retlw	18
  3022  0867  347F               	retlw	127
  3023  0868  3410               	retlw	16
  3024  0869  3427               	retlw	39
  3025  086A  3445               	retlw	69
  3026  086B  3445               	retlw	69
  3027  086C  3445               	retlw	69
  3028  086D  3439               	retlw	57
  3029  086E  343C               	retlw	60
  3030  086F  344A               	retlw	74
  3031  0870  3449               	retlw	73
  3032  0871  3449               	retlw	73
  3033  0872  3431               	retlw	49
  3034  0873  3441               	retlw	65
  3035  0874  3421               	retlw	33
  3036  0875  3411               	retlw	17
  3037  0876  3409               	retlw	9
  3038  0877  3407               	retlw	7
  3039  0878  3436               	retlw	54
  3040  0879  3449               	retlw	73
  3041  087A  3449               	retlw	73
  3042  087B  3449               	retlw	73
  3043  087C  3436               	retlw	54
  3044  087D  3446               	retlw	70
  3045  087E  3449               	retlw	73
  3046  087F  3449               	retlw	73
  3047  0880  3429               	retlw	41
  3048  0881  341E               	retlw	30
  3049  0882  3400               	retlw	0
  3050  0883  3400               	retlw	0
  3051  0884  3414               	retlw	20
  3052  0885  3400               	retlw	0
  3053  0886  3400               	retlw	0
  3054  0887  3400               	retlw	0
  3055  0888  3440               	retlw	64
  3056  0889  3434               	retlw	52
  3057  088A  3400               	retlw	0
  3058  088B  3400               	retlw	0
  3059  088C  3400               	retlw	0
  3060  088D  3408               	retlw	8
  3061  088E  3414               	retlw	20
  3062  088F  3422               	retlw	34
  3063  0890  3441               	retlw	65
  3064  0891  3414               	retlw	20
  3065  0892  3414               	retlw	20
  3066  0893  3414               	retlw	20
  3067  0894  3414               	retlw	20
  3068  0895  3414               	retlw	20
  3069  0896  3400               	retlw	0
  3070  0897  3441               	retlw	65
  3071  0898  3422               	retlw	34
  3072  0899  3414               	retlw	20
  3073  089A  3408               	retlw	8
  3074  089B  3402               	retlw	2
  3075  089C  3401               	retlw	1
  3076  089D  3459               	retlw	89
  3077  089E  3409               	retlw	9
  3078  089F  3406               	retlw	6
  3079  08A0  343E               	retlw	62
  3080  08A1  3441               	retlw	65
  3081  08A2  345D               	retlw	93
  3082  08A3  3459               	retlw	89
  3083  08A4  344E               	retlw	78
  3084  08A5  347C               	retlw	124
  3085  08A6  3412               	retlw	18
  3086  08A7  3411               	retlw	17
  3087  08A8  3412               	retlw	18
  3088  08A9  347C               	retlw	124
  3089  08AA  347F               	retlw	127
  3090  08AB  3449               	retlw	73
  3091  08AC  3449               	retlw	73
  3092  08AD  3449               	retlw	73
  3093  08AE  3436               	retlw	54
  3094  08AF  343E               	retlw	62
  3095  08B0  3441               	retlw	65
  3096  08B1  3441               	retlw	65
  3097  08B2  3441               	retlw	65
  3098  08B3  3422               	retlw	34
  3099  08B4  347F               	retlw	127
  3100  08B5  3441               	retlw	65
  3101  08B6  3441               	retlw	65
  3102  08B7  3441               	retlw	65
  3103  08B8  343E               	retlw	62
  3104  08B9  347F               	retlw	127
  3105  08BA  3449               	retlw	73
  3106  08BB  3449               	retlw	73
  3107  08BC  3449               	retlw	73
  3108  08BD  3441               	retlw	65
  3109  08BE  347F               	retlw	127
  3110  08BF  3409               	retlw	9
  3111  08C0  3409               	retlw	9
  3112  08C1  3409               	retlw	9
  3113  08C2  3401               	retlw	1
  3114  08C3  343E               	retlw	62
  3115  08C4  3441               	retlw	65
  3116  08C5  3441               	retlw	65
  3117  08C6  3451               	retlw	81
  3118  08C7  3473               	retlw	115
  3119  08C8  347F               	retlw	127
  3120  08C9  3408               	retlw	8
  3121  08CA  3408               	retlw	8
  3122  08CB  3408               	retlw	8
  3123  08CC  347F               	retlw	127
  3124  08CD  3400               	retlw	0
  3125  08CE  3441               	retlw	65
  3126  08CF  347F               	retlw	127
  3127  08D0  3441               	retlw	65
  3128  08D1  3400               	retlw	0
  3129  08D2  3420               	retlw	32
  3130  08D3  3440               	retlw	64
  3131  08D4  3441               	retlw	65
  3132  08D5  343F               	retlw	63
  3133  08D6  3401               	retlw	1
  3134  08D7  347F               	retlw	127
  3135  08D8  3408               	retlw	8
  3136  08D9  3414               	retlw	20
  3137  08DA  3422               	retlw	34
  3138  08DB  3441               	retlw	65
  3139  08DC  347F               	retlw	127
  3140  08DD  3440               	retlw	64
  3141  08DE  3440               	retlw	64
  3142  08DF  3440               	retlw	64
  3143  08E0  3440               	retlw	64
  3144  08E1  347F               	retlw	127
  3145  08E2  3402               	retlw	2
  3146  08E3  341C               	retlw	28
  3147  08E4  3402               	retlw	2
  3148  08E5  347F               	retlw	127
  3149  08E6  347F               	retlw	127
  3150  08E7  3404               	retlw	4
  3151  08E8  3408               	retlw	8
  3152  08E9  3410               	retlw	16
  3153  08EA  347F               	retlw	127
  3154  08EB  343E               	retlw	62
  3155  08EC  3441               	retlw	65
  3156  08ED  3441               	retlw	65
  3157  08EE  3441               	retlw	65
  3158  08EF  343E               	retlw	62
  3159  08F0  347F               	retlw	127
  3160  08F1  3409               	retlw	9
  3161  08F2  3409               	retlw	9
  3162  08F3  3409               	retlw	9
  3163  08F4  3406               	retlw	6
  3164  08F5  343E               	retlw	62
  3165  08F6  3441               	retlw	65
  3166  08F7  3451               	retlw	81
  3167  08F8  3421               	retlw	33
  3168  08F9  345E               	retlw	94
  3169  08FA  347F               	retlw	127
  3170  08FB  3409               	retlw	9
  3171  08FC  3419               	retlw	25
  3172  08FD  3429               	retlw	41
  3173  08FE  3446               	retlw	70
  3174  08FF                     __end_of_Font:	
  3175                           
  3176                           	psect	stringtext2
  3177  08FF                     __pstringtext2:	
  3178  08FF                     _Font2:	
  3179  08FF  3426               	retlw	38
  3180  0900  3449               	retlw	73
  3181  0901  3449               	retlw	73
  3182  0902  3449               	retlw	73
  3183  0903  3432               	retlw	50
  3184  0904  3403               	retlw	3
  3185  0905  3401               	retlw	1
  3186  0906  347F               	retlw	127
  3187  0907  3401               	retlw	1
  3188  0908  3403               	retlw	3
  3189  0909  343F               	retlw	63
  3190  090A  3440               	retlw	64
  3191  090B  3440               	retlw	64
  3192  090C  3440               	retlw	64
  3193  090D  343F               	retlw	63
  3194  090E  341F               	retlw	31
  3195  090F  3420               	retlw	32
  3196  0910  3440               	retlw	64
  3197  0911  3420               	retlw	32
  3198  0912  341F               	retlw	31
  3199  0913  343F               	retlw	63
  3200  0914  3440               	retlw	64
  3201  0915  3438               	retlw	56
  3202  0916  3440               	retlw	64
  3203  0917  343F               	retlw	63
  3204  0918  3463               	retlw	99
  3205  0919  3414               	retlw	20
  3206  091A  3408               	retlw	8
  3207  091B  3414               	retlw	20
  3208  091C  3463               	retlw	99
  3209  091D  3403               	retlw	3
  3210  091E  3404               	retlw	4
  3211  091F  3478               	retlw	120
  3212  0920  3404               	retlw	4
  3213  0921  3403               	retlw	3
  3214  0922  3461               	retlw	97
  3215  0923  3459               	retlw	89
  3216  0924  3449               	retlw	73
  3217  0925  344D               	retlw	77
  3218  0926  3443               	retlw	67
  3219  0927  3400               	retlw	0
  3220  0928  347F               	retlw	127
  3221  0929  3441               	retlw	65
  3222  092A  3441               	retlw	65
  3223  092B  3441               	retlw	65
  3224  092C  3402               	retlw	2
  3225  092D  3404               	retlw	4
  3226  092E  3408               	retlw	8
  3227  092F  3410               	retlw	16
  3228  0930  3420               	retlw	32
  3229  0931  3400               	retlw	0
  3230  0932  3441               	retlw	65
  3231  0933  3441               	retlw	65
  3232  0934  3441               	retlw	65
  3233  0935  347F               	retlw	127
  3234  0936  3404               	retlw	4
  3235  0937  3402               	retlw	2
  3236  0938  3401               	retlw	1
  3237  0939  3402               	retlw	2
  3238  093A  3404               	retlw	4
  3239  093B  3440               	retlw	64
  3240  093C  3440               	retlw	64
  3241  093D  3440               	retlw	64
  3242  093E  3440               	retlw	64
  3243  093F  3440               	retlw	64
  3244  0940  3400               	retlw	0
  3245  0941  3403               	retlw	3
  3246  0942  3407               	retlw	7
  3247  0943  3408               	retlw	8
  3248  0944  3400               	retlw	0
  3249  0945  3420               	retlw	32
  3250  0946  3454               	retlw	84
  3251  0947  3454               	retlw	84
  3252  0948  3478               	retlw	120
  3253  0949  3440               	retlw	64
  3254  094A  347F               	retlw	127
  3255  094B  3428               	retlw	40
  3256  094C  3444               	retlw	68
  3257  094D  3444               	retlw	68
  3258  094E  3438               	retlw	56
  3259  094F  3438               	retlw	56
  3260  0950  3444               	retlw	68
  3261  0951  3444               	retlw	68
  3262  0952  3444               	retlw	68
  3263  0953  3428               	retlw	40
  3264  0954  3438               	retlw	56
  3265  0955  3444               	retlw	68
  3266  0956  3444               	retlw	68
  3267  0957  3428               	retlw	40
  3268  0958  347F               	retlw	127
  3269  0959  3438               	retlw	56
  3270  095A  3454               	retlw	84
  3271  095B  3454               	retlw	84
  3272  095C  3454               	retlw	84
  3273  095D  3418               	retlw	24
  3274  095E  3400               	retlw	0
  3275  095F  3408               	retlw	8
  3276  0960  347E               	retlw	126
  3277  0961  3409               	retlw	9
  3278  0962  3402               	retlw	2
  3279  0963  3418               	retlw	24
  3280  0964  34A4               	retlw	164
  3281  0965  34A4               	retlw	164
  3282  0966  349C               	retlw	156
  3283  0967  3478               	retlw	120
  3284  0968  347F               	retlw	127
  3285  0969  3408               	retlw	8
  3286  096A  3404               	retlw	4
  3287  096B  3404               	retlw	4
  3288  096C  3478               	retlw	120
  3289  096D  3400               	retlw	0
  3290  096E  3444               	retlw	68
  3291  096F  347D               	retlw	125
  3292  0970  3440               	retlw	64
  3293  0971  3400               	retlw	0
  3294  0972  3420               	retlw	32
  3295  0973  3440               	retlw	64
  3296  0974  3440               	retlw	64
  3297  0975  343D               	retlw	61
  3298  0976  3400               	retlw	0
  3299  0977  347F               	retlw	127
  3300  0978  3410               	retlw	16
  3301  0979  3428               	retlw	40
  3302  097A  3444               	retlw	68
  3303  097B  3400               	retlw	0
  3304  097C  3400               	retlw	0
  3305  097D  3441               	retlw	65
  3306  097E  347F               	retlw	127
  3307  097F  3440               	retlw	64
  3308  0980  3400               	retlw	0
  3309  0981  347C               	retlw	124
  3310  0982  3404               	retlw	4
  3311  0983  3478               	retlw	120
  3312  0984  3404               	retlw	4
  3313  0985  3478               	retlw	120
  3314  0986  347C               	retlw	124
  3315  0987  3408               	retlw	8
  3316  0988  3404               	retlw	4
  3317  0989  3404               	retlw	4
  3318  098A  3478               	retlw	120
  3319  098B  3438               	retlw	56
  3320  098C  3444               	retlw	68
  3321  098D  3444               	retlw	68
  3322  098E  3444               	retlw	68
  3323  098F  3438               	retlw	56
  3324  0990  34FC               	retlw	252
  3325  0991  3418               	retlw	24
  3326  0992  3424               	retlw	36
  3327  0993  3424               	retlw	36
  3328  0994  3418               	retlw	24
  3329  0995  3418               	retlw	24
  3330  0996  3424               	retlw	36
  3331  0997  3424               	retlw	36
  3332  0998  3418               	retlw	24
  3333  0999  34FC               	retlw	252
  3334  099A  347C               	retlw	124
  3335  099B  3408               	retlw	8
  3336  099C  3404               	retlw	4
  3337  099D  3404               	retlw	4
  3338  099E  3408               	retlw	8
  3339  099F  3448               	retlw	72
  3340  09A0  3454               	retlw	84
  3341  09A1  3454               	retlw	84
  3342  09A2  3454               	retlw	84
  3343  09A3  3424               	retlw	36
  3344  09A4  3404               	retlw	4
  3345  09A5  3404               	retlw	4
  3346  09A6  343F               	retlw	63
  3347  09A7  3444               	retlw	68
  3348  09A8  3424               	retlw	36
  3349  09A9  343C               	retlw	60
  3350  09AA  3440               	retlw	64
  3351  09AB  3440               	retlw	64
  3352  09AC  3420               	retlw	32
  3353  09AD  347C               	retlw	124
  3354  09AE  341C               	retlw	28
  3355  09AF  3420               	retlw	32
  3356  09B0  3440               	retlw	64
  3357  09B1  3420               	retlw	32
  3358  09B2  341C               	retlw	28
  3359  09B3  343C               	retlw	60
  3360  09B4  3440               	retlw	64
  3361  09B5  3430               	retlw	48
  3362  09B6  3440               	retlw	64
  3363  09B7  343C               	retlw	60
  3364  09B8  3444               	retlw	68
  3365  09B9  3428               	retlw	40
  3366  09BA  3410               	retlw	16
  3367  09BB  3428               	retlw	40
  3368  09BC  3444               	retlw	68
  3369  09BD  344C               	retlw	76
  3370  09BE  3490               	retlw	144
  3371  09BF  3490               	retlw	144
  3372  09C0  3490               	retlw	144
  3373  09C1  347C               	retlw	124
  3374  09C2  3444               	retlw	68
  3375  09C3  3464               	retlw	100
  3376  09C4  3454               	retlw	84
  3377  09C5  344C               	retlw	76
  3378  09C6  3444               	retlw	68
  3379  09C7  3400               	retlw	0
  3380  09C8  3408               	retlw	8
  3381  09C9  3436               	retlw	54
  3382  09CA  3441               	retlw	65
  3383  09CB  3400               	retlw	0
  3384  09CC  3400               	retlw	0
  3385  09CD  3400               	retlw	0
  3386  09CE  3477               	retlw	119
  3387  09CF  3400               	retlw	0
  3388  09D0  3400               	retlw	0
  3389  09D1  3400               	retlw	0
  3390  09D2  3441               	retlw	65
  3391  09D3  3436               	retlw	54
  3392  09D4  3408               	retlw	8
  3393  09D5  3400               	retlw	0
  3394  09D6  3402               	retlw	2
  3395  09D7  3401               	retlw	1
  3396  09D8  3402               	retlw	2
  3397  09D9  3404               	retlw	4
  3398  09DA  3402               	retlw	2
  3399  09DB                     __end_of_Font2:	
  3400  001F                     _T2CONbits	set	31
  3401  001F                     _T2CON	set	31
  3402  0011                     _PIR1bits	set	17
  3403  001D                     _TMR2	set	29
  3404  001E                     _PR2	set	30
  3405  008E                     _TRISC	set	142
  3406  008D                     _TRISB	set	141
  3407  008C                     _TRISA	set	140
  3408  0097                     _WDTCON	set	151
  3409  009D                     _ADCON0bits	set	157
  3410  009C                     _ADRESH	set	156
  3411  009B                     _ADRESL	set	155
  3412  009F                     _ADACT	set	159
  3413  009E                     _ADCON1	set	158
  3414  009D                     _ADCON0	set	157
  3415  010E                     _LATC	set	270
  3416  010D                     _LATB	set	269
  3417  010D                     _LATBbits	set	269
  3418  010C                     _LATAbits	set	268
  3419  010E                     _LATCbits	set	270
  3420  010C                     _LATA	set	268
  3421  018C                     _ANSELA	set	396
  3422  018D                     _ANSELB	set	397
  3423  018E                     _ANSELC	set	398
  3424  020E                     _WPUC	set	526
  3425  020C                     _WPUA	set	524
  3426  020D                     _WPUB	set	525
  3427  0214                     _SSP1STATbits	set	532
  3428  0211                     _SSP1BUF	set	529
  3429  0215                     _SSP1CON1bits	set	533
  3430  0212                     _SSP1ADD	set	530
  3431  0215                     _SSP1CON1	set	533
  3432  0214                     _SSP1STAT	set	532
  3433  028E                     _ODCONC	set	654
  3434  028D                     _ODCONB	set	653
  3435  028C                     _ODCONA	set	652
  3436  0293                     _CCP1CONbits	set	659
  3437  029F                     _CCPTMRSbits	set	671
  3438  0291                     _CCPR1L	set	657
  3439  0292                     _CCPR1H	set	658
  3440  0293                     _CCP1CON	set	659
  3441  030E                     _SLRCONC	set	782
  3442  030D                     _SLRCONB	set	781
  3443  030C                     _SLRCONA	set	780
  3444  0916                     _PMD5	set	2326
  3445  0915                     _PMD4	set	2325
  3446  0914                     _PMD3	set	2324
  3447  0913                     _PMD2	set	2323
  3448  0912                     _PMD1	set	2322
  3449  0911                     _PMD0	set	2321
  3450  091E                     _OSCTUNE	set	2334
  3451  091F                     _OSCFRQ	set	2335
  3452  091D                     _OSCEN	set	2333
  3453  091B                     _OSCCON3	set	2331
  3454  0919                     _OSCCON1	set	2329
  3455  0E21                     _SSP1DATPPS	set	3617
  3456  0E20                     _SSP1CLKPPS	set	3616
  3457  0EA7                     _RC7PPS	set	3751
  3458  0E9F                     _RB7PPS	set	3743
  3459  0EA5                     _RC5PPS	set	3749
  3460  09DB                     STR_1:	
  3461  09DB  3448               	retlw	72	;'H'
  3462  09DC  3465               	retlw	101	;'e'
  3463  09DD  346C               	retlw	108	;'l'
  3464  09DE  346C               	retlw	108	;'l'
  3465  09DF  346F               	retlw	111	;'o'
  3466  09E0  3420               	retlw	32	;' '
  3467  09E1  3457               	retlw	87	;'W'
  3468  09E2  346F               	retlw	111	;'o'
  3469  09E3  3472               	retlw	114	;'r'
  3470  09E4  346C               	retlw	108	;'l'
  3471  09E5  3464               	retlw	100	;'d'
  3472  09E6  3400               	retlw	0
  3473                           
  3474                           	psect	stringtext3
  3475  0000                     __pstringtext3:	
  3476                           
  3477                           ; #config settings
  3478  0000                     
  3479                           	psect	cinit
  3480  07E3                     start_initialization:	
  3481  07E3                     __initialization:	
  3482                           
  3483                           ; Initialize objects allocated to BANK0
  3484  07E3  309F               	movlw	low __pidataBANK0
  3485  07E4  0084               	movwf	4
  3486  07E5  3082               	movlw	(high __pidataBANK0)| (0+128)
  3487  07E6  0085               	movwf	5
  3488  07E7  0012               	moviw fsr0++
  3489  07E8  00E7               	movwf	__pdataBANK0& (0+127)
  3490  07E9  0012               	moviw fsr0++
  3491  07EA  00E8               	movwf	(__pdataBANK0+1)& (0+127)
  3492  07EB  0012               	moviw fsr0++
  3493  07EC  00E9               	movwf	(__pdataBANK0+2)& (0+127)
  3494  07ED  0012               	moviw fsr0++
  3495  07EE  00EA               	movwf	(__pdataBANK0+3)& (0+127)
  3496  07EF  0012               	moviw fsr0++
  3497  07F0  00EB               	movwf	(__pdataBANK0+4)& (0+127)
  3498                           
  3499                           ; Clear objects allocated to BANK0
  3500  07F1  01DB               	clrf	__pbssBANK0& (0+127)
  3501  07F2  01DC               	clrf	(__pbssBANK0+1)& (0+127)
  3502  07F3  01DD               	clrf	(__pbssBANK0+2)& (0+127)
  3503  07F4  01DE               	clrf	(__pbssBANK0+3)& (0+127)
  3504  07F5  01DF               	clrf	(__pbssBANK0+4)& (0+127)
  3505  07F6  01E0               	clrf	(__pbssBANK0+5)& (0+127)
  3506  07F7  01E1               	clrf	(__pbssBANK0+6)& (0+127)
  3507  07F8  01E2               	clrf	(__pbssBANK0+7)& (0+127)
  3508  07F9  01E3               	clrf	(__pbssBANK0+8)& (0+127)
  3509  07FA  01E4               	clrf	(__pbssBANK0+9)& (0+127)
  3510  07FB  01E5               	clrf	(__pbssBANK0+10)& (0+127)
  3511  07FC  01E6               	clrf	(__pbssBANK0+11)& (0+127)
  3512  07FD                     end_of_initialization:	
  3513                           ;End of C runtime variable initialization code
  3514                           
  3515  07FD                     __end_of__initialization:	
  3516  07FD  0020               	movlb	0
  3517  07FE  3182  2AB0         	ljmp	_main	;jump to C main() function
  3518                           
  3519                           	psect	bssBANK0
  3520  005B                     __pbssBANK0:	
  3521  005B                     _adcResult2:	
  3522  005B                     	ds	2
  3523  005D                     _pause:	
  3524  005D                     	ds	1
  3525  005E                     _state:	
  3526  005E                     	ds	1
  3527  005F                     _button:	
  3528  005F                     	ds	1
  3529  0060                     _switch1:	
  3530  0060                     	ds	1
  3531  0061                     _delayVal:	
  3532  0061                     	ds	1
  3533  0062                     _rotateVal:	
  3534  0062                     	ds	1
  3535  0063                     _secondCount:	
  3536  0063                     	ds	1
  3537  0064                     _adcResult:	
  3538  0064                     	ds	1
  3539  0065                     _rowstart:	
  3540  0065                     	ds	1
  3541  0066                     _colstart:	
  3542  0066                     	ds	1
  3543                           
  3544                           	psect	dataBANK0
  3545  0067                     __pdataBANK0:	
  3546  0067                     _txt:	
  3547  0067                     	ds	2
  3548  0069                     _wrap:	
  3549  0069                     	ds	2
  3550  006B                     _event:	
  3551  006B                     	ds	1
  3552                           
  3553                           	psect	cstackCOMMON
  3554  0070                     __pcstackCOMMON:	
  3555  0070                     ?_SYSTEM_Initialize:	
  3556  0070                     ??_SYSTEM_Initialize:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559  0070                     ?_SPI:	
  3560                           ; 1 bytes @ 0x0
  3561                           
  3562  0070                     ?_BlackTab_Init:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565  0070                     ?_setTextWrap:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568  0070                     ?_Rcmd1:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571  0070                     ?_Rcmd2red:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  0070                     ?_Rcmd3:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0070                     ?_write_command:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580  0070                     ?_write_data:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583  0070                     ?_spiwrite:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586  0070                     ??_spiwrite:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     ?_PMD_Initialize:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     ??_PMD_Initialize:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     ?_PIN_MANAGER_Initialize:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0070                     ??_PIN_MANAGER_Initialize:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  0070                     ?_OSCILLATOR_Initialize:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  0070                     ??_OSCILLATOR_Initialize:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  0070                     ?_WDT_Initialize:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  0070                     ??_WDT_Initialize:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  0070                     ?_SPI1_Initialize:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616  0070                     ??_SPI1_Initialize:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  0070                     ?_main:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622  0070                     ?_PWM1_Initialize:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625  0070                     ??_PWM1_Initialize:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628  0070                     ?_TMR2_Initialize:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631  0070                     ??_TMR2_Initialize:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634  0070                     ?_ADC_Initialize:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637  0070                     ??_ADC_Initialize:	
  3638                           ; 1 bytes @ 0x0
  3639                           
  3640  0070                     ?___bmul:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643  0070                     ?_strlen:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646  0070                     ?___wmul:	
  3647                           ; 2 bytes @ 0x0
  3648                           
  3649  0070                     spiwrite@spidata:	
  3650                           ; 2 bytes @ 0x0
  3651                           
  3652  0070                     ___bmul@multiplicand:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655  0070                     setTextWrap@w:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ___wmul@multiplier:	
  3659                           ; 2 bytes @ 0x0
  3660                           
  3661  0070                     strlen@s:	
  3662                           ; 2 bytes @ 0x0
  3663                           
  3664                           
  3665                           ; 2 bytes @ 0x0
  3666  0070                     	ds	1
  3667  0071                     ??___bmul:	
  3668  0071                     spiwrite@ss:	
  3669                           ; 1 bytes @ 0x1
  3670                           
  3671                           
  3672                           ; 2 bytes @ 0x1
  3673  0071                     	ds	1
  3674  0072                     ??_setTextWrap:	
  3675  0072                     ??_strlen:	
  3676                           ; 1 bytes @ 0x2
  3677                           
  3678  0072                     ___bmul@product:	
  3679                           ; 1 bytes @ 0x2
  3680                           
  3681  0072                     ___wmul@multiplicand:	
  3682                           ; 1 bytes @ 0x2
  3683                           
  3684                           
  3685                           ; 2 bytes @ 0x2
  3686  0072                     	ds	1
  3687  0073                     ??_write_command:	
  3688  0073                     ??_write_data:	
  3689                           ; 1 bytes @ 0x3
  3690                           
  3691  0073                     write_command@cmd:	
  3692                           ; 1 bytes @ 0x3
  3693                           
  3694  0073                     write_data@data:	
  3695                           ; 1 bytes @ 0x3
  3696                           
  3697  0073                     ___bmul@multiplier:	
  3698                           ; 1 bytes @ 0x3
  3699                           
  3700  0073                     strlen@a:	
  3701                           ; 1 bytes @ 0x3
  3702                           
  3703                           
  3704                           ; 2 bytes @ 0x3
  3705  0073                     	ds	1
  3706  0074                     ??_Rcmd1:	
  3707  0074                     ??_Rcmd2red:	
  3708                           ; 1 bytes @ 0x4
  3709                           
  3710  0074                     ??_Rcmd3:	
  3711                           ; 1 bytes @ 0x4
  3712                           
  3713  0074                     ?_setAddrWindow:	
  3714                           ; 1 bytes @ 0x4
  3715                           
  3716  0074                     ??___wmul:	
  3717                           ; 1 bytes @ 0x4
  3718                           
  3719  0074                     setAddrWindow@x0:	
  3720                           ; 1 bytes @ 0x4
  3721                           
  3722  0074                     ___wmul@product:	
  3723                           ; 2 bytes @ 0x4
  3724                           
  3725                           
  3726                           ; 2 bytes @ 0x4
  3727  0074                     	ds	1
  3728  0075                     ??_BlackTab_Init:	
  3729                           
  3730                           ; 1 bytes @ 0x5
  3731  0075                     	ds	1
  3732  0076                     setAddrWindow@y0:	
  3733                           
  3734                           ; 2 bytes @ 0x6
  3735  0076                     	ds	2
  3736  0078                     setAddrWindow@x1:	
  3737                           
  3738                           ; 2 bytes @ 0x8
  3739  0078                     	ds	2
  3740  007A                     setAddrWindow@y1:	
  3741                           
  3742                           ; 2 bytes @ 0xA
  3743  007A                     	ds	2
  3744  007C                     ?_fillScreen:	
  3745  007C                     ??_setAddrWindow:	
  3746                           ; 1 bytes @ 0xC
  3747                           
  3748  007C                     drawPixel@x:	
  3749                           ; 1 bytes @ 0xC
  3750                           
  3751  007C                     fillScreen@color:	
  3752                           ; 1 bytes @ 0xC
  3753                           
  3754                           
  3755                           ; 2 bytes @ 0xC
  3756  007C                     	ds	2
  3757  007E                     ??_main:	
  3758                           
  3759                           	psect	cstackBANK0
  3760  0020                     __pcstackBANK0:	
  3761                           ; 1 bytes @ 0xE
  3762                           
  3763  0020                     ?_fillRect:	
  3764  0020                     ?_drawPixel:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767  0020                     fillRect@y:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770  0020                     drawPixel@y:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773                           
  3774                           ; 1 bytes @ 0x0
  3775  0020                     	ds	1
  3776  0021                     fillRect@w:	
  3777  0021                     drawPixel@color:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780                           
  3781                           ; 2 bytes @ 0x1
  3782  0021                     	ds	1
  3783  0022                     fillRect@h:	
  3784                           
  3785                           ; 1 bytes @ 0x2
  3786  0022                     	ds	1
  3787  0023                     ??_drawPixel:	
  3788  0023                     fillRect@color:	
  3789                           ; 1 bytes @ 0x3
  3790                           
  3791                           
  3792                           ; 2 bytes @ 0x3
  3793  0023                     	ds	2
  3794  0025                     ??_fillRect:	
  3795                           
  3796                           ; 1 bytes @ 0x5
  3797  0025                     	ds	8
  3798  002D                     fillRect@high:	
  3799                           
  3800                           ; 1 bytes @ 0xD
  3801  002D                     	ds	1
  3802  002E                     fillRect@low:	
  3803                           
  3804                           ; 1 bytes @ 0xE
  3805  002E                     	ds	1
  3806  002F                     fillRect@x:	
  3807                           
  3808                           ; 1 bytes @ 0xF
  3809  002F                     	ds	1
  3810  0030                     ??_fillScreen:	
  3811  0030                     ?_drawChar:	
  3812                           ; 1 bytes @ 0x10
  3813                           
  3814  0030                     drawChar@y:	
  3815                           ; 1 bytes @ 0x10
  3816                           
  3817                           
  3818                           ; 1 bytes @ 0x10
  3819  0030                     	ds	1
  3820  0031                     drawChar@c:	
  3821                           
  3822                           ; 1 bytes @ 0x11
  3823  0031                     	ds	1
  3824  0032                     drawChar@color:	
  3825                           
  3826                           ; 2 bytes @ 0x12
  3827  0032                     	ds	2
  3828  0034                     drawChar@bg:	
  3829                           
  3830                           ; 2 bytes @ 0x14
  3831  0034                     	ds	2
  3832  0036                     drawChar@size:	
  3833                           
  3834                           ; 1 bytes @ 0x16
  3835  0036                     	ds	1
  3836  0037                     ??_drawChar:	
  3837                           
  3838                           ; 1 bytes @ 0x17
  3839  0037                     	ds	7
  3840  003E                     drawChar@line:	
  3841                           
  3842                           ; 1 bytes @ 0x1E
  3843  003E                     	ds	1
  3844  003F                     drawChar@x:	
  3845                           
  3846                           ; 1 bytes @ 0x1F
  3847  003F                     	ds	1
  3848  0040                     drawChar@j:	
  3849                           
  3850                           ; 2 bytes @ 0x20
  3851  0040                     	ds	2
  3852  0042                     drawChar@i:	
  3853                           
  3854                           ; 2 bytes @ 0x22
  3855  0042                     	ds	2
  3856  0044                     ?_drawtext:	
  3857  0044                     drawtext@y:	
  3858                           ; 1 bytes @ 0x24
  3859                           
  3860                           
  3861                           ; 1 bytes @ 0x24
  3862  0044                     	ds	1
  3863  0045                     drawtext@_text:	
  3864                           
  3865                           ; 2 bytes @ 0x25
  3866  0045                     	ds	2
  3867  0047                     drawtext@color:	
  3868                           
  3869                           ; 2 bytes @ 0x27
  3870  0047                     	ds	2
  3871  0049                     drawtext@bg:	
  3872                           
  3873                           ; 2 bytes @ 0x29
  3874  0049                     	ds	2
  3875  004B                     drawtext@size:	
  3876                           
  3877                           ; 1 bytes @ 0x2B
  3878  004B                     	ds	1
  3879  004C                     ??_drawtext:	
  3880                           
  3881                           ; 1 bytes @ 0x2C
  3882  004C                     	ds	7
  3883  0053                     drawtext@textsize:	
  3884                           
  3885                           ; 2 bytes @ 0x33
  3886  0053                     	ds	2
  3887  0055                     drawtext@x:	
  3888                           
  3889                           ; 1 bytes @ 0x35
  3890  0055                     	ds	1
  3891  0056                     drawtext@i:	
  3892                           
  3893                           ; 2 bytes @ 0x36
  3894  0056                     	ds	2
  3895  0058                     drawtext@cursor_y:	
  3896                           
  3897                           ; 1 bytes @ 0x38
  3898  0058                     	ds	1
  3899  0059                     drawtext@cursor_x:	
  3900                           
  3901                           ; 1 bytes @ 0x39
  3902  0059                     	ds	1
  3903  005A                     ??_SPI:	
  3904                           
  3905                           ; 1 bytes @ 0x3A
  3906  005A                     	ds	1
  3907                           
  3908                           	psect	maintext
  3909  02B0                     __pmaintext:	
  3910 ;;
  3911 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3912 ;;
  3913 ;; *************** function _main *****************
  3914 ;; Defined at:
  3915 ;;		line 250 in file "main.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : B1F/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels required when called:    7
  3935 ;; This function calls:
  3936 ;;		_SPI
  3937 ;;		_SYSTEM_Initialize
  3938 ;; This function is called by:
  3939 ;;		Startup code after reset
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _main
  3945  02B0                     _main:	
  3946                           
  3947                           ;main.c: 253:     SYSTEM_Initialize();
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3951  02B0  3183  2345  3182   	fcall	_SYSTEM_Initialize
  3952  02B3                     l1905:	
  3953                           
  3954                           ;main.c: 261:         SPI();
  3955  02B3  3183  2392  3182   	fcall	_SPI
  3956  02B6  2AB3               	goto	l1905
  3957  02B7                     __end_of_main:	
  3958                           
  3959                           	psect	text1
  3960  0345                     __ptext1:	
  3961 ;; *************** function _SYSTEM_Initialize *****************
  3962 ;; Defined at:
  3963 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    1
  3984 ;; This function calls:
  3985 ;;		_ADC_Initialize
  3986 ;;		_OSCILLATOR_Initialize
  3987 ;;		_PIN_MANAGER_Initialize
  3988 ;;		_PMD_Initialize
  3989 ;;		_PWM1_Initialize
  3990 ;;		_SPI1_Initialize
  3991 ;;		_TMR2_Initialize
  3992 ;;		_WDT_Initialize
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _SYSTEM_Initialize
  4000  0345                     _SYSTEM_Initialize:	
  4001                           
  4002                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4003                           
  4004                           ;incstack = 0
  4005                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4006  0345  3182  22C7  3183   	fcall	_PMD_Initialize
  4007                           
  4008                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4009  0348  3184  240B  3183   	fcall	_PIN_MANAGER_Initialize
  4010                           
  4011                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4012  034B  3182  22BF  3183   	fcall	_OSCILLATOR_Initialize
  4013                           
  4014                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4015  034E  3182  229B  3183   	fcall	_WDT_Initialize
  4016                           
  4017                           ;mcc_generated_files/mcc.c: 57:     SPI1_Initialize();
  4018  0351  3182  22AA  3183   	fcall	_SPI1_Initialize
  4019                           
  4020                           ;mcc_generated_files/mcc.c: 58:     PWM1_Initialize();
  4021  0354  3182  22EB  3183   	fcall	_PWM1_Initialize
  4022                           
  4023                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
  4024  0357  3182  22B7  3183   	fcall	_ADC_Initialize
  4025                           
  4026                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4027  035A  3182  22CF         	fcall	_TMR2_Initialize
  4028  035C  0008               	return
  4029  035D                     __end_of_SYSTEM_Initialize:	
  4030                           
  4031                           	psect	text2
  4032  029B                     __ptext2:	
  4033 ;; *************** function _WDT_Initialize *****************
  4034 ;; Defined at:
  4035 ;;		line 77 in file "mcc_generated_files/mcc.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_SYSTEM_Initialize
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _WDT_Initialize
  4064  029B                     _WDT_Initialize:	
  4065                           
  4066                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in _WDT_Initialize: [wreg]
  4070  029B  3018               	movlw	24
  4071  029C  0021               	movlb	1	; select bank1
  4072  029D  0097               	movwf	23	;volatile
  4073  029E  0008               	return
  4074  029F                     __end_of_WDT_Initialize:	
  4075                           
  4076                           	psect	text3
  4077  02CF                     __ptext3:	
  4078 ;; *************** function _TMR2_Initialize *****************
  4079 ;; Defined at:
  4080 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_SYSTEM_Initialize
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _TMR2_Initialize
  4109  02CF                     _TMR2_Initialize:	
  4110                           
  4111                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4115  02CF  30FF               	movlw	255
  4116  02D0  0020               	movlb	0	; select bank0
  4117  02D1  009E               	movwf	30	;volatile
  4118                           
  4119                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4120  02D2  019D               	clrf	29	;volatile
  4121                           
  4122                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4123  02D3  1091               	bcf	17,1	;volatile
  4124                           
  4125                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4126  02D4  3004               	movlw	4
  4127  02D5  009F               	movwf	31	;volatile
  4128  02D6  0008               	return
  4129  02D7                     __end_of_TMR2_Initialize:	
  4130                           
  4131                           	psect	text4
  4132  02AA                     __ptext4:	
  4133 ;; *************** function _SPI1_Initialize *****************
  4134 ;; Defined at:
  4135 ;;		line 65 in file "mcc_generated_files/spi1.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_SYSTEM_Initialize
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _SPI1_Initialize
  4164  02AA                     _SPI1_Initialize:	
  4165                           
  4166                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x00;
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4170  02AA  0024               	movlb	4	; select bank4
  4171  02AB  0194               	clrf	20	;volatile
  4172                           
  4173                           ;mcc_generated_files/spi1.c: 73:     SSP1CON1 = 0x21;
  4174  02AC  3021               	movlw	33
  4175  02AD  0095               	movwf	21	;volatile
  4176                           
  4177                           ;mcc_generated_files/spi1.c: 76:     SSP1ADD = 0x00;
  4178  02AE  0192               	clrf	18	;volatile
  4179  02AF  0008               	return
  4180  02B0                     __end_of_SPI1_Initialize:	
  4181                           
  4182                           	psect	text5
  4183  02EB                     __ptext5:	
  4184 ;; *************** function _PWM1_Initialize *****************
  4185 ;; Defined at:
  4186 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_SYSTEM_Initialize
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function _PWM1_Initialize
  4215  02EB                     _PWM1_Initialize:	
  4216                           
  4217                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  4218                           
  4219                           ;incstack = 0
  4220                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  4221  02EB  308F               	movlw	143
  4222  02EC  0025               	movlb	5	; select bank5
  4223  02ED  0093               	movwf	19	;volatile
  4224                           
  4225                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
  4226  02EE  0192               	clrf	18	;volatile
  4227                           
  4228                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
  4229  02EF  0191               	clrf	17	;volatile
  4230                           
  4231                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
  4232  02F0  081F               	movf	31,w	;volatile
  4233  02F1  39FC               	andlw	-4
  4234  02F2  3801               	iorlw	1
  4235  02F3  009F               	movwf	31	;volatile
  4236  02F4  0008               	return
  4237  02F5                     __end_of_PWM1_Initialize:	
  4238                           
  4239                           	psect	text6
  4240  02C7                     __ptext6:	
  4241 ;; *************** function _PMD_Initialize *****************
  4242 ;; Defined at:
  4243 ;;		line 83 in file "mcc_generated_files/mcc.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		status,2
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_SYSTEM_Initialize
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _PMD_Initialize
  4272  02C7                     _PMD_Initialize:	
  4273                           
  4274                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _PMD_Initialize: [status,2]
  4278  02C7  0032               	movlb	18	; select bank18
  4279  02C8  0191               	clrf	17	;volatile
  4280                           
  4281                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
  4282  02C9  0192               	clrf	18	;volatile
  4283                           
  4284                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
  4285  02CA  0193               	clrf	19	;volatile
  4286                           
  4287                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
  4288  02CB  0194               	clrf	20	;volatile
  4289                           
  4290                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
  4291  02CC  0195               	clrf	21	;volatile
  4292                           
  4293                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
  4294  02CD  0196               	clrf	22	;volatile
  4295  02CE  0008               	return
  4296  02CF                     __end_of_PMD_Initialize:	
  4297                           
  4298                           	psect	text7
  4299  040B                     __ptext7:	
  4300 ;; *************** function _PIN_MANAGER_Initialize *****************
  4301 ;; Defined at:
  4302 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_SYSTEM_Initialize
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _PIN_MANAGER_Initialize
  4331  040B                     _PIN_MANAGER_Initialize:	
  4332                           
  4333                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4337  040B  0022               	movlb	2	; select bank2
  4338  040C  018C               	clrf	12	;volatile
  4339                           
  4340                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4341  040D  018D               	clrf	13	;volatile
  4342                           
  4343                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4344  040E  018E               	clrf	14	;volatile
  4345                           
  4346                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x25;
  4347  040F  3025               	movlw	37
  4348  0410  0021               	movlb	1	; select bank1
  4349  0411  008C               	movwf	12	;volatile
  4350                           
  4351                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4352  0412  3070               	movlw	112
  4353  0413  008D               	movwf	13	;volatile
  4354                           
  4355                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x5F;
  4356  0414  305F               	movlw	95
  4357  0415  008E               	movwf	14	;volatile
  4358                           
  4359                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
  4360  0416  307F               	movlw	127
  4361  0417  0023               	movlb	3	; select bank3
  4362  0418  008E               	movwf	14	;volatile
  4363                           
  4364                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  4365  0419  30F0               	movlw	240
  4366  041A  008D               	movwf	13	;volatile
  4367                           
  4368                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x24;
  4369  041B  3024               	movlw	36
  4370  041C  008C               	movwf	12	;volatile
  4371                           
  4372                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4373  041D  0024               	movlb	4	; select bank4
  4374  041E  018D               	clrf	13	;volatile
  4375                           
  4376                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4377  041F  018C               	clrf	12	;volatile
  4378                           
  4379                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4380  0420  018E               	clrf	14	;volatile
  4381                           
  4382                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  4383  0421  0025               	movlb	5	; select bank5
  4384  0422  018C               	clrf	12	;volatile
  4385                           
  4386                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  4387  0423  018D               	clrf	13	;volatile
  4388                           
  4389                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  4390  0424  018E               	clrf	14	;volatile
  4391                           
  4392                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  4393  0425  3037               	movlw	55
  4394  0426  0026               	movlb	6	; select bank6
  4395  0427  008C               	movwf	12	;volatile
  4396                           
  4397                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  4398  0428  30F0               	movlw	240
  4399  0429  008D               	movwf	13	;volatile
  4400                           
  4401                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  4402  042A  30FF               	movlw	255
  4403  042B  008E               	movwf	14	;volatile
  4404                           
  4405                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x17;
  4406  042C  3017               	movlw	23
  4407  042D  003C               	movlb	28	; select bank28
  4408  042E  00A0               	movwf	32	;volatile
  4409                           
  4410                           ;mcc_generated_files/pin_manager.c: 107:     RB7PPS = 0x19;
  4411  042F  3019               	movlw	25
  4412  0430  003D               	movlb	29	; select bank29
  4413  0431  009F               	movwf	31	;volatile
  4414                           
  4415                           ;mcc_generated_files/pin_manager.c: 108:     RC7PPS = 0x18;
  4416  0432  3018               	movlw	24
  4417  0433  00A7               	movwf	39	;volatile
  4418                           
  4419                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x00;
  4420  0434  003C               	movlb	28	; select bank28
  4421  0435  01A1               	clrf	33	;volatile
  4422  0436  0008               	return
  4423  0437                     __end_of_PIN_MANAGER_Initialize:	
  4424                           
  4425                           	psect	text8
  4426  02BF                     __ptext8:	
  4427 ;; *************** function _OSCILLATOR_Initialize *****************
  4428 ;; Defined at:
  4429 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_SYSTEM_Initialize
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           
  4457                           ;psect for function _OSCILLATOR_Initialize
  4458  02BF                     _OSCILLATOR_Initialize:	
  4459                           
  4460                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4464  02BF  3061               	movlw	97
  4465  02C0  0032               	movlb	18	; select bank18
  4466  02C1  0099               	movwf	25	;volatile
  4467                           
  4468                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  4469  02C2  019B               	clrf	27	;volatile
  4470                           
  4471                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  4472  02C3  019D               	clrf	29	;volatile
  4473                           
  4474                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  4475  02C4  019F               	clrf	31	;volatile
  4476                           
  4477                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4478  02C5  019E               	clrf	30	;volatile
  4479  02C6  0008               	return
  4480  02C7                     __end_of_OSCILLATOR_Initialize:	
  4481                           
  4482                           	psect	text9
  4483  02B7                     __ptext9:	
  4484 ;; *************** function _ADC_Initialize *****************
  4485 ;; Defined at:
  4486 ;;		line 65 in file "mcc_generated_files/adc.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_SYSTEM_Initialize
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function _ADC_Initialize
  4515  02B7                     _ADC_Initialize:	
  4516                           
  4517                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4521  02B7  3001               	movlw	1
  4522  02B8  0021               	movlb	1	; select bank1
  4523  02B9  009D               	movwf	29	;volatile
  4524                           
  4525                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  4526  02BA  019E               	clrf	30	;volatile
  4527                           
  4528                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  4529  02BB  019F               	clrf	31	;volatile
  4530                           
  4531                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  4532  02BC  019B               	clrf	27	;volatile
  4533                           
  4534                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  4535  02BD  019C               	clrf	28	;volatile
  4536  02BE  0008               	return
  4537  02BF                     __end_of_ADC_Initialize:	
  4538                           
  4539                           	psect	text10
  4540  0392                     __ptext10:	
  4541 ;; *************** function _SPI *****************
  4542 ;; Defined at:
  4543 ;;		line 279 in file "main.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;Total ram usage:        1 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    6
  4564 ;; This function calls:
  4565 ;;		_BlackTab_Init
  4566 ;;		_drawtext
  4567 ;;		_fillScreen
  4568 ;;		_setTextWrap
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function _SPI
  4576  0392                     _SPI:	
  4577                           
  4578                           ;main.c: 280:     BlackTab_Init();
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _SPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4582  0392  3183  2318  3183   	fcall	_BlackTab_Init
  4583                           
  4584                           ;main.c: 281:     fillScreen(0x0000);
  4585  0395  3000               	movlw	0
  4586  0396  00FC               	movwf	fillScreen@color
  4587  0397  00FD               	movwf	fillScreen@color+1
  4588  0398  3183  2306  3183   	fcall	_fillScreen
  4589                           
  4590                           ;main.c: 282:     drawtext(0, 5, txt, 0xFFFF, 0x0000, 1);
  4591  039B  3005               	movlw	5
  4592  039C  0020               	movlb	0	; select bank0
  4593  039D  00DA               	movwf	??_SPI
  4594  039E  085A               	movf	??_SPI,w
  4595  039F  00C4               	movwf	drawtext@y
  4596  03A0  30DB               	movlw	low (STR_1| (0+32768))
  4597  03A1  00C5               	movwf	drawtext@_text
  4598  03A2  3089               	movlw	high (STR_1| (0+32768))
  4599  03A3  00C6               	movwf	drawtext@_text+1
  4600  03A4  30FF               	movlw	255
  4601  03A5  00C7               	movwf	drawtext@color
  4602  03A6  30FF               	movlw	255
  4603  03A7  00C8               	movwf	drawtext@color+1
  4604  03A8  3000               	movlw	0
  4605  03A9  00C9               	movwf	drawtext@bg
  4606  03AA  00CA               	movwf	drawtext@bg+1
  4607  03AB  01CB               	clrf	drawtext@size
  4608  03AC  0ACB               	incf	drawtext@size,f
  4609  03AD  3000               	movlw	0
  4610  03AE  3185  25A2  3183   	fcall	_drawtext
  4611                           
  4612                           ;main.c: 283:     setTextWrap(0);
  4613  03B1  3000               	movlw	0
  4614  03B2  00F0               	movwf	setTextWrap@w
  4615  03B3  00F1               	movwf	setTextWrap@w+1
  4616  03B4  3182  22A4         	fcall	_setTextWrap
  4617  03B6  0008               	return
  4618  03B7                     __end_of_SPI:	
  4619                           
  4620                           	psect	text11
  4621  02A4                     __ptext11:	
  4622 ;; *************** function _setTextWrap *****************
  4623 ;; Defined at:
  4624 ;;		line 516 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  w               2    0[COMMON] int 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_SPI
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _setTextWrap
  4653  02A4                     _setTextWrap:	
  4654                           
  4655                           ;main.c: 517:   wrap = w;
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _setTextWrap: [wreg]
  4659  02A4  0871               	movf	setTextWrap@w+1,w
  4660  02A5  0020               	movlb	0	; select bank0
  4661  02A6  00EA               	movwf	_wrap+1
  4662  02A7  0870               	movf	setTextWrap@w,w
  4663  02A8  00E9               	movwf	_wrap
  4664  02A9  0008               	return
  4665  02AA                     __end_of_setTextWrap:	
  4666                           
  4667                           	psect	text12
  4668  0306                     __ptext12:	
  4669 ;; *************** function _fillScreen *****************
  4670 ;; Defined at:
  4671 ;;		line 332 in file "main.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  color           2   12[COMMON] unsigned short 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;Total ram usage:        4 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    4
  4692 ;; This function calls:
  4693 ;;		_fillRect
  4694 ;; This function is called by:
  4695 ;;		_SPI
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _fillScreen
  4701  0306                     _fillScreen:	
  4702                           
  4703                           ;main.c: 333:     fillRect(0,0, 128, 160, color);
  4704                           
  4705                           ;incstack = 0
  4706                           ; Regs used in _fillScreen: [wreg+status,2+status,0+pclath+cstack]
  4707  0306  0020               	movlb	0	; select bank0
  4708  0307  01A0               	clrf	fillRect@y
  4709  0308  3080               	movlw	128
  4710  0309  00B0               	movwf	??_fillScreen
  4711  030A  0830               	movf	??_fillScreen,w
  4712  030B  00A1               	movwf	fillRect@w
  4713  030C  30A0               	movlw	160
  4714  030D  00B1               	movwf	??_fillScreen+1
  4715  030E  0831               	movf	??_fillScreen+1,w
  4716  030F  00A2               	movwf	fillRect@h
  4717  0310  087D               	movf	fillScreen@color+1,w
  4718  0311  00A4               	movwf	fillRect@color+1
  4719  0312  087C               	movf	fillScreen@color,w
  4720  0313  00A3               	movwf	fillRect@color
  4721  0314  3000               	movlw	0
  4722  0315  3184  246A         	fcall	_fillRect
  4723  0317  0008               	return
  4724  0318                     __end_of_fillScreen:	
  4725                           
  4726                           	psect	text13
  4727  05A2                     __ptext13:	
  4728 ;; *************** function _drawtext *****************
  4729 ;; Defined at:
  4730 ;;		line 465 in file "main.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  x               1    wreg     unsigned char 
  4733 ;;  y               1   36[BANK0 ] unsigned char 
  4734 ;;  _text           2   37[BANK0 ] PTR unsigned char 
  4735 ;;		 -> STR_1(12), 
  4736 ;;  color           2   39[BANK0 ] unsigned short 
  4737 ;;  bg              2   41[BANK0 ] unsigned short 
  4738 ;;  size            1   43[BANK0 ] unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  x               1   53[BANK0 ] unsigned char 
  4741 ;;  i               2   54[BANK0 ] unsigned short 
  4742 ;;  textsize        2   51[BANK0 ] unsigned short 
  4743 ;;  cursor_x        1   57[BANK0 ] unsigned char 
  4744 ;;  cursor_y        1   56[BANK0 ] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:       22 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    5
  4761 ;; This function calls:
  4762 ;;		___bmul
  4763 ;;		___wmul
  4764 ;;		_drawChar
  4765 ;;		_strlen
  4766 ;; This function is called by:
  4767 ;;		_SPI
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _drawtext
  4773  05A2                     _drawtext:	
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _drawtext: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4777                           ;drawtext@x stored from wreg
  4778  05A2  0020               	movlb	0	; select bank0
  4779  05A3  00D5               	movwf	drawtext@x
  4780                           
  4781                           ;main.c: 466:   uint8_t cursor_x, cursor_y;;main.c: 467:   uint16_t textsize, i;;main.c:
      +                           468:   cursor_x = x, cursor_y = y;
  4782  05A4  0855               	movf	drawtext@x,w
  4783  05A5  00CC               	movwf	??_drawtext
  4784  05A6  084C               	movf	??_drawtext,w
  4785  05A7  00D9               	movwf	drawtext@cursor_x
  4786  05A8  0844               	movf	drawtext@y,w
  4787  05A9  00CC               	movwf	??_drawtext
  4788  05AA  084C               	movf	??_drawtext,w
  4789  05AB  00D8               	movwf	drawtext@cursor_y
  4790                           
  4791                           ;main.c: 469:   textsize = strlen(_text);
  4792  05AC  0846               	movf	drawtext@_text+1,w
  4793  05AD  00F1               	movwf	strlen@s+1
  4794  05AE  0845               	movf	drawtext@_text,w
  4795  05AF  00F0               	movwf	strlen@s
  4796  05B0  3183  232E  3185   	fcall	_strlen
  4797  05B3  0871               	movf	?_strlen+1,w
  4798  05B4  0020               	movlb	0	; select bank0
  4799  05B5  00D4               	movwf	drawtext@textsize+1
  4800  05B6  0870               	movf	?_strlen,w
  4801  05B7  00D3               	movwf	drawtext@textsize
  4802                           
  4803                           ;main.c: 470:   for(i = 0; i < textsize; i++){
  4804  05B8  01D6               	clrf	drawtext@i
  4805  05B9  01D7               	clrf	drawtext@i+1
  4806  05BA                     l242:	
  4807  05BA  0854               	movf	drawtext@textsize+1,w
  4808  05BB  0257               	subwf	drawtext@i+1,w
  4809  05BC  1D03               	skipz
  4810  05BD  2DC0               	goto	u885
  4811  05BE  0853               	movf	drawtext@textsize,w
  4812  05BF  0256               	subwf	drawtext@i,w
  4813  05C0                     u885:	
  4814  05C0  1803               	btfsc	3,0
  4815  05C1  0008               	return
  4816                           
  4817                           ;main.c: 471:     if(wrap && ((cursor_x + size * 5) > 128)){
  4818  05C2  0869               	movf	_wrap,w
  4819  05C3  046A               	iorwf	_wrap+1,w
  4820  05C4  1903               	btfsc	3,2
  4821  05C5  2E0B               	goto	l1887
  4822  05C6  0859               	movf	drawtext@cursor_x,w
  4823  05C7  00CC               	movwf	??_drawtext
  4824  05C8  01CD               	clrf	??_drawtext+1
  4825  05C9  084B               	movf	drawtext@size,w
  4826  05CA  00CE               	movwf	??_drawtext+2
  4827  05CB  01CF               	clrf	??_drawtext+3
  4828  05CC  084E               	movf	??_drawtext+2,w
  4829  05CD  00F0               	movwf	___wmul@multiplier
  4830  05CE  084F               	movf	??_drawtext+3,w
  4831  05CF  00F1               	movwf	___wmul@multiplier+1
  4832  05D0  3005               	movlw	5
  4833  05D1  00F2               	movwf	___wmul@multiplicand
  4834  05D2  3000               	movlw	0
  4835  05D3  00F3               	movwf	___wmul@multiplicand+1
  4836  05D4  3183  2377  3185   	fcall	___wmul
  4837  05D7  0020               	movlb	0	; select bank0
  4838  05D8  084C               	movf	??_drawtext,w
  4839  05D9  0770               	addwf	?___wmul,w
  4840  05DA  00D0               	movwf	??_drawtext+4
  4841  05DB  084D               	movf	??_drawtext+1,w
  4842  05DC  3D71               	addwfc	?___wmul+1,w
  4843  05DD  00D1               	movwf	??_drawtext+5
  4844  05DE  0851               	movf	??_drawtext+5,w
  4845  05DF  3A80               	xorlw	128
  4846  05E0  00D2               	movwf	??_drawtext+6
  4847  05E1  3080               	movlw	128
  4848  05E2  0252               	subwf	??_drawtext+6,w
  4849  05E3  1D03               	skipz
  4850  05E4  2DE7               	goto	u845
  4851  05E5  3081               	movlw	129
  4852  05E6  0250               	subwf	??_drawtext+4,w
  4853  05E7                     u845:	
  4854  05E7  1C03               	skipc
  4855  05E8  2E0B               	goto	l1887
  4856                           
  4857                           ;main.c: 472:       cursor_x = 0;
  4858  05E9  0020               	movlb	0	; select bank0
  4859  05EA  01D9               	clrf	drawtext@cursor_x
  4860                           
  4861                           ;main.c: 473:       cursor_y = cursor_y + size * 7 + 3 ;
  4862  05EB  3007               	movlw	7
  4863  05EC  00CC               	movwf	??_drawtext
  4864  05ED  084C               	movf	??_drawtext,w
  4865  05EE  00F0               	movwf	___bmul@multiplicand
  4866  05EF  084B               	movf	drawtext@size,w
  4867  05F0  3182  22F5  3185   	fcall	___bmul
  4868  05F3  0020               	movlb	0	; select bank0
  4869  05F4  0758               	addwf	drawtext@cursor_y,w
  4870  05F5  3E03               	addlw	3
  4871  05F6  00CD               	movwf	??_drawtext+1
  4872  05F7  084D               	movf	??_drawtext+1,w
  4873  05F8  00D8               	movwf	drawtext@cursor_y
  4874                           
  4875                           ;main.c: 474:       if(cursor_y > 160) cursor_y = 160;
  4876  05F9  30A1               	movlw	161
  4877  05FA  0258               	subwf	drawtext@cursor_y,w
  4878  05FB  1C03               	skipc
  4879  05FC  2E01               	goto	l1883
  4880  05FD  30A0               	movlw	160
  4881  05FE  00CC               	movwf	??_drawtext
  4882  05FF  084C               	movf	??_drawtext,w
  4883  0600  00D8               	movwf	drawtext@cursor_y
  4884  0601                     l1883:	
  4885                           
  4886                           ;main.c: 475:       if(_text[i] == 0x20) goto _skip; }
  4887  0601  0845               	movf	drawtext@_text,w
  4888  0602  0756               	addwf	drawtext@i,w
  4889  0603  0084               	movwf	4
  4890  0604  0846               	movf	drawtext@_text+1,w
  4891  0605  3D57               	addwfc	drawtext@i+1,w
  4892  0606  0085               	movwf	5
  4893  0607  0012               	moviw fsr0++
  4894  0608  3A20               	xorlw	32
  4895  0609  1903               	btfsc	3,2
  4896  060A  2E40               	goto	l247
  4897  060B                     l1887:	
  4898                           
  4899                           ;main.c: 476:     drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  4900  060B  0020               	movlb	0	; select bank0
  4901  060C  0858               	movf	drawtext@cursor_y,w
  4902  060D  00CC               	movwf	??_drawtext
  4903  060E  084C               	movf	??_drawtext,w
  4904  060F  00B0               	movwf	drawChar@y
  4905  0610  0845               	movf	drawtext@_text,w
  4906  0611  0756               	addwf	drawtext@i,w
  4907  0612  0084               	movwf	4
  4908  0613  0846               	movf	drawtext@_text+1,w
  4909  0614  3D57               	addwfc	drawtext@i+1,w
  4910  0615  0085               	movwf	5
  4911  0616  0800               	movf	0,w	;code access
  4912  0617  00CD               	movwf	??_drawtext+1
  4913  0618  084D               	movf	??_drawtext+1,w
  4914  0619  00B1               	movwf	drawChar@c
  4915  061A  0848               	movf	drawtext@color+1,w
  4916  061B  00B3               	movwf	drawChar@color+1
  4917  061C  0847               	movf	drawtext@color,w
  4918  061D  00B2               	movwf	drawChar@color
  4919  061E  084A               	movf	drawtext@bg+1,w
  4920  061F  00B5               	movwf	drawChar@bg+1
  4921  0620  0849               	movf	drawtext@bg,w
  4922  0621  00B4               	movwf	drawChar@bg
  4923  0622  084B               	movf	drawtext@size,w
  4924  0623  00CE               	movwf	??_drawtext+2
  4925  0624  084E               	movf	??_drawtext+2,w
  4926  0625  00B6               	movwf	drawChar@size
  4927  0626  0859               	movf	drawtext@cursor_x,w
  4928  0627  3186  26F8  3185   	fcall	_drawChar
  4929                           
  4930                           ;main.c: 477:     cursor_x = cursor_x + size * 6;
  4931  062A  3006               	movlw	6
  4932  062B  0020               	movlb	0	; select bank0
  4933  062C  00CC               	movwf	??_drawtext
  4934  062D  084C               	movf	??_drawtext,w
  4935  062E  00F0               	movwf	___bmul@multiplicand
  4936  062F  084B               	movf	drawtext@size,w
  4937  0630  3182  22F5  3185   	fcall	___bmul
  4938  0633  0020               	movlb	0	; select bank0
  4939  0634  0759               	addwf	drawtext@cursor_x,w
  4940  0635  00CD               	movwf	??_drawtext+1
  4941  0636  084D               	movf	??_drawtext+1,w
  4942  0637  00D9               	movwf	drawtext@cursor_x
  4943                           
  4944                           ;main.c: 478:     if(cursor_x > 128) cursor_x = 128;
  4945  0638  3081               	movlw	129
  4946  0639  0259               	subwf	drawtext@cursor_x,w
  4947  063A  1C03               	skipc
  4948  063B  2E40               	goto	l247
  4949  063C  3080               	movlw	128
  4950  063D  00CC               	movwf	??_drawtext
  4951  063E  084C               	movf	??_drawtext,w
  4952  063F  00D9               	movwf	drawtext@cursor_x
  4953  0640                     l247:	
  4954                           ;main.c: 479:     _skip:;}
  4955                           
  4956  0640  3001               	movlw	1
  4957  0641  07D6               	addwf	drawtext@i,f
  4958  0642  3000               	movlw	0
  4959  0643  3DD7               	addwfc	drawtext@i+1,f
  4960  0644  2DBA               	goto	l242
  4961  0645                     __end_of_drawtext:	
  4962                           
  4963                           	psect	text14
  4964  032E                     __ptext14:	
  4965 ;; *************** function _strlen *****************
  4966 ;; Defined at:
  4967 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  s               2    0[COMMON] PTR const unsigned char 
  4970 ;;		 -> STR_1(12), 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  a               2    3[COMMON] PTR const unsigned char 
  4973 ;;		 -> STR_1(12), 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  2    0[COMMON] unsigned int 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;Total ram usage:        5 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_drawtext
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _strlen
  4998  032E                     _strlen:	
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5002  032E  0871               	movf	strlen@s+1,w
  5003  032F  00F4               	movwf	strlen@a+1
  5004  0330  0870               	movf	strlen@s,w
  5005  0331  00F3               	movwf	strlen@a
  5006  0332                     l1801:	
  5007  0332  0870               	movf	strlen@s,w
  5008  0333  0084               	movwf	4
  5009  0334  0871               	movf	strlen@s+1,w
  5010  0335  0085               	movwf	5
  5011  0336  0012               	moviw fsr0++
  5012  0337  1903               	btfsc	3,2
  5013  0338  2B3E               	goto	l1803
  5014  0339  3001               	movlw	1
  5015  033A  07F0               	addwf	strlen@s,f
  5016  033B  3000               	movlw	0
  5017  033C  3DF1               	addwfc	strlen@s+1,f
  5018  033D  2B32               	goto	l1801
  5019  033E                     l1803:	
  5020  033E  0873               	movf	strlen@a,w
  5021  033F  0270               	subwf	strlen@s,w
  5022  0340  00F0               	movwf	?_strlen
  5023  0341  0874               	movf	strlen@a+1,w
  5024  0342  3B71               	subwfb	strlen@s+1,w
  5025  0343  00F1               	movwf	?_strlen+1
  5026  0344  0008               	return
  5027  0345                     __end_of_strlen:	
  5028                           
  5029                           	psect	text15
  5030  06F8                     __ptext15:	
  5031 ;; *************** function _drawChar *****************
  5032 ;; Defined at:
  5033 ;;		line 482 in file "main.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  x               1    wreg     unsigned char 
  5036 ;;  y               1   16[BANK0 ] unsigned char 
  5037 ;;  c               1   17[BANK0 ] unsigned char 
  5038 ;;  color           2   18[BANK0 ] unsigned short 
  5039 ;;  bg              2   20[BANK0 ] unsigned short 
  5040 ;;  size            1   22[BANK0 ] unsigned char 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  x               1   31[BANK0 ] unsigned char 
  5043 ;;  line            1   30[BANK0 ] unsigned char 
  5044 ;;  i               2   34[BANK0 ] int 
  5045 ;;  j               2   32[BANK0 ] int 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:       20 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    4
  5062 ;; This function calls:
  5063 ;;		___bmul
  5064 ;;		___wmul
  5065 ;;		_drawPixel
  5066 ;;		_fillRect
  5067 ;; This function is called by:
  5068 ;;		_drawtext
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           
  5073                           ;psect for function _drawChar
  5074  06F8                     _drawChar:	
  5075                           
  5076                           ;incstack = 0
  5077                           ; Regs used in _drawChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5078                           ;drawChar@x stored from wreg
  5079  06F8  0020               	movlb	0	; select bank0
  5080  06F9  00BF               	movwf	drawChar@x
  5081                           
  5082                           ;main.c: 483:   int i, j;;main.c: 484:   if((x >= 128) || (y >= 160))
  5083  06FA  3080               	movlw	128
  5084  06FB  023F               	subwf	drawChar@x,w
  5085  06FC  1803               	skipnc
  5086  06FD  0008               	return
  5087  06FE  30A0               	movlw	160
  5088  06FF  0230               	subwf	drawChar@y,w
  5089  0700  1803               	btfsc	3,0
  5090  0701  0008               	return
  5091                           
  5092                           ;main.c: 486:   if(size < 1) size = 1;
  5093  0702  0836               	movf	drawChar@size,w
  5094  0703  1D03               	btfss	3,2
  5095  0704  2F07               	goto	l1815
  5096  0705  01B6               	clrf	drawChar@size
  5097  0706  0AB6               	incf	drawChar@size,f
  5098  0707                     l1815:	
  5099                           
  5100                           ;main.c: 487:   if((c < ' ') || (c > '~'))
  5101  0707  3020               	movlw	32
  5102  0708  0231               	subwf	drawChar@c,w
  5103  0709  1C03               	skipc
  5104  070A  2F0F               	goto	l1819
  5105  070B  307F               	movlw	127
  5106  070C  0231               	subwf	drawChar@c,w
  5107  070D  1C03               	skipc
  5108  070E  2F13               	goto	l1821
  5109  070F                     l1819:	
  5110                           
  5111                           ;main.c: 488:     c = '?';
  5112  070F  303F               	movlw	63
  5113  0710  00B7               	movwf	??_drawChar
  5114  0711  0837               	movf	??_drawChar,w
  5115  0712  00B1               	movwf	drawChar@c
  5116  0713                     l1821:	
  5117                           
  5118                           ;main.c: 489:   for(i=0; i<5; i++ ) {
  5119  0713  01C2               	clrf	drawChar@i
  5120  0714  01C3               	clrf	drawChar@i+1
  5121  0715                     l1827:	
  5122                           
  5123                           ;main.c: 490:     uint8_t line;;main.c: 491:     if(c < 'S')
  5124  0715  3053               	movlw	83
  5125  0716  0020               	movlb	0	; select bank0
  5126  0717  0231               	subwf	drawChar@c,w
  5127  0718  1803               	skipnc
  5128  0719  2F2D               	goto	l1831
  5129                           
  5130                           ;main.c: 492:       line = Font[(c - 32)*5 + i];
  5131  071A  0831               	movf	drawChar@c,w
  5132  071B  00B7               	movwf	??_drawChar
  5133  071C  01B8               	clrf	??_drawChar+1
  5134  071D  0837               	movf	??_drawChar,w
  5135  071E  00F0               	movwf	___wmul@multiplier
  5136  071F  0838               	movf	??_drawChar+1,w
  5137  0720  00F1               	movwf	___wmul@multiplier+1
  5138  0721  3005               	movlw	5
  5139  0722  00F2               	movwf	___wmul@multiplicand
  5140  0723  3000               	movlw	0
  5141  0724  00F3               	movwf	___wmul@multiplicand+1
  5142  0725  3183  2377  3186   	fcall	___wmul
  5143  0728  3060               	movlw	low ((_Font| (0+32768)+65376))
  5144  0729  0020               	movlb	0	; select bank0
  5145  072A  00B9               	movwf	??_drawChar+2
  5146  072B  3087               	movlw	high ((_Font| (0+32768)+65376))
  5147  072C  2F3F               	goto	L1
  5148  072D                     l1831:	
  5149                           
  5150                           ;main.c: 494:       line = Font2[(c - 'S')*5 + i];
  5151  072D  0831               	movf	drawChar@c,w
  5152  072E  00B7               	movwf	??_drawChar
  5153  072F  01B8               	clrf	??_drawChar+1
  5154  0730  0837               	movf	??_drawChar,w
  5155  0731  00F0               	movwf	___wmul@multiplier
  5156  0732  0838               	movf	??_drawChar+1,w
  5157  0733  00F1               	movwf	___wmul@multiplier+1
  5158  0734  3005               	movlw	5
  5159  0735  00F2               	movwf	___wmul@multiplicand
  5160  0736  3000               	movlw	0
  5161  0737  00F3               	movwf	___wmul@multiplicand+1
  5162  0738  3183  2377  3186   	fcall	___wmul
  5163  073B  3060               	movlw	low ((_Font2| (0+32768)+65121))
  5164  073C  0020               	movlb	0	; select bank0
  5165  073D  00B9               	movwf	??_drawChar+2
  5166  073E  3087               	movlw	high ((_Font2| (0+32768)+65121))
  5167  073F                     L1:	
  5168  073F  00BA               	movwf	??_drawChar+3
  5169  0740  0870               	movf	?___wmul,w
  5170  0741  0739               	addwf	??_drawChar+2,w
  5171  0742  00BB               	movwf	??_drawChar+4
  5172  0743  0871               	movf	?___wmul+1,w
  5173  0744  3D3A               	addwfc	??_drawChar+3,w
  5174  0745  00BC               	movwf	??_drawChar+5
  5175  0746  083B               	movf	??_drawChar+4,w
  5176  0747  0742               	addwf	drawChar@i,w
  5177  0748  0084               	movwf	4
  5178  0749  083C               	movf	??_drawChar+5,w
  5179  074A  3D43               	addwfc	drawChar@i+1,w
  5180  074B  0085               	movwf	5
  5181  074C  0800               	movf	0,w	;code access
  5182  074D  00BD               	movwf	??_drawChar+6
  5183  074E  083D               	movf	??_drawChar+6,w
  5184  074F  00BE               	movwf	drawChar@line
  5185                           
  5186                           ;main.c: 495:     for(j=0; j<7; j++, line >>= 1) {
  5187  0750  01C0               	clrf	drawChar@j
  5188  0751  01C1               	clrf	drawChar@j+1
  5189  0752                     l265:	
  5190                           
  5191                           ;main.c: 496:       if(line & 0x01) {
  5192  0752  0020               	movlb	0	; select bank0
  5193  0753  1C3E               	btfss	drawChar@line,0
  5194  0754  2F80               	goto	l1845
  5195                           
  5196                           ;main.c: 497:         if(size == 1) drawPixel(x+i, y+j, color);
  5197  0755  0336               	decf	drawChar@size,w
  5198  0756  1D03               	btfss	3,2
  5199  0757  2F67               	goto	l1843
  5200  0758  0830               	movf	drawChar@y,w
  5201  0759  0740               	addwf	drawChar@j,w
  5202  075A  00B7               	movwf	??_drawChar
  5203  075B  0837               	movf	??_drawChar,w
  5204  075C  00A0               	movwf	drawPixel@y
  5205  075D  0833               	movf	drawChar@color+1,w
  5206  075E  00A2               	movwf	drawPixel@color+1
  5207  075F  0832               	movf	drawChar@color,w
  5208  0760  00A1               	movwf	drawPixel@color
  5209  0761  083F               	movf	drawChar@x,w
  5210  0762  0742               	addwf	drawChar@i,w
  5211  0763  3184  2437  3186   	fcall	_drawPixel
  5212  0766  2FC0               	goto	l1853
  5213  0767                     l1843:	
  5214  0767  0840               	movf	drawChar@j,w
  5215  0768  00B7               	movwf	??_drawChar
  5216  0769  0837               	movf	??_drawChar,w
  5217  076A  00F0               	movwf	___bmul@multiplicand
  5218  076B  0836               	movf	drawChar@size,w
  5219  076C  3182  22F5  3186   	fcall	___bmul
  5220  076F  0020               	movlb	0	; select bank0
  5221  0770  0730               	addwf	drawChar@y,w
  5222  0771  00B8               	movwf	??_drawChar+1
  5223  0772  0838               	movf	??_drawChar+1,w
  5224  0773  00A0               	movwf	fillRect@y
  5225  0774  0836               	movf	drawChar@size,w
  5226  0775  00B9               	movwf	??_drawChar+2
  5227  0776  0839               	movf	??_drawChar+2,w
  5228  0777  00A1               	movwf	fillRect@w
  5229  0778  0836               	movf	drawChar@size,w
  5230  0779  00BA               	movwf	??_drawChar+3
  5231  077A  083A               	movf	??_drawChar+3,w
  5232  077B  00A2               	movwf	fillRect@h
  5233  077C  0833               	movf	drawChar@color+1,w
  5234  077D  00A4               	movwf	fillRect@color+1
  5235  077E  0832               	movf	drawChar@color,w
  5236  077F  2FB2               	goto	L2
  5237  0780                     l1845:	
  5238  0780  0833               	movf	drawChar@color+1,w
  5239  0781  0635               	xorwf	drawChar@bg+1,w
  5240  0782  1D03               	skipz
  5241  0783  2F86               	goto	u795
  5242  0784  0832               	movf	drawChar@color,w
  5243  0785  0634               	xorwf	drawChar@bg,w
  5244  0786                     u795:	
  5245  0786  1903               	skipnz
  5246  0787  2FC0               	goto	l1853
  5247                           
  5248                           ;main.c: 501:            if(size == 1) drawPixel(x+i, y+j, bg);
  5249  0788  0336               	decf	drawChar@size,w
  5250  0789  1D03               	btfss	3,2
  5251  078A  2F9A               	goto	l1851
  5252  078B  0830               	movf	drawChar@y,w
  5253  078C  0740               	addwf	drawChar@j,w
  5254  078D  00B7               	movwf	??_drawChar
  5255  078E  0837               	movf	??_drawChar,w
  5256  078F  00A0               	movwf	drawPixel@y
  5257  0790  0835               	movf	drawChar@bg+1,w
  5258  0791  00A2               	movwf	drawPixel@color+1
  5259  0792  0834               	movf	drawChar@bg,w
  5260  0793  00A1               	movwf	drawPixel@color
  5261  0794  083F               	movf	drawChar@x,w
  5262  0795  0742               	addwf	drawChar@i,w
  5263  0796  3184  2437  3186   	fcall	_drawPixel
  5264  0799  2FC0               	goto	l1853
  5265  079A                     l1851:	
  5266  079A  0840               	movf	drawChar@j,w
  5267  079B  00B7               	movwf	??_drawChar
  5268  079C  0837               	movf	??_drawChar,w
  5269  079D  00F0               	movwf	___bmul@multiplicand
  5270  079E  0836               	movf	drawChar@size,w
  5271  079F  3182  22F5  3186   	fcall	___bmul
  5272  07A2  0020               	movlb	0	; select bank0
  5273  07A3  0730               	addwf	drawChar@y,w
  5274  07A4  00B8               	movwf	??_drawChar+1
  5275  07A5  0838               	movf	??_drawChar+1,w
  5276  07A6  00A0               	movwf	fillRect@y
  5277  07A7  0836               	movf	drawChar@size,w
  5278  07A8  00B9               	movwf	??_drawChar+2
  5279  07A9  0839               	movf	??_drawChar+2,w
  5280  07AA  00A1               	movwf	fillRect@w
  5281  07AB  0836               	movf	drawChar@size,w
  5282  07AC  00BA               	movwf	??_drawChar+3
  5283  07AD  083A               	movf	??_drawChar+3,w
  5284  07AE  00A2               	movwf	fillRect@h
  5285  07AF  0835               	movf	drawChar@bg+1,w
  5286  07B0  00A4               	movwf	fillRect@color+1
  5287  07B1  0834               	movf	drawChar@bg,w
  5288  07B2                     L2:	
  5289  07B2  00A3               	movwf	fillRect@color
  5290  07B3  0842               	movf	drawChar@i,w
  5291  07B4  00BB               	movwf	??_drawChar+4
  5292  07B5  083B               	movf	??_drawChar+4,w
  5293  07B6  00F0               	movwf	___bmul@multiplicand
  5294  07B7  0836               	movf	drawChar@size,w
  5295  07B8  3182  22F5  3186   	fcall	___bmul
  5296  07BB  0020               	movlb	0	; select bank0
  5297  07BC  073F               	addwf	drawChar@x,w
  5298  07BD  3184  246A  3186   	fcall	_fillRect
  5299  07C0                     l1853:	
  5300                           
  5301                           ;main.c: 504:     }
  5302  07C0  3001               	movlw	1
  5303  07C1  0020               	movlb	0	; select bank0
  5304  07C2  07C0               	addwf	drawChar@j,f
  5305  07C3  3000               	movlw	0
  5306  07C4  3DC1               	addwfc	drawChar@j+1,f
  5307  07C5  1003               	clrc
  5308  07C6  0CBE               	rrf	drawChar@line,f
  5309  07C7  0841               	movf	drawChar@j+1,w
  5310  07C8  3A80               	xorlw	128
  5311  07C9  00B7               	movwf	??_drawChar
  5312  07CA  3080               	movlw	128
  5313  07CB  0237               	subwf	??_drawChar,w
  5314  07CC  1D03               	skipz
  5315  07CD  2FD0               	goto	u815
  5316  07CE  3007               	movlw	7
  5317  07CF  0240               	subwf	drawChar@j,w
  5318  07D0                     u815:	
  5319  07D0  1C03               	skipc
  5320  07D1  2F52               	goto	l265
  5321                           
  5322                           ;main.c: 505:   }
  5323  07D2  3001               	movlw	1
  5324  07D3  0020               	movlb	0	; select bank0
  5325  07D4  07C2               	addwf	drawChar@i,f
  5326  07D5  3000               	movlw	0
  5327  07D6  3DC3               	addwfc	drawChar@i+1,f
  5328  07D7  0843               	movf	drawChar@i+1,w
  5329  07D8  3A80               	xorlw	128
  5330  07D9  00B7               	movwf	??_drawChar
  5331  07DA  3080               	movlw	128
  5332  07DB  0237               	subwf	??_drawChar,w
  5333  07DC  1D03               	skipz
  5334  07DD  2FE0               	goto	u825
  5335  07DE  3005               	movlw	5
  5336  07DF  0242               	subwf	drawChar@i,w
  5337  07E0                     u825:	
  5338  07E0  1803               	btfsc	3,0
  5339  07E1  0008               	return
  5340  07E2  2F15               	goto	l1827
  5341  07E3                     __end_of_drawChar:	
  5342                           
  5343                           	psect	text16
  5344  046A                     __ptext16:	
  5345 ;; *************** function _fillRect *****************
  5346 ;; Defined at:
  5347 ;;		line 336 in file "main.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  x               1    wreg     unsigned char 
  5350 ;;  y               1    0[BANK0 ] unsigned char 
  5351 ;;  w               1    1[BANK0 ] unsigned char 
  5352 ;;  h               1    2[BANK0 ] unsigned char 
  5353 ;;  color           2    3[BANK0 ] unsigned short 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  x               1   15[BANK0 ] unsigned char 
  5356 ;;  low             1   14[BANK0 ] unsigned char 
  5357 ;;  high            1   13[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5367 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;Total ram usage:       16 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    3
  5374 ;; This function calls:
  5375 ;;		_setAddrWindow
  5376 ;;		_spiwrite
  5377 ;; This function is called by:
  5378 ;;		_fillScreen
  5379 ;;		_drawChar
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _fillRect
  5385  046A                     _fillRect:	
  5386                           
  5387                           ;incstack = 0
  5388                           ; Regs used in _fillRect: [wreg+status,2+status,0+pclath+cstack]
  5389                           ;fillRect@x stored from wreg
  5390  046A  0020               	movlb	0	; select bank0
  5391  046B  00AF               	movwf	fillRect@x
  5392                           
  5393                           ;main.c: 337:     uint8_t high;;main.c: 338:     uint8_t low;;main.c: 339:     if((x >= 
      +                          128) || (y >= 160)) return;
  5394  046C  3080               	movlw	128
  5395  046D  022F               	subwf	fillRect@x,w
  5396  046E  1803               	skipnc
  5397  046F  0008               	return
  5398  0470  30A0               	movlw	160
  5399  0471  0220               	subwf	fillRect@y,w
  5400  0472  1803               	btfsc	3,0
  5401  0473  0008               	return
  5402                           
  5403                           ;main.c: 340:     if((x + w - 1) >= 128) w = 128 - x;
  5404  0474  082F               	movf	fillRect@x,w
  5405  0475  0721               	addwf	fillRect@w,w
  5406  0476  00A5               	movwf	??_fillRect
  5407  0477  01A6               	clrf	??_fillRect+1
  5408  0478  0DA6               	rlf	??_fillRect+1,f
  5409  0479  0825               	movf	??_fillRect,w
  5410  047A  3EFF               	addlw	255
  5411  047B  00A7               	movwf	??_fillRect+2
  5412  047C  30FF               	movlw	255
  5413  047D  3D26               	addwfc	??_fillRect+1,w
  5414  047E  00A8               	movwf	??_fillRect+3
  5415  047F  0828               	movf	??_fillRect+3,w
  5416  0480  3A80               	xorlw	128
  5417  0481  00A9               	movwf	??_fillRect+4
  5418  0482  3080               	movlw	128
  5419  0483  0229               	subwf	??_fillRect+4,w
  5420  0484  1D03               	skipz
  5421  0485  2C88               	goto	u575
  5422  0486  3080               	movlw	128
  5423  0487  0227               	subwf	??_fillRect+2,w
  5424  0488                     u575:	
  5425  0488  1C03               	skipc
  5426  0489  2C90               	goto	l182
  5427  048A  0020               	movlb	0	; select bank0
  5428  048B  082F               	movf	fillRect@x,w
  5429  048C  3C80               	sublw	128
  5430  048D  00A5               	movwf	??_fillRect
  5431  048E  0825               	movf	??_fillRect,w
  5432  048F  00A1               	movwf	fillRect@w
  5433  0490                     l182:	
  5434                           
  5435                           ;main.c: 341:     if((y + h - 1) >= 160) h = 160 - y;
  5436  0490  0020               	movlb	0	; select bank0
  5437  0491  0820               	movf	fillRect@y,w
  5438  0492  0722               	addwf	fillRect@h,w
  5439  0493  00A5               	movwf	??_fillRect
  5440  0494  01A6               	clrf	??_fillRect+1
  5441  0495  0DA6               	rlf	??_fillRect+1,f
  5442  0496  0825               	movf	??_fillRect,w
  5443  0497  3EFF               	addlw	255
  5444  0498  00A7               	movwf	??_fillRect+2
  5445  0499  30FF               	movlw	255
  5446  049A  3D26               	addwfc	??_fillRect+1,w
  5447  049B  00A8               	movwf	??_fillRect+3
  5448  049C  0828               	movf	??_fillRect+3,w
  5449  049D  3A80               	xorlw	128
  5450  049E  00A9               	movwf	??_fillRect+4
  5451  049F  3080               	movlw	128
  5452  04A0  0229               	subwf	??_fillRect+4,w
  5453  04A1  1D03               	skipz
  5454  04A2  2CA5               	goto	u585
  5455  04A3  30A0               	movlw	160
  5456  04A4  0227               	subwf	??_fillRect+2,w
  5457  04A5                     u585:	
  5458  04A5  1C03               	skipc
  5459  04A6  2CAD               	goto	l1641
  5460  04A7  0020               	movlb	0	; select bank0
  5461  04A8  0820               	movf	fillRect@y,w
  5462  04A9  3CA0               	sublw	160
  5463  04AA  00A5               	movwf	??_fillRect
  5464  04AB  0825               	movf	??_fillRect,w
  5465  04AC  00A2               	movwf	fillRect@h
  5466  04AD                     l1641:	
  5467                           
  5468                           ;main.c: 343:     setAddrWindow(x, y, x+w-1, y+h-1);
  5469  04AD  0020               	movlb	0	; select bank0
  5470  04AE  082F               	movf	fillRect@x,w
  5471  04AF  00A5               	movwf	??_fillRect
  5472  04B0  01A6               	clrf	??_fillRect+1
  5473  04B1  0825               	movf	??_fillRect,w
  5474  04B2  00F4               	movwf	setAddrWindow@x0
  5475  04B3  0826               	movf	??_fillRect+1,w
  5476  04B4  00F5               	movwf	setAddrWindow@x0+1
  5477  04B5  0820               	movf	fillRect@y,w
  5478  04B6  00A7               	movwf	??_fillRect+2
  5479  04B7  01A8               	clrf	??_fillRect+3
  5480  04B8  0827               	movf	??_fillRect+2,w
  5481  04B9  00F6               	movwf	setAddrWindow@y0
  5482  04BA  0828               	movf	??_fillRect+3,w
  5483  04BB  00F7               	movwf	setAddrWindow@y0+1
  5484  04BC  082F               	movf	fillRect@x,w
  5485  04BD  0721               	addwf	fillRect@w,w
  5486  04BE  00A9               	movwf	??_fillRect+4
  5487  04BF  01AA               	clrf	??_fillRect+5
  5488  04C0  0DAA               	rlf	??_fillRect+5,f
  5489  04C1  0829               	movf	??_fillRect+4,w
  5490  04C2  3EFF               	addlw	255
  5491  04C3  00F8               	movwf	setAddrWindow@x1
  5492  04C4  30FF               	movlw	255
  5493  04C5  3D2A               	addwfc	??_fillRect+5,w
  5494  04C6  00F9               	movwf	setAddrWindow@x1+1
  5495  04C7  0820               	movf	fillRect@y,w
  5496  04C8  0722               	addwf	fillRect@h,w
  5497  04C9  00AB               	movwf	??_fillRect+6
  5498  04CA  01AC               	clrf	??_fillRect+7
  5499  04CB  0DAC               	rlf	??_fillRect+7,f
  5500  04CC  082B               	movf	??_fillRect+6,w
  5501  04CD  3EFF               	addlw	255
  5502  04CE  00FA               	movwf	setAddrWindow@y1
  5503  04CF  30FF               	movlw	255
  5504  04D0  3D2C               	addwfc	??_fillRect+7,w
  5505  04D1  00FB               	movwf	setAddrWindow@y1+1
  5506  04D2  3183  23DF  3184   	fcall	_setAddrWindow
  5507                           
  5508                           ;main.c: 344:     high = color >> 8; low = color;
  5509  04D5  0020               	movlb	0	; select bank0
  5510  04D6  0824               	movf	fillRect@color+1,w
  5511  04D7  00A5               	movwf	??_fillRect
  5512  04D8  0825               	movf	??_fillRect,w
  5513  04D9  00AD               	movwf	fillRect@high
  5514  04DA  0823               	movf	fillRect@color,w
  5515  04DB  00A5               	movwf	??_fillRect
  5516  04DC  0825               	movf	??_fillRect,w
  5517  04DD  00AE               	movwf	fillRect@low
  5518  04DE  0022               	movlb	2	; select bank2
  5519  04DF  160C               	bsf	12,4	;volatile
  5520  04E0  108C               	bcf	12,1	;volatile
  5521                           
  5522                           ;main.c: 347:     for(y=h; y>0; y--) {
  5523  04E1  0020               	movlb	0	; select bank0
  5524  04E2  0822               	movf	fillRect@h,w
  5525  04E3  00A5               	movwf	??_fillRect
  5526  04E4  0825               	movf	??_fillRect,w
  5527  04E5  00A0               	movwf	fillRect@y
  5528  04E6  0820               	movf	fillRect@y,w
  5529  04E7  1903               	btfsc	3,2
  5530  04E8  2D02               	goto	l192
  5531  04E9                     l1657:	
  5532                           
  5533                           ;main.c: 348:         for(x = w; x > 0; x--) {
  5534  04E9  0821               	movf	fillRect@w,w
  5535  04EA  00A5               	movwf	??_fillRect
  5536  04EB  0825               	movf	??_fillRect,w
  5537  04EC  00AF               	movwf	fillRect@x
  5538  04ED                     l1659:	
  5539  04ED  082F               	movf	fillRect@x,w
  5540  04EE  1903               	btfsc	3,2
  5541  04EF  2CFD               	goto	l1669
  5542                           
  5543                           ;main.c: 349:             spiwrite(high);
  5544  04F0  082D               	movf	fillRect@high,w
  5545  04F1  3183  235D  3184   	fcall	_spiwrite
  5546                           
  5547                           ;main.c: 350:             spiwrite(low);
  5548  04F4  0020               	movlb	0	; select bank0
  5549  04F5  082E               	movf	fillRect@low,w
  5550  04F6  3183  235D  3184   	fcall	_spiwrite
  5551                           
  5552                           ;main.c: 351:         }
  5553  04F9  3001               	movlw	1
  5554  04FA  0020               	movlb	0	; select bank0
  5555  04FB  02AF               	subwf	fillRect@x,f
  5556  04FC  2CED               	goto	l1659
  5557  04FD                     l1669:	
  5558                           
  5559                           ;main.c: 352:     }
  5560  04FD  3001               	movlw	1
  5561  04FE  02A0               	subwf	fillRect@y,f
  5562  04FF  0820               	movf	fillRect@y,w
  5563  0500  1D03               	btfss	3,2
  5564  0501  2CE9               	goto	l1657
  5565  0502                     l192:	
  5566                           ;main.c: 353:   do { LATAbits.LATA1 = 1; } while(0);
  5567                           
  5568  0502  0022               	movlb	2	; select bank2
  5569  0503  148C               	bsf	12,1	;volatile
  5570  0504  0008               	return
  5571  0505                     __end_of_fillRect:	
  5572                           
  5573                           	psect	text17
  5574  0437                     __ptext17:	
  5575 ;; *************** function _drawPixel *****************
  5576 ;; Defined at:
  5577 ;;		line 508 in file "main.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  x               1    wreg     unsigned char 
  5580 ;;  y               1    0[BANK0 ] unsigned char 
  5581 ;;  color           2    1[BANK0 ] unsigned short 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  x               1   12[COMMON] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5593 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;Total ram usage:        8 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    3
  5600 ;; This function calls:
  5601 ;;		_setAddrWindow
  5602 ;;		_write_data
  5603 ;; This function is called by:
  5604 ;;		_drawChar
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _drawPixel
  5610  0437                     _drawPixel:	
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _drawPixel: [wreg+status,2+status,0+pclath+cstack]
  5614                           ;drawPixel@x stored from wreg
  5615  0437  00FC               	movwf	drawPixel@x
  5616                           
  5617                           ;main.c: 509:   if((x >= 128) || (y >= 160))
  5618  0438  3080               	movlw	128
  5619  0439  027C               	subwf	drawPixel@x,w
  5620  043A  1803               	skipnc
  5621  043B  0008               	return
  5622  043C  30A0               	movlw	160
  5623  043D  0020               	movlb	0	; select bank0
  5624  043E  0220               	subwf	drawPixel@y,w
  5625  043F  1803               	btfsc	3,0
  5626  0440  0008               	return
  5627                           
  5628                           ;main.c: 511:    setAddrWindow(x,y,x+1,y+1);
  5629  0441  087C               	movf	drawPixel@x,w
  5630  0442  00A3               	movwf	??_drawPixel
  5631  0443  01A4               	clrf	??_drawPixel+1
  5632  0444  0823               	movf	??_drawPixel,w
  5633  0445  00F4               	movwf	setAddrWindow@x0
  5634  0446  0824               	movf	??_drawPixel+1,w
  5635  0447  00F5               	movwf	setAddrWindow@x0+1
  5636  0448  0820               	movf	drawPixel@y,w
  5637  0449  00A5               	movwf	??_drawPixel+2
  5638  044A  01A6               	clrf	??_drawPixel+3
  5639  044B  0825               	movf	??_drawPixel+2,w
  5640  044C  00F6               	movwf	setAddrWindow@y0
  5641  044D  0826               	movf	??_drawPixel+3,w
  5642  044E  00F7               	movwf	setAddrWindow@y0+1
  5643  044F  087C               	movf	drawPixel@x,w
  5644  0450  3E01               	addlw	1
  5645  0451  00F8               	movwf	setAddrWindow@x1
  5646  0452  3000               	movlw	0
  5647  0453  1803               	skipnc
  5648  0454  3001               	movlw	1
  5649  0455  00F9               	movwf	setAddrWindow@x1+1
  5650  0456  0820               	movf	drawPixel@y,w
  5651  0457  3E01               	addlw	1
  5652  0458  00FA               	movwf	setAddrWindow@y1
  5653  0459  3000               	movlw	0
  5654  045A  1803               	skipnc
  5655  045B  3001               	movlw	1
  5656  045C  00FB               	movwf	setAddrWindow@y1+1
  5657  045D  3183  23DF  3184   	fcall	_setAddrWindow
  5658                           
  5659                           ;main.c: 512:   write_data(color >> 8);
  5660  0460  0020               	movlb	0	; select bank0
  5661  0461  0822               	movf	drawPixel@color+1,w
  5662  0462  3182  22E1  3184   	fcall	_write_data
  5663                           
  5664                           ;main.c: 513:   write_data(color & 0xFF);
  5665  0465  0020               	movlb	0	; select bank0
  5666  0466  0821               	movf	drawPixel@color,w
  5667  0467  3182  22E1         	fcall	_write_data
  5668  0469  0008               	return
  5669  046A                     __end_of_drawPixel:	
  5670                           
  5671                           	psect	text18
  5672  03DF                     __ptext18:	
  5673 ;; *************** function _setAddrWindow *****************
  5674 ;; Defined at:
  5675 ;;		line 356 in file "main.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  x0              2    4[COMMON] unsigned short 
  5678 ;;  y0              2    6[COMMON] unsigned short 
  5679 ;;  x1              2    8[COMMON] unsigned short 
  5680 ;;  y1              2   10[COMMON] unsigned short 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, pclath, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5692 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;Total ram usage:        8 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    2
  5699 ;; This function calls:
  5700 ;;		_write_command
  5701 ;;		_write_data
  5702 ;; This function is called by:
  5703 ;;		_fillRect
  5704 ;;		_drawPixel
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _setAddrWindow
  5710  03DF                     _setAddrWindow:	
  5711                           
  5712                           ;main.c: 357:     write_command(0x2A);
  5713                           
  5714                           ;incstack = 0
  5715                           ; Regs used in _setAddrWindow: [wreg+status,2+status,0+pclath+cstack]
  5716  03DF  302A               	movlw	42
  5717  03E0  3182  22D7  3183   	fcall	_write_command
  5718                           
  5719                           ;main.c: 358:     write_data(0);
  5720  03E3  3000               	movlw	0
  5721  03E4  3182  22E1  3183   	fcall	_write_data
  5722                           
  5723                           ;main.c: 359:     write_data(x0 + colstart);
  5724  03E7  0874               	movf	setAddrWindow@x0,w
  5725  03E8  3182  22E1  3183   	fcall	_write_data
  5726                           
  5727                           ;main.c: 360:     write_data(0);
  5728  03EB  3000               	movlw	0
  5729  03EC  3182  22E1  3183   	fcall	_write_data
  5730                           
  5731                           ;main.c: 361:     write_data(x1 + colstart);
  5732  03EF  0878               	movf	setAddrWindow@x1,w
  5733  03F0  3182  22E1  3183   	fcall	_write_data
  5734                           
  5735                           ;main.c: 362:     write_command(0x2B);
  5736  03F3  302B               	movlw	43
  5737  03F4  3182  22D7  3183   	fcall	_write_command
  5738                           
  5739                           ;main.c: 363:     write_data(0);
  5740  03F7  3000               	movlw	0
  5741  03F8  3182  22E1  3183   	fcall	_write_data
  5742                           
  5743                           ;main.c: 364:     write_data(y0+rowstart);
  5744  03FB  0876               	movf	setAddrWindow@y0,w
  5745  03FC  3182  22E1  3183   	fcall	_write_data
  5746                           
  5747                           ;main.c: 365:     write_data(0);
  5748  03FF  3000               	movlw	0
  5749  0400  3182  22E1  3183   	fcall	_write_data
  5750                           
  5751                           ;main.c: 366:     write_data(y1+rowstart);
  5752  0403  087A               	movf	setAddrWindow@y1,w
  5753  0404  3182  22E1  3183   	fcall	_write_data
  5754                           
  5755                           ;main.c: 367:     write_command(0x2C);
  5756  0407  302C               	movlw	44
  5757  0408  3182  22D7         	fcall	_write_command
  5758  040A  0008               	return
  5759  040B                     __end_of_setAddrWindow:	
  5760                           
  5761                           	psect	text19
  5762  0377                     __ptext19:	
  5763 ;; *************** function ___wmul *****************
  5764 ;; Defined at:
  5765 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  multiplier      2    0[COMMON] unsigned int 
  5768 ;;  multiplicand    2    2[COMMON] unsigned int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  product         2    4[COMMON] unsigned int 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2    0[COMMON] unsigned int 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        6 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_drawtext
  5790 ;;		_drawChar
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function ___wmul
  5796  0377                     ___wmul:	
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5800  0377  01F4               	clrf	___wmul@product
  5801  0378  01F5               	clrf	___wmul@product+1
  5802  0379                     l1679:	
  5803  0379  1C70               	btfss	___wmul@multiplier,0
  5804  037A  2B7F               	goto	l627
  5805  037B  0872               	movf	___wmul@multiplicand,w
  5806  037C  07F4               	addwf	___wmul@product,f
  5807  037D  0873               	movf	___wmul@multiplicand+1,w
  5808  037E  3DF5               	addwfc	___wmul@product+1,f
  5809  037F                     l627:	
  5810  037F  3001               	movlw	1
  5811  0380                     u655:	
  5812  0380  35F2               	lslf	___wmul@multiplicand,f
  5813  0381  0DF3               	rlf	___wmul@multiplicand+1,f
  5814  0382  0B89               	decfsz	9,f
  5815  0383  2B80               	goto	u655
  5816  0384  3001               	movlw	1
  5817  0385                     u665:	
  5818  0385  36F1               	lsrf	___wmul@multiplier+1,f
  5819  0386  0CF0               	rrf	___wmul@multiplier,f
  5820  0387  0B89               	decfsz	9,f
  5821  0388  2B85               	goto	u665
  5822  0389  0870               	movf	___wmul@multiplier,w
  5823  038A  0471               	iorwf	___wmul@multiplier+1,w
  5824  038B  1D03               	btfss	3,2
  5825  038C  2B79               	goto	l1679
  5826  038D  0875               	movf	___wmul@product+1,w
  5827  038E  00F1               	movwf	?___wmul+1
  5828  038F  0874               	movf	___wmul@product,w
  5829  0390  00F0               	movwf	?___wmul
  5830  0391  0008               	return
  5831  0392                     __end_of___wmul:	
  5832                           
  5833                           	psect	text20
  5834  02F5                     __ptext20:	
  5835 ;; *************** function ___bmul *****************
  5836 ;; Defined at:
  5837 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  multiplier      1    wreg     unsigned char 
  5840 ;;  multiplicand    1    0[COMMON] unsigned char 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  multiplier      1    3[COMMON] unsigned char 
  5843 ;;  product         1    2[COMMON] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      unsigned char 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;Total ram usage:        4 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_drawtext
  5863 ;;		_drawChar
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function ___bmul
  5869  02F5                     ___bmul:	
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5873                           ;___bmul@multiplier stored from wreg
  5874  02F5  00F3               	movwf	___bmul@multiplier
  5875  02F6  01F2               	clrf	___bmul@product
  5876  02F7                     l1693:	
  5877  02F7  1C73               	btfss	___bmul@multiplier,0
  5878  02F8  2AFD               	goto	l1697
  5879  02F9  0870               	movf	___bmul@multiplicand,w
  5880  02FA  00F1               	movwf	??___bmul
  5881  02FB  0871               	movf	??___bmul,w
  5882  02FC  07F2               	addwf	___bmul@product,f
  5883  02FD                     l1697:	
  5884  02FD  1003               	clrc
  5885  02FE  0DF0               	rlf	___bmul@multiplicand,f
  5886  02FF  1003               	clrc
  5887  0300  0CF3               	rrf	___bmul@multiplier,f
  5888  0301  0873               	movf	___bmul@multiplier,w
  5889  0302  1D03               	btfss	3,2
  5890  0303  2AF7               	goto	l1693
  5891  0304  0872               	movf	___bmul@product,w
  5892  0305  0008               	return
  5893  0306                     __end_of___bmul:	
  5894                           
  5895                           	psect	text21
  5896  0318                     __ptext21:	
  5897 ;; *************** function _BlackTab_Init *****************
  5898 ;; Defined at:
  5899 ;;		line 320 in file "main.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      void 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0, pclath, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;Total ram usage:        0 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    3
  5920 ;; This function calls:
  5921 ;;		_Rcmd1
  5922 ;;		_Rcmd2red
  5923 ;;		_Rcmd3
  5924 ;;		_write_command
  5925 ;;		_write_data
  5926 ;; This function is called by:
  5927 ;;		_SPI
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _BlackTab_Init
  5933  0318                     _BlackTab_Init:	
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _BlackTab_Init: [wreg+status,2+status,0+pclath+cstack]
  5937                           ;main.c: 321:     do { LATAbits.LATA1 = 1; } while(0);
  5938  0318  0022               	movlb	2	; select bank2
  5939  0319  148C               	bsf	12,1	;volatile
  5940                           
  5941                           ;main.c: 322:     do { LATAbits.LATA4 = 0; } while(0);
  5942  031A  120C               	bcf	12,4	;volatile
  5943                           
  5944                           ;main.c: 323:     do { LATCbits.LATC7 = 0; } while(0);
  5945  031B  138E               	bcf	14,7	;volatile
  5946                           
  5947                           ;main.c: 324:     do { LATBbits.LATB7 = 0; } while(0);
  5948  031C  138D               	bcf	13,7	;volatile
  5949                           
  5950                           ;main.c: 326:     Rcmd1();
  5951  031D  3186  2645  3183   	fcall	_Rcmd1
  5952                           
  5953                           ;main.c: 327:     Rcmd2red();
  5954  0320  3183  23B7  3183   	fcall	_Rcmd2red
  5955                           
  5956                           ;main.c: 328:     Rcmd3();
  5957  0323  3185  2505  3183   	fcall	_Rcmd3
  5958                           
  5959                           ;main.c: 329:     write_command(0x36);
  5960  0326  3036               	movlw	54
  5961  0327  3182  22D7  3183   	fcall	_write_command
  5962                           
  5963                           ;main.c: 330:     write_data(0xC0);
  5964  032A  30C0               	movlw	192
  5965  032B  3182  22E1         	fcall	_write_data
  5966  032D  0008               	return
  5967  032E                     __end_of_BlackTab_Init:	
  5968                           
  5969                           	psect	text22
  5970  0505                     __ptext22:	
  5971 ;; *************** function _Rcmd3 *****************
  5972 ;; Defined at:
  5973 ;;		line 448 in file "main.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;		None
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0, pclath, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;Total ram usage:        1 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    2
  5994 ;; This function calls:
  5995 ;;		_write_command
  5996 ;;		_write_data
  5997 ;; This function is called by:
  5998 ;;		_BlackTab_Init
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _Rcmd3
  6004  0505                     _Rcmd3:	
  6005                           
  6006                           ;main.c: 449:   write_command(0xE0);
  6007                           
  6008                           ;incstack = 0
  6009                           ; Regs used in _Rcmd3: [wreg+status,2+status,0+pclath+cstack]
  6010  0505  30E0               	movlw	224
  6011  0506  3182  22D7  3185   	fcall	_write_command
  6012                           
  6013                           ;main.c: 450:   write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x12);
  6014  0509  3002               	movlw	2
  6015  050A  3182  22E1  3185   	fcall	_write_data
  6016  050D  301C               	movlw	28
  6017  050E  3182  22E1  3185   	fcall	_write_data
  6018  0511  3007               	movlw	7
  6019  0512  3182  22E1  3185   	fcall	_write_data
  6020  0515  3012               	movlw	18
  6021  0516  3182  22E1  3185   	fcall	_write_data
  6022                           
  6023                           ;main.c: 451:   write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2D);
  6024  0519  3037               	movlw	55
  6025  051A  3182  22E1  3185   	fcall	_write_data
  6026  051D  3032               	movlw	50
  6027  051E  3182  22E1  3185   	fcall	_write_data
  6028  0521  3029               	movlw	41
  6029  0522  3182  22E1  3185   	fcall	_write_data
  6030  0525  302D               	movlw	45
  6031  0526  3182  22E1  3185   	fcall	_write_data
  6032                           
  6033                           ;main.c: 452:   write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x39);
  6034  0529  3029               	movlw	41
  6035  052A  3182  22E1  3185   	fcall	_write_data
  6036  052D  3025               	movlw	37
  6037  052E  3182  22E1  3185   	fcall	_write_data
  6038  0531  302B               	movlw	43
  6039  0532  3182  22E1  3185   	fcall	_write_data
  6040  0535  3039               	movlw	57
  6041  0536  3182  22E1  3185   	fcall	_write_data
  6042                           
  6043                           ;main.c: 453:   write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x10);
  6044  0539  3000               	movlw	0
  6045  053A  3182  22E1  3185   	fcall	_write_data
  6046  053D  3001               	movlw	1
  6047  053E  3182  22E1  3185   	fcall	_write_data
  6048  0541  3003               	movlw	3
  6049  0542  3182  22E1  3185   	fcall	_write_data
  6050  0545  3010               	movlw	16
  6051  0546  3182  22E1  3185   	fcall	_write_data
  6052                           
  6053                           ;main.c: 454:   write_command(0xE1);
  6054  0549  30E1               	movlw	225
  6055  054A  3182  22D7  3185   	fcall	_write_command
  6056                           
  6057                           ;main.c: 455:   write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x06);
  6058  054D  3003               	movlw	3
  6059  054E  3182  22E1  3185   	fcall	_write_data
  6060  0551  301D               	movlw	29
  6061  0552  3182  22E1  3185   	fcall	_write_data
  6062  0555  3007               	movlw	7
  6063  0556  3182  22E1  3185   	fcall	_write_data
  6064  0559  3006               	movlw	6
  6065  055A  3182  22E1  3185   	fcall	_write_data
  6066                           
  6067                           ;main.c: 456:   write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2D);
  6068  055D  302E               	movlw	46
  6069  055E  3182  22E1  3185   	fcall	_write_data
  6070  0561  302C               	movlw	44
  6071  0562  3182  22E1  3185   	fcall	_write_data
  6072  0565  3029               	movlw	41
  6073  0566  3182  22E1  3185   	fcall	_write_data
  6074  0569  302D               	movlw	45
  6075  056A  3182  22E1  3185   	fcall	_write_data
  6076                           
  6077                           ;main.c: 457:   write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3F);
  6078  056D  302E               	movlw	46
  6079  056E  3182  22E1  3185   	fcall	_write_data
  6080  0571  302E               	movlw	46
  6081  0572  3182  22E1  3185   	fcall	_write_data
  6082  0575  3037               	movlw	55
  6083  0576  3182  22E1  3185   	fcall	_write_data
  6084  0579  303F               	movlw	63
  6085  057A  3182  22E1  3185   	fcall	_write_data
  6086                           
  6087                           ;main.c: 458:   write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x10);
  6088  057D  3000               	movlw	0
  6089  057E  3182  22E1  3185   	fcall	_write_data
  6090  0581  3000               	movlw	0
  6091  0582  3182  22E1  3185   	fcall	_write_data
  6092  0585  3002               	movlw	2
  6093  0586  3182  22E1  3185   	fcall	_write_data
  6094  0589  3010               	movlw	16
  6095  058A  3182  22E1  3185   	fcall	_write_data
  6096                           
  6097                           ;main.c: 459:   write_command(0x13);
  6098  058D  3013               	movlw	19
  6099  058E  3182  22D7  3185   	fcall	_write_command
  6100                           
  6101                           ;main.c: 460:   _delay((unsigned long)((10)*(500000/4000.0)));
  6102  0591  30FA               	movlw	250
  6103  0592                     u957:	
  6104  0592  3200               	nop2
  6105  0593  0B89               	decfsz	9,f
  6106  0594  2D92               	goto	u957
  6107                           
  6108                           ;main.c: 461:   write_command(0x29);
  6109  0595  3029               	movlw	41
  6110  0596  3182  22D7  3185   	fcall	_write_command
  6111                           
  6112                           ;main.c: 462:   _delay((unsigned long)((100)*(500000/4000.0)));
  6113  0599  3011               	movlw	17
  6114  059A  00F4               	movwf	??_Rcmd3
  6115  059B  303A               	movlw	58
  6116  059C                     u967:	
  6117  059C  0B89               	decfsz	9,f
  6118  059D  2D9C               	goto	u967
  6119  059E  0BF4               	decfsz	??_Rcmd3,f
  6120  059F  2D9C               	goto	u967
  6121  05A0  3200               	nop2
  6122  05A1  0008               	return
  6123  05A2                     __end_of_Rcmd3:	
  6124                           
  6125                           	psect	text23
  6126  03B7                     __ptext23:	
  6127 ;; *************** function _Rcmd2red *****************
  6128 ;; Defined at:
  6129 ;;		line 439 in file "main.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0, pclath, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    2
  6150 ;; This function calls:
  6151 ;;		_write_command
  6152 ;;		_write_data
  6153 ;; This function is called by:
  6154 ;;		_BlackTab_Init
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _Rcmd2red
  6160  03B7                     _Rcmd2red:	
  6161                           
  6162                           ;main.c: 440:   write_command(0x2A);
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in _Rcmd2red: [wreg+status,2+status,0+pclath+cstack]
  6166  03B7  302A               	movlw	42
  6167  03B8  3182  22D7  3183   	fcall	_write_command
  6168                           
  6169                           ;main.c: 441:   write_data(0x00); write_data(0x00);
  6170  03BB  3000               	movlw	0
  6171  03BC  3182  22E1  3183   	fcall	_write_data
  6172  03BF  3000               	movlw	0
  6173  03C0  3182  22E1  3183   	fcall	_write_data
  6174                           
  6175                           ;main.c: 442:   write_data(0x00); write_data(0x7F);
  6176  03C3  3000               	movlw	0
  6177  03C4  3182  22E1  3183   	fcall	_write_data
  6178  03C7  307F               	movlw	127
  6179  03C8  3182  22E1  3183   	fcall	_write_data
  6180                           
  6181                           ;main.c: 443:   write_command(0x2B);
  6182  03CB  302B               	movlw	43
  6183  03CC  3182  22D7  3183   	fcall	_write_command
  6184                           
  6185                           ;main.c: 444:   write_data(0x00); write_data(0x00);
  6186  03CF  3000               	movlw	0
  6187  03D0  3182  22E1  3183   	fcall	_write_data
  6188  03D3  3000               	movlw	0
  6189  03D4  3182  22E1  3183   	fcall	_write_data
  6190                           
  6191                           ;main.c: 445:   write_data(0x00); write_data(0x9F);
  6192  03D7  3000               	movlw	0
  6193  03D8  3182  22E1  3183   	fcall	_write_data
  6194  03DB  309F               	movlw	159
  6195  03DC  3182  22E1         	fcall	_write_data
  6196  03DE  0008               	return
  6197  03DF                     __end_of_Rcmd2red:	
  6198                           
  6199                           	psect	text24
  6200  0645                     __ptext24:	
  6201 ;; *************** function _Rcmd1 *****************
  6202 ;; Defined at:
  6203 ;;		line 397 in file "main.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      void 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0, pclath, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;Total ram usage:        1 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    2
  6224 ;; This function calls:
  6225 ;;		_write_command
  6226 ;;		_write_data
  6227 ;; This function is called by:
  6228 ;;		_BlackTab_Init
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _Rcmd1
  6234  0645                     _Rcmd1:	
  6235                           
  6236                           ;main.c: 398:   write_command(0x01);
  6237                           
  6238                           ;incstack = 0
  6239                           ; Regs used in _Rcmd1: [wreg+status,2+status,0+pclath+cstack]
  6240  0645  3001               	movlw	1
  6241  0646  3182  22D7  3186   	fcall	_write_command
  6242                           
  6243                           ;main.c: 399:   _delay((unsigned long)((150)*(500000/4000.0)));
  6244  0649  3019               	movlw	25
  6245  064A  00F4               	movwf	??_Rcmd1
  6246  064B  3058               	movlw	88
  6247  064C                     u977:	
  6248  064C  0B89               	decfsz	9,f
  6249  064D  2E4C               	goto	u977
  6250  064E  0BF4               	decfsz	??_Rcmd1,f
  6251  064F  2E4C               	goto	u977
  6252  0650  3200               	nop2
  6253                           
  6254                           ;main.c: 400:   write_command(0x11);
  6255  0651  3011               	movlw	17
  6256  0652  3182  22D7  3186   	fcall	_write_command
  6257                           
  6258                           ;main.c: 401:   _delay((unsigned long)((500)*(500000/4000.0)));
  6259  0655  3052               	movlw	82
  6260  0656  00F4               	movwf	??_Rcmd1
  6261  0657  302A               	movlw	42
  6262  0658                     u987:	
  6263  0658  0B89               	decfsz	9,f
  6264  0659  2E58               	goto	u987
  6265  065A  0BF4               	decfsz	??_Rcmd1,f
  6266  065B  2E58               	goto	u987
  6267                           
  6268                           ;main.c: 402:   write_command(0xB1);
  6269  065C  30B1               	movlw	177
  6270  065D  3182  22D7  3186   	fcall	_write_command
  6271                           
  6272                           ;main.c: 403:   write_data(0x01);
  6273  0660  3001               	movlw	1
  6274  0661  3182  22E1  3186   	fcall	_write_data
  6275                           
  6276                           ;main.c: 404:   write_data(0x2C);
  6277  0664  302C               	movlw	44
  6278  0665  3182  22E1  3186   	fcall	_write_data
  6279                           
  6280                           ;main.c: 405:   write_data(0x2D);
  6281  0668  302D               	movlw	45
  6282  0669  3182  22E1  3186   	fcall	_write_data
  6283                           
  6284                           ;main.c: 406:   write_command(0xB2);
  6285  066C  30B2               	movlw	178
  6286  066D  3182  22D7  3186   	fcall	_write_command
  6287                           
  6288                           ;main.c: 407:   write_data(0x01);
  6289  0670  3001               	movlw	1
  6290  0671  3182  22E1  3186   	fcall	_write_data
  6291                           
  6292                           ;main.c: 408:   write_data(0x2C);
  6293  0674  302C               	movlw	44
  6294  0675  3182  22E1  3186   	fcall	_write_data
  6295                           
  6296                           ;main.c: 409:   write_data(0x2D);
  6297  0678  302D               	movlw	45
  6298  0679  3182  22E1  3186   	fcall	_write_data
  6299                           
  6300                           ;main.c: 410:   write_command(0xB3);
  6301  067C  30B3               	movlw	179
  6302  067D  3182  22D7  3186   	fcall	_write_command
  6303                           
  6304                           ;main.c: 411:   write_data(0x01); write_data(0x2C); write_data(0x2D);
  6305  0680  3001               	movlw	1
  6306  0681  3182  22E1  3186   	fcall	_write_data
  6307  0684  302C               	movlw	44
  6308  0685  3182  22E1  3186   	fcall	_write_data
  6309  0688  302D               	movlw	45
  6310  0689  3182  22E1  3186   	fcall	_write_data
  6311                           
  6312                           ;main.c: 412:   write_data(0x01); write_data(0x2C); write_data(0x2D);
  6313  068C  3001               	movlw	1
  6314  068D  3182  22E1  3186   	fcall	_write_data
  6315  0690  302C               	movlw	44
  6316  0691  3182  22E1  3186   	fcall	_write_data
  6317  0694  302D               	movlw	45
  6318  0695  3182  22E1  3186   	fcall	_write_data
  6319                           
  6320                           ;main.c: 413:   write_command(0xB4);
  6321  0698  30B4               	movlw	180
  6322  0699  3182  22D7  3186   	fcall	_write_command
  6323                           
  6324                           ;main.c: 414:   write_data(0x07);
  6325  069C  3007               	movlw	7
  6326  069D  3182  22E1  3186   	fcall	_write_data
  6327                           
  6328                           ;main.c: 415:   write_command(0xC0);
  6329  06A0  30C0               	movlw	192
  6330  06A1  3182  22D7  3186   	fcall	_write_command
  6331                           
  6332                           ;main.c: 416:   write_data(0xA2);
  6333  06A4  30A2               	movlw	162
  6334  06A5  3182  22E1  3186   	fcall	_write_data
  6335                           
  6336                           ;main.c: 417:   write_data(0x02);
  6337  06A8  3002               	movlw	2
  6338  06A9  3182  22E1  3186   	fcall	_write_data
  6339                           
  6340                           ;main.c: 418:   write_data(0x84);
  6341  06AC  3084               	movlw	132
  6342  06AD  3182  22E1  3186   	fcall	_write_data
  6343                           
  6344                           ;main.c: 419:   write_command(0xC1);
  6345  06B0  30C1               	movlw	193
  6346  06B1  3182  22D7  3186   	fcall	_write_command
  6347                           
  6348                           ;main.c: 420:   write_data(0xC5);
  6349  06B4  30C5               	movlw	197
  6350  06B5  3182  22E1  3186   	fcall	_write_data
  6351                           
  6352                           ;main.c: 421:   write_command(0xC2);
  6353  06B8  30C2               	movlw	194
  6354  06B9  3182  22D7  3186   	fcall	_write_command
  6355                           
  6356                           ;main.c: 422:   write_data(0x0A);
  6357  06BC  300A               	movlw	10
  6358  06BD  3182  22E1  3186   	fcall	_write_data
  6359                           
  6360                           ;main.c: 423:   write_data(0x00);
  6361  06C0  3000               	movlw	0
  6362  06C1  3182  22E1  3186   	fcall	_write_data
  6363                           
  6364                           ;main.c: 424:   write_command(0xC3);
  6365  06C4  30C3               	movlw	195
  6366  06C5  3182  22D7  3186   	fcall	_write_command
  6367                           
  6368                           ;main.c: 425:   write_data(0x8A);
  6369  06C8  308A               	movlw	138
  6370  06C9  3182  22E1  3186   	fcall	_write_data
  6371                           
  6372                           ;main.c: 426:   write_data(0x2A);
  6373  06CC  302A               	movlw	42
  6374  06CD  3182  22E1  3186   	fcall	_write_data
  6375                           
  6376                           ;main.c: 427:   write_command(0xC4);
  6377  06D0  30C4               	movlw	196
  6378  06D1  3182  22D7  3186   	fcall	_write_command
  6379                           
  6380                           ;main.c: 428:   write_data(0x8A);
  6381  06D4  308A               	movlw	138
  6382  06D5  3182  22E1  3186   	fcall	_write_data
  6383                           
  6384                           ;main.c: 429:   write_data(0xEE);
  6385  06D8  30EE               	movlw	238
  6386  06D9  3182  22E1  3186   	fcall	_write_data
  6387                           
  6388                           ;main.c: 430:   write_command(0xC5);
  6389  06DC  30C5               	movlw	197
  6390  06DD  3182  22D7  3186   	fcall	_write_command
  6391                           
  6392                           ;main.c: 431:   write_data(0x0E);
  6393  06E0  300E               	movlw	14
  6394  06E1  3182  22E1  3186   	fcall	_write_data
  6395                           
  6396                           ;main.c: 432:   write_command(0x20);
  6397  06E4  3020               	movlw	32
  6398  06E5  3182  22D7  3186   	fcall	_write_command
  6399                           
  6400                           ;main.c: 433:   write_command(0x36);
  6401  06E8  3036               	movlw	54
  6402  06E9  3182  22D7  3186   	fcall	_write_command
  6403                           
  6404                           ;main.c: 434:   write_data(0xC8);
  6405  06EC  30C8               	movlw	200
  6406  06ED  3182  22E1  3186   	fcall	_write_data
  6407                           
  6408                           ;main.c: 435:   write_command(0x3A);
  6409  06F0  303A               	movlw	58
  6410  06F1  3182  22D7  3186   	fcall	_write_command
  6411                           
  6412                           ;main.c: 436:   write_data(0x05);
  6413  06F4  3005               	movlw	5
  6414  06F5  3182  22E1         	fcall	_write_data
  6415  06F7  0008               	return
  6416  06F8                     __end_of_Rcmd1:	
  6417                           
  6418                           	psect	text25
  6419  02E1                     __ptext25:	
  6420 ;; *************** function _write_data *****************
  6421 ;; Defined at:
  6422 ;;		line 379 in file "main.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  data            1    wreg     unsigned char 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  data            1    3[COMMON] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      void 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0, pclath, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;Total ram usage:        1 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    1
  6443 ;; This function calls:
  6444 ;;		_spiwrite
  6445 ;; This function is called by:
  6446 ;;		_BlackTab_Init
  6447 ;;		_setAddrWindow
  6448 ;;		_Rcmd1
  6449 ;;		_Rcmd2red
  6450 ;;		_Rcmd3
  6451 ;;		_drawPixel
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _write_data
  6457  02E1                     _write_data:	
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  6461                           ;write_data@data stored from wreg
  6462  02E1  00F3               	movwf	write_data@data
  6463                           
  6464                           ;main.c: 380:     do { LATAbits.LATA1 = 0; } while(0);
  6465  02E2  0022               	movlb	2	; select bank2
  6466  02E3  108C               	bcf	12,1	;volatile
  6467                           
  6468                           ;main.c: 381:     do { LATAbits.LATA4 = 1; } while(0);
  6469  02E4  160C               	bsf	12,4	;volatile
  6470                           
  6471                           ;main.c: 383:     spiwrite(data);
  6472  02E5  0873               	movf	write_data@data,w
  6473  02E6  3183  235D         	fcall	_spiwrite
  6474  02E8  0022               	movlb	2	; select bank2
  6475  02E9  148C               	bsf	12,1	;volatile
  6476  02EA  0008               	return
  6477  02EB                     __end_of_write_data:	
  6478                           
  6479                           	psect	text26
  6480  02D7                     __ptext26:	
  6481 ;; *************** function _write_command *****************
  6482 ;; Defined at:
  6483 ;;		line 370 in file "main.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  cmd             1    wreg     unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  cmd             1    3[COMMON] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0, pclath, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;Total ram usage:        1 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    1
  6504 ;; This function calls:
  6505 ;;		_spiwrite
  6506 ;; This function is called by:
  6507 ;;		_BlackTab_Init
  6508 ;;		_setAddrWindow
  6509 ;;		_Rcmd1
  6510 ;;		_Rcmd2red
  6511 ;;		_Rcmd3
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _write_command
  6517  02D7                     _write_command:	
  6518                           
  6519                           ;incstack = 0
  6520                           ; Regs used in _write_command: [wreg+status,2+status,0+pclath+cstack]
  6521                           ;write_command@cmd stored from wreg
  6522  02D7  00F3               	movwf	write_command@cmd
  6523                           
  6524                           ;main.c: 371:     do { LATAbits.LATA4 = 0; } while(0);
  6525  02D8  0022               	movlb	2	; select bank2
  6526  02D9  120C               	bcf	12,4	;volatile
  6527                           
  6528                           ;main.c: 372:     do { LATAbits.LATA1 = 0; } while(0);
  6529  02DA  108C               	bcf	12,1	;volatile
  6530                           
  6531                           ;main.c: 374:     spiwrite(cmd);
  6532  02DB  0873               	movf	write_command@cmd,w
  6533  02DC  3183  235D         	fcall	_spiwrite
  6534  02DE  0022               	movlb	2	; select bank2
  6535  02DF  148C               	bsf	12,1	;volatile
  6536  02E0  0008               	return
  6537  02E1                     __end_of_write_command:	
  6538                           
  6539                           	psect	text27
  6540  035D                     __ptext27:	
  6541 ;; *************** function _spiwrite *****************
  6542 ;; Defined at:
  6543 ;;		line 388 in file "main.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  spidata         1    wreg     unsigned char 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  spidata         1    0[COMMON] unsigned char 
  6548 ;;  ss              2    1[COMMON] int 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        3 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_fillRect
  6568 ;;		_write_command
  6569 ;;		_write_data
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           
  6574                           ;psect for function _spiwrite
  6575  035D                     _spiwrite:	
  6576                           
  6577                           ;incstack = 0
  6578                           ; Regs used in _spiwrite: [wreg+status,2+status,0]
  6579                           ;spiwrite@spidata stored from wreg
  6580  035D  00F0               	movwf	spiwrite@spidata
  6581                           
  6582                           ;main.c: 389:     int ss;;main.c: 390:     for(ss = 0x80; ss; ss >>= 1) {
  6583  035E  3080               	movlw	128
  6584  035F  00F1               	movwf	spiwrite@ss
  6585  0360  3000               	movlw	0
  6586  0361  00F2               	movwf	spiwrite@ss+1
  6587  0362                     l1619:	
  6588  0362  0871               	movf	spiwrite@ss,w
  6589  0363  0472               	iorwf	spiwrite@ss+1,w
  6590  0364  1903               	btfsc	3,2
  6591  0365  0008               	return
  6592                           
  6593                           ;main.c: 391:    if (spidata & ss) do { LATBbits.LATB7 = 1; } while(0);
  6594  0366  0870               	movf	spiwrite@spidata,w
  6595  0367  0571               	andwf	spiwrite@ss,w
  6596  0368  1903               	btfsc	3,2
  6597  0369  2B6D               	goto	l223
  6598  036A  0022               	movlb	2	; select bank2
  6599  036B  178D               	bsf	13,7	;volatile
  6600  036C  2B6F               	goto	l225
  6601  036D                     l223:	
  6602  036D  0022               	movlb	2	; select bank2
  6603  036E  138D               	bcf	13,7	;volatile
  6604  036F                     l225:	
  6605                           ;main.c: 393:    do { LATCbits.LATC7 = 1; } while(0);
  6606                           
  6607  036F  178E               	bsf	14,7	;volatile
  6608                           
  6609                           ;main.c: 394:    do { LATCbits.LATC7 = 0; } while(0);}
  6610  0370  138E               	bcf	14,7	;volatile
  6611  0371  3001               	movlw	1
  6612  0372                     u535:	
  6613  0372  37F2               	asrf	spiwrite@ss+1,f
  6614  0373  0CF1               	rrf	spiwrite@ss,f
  6615  0374  0B89               	decfsz	9,f
  6616  0375  2B72               	goto	u535
  6617  0376  2B62               	goto	l1619
  6618  0377                     __end_of_spiwrite:	
  6619  007E                     btemp	set	126	;btemp
  6620  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    475
    Data        5
    BSS         12
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      76
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    txt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _SPI->_fillScreen
    _drawChar->_drawPixel
    _fillRect->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _BlackTab_Init->_Rcmd1
    _BlackTab_Init->_Rcmd3
    _Rcmd3->_write_command
    _Rcmd3->_write_data
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_write_command
    _Rcmd1->_write_data
    _write_data->_spiwrite
    _write_command->_spiwrite

Critical Paths under _main in BANK0

    _main->_SPI
    _SPI->_drawtext
    _fillScreen->_fillRect
    _drawtext->_drawChar
    _drawChar->_fillRect

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11801
                                _SPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI                                                  1     1      0   11801
                                             58 BANK0      1     1      0
                      _BlackTab_Init
                           _drawtext
                         _fillScreen
                        _setTextWrap
 ---------------------------------------------------------------------------------
 (2) _setTextWrap                                          2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           4     2      2    2490
                                             12 COMMON     2     0      2
                                             16 BANK0      2     2      0
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            22    14      8    8493
                                             36 BANK0     22    14      8
                             ___bmul
                             ___wmul
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     166
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            20    13      7    6357
                                             16 BANK0     20    13      7
                             ___bmul
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (3) _fillRect                                            16    11      5    2392
                                              0 BANK0     16    11      5
                             ___bmul (ARG)
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            8     5      3    1446
                                             12 COMMON     1     1      0
                                              0 BANK0      7     4      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        8     0      8     876
                                              4 COMMON     8     0      8
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     548
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _BlackTab_Init                                        0     0      0     720
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                1     1      0     180
                                              4 COMMON     1     1      0
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     180
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                1     1      0     180
                                              4 COMMON     1     1      0
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      90
                                              3 COMMON     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      90
                                              3 COMMON     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI
     _BlackTab_Init
       _Rcmd1
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawtext
       ___bmul
       ___wmul
       _drawChar
         ___bmul
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           ___bmul (ARG)
           _setAddrWindow (ARG)
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite (ARG)
       _strlen
     _fillScreen
       _fillRect
         ___bmul (ARG)
         _setAddrWindow (ARG)
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite (ARG)
     _setTextWrap
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 01 13:04:08 2019

                 ___bmul@product 0072                      __CFG_CP$OFF 0000              ___wmul@multiplicand 0072  
                    __CFG_LVP$ON 0000                              l223 036D                              l225 036F  
                            l242 05BA                              l182 0490                              l247 0640  
                            l192 0502                              l265 0752                              l627 037F  
                            _PR2 001E                     __CFG_CPD$OFF 0000                              u535 0372  
                            u655 0380                              u575 0488                              u815 07D0  
                            u665 0385                              u585 04A5                              u825 07E0  
                            u845 05E7                              u795 0786                              u957 0592  
                            u885 05C0                              _SPI 0392                              u967 059C  
                            u977 064C                              u987 0658                              _txt 0067  
        __size_of_PMD_Initialize 0008                  _TMR2_Initialize 02CF                              wreg 0009  
                           ?_SPI 0070                             l1641 04AD                             l1801 0332  
                           l1619 0362                             l1803 033E                             l1821 0713  
                           l1831 072D                             l1815 0707                             l1657 04E9  
                           l1905 02B3                             l1659 04ED                             l1851 079A  
                           l1843 0767                             l1827 0715                             l1819 070F  
                           l1693 02F7                             l1669 04FD                             l1853 07C0  
                           l1845 0780                             l1679 0379                             l1697 02FD  
                           l1883 0601                             l1887 060B                             STR_1 09DB  
        __end_of_PWM1_Initialize 02F5                             _LATA 010C                             _LATB 010D  
                           _LATC 010E                             _PMD0 0911                             _PMD1 0912  
                           _PMD2 0913                             _PMD3 0914                             _PMD4 0915  
                           _PMD5 0916                             _TMR2 001D                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                             _Font 0800  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _main 02B0  
                           fsr0h 0005                             indf0 0000                             fsr0l 0004  
                           btemp 007E                             _wrap 0069                    __CFG_BOREN$ON 0000  
                  __CFG_BORV$LOW 0000                             start 0002                   write_data@data 0073  
                  __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000  
                          ??_SPI 005A   __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 02C7  
                          _ADACT 009F                            ?_main 0070                            _T2CON 001F  
                 __CFG_DEBUG$OFF 0000                            _OSCEN 091D                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _Font2 08FF  
                          _Rcmd1 0645                            _Rcmd3 0505                   _WDT_Initialize 029B  
                          _event 006B                            _pause 005D                            _state 005E  
                          status 0003                            wtemp0 007E         __size_of_SPI1_Initialize 0006  
                __initialization 07E3                     __end_of_Font 08FF                     __end_of_main 02B7  
               __end_of_Rcmd2red 03DF          __end_of_TMR2_Initialize 02D7                           ??_main 007E  
         __end_of_WDT_Initialize 029F                           ?_Rcmd1 0070                           ?_Rcmd3 0070  
                         _ADCON0 009D                           _ADCON1 009E                           _ADRESH 009C  
                         _ADRESL 009B                           _CCPR1H 0292                           _CCPR1L 0291  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
             __CFG_RSTOSC$HFINT1 0000                     ?_setTextWrap 0070                 ?_PWM1_Initialize 0070  
                         _RC5PPS 0EA5                           _RB7PPS 0E9F                           _ODCONA 028C  
                         _ODCONB 028D                           _ODCONC 028E                           _RC7PPS 0EA7  
                         _OSCFRQ 091F                           _WDTCON 0097                   __CFG_PWRTE$OFF 0000  
               __end_of_fillRect 0505                 __end_of_drawChar 07E3                           ___bmul 02F5  
         __size_of_BlackTab_Init 0016                           ___wmul 0377                 __end_of_drawtext 0645  
                 __CFG_STVREN$ON 0000                           _button 005F                     drawtext@size 004B  
                         _strlen 032E                   _PMD_Initialize 02C7                  ?_WDT_Initialize 0070  
               __end_of_spiwrite 0377                _SYSTEM_Initialize 0345          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070                       _adcResult2 005B              ___bmul@multiplicand 0070  
                  __end_of_Font2 09DB                    __end_of_Rcmd1 06F8                    __end_of_Rcmd3 05A2  
                 __pcstackCOMMON 0070                     __pidataBANK0 029F              ??_SYSTEM_Initialize 0070  
              ??_SPI1_Initialize 0070                 ?_TMR2_Initialize 0070           __end_of_PMD_Initialize 02CF  
                 drawPixel@color 0021           __size_of_write_command 000A                          ??_Rcmd1 0074  
                        ??_Rcmd3 0074               __size_of_drawPixel 0033                    _BlackTab_Init 0318  
      __end_of_SYSTEM_Initialize 035D                       __pbssBANK0 005B                        ?_Rcmd2red 0070  
                spiwrite@spidata 0070                       __pmaintext 02B0                          ?___bmul 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000           __size_of_setAddrWindow 002C  
                        _CCP1CON 0293                  ?_PMD_Initialize 0070          __size_of_ADC_Initialize 0008  
                        ?_strlen 0070                       _fillScreen 0306                          _OSCCON1 0919  
                        _OSCCON3 091B                   ?_BlackTab_Init 0070                          _OSCTUNE 091E  
                        _SSP1ADD 0212                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E                          _SSP1BUF 0211                        ?_fillRect 0020  
                      ?_drawChar 0030                        ?_drawtext 0044                       ??_Rcmd2red 0074  
           __size_of_setTextWrap 0006                    _write_command 02D7                 write_command@cmd 0073  
              __end_of_drawPixel 046A                  __size_of___bmul 0011                  __size_of___wmul 001B  
                      ?_spiwrite 0070                          __ptext1 0345                          __ptext2 029B  
                        __ptext3 02CF                          __ptext4 02AA                          __ptext5 02EB  
                        __ptext6 02C7                          __ptext7 040B                          __ptext8 02BF  
                        __ptext9 02B7                  __size_of_strlen 0017                     __size_of_SPI 0025  
          _OSCILLATOR_Initialize 02BF                        _T2CONbits 001F         ??_PIN_MANAGER_Initialize 0070  
                  drawtext@_text 0045                    drawtext@color 0047                       ??_fillRect 0025  
                     ??_drawChar 0037       __size_of_SYSTEM_Initialize 0018                          _switch1 0060  
                  _setAddrWindow 03DF             end_of_initialization 07FD                       ??_drawtext 004C  
                 ?_write_command 0070                       ??_spiwrite 0070                          strlen@a 0073  
                        strlen@s 0070                 ??_WDT_Initialize 0070                 drawtext@cursor_x 0059  
               drawtext@cursor_y 0058                      ?_fillScreen 007C                  ??_BlackTab_Init 0075  
                     drawChar@bg 0034                   ?_setAddrWindow 0074                 __CFG_FEXTOSC$OFF 0000  
               drawtext@textsize 0053                       drawPixel@x 007C                       drawPixel@y 0020  
                    _CCP1CONbits 0293                  _SPI1_Initialize 02AA         __size_of_PWM1_Initialize 000A  
                 __end_of___bmul 0306                   __end_of___wmul 0392                       _write_data 02E1  
                 _ADC_Initialize 02B7           ?_OSCILLATOR_Initialize 0070                       drawtext@bg 0049  
                 __end_of_strlen 0345              start_initialization 07E3                      __end_of_SPI 03B7  
__size_of_PIN_MANAGER_Initialize 002C                  ??_write_command 0073                __size_of_Rcmd2red 0028  
            __size_of_fillScreen 0012                 __CFG_LPBOREN$OFF 0000                         ??___bmul 0071  
               ??_PMD_Initialize 0070                         ??___wmul 0074                      _CCPTMRSbits 029F  
         __end_of_ADC_Initialize 02BF                      __pdataBANK0 0067                  setAddrWindow@x0 0074  
                setAddrWindow@x1 0078                  setAddrWindow@y0 0076                  setAddrWindow@y1 007A  
                       ??_strlen 0072                        ___latbits 0002                        _adcResult 0064  
                ??_setAddrWindow 007C                    __pcstackBANK0 0020         __size_of_TMR2_Initialize 0008  
        __end_of_SPI1_Initialize 02B0                __size_of_fillRect 009B                __size_of_drawChar 00EB  
              __size_of_drawtext 00A3           _PIN_MANAGER_Initialize 040B                  ?_ADC_Initialize 0070  
                    ?_write_data 0070                ??_PWM1_Initialize 0070                        _drawPixel 0437  
              __size_of_spiwrite 001A                   __size_of_Rcmd1 00B3                   __size_of_Rcmd3 009D  
               __CFG_WDTE$SWDTEN 0000                    ??_setTextWrap 0072                   ___wmul@product 0074  
                       _LATAbits 010C                         _LATBbits 010D                         _LATCbits 010E  
                       _PIR1bits 0011                         _SSP1CON1 0215                         _SSP1STAT 0214  
                      fillRect@h 0022                        fillRect@w 0021                        fillRect@x 002F  
                      fillRect@y 0020                        drawChar@c 0031                        drawChar@i 0042  
                      drawChar@j 0040                        drawChar@x 003F                        drawChar@y 0030  
                     ?_drawPixel 0020                        _rotateVal 0062                       _ADCON0bits 009D  
              ___wmul@multiplier 0070                     ??_fillScreen 0030                 ?_SPI1_Initialize 0070  
                      drawtext@i 0056                        drawtext@x 0055                        drawtext@y 0044  
              ??_TMR2_Initialize 0070                         _Rcmd2red 03B7              __size_of_write_data 000A  
                   setTextWrap@w 0070              __end_of_setTextWrap 02AA               __end_of_fillScreen 0318  
        ??_OSCILLATOR_Initialize 0070                       spiwrite@ss 0071                         _delayVal 0061  
          __end_of_BlackTab_Init 032E                         __ptext10 0392                         __ptext11 02A4  
                       __ptext20 02F5                         __ptext12 0306                         __ptext21 0318  
                       __ptext13 05A2                         __ptext22 0505                         __ptext14 032E  
                       __ptext23 03B7                         __ptext15 06F8                         __ptext24 0645  
                       __ptext16 046A                         __ptext25 02E1                         __ptext17 0437  
                       __ptext26 02D7                         __ptext18 03DF                         __ptext27 035D  
                       __ptext19 0377                     _SSP1CON1bits 0215                         _fillRect 046A  
                       _drawChar 06F8                         _colstart 0066                         _drawtext 05A2  
                  __size_of_main 0007                         _spiwrite 035D                     _SSP1STATbits 0214  
                    ??_drawPixel 0023                         _rowstart 0065                      _secondCount 0063  
        __size_of_WDT_Initialize 0004                      _setTextWrap 02A4            __end_of_write_command 02E1  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                  fillScreen@color 007C  
                _PWM1_Initialize 02EB                 ??_ADC_Initialize 0070                     ??_write_data 0073  
                  fillRect@color 0023                    __pstringtext1 0800                    __pstringtext2 08FF  
                  __pstringtext3 0000                       _SSP1DATPPS 0E21                       _SSP1CLKPPS 0E20  
          __end_of_setAddrWindow 040B                     fillRect@high 002D   __end_of_PIN_MANAGER_Initialize 0437  
                  drawChar@color 0032                      fillRect@low 002E               __end_of_write_data 02EB  
                   drawChar@line 003E                     drawChar@size 0036  
