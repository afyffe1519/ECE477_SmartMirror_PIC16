

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 01 14:20:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F18345 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0097                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0197                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0219                     	;# 
   193  021A                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030D                     	;# 
   216  030E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0314                     	;# 
   222  0315                     	;# 
   223  0315                     	;# 
   224  0316                     	;# 
   225  0317                     	;# 
   226  0318                     	;# 
   227  038C                     	;# 
   228  038D                     	;# 
   229  038E                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  0393                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  0397                     	;# 
   237  0398                     	;# 
   238  0399                     	;# 
   239  039A                     	;# 
   240  039C                     	;# 
   241  039D                     	;# 
   242  039E                     	;# 
   243  039F                     	;# 
   244  0411                     	;# 
   245  0411                     	;# 
   246  0412                     	;# 
   247  0413                     	;# 
   248  0414                     	;# 
   249  0415                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  0418                     	;# 
   253  0418                     	;# 
   254  0419                     	;# 
   255  041A                     	;# 
   256  041B                     	;# 
   257  041C                     	;# 
   258  041D                     	;# 
   259  041E                     	;# 
   260  041F                     	;# 
   261  0498                     	;# 
   262  0498                     	;# 
   263  0499                     	;# 
   264  049A                     	;# 
   265  049B                     	;# 
   266  049B                     	;# 
   267  049C                     	;# 
   268  049D                     	;# 
   269  049E                     	;# 
   270  049F                     	;# 
   271  0617                     	;# 
   272  0618                     	;# 
   273  0619                     	;# 
   274  0619                     	;# 
   275  061A                     	;# 
   276  061B                     	;# 
   277  061C                     	;# 
   278  061C                     	;# 
   279  061F                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0696                     	;# 
   286  0697                     	;# 
   287  0698                     	;# 
   288  0699                     	;# 
   289  0711                     	;# 
   290  0712                     	;# 
   291  0713                     	;# 
   292  0714                     	;# 
   293  0715                     	;# 
   294  0716                     	;# 
   295  0717                     	;# 
   296  0718                     	;# 
   297  0719                     	;# 
   298  0891                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0891                     	;# 
   303  0891                     	;# 
   304  0892                     	;# 
   305  0892                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0893                     	;# 
   312  0893                     	;# 
   313  0894                     	;# 
   314  0894                     	;# 
   315  0894                     	;# 
   316  0895                     	;# 
   317  0895                     	;# 
   318  0895                     	;# 
   319  0896                     	;# 
   320  0896                     	;# 
   321  0896                     	;# 
   322  089B                     	;# 
   323  0911                     	;# 
   324  0912                     	;# 
   325  0913                     	;# 
   326  0914                     	;# 
   327  0915                     	;# 
   328  0916                     	;# 
   329  0918                     	;# 
   330  0919                     	;# 
   331  091A                     	;# 
   332  091B                     	;# 
   333  091C                     	;# 
   334  091D                     	;# 
   335  091E                     	;# 
   336  091F                     	;# 
   337  0E0F                     	;# 
   338  0E10                     	;# 
   339  0E11                     	;# 
   340  0E12                     	;# 
   341  0E13                     	;# 
   342  0E14                     	;# 
   343  0E15                     	;# 
   344  0E16                     	;# 
   345  0E17                     	;# 
   346  0E18                     	;# 
   347  0E19                     	;# 
   348  0E1A                     	;# 
   349  0E1B                     	;# 
   350  0E1C                     	;# 
   351  0E1D                     	;# 
   352  0E1E                     	;# 
   353  0E1F                     	;# 
   354  0E20                     	;# 
   355  0E21                     	;# 
   356  0E22                     	;# 
   357  0E24                     	;# 
   358  0E25                     	;# 
   359  0E28                     	;# 
   360  0E29                     	;# 
   361  0E2A                     	;# 
   362  0E2B                     	;# 
   363  0E2C                     	;# 
   364  0E2D                     	;# 
   365  0E2E                     	;# 
   366  0E2F                     	;# 
   367  0E90                     	;# 
   368  0E91                     	;# 
   369  0E92                     	;# 
   370  0E94                     	;# 
   371  0E95                     	;# 
   372  0E9C                     	;# 
   373  0E9D                     	;# 
   374  0E9E                     	;# 
   375  0E9F                     	;# 
   376  0EA0                     	;# 
   377  0EA1                     	;# 
   378  0EA2                     	;# 
   379  0EA3                     	;# 
   380  0EA4                     	;# 
   381  0EA5                     	;# 
   382  0EA6                     	;# 
   383  0EA7                     	;# 
   384  0F0F                     	;# 
   385  0F10                     	;# 
   386  0F11                     	;# 
   387  0F12                     	;# 
   388  0F13                     	;# 
   389  0F14                     	;# 
   390  0F15                     	;# 
   391  0F16                     	;# 
   392  0F17                     	;# 
   393  0F18                     	;# 
   394  0F19                     	;# 
   395  0F1A                     	;# 
   396  0F1B                     	;# 
   397  0F1C                     	;# 
   398  0F1D                     	;# 
   399  0F1E                     	;# 
   400  0F1F                     	;# 
   401  0F20                     	;# 
   402  0F21                     	;# 
   403  0F22                     	;# 
   404  0F23                     	;# 
   405  0F24                     	;# 
   406  0F25                     	;# 
   407  0F26                     	;# 
   408  0F27                     	;# 
   409  0F28                     	;# 
   410  0F29                     	;# 
   411  0F2A                     	;# 
   412  0F2B                     	;# 
   413  0F2C                     	;# 
   414  0F2D                     	;# 
   415  0F2E                     	;# 
   416  0F2F                     	;# 
   417  0F30                     	;# 
   418  0F31                     	;# 
   419  0F32                     	;# 
   420  0F33                     	;# 
   421  0F34                     	;# 
   422  0F35                     	;# 
   423  0F36                     	;# 
   424  0F37                     	;# 
   425  0FE4                     	;# 
   426  0FE5                     	;# 
   427  0FE6                     	;# 
   428  0FE7                     	;# 
   429  0FE8                     	;# 
   430  0FE9                     	;# 
   431  0FEA                     	;# 
   432  0FEB                     	;# 
   433  0FED                     	;# 
   434  0FEE                     	;# 
   435  0FEF                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0016                     	;# 
   460  0017                     	;# 
   461  0018                     	;# 
   462  0019                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001C                     	;# 
   467  001D                     	;# 
   468  001E                     	;# 
   469  001F                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0090                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0093                     	;# 
   477  0094                     	;# 
   478  0097                     	;# 
   479  009B                     	;# 
   480  009B                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  009F                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  0111                     	;# 
   489  0112                     	;# 
   490  0113                     	;# 
   491  0114                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0117                     	;# 
   495  0118                     	;# 
   496  0119                     	;# 
   497  018C                     	;# 
   498  018D                     	;# 
   499  018E                     	;# 
   500  0197                     	;# 
   501  0199                     	;# 
   502  0199                     	;# 
   503  0199                     	;# 
   504  019A                     	;# 
   505  019A                     	;# 
   506  019A                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019D                     	;# 
   517  019D                     	;# 
   518  019E                     	;# 
   519  019E                     	;# 
   520  019E                     	;# 
   521  019F                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  020C                     	;# 
   527  020D                     	;# 
   528  020E                     	;# 
   529  0211                     	;# 
   530  0211                     	;# 
   531  0212                     	;# 
   532  0212                     	;# 
   533  0213                     	;# 
   534  0213                     	;# 
   535  0214                     	;# 
   536  0214                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0216                     	;# 
   542  0216                     	;# 
   543  0217                     	;# 
   544  0217                     	;# 
   545  0219                     	;# 
   546  021A                     	;# 
   547  021B                     	;# 
   548  021C                     	;# 
   549  021D                     	;# 
   550  021D                     	;# 
   551  021E                     	;# 
   552  021F                     	;# 
   553  028C                     	;# 
   554  028D                     	;# 
   555  028E                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0294                     	;# 
   561  0295                     	;# 
   562  0295                     	;# 
   563  0296                     	;# 
   564  0297                     	;# 
   565  0298                     	;# 
   566  029F                     	;# 
   567  030C                     	;# 
   568  030D                     	;# 
   569  030E                     	;# 
   570  0311                     	;# 
   571  0311                     	;# 
   572  0312                     	;# 
   573  0313                     	;# 
   574  0314                     	;# 
   575  0315                     	;# 
   576  0315                     	;# 
   577  0316                     	;# 
   578  0317                     	;# 
   579  0318                     	;# 
   580  038C                     	;# 
   581  038D                     	;# 
   582  038E                     	;# 
   583  0391                     	;# 
   584  0392                     	;# 
   585  0393                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  0397                     	;# 
   590  0398                     	;# 
   591  0399                     	;# 
   592  039A                     	;# 
   593  039C                     	;# 
   594  039D                     	;# 
   595  039E                     	;# 
   596  039F                     	;# 
   597  0411                     	;# 
   598  0411                     	;# 
   599  0412                     	;# 
   600  0413                     	;# 
   601  0414                     	;# 
   602  0415                     	;# 
   603  0416                     	;# 
   604  0417                     	;# 
   605  0418                     	;# 
   606  0418                     	;# 
   607  0419                     	;# 
   608  041A                     	;# 
   609  041B                     	;# 
   610  041C                     	;# 
   611  041D                     	;# 
   612  041E                     	;# 
   613  041F                     	;# 
   614  0498                     	;# 
   615  0498                     	;# 
   616  0499                     	;# 
   617  049A                     	;# 
   618  049B                     	;# 
   619  049B                     	;# 
   620  049C                     	;# 
   621  049D                     	;# 
   622  049E                     	;# 
   623  049F                     	;# 
   624  0617                     	;# 
   625  0618                     	;# 
   626  0619                     	;# 
   627  0619                     	;# 
   628  061A                     	;# 
   629  061B                     	;# 
   630  061C                     	;# 
   631  061C                     	;# 
   632  061F                     	;# 
   633  0691                     	;# 
   634  0692                     	;# 
   635  0693                     	;# 
   636  0694                     	;# 
   637  0695                     	;# 
   638  0696                     	;# 
   639  0697                     	;# 
   640  0698                     	;# 
   641  0699                     	;# 
   642  0711                     	;# 
   643  0712                     	;# 
   644  0713                     	;# 
   645  0714                     	;# 
   646  0715                     	;# 
   647  0716                     	;# 
   648  0717                     	;# 
   649  0718                     	;# 
   650  0719                     	;# 
   651  0891                     	;# 
   652  0891                     	;# 
   653  0891                     	;# 
   654  0891                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0892                     	;# 
   658  0892                     	;# 
   659  0892                     	;# 
   660  0893                     	;# 
   661  0893                     	;# 
   662  0893                     	;# 
   663  0893                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0894                     	;# 
   667  0894                     	;# 
   668  0894                     	;# 
   669  0895                     	;# 
   670  0895                     	;# 
   671  0895                     	;# 
   672  0896                     	;# 
   673  0896                     	;# 
   674  0896                     	;# 
   675  089B                     	;# 
   676  0911                     	;# 
   677  0912                     	;# 
   678  0913                     	;# 
   679  0914                     	;# 
   680  0915                     	;# 
   681  0916                     	;# 
   682  0918                     	;# 
   683  0919                     	;# 
   684  091A                     	;# 
   685  091B                     	;# 
   686  091C                     	;# 
   687  091D                     	;# 
   688  091E                     	;# 
   689  091F                     	;# 
   690  0E0F                     	;# 
   691  0E10                     	;# 
   692  0E11                     	;# 
   693  0E12                     	;# 
   694  0E13                     	;# 
   695  0E14                     	;# 
   696  0E15                     	;# 
   697  0E16                     	;# 
   698  0E17                     	;# 
   699  0E18                     	;# 
   700  0E19                     	;# 
   701  0E1A                     	;# 
   702  0E1B                     	;# 
   703  0E1C                     	;# 
   704  0E1D                     	;# 
   705  0E1E                     	;# 
   706  0E1F                     	;# 
   707  0E20                     	;# 
   708  0E21                     	;# 
   709  0E22                     	;# 
   710  0E24                     	;# 
   711  0E25                     	;# 
   712  0E28                     	;# 
   713  0E29                     	;# 
   714  0E2A                     	;# 
   715  0E2B                     	;# 
   716  0E2C                     	;# 
   717  0E2D                     	;# 
   718  0E2E                     	;# 
   719  0E2F                     	;# 
   720  0E90                     	;# 
   721  0E91                     	;# 
   722  0E92                     	;# 
   723  0E94                     	;# 
   724  0E95                     	;# 
   725  0E9C                     	;# 
   726  0E9D                     	;# 
   727  0E9E                     	;# 
   728  0E9F                     	;# 
   729  0EA0                     	;# 
   730  0EA1                     	;# 
   731  0EA2                     	;# 
   732  0EA3                     	;# 
   733  0EA4                     	;# 
   734  0EA5                     	;# 
   735  0EA6                     	;# 
   736  0EA7                     	;# 
   737  0F0F                     	;# 
   738  0F10                     	;# 
   739  0F11                     	;# 
   740  0F12                     	;# 
   741  0F13                     	;# 
   742  0F14                     	;# 
   743  0F15                     	;# 
   744  0F16                     	;# 
   745  0F17                     	;# 
   746  0F18                     	;# 
   747  0F19                     	;# 
   748  0F1A                     	;# 
   749  0F1B                     	;# 
   750  0F1C                     	;# 
   751  0F1D                     	;# 
   752  0F1E                     	;# 
   753  0F1F                     	;# 
   754  0F20                     	;# 
   755  0F21                     	;# 
   756  0F22                     	;# 
   757  0F23                     	;# 
   758  0F24                     	;# 
   759  0F25                     	;# 
   760  0F26                     	;# 
   761  0F27                     	;# 
   762  0F28                     	;# 
   763  0F29                     	;# 
   764  0F2A                     	;# 
   765  0F2B                     	;# 
   766  0F2C                     	;# 
   767  0F2D                     	;# 
   768  0F2E                     	;# 
   769  0F2F                     	;# 
   770  0F30                     	;# 
   771  0F31                     	;# 
   772  0F32                     	;# 
   773  0F33                     	;# 
   774  0F34                     	;# 
   775  0F35                     	;# 
   776  0F36                     	;# 
   777  0F37                     	;# 
   778  0FE4                     	;# 
   779  0FE5                     	;# 
   780  0FE6                     	;# 
   781  0FE7                     	;# 
   782  0FE8                     	;# 
   783  0FE9                     	;# 
   784  0FEA                     	;# 
   785  0FEB                     	;# 
   786  0FED                     	;# 
   787  0FEE                     	;# 
   788  0FEF                     	;# 
   789  0000                     	;# 
   790  0001                     	;# 
   791  0002                     	;# 
   792  0003                     	;# 
   793  0004                     	;# 
   794  0005                     	;# 
   795  0006                     	;# 
   796  0007                     	;# 
   797  0008                     	;# 
   798  0009                     	;# 
   799  000A                     	;# 
   800  000B                     	;# 
   801  000C                     	;# 
   802  000D                     	;# 
   803  000E                     	;# 
   804  0010                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0013                     	;# 
   808  0014                     	;# 
   809  0015                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  0019                     	;# 
   817  001A                     	;# 
   818  001B                     	;# 
   819  001C                     	;# 
   820  001D                     	;# 
   821  001E                     	;# 
   822  001F                     	;# 
   823  008C                     	;# 
   824  008D                     	;# 
   825  008E                     	;# 
   826  0090                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0093                     	;# 
   830  0094                     	;# 
   831  0097                     	;# 
   832  009B                     	;# 
   833  009B                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  009F                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018E                     	;# 
   853  0197                     	;# 
   854  0199                     	;# 
   855  0199                     	;# 
   856  0199                     	;# 
   857  019A                     	;# 
   858  019A                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  019C                     	;# 
   867  019C                     	;# 
   868  019D                     	;# 
   869  019D                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019E                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  019F                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  020C                     	;# 
   880  020D                     	;# 
   881  020E                     	;# 
   882  0211                     	;# 
   883  0211                     	;# 
   884  0212                     	;# 
   885  0212                     	;# 
   886  0213                     	;# 
   887  0213                     	;# 
   888  0214                     	;# 
   889  0214                     	;# 
   890  0215                     	;# 
   891  0215                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0216                     	;# 
   895  0216                     	;# 
   896  0217                     	;# 
   897  0217                     	;# 
   898  0219                     	;# 
   899  021A                     	;# 
   900  021B                     	;# 
   901  021C                     	;# 
   902  021D                     	;# 
   903  021D                     	;# 
   904  021E                     	;# 
   905  021F                     	;# 
   906  028C                     	;# 
   907  028D                     	;# 
   908  028E                     	;# 
   909  0291                     	;# 
   910  0291                     	;# 
   911  0292                     	;# 
   912  0293                     	;# 
   913  0294                     	;# 
   914  0295                     	;# 
   915  0295                     	;# 
   916  0296                     	;# 
   917  0297                     	;# 
   918  0298                     	;# 
   919  029F                     	;# 
   920  030C                     	;# 
   921  030D                     	;# 
   922  030E                     	;# 
   923  0311                     	;# 
   924  0311                     	;# 
   925  0312                     	;# 
   926  0313                     	;# 
   927  0314                     	;# 
   928  0315                     	;# 
   929  0315                     	;# 
   930  0316                     	;# 
   931  0317                     	;# 
   932  0318                     	;# 
   933  038C                     	;# 
   934  038D                     	;# 
   935  038E                     	;# 
   936  0391                     	;# 
   937  0392                     	;# 
   938  0393                     	;# 
   939  0394                     	;# 
   940  0395                     	;# 
   941  0396                     	;# 
   942  0397                     	;# 
   943  0398                     	;# 
   944  0399                     	;# 
   945  039A                     	;# 
   946  039C                     	;# 
   947  039D                     	;# 
   948  039E                     	;# 
   949  039F                     	;# 
   950  0411                     	;# 
   951  0411                     	;# 
   952  0412                     	;# 
   953  0413                     	;# 
   954  0414                     	;# 
   955  0415                     	;# 
   956  0416                     	;# 
   957  0417                     	;# 
   958  0418                     	;# 
   959  0418                     	;# 
   960  0419                     	;# 
   961  041A                     	;# 
   962  041B                     	;# 
   963  041C                     	;# 
   964  041D                     	;# 
   965  041E                     	;# 
   966  041F                     	;# 
   967  0498                     	;# 
   968  0498                     	;# 
   969  0499                     	;# 
   970  049A                     	;# 
   971  049B                     	;# 
   972  049B                     	;# 
   973  049C                     	;# 
   974  049D                     	;# 
   975  049E                     	;# 
   976  049F                     	;# 
   977  0617                     	;# 
   978  0618                     	;# 
   979  0619                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061C                     	;# 
   985  061F                     	;# 
   986  0691                     	;# 
   987  0692                     	;# 
   988  0693                     	;# 
   989  0694                     	;# 
   990  0695                     	;# 
   991  0696                     	;# 
   992  0697                     	;# 
   993  0698                     	;# 
   994  0699                     	;# 
   995  0711                     	;# 
   996  0712                     	;# 
   997  0713                     	;# 
   998  0714                     	;# 
   999  0715                     	;# 
  1000  0716                     	;# 
  1001  0717                     	;# 
  1002  0718                     	;# 
  1003  0719                     	;# 
  1004  0891                     	;# 
  1005  0891                     	;# 
  1006  0891                     	;# 
  1007  0891                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0892                     	;# 
  1011  0892                     	;# 
  1012  0892                     	;# 
  1013  0893                     	;# 
  1014  0893                     	;# 
  1015  0893                     	;# 
  1016  0893                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0894                     	;# 
  1020  0894                     	;# 
  1021  0894                     	;# 
  1022  0895                     	;# 
  1023  0895                     	;# 
  1024  0895                     	;# 
  1025  0896                     	;# 
  1026  0896                     	;# 
  1027  0896                     	;# 
  1028  089B                     	;# 
  1029  0911                     	;# 
  1030  0912                     	;# 
  1031  0913                     	;# 
  1032  0914                     	;# 
  1033  0915                     	;# 
  1034  0916                     	;# 
  1035  0918                     	;# 
  1036  0919                     	;# 
  1037  091A                     	;# 
  1038  091B                     	;# 
  1039  091C                     	;# 
  1040  091D                     	;# 
  1041  091E                     	;# 
  1042  091F                     	;# 
  1043  0E0F                     	;# 
  1044  0E10                     	;# 
  1045  0E11                     	;# 
  1046  0E12                     	;# 
  1047  0E13                     	;# 
  1048  0E14                     	;# 
  1049  0E15                     	;# 
  1050  0E16                     	;# 
  1051  0E17                     	;# 
  1052  0E18                     	;# 
  1053  0E19                     	;# 
  1054  0E1A                     	;# 
  1055  0E1B                     	;# 
  1056  0E1C                     	;# 
  1057  0E1D                     	;# 
  1058  0E1E                     	;# 
  1059  0E1F                     	;# 
  1060  0E20                     	;# 
  1061  0E21                     	;# 
  1062  0E22                     	;# 
  1063  0E24                     	;# 
  1064  0E25                     	;# 
  1065  0E28                     	;# 
  1066  0E29                     	;# 
  1067  0E2A                     	;# 
  1068  0E2B                     	;# 
  1069  0E2C                     	;# 
  1070  0E2D                     	;# 
  1071  0E2E                     	;# 
  1072  0E2F                     	;# 
  1073  0E90                     	;# 
  1074  0E91                     	;# 
  1075  0E92                     	;# 
  1076  0E94                     	;# 
  1077  0E95                     	;# 
  1078  0E9C                     	;# 
  1079  0E9D                     	;# 
  1080  0E9E                     	;# 
  1081  0E9F                     	;# 
  1082  0EA0                     	;# 
  1083  0EA1                     	;# 
  1084  0EA2                     	;# 
  1085  0EA3                     	;# 
  1086  0EA4                     	;# 
  1087  0EA5                     	;# 
  1088  0EA6                     	;# 
  1089  0EA7                     	;# 
  1090  0F0F                     	;# 
  1091  0F10                     	;# 
  1092  0F11                     	;# 
  1093  0F12                     	;# 
  1094  0F13                     	;# 
  1095  0F14                     	;# 
  1096  0F15                     	;# 
  1097  0F16                     	;# 
  1098  0F17                     	;# 
  1099  0F18                     	;# 
  1100  0F19                     	;# 
  1101  0F1A                     	;# 
  1102  0F1B                     	;# 
  1103  0F1C                     	;# 
  1104  0F1D                     	;# 
  1105  0F1E                     	;# 
  1106  0F1F                     	;# 
  1107  0F20                     	;# 
  1108  0F21                     	;# 
  1109  0F22                     	;# 
  1110  0F23                     	;# 
  1111  0F24                     	;# 
  1112  0F25                     	;# 
  1113  0F26                     	;# 
  1114  0F27                     	;# 
  1115  0F28                     	;# 
  1116  0F29                     	;# 
  1117  0F2A                     	;# 
  1118  0F2B                     	;# 
  1119  0F2C                     	;# 
  1120  0F2D                     	;# 
  1121  0F2E                     	;# 
  1122  0F2F                     	;# 
  1123  0F30                     	;# 
  1124  0F31                     	;# 
  1125  0F32                     	;# 
  1126  0F33                     	;# 
  1127  0F34                     	;# 
  1128  0F35                     	;# 
  1129  0F36                     	;# 
  1130  0F37                     	;# 
  1131  0FE4                     	;# 
  1132  0FE5                     	;# 
  1133  0FE6                     	;# 
  1134  0FE7                     	;# 
  1135  0FE8                     	;# 
  1136  0FE9                     	;# 
  1137  0FEA                     	;# 
  1138  0FEB                     	;# 
  1139  0FED                     	;# 
  1140  0FEE                     	;# 
  1141  0FEF                     	;# 
  1142  0000                     	;# 
  1143  0001                     	;# 
  1144  0002                     	;# 
  1145  0003                     	;# 
  1146  0004                     	;# 
  1147  0005                     	;# 
  1148  0006                     	;# 
  1149  0007                     	;# 
  1150  0008                     	;# 
  1151  0009                     	;# 
  1152  000A                     	;# 
  1153  000B                     	;# 
  1154  000C                     	;# 
  1155  000D                     	;# 
  1156  000E                     	;# 
  1157  0010                     	;# 
  1158  0011                     	;# 
  1159  0012                     	;# 
  1160  0013                     	;# 
  1161  0014                     	;# 
  1162  0015                     	;# 
  1163  0015                     	;# 
  1164  0016                     	;# 
  1165  0016                     	;# 
  1166  0017                     	;# 
  1167  0018                     	;# 
  1168  0019                     	;# 
  1169  0019                     	;# 
  1170  001A                     	;# 
  1171  001B                     	;# 
  1172  001C                     	;# 
  1173  001D                     	;# 
  1174  001E                     	;# 
  1175  001F                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0092                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0097                     	;# 
  1185  009B                     	;# 
  1186  009B                     	;# 
  1187  009C                     	;# 
  1188  009D                     	;# 
  1189  009E                     	;# 
  1190  009F                     	;# 
  1191  010C                     	;# 
  1192  010D                     	;# 
  1193  010E                     	;# 
  1194  0111                     	;# 
  1195  0112                     	;# 
  1196  0113                     	;# 
  1197  0114                     	;# 
  1198  0115                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  0118                     	;# 
  1202  0119                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  0197                     	;# 
  1207  0199                     	;# 
  1208  0199                     	;# 
  1209  0199                     	;# 
  1210  019A                     	;# 
  1211  019A                     	;# 
  1212  019A                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019C                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019D                     	;# 
  1222  019D                     	;# 
  1223  019D                     	;# 
  1224  019E                     	;# 
  1225  019E                     	;# 
  1226  019E                     	;# 
  1227  019F                     	;# 
  1228  019F                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  020C                     	;# 
  1233  020D                     	;# 
  1234  020E                     	;# 
  1235  0211                     	;# 
  1236  0211                     	;# 
  1237  0212                     	;# 
  1238  0212                     	;# 
  1239  0213                     	;# 
  1240  0213                     	;# 
  1241  0214                     	;# 
  1242  0214                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0216                     	;# 
  1248  0216                     	;# 
  1249  0217                     	;# 
  1250  0217                     	;# 
  1251  0219                     	;# 
  1252  021A                     	;# 
  1253  021B                     	;# 
  1254  021C                     	;# 
  1255  021D                     	;# 
  1256  021D                     	;# 
  1257  021E                     	;# 
  1258  021F                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028E                     	;# 
  1262  0291                     	;# 
  1263  0291                     	;# 
  1264  0292                     	;# 
  1265  0293                     	;# 
  1266  0294                     	;# 
  1267  0295                     	;# 
  1268  0295                     	;# 
  1269  0296                     	;# 
  1270  0297                     	;# 
  1271  0298                     	;# 
  1272  029F                     	;# 
  1273  030C                     	;# 
  1274  030D                     	;# 
  1275  030E                     	;# 
  1276  0311                     	;# 
  1277  0311                     	;# 
  1278  0312                     	;# 
  1279  0313                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0315                     	;# 
  1283  0316                     	;# 
  1284  0317                     	;# 
  1285  0318                     	;# 
  1286  038C                     	;# 
  1287  038D                     	;# 
  1288  038E                     	;# 
  1289  0391                     	;# 
  1290  0392                     	;# 
  1291  0393                     	;# 
  1292  0394                     	;# 
  1293  0395                     	;# 
  1294  0396                     	;# 
  1295  0397                     	;# 
  1296  0398                     	;# 
  1297  0399                     	;# 
  1298  039A                     	;# 
  1299  039C                     	;# 
  1300  039D                     	;# 
  1301  039E                     	;# 
  1302  039F                     	;# 
  1303  0411                     	;# 
  1304  0411                     	;# 
  1305  0412                     	;# 
  1306  0413                     	;# 
  1307  0414                     	;# 
  1308  0415                     	;# 
  1309  0416                     	;# 
  1310  0417                     	;# 
  1311  0418                     	;# 
  1312  0418                     	;# 
  1313  0419                     	;# 
  1314  041A                     	;# 
  1315  041B                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  0498                     	;# 
  1321  0498                     	;# 
  1322  0499                     	;# 
  1323  049A                     	;# 
  1324  049B                     	;# 
  1325  049B                     	;# 
  1326  049C                     	;# 
  1327  049D                     	;# 
  1328  049E                     	;# 
  1329  049F                     	;# 
  1330  0617                     	;# 
  1331  0618                     	;# 
  1332  0619                     	;# 
  1333  0619                     	;# 
  1334  061A                     	;# 
  1335  061B                     	;# 
  1336  061C                     	;# 
  1337  061C                     	;# 
  1338  061F                     	;# 
  1339  0691                     	;# 
  1340  0692                     	;# 
  1341  0693                     	;# 
  1342  0694                     	;# 
  1343  0695                     	;# 
  1344  0696                     	;# 
  1345  0697                     	;# 
  1346  0698                     	;# 
  1347  0699                     	;# 
  1348  0711                     	;# 
  1349  0712                     	;# 
  1350  0713                     	;# 
  1351  0714                     	;# 
  1352  0715                     	;# 
  1353  0716                     	;# 
  1354  0717                     	;# 
  1355  0718                     	;# 
  1356  0719                     	;# 
  1357  0891                     	;# 
  1358  0891                     	;# 
  1359  0891                     	;# 
  1360  0891                     	;# 
  1361  0891                     	;# 
  1362  0891                     	;# 
  1363  0892                     	;# 
  1364  0892                     	;# 
  1365  0892                     	;# 
  1366  0893                     	;# 
  1367  0893                     	;# 
  1368  0893                     	;# 
  1369  0893                     	;# 
  1370  0893                     	;# 
  1371  0893                     	;# 
  1372  0894                     	;# 
  1373  0894                     	;# 
  1374  0894                     	;# 
  1375  0895                     	;# 
  1376  0895                     	;# 
  1377  0895                     	;# 
  1378  0896                     	;# 
  1379  0896                     	;# 
  1380  0896                     	;# 
  1381  089B                     	;# 
  1382  0911                     	;# 
  1383  0912                     	;# 
  1384  0913                     	;# 
  1385  0914                     	;# 
  1386  0915                     	;# 
  1387  0916                     	;# 
  1388  0918                     	;# 
  1389  0919                     	;# 
  1390  091A                     	;# 
  1391  091B                     	;# 
  1392  091C                     	;# 
  1393  091D                     	;# 
  1394  091E                     	;# 
  1395  091F                     	;# 
  1396  0E0F                     	;# 
  1397  0E10                     	;# 
  1398  0E11                     	;# 
  1399  0E12                     	;# 
  1400  0E13                     	;# 
  1401  0E14                     	;# 
  1402  0E15                     	;# 
  1403  0E16                     	;# 
  1404  0E17                     	;# 
  1405  0E18                     	;# 
  1406  0E19                     	;# 
  1407  0E1A                     	;# 
  1408  0E1B                     	;# 
  1409  0E1C                     	;# 
  1410  0E1D                     	;# 
  1411  0E1E                     	;# 
  1412  0E1F                     	;# 
  1413  0E20                     	;# 
  1414  0E21                     	;# 
  1415  0E22                     	;# 
  1416  0E24                     	;# 
  1417  0E25                     	;# 
  1418  0E28                     	;# 
  1419  0E29                     	;# 
  1420  0E2A                     	;# 
  1421  0E2B                     	;# 
  1422  0E2C                     	;# 
  1423  0E2D                     	;# 
  1424  0E2E                     	;# 
  1425  0E2F                     	;# 
  1426  0E90                     	;# 
  1427  0E91                     	;# 
  1428  0E92                     	;# 
  1429  0E94                     	;# 
  1430  0E95                     	;# 
  1431  0E9C                     	;# 
  1432  0E9D                     	;# 
  1433  0E9E                     	;# 
  1434  0E9F                     	;# 
  1435  0EA0                     	;# 
  1436  0EA1                     	;# 
  1437  0EA2                     	;# 
  1438  0EA3                     	;# 
  1439  0EA4                     	;# 
  1440  0EA5                     	;# 
  1441  0EA6                     	;# 
  1442  0EA7                     	;# 
  1443  0F0F                     	;# 
  1444  0F10                     	;# 
  1445  0F11                     	;# 
  1446  0F12                     	;# 
  1447  0F13                     	;# 
  1448  0F14                     	;# 
  1449  0F15                     	;# 
  1450  0F16                     	;# 
  1451  0F17                     	;# 
  1452  0F18                     	;# 
  1453  0F19                     	;# 
  1454  0F1A                     	;# 
  1455  0F1B                     	;# 
  1456  0F1C                     	;# 
  1457  0F1D                     	;# 
  1458  0F1E                     	;# 
  1459  0F1F                     	;# 
  1460  0F20                     	;# 
  1461  0F21                     	;# 
  1462  0F22                     	;# 
  1463  0F23                     	;# 
  1464  0F24                     	;# 
  1465  0F25                     	;# 
  1466  0F26                     	;# 
  1467  0F27                     	;# 
  1468  0F28                     	;# 
  1469  0F29                     	;# 
  1470  0F2A                     	;# 
  1471  0F2B                     	;# 
  1472  0F2C                     	;# 
  1473  0F2D                     	;# 
  1474  0F2E                     	;# 
  1475  0F2F                     	;# 
  1476  0F30                     	;# 
  1477  0F31                     	;# 
  1478  0F32                     	;# 
  1479  0F33                     	;# 
  1480  0F34                     	;# 
  1481  0F35                     	;# 
  1482  0F36                     	;# 
  1483  0F37                     	;# 
  1484  0FE4                     	;# 
  1485  0FE5                     	;# 
  1486  0FE6                     	;# 
  1487  0FE7                     	;# 
  1488  0FE8                     	;# 
  1489  0FE9                     	;# 
  1490  0FEA                     	;# 
  1491  0FEB                     	;# 
  1492  0FED                     	;# 
  1493  0FEE                     	;# 
  1494  0FEF                     	;# 
  1495  0000                     	;# 
  1496  0001                     	;# 
  1497  0002                     	;# 
  1498  0003                     	;# 
  1499  0004                     	;# 
  1500  0005                     	;# 
  1501  0006                     	;# 
  1502  0007                     	;# 
  1503  0008                     	;# 
  1504  0009                     	;# 
  1505  000A                     	;# 
  1506  000B                     	;# 
  1507  000C                     	;# 
  1508  000D                     	;# 
  1509  000E                     	;# 
  1510  0010                     	;# 
  1511  0011                     	;# 
  1512  0012                     	;# 
  1513  0013                     	;# 
  1514  0014                     	;# 
  1515  0015                     	;# 
  1516  0015                     	;# 
  1517  0016                     	;# 
  1518  0016                     	;# 
  1519  0017                     	;# 
  1520  0018                     	;# 
  1521  0019                     	;# 
  1522  0019                     	;# 
  1523  001A                     	;# 
  1524  001B                     	;# 
  1525  001C                     	;# 
  1526  001D                     	;# 
  1527  001E                     	;# 
  1528  001F                     	;# 
  1529  008C                     	;# 
  1530  008D                     	;# 
  1531  008E                     	;# 
  1532  0090                     	;# 
  1533  0091                     	;# 
  1534  0092                     	;# 
  1535  0093                     	;# 
  1536  0094                     	;# 
  1537  0097                     	;# 
  1538  009B                     	;# 
  1539  009B                     	;# 
  1540  009C                     	;# 
  1541  009D                     	;# 
  1542  009E                     	;# 
  1543  009F                     	;# 
  1544  010C                     	;# 
  1545  010D                     	;# 
  1546  010E                     	;# 
  1547  0111                     	;# 
  1548  0112                     	;# 
  1549  0113                     	;# 
  1550  0114                     	;# 
  1551  0115                     	;# 
  1552  0116                     	;# 
  1553  0117                     	;# 
  1554  0118                     	;# 
  1555  0119                     	;# 
  1556  018C                     	;# 
  1557  018D                     	;# 
  1558  018E                     	;# 
  1559  0197                     	;# 
  1560  0199                     	;# 
  1561  0199                     	;# 
  1562  0199                     	;# 
  1563  019A                     	;# 
  1564  019A                     	;# 
  1565  019A                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019C                     	;# 
  1572  019C                     	;# 
  1573  019C                     	;# 
  1574  019D                     	;# 
  1575  019D                     	;# 
  1576  019D                     	;# 
  1577  019E                     	;# 
  1578  019E                     	;# 
  1579  019E                     	;# 
  1580  019F                     	;# 
  1581  019F                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  020C                     	;# 
  1586  020D                     	;# 
  1587  020E                     	;# 
  1588  0211                     	;# 
  1589  0211                     	;# 
  1590  0212                     	;# 
  1591  0212                     	;# 
  1592  0213                     	;# 
  1593  0213                     	;# 
  1594  0214                     	;# 
  1595  0214                     	;# 
  1596  0215                     	;# 
  1597  0215                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0216                     	;# 
  1601  0216                     	;# 
  1602  0217                     	;# 
  1603  0217                     	;# 
  1604  0219                     	;# 
  1605  021A                     	;# 
  1606  021B                     	;# 
  1607  021C                     	;# 
  1608  021D                     	;# 
  1609  021D                     	;# 
  1610  021E                     	;# 
  1611  021F                     	;# 
  1612  028C                     	;# 
  1613  028D                     	;# 
  1614  028E                     	;# 
  1615  0291                     	;# 
  1616  0291                     	;# 
  1617  0292                     	;# 
  1618  0293                     	;# 
  1619  0294                     	;# 
  1620  0295                     	;# 
  1621  0295                     	;# 
  1622  0296                     	;# 
  1623  0297                     	;# 
  1624  0298                     	;# 
  1625  029F                     	;# 
  1626  030C                     	;# 
  1627  030D                     	;# 
  1628  030E                     	;# 
  1629  0311                     	;# 
  1630  0311                     	;# 
  1631  0312                     	;# 
  1632  0313                     	;# 
  1633  0314                     	;# 
  1634  0315                     	;# 
  1635  0315                     	;# 
  1636  0316                     	;# 
  1637  0317                     	;# 
  1638  0318                     	;# 
  1639  038C                     	;# 
  1640  038D                     	;# 
  1641  038E                     	;# 
  1642  0391                     	;# 
  1643  0392                     	;# 
  1644  0393                     	;# 
  1645  0394                     	;# 
  1646  0395                     	;# 
  1647  0396                     	;# 
  1648  0397                     	;# 
  1649  0398                     	;# 
  1650  0399                     	;# 
  1651  039A                     	;# 
  1652  039C                     	;# 
  1653  039D                     	;# 
  1654  039E                     	;# 
  1655  039F                     	;# 
  1656  0411                     	;# 
  1657  0411                     	;# 
  1658  0412                     	;# 
  1659  0413                     	;# 
  1660  0414                     	;# 
  1661  0415                     	;# 
  1662  0416                     	;# 
  1663  0417                     	;# 
  1664  0418                     	;# 
  1665  0418                     	;# 
  1666  0419                     	;# 
  1667  041A                     	;# 
  1668  041B                     	;# 
  1669  041C                     	;# 
  1670  041D                     	;# 
  1671  041E                     	;# 
  1672  041F                     	;# 
  1673  0498                     	;# 
  1674  0498                     	;# 
  1675  0499                     	;# 
  1676  049A                     	;# 
  1677  049B                     	;# 
  1678  049B                     	;# 
  1679  049C                     	;# 
  1680  049D                     	;# 
  1681  049E                     	;# 
  1682  049F                     	;# 
  1683  0617                     	;# 
  1684  0618                     	;# 
  1685  0619                     	;# 
  1686  0619                     	;# 
  1687  061A                     	;# 
  1688  061B                     	;# 
  1689  061C                     	;# 
  1690  061C                     	;# 
  1691  061F                     	;# 
  1692  0691                     	;# 
  1693  0692                     	;# 
  1694  0693                     	;# 
  1695  0694                     	;# 
  1696  0695                     	;# 
  1697  0696                     	;# 
  1698  0697                     	;# 
  1699  0698                     	;# 
  1700  0699                     	;# 
  1701  0711                     	;# 
  1702  0712                     	;# 
  1703  0713                     	;# 
  1704  0714                     	;# 
  1705  0715                     	;# 
  1706  0716                     	;# 
  1707  0717                     	;# 
  1708  0718                     	;# 
  1709  0719                     	;# 
  1710  0891                     	;# 
  1711  0891                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0892                     	;# 
  1717  0892                     	;# 
  1718  0892                     	;# 
  1719  0893                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0894                     	;# 
  1726  0894                     	;# 
  1727  0894                     	;# 
  1728  0895                     	;# 
  1729  0895                     	;# 
  1730  0895                     	;# 
  1731  0896                     	;# 
  1732  0896                     	;# 
  1733  0896                     	;# 
  1734  089B                     	;# 
  1735  0911                     	;# 
  1736  0912                     	;# 
  1737  0913                     	;# 
  1738  0914                     	;# 
  1739  0915                     	;# 
  1740  0916                     	;# 
  1741  0918                     	;# 
  1742  0919                     	;# 
  1743  091A                     	;# 
  1744  091B                     	;# 
  1745  091C                     	;# 
  1746  091D                     	;# 
  1747  091E                     	;# 
  1748  091F                     	;# 
  1749  0E0F                     	;# 
  1750  0E10                     	;# 
  1751  0E11                     	;# 
  1752  0E12                     	;# 
  1753  0E13                     	;# 
  1754  0E14                     	;# 
  1755  0E15                     	;# 
  1756  0E16                     	;# 
  1757  0E17                     	;# 
  1758  0E18                     	;# 
  1759  0E19                     	;# 
  1760  0E1A                     	;# 
  1761  0E1B                     	;# 
  1762  0E1C                     	;# 
  1763  0E1D                     	;# 
  1764  0E1E                     	;# 
  1765  0E1F                     	;# 
  1766  0E20                     	;# 
  1767  0E21                     	;# 
  1768  0E22                     	;# 
  1769  0E24                     	;# 
  1770  0E25                     	;# 
  1771  0E28                     	;# 
  1772  0E29                     	;# 
  1773  0E2A                     	;# 
  1774  0E2B                     	;# 
  1775  0E2C                     	;# 
  1776  0E2D                     	;# 
  1777  0E2E                     	;# 
  1778  0E2F                     	;# 
  1779  0E90                     	;# 
  1780  0E91                     	;# 
  1781  0E92                     	;# 
  1782  0E94                     	;# 
  1783  0E95                     	;# 
  1784  0E9C                     	;# 
  1785  0E9D                     	;# 
  1786  0E9E                     	;# 
  1787  0E9F                     	;# 
  1788  0EA0                     	;# 
  1789  0EA1                     	;# 
  1790  0EA2                     	;# 
  1791  0EA3                     	;# 
  1792  0EA4                     	;# 
  1793  0EA5                     	;# 
  1794  0EA6                     	;# 
  1795  0EA7                     	;# 
  1796  0F0F                     	;# 
  1797  0F10                     	;# 
  1798  0F11                     	;# 
  1799  0F12                     	;# 
  1800  0F13                     	;# 
  1801  0F14                     	;# 
  1802  0F15                     	;# 
  1803  0F16                     	;# 
  1804  0F17                     	;# 
  1805  0F18                     	;# 
  1806  0F19                     	;# 
  1807  0F1A                     	;# 
  1808  0F1B                     	;# 
  1809  0F1C                     	;# 
  1810  0F1D                     	;# 
  1811  0F1E                     	;# 
  1812  0F1F                     	;# 
  1813  0F20                     	;# 
  1814  0F21                     	;# 
  1815  0F22                     	;# 
  1816  0F23                     	;# 
  1817  0F24                     	;# 
  1818  0F25                     	;# 
  1819  0F26                     	;# 
  1820  0F27                     	;# 
  1821  0F28                     	;# 
  1822  0F29                     	;# 
  1823  0F2A                     	;# 
  1824  0F2B                     	;# 
  1825  0F2C                     	;# 
  1826  0F2D                     	;# 
  1827  0F2E                     	;# 
  1828  0F2F                     	;# 
  1829  0F30                     	;# 
  1830  0F31                     	;# 
  1831  0F32                     	;# 
  1832  0F33                     	;# 
  1833  0F34                     	;# 
  1834  0F35                     	;# 
  1835  0F36                     	;# 
  1836  0F37                     	;# 
  1837  0FE4                     	;# 
  1838  0FE5                     	;# 
  1839  0FE6                     	;# 
  1840  0FE7                     	;# 
  1841  0FE8                     	;# 
  1842  0FE9                     	;# 
  1843  0FEA                     	;# 
  1844  0FEB                     	;# 
  1845  0FED                     	;# 
  1846  0FEE                     	;# 
  1847  0FEF                     	;# 
  1848  0000                     	;# 
  1849  0001                     	;# 
  1850  0002                     	;# 
  1851  0003                     	;# 
  1852  0004                     	;# 
  1853  0005                     	;# 
  1854  0006                     	;# 
  1855  0007                     	;# 
  1856  0008                     	;# 
  1857  0009                     	;# 
  1858  000A                     	;# 
  1859  000B                     	;# 
  1860  000C                     	;# 
  1861  000D                     	;# 
  1862  000E                     	;# 
  1863  0010                     	;# 
  1864  0011                     	;# 
  1865  0012                     	;# 
  1866  0013                     	;# 
  1867  0014                     	;# 
  1868  0015                     	;# 
  1869  0015                     	;# 
  1870  0016                     	;# 
  1871  0016                     	;# 
  1872  0017                     	;# 
  1873  0018                     	;# 
  1874  0019                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001D                     	;# 
  1880  001E                     	;# 
  1881  001F                     	;# 
  1882  008C                     	;# 
  1883  008D                     	;# 
  1884  008E                     	;# 
  1885  0090                     	;# 
  1886  0091                     	;# 
  1887  0092                     	;# 
  1888  0093                     	;# 
  1889  0094                     	;# 
  1890  0097                     	;# 
  1891  009B                     	;# 
  1892  009B                     	;# 
  1893  009C                     	;# 
  1894  009D                     	;# 
  1895  009E                     	;# 
  1896  009F                     	;# 
  1897  010C                     	;# 
  1898  010D                     	;# 
  1899  010E                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0197                     	;# 
  1913  0199                     	;# 
  1914  0199                     	;# 
  1915  0199                     	;# 
  1916  019A                     	;# 
  1917  019A                     	;# 
  1918  019A                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019C                     	;# 
  1925  019C                     	;# 
  1926  019C                     	;# 
  1927  019D                     	;# 
  1928  019D                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019E                     	;# 
  1932  019E                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  020C                     	;# 
  1939  020D                     	;# 
  1940  020E                     	;# 
  1941  0211                     	;# 
  1942  0211                     	;# 
  1943  0212                     	;# 
  1944  0212                     	;# 
  1945  0213                     	;# 
  1946  0213                     	;# 
  1947  0214                     	;# 
  1948  0214                     	;# 
  1949  0215                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0216                     	;# 
  1954  0216                     	;# 
  1955  0217                     	;# 
  1956  0217                     	;# 
  1957  0219                     	;# 
  1958  021A                     	;# 
  1959  021B                     	;# 
  1960  021C                     	;# 
  1961  021D                     	;# 
  1962  021D                     	;# 
  1963  021E                     	;# 
  1964  021F                     	;# 
  1965  028C                     	;# 
  1966  028D                     	;# 
  1967  028E                     	;# 
  1968  0291                     	;# 
  1969  0291                     	;# 
  1970  0292                     	;# 
  1971  0293                     	;# 
  1972  0294                     	;# 
  1973  0295                     	;# 
  1974  0295                     	;# 
  1975  0296                     	;# 
  1976  0297                     	;# 
  1977  0298                     	;# 
  1978  029F                     	;# 
  1979  030C                     	;# 
  1980  030D                     	;# 
  1981  030E                     	;# 
  1982  0311                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  0314                     	;# 
  1987  0315                     	;# 
  1988  0315                     	;# 
  1989  0316                     	;# 
  1990  0317                     	;# 
  1991  0318                     	;# 
  1992  038C                     	;# 
  1993  038D                     	;# 
  1994  038E                     	;# 
  1995  0391                     	;# 
  1996  0392                     	;# 
  1997  0393                     	;# 
  1998  0394                     	;# 
  1999  0395                     	;# 
  2000  0396                     	;# 
  2001  0397                     	;# 
  2002  0398                     	;# 
  2003  0399                     	;# 
  2004  039A                     	;# 
  2005  039C                     	;# 
  2006  039D                     	;# 
  2007  039E                     	;# 
  2008  039F                     	;# 
  2009  0411                     	;# 
  2010  0411                     	;# 
  2011  0412                     	;# 
  2012  0413                     	;# 
  2013  0414                     	;# 
  2014  0415                     	;# 
  2015  0416                     	;# 
  2016  0417                     	;# 
  2017  0418                     	;# 
  2018  0418                     	;# 
  2019  0419                     	;# 
  2020  041A                     	;# 
  2021  041B                     	;# 
  2022  041C                     	;# 
  2023  041D                     	;# 
  2024  041E                     	;# 
  2025  041F                     	;# 
  2026  0498                     	;# 
  2027  0498                     	;# 
  2028  0499                     	;# 
  2029  049A                     	;# 
  2030  049B                     	;# 
  2031  049B                     	;# 
  2032  049C                     	;# 
  2033  049D                     	;# 
  2034  049E                     	;# 
  2035  049F                     	;# 
  2036  0617                     	;# 
  2037  0618                     	;# 
  2038  0619                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  061C                     	;# 
  2044  061F                     	;# 
  2045  0691                     	;# 
  2046  0692                     	;# 
  2047  0693                     	;# 
  2048  0694                     	;# 
  2049  0695                     	;# 
  2050  0696                     	;# 
  2051  0697                     	;# 
  2052  0698                     	;# 
  2053  0699                     	;# 
  2054  0711                     	;# 
  2055  0712                     	;# 
  2056  0713                     	;# 
  2057  0714                     	;# 
  2058  0715                     	;# 
  2059  0716                     	;# 
  2060  0717                     	;# 
  2061  0718                     	;# 
  2062  0719                     	;# 
  2063  0891                     	;# 
  2064  0891                     	;# 
  2065  0891                     	;# 
  2066  0891                     	;# 
  2067  0891                     	;# 
  2068  0891                     	;# 
  2069  0892                     	;# 
  2070  0892                     	;# 
  2071  0892                     	;# 
  2072  0893                     	;# 
  2073  0893                     	;# 
  2074  0893                     	;# 
  2075  0893                     	;# 
  2076  0893                     	;# 
  2077  0893                     	;# 
  2078  0894                     	;# 
  2079  0894                     	;# 
  2080  0894                     	;# 
  2081  0895                     	;# 
  2082  0895                     	;# 
  2083  0895                     	;# 
  2084  0896                     	;# 
  2085  0896                     	;# 
  2086  0896                     	;# 
  2087  089B                     	;# 
  2088  0911                     	;# 
  2089  0912                     	;# 
  2090  0913                     	;# 
  2091  0914                     	;# 
  2092  0915                     	;# 
  2093  0916                     	;# 
  2094  0918                     	;# 
  2095  0919                     	;# 
  2096  091A                     	;# 
  2097  091B                     	;# 
  2098  091C                     	;# 
  2099  091D                     	;# 
  2100  091E                     	;# 
  2101  091F                     	;# 
  2102  0E0F                     	;# 
  2103  0E10                     	;# 
  2104  0E11                     	;# 
  2105  0E12                     	;# 
  2106  0E13                     	;# 
  2107  0E14                     	;# 
  2108  0E15                     	;# 
  2109  0E16                     	;# 
  2110  0E17                     	;# 
  2111  0E18                     	;# 
  2112  0E19                     	;# 
  2113  0E1A                     	;# 
  2114  0E1B                     	;# 
  2115  0E1C                     	;# 
  2116  0E1D                     	;# 
  2117  0E1E                     	;# 
  2118  0E1F                     	;# 
  2119  0E20                     	;# 
  2120  0E21                     	;# 
  2121  0E22                     	;# 
  2122  0E24                     	;# 
  2123  0E25                     	;# 
  2124  0E28                     	;# 
  2125  0E29                     	;# 
  2126  0E2A                     	;# 
  2127  0E2B                     	;# 
  2128  0E2C                     	;# 
  2129  0E2D                     	;# 
  2130  0E2E                     	;# 
  2131  0E2F                     	;# 
  2132  0E90                     	;# 
  2133  0E91                     	;# 
  2134  0E92                     	;# 
  2135  0E94                     	;# 
  2136  0E95                     	;# 
  2137  0E9C                     	;# 
  2138  0E9D                     	;# 
  2139  0E9E                     	;# 
  2140  0E9F                     	;# 
  2141  0EA0                     	;# 
  2142  0EA1                     	;# 
  2143  0EA2                     	;# 
  2144  0EA3                     	;# 
  2145  0EA4                     	;# 
  2146  0EA5                     	;# 
  2147  0EA6                     	;# 
  2148  0EA7                     	;# 
  2149  0F0F                     	;# 
  2150  0F10                     	;# 
  2151  0F11                     	;# 
  2152  0F12                     	;# 
  2153  0F13                     	;# 
  2154  0F14                     	;# 
  2155  0F15                     	;# 
  2156  0F16                     	;# 
  2157  0F17                     	;# 
  2158  0F18                     	;# 
  2159  0F19                     	;# 
  2160  0F1A                     	;# 
  2161  0F1B                     	;# 
  2162  0F1C                     	;# 
  2163  0F1D                     	;# 
  2164  0F1E                     	;# 
  2165  0F1F                     	;# 
  2166  0F20                     	;# 
  2167  0F21                     	;# 
  2168  0F22                     	;# 
  2169  0F23                     	;# 
  2170  0F24                     	;# 
  2171  0F25                     	;# 
  2172  0F26                     	;# 
  2173  0F27                     	;# 
  2174  0F28                     	;# 
  2175  0F29                     	;# 
  2176  0F2A                     	;# 
  2177  0F2B                     	;# 
  2178  0F2C                     	;# 
  2179  0F2D                     	;# 
  2180  0F2E                     	;# 
  2181  0F2F                     	;# 
  2182  0F30                     	;# 
  2183  0F31                     	;# 
  2184  0F32                     	;# 
  2185  0F33                     	;# 
  2186  0F34                     	;# 
  2187  0F35                     	;# 
  2188  0F36                     	;# 
  2189  0F37                     	;# 
  2190  0FE4                     	;# 
  2191  0FE5                     	;# 
  2192  0FE6                     	;# 
  2193  0FE7                     	;# 
  2194  0FE8                     	;# 
  2195  0FE9                     	;# 
  2196  0FEA                     	;# 
  2197  0FEB                     	;# 
  2198  0FED                     	;# 
  2199  0FEE                     	;# 
  2200  0FEF                     	;# 
  2201  0000                     	;# 
  2202  0001                     	;# 
  2203  0002                     	;# 
  2204  0003                     	;# 
  2205  0004                     	;# 
  2206  0005                     	;# 
  2207  0006                     	;# 
  2208  0007                     	;# 
  2209  0008                     	;# 
  2210  0009                     	;# 
  2211  000A                     	;# 
  2212  000B                     	;# 
  2213  000C                     	;# 
  2214  000D                     	;# 
  2215  000E                     	;# 
  2216  0010                     	;# 
  2217  0011                     	;# 
  2218  0012                     	;# 
  2219  0013                     	;# 
  2220  0014                     	;# 
  2221  0015                     	;# 
  2222  0015                     	;# 
  2223  0016                     	;# 
  2224  0016                     	;# 
  2225  0017                     	;# 
  2226  0018                     	;# 
  2227  0019                     	;# 
  2228  0019                     	;# 
  2229  001A                     	;# 
  2230  001B                     	;# 
  2231  001C                     	;# 
  2232  001D                     	;# 
  2233  001E                     	;# 
  2234  001F                     	;# 
  2235  008C                     	;# 
  2236  008D                     	;# 
  2237  008E                     	;# 
  2238  0090                     	;# 
  2239  0091                     	;# 
  2240  0092                     	;# 
  2241  0093                     	;# 
  2242  0094                     	;# 
  2243  0097                     	;# 
  2244  009B                     	;# 
  2245  009B                     	;# 
  2246  009C                     	;# 
  2247  009D                     	;# 
  2248  009E                     	;# 
  2249  009F                     	;# 
  2250  010C                     	;# 
  2251  010D                     	;# 
  2252  010E                     	;# 
  2253  0111                     	;# 
  2254  0112                     	;# 
  2255  0113                     	;# 
  2256  0114                     	;# 
  2257  0115                     	;# 
  2258  0116                     	;# 
  2259  0117                     	;# 
  2260  0118                     	;# 
  2261  0119                     	;# 
  2262  018C                     	;# 
  2263  018D                     	;# 
  2264  018E                     	;# 
  2265  0197                     	;# 
  2266  0199                     	;# 
  2267  0199                     	;# 
  2268  0199                     	;# 
  2269  019A                     	;# 
  2270  019A                     	;# 
  2271  019A                     	;# 
  2272  019B                     	;# 
  2273  019B                     	;# 
  2274  019B                     	;# 
  2275  019B                     	;# 
  2276  019B                     	;# 
  2277  019C                     	;# 
  2278  019C                     	;# 
  2279  019C                     	;# 
  2280  019D                     	;# 
  2281  019D                     	;# 
  2282  019D                     	;# 
  2283  019E                     	;# 
  2284  019E                     	;# 
  2285  019E                     	;# 
  2286  019F                     	;# 
  2287  019F                     	;# 
  2288  019F                     	;# 
  2289  019F                     	;# 
  2290  019F                     	;# 
  2291  020C                     	;# 
  2292  020D                     	;# 
  2293  020E                     	;# 
  2294  0211                     	;# 
  2295  0211                     	;# 
  2296  0212                     	;# 
  2297  0212                     	;# 
  2298  0213                     	;# 
  2299  0213                     	;# 
  2300  0214                     	;# 
  2301  0214                     	;# 
  2302  0215                     	;# 
  2303  0215                     	;# 
  2304  0215                     	;# 
  2305  0215                     	;# 
  2306  0216                     	;# 
  2307  0216                     	;# 
  2308  0217                     	;# 
  2309  0217                     	;# 
  2310  0219                     	;# 
  2311  021A                     	;# 
  2312  021B                     	;# 
  2313  021C                     	;# 
  2314  021D                     	;# 
  2315  021D                     	;# 
  2316  021E                     	;# 
  2317  021F                     	;# 
  2318  028C                     	;# 
  2319  028D                     	;# 
  2320  028E                     	;# 
  2321  0291                     	;# 
  2322  0291                     	;# 
  2323  0292                     	;# 
  2324  0293                     	;# 
  2325  0294                     	;# 
  2326  0295                     	;# 
  2327  0295                     	;# 
  2328  0296                     	;# 
  2329  0297                     	;# 
  2330  0298                     	;# 
  2331  029F                     	;# 
  2332  030C                     	;# 
  2333  030D                     	;# 
  2334  030E                     	;# 
  2335  0311                     	;# 
  2336  0311                     	;# 
  2337  0312                     	;# 
  2338  0313                     	;# 
  2339  0314                     	;# 
  2340  0315                     	;# 
  2341  0315                     	;# 
  2342  0316                     	;# 
  2343  0317                     	;# 
  2344  0318                     	;# 
  2345  038C                     	;# 
  2346  038D                     	;# 
  2347  038E                     	;# 
  2348  0391                     	;# 
  2349  0392                     	;# 
  2350  0393                     	;# 
  2351  0394                     	;# 
  2352  0395                     	;# 
  2353  0396                     	;# 
  2354  0397                     	;# 
  2355  0398                     	;# 
  2356  0399                     	;# 
  2357  039A                     	;# 
  2358  039C                     	;# 
  2359  039D                     	;# 
  2360  039E                     	;# 
  2361  039F                     	;# 
  2362  0411                     	;# 
  2363  0411                     	;# 
  2364  0412                     	;# 
  2365  0413                     	;# 
  2366  0414                     	;# 
  2367  0415                     	;# 
  2368  0416                     	;# 
  2369  0417                     	;# 
  2370  0418                     	;# 
  2371  0418                     	;# 
  2372  0419                     	;# 
  2373  041A                     	;# 
  2374  041B                     	;# 
  2375  041C                     	;# 
  2376  041D                     	;# 
  2377  041E                     	;# 
  2378  041F                     	;# 
  2379  0498                     	;# 
  2380  0498                     	;# 
  2381  0499                     	;# 
  2382  049A                     	;# 
  2383  049B                     	;# 
  2384  049B                     	;# 
  2385  049C                     	;# 
  2386  049D                     	;# 
  2387  049E                     	;# 
  2388  049F                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061C                     	;# 
  2397  061F                     	;# 
  2398  0691                     	;# 
  2399  0692                     	;# 
  2400  0693                     	;# 
  2401  0694                     	;# 
  2402  0695                     	;# 
  2403  0696                     	;# 
  2404  0697                     	;# 
  2405  0698                     	;# 
  2406  0699                     	;# 
  2407  0711                     	;# 
  2408  0712                     	;# 
  2409  0713                     	;# 
  2410  0714                     	;# 
  2411  0715                     	;# 
  2412  0716                     	;# 
  2413  0717                     	;# 
  2414  0718                     	;# 
  2415  0719                     	;# 
  2416  0891                     	;# 
  2417  0891                     	;# 
  2418  0891                     	;# 
  2419  0891                     	;# 
  2420  0891                     	;# 
  2421  0891                     	;# 
  2422  0892                     	;# 
  2423  0892                     	;# 
  2424  0892                     	;# 
  2425  0893                     	;# 
  2426  0893                     	;# 
  2427  0893                     	;# 
  2428  0893                     	;# 
  2429  0893                     	;# 
  2430  0893                     	;# 
  2431  0894                     	;# 
  2432  0894                     	;# 
  2433  0894                     	;# 
  2434  0895                     	;# 
  2435  0895                     	;# 
  2436  0895                     	;# 
  2437  0896                     	;# 
  2438  0896                     	;# 
  2439  0896                     	;# 
  2440  089B                     	;# 
  2441  0911                     	;# 
  2442  0912                     	;# 
  2443  0913                     	;# 
  2444  0914                     	;# 
  2445  0915                     	;# 
  2446  0916                     	;# 
  2447  0918                     	;# 
  2448  0919                     	;# 
  2449  091A                     	;# 
  2450  091B                     	;# 
  2451  091C                     	;# 
  2452  091D                     	;# 
  2453  091E                     	;# 
  2454  091F                     	;# 
  2455  0E0F                     	;# 
  2456  0E10                     	;# 
  2457  0E11                     	;# 
  2458  0E12                     	;# 
  2459  0E13                     	;# 
  2460  0E14                     	;# 
  2461  0E15                     	;# 
  2462  0E16                     	;# 
  2463  0E17                     	;# 
  2464  0E18                     	;# 
  2465  0E19                     	;# 
  2466  0E1A                     	;# 
  2467  0E1B                     	;# 
  2468  0E1C                     	;# 
  2469  0E1D                     	;# 
  2470  0E1E                     	;# 
  2471  0E1F                     	;# 
  2472  0E20                     	;# 
  2473  0E21                     	;# 
  2474  0E22                     	;# 
  2475  0E24                     	;# 
  2476  0E25                     	;# 
  2477  0E28                     	;# 
  2478  0E29                     	;# 
  2479  0E2A                     	;# 
  2480  0E2B                     	;# 
  2481  0E2C                     	;# 
  2482  0E2D                     	;# 
  2483  0E2E                     	;# 
  2484  0E2F                     	;# 
  2485  0E90                     	;# 
  2486  0E91                     	;# 
  2487  0E92                     	;# 
  2488  0E94                     	;# 
  2489  0E95                     	;# 
  2490  0E9C                     	;# 
  2491  0E9D                     	;# 
  2492  0E9E                     	;# 
  2493  0E9F                     	;# 
  2494  0EA0                     	;# 
  2495  0EA1                     	;# 
  2496  0EA2                     	;# 
  2497  0EA3                     	;# 
  2498  0EA4                     	;# 
  2499  0EA5                     	;# 
  2500  0EA6                     	;# 
  2501  0EA7                     	;# 
  2502  0F0F                     	;# 
  2503  0F10                     	;# 
  2504  0F11                     	;# 
  2505  0F12                     	;# 
  2506  0F13                     	;# 
  2507  0F14                     	;# 
  2508  0F15                     	;# 
  2509  0F16                     	;# 
  2510  0F17                     	;# 
  2511  0F18                     	;# 
  2512  0F19                     	;# 
  2513  0F1A                     	;# 
  2514  0F1B                     	;# 
  2515  0F1C                     	;# 
  2516  0F1D                     	;# 
  2517  0F1E                     	;# 
  2518  0F1F                     	;# 
  2519  0F20                     	;# 
  2520  0F21                     	;# 
  2521  0F22                     	;# 
  2522  0F23                     	;# 
  2523  0F24                     	;# 
  2524  0F25                     	;# 
  2525  0F26                     	;# 
  2526  0F27                     	;# 
  2527  0F28                     	;# 
  2528  0F29                     	;# 
  2529  0F2A                     	;# 
  2530  0F2B                     	;# 
  2531  0F2C                     	;# 
  2532  0F2D                     	;# 
  2533  0F2E                     	;# 
  2534  0F2F                     	;# 
  2535  0F30                     	;# 
  2536  0F31                     	;# 
  2537  0F32                     	;# 
  2538  0F33                     	;# 
  2539  0F34                     	;# 
  2540  0F35                     	;# 
  2541  0F36                     	;# 
  2542  0F37                     	;# 
  2543  0FE4                     	;# 
  2544  0FE5                     	;# 
  2545  0FE6                     	;# 
  2546  0FE7                     	;# 
  2547  0FE8                     	;# 
  2548  0FE9                     	;# 
  2549  0FEA                     	;# 
  2550  0FEB                     	;# 
  2551  0FED                     	;# 
  2552  0FEE                     	;# 
  2553  0FEF                     	;# 
  2554  0000                     	;# 
  2555  0001                     	;# 
  2556  0002                     	;# 
  2557  0003                     	;# 
  2558  0004                     	;# 
  2559  0005                     	;# 
  2560  0006                     	;# 
  2561  0007                     	;# 
  2562  0008                     	;# 
  2563  0009                     	;# 
  2564  000A                     	;# 
  2565  000B                     	;# 
  2566  000C                     	;# 
  2567  000D                     	;# 
  2568  000E                     	;# 
  2569  0010                     	;# 
  2570  0011                     	;# 
  2571  0012                     	;# 
  2572  0013                     	;# 
  2573  0014                     	;# 
  2574  0015                     	;# 
  2575  0015                     	;# 
  2576  0016                     	;# 
  2577  0016                     	;# 
  2578  0017                     	;# 
  2579  0018                     	;# 
  2580  0019                     	;# 
  2581  0019                     	;# 
  2582  001A                     	;# 
  2583  001B                     	;# 
  2584  001C                     	;# 
  2585  001D                     	;# 
  2586  001E                     	;# 
  2587  001F                     	;# 
  2588  008C                     	;# 
  2589  008D                     	;# 
  2590  008E                     	;# 
  2591  0090                     	;# 
  2592  0091                     	;# 
  2593  0092                     	;# 
  2594  0093                     	;# 
  2595  0094                     	;# 
  2596  0097                     	;# 
  2597  009B                     	;# 
  2598  009B                     	;# 
  2599  009C                     	;# 
  2600  009D                     	;# 
  2601  009E                     	;# 
  2602  009F                     	;# 
  2603  010C                     	;# 
  2604  010D                     	;# 
  2605  010E                     	;# 
  2606  0111                     	;# 
  2607  0112                     	;# 
  2608  0113                     	;# 
  2609  0114                     	;# 
  2610  0115                     	;# 
  2611  0116                     	;# 
  2612  0117                     	;# 
  2613  0118                     	;# 
  2614  0119                     	;# 
  2615  018C                     	;# 
  2616  018D                     	;# 
  2617  018E                     	;# 
  2618  0197                     	;# 
  2619  0199                     	;# 
  2620  0199                     	;# 
  2621  0199                     	;# 
  2622  019A                     	;# 
  2623  019A                     	;# 
  2624  019A                     	;# 
  2625  019B                     	;# 
  2626  019B                     	;# 
  2627  019B                     	;# 
  2628  019B                     	;# 
  2629  019B                     	;# 
  2630  019C                     	;# 
  2631  019C                     	;# 
  2632  019C                     	;# 
  2633  019D                     	;# 
  2634  019D                     	;# 
  2635  019D                     	;# 
  2636  019E                     	;# 
  2637  019E                     	;# 
  2638  019E                     	;# 
  2639  019F                     	;# 
  2640  019F                     	;# 
  2641  019F                     	;# 
  2642  019F                     	;# 
  2643  019F                     	;# 
  2644  020C                     	;# 
  2645  020D                     	;# 
  2646  020E                     	;# 
  2647  0211                     	;# 
  2648  0211                     	;# 
  2649  0212                     	;# 
  2650  0212                     	;# 
  2651  0213                     	;# 
  2652  0213                     	;# 
  2653  0214                     	;# 
  2654  0214                     	;# 
  2655  0215                     	;# 
  2656  0215                     	;# 
  2657  0215                     	;# 
  2658  0215                     	;# 
  2659  0216                     	;# 
  2660  0216                     	;# 
  2661  0217                     	;# 
  2662  0217                     	;# 
  2663  0219                     	;# 
  2664  021A                     	;# 
  2665  021B                     	;# 
  2666  021C                     	;# 
  2667  021D                     	;# 
  2668  021D                     	;# 
  2669  021E                     	;# 
  2670  021F                     	;# 
  2671  028C                     	;# 
  2672  028D                     	;# 
  2673  028E                     	;# 
  2674  0291                     	;# 
  2675  0291                     	;# 
  2676  0292                     	;# 
  2677  0293                     	;# 
  2678  0294                     	;# 
  2679  0295                     	;# 
  2680  0295                     	;# 
  2681  0296                     	;# 
  2682  0297                     	;# 
  2683  0298                     	;# 
  2684  029F                     	;# 
  2685  030C                     	;# 
  2686  030D                     	;# 
  2687  030E                     	;# 
  2688  0311                     	;# 
  2689  0311                     	;# 
  2690  0312                     	;# 
  2691  0313                     	;# 
  2692  0314                     	;# 
  2693  0315                     	;# 
  2694  0315                     	;# 
  2695  0316                     	;# 
  2696  0317                     	;# 
  2697  0318                     	;# 
  2698  038C                     	;# 
  2699  038D                     	;# 
  2700  038E                     	;# 
  2701  0391                     	;# 
  2702  0392                     	;# 
  2703  0393                     	;# 
  2704  0394                     	;# 
  2705  0395                     	;# 
  2706  0396                     	;# 
  2707  0397                     	;# 
  2708  0398                     	;# 
  2709  0399                     	;# 
  2710  039A                     	;# 
  2711  039C                     	;# 
  2712  039D                     	;# 
  2713  039E                     	;# 
  2714  039F                     	;# 
  2715  0411                     	;# 
  2716  0411                     	;# 
  2717  0412                     	;# 
  2718  0413                     	;# 
  2719  0414                     	;# 
  2720  0415                     	;# 
  2721  0416                     	;# 
  2722  0417                     	;# 
  2723  0418                     	;# 
  2724  0418                     	;# 
  2725  0419                     	;# 
  2726  041A                     	;# 
  2727  041B                     	;# 
  2728  041C                     	;# 
  2729  041D                     	;# 
  2730  041E                     	;# 
  2731  041F                     	;# 
  2732  0498                     	;# 
  2733  0498                     	;# 
  2734  0499                     	;# 
  2735  049A                     	;# 
  2736  049B                     	;# 
  2737  049B                     	;# 
  2738  049C                     	;# 
  2739  049D                     	;# 
  2740  049E                     	;# 
  2741  049F                     	;# 
  2742  0617                     	;# 
  2743  0618                     	;# 
  2744  0619                     	;# 
  2745  0619                     	;# 
  2746  061A                     	;# 
  2747  061B                     	;# 
  2748  061C                     	;# 
  2749  061C                     	;# 
  2750  061F                     	;# 
  2751  0691                     	;# 
  2752  0692                     	;# 
  2753  0693                     	;# 
  2754  0694                     	;# 
  2755  0695                     	;# 
  2756  0696                     	;# 
  2757  0697                     	;# 
  2758  0698                     	;# 
  2759  0699                     	;# 
  2760  0711                     	;# 
  2761  0712                     	;# 
  2762  0713                     	;# 
  2763  0714                     	;# 
  2764  0715                     	;# 
  2765  0716                     	;# 
  2766  0717                     	;# 
  2767  0718                     	;# 
  2768  0719                     	;# 
  2769  0891                     	;# 
  2770  0891                     	;# 
  2771  0891                     	;# 
  2772  0891                     	;# 
  2773  0891                     	;# 
  2774  0891                     	;# 
  2775  0892                     	;# 
  2776  0892                     	;# 
  2777  0892                     	;# 
  2778  0893                     	;# 
  2779  0893                     	;# 
  2780  0893                     	;# 
  2781  0893                     	;# 
  2782  0893                     	;# 
  2783  0893                     	;# 
  2784  0894                     	;# 
  2785  0894                     	;# 
  2786  0894                     	;# 
  2787  0895                     	;# 
  2788  0895                     	;# 
  2789  0895                     	;# 
  2790  0896                     	;# 
  2791  0896                     	;# 
  2792  0896                     	;# 
  2793  089B                     	;# 
  2794  0911                     	;# 
  2795  0912                     	;# 
  2796  0913                     	;# 
  2797  0914                     	;# 
  2798  0915                     	;# 
  2799  0916                     	;# 
  2800  0918                     	;# 
  2801  0919                     	;# 
  2802  091A                     	;# 
  2803  091B                     	;# 
  2804  091C                     	;# 
  2805  091D                     	;# 
  2806  091E                     	;# 
  2807  091F                     	;# 
  2808  0E0F                     	;# 
  2809  0E10                     	;# 
  2810  0E11                     	;# 
  2811  0E12                     	;# 
  2812  0E13                     	;# 
  2813  0E14                     	;# 
  2814  0E15                     	;# 
  2815  0E16                     	;# 
  2816  0E17                     	;# 
  2817  0E18                     	;# 
  2818  0E19                     	;# 
  2819  0E1A                     	;# 
  2820  0E1B                     	;# 
  2821  0E1C                     	;# 
  2822  0E1D                     	;# 
  2823  0E1E                     	;# 
  2824  0E1F                     	;# 
  2825  0E20                     	;# 
  2826  0E21                     	;# 
  2827  0E22                     	;# 
  2828  0E24                     	;# 
  2829  0E25                     	;# 
  2830  0E28                     	;# 
  2831  0E29                     	;# 
  2832  0E2A                     	;# 
  2833  0E2B                     	;# 
  2834  0E2C                     	;# 
  2835  0E2D                     	;# 
  2836  0E2E                     	;# 
  2837  0E2F                     	;# 
  2838  0E90                     	;# 
  2839  0E91                     	;# 
  2840  0E92                     	;# 
  2841  0E94                     	;# 
  2842  0E95                     	;# 
  2843  0E9C                     	;# 
  2844  0E9D                     	;# 
  2845  0E9E                     	;# 
  2846  0E9F                     	;# 
  2847  0EA0                     	;# 
  2848  0EA1                     	;# 
  2849  0EA2                     	;# 
  2850  0EA3                     	;# 
  2851  0EA4                     	;# 
  2852  0EA5                     	;# 
  2853  0EA6                     	;# 
  2854  0EA7                     	;# 
  2855  0F0F                     	;# 
  2856  0F10                     	;# 
  2857  0F11                     	;# 
  2858  0F12                     	;# 
  2859  0F13                     	;# 
  2860  0F14                     	;# 
  2861  0F15                     	;# 
  2862  0F16                     	;# 
  2863  0F17                     	;# 
  2864  0F18                     	;# 
  2865  0F19                     	;# 
  2866  0F1A                     	;# 
  2867  0F1B                     	;# 
  2868  0F1C                     	;# 
  2869  0F1D                     	;# 
  2870  0F1E                     	;# 
  2871  0F1F                     	;# 
  2872  0F20                     	;# 
  2873  0F21                     	;# 
  2874  0F22                     	;# 
  2875  0F23                     	;# 
  2876  0F24                     	;# 
  2877  0F25                     	;# 
  2878  0F26                     	;# 
  2879  0F27                     	;# 
  2880  0F28                     	;# 
  2881  0F29                     	;# 
  2882  0F2A                     	;# 
  2883  0F2B                     	;# 
  2884  0F2C                     	;# 
  2885  0F2D                     	;# 
  2886  0F2E                     	;# 
  2887  0F2F                     	;# 
  2888  0F30                     	;# 
  2889  0F31                     	;# 
  2890  0F32                     	;# 
  2891  0F33                     	;# 
  2892  0F34                     	;# 
  2893  0F35                     	;# 
  2894  0F36                     	;# 
  2895  0F37                     	;# 
  2896  0FE4                     	;# 
  2897  0FE5                     	;# 
  2898  0FE6                     	;# 
  2899  0FE7                     	;# 
  2900  0FE8                     	;# 
  2901  0FE9                     	;# 
  2902  0FEA                     	;# 
  2903  0FEB                     	;# 
  2904  0FED                     	;# 
  2905  0FEE                     	;# 
  2906  0FEF                     	;# 
  2907                           
  2908                           	psect	idataBANK0
  2909  0265                     __pidataBANK0:	
  2910                           
  2911                           ;initializer for _txt
  2912  0265  34DB               	retlw	low (STR_1| (0+32768))
  2913  0266  3489               	retlw	high (STR_1| (0+32768))
  2914                           
  2915                           ;initializer for _wrap
  2916  0267  3401               	retlw	1
  2917  0268  3400               	retlw	0
  2918                           
  2919                           ;initializer for _event
  2920  0269  3401               	retlw	1
  2921                           
  2922                           	psect	stringtext1
  2923  0800                     __pstringtext1:	
  2924  0800                     _Font:	
  2925  0800  3400               	retlw	0
  2926  0801  3400               	retlw	0
  2927  0802  3400               	retlw	0
  2928  0803  3400               	retlw	0
  2929  0804  3400               	retlw	0
  2930  0805  3400               	retlw	0
  2931  0806  3400               	retlw	0
  2932  0807  345F               	retlw	95
  2933  0808  3400               	retlw	0
  2934  0809  3400               	retlw	0
  2935  080A  3400               	retlw	0
  2936  080B  3407               	retlw	7
  2937  080C  3400               	retlw	0
  2938  080D  3407               	retlw	7
  2939  080E  3400               	retlw	0
  2940  080F  3414               	retlw	20
  2941  0810  347F               	retlw	127
  2942  0811  3414               	retlw	20
  2943  0812  347F               	retlw	127
  2944  0813  3414               	retlw	20
  2945  0814  3424               	retlw	36
  2946  0815  342A               	retlw	42
  2947  0816  347F               	retlw	127
  2948  0817  342A               	retlw	42
  2949  0818  3412               	retlw	18
  2950  0819  3423               	retlw	35
  2951  081A  3413               	retlw	19
  2952  081B  3408               	retlw	8
  2953  081C  3464               	retlw	100
  2954  081D  3462               	retlw	98
  2955  081E  3436               	retlw	54
  2956  081F  3449               	retlw	73
  2957  0820  3456               	retlw	86
  2958  0821  3420               	retlw	32
  2959  0822  3450               	retlw	80
  2960  0823  3400               	retlw	0
  2961  0824  3408               	retlw	8
  2962  0825  3407               	retlw	7
  2963  0826  3403               	retlw	3
  2964  0827  3400               	retlw	0
  2965  0828  3400               	retlw	0
  2966  0829  341C               	retlw	28
  2967  082A  3422               	retlw	34
  2968  082B  3441               	retlw	65
  2969  082C  3400               	retlw	0
  2970  082D  3400               	retlw	0
  2971  082E  3441               	retlw	65
  2972  082F  3422               	retlw	34
  2973  0830  341C               	retlw	28
  2974  0831  3400               	retlw	0
  2975  0832  342A               	retlw	42
  2976  0833  341C               	retlw	28
  2977  0834  347F               	retlw	127
  2978  0835  341C               	retlw	28
  2979  0836  342A               	retlw	42
  2980  0837  3408               	retlw	8
  2981  0838  3408               	retlw	8
  2982  0839  343E               	retlw	62
  2983  083A  3408               	retlw	8
  2984  083B  3408               	retlw	8
  2985  083C  3400               	retlw	0
  2986  083D  3480               	retlw	128
  2987  083E  3470               	retlw	112
  2988  083F  3430               	retlw	48
  2989  0840  3400               	retlw	0
  2990  0841  3408               	retlw	8
  2991  0842  3408               	retlw	8
  2992  0843  3408               	retlw	8
  2993  0844  3408               	retlw	8
  2994  0845  3408               	retlw	8
  2995  0846  3400               	retlw	0
  2996  0847  3400               	retlw	0
  2997  0848  3460               	retlw	96
  2998  0849  3460               	retlw	96
  2999  084A  3400               	retlw	0
  3000  084B  3420               	retlw	32
  3001  084C  3410               	retlw	16
  3002  084D  3408               	retlw	8
  3003  084E  3404               	retlw	4
  3004  084F  3402               	retlw	2
  3005  0850  343E               	retlw	62
  3006  0851  3451               	retlw	81
  3007  0852  3449               	retlw	73
  3008  0853  3445               	retlw	69
  3009  0854  343E               	retlw	62
  3010  0855  3400               	retlw	0
  3011  0856  3442               	retlw	66
  3012  0857  347F               	retlw	127
  3013  0858  3440               	retlw	64
  3014  0859  3400               	retlw	0
  3015  085A  3472               	retlw	114
  3016  085B  3449               	retlw	73
  3017  085C  3449               	retlw	73
  3018  085D  3449               	retlw	73
  3019  085E  3446               	retlw	70
  3020  085F  3421               	retlw	33
  3021  0860  3441               	retlw	65
  3022  0861  3449               	retlw	73
  3023  0862  344D               	retlw	77
  3024  0863  3433               	retlw	51
  3025  0864  3418               	retlw	24
  3026  0865  3414               	retlw	20
  3027  0866  3412               	retlw	18
  3028  0867  347F               	retlw	127
  3029  0868  3410               	retlw	16
  3030  0869  3427               	retlw	39
  3031  086A  3445               	retlw	69
  3032  086B  3445               	retlw	69
  3033  086C  3445               	retlw	69
  3034  086D  3439               	retlw	57
  3035  086E  343C               	retlw	60
  3036  086F  344A               	retlw	74
  3037  0870  3449               	retlw	73
  3038  0871  3449               	retlw	73
  3039  0872  3431               	retlw	49
  3040  0873  3441               	retlw	65
  3041  0874  3421               	retlw	33
  3042  0875  3411               	retlw	17
  3043  0876  3409               	retlw	9
  3044  0877  3407               	retlw	7
  3045  0878  3436               	retlw	54
  3046  0879  3449               	retlw	73
  3047  087A  3449               	retlw	73
  3048  087B  3449               	retlw	73
  3049  087C  3436               	retlw	54
  3050  087D  3446               	retlw	70
  3051  087E  3449               	retlw	73
  3052  087F  3449               	retlw	73
  3053  0880  3429               	retlw	41
  3054  0881  341E               	retlw	30
  3055  0882  3400               	retlw	0
  3056  0883  3400               	retlw	0
  3057  0884  3414               	retlw	20
  3058  0885  3400               	retlw	0
  3059  0886  3400               	retlw	0
  3060  0887  3400               	retlw	0
  3061  0888  3440               	retlw	64
  3062  0889  3434               	retlw	52
  3063  088A  3400               	retlw	0
  3064  088B  3400               	retlw	0
  3065  088C  3400               	retlw	0
  3066  088D  3408               	retlw	8
  3067  088E  3414               	retlw	20
  3068  088F  3422               	retlw	34
  3069  0890  3441               	retlw	65
  3070  0891  3414               	retlw	20
  3071  0892  3414               	retlw	20
  3072  0893  3414               	retlw	20
  3073  0894  3414               	retlw	20
  3074  0895  3414               	retlw	20
  3075  0896  3400               	retlw	0
  3076  0897  3441               	retlw	65
  3077  0898  3422               	retlw	34
  3078  0899  3414               	retlw	20
  3079  089A  3408               	retlw	8
  3080  089B  3402               	retlw	2
  3081  089C  3401               	retlw	1
  3082  089D  3459               	retlw	89
  3083  089E  3409               	retlw	9
  3084  089F  3406               	retlw	6
  3085  08A0  343E               	retlw	62
  3086  08A1  3441               	retlw	65
  3087  08A2  345D               	retlw	93
  3088  08A3  3459               	retlw	89
  3089  08A4  344E               	retlw	78
  3090  08A5  347C               	retlw	124
  3091  08A6  3412               	retlw	18
  3092  08A7  3411               	retlw	17
  3093  08A8  3412               	retlw	18
  3094  08A9  347C               	retlw	124
  3095  08AA  347F               	retlw	127
  3096  08AB  3449               	retlw	73
  3097  08AC  3449               	retlw	73
  3098  08AD  3449               	retlw	73
  3099  08AE  3436               	retlw	54
  3100  08AF  343E               	retlw	62
  3101  08B0  3441               	retlw	65
  3102  08B1  3441               	retlw	65
  3103  08B2  3441               	retlw	65
  3104  08B3  3422               	retlw	34
  3105  08B4  347F               	retlw	127
  3106  08B5  3441               	retlw	65
  3107  08B6  3441               	retlw	65
  3108  08B7  3441               	retlw	65
  3109  08B8  343E               	retlw	62
  3110  08B9  347F               	retlw	127
  3111  08BA  3449               	retlw	73
  3112  08BB  3449               	retlw	73
  3113  08BC  3449               	retlw	73
  3114  08BD  3441               	retlw	65
  3115  08BE  347F               	retlw	127
  3116  08BF  3409               	retlw	9
  3117  08C0  3409               	retlw	9
  3118  08C1  3409               	retlw	9
  3119  08C2  3401               	retlw	1
  3120  08C3  343E               	retlw	62
  3121  08C4  3441               	retlw	65
  3122  08C5  3441               	retlw	65
  3123  08C6  3451               	retlw	81
  3124  08C7  3473               	retlw	115
  3125  08C8  347F               	retlw	127
  3126  08C9  3408               	retlw	8
  3127  08CA  3408               	retlw	8
  3128  08CB  3408               	retlw	8
  3129  08CC  347F               	retlw	127
  3130  08CD  3400               	retlw	0
  3131  08CE  3441               	retlw	65
  3132  08CF  347F               	retlw	127
  3133  08D0  3441               	retlw	65
  3134  08D1  3400               	retlw	0
  3135  08D2  3420               	retlw	32
  3136  08D3  3440               	retlw	64
  3137  08D4  3441               	retlw	65
  3138  08D5  343F               	retlw	63
  3139  08D6  3401               	retlw	1
  3140  08D7  347F               	retlw	127
  3141  08D8  3408               	retlw	8
  3142  08D9  3414               	retlw	20
  3143  08DA  3422               	retlw	34
  3144  08DB  3441               	retlw	65
  3145  08DC  347F               	retlw	127
  3146  08DD  3440               	retlw	64
  3147  08DE  3440               	retlw	64
  3148  08DF  3440               	retlw	64
  3149  08E0  3440               	retlw	64
  3150  08E1  347F               	retlw	127
  3151  08E2  3402               	retlw	2
  3152  08E3  341C               	retlw	28
  3153  08E4  3402               	retlw	2
  3154  08E5  347F               	retlw	127
  3155  08E6  347F               	retlw	127
  3156  08E7  3404               	retlw	4
  3157  08E8  3408               	retlw	8
  3158  08E9  3410               	retlw	16
  3159  08EA  347F               	retlw	127
  3160  08EB  343E               	retlw	62
  3161  08EC  3441               	retlw	65
  3162  08ED  3441               	retlw	65
  3163  08EE  3441               	retlw	65
  3164  08EF  343E               	retlw	62
  3165  08F0  347F               	retlw	127
  3166  08F1  3409               	retlw	9
  3167  08F2  3409               	retlw	9
  3168  08F3  3409               	retlw	9
  3169  08F4  3406               	retlw	6
  3170  08F5  343E               	retlw	62
  3171  08F6  3441               	retlw	65
  3172  08F7  3451               	retlw	81
  3173  08F8  3421               	retlw	33
  3174  08F9  345E               	retlw	94
  3175  08FA  347F               	retlw	127
  3176  08FB  3409               	retlw	9
  3177  08FC  3419               	retlw	25
  3178  08FD  3429               	retlw	41
  3179  08FE  3446               	retlw	70
  3180  08FF                     __end_of_Font:	
  3181                           
  3182                           	psect	stringtext2
  3183  08FF                     __pstringtext2:	
  3184  08FF                     _Font2:	
  3185  08FF  3426               	retlw	38
  3186  0900  3449               	retlw	73
  3187  0901  3449               	retlw	73
  3188  0902  3449               	retlw	73
  3189  0903  3432               	retlw	50
  3190  0904  3403               	retlw	3
  3191  0905  3401               	retlw	1
  3192  0906  347F               	retlw	127
  3193  0907  3401               	retlw	1
  3194  0908  3403               	retlw	3
  3195  0909  343F               	retlw	63
  3196  090A  3440               	retlw	64
  3197  090B  3440               	retlw	64
  3198  090C  3440               	retlw	64
  3199  090D  343F               	retlw	63
  3200  090E  341F               	retlw	31
  3201  090F  3420               	retlw	32
  3202  0910  3440               	retlw	64
  3203  0911  3420               	retlw	32
  3204  0912  341F               	retlw	31
  3205  0913  343F               	retlw	63
  3206  0914  3440               	retlw	64
  3207  0915  3438               	retlw	56
  3208  0916  3440               	retlw	64
  3209  0917  343F               	retlw	63
  3210  0918  3463               	retlw	99
  3211  0919  3414               	retlw	20
  3212  091A  3408               	retlw	8
  3213  091B  3414               	retlw	20
  3214  091C  3463               	retlw	99
  3215  091D  3403               	retlw	3
  3216  091E  3404               	retlw	4
  3217  091F  3478               	retlw	120
  3218  0920  3404               	retlw	4
  3219  0921  3403               	retlw	3
  3220  0922  3461               	retlw	97
  3221  0923  3459               	retlw	89
  3222  0924  3449               	retlw	73
  3223  0925  344D               	retlw	77
  3224  0926  3443               	retlw	67
  3225  0927  3400               	retlw	0
  3226  0928  347F               	retlw	127
  3227  0929  3441               	retlw	65
  3228  092A  3441               	retlw	65
  3229  092B  3441               	retlw	65
  3230  092C  3402               	retlw	2
  3231  092D  3404               	retlw	4
  3232  092E  3408               	retlw	8
  3233  092F  3410               	retlw	16
  3234  0930  3420               	retlw	32
  3235  0931  3400               	retlw	0
  3236  0932  3441               	retlw	65
  3237  0933  3441               	retlw	65
  3238  0934  3441               	retlw	65
  3239  0935  347F               	retlw	127
  3240  0936  3404               	retlw	4
  3241  0937  3402               	retlw	2
  3242  0938  3401               	retlw	1
  3243  0939  3402               	retlw	2
  3244  093A  3404               	retlw	4
  3245  093B  3440               	retlw	64
  3246  093C  3440               	retlw	64
  3247  093D  3440               	retlw	64
  3248  093E  3440               	retlw	64
  3249  093F  3440               	retlw	64
  3250  0940  3400               	retlw	0
  3251  0941  3403               	retlw	3
  3252  0942  3407               	retlw	7
  3253  0943  3408               	retlw	8
  3254  0944  3400               	retlw	0
  3255  0945  3420               	retlw	32
  3256  0946  3454               	retlw	84
  3257  0947  3454               	retlw	84
  3258  0948  3478               	retlw	120
  3259  0949  3440               	retlw	64
  3260  094A  347F               	retlw	127
  3261  094B  3428               	retlw	40
  3262  094C  3444               	retlw	68
  3263  094D  3444               	retlw	68
  3264  094E  3438               	retlw	56
  3265  094F  3438               	retlw	56
  3266  0950  3444               	retlw	68
  3267  0951  3444               	retlw	68
  3268  0952  3444               	retlw	68
  3269  0953  3428               	retlw	40
  3270  0954  3438               	retlw	56
  3271  0955  3444               	retlw	68
  3272  0956  3444               	retlw	68
  3273  0957  3428               	retlw	40
  3274  0958  347F               	retlw	127
  3275  0959  3438               	retlw	56
  3276  095A  3454               	retlw	84
  3277  095B  3454               	retlw	84
  3278  095C  3454               	retlw	84
  3279  095D  3418               	retlw	24
  3280  095E  3400               	retlw	0
  3281  095F  3408               	retlw	8
  3282  0960  347E               	retlw	126
  3283  0961  3409               	retlw	9
  3284  0962  3402               	retlw	2
  3285  0963  3418               	retlw	24
  3286  0964  34A4               	retlw	164
  3287  0965  34A4               	retlw	164
  3288  0966  349C               	retlw	156
  3289  0967  3478               	retlw	120
  3290  0968  347F               	retlw	127
  3291  0969  3408               	retlw	8
  3292  096A  3404               	retlw	4
  3293  096B  3404               	retlw	4
  3294  096C  3478               	retlw	120
  3295  096D  3400               	retlw	0
  3296  096E  3444               	retlw	68
  3297  096F  347D               	retlw	125
  3298  0970  3440               	retlw	64
  3299  0971  3400               	retlw	0
  3300  0972  3420               	retlw	32
  3301  0973  3440               	retlw	64
  3302  0974  3440               	retlw	64
  3303  0975  343D               	retlw	61
  3304  0976  3400               	retlw	0
  3305  0977  347F               	retlw	127
  3306  0978  3410               	retlw	16
  3307  0979  3428               	retlw	40
  3308  097A  3444               	retlw	68
  3309  097B  3400               	retlw	0
  3310  097C  3400               	retlw	0
  3311  097D  3441               	retlw	65
  3312  097E  347F               	retlw	127
  3313  097F  3440               	retlw	64
  3314  0980  3400               	retlw	0
  3315  0981  347C               	retlw	124
  3316  0982  3404               	retlw	4
  3317  0983  3478               	retlw	120
  3318  0984  3404               	retlw	4
  3319  0985  3478               	retlw	120
  3320  0986  347C               	retlw	124
  3321  0987  3408               	retlw	8
  3322  0988  3404               	retlw	4
  3323  0989  3404               	retlw	4
  3324  098A  3478               	retlw	120
  3325  098B  3438               	retlw	56
  3326  098C  3444               	retlw	68
  3327  098D  3444               	retlw	68
  3328  098E  3444               	retlw	68
  3329  098F  3438               	retlw	56
  3330  0990  34FC               	retlw	252
  3331  0991  3418               	retlw	24
  3332  0992  3424               	retlw	36
  3333  0993  3424               	retlw	36
  3334  0994  3418               	retlw	24
  3335  0995  3418               	retlw	24
  3336  0996  3424               	retlw	36
  3337  0997  3424               	retlw	36
  3338  0998  3418               	retlw	24
  3339  0999  34FC               	retlw	252
  3340  099A  347C               	retlw	124
  3341  099B  3408               	retlw	8
  3342  099C  3404               	retlw	4
  3343  099D  3404               	retlw	4
  3344  099E  3408               	retlw	8
  3345  099F  3448               	retlw	72
  3346  09A0  3454               	retlw	84
  3347  09A1  3454               	retlw	84
  3348  09A2  3454               	retlw	84
  3349  09A3  3424               	retlw	36
  3350  09A4  3404               	retlw	4
  3351  09A5  3404               	retlw	4
  3352  09A6  343F               	retlw	63
  3353  09A7  3444               	retlw	68
  3354  09A8  3424               	retlw	36
  3355  09A9  343C               	retlw	60
  3356  09AA  3440               	retlw	64
  3357  09AB  3440               	retlw	64
  3358  09AC  3420               	retlw	32
  3359  09AD  347C               	retlw	124
  3360  09AE  341C               	retlw	28
  3361  09AF  3420               	retlw	32
  3362  09B0  3440               	retlw	64
  3363  09B1  3420               	retlw	32
  3364  09B2  341C               	retlw	28
  3365  09B3  343C               	retlw	60
  3366  09B4  3440               	retlw	64
  3367  09B5  3430               	retlw	48
  3368  09B6  3440               	retlw	64
  3369  09B7  343C               	retlw	60
  3370  09B8  3444               	retlw	68
  3371  09B9  3428               	retlw	40
  3372  09BA  3410               	retlw	16
  3373  09BB  3428               	retlw	40
  3374  09BC  3444               	retlw	68
  3375  09BD  344C               	retlw	76
  3376  09BE  3490               	retlw	144
  3377  09BF  3490               	retlw	144
  3378  09C0  3490               	retlw	144
  3379  09C1  347C               	retlw	124
  3380  09C2  3444               	retlw	68
  3381  09C3  3464               	retlw	100
  3382  09C4  3454               	retlw	84
  3383  09C5  344C               	retlw	76
  3384  09C6  3444               	retlw	68
  3385  09C7  3400               	retlw	0
  3386  09C8  3408               	retlw	8
  3387  09C9  3436               	retlw	54
  3388  09CA  3441               	retlw	65
  3389  09CB  3400               	retlw	0
  3390  09CC  3400               	retlw	0
  3391  09CD  3400               	retlw	0
  3392  09CE  3477               	retlw	119
  3393  09CF  3400               	retlw	0
  3394  09D0  3400               	retlw	0
  3395  09D1  3400               	retlw	0
  3396  09D2  3441               	retlw	65
  3397  09D3  3436               	retlw	54
  3398  09D4  3408               	retlw	8
  3399  09D5  3400               	retlw	0
  3400  09D6  3402               	retlw	2
  3401  09D7  3401               	retlw	1
  3402  09D8  3402               	retlw	2
  3403  09D9  3404               	retlw	4
  3404  09DA  3402               	retlw	2
  3405  09DB                     __end_of_Font2:	
  3406  001F                     _T2CONbits	set	31
  3407  001F                     _T2CON	set	31
  3408  0011                     _PIR1bits	set	17
  3409  001D                     _TMR2	set	29
  3410  001E                     _PR2	set	30
  3411  008E                     _TRISC	set	142
  3412  008D                     _TRISB	set	141
  3413  008C                     _TRISA	set	140
  3414  0097                     _WDTCON	set	151
  3415  009D                     _ADCON0bits	set	157
  3416  009C                     _ADRESH	set	156
  3417  009B                     _ADRESL	set	155
  3418  009F                     _ADACT	set	159
  3419  009E                     _ADCON1	set	158
  3420  009D                     _ADCON0	set	157
  3421  010E                     _LATC	set	270
  3422  010D                     _LATB	set	269
  3423  010D                     _LATBbits	set	269
  3424  010C                     _LATAbits	set	268
  3425  010E                     _LATCbits	set	270
  3426  010C                     _LATA	set	268
  3427  018C                     _ANSELA	set	396
  3428  018D                     _ANSELB	set	397
  3429  018E                     _ANSELC	set	398
  3430  020E                     _WPUC	set	526
  3431  020C                     _WPUA	set	524
  3432  020D                     _WPUB	set	525
  3433  0214                     _SSP1STATbits	set	532
  3434  0211                     _SSP1BUF	set	529
  3435  0215                     _SSP1CON1bits	set	533
  3436  0212                     _SSP1ADD	set	530
  3437  0215                     _SSP1CON1	set	533
  3438  0214                     _SSP1STAT	set	532
  3439  028E                     _ODCONC	set	654
  3440  028D                     _ODCONB	set	653
  3441  028C                     _ODCONA	set	652
  3442  0293                     _CCP1CONbits	set	659
  3443  029F                     _CCPTMRSbits	set	671
  3444  0291                     _CCPR1L	set	657
  3445  0292                     _CCPR1H	set	658
  3446  0293                     _CCP1CON	set	659
  3447  030E                     _SLRCONC	set	782
  3448  030D                     _SLRCONB	set	781
  3449  030C                     _SLRCONA	set	780
  3450  0916                     _PMD5	set	2326
  3451  0915                     _PMD4	set	2325
  3452  0914                     _PMD3	set	2324
  3453  0913                     _PMD2	set	2323
  3454  0912                     _PMD1	set	2322
  3455  0911                     _PMD0	set	2321
  3456  091E                     _OSCTUNE	set	2334
  3457  091F                     _OSCFRQ	set	2335
  3458  091D                     _OSCEN	set	2333
  3459  091B                     _OSCCON3	set	2331
  3460  0919                     _OSCCON1	set	2329
  3461  0E21                     _SSP1DATPPS	set	3617
  3462  0E20                     _SSP1CLKPPS	set	3616
  3463  0EA7                     _RC7PPS	set	3751
  3464  0E9F                     _RB7PPS	set	3743
  3465  0EA5                     _RC5PPS	set	3749
  3466  09DB                     STR_1:	
  3467  09DB  3448               	retlw	72	;'H'
  3468  09DC  3465               	retlw	101	;'e'
  3469  09DD  346C               	retlw	108	;'l'
  3470  09DE  346C               	retlw	108	;'l'
  3471  09DF  346F               	retlw	111	;'o'
  3472  09E0  3420               	retlw	32	;' '
  3473  09E1  3457               	retlw	87	;'W'
  3474  09E2  346F               	retlw	111	;'o'
  3475  09E3  3472               	retlw	114	;'r'
  3476  09E4  346C               	retlw	108	;'l'
  3477  09E5  3464               	retlw	100	;'d'
  3478  09E6  3400               	retlw	0
  3479                           
  3480                           	psect	stringtext3
  3481  0000                     __pstringtext3:	
  3482                           
  3483                           ; #config settings
  3484  0000                     
  3485                           	psect	cinit
  3486  07E3                     start_initialization:	
  3487  07E3                     __initialization:	
  3488                           
  3489                           ; Initialize objects allocated to BANK0
  3490  07E3  3065               	movlw	low __pidataBANK0
  3491  07E4  0084               	movwf	4
  3492  07E5  3082               	movlw	(high __pidataBANK0)| (0+128)
  3493  07E6  0085               	movwf	5
  3494  07E7  0012               	moviw fsr0++
  3495  07E8  00DF               	movwf	__pdataBANK0& (0+127)
  3496  07E9  0012               	moviw fsr0++
  3497  07EA  00E0               	movwf	(__pdataBANK0+1)& (0+127)
  3498  07EB  0012               	moviw fsr0++
  3499  07EC  00E1               	movwf	(__pdataBANK0+2)& (0+127)
  3500  07ED  0012               	moviw fsr0++
  3501  07EE  00E2               	movwf	(__pdataBANK0+3)& (0+127)
  3502  07EF  0012               	moviw fsr0++
  3503  07F0  00E3               	movwf	(__pdataBANK0+4)& (0+127)
  3504                           
  3505                           ; Clear objects allocated to BANK0
  3506  07F1  01D3               	clrf	__pbssBANK0& (0+127)
  3507  07F2  01D4               	clrf	(__pbssBANK0+1)& (0+127)
  3508  07F3  01D5               	clrf	(__pbssBANK0+2)& (0+127)
  3509  07F4  01D6               	clrf	(__pbssBANK0+3)& (0+127)
  3510  07F5  01D7               	clrf	(__pbssBANK0+4)& (0+127)
  3511  07F6  01D8               	clrf	(__pbssBANK0+5)& (0+127)
  3512  07F7  01D9               	clrf	(__pbssBANK0+6)& (0+127)
  3513  07F8  01DA               	clrf	(__pbssBANK0+7)& (0+127)
  3514  07F9  01DB               	clrf	(__pbssBANK0+8)& (0+127)
  3515  07FA  01DC               	clrf	(__pbssBANK0+9)& (0+127)
  3516  07FB  01DD               	clrf	(__pbssBANK0+10)& (0+127)
  3517  07FC  01DE               	clrf	(__pbssBANK0+11)& (0+127)
  3518  07FD                     end_of_initialization:	
  3519                           ;End of C runtime variable initialization code
  3520                           
  3521  07FD                     __end_of__initialization:	
  3522  07FD  0020               	movlb	0
  3523  07FE  3182  2A76         	ljmp	_main	;jump to C main() function
  3524                           
  3525                           	psect	bssBANK0
  3526  0053                     __pbssBANK0:	
  3527  0053                     _adcResult2:	
  3528  0053                     	ds	2
  3529  0055                     _pause:	
  3530  0055                     	ds	1
  3531  0056                     _state:	
  3532  0056                     	ds	1
  3533  0057                     _button:	
  3534  0057                     	ds	1
  3535  0058                     _switch1:	
  3536  0058                     	ds	1
  3537  0059                     _delayVal:	
  3538  0059                     	ds	1
  3539  005A                     _rotateVal:	
  3540  005A                     	ds	1
  3541  005B                     _secondCount:	
  3542  005B                     	ds	1
  3543  005C                     _adcResult:	
  3544  005C                     	ds	1
  3545  005D                     _rowstart:	
  3546  005D                     	ds	1
  3547  005E                     _colstart:	
  3548  005E                     	ds	1
  3549                           
  3550                           	psect	dataBANK0
  3551  005F                     __pdataBANK0:	
  3552  005F                     _txt:	
  3553  005F                     	ds	2
  3554  0061                     _wrap:	
  3555  0061                     	ds	2
  3556  0063                     _event:	
  3557  0063                     	ds	1
  3558                           
  3559                           	psect	cstackCOMMON
  3560  0070                     __pcstackCOMMON:	
  3561  0070                     ?_SYSTEM_Initialize:	
  3562  0070                     ??_SYSTEM_Initialize:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565  0070                     ?_SPI:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568  0070                     ?_PWM:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571  0070                     ?_BlackTab_Init:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  0070                     ?_setTextWrap:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0070                     ?_PWM_Output_D7_Enable:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580  0070                     ??_PWM_Output_D7_Enable:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583  0070                     ?_TMR2_StartTimer:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586  0070                     ??_TMR2_StartTimer:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     ?_PWM1_LoadDutyValue:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     ?_PWM_Output_D7_Disable:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     ??_PWM_Output_D7_Disable:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0070                     ?_Rcmd1:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  0070                     ?_Rcmd2red:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  0070                     ?_Rcmd3:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  0070                     ?_write_command:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  0070                     ?_write_data:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  0070                     ?_spiwrite:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616  0070                     ??_spiwrite:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  0070                     ?_PMD_Initialize:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622  0070                     ??_PMD_Initialize:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625  0070                     ?_PIN_MANAGER_Initialize:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628  0070                     ??_PIN_MANAGER_Initialize:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631  0070                     ?_OSCILLATOR_Initialize:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634  0070                     ??_OSCILLATOR_Initialize:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637  0070                     ?_WDT_Initialize:	
  3638                           ; 1 bytes @ 0x0
  3639                           
  3640  0070                     ??_WDT_Initialize:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643  0070                     ?_SPI1_Initialize:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646  0070                     ??_SPI1_Initialize:	
  3647                           ; 1 bytes @ 0x0
  3648                           
  3649  0070                     ?_main:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652  0070                     ?_PWM1_Initialize:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655  0070                     ??_PWM1_Initialize:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ?_TMR2_Initialize:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0070                     ??_TMR2_Initialize:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0070                     ?_ADC_Initialize:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0070                     ??_ADC_Initialize:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0070                     ?___bmul:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0070                     ?_ADC_GetConversion:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0070                     ?_strlen:	
  3677                           ; 2 bytes @ 0x0
  3678                           
  3679  0070                     ?___wmul:	
  3680                           ; 2 bytes @ 0x0
  3681                           
  3682  0070                     spiwrite@spidata:	
  3683                           ; 2 bytes @ 0x0
  3684                           
  3685  0070                     ___bmul@multiplicand:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     setTextWrap@w:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     PWM1_LoadDutyValue@dutyValue:	
  3692                           ; 2 bytes @ 0x0
  3693                           
  3694  0070                     ___wmul@multiplier:	
  3695                           ; 2 bytes @ 0x0
  3696                           
  3697  0070                     strlen@s:	
  3698                           ; 2 bytes @ 0x0
  3699                           
  3700                           
  3701                           ; 2 bytes @ 0x0
  3702  0070                     	ds	1
  3703  0071                     ??___bmul:	
  3704  0071                     spiwrite@ss:	
  3705                           ; 1 bytes @ 0x1
  3706                           
  3707                           
  3708                           ; 2 bytes @ 0x1
  3709  0071                     	ds	1
  3710  0072                     ??_setTextWrap:	
  3711  0072                     ??_ADC_GetConversion:	
  3712                           ; 1 bytes @ 0x2
  3713                           
  3714  0072                     ??_PWM1_LoadDutyValue:	
  3715                           ; 1 bytes @ 0x2
  3716                           
  3717  0072                     ??_strlen:	
  3718                           ; 1 bytes @ 0x2
  3719                           
  3720  0072                     ___bmul@product:	
  3721                           ; 1 bytes @ 0x2
  3722                           
  3723  0072                     ___wmul@multiplicand:	
  3724                           ; 1 bytes @ 0x2
  3725                           
  3726                           
  3727                           ; 2 bytes @ 0x2
  3728  0072                     	ds	1
  3729  0073                     ??_write_command:	
  3730  0073                     ??_write_data:	
  3731                           ; 1 bytes @ 0x3
  3732                           
  3733  0073                     write_command@cmd:	
  3734                           ; 1 bytes @ 0x3
  3735                           
  3736  0073                     write_data@data:	
  3737                           ; 1 bytes @ 0x3
  3738                           
  3739  0073                     ADC_GetConversion@channel:	
  3740                           ; 1 bytes @ 0x3
  3741                           
  3742  0073                     ___bmul@multiplier:	
  3743                           ; 1 bytes @ 0x3
  3744                           
  3745  0073                     strlen@a:	
  3746                           ; 1 bytes @ 0x3
  3747                           
  3748                           
  3749                           ; 2 bytes @ 0x3
  3750  0073                     	ds	1
  3751  0074                     ??_PWM:	
  3752  0074                     ??_Rcmd1:	
  3753                           ; 1 bytes @ 0x4
  3754                           
  3755  0074                     ??_Rcmd2red:	
  3756                           ; 1 bytes @ 0x4
  3757                           
  3758  0074                     ??_Rcmd3:	
  3759                           ; 1 bytes @ 0x4
  3760                           
  3761  0074                     ?_setAddrWindow:	
  3762                           ; 1 bytes @ 0x4
  3763                           
  3764  0074                     ??___wmul:	
  3765                           ; 1 bytes @ 0x4
  3766                           
  3767  0074                     setAddrWindow@y0:	
  3768                           ; 1 bytes @ 0x4
  3769                           
  3770  0074                     ___wmul@product:	
  3771                           ; 1 bytes @ 0x4
  3772                           
  3773                           
  3774                           ; 2 bytes @ 0x4
  3775  0074                     	ds	1
  3776  0075                     ??_BlackTab_Init:	
  3777  0075                     setAddrWindow@x1:	
  3778                           ; 1 bytes @ 0x5
  3779                           
  3780                           
  3781                           ; 1 bytes @ 0x5
  3782  0075                     	ds	1
  3783  0076                     setAddrWindow@y1:	
  3784                           
  3785                           ; 1 bytes @ 0x6
  3786  0076                     	ds	1
  3787  0077                     ??_setAddrWindow:	
  3788  0077                     setAddrWindow@x0:	
  3789                           ; 1 bytes @ 0x7
  3790                           
  3791                           
  3792                           ; 1 bytes @ 0x7
  3793  0077                     	ds	1
  3794  0078                     ?_fillRect:	
  3795  0078                     ?_drawPixel:	
  3796                           ; 1 bytes @ 0x8
  3797                           
  3798  0078                     fillRect@y:	
  3799                           ; 1 bytes @ 0x8
  3800                           
  3801  0078                     drawPixel@y:	
  3802                           ; 1 bytes @ 0x8
  3803                           
  3804                           
  3805                           ; 1 bytes @ 0x8
  3806  0078                     	ds	1
  3807  0079                     fillRect@w:	
  3808  0079                     drawPixel@color:	
  3809                           ; 1 bytes @ 0x9
  3810                           
  3811                           
  3812                           ; 2 bytes @ 0x9
  3813  0079                     	ds	1
  3814  007A                     fillRect@h:	
  3815                           
  3816                           ; 1 bytes @ 0xA
  3817  007A                     	ds	1
  3818  007B                     ??_drawPixel:	
  3819  007B                     fillRect@color:	
  3820                           ; 1 bytes @ 0xB
  3821                           
  3822                           
  3823                           ; 2 bytes @ 0xB
  3824  007B                     	ds	3
  3825  007E                     ??_main:	
  3826                           
  3827                           	psect	cstackBANK0
  3828  0020                     __pcstackBANK0:	
  3829                           ; 1 bytes @ 0xE
  3830                           
  3831  0020                     ??_fillRect:	
  3832  0020                     drawPixel@x:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835                           
  3836                           ; 1 bytes @ 0x0
  3837  0020                     	ds	5
  3838  0025                     fillRect@high:	
  3839                           
  3840                           ; 1 bytes @ 0x5
  3841  0025                     	ds	1
  3842  0026                     fillRect@low:	
  3843                           
  3844                           ; 1 bytes @ 0x6
  3845  0026                     	ds	1
  3846  0027                     fillRect@x:	
  3847                           
  3848                           ; 1 bytes @ 0x7
  3849  0027                     	ds	1
  3850  0028                     ?_fillScreen:	
  3851  0028                     ?_drawChar:	
  3852                           ; 1 bytes @ 0x8
  3853                           
  3854  0028                     drawChar@y:	
  3855                           ; 1 bytes @ 0x8
  3856                           
  3857  0028                     fillScreen@color:	
  3858                           ; 1 bytes @ 0x8
  3859                           
  3860                           
  3861                           ; 2 bytes @ 0x8
  3862  0028                     	ds	1
  3863  0029                     drawChar@c:	
  3864                           
  3865                           ; 1 bytes @ 0x9
  3866  0029                     	ds	1
  3867  002A                     ??_fillScreen:	
  3868  002A                     drawChar@color:	
  3869                           ; 1 bytes @ 0xA
  3870                           
  3871                           
  3872                           ; 2 bytes @ 0xA
  3873  002A                     	ds	2
  3874  002C                     drawChar@bg:	
  3875                           
  3876                           ; 2 bytes @ 0xC
  3877  002C                     	ds	2
  3878  002E                     drawChar@size:	
  3879                           
  3880                           ; 1 bytes @ 0xE
  3881  002E                     	ds	1
  3882  002F                     ??_drawChar:	
  3883                           
  3884                           ; 1 bytes @ 0xF
  3885  002F                     	ds	7
  3886  0036                     drawChar@line:	
  3887                           
  3888                           ; 1 bytes @ 0x16
  3889  0036                     	ds	1
  3890  0037                     drawChar@x:	
  3891                           
  3892                           ; 1 bytes @ 0x17
  3893  0037                     	ds	1
  3894  0038                     drawChar@j:	
  3895                           
  3896                           ; 2 bytes @ 0x18
  3897  0038                     	ds	2
  3898  003A                     drawChar@i:	
  3899                           
  3900                           ; 2 bytes @ 0x1A
  3901  003A                     	ds	2
  3902  003C                     ?_drawtext:	
  3903  003C                     drawtext@y:	
  3904                           ; 1 bytes @ 0x1C
  3905                           
  3906                           
  3907                           ; 1 bytes @ 0x1C
  3908  003C                     	ds	1
  3909  003D                     drawtext@_text:	
  3910                           
  3911                           ; 2 bytes @ 0x1D
  3912  003D                     	ds	2
  3913  003F                     drawtext@color:	
  3914                           
  3915                           ; 2 bytes @ 0x1F
  3916  003F                     	ds	2
  3917  0041                     drawtext@bg:	
  3918                           
  3919                           ; 2 bytes @ 0x21
  3920  0041                     	ds	2
  3921  0043                     drawtext@size:	
  3922                           
  3923                           ; 1 bytes @ 0x23
  3924  0043                     	ds	1
  3925  0044                     ??_drawtext:	
  3926                           
  3927                           ; 1 bytes @ 0x24
  3928  0044                     	ds	7
  3929  004B                     drawtext@textsize:	
  3930                           
  3931                           ; 2 bytes @ 0x2B
  3932  004B                     	ds	2
  3933  004D                     drawtext@x:	
  3934                           
  3935                           ; 1 bytes @ 0x2D
  3936  004D                     	ds	1
  3937  004E                     drawtext@i:	
  3938                           
  3939                           ; 2 bytes @ 0x2E
  3940  004E                     	ds	2
  3941  0050                     drawtext@cursor_y:	
  3942                           
  3943                           ; 1 bytes @ 0x30
  3944  0050                     	ds	1
  3945  0051                     drawtext@cursor_x:	
  3946                           
  3947                           ; 1 bytes @ 0x31
  3948  0051                     	ds	1
  3949  0052                     ??_SPI:	
  3950                           
  3951                           ; 1 bytes @ 0x32
  3952  0052                     	ds	1
  3953                           
  3954                           	psect	maintext
  3955  0276                     __pmaintext:	
  3956 ;;
  3957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3958 ;;
  3959 ;; *************** function _main *****************
  3960 ;; Defined at:
  3961 ;;		line 250 in file "main.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : B1F/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels required when called:    7
  3981 ;; This function calls:
  3982 ;;		_SPI
  3983 ;;		_SYSTEM_Initialize
  3984 ;; This function is called by:
  3985 ;;		Startup code after reset
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _main
  3991  0276                     _main:	
  3992                           
  3993                           ;main.c: 253:     SYSTEM_Initialize();
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3997  0276  3183  2334  3182   	fcall	_SYSTEM_Initialize
  3998  0279                     l1959:	
  3999                           
  4000                           ;main.c: 261:         SPI();
  4001  0279  3183  23CD  3182   	fcall	_SPI
  4002  027C  2A79               	goto	l1959
  4003  027D                     __end_of_main:	
  4004                           
  4005                           	psect	text1
  4006  0334                     __ptext1:	
  4007 ;; *************** function _SYSTEM_Initialize *****************
  4008 ;; Defined at:
  4009 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    1
  4030 ;; This function calls:
  4031 ;;		_ADC_Initialize
  4032 ;;		_OSCILLATOR_Initialize
  4033 ;;		_PIN_MANAGER_Initialize
  4034 ;;		_PMD_Initialize
  4035 ;;		_PWM1_Initialize
  4036 ;;		_SPI1_Initialize
  4037 ;;		_TMR2_Initialize
  4038 ;;		_WDT_Initialize
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function _SYSTEM_Initialize
  4046  0334                     _SYSTEM_Initialize:	
  4047                           
  4048                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4052  0334  3182  228D  3183   	fcall	_PMD_Initialize
  4053                           
  4054                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4055  0337  3183  23F6  3183   	fcall	_PIN_MANAGER_Initialize
  4056                           
  4057                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4058  033A  3182  2285  3183   	fcall	_OSCILLATOR_Initialize
  4059                           
  4060                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4061  033D  3182  2261  3183   	fcall	_WDT_Initialize
  4062                           
  4063                           ;mcc_generated_files/mcc.c: 57:     SPI1_Initialize();
  4064  0340  3182  2270  3183   	fcall	_SPI1_Initialize
  4065                           
  4066                           ;mcc_generated_files/mcc.c: 58:     PWM1_Initialize();
  4067  0343  3182  22B1  3183   	fcall	_PWM1_Initialize
  4068                           
  4069                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
  4070  0346  3182  227D  3183   	fcall	_ADC_Initialize
  4071                           
  4072                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4073  0349  3182  2295         	fcall	_TMR2_Initialize
  4074  034B  0008               	return
  4075  034C                     __end_of_SYSTEM_Initialize:	
  4076                           
  4077                           	psect	text2
  4078  0261                     __ptext2:	
  4079 ;; *************** function _WDT_Initialize *****************
  4080 ;; Defined at:
  4081 ;;		line 77 in file "mcc_generated_files/mcc.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_SYSTEM_Initialize
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _WDT_Initialize
  4110  0261                     _WDT_Initialize:	
  4111                           
  4112                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x18;
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _WDT_Initialize: [wreg]
  4116  0261  3018               	movlw	24
  4117  0262  0021               	movlb	1	; select bank1
  4118  0263  0097               	movwf	23	;volatile
  4119  0264  0008               	return
  4120  0265                     __end_of_WDT_Initialize:	
  4121                           
  4122                           	psect	text3
  4123  0295                     __ptext3:	
  4124 ;; *************** function _TMR2_Initialize *****************
  4125 ;; Defined at:
  4126 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_SYSTEM_Initialize
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _TMR2_Initialize
  4155  0295                     _TMR2_Initialize:	
  4156                           
  4157                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4161  0295  30FF               	movlw	255
  4162  0296  0020               	movlb	0	; select bank0
  4163  0297  009E               	movwf	30	;volatile
  4164                           
  4165                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4166  0298  019D               	clrf	29	;volatile
  4167                           
  4168                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4169  0299  1091               	bcf	17,1	;volatile
  4170                           
  4171                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4172  029A  3004               	movlw	4
  4173  029B  009F               	movwf	31	;volatile
  4174  029C  0008               	return
  4175  029D                     __end_of_TMR2_Initialize:	
  4176                           
  4177                           	psect	text4
  4178  0270                     __ptext4:	
  4179 ;; *************** function _SPI1_Initialize *****************
  4180 ;; Defined at:
  4181 ;;		line 65 in file "mcc_generated_files/spi1.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_SYSTEM_Initialize
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _SPI1_Initialize
  4210  0270                     _SPI1_Initialize:	
  4211                           
  4212                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x00;
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4216  0270  0024               	movlb	4	; select bank4
  4217  0271  0194               	clrf	20	;volatile
  4218                           
  4219                           ;mcc_generated_files/spi1.c: 73:     SSP1CON1 = 0x21;
  4220  0272  3021               	movlw	33
  4221  0273  0095               	movwf	21	;volatile
  4222                           
  4223                           ;mcc_generated_files/spi1.c: 76:     SSP1ADD = 0x00;
  4224  0274  0192               	clrf	18	;volatile
  4225  0275  0008               	return
  4226  0276                     __end_of_SPI1_Initialize:	
  4227                           
  4228                           	psect	text5
  4229  02B1                     __ptext5:	
  4230 ;; *************** function _PWM1_Initialize *****************
  4231 ;; Defined at:
  4232 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_SYSTEM_Initialize
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function _PWM1_Initialize
  4261  02B1                     _PWM1_Initialize:	
  4262                           
  4263                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  4264                           
  4265                           ;incstack = 0
  4266                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  4267  02B1  308F               	movlw	143
  4268  02B2  0025               	movlb	5	; select bank5
  4269  02B3  0093               	movwf	19	;volatile
  4270                           
  4271                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
  4272  02B4  0192               	clrf	18	;volatile
  4273                           
  4274                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
  4275  02B5  0191               	clrf	17	;volatile
  4276                           
  4277                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRSbits.C1TSEL = 0x1;
  4278  02B6  081F               	movf	31,w	;volatile
  4279  02B7  39FC               	andlw	-4
  4280  02B8  3801               	iorlw	1
  4281  02B9  009F               	movwf	31	;volatile
  4282  02BA  0008               	return
  4283  02BB                     __end_of_PWM1_Initialize:	
  4284                           
  4285                           	psect	text6
  4286  028D                     __ptext6:	
  4287 ;; *************** function _PMD_Initialize *****************
  4288 ;; Defined at:
  4289 ;;		line 83 in file "mcc_generated_files/mcc.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		status,2
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_SYSTEM_Initialize
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _PMD_Initialize
  4318  028D                     _PMD_Initialize:	
  4319                           
  4320                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _PMD_Initialize: [status,2]
  4324  028D  0032               	movlb	18	; select bank18
  4325  028E  0191               	clrf	17	;volatile
  4326                           
  4327                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
  4328  028F  0192               	clrf	18	;volatile
  4329                           
  4330                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
  4331  0290  0193               	clrf	19	;volatile
  4332                           
  4333                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
  4334  0291  0194               	clrf	20	;volatile
  4335                           
  4336                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
  4337  0292  0195               	clrf	21	;volatile
  4338                           
  4339                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
  4340  0293  0196               	clrf	22	;volatile
  4341  0294  0008               	return
  4342  0295                     __end_of_PMD_Initialize:	
  4343                           
  4344                           	psect	text7
  4345  03F6                     __ptext7:	
  4346 ;; *************** function _PIN_MANAGER_Initialize *****************
  4347 ;; Defined at:
  4348 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;Total ram usage:        0 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_SYSTEM_Initialize
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _PIN_MANAGER_Initialize
  4377  03F6                     _PIN_MANAGER_Initialize:	
  4378                           
  4379                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4383  03F6  0022               	movlb	2	; select bank2
  4384  03F7  018C               	clrf	12	;volatile
  4385                           
  4386                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4387  03F8  018D               	clrf	13	;volatile
  4388                           
  4389                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4390  03F9  018E               	clrf	14	;volatile
  4391                           
  4392                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x25;
  4393  03FA  3025               	movlw	37
  4394  03FB  0021               	movlb	1	; select bank1
  4395  03FC  008C               	movwf	12	;volatile
  4396                           
  4397                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4398  03FD  3070               	movlw	112
  4399  03FE  008D               	movwf	13	;volatile
  4400                           
  4401                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x5F;
  4402  03FF  305F               	movlw	95
  4403  0400  008E               	movwf	14	;volatile
  4404                           
  4405                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
  4406  0401  307F               	movlw	127
  4407  0402  0023               	movlb	3	; select bank3
  4408  0403  008E               	movwf	14	;volatile
  4409                           
  4410                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF0;
  4411  0404  30F0               	movlw	240
  4412  0405  008D               	movwf	13	;volatile
  4413                           
  4414                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x24;
  4415  0406  3024               	movlw	36
  4416  0407  008C               	movwf	12	;volatile
  4417                           
  4418                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4419  0408  0024               	movlb	4	; select bank4
  4420  0409  018D               	clrf	13	;volatile
  4421                           
  4422                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4423  040A  018C               	clrf	12	;volatile
  4424                           
  4425                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4426  040B  018E               	clrf	14	;volatile
  4427                           
  4428                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  4429  040C  0025               	movlb	5	; select bank5
  4430  040D  018C               	clrf	12	;volatile
  4431                           
  4432                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  4433  040E  018D               	clrf	13	;volatile
  4434                           
  4435                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  4436  040F  018E               	clrf	14	;volatile
  4437                           
  4438                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  4439  0410  3037               	movlw	55
  4440  0411  0026               	movlb	6	; select bank6
  4441  0412  008C               	movwf	12	;volatile
  4442                           
  4443                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  4444  0413  30F0               	movlw	240
  4445  0414  008D               	movwf	13	;volatile
  4446                           
  4447                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  4448  0415  30FF               	movlw	255
  4449  0416  008E               	movwf	14	;volatile
  4450                           
  4451                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x17;
  4452  0417  3017               	movlw	23
  4453  0418  003C               	movlb	28	; select bank28
  4454  0419  00A0               	movwf	32	;volatile
  4455                           
  4456                           ;mcc_generated_files/pin_manager.c: 107:     RB7PPS = 0x19;
  4457  041A  3019               	movlw	25
  4458  041B  003D               	movlb	29	; select bank29
  4459  041C  009F               	movwf	31	;volatile
  4460                           
  4461                           ;mcc_generated_files/pin_manager.c: 108:     RC7PPS = 0x18;
  4462  041D  3018               	movlw	24
  4463  041E  00A7               	movwf	39	;volatile
  4464                           
  4465                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x00;
  4466  041F  003C               	movlb	28	; select bank28
  4467  0420  01A1               	clrf	33	;volatile
  4468  0421  0008               	return
  4469  0422                     __end_of_PIN_MANAGER_Initialize:	
  4470                           
  4471                           	psect	text8
  4472  0285                     __ptext8:	
  4473 ;; *************** function _OSCILLATOR_Initialize *****************
  4474 ;; Defined at:
  4475 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_SYSTEM_Initialize
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _OSCILLATOR_Initialize
  4504  0285                     _OSCILLATOR_Initialize:	
  4505                           
  4506                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x61;
  4507                           
  4508                           ;incstack = 0
  4509                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4510  0285  3061               	movlw	97
  4511  0286  0032               	movlb	18	; select bank18
  4512  0287  0099               	movwf	25	;volatile
  4513                           
  4514                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  4515  0288  019B               	clrf	27	;volatile
  4516                           
  4517                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  4518  0289  019D               	clrf	29	;volatile
  4519                           
  4520                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  4521  028A  019F               	clrf	31	;volatile
  4522                           
  4523                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4524  028B  019E               	clrf	30	;volatile
  4525  028C  0008               	return
  4526  028D                     __end_of_OSCILLATOR_Initialize:	
  4527                           
  4528                           	psect	text9
  4529  027D                     __ptext9:	
  4530 ;; *************** function _ADC_Initialize *****************
  4531 ;; Defined at:
  4532 ;;		line 65 in file "mcc_generated_files/adc.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_SYSTEM_Initialize
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function _ADC_Initialize
  4561  027D                     _ADC_Initialize:	
  4562                           
  4563                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4567  027D  3001               	movlw	1
  4568  027E  0021               	movlb	1	; select bank1
  4569  027F  009D               	movwf	29	;volatile
  4570                           
  4571                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  4572  0280  019E               	clrf	30	;volatile
  4573                           
  4574                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  4575  0281  019F               	clrf	31	;volatile
  4576                           
  4577                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  4578  0282  019B               	clrf	27	;volatile
  4579                           
  4580                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  4581  0283  019C               	clrf	28	;volatile
  4582  0284  0008               	return
  4583  0285                     __end_of_ADC_Initialize:	
  4584                           
  4585                           	psect	text10
  4586  03CD                     __ptext10:	
  4587 ;; *************** function _SPI *****************
  4588 ;; Defined at:
  4589 ;;		line 279 in file "main.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    6
  4610 ;; This function calls:
  4611 ;;		_BlackTab_Init
  4612 ;;		_PWM
  4613 ;;		_drawtext
  4614 ;;		_fillScreen
  4615 ;;		_setTextWrap
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _SPI
  4623  03CD                     _SPI:	
  4624                           
  4625                           ;main.c: 280:     PWM();
  4626                           
  4627                           ;incstack = 0
  4628                           ; Regs used in _SPI: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4629  03CD  3184  244F  3183   	fcall	_PWM
  4630                           
  4631                           ;main.c: 281:     BlackTab_Init();
  4632  03D0  3182  22EF  3183   	fcall	_BlackTab_Init
  4633                           
  4634                           ;main.c: 282:     fillScreen(0x0000);
  4635  03D3  3000               	movlw	0
  4636  03D4  0020               	movlb	0	; select bank0
  4637  03D5  00A8               	movwf	fillScreen@color
  4638  03D6  00A9               	movwf	fillScreen@color+1
  4639  03D7  3182  22DD  3183   	fcall	_fillScreen
  4640                           
  4641                           ;main.c: 283:     drawtext(0, 5, txt, 0xFFFF, 0x0000, 1);
  4642  03DA  3005               	movlw	5
  4643  03DB  0020               	movlb	0	; select bank0
  4644  03DC  00D2               	movwf	??_SPI
  4645  03DD  0852               	movf	??_SPI,w
  4646  03DE  00BC               	movwf	drawtext@y
  4647  03DF  30DB               	movlw	low (STR_1| (0+32768))
  4648  03E0  00BD               	movwf	drawtext@_text
  4649  03E1  3089               	movlw	high (STR_1| (0+32768))
  4650  03E2  00BE               	movwf	drawtext@_text+1
  4651  03E3  30FF               	movlw	255
  4652  03E4  00BF               	movwf	drawtext@color
  4653  03E5  30FF               	movlw	255
  4654  03E6  00C0               	movwf	drawtext@color+1
  4655  03E7  3000               	movlw	0
  4656  03E8  00C1               	movwf	drawtext@bg
  4657  03E9  00C2               	movwf	drawtext@bg+1
  4658  03EA  01C3               	clrf	drawtext@size
  4659  03EB  0AC3               	incf	drawtext@size,f
  4660  03EC  3000               	movlw	0
  4661  03ED  3185  25A2  3183   	fcall	_drawtext
  4662                           
  4663                           ;main.c: 284:     setTextWrap(0);
  4664  03F0  3000               	movlw	0
  4665  03F1  00F0               	movwf	setTextWrap@w
  4666  03F2  00F1               	movwf	setTextWrap@w+1
  4667  03F3  3182  226A         	fcall	_setTextWrap
  4668  03F5  0008               	return
  4669  03F6                     __end_of_SPI:	
  4670                           
  4671                           	psect	text11
  4672  026A                     __ptext11:	
  4673 ;; *************** function _setTextWrap *****************
  4674 ;; Defined at:
  4675 ;;		line 517 in file "main.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  w               2    0[COMMON] int 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:        2 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_SPI
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _setTextWrap
  4704  026A                     _setTextWrap:	
  4705                           
  4706                           ;main.c: 518:   wrap = w;
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _setTextWrap: [wreg]
  4710  026A  0871               	movf	setTextWrap@w+1,w
  4711  026B  0020               	movlb	0	; select bank0
  4712  026C  00E2               	movwf	_wrap+1
  4713  026D  0870               	movf	setTextWrap@w,w
  4714  026E  00E1               	movwf	_wrap
  4715  026F  0008               	return
  4716  0270                     __end_of_setTextWrap:	
  4717                           
  4718                           	psect	text12
  4719  02DD                     __ptext12:	
  4720 ;; *************** function _fillScreen *****************
  4721 ;; Defined at:
  4722 ;;		line 333 in file "main.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  color           2    8[BANK0 ] unsigned short 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;Total ram usage:        4 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    4
  4743 ;; This function calls:
  4744 ;;		_fillRect
  4745 ;; This function is called by:
  4746 ;;		_SPI
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _fillScreen
  4752  02DD                     _fillScreen:	
  4753                           
  4754                           ;main.c: 334:     fillRect(0,0, 128, 160, color);
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _fillScreen: [wreg+status,2+status,0+pclath+cstack]
  4758  02DD  01F8               	clrf	fillRect@y
  4759  02DE  3080               	movlw	128
  4760  02DF  0020               	movlb	0	; select bank0
  4761  02E0  00AA               	movwf	??_fillScreen
  4762  02E1  082A               	movf	??_fillScreen,w
  4763  02E2  00F9               	movwf	fillRect@w
  4764  02E3  30A0               	movlw	160
  4765  02E4  00AB               	movwf	??_fillScreen+1
  4766  02E5  082B               	movf	??_fillScreen+1,w
  4767  02E6  00FA               	movwf	fillRect@h
  4768  02E7  0829               	movf	fillScreen@color+1,w
  4769  02E8  00FC               	movwf	fillRect@color+1
  4770  02E9  0828               	movf	fillScreen@color,w
  4771  02EA  00FB               	movwf	fillRect@color
  4772  02EB  3000               	movlw	0
  4773  02EC  3184  247D         	fcall	_fillRect
  4774  02EE  0008               	return
  4775  02EF                     __end_of_fillScreen:	
  4776                           
  4777                           	psect	text13
  4778  05A2                     __ptext13:	
  4779 ;; *************** function _drawtext *****************
  4780 ;; Defined at:
  4781 ;;		line 466 in file "main.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  x               1    wreg     unsigned char 
  4784 ;;  y               1   28[BANK0 ] unsigned char 
  4785 ;;  _text           2   29[BANK0 ] PTR unsigned char 
  4786 ;;		 -> STR_1(12), 
  4787 ;;  color           2   31[BANK0 ] unsigned short 
  4788 ;;  bg              2   33[BANK0 ] unsigned short 
  4789 ;;  size            1   35[BANK0 ] unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  x               1   45[BANK0 ] unsigned char 
  4792 ;;  i               2   46[BANK0 ] unsigned short 
  4793 ;;  textsize        2   43[BANK0 ] unsigned short 
  4794 ;;  cursor_x        1   49[BANK0 ] unsigned char 
  4795 ;;  cursor_y        1   48[BANK0 ] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4805 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;Total ram usage:       22 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    5
  4812 ;; This function calls:
  4813 ;;		___bmul
  4814 ;;		___wmul
  4815 ;;		_drawChar
  4816 ;;		_strlen
  4817 ;; This function is called by:
  4818 ;;		_SPI
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function _drawtext
  4824  05A2                     _drawtext:	
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _drawtext: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4828                           ;drawtext@x stored from wreg
  4829  05A2  0020               	movlb	0	; select bank0
  4830  05A3  00CD               	movwf	drawtext@x
  4831                           
  4832                           ;main.c: 467:   uint8_t cursor_x, cursor_y;;main.c: 468:   uint16_t textsize, i;;main.c:
      +                           469:   cursor_x = x, cursor_y = y;
  4833  05A4  084D               	movf	drawtext@x,w
  4834  05A5  00C4               	movwf	??_drawtext
  4835  05A6  0844               	movf	??_drawtext,w
  4836  05A7  00D1               	movwf	drawtext@cursor_x
  4837  05A8  083C               	movf	drawtext@y,w
  4838  05A9  00C4               	movwf	??_drawtext
  4839  05AA  0844               	movf	??_drawtext,w
  4840  05AB  00D0               	movwf	drawtext@cursor_y
  4841                           
  4842                           ;main.c: 470:   textsize = strlen(_text);
  4843  05AC  083E               	movf	drawtext@_text+1,w
  4844  05AD  00F1               	movwf	strlen@s+1
  4845  05AE  083D               	movf	drawtext@_text,w
  4846  05AF  00F0               	movwf	strlen@s
  4847  05B0  3183  2305  3185   	fcall	_strlen
  4848  05B3  0871               	movf	?_strlen+1,w
  4849  05B4  0020               	movlb	0	; select bank0
  4850  05B5  00CC               	movwf	drawtext@textsize+1
  4851  05B6  0870               	movf	?_strlen,w
  4852  05B7  00CB               	movwf	drawtext@textsize
  4853                           
  4854                           ;main.c: 471:   for(i = 0; i < textsize; i++){
  4855  05B8  01CE               	clrf	drawtext@i
  4856  05B9  01CF               	clrf	drawtext@i+1
  4857  05BA                     l244:	
  4858  05BA  084C               	movf	drawtext@textsize+1,w
  4859  05BB  024F               	subwf	drawtext@i+1,w
  4860  05BC  1D03               	skipz
  4861  05BD  2DC0               	goto	u945
  4862  05BE  084B               	movf	drawtext@textsize,w
  4863  05BF  024E               	subwf	drawtext@i,w
  4864  05C0                     u945:	
  4865  05C0  1803               	btfsc	3,0
  4866  05C1  0008               	return
  4867                           
  4868                           ;main.c: 472:     if(wrap && ((cursor_x + size * 5) > 128)){
  4869  05C2  0861               	movf	_wrap,w
  4870  05C3  0462               	iorwf	_wrap+1,w
  4871  05C4  1903               	btfsc	3,2
  4872  05C5  2E0B               	goto	l1941
  4873  05C6  0851               	movf	drawtext@cursor_x,w
  4874  05C7  00C4               	movwf	??_drawtext
  4875  05C8  01C5               	clrf	??_drawtext+1
  4876  05C9  0843               	movf	drawtext@size,w
  4877  05CA  00C6               	movwf	??_drawtext+2
  4878  05CB  01C7               	clrf	??_drawtext+3
  4879  05CC  0846               	movf	??_drawtext+2,w
  4880  05CD  00F0               	movwf	___wmul@multiplier
  4881  05CE  0847               	movf	??_drawtext+3,w
  4882  05CF  00F1               	movwf	___wmul@multiplier+1
  4883  05D0  3005               	movlw	5
  4884  05D1  00F2               	movwf	___wmul@multiplicand
  4885  05D2  3000               	movlw	0
  4886  05D3  00F3               	movwf	___wmul@multiplicand+1
  4887  05D4  3183  2366  3185   	fcall	___wmul
  4888  05D7  0020               	movlb	0	; select bank0
  4889  05D8  0844               	movf	??_drawtext,w
  4890  05D9  0770               	addwf	?___wmul,w
  4891  05DA  00C8               	movwf	??_drawtext+4
  4892  05DB  0845               	movf	??_drawtext+1,w
  4893  05DC  3D71               	addwfc	?___wmul+1,w
  4894  05DD  00C9               	movwf	??_drawtext+5
  4895  05DE  0849               	movf	??_drawtext+5,w
  4896  05DF  3A80               	xorlw	128
  4897  05E0  00CA               	movwf	??_drawtext+6
  4898  05E1  3080               	movlw	128
  4899  05E2  024A               	subwf	??_drawtext+6,w
  4900  05E3  1D03               	skipz
  4901  05E4  2DE7               	goto	u905
  4902  05E5  3081               	movlw	129
  4903  05E6  0248               	subwf	??_drawtext+4,w
  4904  05E7                     u905:	
  4905  05E7  1C03               	skipc
  4906  05E8  2E0B               	goto	l1941
  4907                           
  4908                           ;main.c: 473:       cursor_x = 0;
  4909  05E9  0020               	movlb	0	; select bank0
  4910  05EA  01D1               	clrf	drawtext@cursor_x
  4911                           
  4912                           ;main.c: 474:       cursor_y = cursor_y + size * 7 + 3 ;
  4913  05EB  3007               	movlw	7
  4914  05EC  00C4               	movwf	??_drawtext
  4915  05ED  0844               	movf	??_drawtext,w
  4916  05EE  00F0               	movwf	___bmul@multiplicand
  4917  05EF  0843               	movf	drawtext@size,w
  4918  05F0  3182  22CC  3185   	fcall	___bmul
  4919  05F3  0020               	movlb	0	; select bank0
  4920  05F4  0750               	addwf	drawtext@cursor_y,w
  4921  05F5  3E03               	addlw	3
  4922  05F6  00C5               	movwf	??_drawtext+1
  4923  05F7  0845               	movf	??_drawtext+1,w
  4924  05F8  00D0               	movwf	drawtext@cursor_y
  4925                           
  4926                           ;main.c: 475:       if(cursor_y > 160) cursor_y = 160;
  4927  05F9  30A1               	movlw	161
  4928  05FA  0250               	subwf	drawtext@cursor_y,w
  4929  05FB  1C03               	skipc
  4930  05FC  2E01               	goto	l1937
  4931  05FD  30A0               	movlw	160
  4932  05FE  00C4               	movwf	??_drawtext
  4933  05FF  0844               	movf	??_drawtext,w
  4934  0600  00D0               	movwf	drawtext@cursor_y
  4935  0601                     l1937:	
  4936                           
  4937                           ;main.c: 476:       if(_text[i] == 0x20) goto _skip; }
  4938  0601  083D               	movf	drawtext@_text,w
  4939  0602  074E               	addwf	drawtext@i,w
  4940  0603  0084               	movwf	4
  4941  0604  083E               	movf	drawtext@_text+1,w
  4942  0605  3D4F               	addwfc	drawtext@i+1,w
  4943  0606  0085               	movwf	5
  4944  0607  0012               	moviw fsr0++
  4945  0608  3A20               	xorlw	32
  4946  0609  1903               	btfsc	3,2
  4947  060A  2E40               	goto	l249
  4948  060B                     l1941:	
  4949                           
  4950                           ;main.c: 477:     drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  4951  060B  0020               	movlb	0	; select bank0
  4952  060C  0850               	movf	drawtext@cursor_y,w
  4953  060D  00C4               	movwf	??_drawtext
  4954  060E  0844               	movf	??_drawtext,w
  4955  060F  00A8               	movwf	drawChar@y
  4956  0610  083D               	movf	drawtext@_text,w
  4957  0611  074E               	addwf	drawtext@i,w
  4958  0612  0084               	movwf	4
  4959  0613  083E               	movf	drawtext@_text+1,w
  4960  0614  3D4F               	addwfc	drawtext@i+1,w
  4961  0615  0085               	movwf	5
  4962  0616  0800               	movf	0,w	;code access
  4963  0617  00C5               	movwf	??_drawtext+1
  4964  0618  0845               	movf	??_drawtext+1,w
  4965  0619  00A9               	movwf	drawChar@c
  4966  061A  0840               	movf	drawtext@color+1,w
  4967  061B  00AB               	movwf	drawChar@color+1
  4968  061C  083F               	movf	drawtext@color,w
  4969  061D  00AA               	movwf	drawChar@color
  4970  061E  0842               	movf	drawtext@bg+1,w
  4971  061F  00AD               	movwf	drawChar@bg+1
  4972  0620  0841               	movf	drawtext@bg,w
  4973  0621  00AC               	movwf	drawChar@bg
  4974  0622  0843               	movf	drawtext@size,w
  4975  0623  00C6               	movwf	??_drawtext+2
  4976  0624  0846               	movf	??_drawtext+2,w
  4977  0625  00AE               	movwf	drawChar@size
  4978  0626  0851               	movf	drawtext@cursor_x,w
  4979  0627  3186  26F8  3185   	fcall	_drawChar
  4980                           
  4981                           ;main.c: 478:     cursor_x = cursor_x + size * 6;
  4982  062A  3006               	movlw	6
  4983  062B  0020               	movlb	0	; select bank0
  4984  062C  00C4               	movwf	??_drawtext
  4985  062D  0844               	movf	??_drawtext,w
  4986  062E  00F0               	movwf	___bmul@multiplicand
  4987  062F  0843               	movf	drawtext@size,w
  4988  0630  3182  22CC  3185   	fcall	___bmul
  4989  0633  0020               	movlb	0	; select bank0
  4990  0634  0751               	addwf	drawtext@cursor_x,w
  4991  0635  00C5               	movwf	??_drawtext+1
  4992  0636  0845               	movf	??_drawtext+1,w
  4993  0637  00D1               	movwf	drawtext@cursor_x
  4994                           
  4995                           ;main.c: 479:     if(cursor_x > 128) cursor_x = 128;
  4996  0638  3081               	movlw	129
  4997  0639  0251               	subwf	drawtext@cursor_x,w
  4998  063A  1C03               	skipc
  4999  063B  2E40               	goto	l249
  5000  063C  3080               	movlw	128
  5001  063D  00C4               	movwf	??_drawtext
  5002  063E  0844               	movf	??_drawtext,w
  5003  063F  00D1               	movwf	drawtext@cursor_x
  5004  0640                     l249:	
  5005                           ;main.c: 480:     _skip:;}
  5006                           
  5007  0640  3001               	movlw	1
  5008  0641  07CE               	addwf	drawtext@i,f
  5009  0642  3000               	movlw	0
  5010  0643  3DCF               	addwfc	drawtext@i+1,f
  5011  0644  2DBA               	goto	l244
  5012  0645                     __end_of_drawtext:	
  5013                           
  5014                           	psect	text14
  5015  0305                     __ptext14:	
  5016 ;; *************** function _strlen *****************
  5017 ;; Defined at:
  5018 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  s               2    0[COMMON] PTR const unsigned char 
  5021 ;;		 -> STR_1(12), 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  a               2    3[COMMON] PTR const unsigned char 
  5024 ;;		 -> STR_1(12), 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  2    0[COMMON] unsigned int 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;Total ram usage:        5 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_drawtext
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           
  5048                           ;psect for function _strlen
  5049  0305                     _strlen:	
  5050                           
  5051                           ;incstack = 0
  5052                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5053  0305  0871               	movf	strlen@s+1,w
  5054  0306  00F4               	movwf	strlen@a+1
  5055  0307  0870               	movf	strlen@s,w
  5056  0308  00F3               	movwf	strlen@a
  5057  0309                     l1833:	
  5058  0309  0870               	movf	strlen@s,w
  5059  030A  0084               	movwf	4
  5060  030B  0871               	movf	strlen@s+1,w
  5061  030C  0085               	movwf	5
  5062  030D  0012               	moviw fsr0++
  5063  030E  1903               	btfsc	3,2
  5064  030F  2B15               	goto	l1835
  5065  0310  3001               	movlw	1
  5066  0311  07F0               	addwf	strlen@s,f
  5067  0312  3000               	movlw	0
  5068  0313  3DF1               	addwfc	strlen@s+1,f
  5069  0314  2B09               	goto	l1833
  5070  0315                     l1835:	
  5071  0315  0873               	movf	strlen@a,w
  5072  0316  0270               	subwf	strlen@s,w
  5073  0317  00F0               	movwf	?_strlen
  5074  0318  0874               	movf	strlen@a+1,w
  5075  0319  3B71               	subwfb	strlen@s+1,w
  5076  031A  00F1               	movwf	?_strlen+1
  5077  031B  0008               	return
  5078  031C                     __end_of_strlen:	
  5079                           
  5080                           	psect	text15
  5081  06F8                     __ptext15:	
  5082 ;; *************** function _drawChar *****************
  5083 ;; Defined at:
  5084 ;;		line 483 in file "main.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  x               1    wreg     unsigned char 
  5087 ;;  y               1    8[BANK0 ] unsigned char 
  5088 ;;  c               1    9[BANK0 ] unsigned char 
  5089 ;;  color           2   10[BANK0 ] unsigned short 
  5090 ;;  bg              2   12[BANK0 ] unsigned short 
  5091 ;;  size            1   14[BANK0 ] unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  x               1   23[BANK0 ] unsigned char 
  5094 ;;  line            1   22[BANK0 ] unsigned char 
  5095 ;;  i               2   26[BANK0 ] int 
  5096 ;;  j               2   24[BANK0 ] int 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5106 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;Total ram usage:       20 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    4
  5113 ;; This function calls:
  5114 ;;		___bmul
  5115 ;;		___wmul
  5116 ;;		_drawPixel
  5117 ;;		_fillRect
  5118 ;; This function is called by:
  5119 ;;		_drawtext
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _drawChar
  5125  06F8                     _drawChar:	
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _drawChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5129                           ;drawChar@x stored from wreg
  5130  06F8  0020               	movlb	0	; select bank0
  5131  06F9  00B7               	movwf	drawChar@x
  5132                           
  5133                           ;main.c: 484:   int i, j;;main.c: 485:   if((x >= 128) || (y >= 160))
  5134  06FA  3080               	movlw	128
  5135  06FB  0237               	subwf	drawChar@x,w
  5136  06FC  1803               	skipnc
  5137  06FD  0008               	return
  5138  06FE  30A0               	movlw	160
  5139  06FF  0228               	subwf	drawChar@y,w
  5140  0700  1803               	btfsc	3,0
  5141  0701  0008               	return
  5142                           
  5143                           ;main.c: 487:   if(size < 1) size = 1;
  5144  0702  082E               	movf	drawChar@size,w
  5145  0703  1D03               	btfss	3,2
  5146  0704  2F07               	goto	l1847
  5147  0705  01AE               	clrf	drawChar@size
  5148  0706  0AAE               	incf	drawChar@size,f
  5149  0707                     l1847:	
  5150                           
  5151                           ;main.c: 488:   if((c < ' ') || (c > '~'))
  5152  0707  3020               	movlw	32
  5153  0708  0229               	subwf	drawChar@c,w
  5154  0709  1C03               	skipc
  5155  070A  2F0F               	goto	l1851
  5156  070B  307F               	movlw	127
  5157  070C  0229               	subwf	drawChar@c,w
  5158  070D  1C03               	skipc
  5159  070E  2F13               	goto	l1853
  5160  070F                     l1851:	
  5161                           
  5162                           ;main.c: 489:     c = '?';
  5163  070F  303F               	movlw	63
  5164  0710  00AF               	movwf	??_drawChar
  5165  0711  082F               	movf	??_drawChar,w
  5166  0712  00A9               	movwf	drawChar@c
  5167  0713                     l1853:	
  5168                           
  5169                           ;main.c: 490:   for(i=0; i<5; i++ ) {
  5170  0713  01BA               	clrf	drawChar@i
  5171  0714  01BB               	clrf	drawChar@i+1
  5172  0715                     l1859:	
  5173                           
  5174                           ;main.c: 491:     uint8_t line;;main.c: 492:     if(c < 'S')
  5175  0715  3053               	movlw	83
  5176  0716  0020               	movlb	0	; select bank0
  5177  0717  0229               	subwf	drawChar@c,w
  5178  0718  1803               	skipnc
  5179  0719  2F2D               	goto	l1863
  5180                           
  5181                           ;main.c: 493:       line = Font[(c - 32)*5 + i];
  5182  071A  0829               	movf	drawChar@c,w
  5183  071B  00AF               	movwf	??_drawChar
  5184  071C  01B0               	clrf	??_drawChar+1
  5185  071D  082F               	movf	??_drawChar,w
  5186  071E  00F0               	movwf	___wmul@multiplier
  5187  071F  0830               	movf	??_drawChar+1,w
  5188  0720  00F1               	movwf	___wmul@multiplier+1
  5189  0721  3005               	movlw	5
  5190  0722  00F2               	movwf	___wmul@multiplicand
  5191  0723  3000               	movlw	0
  5192  0724  00F3               	movwf	___wmul@multiplicand+1
  5193  0725  3183  2366  3186   	fcall	___wmul
  5194  0728  3060               	movlw	low ((_Font| (0+32768)+65376))
  5195  0729  0020               	movlb	0	; select bank0
  5196  072A  00B1               	movwf	??_drawChar+2
  5197  072B  3087               	movlw	high ((_Font| (0+32768)+65376))
  5198  072C  2F3F               	goto	L1
  5199  072D                     l1863:	
  5200                           
  5201                           ;main.c: 495:       line = Font2[(c - 'S')*5 + i];
  5202  072D  0829               	movf	drawChar@c,w
  5203  072E  00AF               	movwf	??_drawChar
  5204  072F  01B0               	clrf	??_drawChar+1
  5205  0730  082F               	movf	??_drawChar,w
  5206  0731  00F0               	movwf	___wmul@multiplier
  5207  0732  0830               	movf	??_drawChar+1,w
  5208  0733  00F1               	movwf	___wmul@multiplier+1
  5209  0734  3005               	movlw	5
  5210  0735  00F2               	movwf	___wmul@multiplicand
  5211  0736  3000               	movlw	0
  5212  0737  00F3               	movwf	___wmul@multiplicand+1
  5213  0738  3183  2366  3186   	fcall	___wmul
  5214  073B  3060               	movlw	low ((_Font2| (0+32768)+65121))
  5215  073C  0020               	movlb	0	; select bank0
  5216  073D  00B1               	movwf	??_drawChar+2
  5217  073E  3087               	movlw	high ((_Font2| (0+32768)+65121))
  5218  073F                     L1:	
  5219  073F  00B2               	movwf	??_drawChar+3
  5220  0740  0870               	movf	?___wmul,w
  5221  0741  0731               	addwf	??_drawChar+2,w
  5222  0742  00B3               	movwf	??_drawChar+4
  5223  0743  0871               	movf	?___wmul+1,w
  5224  0744  3D32               	addwfc	??_drawChar+3,w
  5225  0745  00B4               	movwf	??_drawChar+5
  5226  0746  0833               	movf	??_drawChar+4,w
  5227  0747  073A               	addwf	drawChar@i,w
  5228  0748  0084               	movwf	4
  5229  0749  0834               	movf	??_drawChar+5,w
  5230  074A  3D3B               	addwfc	drawChar@i+1,w
  5231  074B  0085               	movwf	5
  5232  074C  0800               	movf	0,w	;code access
  5233  074D  00B5               	movwf	??_drawChar+6
  5234  074E  0835               	movf	??_drawChar+6,w
  5235  074F  00B6               	movwf	drawChar@line
  5236                           
  5237                           ;main.c: 496:     for(j=0; j<7; j++, line >>= 1) {
  5238  0750  01B8               	clrf	drawChar@j
  5239  0751  01B9               	clrf	drawChar@j+1
  5240  0752                     l267:	
  5241                           
  5242                           ;main.c: 497:       if(line & 0x01) {
  5243  0752  0020               	movlb	0	; select bank0
  5244  0753  1C36               	btfss	drawChar@line,0
  5245  0754  2F80               	goto	l1877
  5246                           
  5247                           ;main.c: 498:         if(size == 1) drawPixel(x+i, y+j, color);
  5248  0755  032E               	decf	drawChar@size,w
  5249  0756  1D03               	btfss	3,2
  5250  0757  2F67               	goto	l1875
  5251  0758  0828               	movf	drawChar@y,w
  5252  0759  0738               	addwf	drawChar@j,w
  5253  075A  00AF               	movwf	??_drawChar
  5254  075B  082F               	movf	??_drawChar,w
  5255  075C  00F8               	movwf	drawPixel@y
  5256  075D  082B               	movf	drawChar@color+1,w
  5257  075E  00FA               	movwf	drawPixel@color+1
  5258  075F  082A               	movf	drawChar@color,w
  5259  0760  00F9               	movwf	drawPixel@color
  5260  0761  0837               	movf	drawChar@x,w
  5261  0762  073A               	addwf	drawChar@i,w
  5262  0763  3183  2381  3186   	fcall	_drawPixel
  5263  0766  2FC0               	goto	l1885
  5264  0767                     l1875:	
  5265  0767  0838               	movf	drawChar@j,w
  5266  0768  00AF               	movwf	??_drawChar
  5267  0769  082F               	movf	??_drawChar,w
  5268  076A  00F0               	movwf	___bmul@multiplicand
  5269  076B  082E               	movf	drawChar@size,w
  5270  076C  3182  22CC  3186   	fcall	___bmul
  5271  076F  0020               	movlb	0	; select bank0
  5272  0770  0728               	addwf	drawChar@y,w
  5273  0771  00B0               	movwf	??_drawChar+1
  5274  0772  0830               	movf	??_drawChar+1,w
  5275  0773  00F8               	movwf	fillRect@y
  5276  0774  082E               	movf	drawChar@size,w
  5277  0775  00B1               	movwf	??_drawChar+2
  5278  0776  0831               	movf	??_drawChar+2,w
  5279  0777  00F9               	movwf	fillRect@w
  5280  0778  082E               	movf	drawChar@size,w
  5281  0779  00B2               	movwf	??_drawChar+3
  5282  077A  0832               	movf	??_drawChar+3,w
  5283  077B  00FA               	movwf	fillRect@h
  5284  077C  082B               	movf	drawChar@color+1,w
  5285  077D  00FC               	movwf	fillRect@color+1
  5286  077E  082A               	movf	drawChar@color,w
  5287  077F  2FB2               	goto	L2
  5288  0780                     l1877:	
  5289  0780  082B               	movf	drawChar@color+1,w
  5290  0781  062D               	xorwf	drawChar@bg+1,w
  5291  0782  1D03               	skipz
  5292  0783  2F86               	goto	u825
  5293  0784  082A               	movf	drawChar@color,w
  5294  0785  062C               	xorwf	drawChar@bg,w
  5295  0786                     u825:	
  5296  0786  1903               	skipnz
  5297  0787  2FC0               	goto	l1885
  5298                           
  5299                           ;main.c: 502:            if(size == 1) drawPixel(x+i, y+j, bg);
  5300  0788  032E               	decf	drawChar@size,w
  5301  0789  1D03               	btfss	3,2
  5302  078A  2F9A               	goto	l1883
  5303  078B  0828               	movf	drawChar@y,w
  5304  078C  0738               	addwf	drawChar@j,w
  5305  078D  00AF               	movwf	??_drawChar
  5306  078E  082F               	movf	??_drawChar,w
  5307  078F  00F8               	movwf	drawPixel@y
  5308  0790  082D               	movf	drawChar@bg+1,w
  5309  0791  00FA               	movwf	drawPixel@color+1
  5310  0792  082C               	movf	drawChar@bg,w
  5311  0793  00F9               	movwf	drawPixel@color
  5312  0794  0837               	movf	drawChar@x,w
  5313  0795  073A               	addwf	drawChar@i,w
  5314  0796  3183  2381  3186   	fcall	_drawPixel
  5315  0799  2FC0               	goto	l1885
  5316  079A                     l1883:	
  5317  079A  0838               	movf	drawChar@j,w
  5318  079B  00AF               	movwf	??_drawChar
  5319  079C  082F               	movf	??_drawChar,w
  5320  079D  00F0               	movwf	___bmul@multiplicand
  5321  079E  082E               	movf	drawChar@size,w
  5322  079F  3182  22CC  3186   	fcall	___bmul
  5323  07A2  0020               	movlb	0	; select bank0
  5324  07A3  0728               	addwf	drawChar@y,w
  5325  07A4  00B0               	movwf	??_drawChar+1
  5326  07A5  0830               	movf	??_drawChar+1,w
  5327  07A6  00F8               	movwf	fillRect@y
  5328  07A7  082E               	movf	drawChar@size,w
  5329  07A8  00B1               	movwf	??_drawChar+2
  5330  07A9  0831               	movf	??_drawChar+2,w
  5331  07AA  00F9               	movwf	fillRect@w
  5332  07AB  082E               	movf	drawChar@size,w
  5333  07AC  00B2               	movwf	??_drawChar+3
  5334  07AD  0832               	movf	??_drawChar+3,w
  5335  07AE  00FA               	movwf	fillRect@h
  5336  07AF  082D               	movf	drawChar@bg+1,w
  5337  07B0  00FC               	movwf	fillRect@color+1
  5338  07B1  082C               	movf	drawChar@bg,w
  5339  07B2                     L2:	
  5340  07B2  00FB               	movwf	fillRect@color
  5341  07B3  083A               	movf	drawChar@i,w
  5342  07B4  00B3               	movwf	??_drawChar+4
  5343  07B5  0833               	movf	??_drawChar+4,w
  5344  07B6  00F0               	movwf	___bmul@multiplicand
  5345  07B7  082E               	movf	drawChar@size,w
  5346  07B8  3182  22CC  3186   	fcall	___bmul
  5347  07BB  0020               	movlb	0	; select bank0
  5348  07BC  0737               	addwf	drawChar@x,w
  5349  07BD  3184  247D  3186   	fcall	_fillRect
  5350  07C0                     l1885:	
  5351                           
  5352                           ;main.c: 505:     }
  5353  07C0  3001               	movlw	1
  5354  07C1  0020               	movlb	0	; select bank0
  5355  07C2  07B8               	addwf	drawChar@j,f
  5356  07C3  3000               	movlw	0
  5357  07C4  3DB9               	addwfc	drawChar@j+1,f
  5358  07C5  1003               	clrc
  5359  07C6  0CB6               	rrf	drawChar@line,f
  5360  07C7  0839               	movf	drawChar@j+1,w
  5361  07C8  3A80               	xorlw	128
  5362  07C9  00AF               	movwf	??_drawChar
  5363  07CA  3080               	movlw	128
  5364  07CB  022F               	subwf	??_drawChar,w
  5365  07CC  1D03               	skipz
  5366  07CD  2FD0               	goto	u845
  5367  07CE  3007               	movlw	7
  5368  07CF  0238               	subwf	drawChar@j,w
  5369  07D0                     u845:	
  5370  07D0  1C03               	skipc
  5371  07D1  2F52               	goto	l267
  5372                           
  5373                           ;main.c: 506:   }
  5374  07D2  3001               	movlw	1
  5375  07D3  0020               	movlb	0	; select bank0
  5376  07D4  07BA               	addwf	drawChar@i,f
  5377  07D5  3000               	movlw	0
  5378  07D6  3DBB               	addwfc	drawChar@i+1,f
  5379  07D7  083B               	movf	drawChar@i+1,w
  5380  07D8  3A80               	xorlw	128
  5381  07D9  00AF               	movwf	??_drawChar
  5382  07DA  3080               	movlw	128
  5383  07DB  022F               	subwf	??_drawChar,w
  5384  07DC  1D03               	skipz
  5385  07DD  2FE0               	goto	u855
  5386  07DE  3005               	movlw	5
  5387  07DF  023A               	subwf	drawChar@i,w
  5388  07E0                     u855:	
  5389  07E0  1803               	btfsc	3,0
  5390  07E1  0008               	return
  5391  07E2  2F15               	goto	l1859
  5392  07E3                     __end_of_drawChar:	
  5393                           
  5394                           	psect	text16
  5395  047D                     __ptext16:	
  5396 ;; *************** function _fillRect *****************
  5397 ;; Defined at:
  5398 ;;		line 337 in file "main.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  x               1    wreg     unsigned char 
  5401 ;;  y               1    8[COMMON] unsigned char 
  5402 ;;  w               1    9[COMMON] unsigned char 
  5403 ;;  h               1   10[COMMON] unsigned char 
  5404 ;;  color           2   11[COMMON] unsigned short 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  x               1    7[BANK0 ] unsigned char 
  5407 ;;  low             1    6[BANK0 ] unsigned char 
  5408 ;;  high            1    5[BANK0 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5418 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;Total ram usage:       13 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    3
  5425 ;; This function calls:
  5426 ;;		_setAddrWindow
  5427 ;;		_spiwrite
  5428 ;; This function is called by:
  5429 ;;		_fillScreen
  5430 ;;		_drawChar
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function _fillRect
  5436  047D                     _fillRect:	
  5437                           
  5438                           ;incstack = 0
  5439                           ; Regs used in _fillRect: [wreg+status,2+status,0+pclath+cstack]
  5440                           ;fillRect@x stored from wreg
  5441  047D  0020               	movlb	0	; select bank0
  5442  047E  00A7               	movwf	fillRect@x
  5443                           
  5444                           ;main.c: 338:     uint8_t high;;main.c: 339:     uint8_t low;;main.c: 340:     if((x >= 
      +                          128) || (y >= 160)) return;
  5445  047F  3080               	movlw	128
  5446  0480  0227               	subwf	fillRect@x,w
  5447  0481  1803               	skipnc
  5448  0482  0008               	return
  5449  0483  30A0               	movlw	160
  5450  0484  0278               	subwf	fillRect@y,w
  5451  0485  1803               	btfsc	3,0
  5452  0486  0008               	return
  5453                           
  5454                           ;main.c: 341:     if((x + w - 1) >= 128) w = 128 - x;
  5455  0487  0827               	movf	fillRect@x,w
  5456  0488  0779               	addwf	fillRect@w,w
  5457  0489  00A0               	movwf	??_fillRect
  5458  048A  01A1               	clrf	??_fillRect+1
  5459  048B  0DA1               	rlf	??_fillRect+1,f
  5460  048C  0820               	movf	??_fillRect,w
  5461  048D  3EFF               	addlw	255
  5462  048E  00A2               	movwf	??_fillRect+2
  5463  048F  30FF               	movlw	255
  5464  0490  3D21               	addwfc	??_fillRect+1,w
  5465  0491  00A3               	movwf	??_fillRect+3
  5466  0492  0823               	movf	??_fillRect+3,w
  5467  0493  3A80               	xorlw	128
  5468  0494  00A4               	movwf	??_fillRect+4
  5469  0495  3080               	movlw	128
  5470  0496  0224               	subwf	??_fillRect+4,w
  5471  0497  1D03               	skipz
  5472  0498  2C9B               	goto	u575
  5473  0499  3080               	movlw	128
  5474  049A  0222               	subwf	??_fillRect+2,w
  5475  049B                     u575:	
  5476  049B  1C03               	skipc
  5477  049C  2CA3               	goto	l184
  5478  049D  0020               	movlb	0	; select bank0
  5479  049E  0827               	movf	fillRect@x,w
  5480  049F  3C80               	sublw	128
  5481  04A0  00A0               	movwf	??_fillRect
  5482  04A1  0820               	movf	??_fillRect,w
  5483  04A2  00F9               	movwf	fillRect@w
  5484  04A3                     l184:	
  5485                           
  5486                           ;main.c: 342:     if((y + h - 1) >= 160) h = 160 - y;
  5487  04A3  0878               	movf	fillRect@y,w
  5488  04A4  077A               	addwf	fillRect@h,w
  5489  04A5  0020               	movlb	0	; select bank0
  5490  04A6  00A0               	movwf	??_fillRect
  5491  04A7  01A1               	clrf	??_fillRect+1
  5492  04A8  0DA1               	rlf	??_fillRect+1,f
  5493  04A9  0820               	movf	??_fillRect,w
  5494  04AA  3EFF               	addlw	255
  5495  04AB  00A2               	movwf	??_fillRect+2
  5496  04AC  30FF               	movlw	255
  5497  04AD  3D21               	addwfc	??_fillRect+1,w
  5498  04AE  00A3               	movwf	??_fillRect+3
  5499  04AF  0823               	movf	??_fillRect+3,w
  5500  04B0  3A80               	xorlw	128
  5501  04B1  00A4               	movwf	??_fillRect+4
  5502  04B2  3080               	movlw	128
  5503  04B3  0224               	subwf	??_fillRect+4,w
  5504  04B4  1D03               	skipz
  5505  04B5  2CB8               	goto	u585
  5506  04B6  30A0               	movlw	160
  5507  04B7  0222               	subwf	??_fillRect+2,w
  5508  04B8                     u585:	
  5509  04B8  1C03               	skipc
  5510  04B9  2CC0               	goto	l1641
  5511  04BA  0878               	movf	fillRect@y,w
  5512  04BB  3CA0               	sublw	160
  5513  04BC  0020               	movlb	0	; select bank0
  5514  04BD  00A0               	movwf	??_fillRect
  5515  04BE  0820               	movf	??_fillRect,w
  5516  04BF  00FA               	movwf	fillRect@h
  5517  04C0                     l1641:	
  5518                           
  5519                           ;main.c: 344:     setAddrWindow(x, y, x+w-1, y+h-1);
  5520  04C0  0878               	movf	fillRect@y,w
  5521  04C1  0020               	movlb	0	; select bank0
  5522  04C2  00A0               	movwf	??_fillRect
  5523  04C3  0820               	movf	??_fillRect,w
  5524  04C4  00F4               	movwf	setAddrWindow@y0
  5525  04C5  0827               	movf	fillRect@x,w
  5526  04C6  0779               	addwf	fillRect@w,w
  5527  04C7  3EFF               	addlw	255
  5528  04C8  00A1               	movwf	??_fillRect+1
  5529  04C9  0821               	movf	??_fillRect+1,w
  5530  04CA  00F5               	movwf	setAddrWindow@x1
  5531  04CB  0878               	movf	fillRect@y,w
  5532  04CC  077A               	addwf	fillRect@h,w
  5533  04CD  3EFF               	addlw	255
  5534  04CE  00A2               	movwf	??_fillRect+2
  5535  04CF  0822               	movf	??_fillRect+2,w
  5536  04D0  00F6               	movwf	setAddrWindow@y1
  5537  04D1  0827               	movf	fillRect@x,w
  5538  04D2  3184  2422  3184   	fcall	_setAddrWindow
  5539                           
  5540                           ;main.c: 345:     high = color >> 8; low = color;
  5541  04D5  087C               	movf	fillRect@color+1,w
  5542  04D6  0020               	movlb	0	; select bank0
  5543  04D7  00A0               	movwf	??_fillRect
  5544  04D8  0820               	movf	??_fillRect,w
  5545  04D9  00A5               	movwf	fillRect@high
  5546  04DA  087B               	movf	fillRect@color,w
  5547  04DB  00A0               	movwf	??_fillRect
  5548  04DC  0820               	movf	??_fillRect,w
  5549  04DD  00A6               	movwf	fillRect@low
  5550  04DE  0022               	movlb	2	; select bank2
  5551  04DF  160C               	bsf	12,4	;volatile
  5552  04E0  108C               	bcf	12,1	;volatile
  5553                           
  5554                           ;main.c: 348:     for(y=h; y>0; y--) {
  5555  04E1  087A               	movf	fillRect@h,w
  5556  04E2  0020               	movlb	0	; select bank0
  5557  04E3  00A0               	movwf	??_fillRect
  5558  04E4  0820               	movf	??_fillRect,w
  5559  04E5  00F8               	movwf	fillRect@y
  5560  04E6  0878               	movf	fillRect@y,w
  5561  04E7  1903               	btfsc	3,2
  5562  04E8  2D02               	goto	l194
  5563  04E9                     l1657:	
  5564                           
  5565                           ;main.c: 349:         for(x = w; x > 0; x--) {
  5566  04E9  0879               	movf	fillRect@w,w
  5567  04EA  00A0               	movwf	??_fillRect
  5568  04EB  0820               	movf	??_fillRect,w
  5569  04EC  00A7               	movwf	fillRect@x
  5570  04ED                     l1659:	
  5571  04ED  0827               	movf	fillRect@x,w
  5572  04EE  1903               	btfsc	3,2
  5573  04EF  2CFD               	goto	l1669
  5574                           
  5575                           ;main.c: 350:             spiwrite(high);
  5576  04F0  0825               	movf	fillRect@high,w
  5577  04F1  3183  234C  3184   	fcall	_spiwrite
  5578                           
  5579                           ;main.c: 351:             spiwrite(low);
  5580  04F4  0020               	movlb	0	; select bank0
  5581  04F5  0826               	movf	fillRect@low,w
  5582  04F6  3183  234C  3184   	fcall	_spiwrite
  5583                           
  5584                           ;main.c: 352:         }
  5585  04F9  3001               	movlw	1
  5586  04FA  0020               	movlb	0	; select bank0
  5587  04FB  02A7               	subwf	fillRect@x,f
  5588  04FC  2CED               	goto	l1659
  5589  04FD                     l1669:	
  5590                           
  5591                           ;main.c: 353:     }
  5592  04FD  3001               	movlw	1
  5593  04FE  02F8               	subwf	fillRect@y,f
  5594  04FF  0878               	movf	fillRect@y,w
  5595  0500  1D03               	btfss	3,2
  5596  0501  2CE9               	goto	l1657
  5597  0502                     l194:	
  5598                           ;main.c: 354:   do { LATAbits.LATA1 = 1; } while(0);
  5599                           
  5600  0502  0022               	movlb	2	; select bank2
  5601  0503  148C               	bsf	12,1	;volatile
  5602  0504  0008               	return
  5603  0505                     __end_of_fillRect:	
  5604                           
  5605                           	psect	text17
  5606  0381                     __ptext17:	
  5607 ;; *************** function _drawPixel *****************
  5608 ;; Defined at:
  5609 ;;		line 509 in file "main.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  x               1    wreg     unsigned char 
  5612 ;;  y               1    8[COMMON] unsigned char 
  5613 ;;  color           2    9[COMMON] unsigned short 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  x               1    0[BANK0 ] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, pclath, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         6       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        7 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		_setAddrWindow
  5634 ;;		_write_data
  5635 ;; This function is called by:
  5636 ;;		_drawChar
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _drawPixel
  5642  0381                     _drawPixel:	
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _drawPixel: [wreg+status,2+status,0+pclath+cstack]
  5646                           ;drawPixel@x stored from wreg
  5647  0381  0020               	movlb	0	; select bank0
  5648  0382  00A0               	movwf	drawPixel@x
  5649                           
  5650                           ;main.c: 510:   if((x >= 128) || (y >= 160))
  5651  0383  3080               	movlw	128
  5652  0384  0220               	subwf	drawPixel@x,w
  5653  0385  1803               	skipnc
  5654  0386  0008               	return
  5655  0387  30A0               	movlw	160
  5656  0388  0278               	subwf	drawPixel@y,w
  5657  0389  1803               	btfsc	3,0
  5658  038A  0008               	return
  5659                           
  5660                           ;main.c: 512:    setAddrWindow(x,y,x+1,y+1);
  5661  038B  0878               	movf	drawPixel@y,w
  5662  038C  00FB               	movwf	??_drawPixel
  5663  038D  087B               	movf	??_drawPixel,w
  5664  038E  00F4               	movwf	setAddrWindow@y0
  5665  038F  0820               	movf	drawPixel@x,w
  5666  0390  3E01               	addlw	1
  5667  0391  00FC               	movwf	??_drawPixel+1
  5668  0392  087C               	movf	??_drawPixel+1,w
  5669  0393  00F5               	movwf	setAddrWindow@x1
  5670  0394  0878               	movf	drawPixel@y,w
  5671  0395  3E01               	addlw	1
  5672  0396  00FD               	movwf	??_drawPixel+2
  5673  0397  087D               	movf	??_drawPixel+2,w
  5674  0398  00F6               	movwf	setAddrWindow@y1
  5675  0399  0820               	movf	drawPixel@x,w
  5676  039A  3184  2422  3183   	fcall	_setAddrWindow
  5677                           
  5678                           ;main.c: 513:   write_data(color >> 8);
  5679  039D  087A               	movf	drawPixel@color+1,w
  5680  039E  3182  22A7  3183   	fcall	_write_data
  5681                           
  5682                           ;main.c: 514:   write_data(color & 0xFF);
  5683  03A1  0879               	movf	drawPixel@color,w
  5684  03A2  3182  22A7         	fcall	_write_data
  5685  03A4  0008               	return
  5686  03A5                     __end_of_drawPixel:	
  5687                           
  5688                           	psect	text18
  5689  0422                     __ptext18:	
  5690 ;; *************** function _setAddrWindow *****************
  5691 ;; Defined at:
  5692 ;;		line 357 in file "main.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  x0              1    wreg     unsigned char 
  5695 ;;  y0              1    4[COMMON] unsigned char 
  5696 ;;  x1              1    5[COMMON] unsigned char 
  5697 ;;  y1              1    6[COMMON] unsigned char 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  x0              1    7[COMMON] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        4 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    2
  5716 ;; This function calls:
  5717 ;;		_write_command
  5718 ;;		_write_data
  5719 ;; This function is called by:
  5720 ;;		_fillRect
  5721 ;;		_drawPixel
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _setAddrWindow
  5727  0422                     _setAddrWindow:	
  5728                           
  5729                           ;incstack = 0
  5730                           ; Regs used in _setAddrWindow: [wreg+status,2+status,0+pclath+cstack]
  5731                           ;setAddrWindow@x0 stored from wreg
  5732  0422  00F7               	movwf	setAddrWindow@x0
  5733                           
  5734                           ;main.c: 358:     write_command(0x2A);
  5735  0423  302A               	movlw	42
  5736  0424  3182  229D  3184   	fcall	_write_command
  5737                           
  5738                           ;main.c: 359:     write_data(0);
  5739  0427  3000               	movlw	0
  5740  0428  3182  22A7  3184   	fcall	_write_data
  5741                           
  5742                           ;main.c: 360:     write_data(x0 + colstart);
  5743  042B  0877               	movf	setAddrWindow@x0,w
  5744  042C  3182  22A7  3184   	fcall	_write_data
  5745                           
  5746                           ;main.c: 361:     write_data(0);
  5747  042F  3000               	movlw	0
  5748  0430  3182  22A7  3184   	fcall	_write_data
  5749                           
  5750                           ;main.c: 362:     write_data(x1 + colstart);
  5751  0433  0875               	movf	setAddrWindow@x1,w
  5752  0434  3182  22A7  3184   	fcall	_write_data
  5753                           
  5754                           ;main.c: 363:     write_command(0x2B);
  5755  0437  302B               	movlw	43
  5756  0438  3182  229D  3184   	fcall	_write_command
  5757                           
  5758                           ;main.c: 364:     write_data(0);
  5759  043B  3000               	movlw	0
  5760  043C  3182  22A7  3184   	fcall	_write_data
  5761                           
  5762                           ;main.c: 365:     write_data(y0+rowstart);
  5763  043F  0874               	movf	setAddrWindow@y0,w
  5764  0440  3182  22A7  3184   	fcall	_write_data
  5765                           
  5766                           ;main.c: 366:     write_data(0);
  5767  0443  3000               	movlw	0
  5768  0444  3182  22A7  3184   	fcall	_write_data
  5769                           
  5770                           ;main.c: 367:     write_data(y1+rowstart);
  5771  0447  0876               	movf	setAddrWindow@y1,w
  5772  0448  3182  22A7  3184   	fcall	_write_data
  5773                           
  5774                           ;main.c: 368:     write_command(0x2C);
  5775  044B  302C               	movlw	44
  5776  044C  3182  229D         	fcall	_write_command
  5777  044E  0008               	return
  5778  044F                     __end_of_setAddrWindow:	
  5779                           
  5780                           	psect	text19
  5781  0366                     __ptext19:	
  5782 ;; *************** function ___wmul *****************
  5783 ;; Defined at:
  5784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  multiplier      2    0[COMMON] unsigned int 
  5787 ;;  multiplicand    2    2[COMMON] unsigned int 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  product         2    4[COMMON] unsigned int 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  2    0[COMMON] unsigned int 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;Total ram usage:        6 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_drawtext
  5809 ;;		_drawChar
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function ___wmul
  5815  0366                     ___wmul:	
  5816                           
  5817                           ;incstack = 0
  5818                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5819  0366  01F4               	clrf	___wmul@product
  5820  0367  01F5               	clrf	___wmul@product+1
  5821  0368                     l1679:	
  5822  0368  1C70               	btfss	___wmul@multiplier,0
  5823  0369  2B6E               	goto	l629
  5824  036A  0872               	movf	___wmul@multiplicand,w
  5825  036B  07F4               	addwf	___wmul@product,f
  5826  036C  0873               	movf	___wmul@multiplicand+1,w
  5827  036D  3DF5               	addwfc	___wmul@product+1,f
  5828  036E                     l629:	
  5829  036E  3001               	movlw	1
  5830  036F                     u655:	
  5831  036F  35F2               	lslf	___wmul@multiplicand,f
  5832  0370  0DF3               	rlf	___wmul@multiplicand+1,f
  5833  0371  0B89               	decfsz	9,f
  5834  0372  2B6F               	goto	u655
  5835  0373  3001               	movlw	1
  5836  0374                     u665:	
  5837  0374  36F1               	lsrf	___wmul@multiplier+1,f
  5838  0375  0CF0               	rrf	___wmul@multiplier,f
  5839  0376  0B89               	decfsz	9,f
  5840  0377  2B74               	goto	u665
  5841  0378  0870               	movf	___wmul@multiplier,w
  5842  0379  0471               	iorwf	___wmul@multiplier+1,w
  5843  037A  1D03               	btfss	3,2
  5844  037B  2B68               	goto	l1679
  5845  037C  0875               	movf	___wmul@product+1,w
  5846  037D  00F1               	movwf	?___wmul+1
  5847  037E  0874               	movf	___wmul@product,w
  5848  037F  00F0               	movwf	?___wmul
  5849  0380  0008               	return
  5850  0381                     __end_of___wmul:	
  5851                           
  5852                           	psect	text20
  5853  02CC                     __ptext20:	
  5854 ;; *************** function ___bmul *****************
  5855 ;; Defined at:
  5856 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  multiplier      1    wreg     unsigned char 
  5859 ;;  multiplicand    1    0[COMMON] unsigned char 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  multiplier      1    3[COMMON] unsigned char 
  5862 ;;  product         1    2[COMMON] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      unsigned char 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        4 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_drawtext
  5882 ;;		_drawChar
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function ___bmul
  5888  02CC                     ___bmul:	
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5892                           ;___bmul@multiplier stored from wreg
  5893  02CC  00F3               	movwf	___bmul@multiplier
  5894  02CD  01F2               	clrf	___bmul@product
  5895  02CE                     l1693:	
  5896  02CE  1C73               	btfss	___bmul@multiplier,0
  5897  02CF  2AD4               	goto	l1697
  5898  02D0  0870               	movf	___bmul@multiplicand,w
  5899  02D1  00F1               	movwf	??___bmul
  5900  02D2  0871               	movf	??___bmul,w
  5901  02D3  07F2               	addwf	___bmul@product,f
  5902  02D4                     l1697:	
  5903  02D4  1003               	clrc
  5904  02D5  0DF0               	rlf	___bmul@multiplicand,f
  5905  02D6  1003               	clrc
  5906  02D7  0CF3               	rrf	___bmul@multiplier,f
  5907  02D8  0873               	movf	___bmul@multiplier,w
  5908  02D9  1D03               	btfss	3,2
  5909  02DA  2ACE               	goto	l1693
  5910  02DB  0872               	movf	___bmul@product,w
  5911  02DC  0008               	return
  5912  02DD                     __end_of___bmul:	
  5913                           
  5914                           	psect	text21
  5915  044F                     __ptext21:	
  5916 ;; *************** function _PWM *****************
  5917 ;; Defined at:
  5918 ;;		line 287 in file "main.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        2 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    1
  5939 ;; This function calls:
  5940 ;;		_ADC_GetConversion
  5941 ;;		_PWM1_LoadDutyValue
  5942 ;;		_PWM_Output_D7_Disable
  5943 ;;		_PWM_Output_D7_Enable
  5944 ;;		_TMR2_StartTimer
  5945 ;; This function is called by:
  5946 ;;		_SPI
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _PWM
  5952  044F                     _PWM:	
  5953                           
  5954                           ;main.c: 288:     if(state == 0) {
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _PWM: [wreg+status,2+status,0+pclath+cstack]
  5958  044F  0020               	movlb	0	; select bank0
  5959  0450  0856               	movf	_state,w
  5960  0451  1D03               	btfss	3,2
  5961  0452  2C61               	goto	l1907
  5962  0453  0022               	movlb	2	; select bank2
  5963  0454  018C               	clrf	12	;volatile
  5964  0455  128E               	bcf	14,5	;volatile
  5965                           
  5966                           ;main.c: 290:         PWM_Output_D7_Enable();
  5967  0456  3182  225D  3184   	fcall	_PWM_Output_D7_Enable
  5968                           
  5969                           ;main.c: 291:         TMR2_StartTimer();
  5970  0459  3182  225A  3184   	fcall	_TMR2_StartTimer
  5971                           
  5972                           ;main.c: 292:         pause = 1;
  5973  045C  0020               	movlb	0	; select bank0
  5974  045D  01D5               	clrf	_pause
  5975  045E  0AD5               	incf	_pause,f
  5976                           
  5977                           ;main.c: 293:         state = 1;
  5978  045F  01D6               	clrf	_state
  5979  0460  0AD6               	incf	_state,f
  5980  0461                     l1907:	
  5981                           
  5982                           ;main.c: 296:     if(state == 1) {
  5983  0461  0356               	decf	_state,w
  5984  0462  1D03               	btfss	3,2
  5985  0463  0008               	return
  5986                           
  5987                           ;main.c: 297:         adcResult2 = ADC_GetConversion(POT_CHANNEL) >> 6;
  5988  0464  3010               	movlw	16
  5989  0465  3183  231C  3184   	fcall	_ADC_GetConversion
  5990  0468  0870               	movf	?_ADC_GetConversion,w
  5991  0469  00F4               	movwf	??_PWM
  5992  046A  0871               	movf	?_ADC_GetConversion+1,w
  5993  046B  00F5               	movwf	??_PWM+1
  5994  046C  3006               	movlw	6
  5995  046D                     u885:	
  5996  046D  36F5               	lsrf	??_PWM+1,f
  5997  046E  0CF4               	rrf	??_PWM,f
  5998  046F  0B89               	decfsz	9,f
  5999  0470  2C6D               	goto	u885
  6000  0471  0874               	movf	??_PWM,w
  6001  0472  0020               	movlb	0	; select bank0
  6002  0473  00D3               	movwf	_adcResult2
  6003  0474  0875               	movf	??_PWM+1,w
  6004  0475  00D4               	movwf	_adcResult2+1
  6005                           
  6006                           ;main.c: 298:         PWM1_LoadDutyValue(adcResult2);
  6007  0476  0854               	movf	_adcResult2+1,w
  6008  0477  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  6009  0478  0853               	movf	_adcResult2,w
  6010  0479  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  6011  047A  3182  22BB         	fcall	_PWM1_LoadDutyValue
  6012  047C  0008               	return
  6013  047D                     __end_of_PWM:	
  6014                           
  6015                           	psect	text22
  6016  025A                     __ptext22:	
  6017 ;; *************** function _TMR2_StartTimer *****************
  6018 ;; Defined at:
  6019 ;;		line 79 in file "mcc_generated_files/tmr2.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		None
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_PWM
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           
  6047                           ;psect for function _TMR2_StartTimer
  6048  025A                     _TMR2_StartTimer:	
  6049                           
  6050                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in _TMR2_StartTimer: []
  6054  025A  0020               	movlb	0	; select bank0
  6055  025B  151F               	bsf	31,2	;volatile
  6056  025C  0008               	return
  6057  025D                     __end_of_TMR2_StartTimer:	
  6058                           
  6059                           	psect	text23
  6060  025D                     __ptext23:	
  6061 ;; *************** function _PWM_Output_D7_Enable *****************
  6062 ;; Defined at:
  6063 ;;		line 313 in file "main.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_PWM
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _PWM_Output_D7_Enable
  6092  025D                     _PWM_Output_D7_Enable:	
  6093                           
  6094                           ;main.c: 314:     RC5PPS = 0x0C;
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _PWM_Output_D7_Enable: [wreg]
  6098  025D  300C               	movlw	12
  6099  025E  003D               	movlb	29	; select bank29
  6100  025F  00A5               	movwf	37	;volatile
  6101  0260  0008               	return
  6102  0261                     __end_of_PWM_Output_D7_Enable:	
  6103                           
  6104                           	psect	text24
  6105  0257                     __ptext24:	
  6106 ;; *************** function _PWM_Output_D7_Disable *****************
  6107 ;; Defined at:
  6108 ;;		line 317 in file "main.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		status,2
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_PWM
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function _PWM_Output_D7_Disable
  6137  0257                     _PWM_Output_D7_Disable:	
  6138                           
  6139                           ;main.c: 318:     RC5PPS = 0x00;
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _PWM_Output_D7_Disable: [status,2]
  6143  0257  003D               	movlb	29	; select bank29
  6144  0258  01A5               	clrf	37	;volatile
  6145  0259  0008               	return
  6146  025A                     __end_of_PWM_Output_D7_Disable:	
  6147                           
  6148                           	psect	text25
  6149  02BB                     __ptext25:	
  6150 ;; *************** function _PWM1_LoadDutyValue *****************
  6151 ;; Defined at:
  6152 ;;		line 82 in file "mcc_generated_files/pwm1.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  dutyValue       2    0[COMMON] unsigned short 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;Total ram usage:        2 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_PWM
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           
  6180                           ;psect for function _PWM1_LoadDutyValue
  6181  02BB                     _PWM1_LoadDutyValue:	
  6182                           
  6183                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     dutyValue &= 0x03FF;
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
  6187  02BB  30FF               	movlw	255
  6188  02BC  05F0               	andwf	PWM1_LoadDutyValue@dutyValue,f
  6189  02BD  3003               	movlw	3
  6190  02BE  05F1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  6191                           
  6192                           ;mcc_generated_files/pwm1.c: 87:     if(CCP1CONbits.CCP1FMT)
  6193  02BF  0025               	movlb	5	; select bank5
  6194  02C0  1E13               	btfss	19,4	;volatile
  6195  02C1  2AC7               	goto	l1727
  6196                           
  6197                           ;mcc_generated_files/pwm1.c: 88:     {;mcc_generated_files/pwm1.c: 89:         dutyValue
      +                           <<= 6;
  6198  02C2  3006               	movlw	6
  6199  02C3                     u725:	
  6200  02C3  35F0               	lslf	PWM1_LoadDutyValue@dutyValue,f
  6201  02C4  0DF1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  6202  02C5  0B89               	decfsz	9,f
  6203  02C6  2AC3               	goto	u725
  6204  02C7                     l1727:	
  6205                           
  6206                           ;mcc_generated_files/pwm1.c: 90:         CCPR1H = dutyValue >> 8;
  6207  02C7  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  6208  02C8  0092               	movwf	18	;volatile
  6209                           
  6210                           ;mcc_generated_files/pwm1.c: 91:         CCPR1L = dutyValue;
  6211  02C9  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  6212  02CA  0091               	movwf	17	;volatile
  6213                           
  6214                           ;mcc_generated_files/pwm1.c: 92:     }
  6215  02CB  0008               	return
  6216  02CC                     __end_of_PWM1_LoadDutyValue:	
  6217                           
  6218                           	psect	text26
  6219  031C                     __ptext26:	
  6220 ;; *************** function _ADC_GetConversion *****************
  6221 ;; Defined at:
  6222 ;;		line 113 in file "mcc_generated_files/adc.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  channel         1    wreg     enum E6648
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  channel         1    3[COMMON] enum E6648
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2    0[COMMON] unsigned short 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;Total ram usage:        4 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_PWM
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _ADC_GetConversion
  6251  031C                     _ADC_GetConversion:	
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6255                           ;ADC_GetConversion@channel stored from wreg
  6256  031C  00F3               	movwf	ADC_GetConversion@channel
  6257                           
  6258                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  6259  031D  0873               	movf	ADC_GetConversion@channel,w
  6260  031E  00F2               	movwf	??_ADC_GetConversion
  6261  031F  0DF2               	rlf	??_ADC_GetConversion,f
  6262  0320  0DF2               	rlf	??_ADC_GetConversion,f
  6263  0321  0021               	movlb	1	; select bank1
  6264  0322  081D               	movf	29,w	;volatile
  6265  0323  0672               	xorwf	??_ADC_GetConversion,w
  6266  0324  3903               	andlw	-253
  6267  0325  0672               	xorwf	??_ADC_GetConversion,w
  6268  0326  009D               	movwf	29	;volatile
  6269                           
  6270                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  6271  0327  141D               	bsf	29,0	;volatile
  6272                           
  6273                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
  6274                           
  6275                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
  6276  0328  0021               	movlb	1	; select bank1
  6277  0329  149D               	bsf	29,1	;volatile
  6278  032A                     l369:	
  6279                           ;mcc_generated_files/adc.c: 131:     }
  6280                           
  6281                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  6282                           
  6283                           
  6284                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  6285  032A  0021               	movlb	1	; select bank1
  6286  032B  1C9D               	btfss	29,1	;volatile
  6287  032C  2B2F               	goto	l1717
  6288  032D  0064               	clrwdt	;# 
  6289  032E  2B2A               	goto	l369
  6290  032F                     l1717:	
  6291                           
  6292                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6293  032F  081C               	movf	28,w	;volatile
  6294  0330  00F1               	movwf	?_ADC_GetConversion+1
  6295  0331  081B               	movf	27,w	;volatile
  6296  0332  00F0               	movwf	?_ADC_GetConversion
  6297  0333  0008               	return
  6298  0334                     __end_of_ADC_GetConversion:	
  6299                           
  6300                           	psect	text27
  6301  02EF                     __ptext27:	
  6302 ;; *************** function _BlackTab_Init *****************
  6303 ;; Defined at:
  6304 ;;		line 321 in file "main.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0, pclath, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    3
  6325 ;; This function calls:
  6326 ;;		_Rcmd1
  6327 ;;		_Rcmd2red
  6328 ;;		_Rcmd3
  6329 ;;		_write_command
  6330 ;;		_write_data
  6331 ;; This function is called by:
  6332 ;;		_SPI
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function _BlackTab_Init
  6338  02EF                     _BlackTab_Init:	
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _BlackTab_Init: [wreg+status,2+status,0+pclath+cstack]
  6342                           ;main.c: 322:     do { LATAbits.LATA1 = 1; } while(0);
  6343  02EF  0022               	movlb	2	; select bank2
  6344  02F0  148C               	bsf	12,1	;volatile
  6345                           
  6346                           ;main.c: 323:     do { LATAbits.LATA4 = 0; } while(0);
  6347  02F1  120C               	bcf	12,4	;volatile
  6348                           
  6349                           ;main.c: 324:     do { LATCbits.LATC7 = 0; } while(0);
  6350  02F2  138E               	bcf	14,7	;volatile
  6351                           
  6352                           ;main.c: 325:     do { LATBbits.LATB7 = 0; } while(0);
  6353  02F3  138D               	bcf	13,7	;volatile
  6354                           
  6355                           ;main.c: 327:     Rcmd1();
  6356  02F4  3186  2645  3182   	fcall	_Rcmd1
  6357                           
  6358                           ;main.c: 328:     Rcmd2red();
  6359  02F7  3183  23A5  3182   	fcall	_Rcmd2red
  6360                           
  6361                           ;main.c: 329:     Rcmd3();
  6362  02FA  3185  2505  3182   	fcall	_Rcmd3
  6363                           
  6364                           ;main.c: 330:     write_command(0x36);
  6365  02FD  3036               	movlw	54
  6366  02FE  3182  229D  3182   	fcall	_write_command
  6367                           
  6368                           ;main.c: 331:     write_data(0xC0);
  6369  0301  30C0               	movlw	192
  6370  0302  3182  22A7         	fcall	_write_data
  6371  0304  0008               	return
  6372  0305                     __end_of_BlackTab_Init:	
  6373                           
  6374                           	psect	text28
  6375  0505                     __ptext28:	
  6376 ;; *************** function _Rcmd3 *****************
  6377 ;; Defined at:
  6378 ;;		line 449 in file "main.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0, pclath, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;Total ram usage:        1 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    2
  6399 ;; This function calls:
  6400 ;;		_write_command
  6401 ;;		_write_data
  6402 ;; This function is called by:
  6403 ;;		_BlackTab_Init
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function _Rcmd3
  6409  0505                     _Rcmd3:	
  6410                           
  6411                           ;main.c: 450:   write_command(0xE0);
  6412                           
  6413                           ;incstack = 0
  6414                           ; Regs used in _Rcmd3: [wreg+status,2+status,0+pclath+cstack]
  6415  0505  30E0               	movlw	224
  6416  0506  3182  229D  3185   	fcall	_write_command
  6417                           
  6418                           ;main.c: 451:   write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x12);
  6419  0509  3002               	movlw	2
  6420  050A  3182  22A7  3185   	fcall	_write_data
  6421  050D  301C               	movlw	28
  6422  050E  3182  22A7  3185   	fcall	_write_data
  6423  0511  3007               	movlw	7
  6424  0512  3182  22A7  3185   	fcall	_write_data
  6425  0515  3012               	movlw	18
  6426  0516  3182  22A7  3185   	fcall	_write_data
  6427                           
  6428                           ;main.c: 452:   write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2D);
  6429  0519  3037               	movlw	55
  6430  051A  3182  22A7  3185   	fcall	_write_data
  6431  051D  3032               	movlw	50
  6432  051E  3182  22A7  3185   	fcall	_write_data
  6433  0521  3029               	movlw	41
  6434  0522  3182  22A7  3185   	fcall	_write_data
  6435  0525  302D               	movlw	45
  6436  0526  3182  22A7  3185   	fcall	_write_data
  6437                           
  6438                           ;main.c: 453:   write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x39);
  6439  0529  3029               	movlw	41
  6440  052A  3182  22A7  3185   	fcall	_write_data
  6441  052D  3025               	movlw	37
  6442  052E  3182  22A7  3185   	fcall	_write_data
  6443  0531  302B               	movlw	43
  6444  0532  3182  22A7  3185   	fcall	_write_data
  6445  0535  3039               	movlw	57
  6446  0536  3182  22A7  3185   	fcall	_write_data
  6447                           
  6448                           ;main.c: 454:   write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x10);
  6449  0539  3000               	movlw	0
  6450  053A  3182  22A7  3185   	fcall	_write_data
  6451  053D  3001               	movlw	1
  6452  053E  3182  22A7  3185   	fcall	_write_data
  6453  0541  3003               	movlw	3
  6454  0542  3182  22A7  3185   	fcall	_write_data
  6455  0545  3010               	movlw	16
  6456  0546  3182  22A7  3185   	fcall	_write_data
  6457                           
  6458                           ;main.c: 455:   write_command(0xE1);
  6459  0549  30E1               	movlw	225
  6460  054A  3182  229D  3185   	fcall	_write_command
  6461                           
  6462                           ;main.c: 456:   write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x06);
  6463  054D  3003               	movlw	3
  6464  054E  3182  22A7  3185   	fcall	_write_data
  6465  0551  301D               	movlw	29
  6466  0552  3182  22A7  3185   	fcall	_write_data
  6467  0555  3007               	movlw	7
  6468  0556  3182  22A7  3185   	fcall	_write_data
  6469  0559  3006               	movlw	6
  6470  055A  3182  22A7  3185   	fcall	_write_data
  6471                           
  6472                           ;main.c: 457:   write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2D);
  6473  055D  302E               	movlw	46
  6474  055E  3182  22A7  3185   	fcall	_write_data
  6475  0561  302C               	movlw	44
  6476  0562  3182  22A7  3185   	fcall	_write_data
  6477  0565  3029               	movlw	41
  6478  0566  3182  22A7  3185   	fcall	_write_data
  6479  0569  302D               	movlw	45
  6480  056A  3182  22A7  3185   	fcall	_write_data
  6481                           
  6482                           ;main.c: 458:   write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3F);
  6483  056D  302E               	movlw	46
  6484  056E  3182  22A7  3185   	fcall	_write_data
  6485  0571  302E               	movlw	46
  6486  0572  3182  22A7  3185   	fcall	_write_data
  6487  0575  3037               	movlw	55
  6488  0576  3182  22A7  3185   	fcall	_write_data
  6489  0579  303F               	movlw	63
  6490  057A  3182  22A7  3185   	fcall	_write_data
  6491                           
  6492                           ;main.c: 459:   write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x10);
  6493  057D  3000               	movlw	0
  6494  057E  3182  22A7  3185   	fcall	_write_data
  6495  0581  3000               	movlw	0
  6496  0582  3182  22A7  3185   	fcall	_write_data
  6497  0585  3002               	movlw	2
  6498  0586  3182  22A7  3185   	fcall	_write_data
  6499  0589  3010               	movlw	16
  6500  058A  3182  22A7  3185   	fcall	_write_data
  6501                           
  6502                           ;main.c: 460:   write_command(0x13);
  6503  058D  3013               	movlw	19
  6504  058E  3182  229D  3185   	fcall	_write_command
  6505                           
  6506                           ;main.c: 461:   _delay((unsigned long)((10)*(500000/4000.0)));
  6507  0591  30FA               	movlw	250
  6508  0592                     u957:	
  6509  0592  3200               	nop2
  6510  0593  0B89               	decfsz	9,f
  6511  0594  2D92               	goto	u957
  6512                           
  6513                           ;main.c: 462:   write_command(0x29);
  6514  0595  3029               	movlw	41
  6515  0596  3182  229D  3185   	fcall	_write_command
  6516                           
  6517                           ;main.c: 463:   _delay((unsigned long)((100)*(500000/4000.0)));
  6518  0599  3011               	movlw	17
  6519  059A  00F4               	movwf	??_Rcmd3
  6520  059B  303A               	movlw	58
  6521  059C                     u967:	
  6522  059C  0B89               	decfsz	9,f
  6523  059D  2D9C               	goto	u967
  6524  059E  0BF4               	decfsz	??_Rcmd3,f
  6525  059F  2D9C               	goto	u967
  6526  05A0  3200               	nop2
  6527  05A1  0008               	return
  6528  05A2                     __end_of_Rcmd3:	
  6529                           
  6530                           	psect	text29
  6531  03A5                     __ptext29:	
  6532 ;; *************** function _Rcmd2red *****************
  6533 ;; Defined at:
  6534 ;;		line 440 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0, pclath, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    2
  6555 ;; This function calls:
  6556 ;;		_write_command
  6557 ;;		_write_data
  6558 ;; This function is called by:
  6559 ;;		_BlackTab_Init
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           
  6564                           ;psect for function _Rcmd2red
  6565  03A5                     _Rcmd2red:	
  6566                           
  6567                           ;main.c: 441:   write_command(0x2A);
  6568                           
  6569                           ;incstack = 0
  6570                           ; Regs used in _Rcmd2red: [wreg+status,2+status,0+pclath+cstack]
  6571  03A5  302A               	movlw	42
  6572  03A6  3182  229D  3183   	fcall	_write_command
  6573                           
  6574                           ;main.c: 442:   write_data(0x00); write_data(0x00);
  6575  03A9  3000               	movlw	0
  6576  03AA  3182  22A7  3183   	fcall	_write_data
  6577  03AD  3000               	movlw	0
  6578  03AE  3182  22A7  3183   	fcall	_write_data
  6579                           
  6580                           ;main.c: 443:   write_data(0x00); write_data(0x7F);
  6581  03B1  3000               	movlw	0
  6582  03B2  3182  22A7  3183   	fcall	_write_data
  6583  03B5  307F               	movlw	127
  6584  03B6  3182  22A7  3183   	fcall	_write_data
  6585                           
  6586                           ;main.c: 444:   write_command(0x2B);
  6587  03B9  302B               	movlw	43
  6588  03BA  3182  229D  3183   	fcall	_write_command
  6589                           
  6590                           ;main.c: 445:   write_data(0x00); write_data(0x00);
  6591  03BD  3000               	movlw	0
  6592  03BE  3182  22A7  3183   	fcall	_write_data
  6593  03C1  3000               	movlw	0
  6594  03C2  3182  22A7  3183   	fcall	_write_data
  6595                           
  6596                           ;main.c: 446:   write_data(0x00); write_data(0x9F);
  6597  03C5  3000               	movlw	0
  6598  03C6  3182  22A7  3183   	fcall	_write_data
  6599  03C9  309F               	movlw	159
  6600  03CA  3182  22A7         	fcall	_write_data
  6601  03CC  0008               	return
  6602  03CD                     __end_of_Rcmd2red:	
  6603                           
  6604                           	psect	text30
  6605  0645                     __ptext30:	
  6606 ;; *************** function _Rcmd1 *****************
  6607 ;; Defined at:
  6608 ;;		line 398 in file "main.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0, pclath, cstack
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;Total ram usage:        1 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    2
  6629 ;; This function calls:
  6630 ;;		_write_command
  6631 ;;		_write_data
  6632 ;; This function is called by:
  6633 ;;		_BlackTab_Init
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function _Rcmd1
  6639  0645                     _Rcmd1:	
  6640                           
  6641                           ;main.c: 399:   write_command(0x01);
  6642                           
  6643                           ;incstack = 0
  6644                           ; Regs used in _Rcmd1: [wreg+status,2+status,0+pclath+cstack]
  6645  0645  3001               	movlw	1
  6646  0646  3182  229D  3186   	fcall	_write_command
  6647                           
  6648                           ;main.c: 400:   _delay((unsigned long)((150)*(500000/4000.0)));
  6649  0649  3019               	movlw	25
  6650  064A  00F4               	movwf	??_Rcmd1
  6651  064B  3058               	movlw	88
  6652  064C                     u977:	
  6653  064C  0B89               	decfsz	9,f
  6654  064D  2E4C               	goto	u977
  6655  064E  0BF4               	decfsz	??_Rcmd1,f
  6656  064F  2E4C               	goto	u977
  6657  0650  3200               	nop2
  6658                           
  6659                           ;main.c: 401:   write_command(0x11);
  6660  0651  3011               	movlw	17
  6661  0652  3182  229D  3186   	fcall	_write_command
  6662                           
  6663                           ;main.c: 402:   _delay((unsigned long)((500)*(500000/4000.0)));
  6664  0655  3052               	movlw	82
  6665  0656  00F4               	movwf	??_Rcmd1
  6666  0657  302A               	movlw	42
  6667  0658                     u987:	
  6668  0658  0B89               	decfsz	9,f
  6669  0659  2E58               	goto	u987
  6670  065A  0BF4               	decfsz	??_Rcmd1,f
  6671  065B  2E58               	goto	u987
  6672                           
  6673                           ;main.c: 403:   write_command(0xB1);
  6674  065C  30B1               	movlw	177
  6675  065D  3182  229D  3186   	fcall	_write_command
  6676                           
  6677                           ;main.c: 404:   write_data(0x01);
  6678  0660  3001               	movlw	1
  6679  0661  3182  22A7  3186   	fcall	_write_data
  6680                           
  6681                           ;main.c: 405:   write_data(0x2C);
  6682  0664  302C               	movlw	44
  6683  0665  3182  22A7  3186   	fcall	_write_data
  6684                           
  6685                           ;main.c: 406:   write_data(0x2D);
  6686  0668  302D               	movlw	45
  6687  0669  3182  22A7  3186   	fcall	_write_data
  6688                           
  6689                           ;main.c: 407:   write_command(0xB2);
  6690  066C  30B2               	movlw	178
  6691  066D  3182  229D  3186   	fcall	_write_command
  6692                           
  6693                           ;main.c: 408:   write_data(0x01);
  6694  0670  3001               	movlw	1
  6695  0671  3182  22A7  3186   	fcall	_write_data
  6696                           
  6697                           ;main.c: 409:   write_data(0x2C);
  6698  0674  302C               	movlw	44
  6699  0675  3182  22A7  3186   	fcall	_write_data
  6700                           
  6701                           ;main.c: 410:   write_data(0x2D);
  6702  0678  302D               	movlw	45
  6703  0679  3182  22A7  3186   	fcall	_write_data
  6704                           
  6705                           ;main.c: 411:   write_command(0xB3);
  6706  067C  30B3               	movlw	179
  6707  067D  3182  229D  3186   	fcall	_write_command
  6708                           
  6709                           ;main.c: 412:   write_data(0x01); write_data(0x2C); write_data(0x2D);
  6710  0680  3001               	movlw	1
  6711  0681  3182  22A7  3186   	fcall	_write_data
  6712  0684  302C               	movlw	44
  6713  0685  3182  22A7  3186   	fcall	_write_data
  6714  0688  302D               	movlw	45
  6715  0689  3182  22A7  3186   	fcall	_write_data
  6716                           
  6717                           ;main.c: 413:   write_data(0x01); write_data(0x2C); write_data(0x2D);
  6718  068C  3001               	movlw	1
  6719  068D  3182  22A7  3186   	fcall	_write_data
  6720  0690  302C               	movlw	44
  6721  0691  3182  22A7  3186   	fcall	_write_data
  6722  0694  302D               	movlw	45
  6723  0695  3182  22A7  3186   	fcall	_write_data
  6724                           
  6725                           ;main.c: 414:   write_command(0xB4);
  6726  0698  30B4               	movlw	180
  6727  0699  3182  229D  3186   	fcall	_write_command
  6728                           
  6729                           ;main.c: 415:   write_data(0x07);
  6730  069C  3007               	movlw	7
  6731  069D  3182  22A7  3186   	fcall	_write_data
  6732                           
  6733                           ;main.c: 416:   write_command(0xC0);
  6734  06A0  30C0               	movlw	192
  6735  06A1  3182  229D  3186   	fcall	_write_command
  6736                           
  6737                           ;main.c: 417:   write_data(0xA2);
  6738  06A4  30A2               	movlw	162
  6739  06A5  3182  22A7  3186   	fcall	_write_data
  6740                           
  6741                           ;main.c: 418:   write_data(0x02);
  6742  06A8  3002               	movlw	2
  6743  06A9  3182  22A7  3186   	fcall	_write_data
  6744                           
  6745                           ;main.c: 419:   write_data(0x84);
  6746  06AC  3084               	movlw	132
  6747  06AD  3182  22A7  3186   	fcall	_write_data
  6748                           
  6749                           ;main.c: 420:   write_command(0xC1);
  6750  06B0  30C1               	movlw	193
  6751  06B1  3182  229D  3186   	fcall	_write_command
  6752                           
  6753                           ;main.c: 421:   write_data(0xC5);
  6754  06B4  30C5               	movlw	197
  6755  06B5  3182  22A7  3186   	fcall	_write_data
  6756                           
  6757                           ;main.c: 422:   write_command(0xC2);
  6758  06B8  30C2               	movlw	194
  6759  06B9  3182  229D  3186   	fcall	_write_command
  6760                           
  6761                           ;main.c: 423:   write_data(0x0A);
  6762  06BC  300A               	movlw	10
  6763  06BD  3182  22A7  3186   	fcall	_write_data
  6764                           
  6765                           ;main.c: 424:   write_data(0x00);
  6766  06C0  3000               	movlw	0
  6767  06C1  3182  22A7  3186   	fcall	_write_data
  6768                           
  6769                           ;main.c: 425:   write_command(0xC3);
  6770  06C4  30C3               	movlw	195
  6771  06C5  3182  229D  3186   	fcall	_write_command
  6772                           
  6773                           ;main.c: 426:   write_data(0x8A);
  6774  06C8  308A               	movlw	138
  6775  06C9  3182  22A7  3186   	fcall	_write_data
  6776                           
  6777                           ;main.c: 427:   write_data(0x2A);
  6778  06CC  302A               	movlw	42
  6779  06CD  3182  22A7  3186   	fcall	_write_data
  6780                           
  6781                           ;main.c: 428:   write_command(0xC4);
  6782  06D0  30C4               	movlw	196
  6783  06D1  3182  229D  3186   	fcall	_write_command
  6784                           
  6785                           ;main.c: 429:   write_data(0x8A);
  6786  06D4  308A               	movlw	138
  6787  06D5  3182  22A7  3186   	fcall	_write_data
  6788                           
  6789                           ;main.c: 430:   write_data(0xEE);
  6790  06D8  30EE               	movlw	238
  6791  06D9  3182  22A7  3186   	fcall	_write_data
  6792                           
  6793                           ;main.c: 431:   write_command(0xC5);
  6794  06DC  30C5               	movlw	197
  6795  06DD  3182  229D  3186   	fcall	_write_command
  6796                           
  6797                           ;main.c: 432:   write_data(0x0E);
  6798  06E0  300E               	movlw	14
  6799  06E1  3182  22A7  3186   	fcall	_write_data
  6800                           
  6801                           ;main.c: 433:   write_command(0x20);
  6802  06E4  3020               	movlw	32
  6803  06E5  3182  229D  3186   	fcall	_write_command
  6804                           
  6805                           ;main.c: 434:   write_command(0x36);
  6806  06E8  3036               	movlw	54
  6807  06E9  3182  229D  3186   	fcall	_write_command
  6808                           
  6809                           ;main.c: 435:   write_data(0xC8);
  6810  06EC  30C8               	movlw	200
  6811  06ED  3182  22A7  3186   	fcall	_write_data
  6812                           
  6813                           ;main.c: 436:   write_command(0x3A);
  6814  06F0  303A               	movlw	58
  6815  06F1  3182  229D  3186   	fcall	_write_command
  6816                           
  6817                           ;main.c: 437:   write_data(0x05);
  6818  06F4  3005               	movlw	5
  6819  06F5  3182  22A7         	fcall	_write_data
  6820  06F7  0008               	return
  6821  06F8                     __end_of_Rcmd1:	
  6822                           
  6823                           	psect	text31
  6824  02A7                     __ptext31:	
  6825 ;; *************** function _write_data *****************
  6826 ;; Defined at:
  6827 ;;		line 380 in file "main.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  data            1    wreg     unsigned char 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  data            1    3[COMMON] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;Total ram usage:        1 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    1
  6848 ;; This function calls:
  6849 ;;		_spiwrite
  6850 ;; This function is called by:
  6851 ;;		_BlackTab_Init
  6852 ;;		_setAddrWindow
  6853 ;;		_Rcmd1
  6854 ;;		_Rcmd2red
  6855 ;;		_Rcmd3
  6856 ;;		_drawPixel
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           
  6861                           ;psect for function _write_data
  6862  02A7                     _write_data:	
  6863                           
  6864                           ;incstack = 0
  6865                           ; Regs used in _write_data: [wreg+status,2+status,0+pclath+cstack]
  6866                           ;write_data@data stored from wreg
  6867  02A7  00F3               	movwf	write_data@data
  6868                           
  6869                           ;main.c: 381:     do { LATAbits.LATA1 = 0; } while(0);
  6870  02A8  0022               	movlb	2	; select bank2
  6871  02A9  108C               	bcf	12,1	;volatile
  6872                           
  6873                           ;main.c: 382:     do { LATAbits.LATA4 = 1; } while(0);
  6874  02AA  160C               	bsf	12,4	;volatile
  6875                           
  6876                           ;main.c: 384:     spiwrite(data);
  6877  02AB  0873               	movf	write_data@data,w
  6878  02AC  3183  234C         	fcall	_spiwrite
  6879  02AE  0022               	movlb	2	; select bank2
  6880  02AF  148C               	bsf	12,1	;volatile
  6881  02B0  0008               	return
  6882  02B1                     __end_of_write_data:	
  6883                           
  6884                           	psect	text32
  6885  029D                     __ptext32:	
  6886 ;; *************** function _write_command *****************
  6887 ;; Defined at:
  6888 ;;		line 371 in file "main.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  cmd             1    wreg     unsigned char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  cmd             1    3[COMMON] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;Total ram usage:        1 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    1
  6909 ;; This function calls:
  6910 ;;		_spiwrite
  6911 ;; This function is called by:
  6912 ;;		_BlackTab_Init
  6913 ;;		_setAddrWindow
  6914 ;;		_Rcmd1
  6915 ;;		_Rcmd2red
  6916 ;;		_Rcmd3
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           
  6921                           ;psect for function _write_command
  6922  029D                     _write_command:	
  6923                           
  6924                           ;incstack = 0
  6925                           ; Regs used in _write_command: [wreg+status,2+status,0+pclath+cstack]
  6926                           ;write_command@cmd stored from wreg
  6927  029D  00F3               	movwf	write_command@cmd
  6928                           
  6929                           ;main.c: 372:     do { LATAbits.LATA4 = 0; } while(0);
  6930  029E  0022               	movlb	2	; select bank2
  6931  029F  120C               	bcf	12,4	;volatile
  6932                           
  6933                           ;main.c: 373:     do { LATAbits.LATA1 = 0; } while(0);
  6934  02A0  108C               	bcf	12,1	;volatile
  6935                           
  6936                           ;main.c: 375:     spiwrite(cmd);
  6937  02A1  0873               	movf	write_command@cmd,w
  6938  02A2  3183  234C         	fcall	_spiwrite
  6939  02A4  0022               	movlb	2	; select bank2
  6940  02A5  148C               	bsf	12,1	;volatile
  6941  02A6  0008               	return
  6942  02A7                     __end_of_write_command:	
  6943                           
  6944                           	psect	text33
  6945  034C                     __ptext33:	
  6946 ;; *************** function _spiwrite *****************
  6947 ;; Defined at:
  6948 ;;		line 389 in file "main.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  spidata         1    wreg     unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  spidata         1    0[COMMON] unsigned char 
  6953 ;;  ss              2    1[COMMON] int 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;Total ram usage:        3 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_fillRect
  6973 ;;		_write_command
  6974 ;;		_write_data
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _spiwrite
  6980  034C                     _spiwrite:	
  6981                           
  6982                           ;incstack = 0
  6983                           ; Regs used in _spiwrite: [wreg+status,2+status,0]
  6984                           ;spiwrite@spidata stored from wreg
  6985  034C  00F0               	movwf	spiwrite@spidata
  6986                           
  6987                           ;main.c: 390:     int ss;;main.c: 391:     for(ss = 0x80; ss; ss >>= 1) {
  6988  034D  3080               	movlw	128
  6989  034E  00F1               	movwf	spiwrite@ss
  6990  034F  3000               	movlw	0
  6991  0350  00F2               	movwf	spiwrite@ss+1
  6992  0351                     l1619:	
  6993  0351  0871               	movf	spiwrite@ss,w
  6994  0352  0472               	iorwf	spiwrite@ss+1,w
  6995  0353  1903               	btfsc	3,2
  6996  0354  0008               	return
  6997                           
  6998                           ;main.c: 392:    if (spidata & ss) do { LATBbits.LATB7 = 1; } while(0);
  6999  0355  0870               	movf	spiwrite@spidata,w
  7000  0356  0571               	andwf	spiwrite@ss,w
  7001  0357  1903               	btfsc	3,2
  7002  0358  2B5C               	goto	l225
  7003  0359  0022               	movlb	2	; select bank2
  7004  035A  178D               	bsf	13,7	;volatile
  7005  035B  2B5E               	goto	l227
  7006  035C                     l225:	
  7007  035C  0022               	movlb	2	; select bank2
  7008  035D  138D               	bcf	13,7	;volatile
  7009  035E                     l227:	
  7010                           ;main.c: 394:    do { LATCbits.LATC7 = 1; } while(0);
  7011                           
  7012  035E  178E               	bsf	14,7	;volatile
  7013                           
  7014                           ;main.c: 395:    do { LATCbits.LATC7 = 0; } while(0);}
  7015  035F  138E               	bcf	14,7	;volatile
  7016  0360  3001               	movlw	1
  7017  0361                     u535:	
  7018  0361  37F2               	asrf	spiwrite@ss+1,f
  7019  0362  0CF1               	rrf	spiwrite@ss,f
  7020  0363  0B89               	decfsz	9,f
  7021  0364  2B61               	goto	u535
  7022  0365  2B51               	goto	l1619
  7023  0366                     __end_of_spiwrite:	
  7024  007E                     btemp	set	126	;btemp
  7025  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    475
    Data        5
    BSS         12
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    txt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _fillScreen->_fillRect
    _drawChar->_drawPixel
    _fillRect->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _PWM->_ADC_GetConversion
    _BlackTab_Init->_Rcmd1
    _BlackTab_Init->_Rcmd3
    _Rcmd3->_write_command
    _Rcmd3->_write_data
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_write_command
    _Rcmd1->_write_data
    _write_data->_spiwrite
    _write_command->_spiwrite

Critical Paths under _main in BANK0

    _main->_SPI
    _SPI->_drawtext
    _fillScreen->_fillRect
    _drawtext->_drawChar
    _drawChar->_fillRect

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11533
                                _SPI
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI                                                  1     1      0   11533
                                             50 BANK0      1     1      0
                      _BlackTab_Init
                                _PWM
                           _drawtext
                         _fillScreen
                        _setTextWrap
 ---------------------------------------------------------------------------------
 (2) _setTextWrap                                          2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           4     2      2    2338
                                              8 BANK0      4     2      2
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            22    14      8    8189
                                             28 BANK0     22    14      8
                             ___bmul
                             ___wmul
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     166
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            20    13      7    6053
                                              8 BANK0     20    13      7
                             ___bmul
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (3) _fillRect                                            13     8      5    2240
                                              8 COMMON     5     0      5
                                              0 BANK0      8     8      0
                             ___bmul (ARG)
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            7     4      3    1294
                                              8 COMMON     6     3      3
                                              0 BANK0      1     1      0
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        4     1      3     724
                                              4 COMMON     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     548
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _PWM                                                  2     2      0     188
                                              4 COMMON     2     2      0
                  _ADC_GetConversion
                 _PWM1_LoadDutyValue
              _PWM_Output_D7_Disable
               _PWM_Output_D7_Enable
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_Output_D7_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_Output_D7_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_LoadDutyValue                                   2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _BlackTab_Init                                        0     0      0     720
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                1     1      0     180
                                              4 COMMON     1     1      0
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     180
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                1     1      0     180
                                              4 COMMON     1     1      0
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      90
                                              3 COMMON     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      90
                                              3 COMMON     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI
     _BlackTab_Init
       _Rcmd1
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _PWM
       _ADC_GetConversion
       _PWM1_LoadDutyValue
       _PWM_Output_D7_Disable
       _PWM_Output_D7_Enable
       _TMR2_StartTimer
     _drawtext
       ___bmul
       ___wmul
       _drawChar
         ___bmul
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           ___bmul (ARG)
           _setAddrWindow (ARG)
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite (ARG)
       _strlen
     _fillScreen
       _fillRect
         ___bmul (ARG)
         _setAddrWindow (ARG)
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite (ARG)
     _setTextWrap
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      52      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      52      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 01 14:20:15 2019

                 ___bmul@product 0072                      __CFG_CP$OFF 0000              ___wmul@multiplicand 0072  
                    __CFG_LVP$ON 0000                              l225 035C                              l227 035E  
                            l244 05BA                              l184 04A3                              l249 0640  
                            l194 0502                              l267 0752                              l369 032A  
                            l629 036E                              _PR2 001E                     __CFG_CPD$OFF 0000  
                            u535 0361                              u725 02C3                              u655 036F  
                            u575 049B                              u665 0374                              u585 04B8  
                            u825 0786                              u905 05E7                              u845 07D0  
                            u855 07E0                              u945 05C0                              u957 0592  
                            u885 046D                              _SPI 03CD                              u967 059C  
                            u977 064C                              u987 0658                              _PWM 044F  
                            _txt 005F          __size_of_PMD_Initialize 0008                  _TMR2_Initialize 0295  
                            wreg 0009                             ?_SPI 0070                             ?_PWM 0070  
                           l1641 04C0                             l1619 0351                             l1717 032F  
                           l1727 02C7                             l1657 04E9                             l1833 0309  
                           l1907 0461                             l1659 04ED                             l1851 070F  
                           l1835 0315                             l1693 02CE                             l1669 04FD  
                           l1853 0713                             l1941 060B                             l1679 0368  
                           l1863 072D                             l1847 0707                             l1697 02D4  
                           l1937 0601                             l1883 079A                             l1875 0767  
                           l1859 0715                             l1885 07C0                             l1877 0780  
                           l1959 0279                             STR_1 09DB          __end_of_PWM1_Initialize 02BB  
                           _LATA 010C                             _LATB 010D                             _LATC 010E  
                           _PMD0 0911                             _PMD1 0912                             _PMD2 0913  
                           _PMD3 0914                             _PMD4 0915                             _PMD5 0916  
                           _TMR2 001D                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                             _Font 0800                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 0276                             fsr0h 0005  
                           indf0 0000                             fsr0l 0004                             btemp 007E  
                           _wrap 0061                    __CFG_BOREN$ON 0000                    __CFG_BORV$LOW 0000  
                           start 0002                   write_data@data 0073                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                            ??_SPI 0052  
                          ??_PWM 0074   __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 028D  
                          _ADACT 009F                            ?_main 0070                            _T2CON 001F  
                 __CFG_DEBUG$OFF 0000                            _OSCEN 091D                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _Font2 08FF  
                          _Rcmd1 0645                            _Rcmd3 0505                   _WDT_Initialize 0261  
                          _event 0063                            _pause 0055                            _state 0056  
                          status 0003                            wtemp0 007E                  _TMR2_StartTimer 025A  
       __size_of_SPI1_Initialize 0006           ??_PWM_Output_D7_Enable 0070                  __initialization 07E3  
                   __end_of_Font 08FF                     __end_of_main 027D                 __end_of_Rcmd2red 03CD  
        __end_of_TMR2_Initialize 029D                           ??_main 007E           __end_of_WDT_Initialize 0265  
                         ?_Rcmd1 0070                           ?_Rcmd3 0070                           _ADCON0 009D  
                         _ADCON1 009E                           _ADRESH 009C                           _ADRESL 009B  
                         _CCPR1H 0292                           _CCPR1L 0291                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E               __CFG_RSTOSC$HFINT1 0000  
                   ?_setTextWrap 0070                 ?_PWM1_Initialize 0070                           _RC5PPS 0EA5  
                         _RB7PPS 0E9F                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                           _RC7PPS 0EA7                           _OSCFRQ 091F  
                         _WDTCON 0097                   __CFG_PWRTE$OFF 0000                 __end_of_fillRect 0505  
               __end_of_drawChar 07E3                           ___bmul 02CC           __size_of_BlackTab_Init 0016  
                         ___wmul 0366                 __end_of_drawtext 0645                   __CFG_STVREN$ON 0000  
                         _button 0057                     drawtext@size 0043                           _strlen 0305  
                 _PMD_Initialize 028D                  ?_WDT_Initialize 0070         ADC_GetConversion@channel 0073  
        __end_of_TMR2_StartTimer 025D                 __end_of_spiwrite 0366                _SYSTEM_Initialize 0334  
        __end_of__initialization 07FD          ??_PWM_Output_D7_Disable 0070               ?_SYSTEM_Initialize 0070  
                     _adcResult2 0053      PWM1_LoadDutyValue@dutyValue 0070              ___bmul@multiplicand 0070  
                  __end_of_Font2 09DB                    __end_of_Rcmd1 06F8                    __end_of_Rcmd3 05A2  
                 __pcstackCOMMON 0070                     __pidataBANK0 0265              ??_SYSTEM_Initialize 0070  
              ??_SPI1_Initialize 0070               _PWM1_LoadDutyValue 02BB                 ?_TMR2_Initialize 0070  
         __end_of_PMD_Initialize 0295                   drawPixel@color 0079           __size_of_write_command 000A  
            ?_PWM1_LoadDutyValue 0070                          ??_Rcmd1 0074                          ??_Rcmd3 0074  
             __size_of_drawPixel 0024                    _BlackTab_Init 02EF        __end_of_SYSTEM_Initialize 034C  
                     __pbssBANK0 0053                        ?_Rcmd2red 0070                  spiwrite@spidata 0070  
           ??_PWM1_LoadDutyValue 0072                       __pmaintext 0276                          ?___bmul 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000           __size_of_setAddrWindow 002D  
                        _CCP1CON 0293                  ?_PMD_Initialize 0070          __size_of_ADC_Initialize 0008  
                        ?_strlen 0070                       _fillScreen 02DD                          _OSCCON1 0919  
                        _OSCCON3 091B                   ?_BlackTab_Init 0070                          _OSCTUNE 091E  
                        _SSP1ADD 0212                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E                          _SSP1BUF 0211                        ?_fillRect 0078  
                      ?_drawChar 0028                 ?_TMR2_StartTimer 0070                        ?_drawtext 003C  
                     ??_Rcmd2red 0074             __size_of_setTextWrap 0006                    _write_command 029D  
               write_command@cmd 0073                __end_of_drawPixel 03A5                  __size_of___bmul 0011  
                __size_of___wmul 001B                        ?_spiwrite 0070                          __ptext1 0334  
                        __ptext2 0261                          __ptext3 0295                          __ptext4 0270  
                        __ptext5 02B1                          __ptext6 028D                          __ptext7 03F6  
                        __ptext8 0285                          __ptext9 027D                  __size_of_strlen 0017  
                   __size_of_SPI 0029                     __size_of_PWM 002E            _OSCILLATOR_Initialize 0285  
                      _T2CONbits 001F         ??_PIN_MANAGER_Initialize 0070                    drawtext@_text 003D  
                  drawtext@color 003F                       ??_fillRect 0020                       ??_drawChar 002F  
     __size_of_SYSTEM_Initialize 0018                          _switch1 0058                    _setAddrWindow 0422  
           end_of_initialization 07FD                       ??_drawtext 0044                   ?_write_command 0070  
  __size_of_PWM_Output_D7_Enable 0004                       ??_spiwrite 0070                          strlen@a 0073  
                        strlen@s 0070                 ??_WDT_Initialize 0070                 drawtext@cursor_x 0051  
               drawtext@cursor_y 0050                      ?_fillScreen 0028                  ??_BlackTab_Init 0075  
                     drawChar@bg 002C                   ?_setAddrWindow 0074                 __CFG_FEXTOSC$OFF 0000  
               drawtext@textsize 004B                       drawPixel@x 0020                       drawPixel@y 0078  
                    _CCP1CONbits 0293                  _SPI1_Initialize 0270   __size_of_PWM_Output_D7_Disable 0003  
  __end_of_PWM_Output_D7_Disable 025A         __size_of_PWM1_Initialize 000A                   __end_of___bmul 02DD  
                 __end_of___wmul 0381                       _write_data 02A7                   _ADC_Initialize 027D  
         ?_OSCILLATOR_Initialize 0070                       drawtext@bg 0041                   __end_of_strlen 031C  
            start_initialization 07E3                      __end_of_SPI 03F6                      __end_of_PWM 047D  
__size_of_PIN_MANAGER_Initialize 002C                  ??_write_command 0073                __size_of_Rcmd2red 0028  
            __size_of_fillScreen 0012                 __CFG_LPBOREN$OFF 0000                         ??___bmul 0071  
               ??_PMD_Initialize 0070                         ??___wmul 0074                      _CCPTMRSbits 029F  
         __end_of_ADC_Initialize 0285                      __pdataBANK0 005F                  setAddrWindow@x0 0077  
                setAddrWindow@x1 0075                  setAddrWindow@y0 0074                  setAddrWindow@y1 0076  
                       ??_strlen 0072                        ___latbits 0002                        _adcResult 005C  
                ??_setAddrWindow 0077                    __pcstackBANK0 0020         __size_of_TMR2_Initialize 0008  
        __end_of_SPI1_Initialize 0276                __size_of_fillRect 0088                __size_of_drawChar 00EB  
              __size_of_drawtext 00A3      __size_of_PWM1_LoadDutyValue 0011           _PIN_MANAGER_Initialize 03F6  
                ?_ADC_Initialize 0070                      ?_write_data 0070                ??_PWM1_Initialize 0070  
                      _drawPixel 0381                __size_of_spiwrite 001A                   __size_of_Rcmd1 00B3  
                 __size_of_Rcmd3 009D                 __CFG_WDTE$SWDTEN 0000                    ??_setTextWrap 0072  
                 ___wmul@product 0074                         _LATAbits 010C                         _LATBbits 010D  
                       _LATCbits 010E         __size_of_TMR2_StartTimer 0003                         _PIR1bits 0011  
                       _SSP1CON1 0215                         _SSP1STAT 0214                        fillRect@h 007A  
                      fillRect@w 0079                        fillRect@x 0027                        fillRect@y 0078  
                      drawChar@c 0029                        drawChar@i 003A                        drawChar@j 0038  
                      drawChar@x 0037                        drawChar@y 0028                       ?_drawPixel 0078  
                      _rotateVal 005A                       _ADCON0bits 009D                ___wmul@multiplier 0070  
                   ??_fillScreen 002A     __end_of_PWM_Output_D7_Enable 0261                 ?_SPI1_Initialize 0070  
                      drawtext@i 004E                        drawtext@x 004D                        drawtext@y 003C  
              ??_TMR2_Initialize 0070                         _Rcmd2red 03A5              __size_of_write_data 000A  
                   setTextWrap@w 0070              __end_of_setTextWrap 0270               __end_of_fillScreen 02EF  
              _ADC_GetConversion 031C          ??_OSCILLATOR_Initialize 0070               ?_ADC_GetConversion 0070  
                     spiwrite@ss 0071              ??_ADC_GetConversion 0072                         _delayVal 0059  
          __end_of_BlackTab_Init 0305                         __ptext10 03CD                         __ptext11 026A  
                       __ptext20 02CC                         __ptext12 02DD                         __ptext21 044F  
                       __ptext13 05A2                         __ptext30 0645                         __ptext22 025A  
                       __ptext14 0305                         __ptext31 02A7                         __ptext23 025D  
                       __ptext15 06F8                         __ptext32 029D                         __ptext24 0257  
                       __ptext16 047D                         __ptext33 034C                         __ptext25 02BB  
                       __ptext17 0381                         __ptext26 031C                         __ptext18 0422  
                       __ptext27 02EF                         __ptext19 0366                         __ptext28 0505  
                       __ptext29 03A5                     _SSP1CON1bits 0215                         _fillRect 047D  
                       _drawChar 06F8                         _colstart 005E                         _drawtext 05A2  
                  __size_of_main 0007        __end_of_ADC_GetConversion 0334            _PWM_Output_D7_Disable 0257  
              ??_TMR2_StartTimer 0070                         _spiwrite 034C                     _SSP1STATbits 0214  
                    ??_drawPixel 007B                         _rowstart 005D                      _secondCount 005B  
        __size_of_WDT_Initialize 0004                      _setTextWrap 026A            __end_of_write_command 02A7  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                  fillScreen@color 0028  
                _PWM1_Initialize 02B1                 ??_ADC_Initialize 0070             _PWM_Output_D7_Enable 025D  
                   ??_write_data 0073                    fillRect@color 007B                    __pstringtext1 0800  
                  __pstringtext2 08FF                    __pstringtext3 0000                       _SSP1DATPPS 0E21  
                     _SSP1CLKPPS 0E20            __end_of_setAddrWindow 044F                     fillRect@high 0025  
 __end_of_PIN_MANAGER_Initialize 0422                    drawChar@color 002A       __end_of_PWM1_LoadDutyValue 02CC  
                    fillRect@low 0026               __end_of_write_data 02B1                     drawChar@line 0036  
                   drawChar@size 002E       __size_of_ADC_GetConversion 0018            ?_PWM_Output_D7_Enable 0070  
         ?_PWM_Output_D7_Disable 0070  
