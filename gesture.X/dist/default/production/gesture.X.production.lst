

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 01:27:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.05
    79                           ; Generated 20/12/2018 GMT
    80                           ; 
    81                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F18345 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0097                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020D                     	;# 
   204  020E                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0214                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  0219                     	;# 
   222  021A                     	;# 
   223  021B                     	;# 
   224  021C                     	;# 
   225  021D                     	;# 
   226  021D                     	;# 
   227  021E                     	;# 
   228  021F                     	;# 
   229  028C                     	;# 
   230  028D                     	;# 
   231  028E                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0295                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0297                     	;# 
   241  0298                     	;# 
   242  029F                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  0311                     	;# 
   247  0311                     	;# 
   248  0312                     	;# 
   249  0313                     	;# 
   250  0314                     	;# 
   251  0315                     	;# 
   252  0315                     	;# 
   253  0316                     	;# 
   254  0317                     	;# 
   255  0318                     	;# 
   256  038C                     	;# 
   257  038D                     	;# 
   258  038E                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  0397                     	;# 
   266  0398                     	;# 
   267  0399                     	;# 
   268  039A                     	;# 
   269  039C                     	;# 
   270  039D                     	;# 
   271  039E                     	;# 
   272  039F                     	;# 
   273  0411                     	;# 
   274  0411                     	;# 
   275  0412                     	;# 
   276  0413                     	;# 
   277  0414                     	;# 
   278  0415                     	;# 
   279  0416                     	;# 
   280  0417                     	;# 
   281  0418                     	;# 
   282  0418                     	;# 
   283  0419                     	;# 
   284  041A                     	;# 
   285  041B                     	;# 
   286  041C                     	;# 
   287  041D                     	;# 
   288  041E                     	;# 
   289  041F                     	;# 
   290  0498                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049B                     	;# 
   296  049C                     	;# 
   297  049D                     	;# 
   298  049E                     	;# 
   299  049F                     	;# 
   300  0617                     	;# 
   301  0618                     	;# 
   302  0619                     	;# 
   303  0619                     	;# 
   304  061A                     	;# 
   305  061B                     	;# 
   306  061C                     	;# 
   307  061C                     	;# 
   308  061F                     	;# 
   309  0691                     	;# 
   310  0692                     	;# 
   311  0693                     	;# 
   312  0694                     	;# 
   313  0695                     	;# 
   314  0696                     	;# 
   315  0697                     	;# 
   316  0698                     	;# 
   317  0699                     	;# 
   318  0711                     	;# 
   319  0712                     	;# 
   320  0713                     	;# 
   321  0714                     	;# 
   322  0715                     	;# 
   323  0716                     	;# 
   324  0717                     	;# 
   325  0718                     	;# 
   326  0719                     	;# 
   327  0891                     	;# 
   328  0891                     	;# 
   329  0891                     	;# 
   330  0891                     	;# 
   331  0891                     	;# 
   332  0891                     	;# 
   333  0892                     	;# 
   334  0892                     	;# 
   335  0892                     	;# 
   336  0893                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0893                     	;# 
   340  0893                     	;# 
   341  0893                     	;# 
   342  0894                     	;# 
   343  0894                     	;# 
   344  0894                     	;# 
   345  0895                     	;# 
   346  0895                     	;# 
   347  0895                     	;# 
   348  0896                     	;# 
   349  0896                     	;# 
   350  0896                     	;# 
   351  089B                     	;# 
   352  0911                     	;# 
   353  0912                     	;# 
   354  0913                     	;# 
   355  0914                     	;# 
   356  0915                     	;# 
   357  0916                     	;# 
   358  0918                     	;# 
   359  0919                     	;# 
   360  091A                     	;# 
   361  091B                     	;# 
   362  091C                     	;# 
   363  091D                     	;# 
   364  091E                     	;# 
   365  091F                     	;# 
   366  0E0F                     	;# 
   367  0E10                     	;# 
   368  0E11                     	;# 
   369  0E12                     	;# 
   370  0E13                     	;# 
   371  0E14                     	;# 
   372  0E15                     	;# 
   373  0E16                     	;# 
   374  0E17                     	;# 
   375  0E18                     	;# 
   376  0E19                     	;# 
   377  0E1A                     	;# 
   378  0E1B                     	;# 
   379  0E1C                     	;# 
   380  0E1D                     	;# 
   381  0E1E                     	;# 
   382  0E1F                     	;# 
   383  0E20                     	;# 
   384  0E21                     	;# 
   385  0E22                     	;# 
   386  0E24                     	;# 
   387  0E25                     	;# 
   388  0E28                     	;# 
   389  0E29                     	;# 
   390  0E2A                     	;# 
   391  0E2B                     	;# 
   392  0E2C                     	;# 
   393  0E2D                     	;# 
   394  0E2E                     	;# 
   395  0E2F                     	;# 
   396  0E90                     	;# 
   397  0E91                     	;# 
   398  0E92                     	;# 
   399  0E94                     	;# 
   400  0E95                     	;# 
   401  0E9C                     	;# 
   402  0E9D                     	;# 
   403  0E9E                     	;# 
   404  0E9F                     	;# 
   405  0EA0                     	;# 
   406  0EA1                     	;# 
   407  0EA2                     	;# 
   408  0EA3                     	;# 
   409  0EA4                     	;# 
   410  0EA5                     	;# 
   411  0EA6                     	;# 
   412  0EA7                     	;# 
   413  0F0F                     	;# 
   414  0F10                     	;# 
   415  0F11                     	;# 
   416  0F12                     	;# 
   417  0F13                     	;# 
   418  0F14                     	;# 
   419  0F15                     	;# 
   420  0F16                     	;# 
   421  0F17                     	;# 
   422  0F18                     	;# 
   423  0F19                     	;# 
   424  0F1A                     	;# 
   425  0F1B                     	;# 
   426  0F1C                     	;# 
   427  0F1D                     	;# 
   428  0F1E                     	;# 
   429  0F1F                     	;# 
   430  0F20                     	;# 
   431  0F21                     	;# 
   432  0F22                     	;# 
   433  0F23                     	;# 
   434  0F24                     	;# 
   435  0F25                     	;# 
   436  0F26                     	;# 
   437  0F27                     	;# 
   438  0F28                     	;# 
   439  0F29                     	;# 
   440  0F2A                     	;# 
   441  0F2B                     	;# 
   442  0F2C                     	;# 
   443  0F2D                     	;# 
   444  0F2E                     	;# 
   445  0F2F                     	;# 
   446  0F30                     	;# 
   447  0F31                     	;# 
   448  0F32                     	;# 
   449  0F33                     	;# 
   450  0F34                     	;# 
   451  0F35                     	;# 
   452  0F36                     	;# 
   453  0F37                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  008C                     	;# 
   500  008D                     	;# 
   501  008E                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0097                     	;# 
   508  009B                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  0111                     	;# 
   518  0112                     	;# 
   519  0113                     	;# 
   520  0114                     	;# 
   521  0115                     	;# 
   522  0116                     	;# 
   523  0117                     	;# 
   524  0118                     	;# 
   525  0119                     	;# 
   526  018C                     	;# 
   527  018D                     	;# 
   528  018E                     	;# 
   529  0197                     	;# 
   530  0199                     	;# 
   531  0199                     	;# 
   532  0199                     	;# 
   533  019A                     	;# 
   534  019A                     	;# 
   535  019A                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019C                     	;# 
   544  019D                     	;# 
   545  019D                     	;# 
   546  019D                     	;# 
   547  019E                     	;# 
   548  019E                     	;# 
   549  019E                     	;# 
   550  019F                     	;# 
   551  019F                     	;# 
   552  019F                     	;# 
   553  019F                     	;# 
   554  019F                     	;# 
   555  020C                     	;# 
   556  020D                     	;# 
   557  020E                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  0219                     	;# 
   575  021A                     	;# 
   576  021B                     	;# 
   577  021C                     	;# 
   578  021D                     	;# 
   579  021D                     	;# 
   580  021E                     	;# 
   581  021F                     	;# 
   582  028C                     	;# 
   583  028D                     	;# 
   584  028E                     	;# 
   585  0291                     	;# 
   586  0291                     	;# 
   587  0292                     	;# 
   588  0293                     	;# 
   589  0294                     	;# 
   590  0295                     	;# 
   591  0295                     	;# 
   592  0296                     	;# 
   593  0297                     	;# 
   594  0298                     	;# 
   595  029F                     	;# 
   596  030C                     	;# 
   597  030D                     	;# 
   598  030E                     	;# 
   599  0311                     	;# 
   600  0311                     	;# 
   601  0312                     	;# 
   602  0313                     	;# 
   603  0314                     	;# 
   604  0315                     	;# 
   605  0315                     	;# 
   606  0316                     	;# 
   607  0317                     	;# 
   608  0318                     	;# 
   609  038C                     	;# 
   610  038D                     	;# 
   611  038E                     	;# 
   612  0391                     	;# 
   613  0392                     	;# 
   614  0393                     	;# 
   615  0394                     	;# 
   616  0395                     	;# 
   617  0396                     	;# 
   618  0397                     	;# 
   619  0398                     	;# 
   620  0399                     	;# 
   621  039A                     	;# 
   622  039C                     	;# 
   623  039D                     	;# 
   624  039E                     	;# 
   625  039F                     	;# 
   626  0411                     	;# 
   627  0411                     	;# 
   628  0412                     	;# 
   629  0413                     	;# 
   630  0414                     	;# 
   631  0415                     	;# 
   632  0416                     	;# 
   633  0417                     	;# 
   634  0418                     	;# 
   635  0418                     	;# 
   636  0419                     	;# 
   637  041A                     	;# 
   638  041B                     	;# 
   639  041C                     	;# 
   640  041D                     	;# 
   641  041E                     	;# 
   642  041F                     	;# 
   643  0498                     	;# 
   644  0498                     	;# 
   645  0499                     	;# 
   646  049A                     	;# 
   647  049B                     	;# 
   648  049B                     	;# 
   649  049C                     	;# 
   650  049D                     	;# 
   651  049E                     	;# 
   652  049F                     	;# 
   653  0617                     	;# 
   654  0618                     	;# 
   655  0619                     	;# 
   656  0619                     	;# 
   657  061A                     	;# 
   658  061B                     	;# 
   659  061C                     	;# 
   660  061C                     	;# 
   661  061F                     	;# 
   662  0691                     	;# 
   663  0692                     	;# 
   664  0693                     	;# 
   665  0694                     	;# 
   666  0695                     	;# 
   667  0696                     	;# 
   668  0697                     	;# 
   669  0698                     	;# 
   670  0699                     	;# 
   671  0711                     	;# 
   672  0712                     	;# 
   673  0713                     	;# 
   674  0714                     	;# 
   675  0715                     	;# 
   676  0716                     	;# 
   677  0717                     	;# 
   678  0718                     	;# 
   679  0719                     	;# 
   680  0891                     	;# 
   681  0891                     	;# 
   682  0891                     	;# 
   683  0891                     	;# 
   684  0891                     	;# 
   685  0891                     	;# 
   686  0892                     	;# 
   687  0892                     	;# 
   688  0892                     	;# 
   689  0893                     	;# 
   690  0893                     	;# 
   691  0893                     	;# 
   692  0893                     	;# 
   693  0893                     	;# 
   694  0893                     	;# 
   695  0894                     	;# 
   696  0894                     	;# 
   697  0894                     	;# 
   698  0895                     	;# 
   699  0895                     	;# 
   700  0895                     	;# 
   701  0896                     	;# 
   702  0896                     	;# 
   703  0896                     	;# 
   704  089B                     	;# 
   705  0911                     	;# 
   706  0912                     	;# 
   707  0913                     	;# 
   708  0914                     	;# 
   709  0915                     	;# 
   710  0916                     	;# 
   711  0918                     	;# 
   712  0919                     	;# 
   713  091A                     	;# 
   714  091B                     	;# 
   715  091C                     	;# 
   716  091D                     	;# 
   717  091E                     	;# 
   718  091F                     	;# 
   719  0E0F                     	;# 
   720  0E10                     	;# 
   721  0E11                     	;# 
   722  0E12                     	;# 
   723  0E13                     	;# 
   724  0E14                     	;# 
   725  0E15                     	;# 
   726  0E16                     	;# 
   727  0E17                     	;# 
   728  0E18                     	;# 
   729  0E19                     	;# 
   730  0E1A                     	;# 
   731  0E1B                     	;# 
   732  0E1C                     	;# 
   733  0E1D                     	;# 
   734  0E1E                     	;# 
   735  0E1F                     	;# 
   736  0E20                     	;# 
   737  0E21                     	;# 
   738  0E22                     	;# 
   739  0E24                     	;# 
   740  0E25                     	;# 
   741  0E28                     	;# 
   742  0E29                     	;# 
   743  0E2A                     	;# 
   744  0E2B                     	;# 
   745  0E2C                     	;# 
   746  0E2D                     	;# 
   747  0E2E                     	;# 
   748  0E2F                     	;# 
   749  0E90                     	;# 
   750  0E91                     	;# 
   751  0E92                     	;# 
   752  0E94                     	;# 
   753  0E95                     	;# 
   754  0E9C                     	;# 
   755  0E9D                     	;# 
   756  0E9E                     	;# 
   757  0E9F                     	;# 
   758  0EA0                     	;# 
   759  0EA1                     	;# 
   760  0EA2                     	;# 
   761  0EA3                     	;# 
   762  0EA4                     	;# 
   763  0EA5                     	;# 
   764  0EA6                     	;# 
   765  0EA7                     	;# 
   766  0F0F                     	;# 
   767  0F10                     	;# 
   768  0F11                     	;# 
   769  0F12                     	;# 
   770  0F13                     	;# 
   771  0F14                     	;# 
   772  0F15                     	;# 
   773  0F16                     	;# 
   774  0F17                     	;# 
   775  0F18                     	;# 
   776  0F19                     	;# 
   777  0F1A                     	;# 
   778  0F1B                     	;# 
   779  0F1C                     	;# 
   780  0F1D                     	;# 
   781  0F1E                     	;# 
   782  0F1F                     	;# 
   783  0F20                     	;# 
   784  0F21                     	;# 
   785  0F22                     	;# 
   786  0F23                     	;# 
   787  0F24                     	;# 
   788  0F25                     	;# 
   789  0F26                     	;# 
   790  0F27                     	;# 
   791  0F28                     	;# 
   792  0F29                     	;# 
   793  0F2A                     	;# 
   794  0F2B                     	;# 
   795  0F2C                     	;# 
   796  0F2D                     	;# 
   797  0F2E                     	;# 
   798  0F2F                     	;# 
   799  0F30                     	;# 
   800  0F31                     	;# 
   801  0F32                     	;# 
   802  0F33                     	;# 
   803  0F34                     	;# 
   804  0F35                     	;# 
   805  0F36                     	;# 
   806  0F37                     	;# 
   807  0FE4                     	;# 
   808  0FE5                     	;# 
   809  0FE6                     	;# 
   810  0FE7                     	;# 
   811  0FE8                     	;# 
   812  0FE9                     	;# 
   813  0FEA                     	;# 
   814  0FEB                     	;# 
   815  0FED                     	;# 
   816  0FEE                     	;# 
   817  0FEF                     	;# 
   818  0000                     	;# 
   819  0001                     	;# 
   820  0002                     	;# 
   821  0003                     	;# 
   822  0004                     	;# 
   823  0005                     	;# 
   824  0006                     	;# 
   825  0007                     	;# 
   826  0008                     	;# 
   827  0009                     	;# 
   828  000A                     	;# 
   829  000B                     	;# 
   830  000C                     	;# 
   831  000D                     	;# 
   832  000E                     	;# 
   833  0010                     	;# 
   834  0011                     	;# 
   835  0012                     	;# 
   836  0013                     	;# 
   837  0014                     	;# 
   838  0015                     	;# 
   839  0015                     	;# 
   840  0016                     	;# 
   841  0016                     	;# 
   842  0017                     	;# 
   843  0018                     	;# 
   844  0019                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  001D                     	;# 
   850  001E                     	;# 
   851  001F                     	;# 
   852  008C                     	;# 
   853  008D                     	;# 
   854  008E                     	;# 
   855  0090                     	;# 
   856  0091                     	;# 
   857  0092                     	;# 
   858  0093                     	;# 
   859  0094                     	;# 
   860  0097                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  0111                     	;# 
   871  0112                     	;# 
   872  0113                     	;# 
   873  0114                     	;# 
   874  0115                     	;# 
   875  0116                     	;# 
   876  0117                     	;# 
   877  0118                     	;# 
   878  0119                     	;# 
   879  018C                     	;# 
   880  018D                     	;# 
   881  018E                     	;# 
   882  0197                     	;# 
   883  0199                     	;# 
   884  0199                     	;# 
   885  0199                     	;# 
   886  019A                     	;# 
   887  019A                     	;# 
   888  019A                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019C                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019D                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  020C                     	;# 
   909  020D                     	;# 
   910  020E                     	;# 
   911  0211                     	;# 
   912  0211                     	;# 
   913  0212                     	;# 
   914  0212                     	;# 
   915  0213                     	;# 
   916  0213                     	;# 
   917  0214                     	;# 
   918  0214                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0216                     	;# 
   924  0216                     	;# 
   925  0217                     	;# 
   926  0217                     	;# 
   927  0219                     	;# 
   928  021A                     	;# 
   929  021B                     	;# 
   930  021C                     	;# 
   931  021D                     	;# 
   932  021D                     	;# 
   933  021E                     	;# 
   934  021F                     	;# 
   935  028C                     	;# 
   936  028D                     	;# 
   937  028E                     	;# 
   938  0291                     	;# 
   939  0291                     	;# 
   940  0292                     	;# 
   941  0293                     	;# 
   942  0294                     	;# 
   943  0295                     	;# 
   944  0295                     	;# 
   945  0296                     	;# 
   946  0297                     	;# 
   947  0298                     	;# 
   948  029F                     	;# 
   949  030C                     	;# 
   950  030D                     	;# 
   951  030E                     	;# 
   952  0311                     	;# 
   953  0311                     	;# 
   954  0312                     	;# 
   955  0313                     	;# 
   956  0314                     	;# 
   957  0315                     	;# 
   958  0315                     	;# 
   959  0316                     	;# 
   960  0317                     	;# 
   961  0318                     	;# 
   962  038C                     	;# 
   963  038D                     	;# 
   964  038E                     	;# 
   965  0391                     	;# 
   966  0392                     	;# 
   967  0393                     	;# 
   968  0394                     	;# 
   969  0395                     	;# 
   970  0396                     	;# 
   971  0397                     	;# 
   972  0398                     	;# 
   973  0399                     	;# 
   974  039A                     	;# 
   975  039C                     	;# 
   976  039D                     	;# 
   977  039E                     	;# 
   978  039F                     	;# 
   979  0411                     	;# 
   980  0411                     	;# 
   981  0412                     	;# 
   982  0413                     	;# 
   983  0414                     	;# 
   984  0415                     	;# 
   985  0416                     	;# 
   986  0417                     	;# 
   987  0418                     	;# 
   988  0418                     	;# 
   989  0419                     	;# 
   990  041A                     	;# 
   991  041B                     	;# 
   992  041C                     	;# 
   993  041D                     	;# 
   994  041E                     	;# 
   995  041F                     	;# 
   996  0498                     	;# 
   997  0498                     	;# 
   998  0499                     	;# 
   999  049A                     	;# 
  1000  049B                     	;# 
  1001  049B                     	;# 
  1002  049C                     	;# 
  1003  049D                     	;# 
  1004  049E                     	;# 
  1005  049F                     	;# 
  1006  0617                     	;# 
  1007  0618                     	;# 
  1008  0619                     	;# 
  1009  0619                     	;# 
  1010  061A                     	;# 
  1011  061B                     	;# 
  1012  061C                     	;# 
  1013  061C                     	;# 
  1014  061F                     	;# 
  1015  0691                     	;# 
  1016  0692                     	;# 
  1017  0693                     	;# 
  1018  0694                     	;# 
  1019  0695                     	;# 
  1020  0696                     	;# 
  1021  0697                     	;# 
  1022  0698                     	;# 
  1023  0699                     	;# 
  1024  0711                     	;# 
  1025  0712                     	;# 
  1026  0713                     	;# 
  1027  0714                     	;# 
  1028  0715                     	;# 
  1029  0716                     	;# 
  1030  0717                     	;# 
  1031  0718                     	;# 
  1032  0719                     	;# 
  1033  0891                     	;# 
  1034  0891                     	;# 
  1035  0891                     	;# 
  1036  0891                     	;# 
  1037  0891                     	;# 
  1038  0891                     	;# 
  1039  0892                     	;# 
  1040  0892                     	;# 
  1041  0892                     	;# 
  1042  0893                     	;# 
  1043  0893                     	;# 
  1044  0893                     	;# 
  1045  0893                     	;# 
  1046  0893                     	;# 
  1047  0893                     	;# 
  1048  0894                     	;# 
  1049  0894                     	;# 
  1050  0894                     	;# 
  1051  0895                     	;# 
  1052  0895                     	;# 
  1053  0895                     	;# 
  1054  0896                     	;# 
  1055  0896                     	;# 
  1056  0896                     	;# 
  1057  089B                     	;# 
  1058  0911                     	;# 
  1059  0912                     	;# 
  1060  0913                     	;# 
  1061  0914                     	;# 
  1062  0915                     	;# 
  1063  0916                     	;# 
  1064  0918                     	;# 
  1065  0919                     	;# 
  1066  091A                     	;# 
  1067  091B                     	;# 
  1068  091C                     	;# 
  1069  091D                     	;# 
  1070  091E                     	;# 
  1071  091F                     	;# 
  1072  0E0F                     	;# 
  1073  0E10                     	;# 
  1074  0E11                     	;# 
  1075  0E12                     	;# 
  1076  0E13                     	;# 
  1077  0E14                     	;# 
  1078  0E15                     	;# 
  1079  0E16                     	;# 
  1080  0E17                     	;# 
  1081  0E18                     	;# 
  1082  0E19                     	;# 
  1083  0E1A                     	;# 
  1084  0E1B                     	;# 
  1085  0E1C                     	;# 
  1086  0E1D                     	;# 
  1087  0E1E                     	;# 
  1088  0E1F                     	;# 
  1089  0E20                     	;# 
  1090  0E21                     	;# 
  1091  0E22                     	;# 
  1092  0E24                     	;# 
  1093  0E25                     	;# 
  1094  0E28                     	;# 
  1095  0E29                     	;# 
  1096  0E2A                     	;# 
  1097  0E2B                     	;# 
  1098  0E2C                     	;# 
  1099  0E2D                     	;# 
  1100  0E2E                     	;# 
  1101  0E2F                     	;# 
  1102  0E90                     	;# 
  1103  0E91                     	;# 
  1104  0E92                     	;# 
  1105  0E94                     	;# 
  1106  0E95                     	;# 
  1107  0E9C                     	;# 
  1108  0E9D                     	;# 
  1109  0E9E                     	;# 
  1110  0E9F                     	;# 
  1111  0EA0                     	;# 
  1112  0EA1                     	;# 
  1113  0EA2                     	;# 
  1114  0EA3                     	;# 
  1115  0EA4                     	;# 
  1116  0EA5                     	;# 
  1117  0EA6                     	;# 
  1118  0EA7                     	;# 
  1119  0F0F                     	;# 
  1120  0F10                     	;# 
  1121  0F11                     	;# 
  1122  0F12                     	;# 
  1123  0F13                     	;# 
  1124  0F14                     	;# 
  1125  0F15                     	;# 
  1126  0F16                     	;# 
  1127  0F17                     	;# 
  1128  0F18                     	;# 
  1129  0F19                     	;# 
  1130  0F1A                     	;# 
  1131  0F1B                     	;# 
  1132  0F1C                     	;# 
  1133  0F1D                     	;# 
  1134  0F1E                     	;# 
  1135  0F1F                     	;# 
  1136  0F20                     	;# 
  1137  0F21                     	;# 
  1138  0F22                     	;# 
  1139  0F23                     	;# 
  1140  0F24                     	;# 
  1141  0F25                     	;# 
  1142  0F26                     	;# 
  1143  0F27                     	;# 
  1144  0F28                     	;# 
  1145  0F29                     	;# 
  1146  0F2A                     	;# 
  1147  0F2B                     	;# 
  1148  0F2C                     	;# 
  1149  0F2D                     	;# 
  1150  0F2E                     	;# 
  1151  0F2F                     	;# 
  1152  0F30                     	;# 
  1153  0F31                     	;# 
  1154  0F32                     	;# 
  1155  0F33                     	;# 
  1156  0F34                     	;# 
  1157  0F35                     	;# 
  1158  0F36                     	;# 
  1159  0F37                     	;# 
  1160  0FE4                     	;# 
  1161  0FE5                     	;# 
  1162  0FE6                     	;# 
  1163  0FE7                     	;# 
  1164  0FE8                     	;# 
  1165  0FE9                     	;# 
  1166  0FEA                     	;# 
  1167  0FEB                     	;# 
  1168  0FED                     	;# 
  1169  0FEE                     	;# 
  1170  0FEF                     	;# 
  1171  0000                     	;# 
  1172  0001                     	;# 
  1173  0002                     	;# 
  1174  0003                     	;# 
  1175  0004                     	;# 
  1176  0005                     	;# 
  1177  0006                     	;# 
  1178  0007                     	;# 
  1179  0008                     	;# 
  1180  0009                     	;# 
  1181  000A                     	;# 
  1182  000B                     	;# 
  1183  000C                     	;# 
  1184  000D                     	;# 
  1185  000E                     	;# 
  1186  0010                     	;# 
  1187  0011                     	;# 
  1188  0012                     	;# 
  1189  0013                     	;# 
  1190  0014                     	;# 
  1191  0015                     	;# 
  1192  0015                     	;# 
  1193  0016                     	;# 
  1194  0016                     	;# 
  1195  0017                     	;# 
  1196  0018                     	;# 
  1197  0019                     	;# 
  1198  0019                     	;# 
  1199  001A                     	;# 
  1200  001B                     	;# 
  1201  001C                     	;# 
  1202  001D                     	;# 
  1203  001E                     	;# 
  1204  001F                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0093                     	;# 
  1212  0094                     	;# 
  1213  0097                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  009F                     	;# 
  1220  010C                     	;# 
  1221  010D                     	;# 
  1222  010E                     	;# 
  1223  0111                     	;# 
  1224  0112                     	;# 
  1225  0113                     	;# 
  1226  0114                     	;# 
  1227  0115                     	;# 
  1228  0116                     	;# 
  1229  0117                     	;# 
  1230  0118                     	;# 
  1231  0119                     	;# 
  1232  018C                     	;# 
  1233  018D                     	;# 
  1234  018E                     	;# 
  1235  0197                     	;# 
  1236  0199                     	;# 
  1237  0199                     	;# 
  1238  0199                     	;# 
  1239  019A                     	;# 
  1240  019A                     	;# 
  1241  019A                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019B                     	;# 
  1246  019B                     	;# 
  1247  019C                     	;# 
  1248  019C                     	;# 
  1249  019C                     	;# 
  1250  019D                     	;# 
  1251  019D                     	;# 
  1252  019D                     	;# 
  1253  019E                     	;# 
  1254  019E                     	;# 
  1255  019E                     	;# 
  1256  019F                     	;# 
  1257  019F                     	;# 
  1258  019F                     	;# 
  1259  019F                     	;# 
  1260  019F                     	;# 
  1261  020C                     	;# 
  1262  020D                     	;# 
  1263  020E                     	;# 
  1264  0211                     	;# 
  1265  0211                     	;# 
  1266  0212                     	;# 
  1267  0212                     	;# 
  1268  0213                     	;# 
  1269  0213                     	;# 
  1270  0214                     	;# 
  1271  0214                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0216                     	;# 
  1277  0216                     	;# 
  1278  0217                     	;# 
  1279  0217                     	;# 
  1280  0219                     	;# 
  1281  021A                     	;# 
  1282  021B                     	;# 
  1283  021C                     	;# 
  1284  021D                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  028C                     	;# 
  1289  028D                     	;# 
  1290  028E                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0295                     	;# 
  1298  0296                     	;# 
  1299  0297                     	;# 
  1300  0298                     	;# 
  1301  029F                     	;# 
  1302  030C                     	;# 
  1303  030D                     	;# 
  1304  030E                     	;# 
  1305  0311                     	;# 
  1306  0311                     	;# 
  1307  0312                     	;# 
  1308  0313                     	;# 
  1309  0314                     	;# 
  1310  0315                     	;# 
  1311  0315                     	;# 
  1312  0316                     	;# 
  1313  0317                     	;# 
  1314  0318                     	;# 
  1315  038C                     	;# 
  1316  038D                     	;# 
  1317  038E                     	;# 
  1318  0391                     	;# 
  1319  0392                     	;# 
  1320  0393                     	;# 
  1321  0394                     	;# 
  1322  0395                     	;# 
  1323  0396                     	;# 
  1324  0397                     	;# 
  1325  0398                     	;# 
  1326  0399                     	;# 
  1327  039A                     	;# 
  1328  039C                     	;# 
  1329  039D                     	;# 
  1330  039E                     	;# 
  1331  039F                     	;# 
  1332  0411                     	;# 
  1333  0411                     	;# 
  1334  0412                     	;# 
  1335  0413                     	;# 
  1336  0414                     	;# 
  1337  0415                     	;# 
  1338  0416                     	;# 
  1339  0417                     	;# 
  1340  0418                     	;# 
  1341  0418                     	;# 
  1342  0419                     	;# 
  1343  041A                     	;# 
  1344  041B                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  041F                     	;# 
  1349  0498                     	;# 
  1350  0498                     	;# 
  1351  0499                     	;# 
  1352  049A                     	;# 
  1353  049B                     	;# 
  1354  049B                     	;# 
  1355  049C                     	;# 
  1356  049D                     	;# 
  1357  049E                     	;# 
  1358  049F                     	;# 
  1359  0617                     	;# 
  1360  0618                     	;# 
  1361  0619                     	;# 
  1362  0619                     	;# 
  1363  061A                     	;# 
  1364  061B                     	;# 
  1365  061C                     	;# 
  1366  061C                     	;# 
  1367  061F                     	;# 
  1368  0691                     	;# 
  1369  0692                     	;# 
  1370  0693                     	;# 
  1371  0694                     	;# 
  1372  0695                     	;# 
  1373  0696                     	;# 
  1374  0697                     	;# 
  1375  0698                     	;# 
  1376  0699                     	;# 
  1377  0711                     	;# 
  1378  0712                     	;# 
  1379  0713                     	;# 
  1380  0714                     	;# 
  1381  0715                     	;# 
  1382  0716                     	;# 
  1383  0717                     	;# 
  1384  0718                     	;# 
  1385  0719                     	;# 
  1386  0891                     	;# 
  1387  0891                     	;# 
  1388  0891                     	;# 
  1389  0891                     	;# 
  1390  0891                     	;# 
  1391  0891                     	;# 
  1392  0892                     	;# 
  1393  0892                     	;# 
  1394  0892                     	;# 
  1395  0893                     	;# 
  1396  0893                     	;# 
  1397  0893                     	;# 
  1398  0893                     	;# 
  1399  0893                     	;# 
  1400  0893                     	;# 
  1401  0894                     	;# 
  1402  0894                     	;# 
  1403  0894                     	;# 
  1404  0895                     	;# 
  1405  0895                     	;# 
  1406  0895                     	;# 
  1407  0896                     	;# 
  1408  0896                     	;# 
  1409  0896                     	;# 
  1410  089B                     	;# 
  1411  0911                     	;# 
  1412  0912                     	;# 
  1413  0913                     	;# 
  1414  0914                     	;# 
  1415  0915                     	;# 
  1416  0916                     	;# 
  1417  0918                     	;# 
  1418  0919                     	;# 
  1419  091A                     	;# 
  1420  091B                     	;# 
  1421  091C                     	;# 
  1422  091D                     	;# 
  1423  091E                     	;# 
  1424  091F                     	;# 
  1425  0E0F                     	;# 
  1426  0E10                     	;# 
  1427  0E11                     	;# 
  1428  0E12                     	;# 
  1429  0E13                     	;# 
  1430  0E14                     	;# 
  1431  0E15                     	;# 
  1432  0E16                     	;# 
  1433  0E17                     	;# 
  1434  0E18                     	;# 
  1435  0E19                     	;# 
  1436  0E1A                     	;# 
  1437  0E1B                     	;# 
  1438  0E1C                     	;# 
  1439  0E1D                     	;# 
  1440  0E1E                     	;# 
  1441  0E1F                     	;# 
  1442  0E20                     	;# 
  1443  0E21                     	;# 
  1444  0E22                     	;# 
  1445  0E24                     	;# 
  1446  0E25                     	;# 
  1447  0E28                     	;# 
  1448  0E29                     	;# 
  1449  0E2A                     	;# 
  1450  0E2B                     	;# 
  1451  0E2C                     	;# 
  1452  0E2D                     	;# 
  1453  0E2E                     	;# 
  1454  0E2F                     	;# 
  1455  0E90                     	;# 
  1456  0E91                     	;# 
  1457  0E92                     	;# 
  1458  0E94                     	;# 
  1459  0E95                     	;# 
  1460  0E9C                     	;# 
  1461  0E9D                     	;# 
  1462  0E9E                     	;# 
  1463  0E9F                     	;# 
  1464  0EA0                     	;# 
  1465  0EA1                     	;# 
  1466  0EA2                     	;# 
  1467  0EA3                     	;# 
  1468  0EA4                     	;# 
  1469  0EA5                     	;# 
  1470  0EA6                     	;# 
  1471  0EA7                     	;# 
  1472  0F0F                     	;# 
  1473  0F10                     	;# 
  1474  0F11                     	;# 
  1475  0F12                     	;# 
  1476  0F13                     	;# 
  1477  0F14                     	;# 
  1478  0F15                     	;# 
  1479  0F16                     	;# 
  1480  0F17                     	;# 
  1481  0F18                     	;# 
  1482  0F19                     	;# 
  1483  0F1A                     	;# 
  1484  0F1B                     	;# 
  1485  0F1C                     	;# 
  1486  0F1D                     	;# 
  1487  0F1E                     	;# 
  1488  0F1F                     	;# 
  1489  0F20                     	;# 
  1490  0F21                     	;# 
  1491  0F22                     	;# 
  1492  0F23                     	;# 
  1493  0F24                     	;# 
  1494  0F25                     	;# 
  1495  0F26                     	;# 
  1496  0F27                     	;# 
  1497  0F28                     	;# 
  1498  0F29                     	;# 
  1499  0F2A                     	;# 
  1500  0F2B                     	;# 
  1501  0F2C                     	;# 
  1502  0F2D                     	;# 
  1503  0F2E                     	;# 
  1504  0F2F                     	;# 
  1505  0F30                     	;# 
  1506  0F31                     	;# 
  1507  0F32                     	;# 
  1508  0F33                     	;# 
  1509  0F34                     	;# 
  1510  0F35                     	;# 
  1511  0F36                     	;# 
  1512  0F37                     	;# 
  1513  0FE4                     	;# 
  1514  0FE5                     	;# 
  1515  0FE6                     	;# 
  1516  0FE7                     	;# 
  1517  0FE8                     	;# 
  1518  0FE9                     	;# 
  1519  0FEA                     	;# 
  1520  0FEB                     	;# 
  1521  0FED                     	;# 
  1522  0FEE                     	;# 
  1523  0FEF                     	;# 
  1524  0000                     	;# 
  1525  0001                     	;# 
  1526  0002                     	;# 
  1527  0003                     	;# 
  1528  0004                     	;# 
  1529  0005                     	;# 
  1530  0006                     	;# 
  1531  0007                     	;# 
  1532  0008                     	;# 
  1533  0009                     	;# 
  1534  000A                     	;# 
  1535  000B                     	;# 
  1536  000C                     	;# 
  1537  000D                     	;# 
  1538  000E                     	;# 
  1539  0010                     	;# 
  1540  0011                     	;# 
  1541  0012                     	;# 
  1542  0013                     	;# 
  1543  0014                     	;# 
  1544  0015                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  0019                     	;# 
  1552  001A                     	;# 
  1553  001B                     	;# 
  1554  001C                     	;# 
  1555  001D                     	;# 
  1556  001E                     	;# 
  1557  001F                     	;# 
  1558  008C                     	;# 
  1559  008D                     	;# 
  1560  008E                     	;# 
  1561  0090                     	;# 
  1562  0091                     	;# 
  1563  0092                     	;# 
  1564  0093                     	;# 
  1565  0094                     	;# 
  1566  0097                     	;# 
  1567  009B                     	;# 
  1568  009B                     	;# 
  1569  009C                     	;# 
  1570  009D                     	;# 
  1571  009E                     	;# 
  1572  009F                     	;# 
  1573  010C                     	;# 
  1574  010D                     	;# 
  1575  010E                     	;# 
  1576  0111                     	;# 
  1577  0112                     	;# 
  1578  0113                     	;# 
  1579  0114                     	;# 
  1580  0115                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  0118                     	;# 
  1584  0119                     	;# 
  1585  018C                     	;# 
  1586  018D                     	;# 
  1587  018E                     	;# 
  1588  0197                     	;# 
  1589  0199                     	;# 
  1590  0199                     	;# 
  1591  0199                     	;# 
  1592  019A                     	;# 
  1593  019A                     	;# 
  1594  019A                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019C                     	;# 
  1601  019C                     	;# 
  1602  019C                     	;# 
  1603  019D                     	;# 
  1604  019D                     	;# 
  1605  019D                     	;# 
  1606  019E                     	;# 
  1607  019E                     	;# 
  1608  019E                     	;# 
  1609  019F                     	;# 
  1610  019F                     	;# 
  1611  019F                     	;# 
  1612  019F                     	;# 
  1613  019F                     	;# 
  1614  020C                     	;# 
  1615  020D                     	;# 
  1616  020E                     	;# 
  1617  0211                     	;# 
  1618  0211                     	;# 
  1619  0212                     	;# 
  1620  0212                     	;# 
  1621  0213                     	;# 
  1622  0213                     	;# 
  1623  0214                     	;# 
  1624  0214                     	;# 
  1625  0215                     	;# 
  1626  0215                     	;# 
  1627  0215                     	;# 
  1628  0215                     	;# 
  1629  0216                     	;# 
  1630  0216                     	;# 
  1631  0217                     	;# 
  1632  0217                     	;# 
  1633  0219                     	;# 
  1634  021A                     	;# 
  1635  021B                     	;# 
  1636  021C                     	;# 
  1637  021D                     	;# 
  1638  021D                     	;# 
  1639  021E                     	;# 
  1640  021F                     	;# 
  1641  028C                     	;# 
  1642  028D                     	;# 
  1643  028E                     	;# 
  1644  0291                     	;# 
  1645  0291                     	;# 
  1646  0292                     	;# 
  1647  0293                     	;# 
  1648  0294                     	;# 
  1649  0295                     	;# 
  1650  0295                     	;# 
  1651  0296                     	;# 
  1652  0297                     	;# 
  1653  0298                     	;# 
  1654  029F                     	;# 
  1655  030C                     	;# 
  1656  030D                     	;# 
  1657  030E                     	;# 
  1658  0311                     	;# 
  1659  0311                     	;# 
  1660  0312                     	;# 
  1661  0313                     	;# 
  1662  0314                     	;# 
  1663  0315                     	;# 
  1664  0315                     	;# 
  1665  0316                     	;# 
  1666  0317                     	;# 
  1667  0318                     	;# 
  1668  038C                     	;# 
  1669  038D                     	;# 
  1670  038E                     	;# 
  1671  0391                     	;# 
  1672  0392                     	;# 
  1673  0393                     	;# 
  1674  0394                     	;# 
  1675  0395                     	;# 
  1676  0396                     	;# 
  1677  0397                     	;# 
  1678  0398                     	;# 
  1679  0399                     	;# 
  1680  039A                     	;# 
  1681  039C                     	;# 
  1682  039D                     	;# 
  1683  039E                     	;# 
  1684  039F                     	;# 
  1685  0411                     	;# 
  1686  0411                     	;# 
  1687  0412                     	;# 
  1688  0413                     	;# 
  1689  0414                     	;# 
  1690  0415                     	;# 
  1691  0416                     	;# 
  1692  0417                     	;# 
  1693  0418                     	;# 
  1694  0418                     	;# 
  1695  0419                     	;# 
  1696  041A                     	;# 
  1697  041B                     	;# 
  1698  041C                     	;# 
  1699  041D                     	;# 
  1700  041E                     	;# 
  1701  041F                     	;# 
  1702  0498                     	;# 
  1703  0498                     	;# 
  1704  0499                     	;# 
  1705  049A                     	;# 
  1706  049B                     	;# 
  1707  049B                     	;# 
  1708  049C                     	;# 
  1709  049D                     	;# 
  1710  049E                     	;# 
  1711  049F                     	;# 
  1712  0617                     	;# 
  1713  0618                     	;# 
  1714  0619                     	;# 
  1715  0619                     	;# 
  1716  061A                     	;# 
  1717  061B                     	;# 
  1718  061C                     	;# 
  1719  061C                     	;# 
  1720  061F                     	;# 
  1721  0691                     	;# 
  1722  0692                     	;# 
  1723  0693                     	;# 
  1724  0694                     	;# 
  1725  0695                     	;# 
  1726  0696                     	;# 
  1727  0697                     	;# 
  1728  0698                     	;# 
  1729  0699                     	;# 
  1730  0711                     	;# 
  1731  0712                     	;# 
  1732  0713                     	;# 
  1733  0714                     	;# 
  1734  0715                     	;# 
  1735  0716                     	;# 
  1736  0717                     	;# 
  1737  0718                     	;# 
  1738  0719                     	;# 
  1739  0891                     	;# 
  1740  0891                     	;# 
  1741  0891                     	;# 
  1742  0891                     	;# 
  1743  0891                     	;# 
  1744  0891                     	;# 
  1745  0892                     	;# 
  1746  0892                     	;# 
  1747  0892                     	;# 
  1748  0893                     	;# 
  1749  0893                     	;# 
  1750  0893                     	;# 
  1751  0893                     	;# 
  1752  0893                     	;# 
  1753  0893                     	;# 
  1754  0894                     	;# 
  1755  0894                     	;# 
  1756  0894                     	;# 
  1757  0895                     	;# 
  1758  0895                     	;# 
  1759  0895                     	;# 
  1760  0896                     	;# 
  1761  0896                     	;# 
  1762  0896                     	;# 
  1763  089B                     	;# 
  1764  0911                     	;# 
  1765  0912                     	;# 
  1766  0913                     	;# 
  1767  0914                     	;# 
  1768  0915                     	;# 
  1769  0916                     	;# 
  1770  0918                     	;# 
  1771  0919                     	;# 
  1772  091A                     	;# 
  1773  091B                     	;# 
  1774  091C                     	;# 
  1775  091D                     	;# 
  1776  091E                     	;# 
  1777  091F                     	;# 
  1778  0E0F                     	;# 
  1779  0E10                     	;# 
  1780  0E11                     	;# 
  1781  0E12                     	;# 
  1782  0E13                     	;# 
  1783  0E14                     	;# 
  1784  0E15                     	;# 
  1785  0E16                     	;# 
  1786  0E17                     	;# 
  1787  0E18                     	;# 
  1788  0E19                     	;# 
  1789  0E1A                     	;# 
  1790  0E1B                     	;# 
  1791  0E1C                     	;# 
  1792  0E1D                     	;# 
  1793  0E1E                     	;# 
  1794  0E1F                     	;# 
  1795  0E20                     	;# 
  1796  0E21                     	;# 
  1797  0E22                     	;# 
  1798  0E24                     	;# 
  1799  0E25                     	;# 
  1800  0E28                     	;# 
  1801  0E29                     	;# 
  1802  0E2A                     	;# 
  1803  0E2B                     	;# 
  1804  0E2C                     	;# 
  1805  0E2D                     	;# 
  1806  0E2E                     	;# 
  1807  0E2F                     	;# 
  1808  0E90                     	;# 
  1809  0E91                     	;# 
  1810  0E92                     	;# 
  1811  0E94                     	;# 
  1812  0E95                     	;# 
  1813  0E9C                     	;# 
  1814  0E9D                     	;# 
  1815  0E9E                     	;# 
  1816  0E9F                     	;# 
  1817  0EA0                     	;# 
  1818  0EA1                     	;# 
  1819  0EA2                     	;# 
  1820  0EA3                     	;# 
  1821  0EA4                     	;# 
  1822  0EA5                     	;# 
  1823  0EA6                     	;# 
  1824  0EA7                     	;# 
  1825  0F0F                     	;# 
  1826  0F10                     	;# 
  1827  0F11                     	;# 
  1828  0F12                     	;# 
  1829  0F13                     	;# 
  1830  0F14                     	;# 
  1831  0F15                     	;# 
  1832  0F16                     	;# 
  1833  0F17                     	;# 
  1834  0F18                     	;# 
  1835  0F19                     	;# 
  1836  0F1A                     	;# 
  1837  0F1B                     	;# 
  1838  0F1C                     	;# 
  1839  0F1D                     	;# 
  1840  0F1E                     	;# 
  1841  0F1F                     	;# 
  1842  0F20                     	;# 
  1843  0F21                     	;# 
  1844  0F22                     	;# 
  1845  0F23                     	;# 
  1846  0F24                     	;# 
  1847  0F25                     	;# 
  1848  0F26                     	;# 
  1849  0F27                     	;# 
  1850  0F28                     	;# 
  1851  0F29                     	;# 
  1852  0F2A                     	;# 
  1853  0F2B                     	;# 
  1854  0F2C                     	;# 
  1855  0F2D                     	;# 
  1856  0F2E                     	;# 
  1857  0F2F                     	;# 
  1858  0F30                     	;# 
  1859  0F31                     	;# 
  1860  0F32                     	;# 
  1861  0F33                     	;# 
  1862  0F34                     	;# 
  1863  0F35                     	;# 
  1864  0F36                     	;# 
  1865  0F37                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0013                     	;# 
  1896  0014                     	;# 
  1897  0015                     	;# 
  1898  0015                     	;# 
  1899  0016                     	;# 
  1900  0016                     	;# 
  1901  0017                     	;# 
  1902  0018                     	;# 
  1903  0019                     	;# 
  1904  0019                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001C                     	;# 
  1908  001D                     	;# 
  1909  001E                     	;# 
  1910  001F                     	;# 
  1911  008C                     	;# 
  1912  008D                     	;# 
  1913  008E                     	;# 
  1914  0090                     	;# 
  1915  0091                     	;# 
  1916  0092                     	;# 
  1917  0093                     	;# 
  1918  0094                     	;# 
  1919  0097                     	;# 
  1920  009B                     	;# 
  1921  009B                     	;# 
  1922  009C                     	;# 
  1923  009D                     	;# 
  1924  009E                     	;# 
  1925  009F                     	;# 
  1926  010C                     	;# 
  1927  010D                     	;# 
  1928  010E                     	;# 
  1929  0111                     	;# 
  1930  0112                     	;# 
  1931  0113                     	;# 
  1932  0114                     	;# 
  1933  0115                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  0118                     	;# 
  1937  0119                     	;# 
  1938  018C                     	;# 
  1939  018D                     	;# 
  1940  018E                     	;# 
  1941  0197                     	;# 
  1942  0199                     	;# 
  1943  0199                     	;# 
  1944  0199                     	;# 
  1945  019A                     	;# 
  1946  019A                     	;# 
  1947  019A                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019C                     	;# 
  1954  019C                     	;# 
  1955  019C                     	;# 
  1956  019D                     	;# 
  1957  019D                     	;# 
  1958  019D                     	;# 
  1959  019E                     	;# 
  1960  019E                     	;# 
  1961  019E                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  019F                     	;# 
  1965  019F                     	;# 
  1966  019F                     	;# 
  1967  020C                     	;# 
  1968  020D                     	;# 
  1969  020E                     	;# 
  1970  0211                     	;# 
  1971  0211                     	;# 
  1972  0212                     	;# 
  1973  0212                     	;# 
  1974  0213                     	;# 
  1975  0213                     	;# 
  1976  0214                     	;# 
  1977  0214                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0215                     	;# 
  1981  0215                     	;# 
  1982  0216                     	;# 
  1983  0216                     	;# 
  1984  0217                     	;# 
  1985  0217                     	;# 
  1986  0219                     	;# 
  1987  021A                     	;# 
  1988  021B                     	;# 
  1989  021C                     	;# 
  1990  021D                     	;# 
  1991  021D                     	;# 
  1992  021E                     	;# 
  1993  021F                     	;# 
  1994  028C                     	;# 
  1995  028D                     	;# 
  1996  028E                     	;# 
  1997  0291                     	;# 
  1998  0291                     	;# 
  1999  0292                     	;# 
  2000  0293                     	;# 
  2001  0294                     	;# 
  2002  0295                     	;# 
  2003  0295                     	;# 
  2004  0296                     	;# 
  2005  0297                     	;# 
  2006  0298                     	;# 
  2007  029F                     	;# 
  2008  030C                     	;# 
  2009  030D                     	;# 
  2010  030E                     	;# 
  2011  0311                     	;# 
  2012  0311                     	;# 
  2013  0312                     	;# 
  2014  0313                     	;# 
  2015  0314                     	;# 
  2016  0315                     	;# 
  2017  0315                     	;# 
  2018  0316                     	;# 
  2019  0317                     	;# 
  2020  0318                     	;# 
  2021  038C                     	;# 
  2022  038D                     	;# 
  2023  038E                     	;# 
  2024  0391                     	;# 
  2025  0392                     	;# 
  2026  0393                     	;# 
  2027  0394                     	;# 
  2028  0395                     	;# 
  2029  0396                     	;# 
  2030  0397                     	;# 
  2031  0398                     	;# 
  2032  0399                     	;# 
  2033  039A                     	;# 
  2034  039C                     	;# 
  2035  039D                     	;# 
  2036  039E                     	;# 
  2037  039F                     	;# 
  2038  0411                     	;# 
  2039  0411                     	;# 
  2040  0412                     	;# 
  2041  0413                     	;# 
  2042  0414                     	;# 
  2043  0415                     	;# 
  2044  0416                     	;# 
  2045  0417                     	;# 
  2046  0418                     	;# 
  2047  0418                     	;# 
  2048  0419                     	;# 
  2049  041A                     	;# 
  2050  041B                     	;# 
  2051  041C                     	;# 
  2052  041D                     	;# 
  2053  041E                     	;# 
  2054  041F                     	;# 
  2055  0498                     	;# 
  2056  0498                     	;# 
  2057  0499                     	;# 
  2058  049A                     	;# 
  2059  049B                     	;# 
  2060  049B                     	;# 
  2061  049C                     	;# 
  2062  049D                     	;# 
  2063  049E                     	;# 
  2064  049F                     	;# 
  2065  0617                     	;# 
  2066  0618                     	;# 
  2067  0619                     	;# 
  2068  0619                     	;# 
  2069  061A                     	;# 
  2070  061B                     	;# 
  2071  061C                     	;# 
  2072  061C                     	;# 
  2073  061F                     	;# 
  2074  0691                     	;# 
  2075  0692                     	;# 
  2076  0693                     	;# 
  2077  0694                     	;# 
  2078  0695                     	;# 
  2079  0696                     	;# 
  2080  0697                     	;# 
  2081  0698                     	;# 
  2082  0699                     	;# 
  2083  0711                     	;# 
  2084  0712                     	;# 
  2085  0713                     	;# 
  2086  0714                     	;# 
  2087  0715                     	;# 
  2088  0716                     	;# 
  2089  0717                     	;# 
  2090  0718                     	;# 
  2091  0719                     	;# 
  2092  0891                     	;# 
  2093  0891                     	;# 
  2094  0891                     	;# 
  2095  0891                     	;# 
  2096  0891                     	;# 
  2097  0891                     	;# 
  2098  0892                     	;# 
  2099  0892                     	;# 
  2100  0892                     	;# 
  2101  0893                     	;# 
  2102  0893                     	;# 
  2103  0893                     	;# 
  2104  0893                     	;# 
  2105  0893                     	;# 
  2106  0893                     	;# 
  2107  0894                     	;# 
  2108  0894                     	;# 
  2109  0894                     	;# 
  2110  0895                     	;# 
  2111  0895                     	;# 
  2112  0895                     	;# 
  2113  0896                     	;# 
  2114  0896                     	;# 
  2115  0896                     	;# 
  2116  089B                     	;# 
  2117  0911                     	;# 
  2118  0912                     	;# 
  2119  0913                     	;# 
  2120  0914                     	;# 
  2121  0915                     	;# 
  2122  0916                     	;# 
  2123  0918                     	;# 
  2124  0919                     	;# 
  2125  091A                     	;# 
  2126  091B                     	;# 
  2127  091C                     	;# 
  2128  091D                     	;# 
  2129  091E                     	;# 
  2130  091F                     	;# 
  2131  0E0F                     	;# 
  2132  0E10                     	;# 
  2133  0E11                     	;# 
  2134  0E12                     	;# 
  2135  0E13                     	;# 
  2136  0E14                     	;# 
  2137  0E15                     	;# 
  2138  0E16                     	;# 
  2139  0E17                     	;# 
  2140  0E18                     	;# 
  2141  0E19                     	;# 
  2142  0E1A                     	;# 
  2143  0E1B                     	;# 
  2144  0E1C                     	;# 
  2145  0E1D                     	;# 
  2146  0E1E                     	;# 
  2147  0E1F                     	;# 
  2148  0E20                     	;# 
  2149  0E21                     	;# 
  2150  0E22                     	;# 
  2151  0E24                     	;# 
  2152  0E25                     	;# 
  2153  0E28                     	;# 
  2154  0E29                     	;# 
  2155  0E2A                     	;# 
  2156  0E2B                     	;# 
  2157  0E2C                     	;# 
  2158  0E2D                     	;# 
  2159  0E2E                     	;# 
  2160  0E2F                     	;# 
  2161  0E90                     	;# 
  2162  0E91                     	;# 
  2163  0E92                     	;# 
  2164  0E94                     	;# 
  2165  0E95                     	;# 
  2166  0E9C                     	;# 
  2167  0E9D                     	;# 
  2168  0E9E                     	;# 
  2169  0E9F                     	;# 
  2170  0EA0                     	;# 
  2171  0EA1                     	;# 
  2172  0EA2                     	;# 
  2173  0EA3                     	;# 
  2174  0EA4                     	;# 
  2175  0EA5                     	;# 
  2176  0EA6                     	;# 
  2177  0EA7                     	;# 
  2178  0F0F                     	;# 
  2179  0F10                     	;# 
  2180  0F11                     	;# 
  2181  0F12                     	;# 
  2182  0F13                     	;# 
  2183  0F14                     	;# 
  2184  0F15                     	;# 
  2185  0F16                     	;# 
  2186  0F17                     	;# 
  2187  0F18                     	;# 
  2188  0F19                     	;# 
  2189  0F1A                     	;# 
  2190  0F1B                     	;# 
  2191  0F1C                     	;# 
  2192  0F1D                     	;# 
  2193  0F1E                     	;# 
  2194  0F1F                     	;# 
  2195  0F20                     	;# 
  2196  0F21                     	;# 
  2197  0F22                     	;# 
  2198  0F23                     	;# 
  2199  0F24                     	;# 
  2200  0F25                     	;# 
  2201  0F26                     	;# 
  2202  0F27                     	;# 
  2203  0F28                     	;# 
  2204  0F29                     	;# 
  2205  0F2A                     	;# 
  2206  0F2B                     	;# 
  2207  0F2C                     	;# 
  2208  0F2D                     	;# 
  2209  0F2E                     	;# 
  2210  0F2F                     	;# 
  2211  0F30                     	;# 
  2212  0F31                     	;# 
  2213  0F32                     	;# 
  2214  0F33                     	;# 
  2215  0F34                     	;# 
  2216  0F35                     	;# 
  2217  0F36                     	;# 
  2218  0F37                     	;# 
  2219  0FE4                     	;# 
  2220  0FE5                     	;# 
  2221  0FE6                     	;# 
  2222  0FE7                     	;# 
  2223  0FE8                     	;# 
  2224  0FE9                     	;# 
  2225  0FEA                     	;# 
  2226  0FEB                     	;# 
  2227  0FED                     	;# 
  2228  0FEE                     	;# 
  2229  0FEF                     	;# 
  2230  0000                     	;# 
  2231  0001                     	;# 
  2232  0002                     	;# 
  2233  0003                     	;# 
  2234  0004                     	;# 
  2235  0005                     	;# 
  2236  0006                     	;# 
  2237  0007                     	;# 
  2238  0008                     	;# 
  2239  0009                     	;# 
  2240  000A                     	;# 
  2241  000B                     	;# 
  2242  000C                     	;# 
  2243  000D                     	;# 
  2244  000E                     	;# 
  2245  0010                     	;# 
  2246  0011                     	;# 
  2247  0012                     	;# 
  2248  0013                     	;# 
  2249  0014                     	;# 
  2250  0015                     	;# 
  2251  0015                     	;# 
  2252  0016                     	;# 
  2253  0016                     	;# 
  2254  0017                     	;# 
  2255  0018                     	;# 
  2256  0019                     	;# 
  2257  0019                     	;# 
  2258  001A                     	;# 
  2259  001B                     	;# 
  2260  001C                     	;# 
  2261  001D                     	;# 
  2262  001E                     	;# 
  2263  001F                     	;# 
  2264  008C                     	;# 
  2265  008D                     	;# 
  2266  008E                     	;# 
  2267  0090                     	;# 
  2268  0091                     	;# 
  2269  0092                     	;# 
  2270  0093                     	;# 
  2271  0094                     	;# 
  2272  0097                     	;# 
  2273  009B                     	;# 
  2274  009B                     	;# 
  2275  009C                     	;# 
  2276  009D                     	;# 
  2277  009E                     	;# 
  2278  009F                     	;# 
  2279  010C                     	;# 
  2280  010D                     	;# 
  2281  010E                     	;# 
  2282  0111                     	;# 
  2283  0112                     	;# 
  2284  0113                     	;# 
  2285  0114                     	;# 
  2286  0115                     	;# 
  2287  0116                     	;# 
  2288  0117                     	;# 
  2289  0118                     	;# 
  2290  0119                     	;# 
  2291  018C                     	;# 
  2292  018D                     	;# 
  2293  018E                     	;# 
  2294  0197                     	;# 
  2295  0199                     	;# 
  2296  0199                     	;# 
  2297  0199                     	;# 
  2298  019A                     	;# 
  2299  019A                     	;# 
  2300  019A                     	;# 
  2301  019B                     	;# 
  2302  019B                     	;# 
  2303  019B                     	;# 
  2304  019B                     	;# 
  2305  019B                     	;# 
  2306  019C                     	;# 
  2307  019C                     	;# 
  2308  019C                     	;# 
  2309  019D                     	;# 
  2310  019D                     	;# 
  2311  019D                     	;# 
  2312  019E                     	;# 
  2313  019E                     	;# 
  2314  019E                     	;# 
  2315  019F                     	;# 
  2316  019F                     	;# 
  2317  019F                     	;# 
  2318  019F                     	;# 
  2319  019F                     	;# 
  2320  020C                     	;# 
  2321  020D                     	;# 
  2322  020E                     	;# 
  2323  0211                     	;# 
  2324  0211                     	;# 
  2325  0212                     	;# 
  2326  0212                     	;# 
  2327  0213                     	;# 
  2328  0213                     	;# 
  2329  0214                     	;# 
  2330  0214                     	;# 
  2331  0215                     	;# 
  2332  0215                     	;# 
  2333  0215                     	;# 
  2334  0215                     	;# 
  2335  0216                     	;# 
  2336  0216                     	;# 
  2337  0217                     	;# 
  2338  0217                     	;# 
  2339  0219                     	;# 
  2340  021A                     	;# 
  2341  021B                     	;# 
  2342  021C                     	;# 
  2343  021D                     	;# 
  2344  021D                     	;# 
  2345  021E                     	;# 
  2346  021F                     	;# 
  2347  028C                     	;# 
  2348  028D                     	;# 
  2349  028E                     	;# 
  2350  0291                     	;# 
  2351  0291                     	;# 
  2352  0292                     	;# 
  2353  0293                     	;# 
  2354  0294                     	;# 
  2355  0295                     	;# 
  2356  0295                     	;# 
  2357  0296                     	;# 
  2358  0297                     	;# 
  2359  0298                     	;# 
  2360  029F                     	;# 
  2361  030C                     	;# 
  2362  030D                     	;# 
  2363  030E                     	;# 
  2364  0311                     	;# 
  2365  0311                     	;# 
  2366  0312                     	;# 
  2367  0313                     	;# 
  2368  0314                     	;# 
  2369  0315                     	;# 
  2370  0315                     	;# 
  2371  0316                     	;# 
  2372  0317                     	;# 
  2373  0318                     	;# 
  2374  038C                     	;# 
  2375  038D                     	;# 
  2376  038E                     	;# 
  2377  0391                     	;# 
  2378  0392                     	;# 
  2379  0393                     	;# 
  2380  0394                     	;# 
  2381  0395                     	;# 
  2382  0396                     	;# 
  2383  0397                     	;# 
  2384  0398                     	;# 
  2385  0399                     	;# 
  2386  039A                     	;# 
  2387  039C                     	;# 
  2388  039D                     	;# 
  2389  039E                     	;# 
  2390  039F                     	;# 
  2391  0411                     	;# 
  2392  0411                     	;# 
  2393  0412                     	;# 
  2394  0413                     	;# 
  2395  0414                     	;# 
  2396  0415                     	;# 
  2397  0416                     	;# 
  2398  0417                     	;# 
  2399  0418                     	;# 
  2400  0418                     	;# 
  2401  0419                     	;# 
  2402  041A                     	;# 
  2403  041B                     	;# 
  2404  041C                     	;# 
  2405  041D                     	;# 
  2406  041E                     	;# 
  2407  041F                     	;# 
  2408  0498                     	;# 
  2409  0498                     	;# 
  2410  0499                     	;# 
  2411  049A                     	;# 
  2412  049B                     	;# 
  2413  049B                     	;# 
  2414  049C                     	;# 
  2415  049D                     	;# 
  2416  049E                     	;# 
  2417  049F                     	;# 
  2418  0617                     	;# 
  2419  0618                     	;# 
  2420  0619                     	;# 
  2421  0619                     	;# 
  2422  061A                     	;# 
  2423  061B                     	;# 
  2424  061C                     	;# 
  2425  061C                     	;# 
  2426  061F                     	;# 
  2427  0691                     	;# 
  2428  0692                     	;# 
  2429  0693                     	;# 
  2430  0694                     	;# 
  2431  0695                     	;# 
  2432  0696                     	;# 
  2433  0697                     	;# 
  2434  0698                     	;# 
  2435  0699                     	;# 
  2436  0711                     	;# 
  2437  0712                     	;# 
  2438  0713                     	;# 
  2439  0714                     	;# 
  2440  0715                     	;# 
  2441  0716                     	;# 
  2442  0717                     	;# 
  2443  0718                     	;# 
  2444  0719                     	;# 
  2445  0891                     	;# 
  2446  0891                     	;# 
  2447  0891                     	;# 
  2448  0891                     	;# 
  2449  0891                     	;# 
  2450  0891                     	;# 
  2451  0892                     	;# 
  2452  0892                     	;# 
  2453  0892                     	;# 
  2454  0893                     	;# 
  2455  0893                     	;# 
  2456  0893                     	;# 
  2457  0893                     	;# 
  2458  0893                     	;# 
  2459  0893                     	;# 
  2460  0894                     	;# 
  2461  0894                     	;# 
  2462  0894                     	;# 
  2463  0895                     	;# 
  2464  0895                     	;# 
  2465  0895                     	;# 
  2466  0896                     	;# 
  2467  0896                     	;# 
  2468  0896                     	;# 
  2469  089B                     	;# 
  2470  0911                     	;# 
  2471  0912                     	;# 
  2472  0913                     	;# 
  2473  0914                     	;# 
  2474  0915                     	;# 
  2475  0916                     	;# 
  2476  0918                     	;# 
  2477  0919                     	;# 
  2478  091A                     	;# 
  2479  091B                     	;# 
  2480  091C                     	;# 
  2481  091D                     	;# 
  2482  091E                     	;# 
  2483  091F                     	;# 
  2484  0E0F                     	;# 
  2485  0E10                     	;# 
  2486  0E11                     	;# 
  2487  0E12                     	;# 
  2488  0E13                     	;# 
  2489  0E14                     	;# 
  2490  0E15                     	;# 
  2491  0E16                     	;# 
  2492  0E17                     	;# 
  2493  0E18                     	;# 
  2494  0E19                     	;# 
  2495  0E1A                     	;# 
  2496  0E1B                     	;# 
  2497  0E1C                     	;# 
  2498  0E1D                     	;# 
  2499  0E1E                     	;# 
  2500  0E1F                     	;# 
  2501  0E20                     	;# 
  2502  0E21                     	;# 
  2503  0E22                     	;# 
  2504  0E24                     	;# 
  2505  0E25                     	;# 
  2506  0E28                     	;# 
  2507  0E29                     	;# 
  2508  0E2A                     	;# 
  2509  0E2B                     	;# 
  2510  0E2C                     	;# 
  2511  0E2D                     	;# 
  2512  0E2E                     	;# 
  2513  0E2F                     	;# 
  2514  0E90                     	;# 
  2515  0E91                     	;# 
  2516  0E92                     	;# 
  2517  0E94                     	;# 
  2518  0E95                     	;# 
  2519  0E9C                     	;# 
  2520  0E9D                     	;# 
  2521  0E9E                     	;# 
  2522  0E9F                     	;# 
  2523  0EA0                     	;# 
  2524  0EA1                     	;# 
  2525  0EA2                     	;# 
  2526  0EA3                     	;# 
  2527  0EA4                     	;# 
  2528  0EA5                     	;# 
  2529  0EA6                     	;# 
  2530  0EA7                     	;# 
  2531  0F0F                     	;# 
  2532  0F10                     	;# 
  2533  0F11                     	;# 
  2534  0F12                     	;# 
  2535  0F13                     	;# 
  2536  0F14                     	;# 
  2537  0F15                     	;# 
  2538  0F16                     	;# 
  2539  0F17                     	;# 
  2540  0F18                     	;# 
  2541  0F19                     	;# 
  2542  0F1A                     	;# 
  2543  0F1B                     	;# 
  2544  0F1C                     	;# 
  2545  0F1D                     	;# 
  2546  0F1E                     	;# 
  2547  0F1F                     	;# 
  2548  0F20                     	;# 
  2549  0F21                     	;# 
  2550  0F22                     	;# 
  2551  0F23                     	;# 
  2552  0F24                     	;# 
  2553  0F25                     	;# 
  2554  0F26                     	;# 
  2555  0F27                     	;# 
  2556  0F28                     	;# 
  2557  0F29                     	;# 
  2558  0F2A                     	;# 
  2559  0F2B                     	;# 
  2560  0F2C                     	;# 
  2561  0F2D                     	;# 
  2562  0F2E                     	;# 
  2563  0F2F                     	;# 
  2564  0F30                     	;# 
  2565  0F31                     	;# 
  2566  0F32                     	;# 
  2567  0F33                     	;# 
  2568  0F34                     	;# 
  2569  0F35                     	;# 
  2570  0F36                     	;# 
  2571  0F37                     	;# 
  2572  0FE4                     	;# 
  2573  0FE5                     	;# 
  2574  0FE6                     	;# 
  2575  0FE7                     	;# 
  2576  0FE8                     	;# 
  2577  0FE9                     	;# 
  2578  0FEA                     	;# 
  2579  0FEB                     	;# 
  2580  0FED                     	;# 
  2581  0FEE                     	;# 
  2582  0FEF                     	;# 
  2583                           
  2584                           	psect	nvBANK0
  2585  0067                     __pnvBANK0:	
  2586  0067                     _i2c2_driver_i2cISR:	
  2587  0067                     	ds	2
  2588  0012                     _PIR2bits	set	18
  2589  000B                     _INTCONbits	set	11
  2590  008E                     _TRISC	set	142
  2591  008D                     _TRISB	set	141
  2592  008C                     _TRISA	set	140
  2593  0097                     _WDTCON	set	151
  2594  0092                     _PIE2bits	set	146
  2595  010C                     _LATAbits	set	268
  2596  010E                     _LATCbits	set	270
  2597  010E                     _LATC	set	270
  2598  010D                     _LATB	set	269
  2599  010C                     _LATA	set	268
  2600  018C                     _ANSELA	set	396
  2601  018D                     _ANSELB	set	397
  2602  018E                     _ANSELC	set	398
  2603  021C                     _SSP2STATbits	set	540
  2604  021B                     _SSP2MSK	set	539
  2605  0219                     _SSP2BUF	set	537
  2606  021E                     _SSP2CON2bits	set	542
  2607  021A                     _SSP2ADD	set	538
  2608  021E                     _SSP2CON2	set	542
  2609  021D                     _SSP2CON1	set	541
  2610  021C                     _SSP2STAT	set	540
  2611  021D                     _SSP2CON1bits	set	541
  2612  020E                     _WPUC	set	526
  2613  020C                     _WPUA	set	524
  2614  020D                     _WPUB	set	525
  2615  028E                     _ODCONC	set	654
  2616  028D                     _ODCONB	set	653
  2617  028C                     _ODCONA	set	652
  2618  030E                     _SLRCONC	set	782
  2619  030D                     _SLRCONB	set	781
  2620  030C                     _SLRCONA	set	780
  2621  0916                     _PMD5	set	2326
  2622  0915                     _PMD4	set	2325
  2623  0914                     _PMD3	set	2324
  2624  0913                     _PMD2	set	2323
  2625  0912                     _PMD1	set	2322
  2626  0911                     _PMD0	set	2321
  2627  091E                     _OSCTUNE	set	2334
  2628  091F                     _OSCFRQ	set	2335
  2629  091D                     _OSCEN	set	2333
  2630  091B                     _OSCCON3	set	2331
  2631  0919                     _OSCCON1	set	2329
  2632  0E1D                     _SSP2CLKPPS	set	3613
  2633  0E1E                     _SSP2DATPPS	set	3614
  2634  0EA6                     _RC6PPS	set	3750
  2635  0EA4                     _RC4PPS	set	3748
  2636                           
  2637                           ; #config settings
  2638  0000                     
  2639                           	psect	cinit
  2640  001C                     start_initialization:	
  2641  001C                     __initialization:	
  2642                           
  2643                           ; Clear objects allocated to COMMON
  2644  001C  01FD               	clrf	__pbssCOMMON& (0+127)
  2645                           
  2646                           ; Clear objects allocated to BANK0
  2647  001D  3050               	movlw	low __pbssBANK0
  2648  001E  0084               	movwf	4
  2649  001F  3000               	movlw	high __pbssBANK0
  2650  0020  0085               	movwf	5
  2651  0021  3017               	movlw	23
  2652  0022  318C  2484  3180   	fcall	clear_ram0
  2653                           
  2654                           ; Clear objects allocated to BANK4
  2655  0025  3020               	movlw	low __pbssBANK4
  2656  0026  0084               	movwf	4
  2657  0027  3002               	movlw	high __pbssBANK4
  2658  0028  0085               	movwf	5
  2659  0029  3044               	movlw	68
  2660  002A  318C  2484         	fcall	clear_ram0
  2661  002C                     end_of_initialization:	
  2662                           ;End of C runtime variable initialization code
  2663                           
  2664  002C                     __end_of__initialization:	
  2665  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2666  002D  0020               	movlb	0
  2667  002E  318D  2D61         	ljmp	_main	;jump to C main() function
  2668                           
  2669                           	psect	bssCOMMON
  2670  007D                     __pbssCOMMON:	
  2671  007D                     _b_i2c_error_flag:	
  2672  007D                     	ds	1
  2673                           
  2674                           	psect	bssBANK0
  2675  0050                     __pbssBANK0:	
  2676  0050                     _t:	
  2677  0050                     	ds	2
  2678  0052                     _id:	
  2679  0052                     	ds	2
  2680  0054                     _gesture_motion_:	
  2681  0054                     	ds	2
  2682  0056                     _gesture_state_:	
  2683  0056                     	ds	2
  2684  0058                     _gesture_far_count_:	
  2685  0058                     	ds	2
  2686  005A                     _gesture_near_count_:	
  2687  005A                     	ds	2
  2688  005C                     _gesture_lr_count_:	
  2689  005C                     	ds	2
  2690  005E                     _gesture_ud_count_:	
  2691  005E                     	ds	2
  2692  0060                     _gesture_lr_delta_:	
  2693  0060                     	ds	2
  2694  0062                     _gesture_ud_delta_:	
  2695  0062                     	ds	2
  2696  0064                     _i2c2_driver_busCollisionISR:	
  2697  0064                     	ds	2
  2698  0066                     _handleGestureFlag:	
  2699  0066                     	ds	1
  2700                           
  2701                           	psect	bssBANK4
  2702  0220                     __pbssBANK4:	
  2703  0220                     _gesture_data_:	
  2704  0220                     	ds	68
  2705                           
  2706                           	psect	clrtext
  2707  0C84                     clear_ram0:	
  2708                           ;	Called with FSR0 containing the base address, and
  2709                           ;	WREG with the size to clear
  2710                           
  2711  0C84  0064               	clrwdt	;clear the watchdog before getting into this loop
  2712  0C85                     clrloop0:	
  2713  0C85  0180               	clrf	0	;clear RAM location pointed to by FSR
  2714  0C86  3101               	addfsr 0,1
  2715  0C87  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2716  0C88  2C85               	goto	clrloop0	;have we reached the end yet?
  2717  0C89  3400               	retlw	0	;all done for this memory range, return
  2718                           
  2719                           	psect	cstackBANK3
  2720  01A0                     __pcstackBANK3:	
  2721  01A0                     ??_PMD_Initialize:	
  2722  01A0                     ??_PIN_MANAGER_Initialize:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  01A0                     ??_OSCILLATOR_Initialize:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  01A0                     ??_WDT_Initialize:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  01A0                     ??_resetGestureParameters:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  01A0                     ??_SYSTEM_Initialize:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  01A0                     ??_i2c2_driver_open:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  01A0                     ??_i2c2_driver_start:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  01A0                     ??_i2c2_driver_restart:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  01A0                     ??_i2c2_driver_stop:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  01A0                     ??_i2c2_driver_isNACK:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  01A0                     ??_i2c2_driver_startRX:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  01A0                     ??_i2c2_driver_getRXData:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  01A0                     ??_i2c2_driver_setAddr:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  01A0                     ??_i2c2_driver_TXData:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  01A0                     ?_i2c2_driver_setI2cISR:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  01A0                     i2c2_driver_setAddr@addr:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  01A0                     i2c2_driver_TXData@d:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  01A0                     i2c2_driver_setI2cISR@handler:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776                           
  2777                           ; 2 bytes @ 0x0
  2778  01A0                     	ds	1
  2779  01A1                     ??_wireReadDataByte:	
  2780  01A1                     ?_wireWriteDataByte:	
  2781                           ; 1 bytes @ 0x1
  2782                           
  2783  01A1                     wireWriteDataByte@val:	
  2784                           ; 2 bytes @ 0x1
  2785                           
  2786                           
  2787                           ; 1 bytes @ 0x1
  2788  01A1                     	ds	1
  2789  01A2                     ??_i2c2_driver_setI2cISR:	
  2790  01A2                     wireReadDataByte@reg:	
  2791                           ; 1 bytes @ 0x2
  2792                           
  2793                           
  2794                           ; 1 bytes @ 0x2
  2795  01A2                     	ds	1
  2796  01A3                     wireReadDataByte@val:	
  2797                           
  2798                           ; 1 bytes @ 0x3
  2799  01A3                     	ds	1
  2800  01A4                     ??_wireWriteDataByte:	
  2801  01A4                     ??_getMode:	
  2802                           ; 1 bytes @ 0x4
  2803                           
  2804  01A4                     wireWriteDataByte@reg:	
  2805                           ; 1 bytes @ 0x4
  2806                           
  2807                           
  2808                           ; 1 bytes @ 0x4
  2809  01A4                     	ds	1
  2810  01A5                     ??_setLEDDrive:	
  2811  01A5                     ??_setProximityGain:	
  2812                           ; 1 bytes @ 0x5
  2813                           
  2814  01A5                     ??_setAmbientLightGain:	
  2815                           ; 1 bytes @ 0x5
  2816                           
  2817  01A5                     ??_setProxIntLowThresh:	
  2818                           ; 1 bytes @ 0x5
  2819                           
  2820  01A5                     ??_setProxIntHighThresh:	
  2821                           ; 1 bytes @ 0x5
  2822                           
  2823  01A5                     ?_setLightIntLowThreshold:	
  2824                           ; 1 bytes @ 0x5
  2825                           
  2826  01A5                     ?_setLightIntHighThreshold:	
  2827                           ; 1 bytes @ 0x5
  2828                           
  2829  01A5                     ??_setGestureEnterThresh:	
  2830                           ; 1 bytes @ 0x5
  2831                           
  2832  01A5                     ??_setGestureExitThresh:	
  2833                           ; 1 bytes @ 0x5
  2834                           
  2835  01A5                     ??_setGestureGain:	
  2836                           ; 1 bytes @ 0x5
  2837                           
  2838  01A5                     ??_setGestureLEDDrive:	
  2839                           ; 1 bytes @ 0x5
  2840                           
  2841  01A5                     ??_setGestureWaitTime:	
  2842                           ; 1 bytes @ 0x5
  2843                           
  2844  01A5                     ??_setGestureIntEnable:	
  2845                           ; 1 bytes @ 0x5
  2846                           
  2847  01A5                     ??_setLEDBoost:	
  2848                           ; 1 bytes @ 0x5
  2849                           
  2850  01A5                     ??_setGestureMode:	
  2851                           ; 1 bytes @ 0x5
  2852                           
  2853  01A5                     getMode@enable_value:	
  2854                           ; 1 bytes @ 0x5
  2855                           
  2856  01A5                     setLightIntLowThreshold@threshold:	
  2857                           ; 1 bytes @ 0x5
  2858                           
  2859  01A5                     setLightIntHighThreshold@threshold:	
  2860                           ; 2 bytes @ 0x5
  2861                           
  2862                           
  2863                           ; 2 bytes @ 0x5
  2864  01A5                     	ds	1
  2865  01A6                     ?_setMode:	
  2866  01A6                     setMode@enable:	
  2867                           ; 1 bytes @ 0x6
  2868                           
  2869  01A6                     setAmbientLightGain@drive:	
  2870                           ; 1 bytes @ 0x6
  2871                           
  2872  01A6                     setProxIntLowThresh@threshold:	
  2873                           ; 1 bytes @ 0x6
  2874                           
  2875  01A6                     setProxIntHighThresh@threshold:	
  2876                           ; 1 bytes @ 0x6
  2877                           
  2878  01A6                     setGestureEnterThresh@threshold:	
  2879                           ; 1 bytes @ 0x6
  2880                           
  2881  01A6                     setGestureExitThresh@threshold:	
  2882                           ; 1 bytes @ 0x6
  2883                           
  2884  01A6                     setGestureWaitTime@time:	
  2885                           ; 1 bytes @ 0x6
  2886                           
  2887  01A6                     setGestureIntEnable@val:	
  2888                           ; 1 bytes @ 0x6
  2889                           
  2890  01A6                     setGestureMode@mode:	
  2891                           ; 1 bytes @ 0x6
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0x6
  2895  01A6                     	ds	1
  2896  01A7                     ??_setMode:	
  2897  01A7                     ??_setLightIntLowThreshold:	
  2898                           ; 1 bytes @ 0x7
  2899                           
  2900  01A7                     ??_setLightIntHighThreshold:	
  2901                           ; 1 bytes @ 0x7
  2902                           
  2903  01A7                     setLEDDrive@val:	
  2904                           ; 1 bytes @ 0x7
  2905                           
  2906  01A7                     setProximityGain@val:	
  2907                           ; 1 bytes @ 0x7
  2908                           
  2909  01A7                     setAmbientLightGain@val:	
  2910                           ; 1 bytes @ 0x7
  2911                           
  2912  01A7                     setGestureGain@val:	
  2913                           ; 1 bytes @ 0x7
  2914                           
  2915  01A7                     setGestureLEDDrive@val:	
  2916                           ; 1 bytes @ 0x7
  2917                           
  2918  01A7                     setGestureWaitTime@val:	
  2919                           ; 1 bytes @ 0x7
  2920                           
  2921  01A7                     setGestureIntEnable@enable:	
  2922                           ; 1 bytes @ 0x7
  2923                           
  2924  01A7                     setLEDBoost@val:	
  2925                           ; 1 bytes @ 0x7
  2926                           
  2927  01A7                     setGestureMode@val:	
  2928                           ; 1 bytes @ 0x7
  2929                           
  2930                           
  2931                           ; 1 bytes @ 0x7
  2932  01A7                     	ds	1
  2933  01A8                     setLEDDrive@drive:	
  2934  01A8                     setProximityGain@drive:	
  2935                           ; 1 bytes @ 0x8
  2936                           
  2937  01A8                     setLightIntLowThreshold@val_low:	
  2938                           ; 1 bytes @ 0x8
  2939                           
  2940  01A8                     setLightIntHighThreshold@val_low:	
  2941                           ; 1 bytes @ 0x8
  2942                           
  2943  01A8                     setGestureGain@gain:	
  2944                           ; 1 bytes @ 0x8
  2945                           
  2946  01A8                     setGestureLEDDrive@drive:	
  2947                           ; 1 bytes @ 0x8
  2948                           
  2949  01A8                     setLEDBoost@boost:	
  2950                           ; 1 bytes @ 0x8
  2951                           
  2952                           
  2953                           ; 1 bytes @ 0x8
  2954  01A8                     	ds	1
  2955  01A9                     setMode@reg_val:	
  2956  01A9                     setLightIntLowThreshold@val_high:	
  2957                           ; 1 bytes @ 0x9
  2958                           
  2959  01A9                     setLightIntHighThreshold@val_high:	
  2960                           ; 1 bytes @ 0x9
  2961                           
  2962                           
  2963                           ; 1 bytes @ 0x9
  2964  01A9                     	ds	1
  2965  01AA                     setMode@mode:	
  2966                           
  2967                           ; 1 bytes @ 0xA
  2968  01AA                     	ds	1
  2969  01AB                     ??_initialize:	
  2970  01AB                     ??_enablePower:	
  2971                           ; 1 bytes @ 0xB
  2972                           
  2973  01AB                     ??_enableGestureSensor:	
  2974                           ; 1 bytes @ 0xB
  2975                           
  2976                           
  2977                           ; 1 bytes @ 0xB
  2978  01AB                     	ds	1
  2979  01AC                     initialize@id:	
  2980  01AC                     enableGestureSensor@interrupts:	
  2981                           ; 1 bytes @ 0xC
  2982                           
  2983                           
  2984                           ; 1 bytes @ 0xC
  2985  01AC                     	ds	1
  2986  01AD                     ??_main:	
  2987                           
  2988                           	psect	cstackBANK2
  2989  0120                     __pcstackBANK2:	
  2990                           ; 1 bytes @ 0xD
  2991                           
  2992  0120                     readGesture@fifo_data:	
  2993                           
  2994                           ; 64 bytes @ 0x0
  2995  0120                     	ds	64
  2996                           
  2997                           	psect	cstackBANK1
  2998  00A0                     __pcstackBANK1:	
  2999  00A0                     readGesture@fifo_data2:	
  3000                           
  3001                           ; 64 bytes @ 0x0
  3002  00A0                     	ds	64
  3003                           
  3004                           	psect	cstackCOMMON
  3005  0070                     __pcstackCOMMON:	
  3006  0070                     ?_i2c2_driver_open:	
  3007  0070                     ?_i2c2_driver_isNACK:	
  3008                           ; 1 bit 
  3009                           
  3010  0070                     ?i1_i2c2_driver_isNACK:	
  3011                           ; 1 bit 
  3012                           
  3013  0070                     ?_PMD_Initialize:	
  3014                           ; 1 bit 
  3015                           
  3016  0070                     ?_PIN_MANAGER_Initialize:	
  3017                           ; 1 bytes @ 0x0
  3018                           
  3019  0070                     ?_OSCILLATOR_Initialize:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022  0070                     ?_WDT_Initialize:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0070                     ?_handleGesture:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0070                     ?_initialize:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0070                     ?_enablePower:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0070                     ?_enableGestureSensor:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0070                     ?_isGestureAvailable:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0070                     ?_wireReadDataByte:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0070                     ?_setLEDDrive:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0070                     ?_setProximityGain:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0070                     ?_setAmbientLightGain:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0070                     ?_setProxIntLowThresh:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0070                     ?_setProxIntHighThresh:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0070                     ?_setGestureEnterThresh:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0070                     ?_setGestureExitThresh:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0070                     ?_setGestureGain:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0070                     ?_setGestureLEDDrive:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0070                     ?_setGestureWaitTime:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0070                     ?_setGestureIntEnable:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0070                     ?_getMode:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0070                     ?_resetGestureParameters:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0070                     ?_setLEDBoost:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0070                     ?_setGestureMode:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0070                     ?_processGestureData:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0070                     ?_decodeGesture:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0070                     ??_decodeGesture:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0070                     ?_INTERRUPT_InterruptManager:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0070                     ?_SYSTEM_Initialize:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0070                     ?_mssp2_clearIRQ:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0070                     ??_mssp2_clearIRQ:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0070                     ?_i2c2_driver_start:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0070                     ?_i2c2_driver_restart:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0070                     ?_i2c2_driver_stop:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0070                     ?_i2c2_driver_startRX:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0070                     ?_i2c2_driver_getRXData:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0070                     ?_i2c2_driver_setAddr:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0070                     ?_i2c2_driver_TXData:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0070                     ?_i2c2_driver_sendNACK:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0070                     ??_i2c2_driver_sendNACK:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0070                     ?_main:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  0070                     ?_LEDs_SetLow:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142  0070                     ??_LEDs_SetLow:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  0070                     ?i1_i2c2_driver_start:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0070                     ??i1_i2c2_driver_start:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  0070                     ?i1_i2c2_driver_restart:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  0070                     ??i1_i2c2_driver_restart:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157  0070                     ?i1_i2c2_driver_stop:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160  0070                     ??i1_i2c2_driver_stop:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163  0070                     ??i1_i2c2_driver_isNACK:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166  0070                     ?i1_i2c2_driver_startRX:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169  0070                     ??i1_i2c2_driver_startRX:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172  0070                     ?i1_i2c2_driver_getRXData:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175  0070                     ??i1_i2c2_driver_getRXData:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178  0070                     ?i1_i2c2_driver_setAddr:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181  0070                     ??i1_i2c2_driver_setAddr:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184  0070                     ?i1_getMode:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187  0070                     ?i1_resetGestureParameters:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190  0070                     ??i1_resetGestureParameters:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193  0070                     ?i1_wireReadDataByte:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196  0070                     ?___wmul:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199  0070                     i1i2c2_driver_setAddr@addr:	
  3200                           ; 2 bytes @ 0x0
  3201                           
  3202  0070                     ___wmul@multiplier:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205                           
  3206                           ; 2 bytes @ 0x0
  3207  0070                     	ds	1
  3208  0071                     ??i1_wireReadDataByte:	
  3209  0071                     ?_wireReadDataBlock:	
  3210                           ; 1 bytes @ 0x1
  3211                           
  3212  0071                     wireReadDataBlock@val:	
  3213                           ; 2 bytes @ 0x1
  3214                           
  3215                           
  3216                           ; 2 bytes @ 0x1
  3217  0071                     	ds	1
  3218  0072                     i1wireReadDataByte@reg:	
  3219  0072                     ___wmul@multiplicand:	
  3220                           ; 1 bytes @ 0x2
  3221                           
  3222                           
  3223                           ; 2 bytes @ 0x2
  3224  0072                     	ds	1
  3225  0073                     i1wireReadDataByte@val:	
  3226  0073                     wireReadDataBlock@len:	
  3227                           ; 1 bytes @ 0x3
  3228                           
  3229                           
  3230                           ; 2 bytes @ 0x3
  3231  0073                     	ds	1
  3232  0074                     ??_isGestureAvailable:	
  3233  0074                     ??___wmul:	
  3234                           ; 1 bytes @ 0x4
  3235                           
  3236  0074                     ??i1_getMode:	
  3237                           ; 1 bytes @ 0x4
  3238                           
  3239  0074                     ___wmul@product:	
  3240                           ; 1 bytes @ 0x4
  3241                           
  3242                           
  3243                           ; 2 bytes @ 0x4
  3244  0074                     	ds	1
  3245  0075                     ??_wireReadDataBlock:	
  3246  0075                     isGestureAvailable@val:	
  3247                           ; 1 bytes @ 0x5
  3248                           
  3249  0075                     i1getMode@enable_value:	
  3250                           ; 1 bytes @ 0x5
  3251                           
  3252                           
  3253                           ; 1 bytes @ 0x5
  3254  0075                     	ds	1
  3255  0076                     ?___awdiv:	
  3256  0076                     ___awdiv@divisor:	
  3257                           ; 2 bytes @ 0x6
  3258                           
  3259                           
  3260                           ; 2 bytes @ 0x6
  3261  0076                     	ds	2
  3262  0078                     ___awdiv@dividend:	
  3263                           
  3264                           ; 2 bytes @ 0x8
  3265  0078                     	ds	2
  3266  007A                     ??___awdiv:	
  3267  007A                     wireReadDataBlock@reg:	
  3268                           ; 1 bytes @ 0xA
  3269                           
  3270                           
  3271                           ; 1 bytes @ 0xA
  3272  007A                     	ds	1
  3273  007B                     ??_processGestureData:	
  3274  007B                     wireReadDataBlock@j:	
  3275                           ; 1 bytes @ 0xB
  3276                           
  3277                           
  3278                           ; 1 bytes @ 0xB
  3279  007B                     	ds	2
  3280  007D                     ??_INTERRUPT_InterruptManager:	
  3281                           
  3282                           	psect	cstackBANK0
  3283  0020                     __pcstackBANK0:	
  3284                           ; 1 bytes @ 0xD
  3285                           
  3286  0020                     ___awdiv@counter:	
  3287  0020                     _decodeGesture$780:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290                           
  3291                           ; 2 bytes @ 0x0
  3292  0020                     	ds	1
  3293  0021                     ___awdiv@sign:	
  3294                           
  3295                           ; 1 bytes @ 0x1
  3296  0021                     	ds	1
  3297  0022                     _decodeGesture$781:	
  3298  0022                     ___awdiv@quotient:	
  3299                           ; 2 bytes @ 0x2
  3300                           
  3301                           
  3302                           ; 2 bytes @ 0x2
  3303  0022                     	ds	2
  3304  0024                     processGestureData@ud_ratio_first:	
  3305  0024                     _decodeGesture$782:	
  3306                           ; 2 bytes @ 0x4
  3307                           
  3308                           
  3309                           ; 2 bytes @ 0x4
  3310  0024                     	ds	2
  3311  0026                     processGestureData@lr_ratio_first:	
  3312  0026                     _decodeGesture$783:	
  3313                           ; 2 bytes @ 0x6
  3314                           
  3315                           
  3316                           ; 2 bytes @ 0x6
  3317  0026                     	ds	2
  3318  0028                     processGestureData@ud_ratio_last:	
  3319  0028                     _decodeGesture$784:	
  3320                           ; 2 bytes @ 0x8
  3321                           
  3322                           
  3323                           ; 2 bytes @ 0x8
  3324  0028                     	ds	2
  3325  002A                     processGestureData@lr_ratio_last:	
  3326  002A                     _decodeGesture$785:	
  3327                           ; 2 bytes @ 0xA
  3328                           
  3329                           
  3330                           ; 2 bytes @ 0xA
  3331  002A                     	ds	2
  3332  002C                     _processGestureData$775:	
  3333  002C                     _decodeGesture$786:	
  3334                           ; 2 bytes @ 0xC
  3335                           
  3336                           
  3337                           ; 2 bytes @ 0xC
  3338  002C                     	ds	2
  3339  002E                     _processGestureData$776:	
  3340  002E                     _decodeGesture$787:	
  3341                           ; 2 bytes @ 0xE
  3342                           
  3343                           
  3344                           ; 2 bytes @ 0xE
  3345  002E                     	ds	2
  3346  0030                     _processGestureData$777:	
  3347                           
  3348                           ; 2 bytes @ 0x10
  3349  0030                     	ds	2
  3350  0032                     _processGestureData$778:	
  3351                           
  3352                           ; 2 bytes @ 0x12
  3353  0032                     	ds	2
  3354  0034                     processGestureData@u_last:	
  3355                           
  3356                           ; 1 bytes @ 0x14
  3357  0034                     	ds	1
  3358  0035                     processGestureData@d_last:	
  3359                           
  3360                           ; 1 bytes @ 0x15
  3361  0035                     	ds	1
  3362  0036                     processGestureData@l_last:	
  3363                           
  3364                           ; 1 bytes @ 0x16
  3365  0036                     	ds	1
  3366  0037                     processGestureData@r_last:	
  3367                           
  3368                           ; 1 bytes @ 0x17
  3369  0037                     	ds	1
  3370  0038                     processGestureData@u_first:	
  3371                           
  3372                           ; 1 bytes @ 0x18
  3373  0038                     	ds	1
  3374  0039                     processGestureData@d_first:	
  3375                           
  3376                           ; 1 bytes @ 0x19
  3377  0039                     	ds	1
  3378  003A                     processGestureData@l_first:	
  3379                           
  3380                           ; 1 bytes @ 0x1A
  3381  003A                     	ds	1
  3382  003B                     processGestureData@r_first:	
  3383                           
  3384                           ; 1 bytes @ 0x1B
  3385  003B                     	ds	1
  3386  003C                     processGestureData@ud_delta:	
  3387                           
  3388                           ; 2 bytes @ 0x1C
  3389  003C                     	ds	2
  3390  003E                     processGestureData@lr_delta:	
  3391                           
  3392                           ; 2 bytes @ 0x1E
  3393  003E                     	ds	2
  3394  0040                     processGestureData@i:	
  3395                           
  3396                           ; 2 bytes @ 0x20
  3397  0040                     	ds	2
  3398  0042                     ?_readGesture:	
  3399                           
  3400                           ; 2 bytes @ 0x22
  3401  0042                     	ds	2
  3402  0044                     ??_readGesture:	
  3403                           
  3404                           ; 1 bytes @ 0x24
  3405  0044                     	ds	2
  3406  0046                     readGesture@motion:	
  3407                           
  3408                           ; 2 bytes @ 0x26
  3409  0046                     	ds	2
  3410  0048                     readGesture@gstatus:	
  3411                           
  3412                           ; 1 bytes @ 0x28
  3413  0048                     	ds	1
  3414  0049                     readGesture@bytes_read:	
  3415                           
  3416                           ; 2 bytes @ 0x29
  3417  0049                     	ds	2
  3418  004B                     readGesture@fifo_level:	
  3419                           
  3420                           ; 1 bytes @ 0x2B
  3421  004B                     	ds	1
  3422  004C                     readGesture@i:	
  3423                           
  3424                           ; 2 bytes @ 0x2C
  3425  004C                     	ds	2
  3426  004E                     ??_handleGesture:	
  3427                           
  3428                           ; 1 bytes @ 0x2E
  3429  004E                     	ds	2
  3430                           
  3431                           	psect	maintext
  3432  0D61                     __pmaintext:	
  3433 ;;
  3434 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3435 ;;
  3436 ;; *************** function _main *****************
  3437 ;; Defined at:
  3438 ;;		line 63 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : B1F/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels required when called:   12
  3458 ;; This function calls:
  3459 ;;		_SYSTEM_Initialize
  3460 ;;		_enableGestureSensor
  3461 ;;		_enablePower
  3462 ;;		_i2c2_driver_setI2cISR
  3463 ;;		_initialize
  3464 ;; This function is called by:
  3465 ;;		Startup code after reset
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _main
  3471  0D61                     _main:	
  3472                           
  3473                           ;main.c: 66: SYSTEM_Initialize();
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3477  0D61  318C  24BF  318D   	fcall	_SYSTEM_Initialize
  3478                           
  3479                           ;main.c: 67: i2c2_driver_setI2cISR(handleGesture);
  3480  0D64  307F               	movlw	low _handleGesture
  3481  0D65  0023               	movlb	3	; select bank3
  3482  0D66  00A0               	movwf	i2c2_driver_setI2cISR@handler^(0+384)
  3483  0D67  3007               	movlw	high _handleGesture
  3484  0D68  00A1               	movwf	(i2c2_driver_setI2cISR@handler^(0+384)+1)
  3485  0D69  318C  24AC  318D   	fcall	_i2c2_driver_setI2cISR
  3486                           
  3487                           ;main.c: 69: initialize();
  3488  0D6C  3184  2485  318D   	fcall	_initialize
  3489                           
  3490                           ;main.c: 70: enablePower();
  3491  0D6F  318C  24CB  318D   	fcall	_enablePower
  3492                           
  3493                           ;main.c: 71: enableGestureSensor(1);
  3494  0D72  3001               	movlw	1
  3495  0D73  3186  2682  318D   	fcall	_enableGestureSensor
  3496                           
  3497                           ;main.c: 78: (INTCONbits.GIE = 1);
  3498  0D76  178B               	bsf	11,7	;volatile
  3499                           
  3500                           ;main.c: 81: (INTCONbits.PEIE = 1);
  3501  0D77  170B               	bsf	11,6	;volatile
  3502  0D78                     l321:	
  3503                           ;main.c: 90: while (1)
  3504                           
  3505                           
  3506                           ;main.c: 91: {
  3507  0D78  2D78               	goto	l321
  3508  0D79                     __end_of_main:	
  3509                           
  3510                           	psect	text1
  3511  0485                     __ptext1:	
  3512 ;; *************** function _initialize *****************
  3513 ;; Defined at:
  3514 ;;		line 21 in file "APDS9960.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  id              1   12[BANK3 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:   10
  3535 ;; This function calls:
  3536 ;;		_i2c2_driver_open
  3537 ;;		_setAmbientLightGain
  3538 ;;		_setGestureEnterThresh
  3539 ;;		_setGestureExitThresh
  3540 ;;		_setGestureGain
  3541 ;;		_setGestureIntEnable
  3542 ;;		_setGestureLEDDrive
  3543 ;;		_setGestureWaitTime
  3544 ;;		_setLEDDrive
  3545 ;;		_setLightIntHighThreshold
  3546 ;;		_setLightIntLowThreshold
  3547 ;;		_setMode
  3548 ;;		_setProxIntHighThresh
  3549 ;;		_setProxIntLowThresh
  3550 ;;		_setProximityGain
  3551 ;;		_wireReadDataByte
  3552 ;;		_wireWriteDataByte
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _initialize
  3560  0485                     _initialize:	
  3561                           
  3562                           ;APDS9960.c: 26: i2c2_driver_open();
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  3566  0485  318C  24B5  3184   	fcall	_i2c2_driver_open
  3567                           
  3568                           ;APDS9960.c: 29: id = wireReadDataByte(0x92);
  3569  0488  3092               	movlw	146
  3570  0489  318D  25EC  3184   	fcall	_wireReadDataByte
  3571  048C  0023               	movlb	3	; select bank3
  3572  048D  00AB               	movwf	??_initialize^(0+384)
  3573  048E  082B               	movf	??_initialize^(0+384),w
  3574  048F  00AC               	movwf	initialize@id^(0+384)
  3575                           
  3576                           ;APDS9960.c: 32: if( !(id == 0xAB ||id == 0x9C ) )
  3577  0490  30AB               	movlw	171
  3578  0491  062C               	xorwf	initialize@id^(0+384),w
  3579  0492  1903               	btfsc	3,2
  3580  0493  2C98               	goto	l3475
  3581  0494  309C               	movlw	156
  3582  0495  062C               	xorwf	initialize@id^(0+384),w
  3583  0496  1D03               	btfss	3,2
  3584  0497  0008               	return
  3585  0498                     l3475:	
  3586                           
  3587                           ;APDS9960.c: 35: };APDS9960.c: 37: setMode(7, 0);
  3588  0498  01A6               	clrf	setMode@enable^(0+384)
  3589  0499  3007               	movlw	7
  3590  049A  3187  2730  3184   	fcall	_setMode
  3591                           
  3592                           ;APDS9960.c: 39: wireWriteDataByte(0x81, 219);
  3593  049D  30DB               	movlw	219
  3594  049E  0023               	movlb	3	; select bank3
  3595  049F  00AB               	movwf	??_initialize^(0+384)
  3596  04A0  082B               	movf	??_initialize^(0+384),w
  3597  04A1  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3598  04A2  3081               	movlw	129
  3599  04A3  318D  2594  3184   	fcall	_wireWriteDataByte
  3600                           
  3601                           ;APDS9960.c: 40: wireWriteDataByte(0x83, 246);
  3602  04A6  30F6               	movlw	246
  3603  04A7  0023               	movlb	3	; select bank3
  3604  04A8  00AB               	movwf	??_initialize^(0+384)
  3605  04A9  082B               	movf	??_initialize^(0+384),w
  3606  04AA  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3607  04AB  3083               	movlw	131
  3608  04AC  318D  2594  3184   	fcall	_wireWriteDataByte
  3609                           
  3610                           ;APDS9960.c: 41: wireWriteDataByte(0x8E, 0x87);
  3611  04AF  3087               	movlw	135
  3612  04B0  0023               	movlb	3	; select bank3
  3613  04B1  00AB               	movwf	??_initialize^(0+384)
  3614  04B2  082B               	movf	??_initialize^(0+384),w
  3615  04B3  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3616  04B4  308E               	movlw	142
  3617  04B5  318D  2594  3184   	fcall	_wireWriteDataByte
  3618                           
  3619                           ;APDS9960.c: 42: wireWriteDataByte(0x9D, 0) ;
  3620  04B8  0023               	movlb	3	; select bank3
  3621  04B9  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3622  04BA  309D               	movlw	157
  3623  04BB  318D  2594  3184   	fcall	_wireWriteDataByte
  3624                           
  3625                           ;APDS9960.c: 43: wireWriteDataByte(0x9E, 0) ;
  3626  04BE  0023               	movlb	3	; select bank3
  3627  04BF  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3628  04C0  309E               	movlw	158
  3629  04C1  318D  2594  3184   	fcall	_wireWriteDataByte
  3630                           
  3631                           ;APDS9960.c: 44: wireWriteDataByte(0x8D, 0x60) ;
  3632  04C4  3060               	movlw	96
  3633  04C5  0023               	movlb	3	; select bank3
  3634  04C6  00AB               	movwf	??_initialize^(0+384)
  3635  04C7  082B               	movf	??_initialize^(0+384),w
  3636  04C8  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3637  04C9  308D               	movlw	141
  3638  04CA  318D  2594  3184   	fcall	_wireWriteDataByte
  3639                           
  3640                           ;APDS9960.c: 45: setLEDDrive(0);
  3641  04CD  3000               	movlw	0
  3642  04CE  318E  26AB  3184   	fcall	_setLEDDrive
  3643                           
  3644                           ;APDS9960.c: 46: setProximityGain(2);
  3645  04D1  3002               	movlw	2
  3646  04D2  318E  26D4  3184   	fcall	_setProximityGain
  3647                           
  3648                           ;APDS9960.c: 47: setAmbientLightGain(1);
  3649  04D5  3001               	movlw	1
  3650  04D6  318D  25AF  3184   	fcall	_setAmbientLightGain
  3651                           
  3652                           ;APDS9960.c: 48: if( !setProxIntLowThresh(0) ) {
  3653  04D9  3000               	movlw	0
  3654  04DA  318D  2524  3184   	fcall	_setProxIntLowThresh
  3655  04DD  3A00               	xorlw	0
  3656  04DE  1903               	btfsc	3,2
  3657  04DF  0008               	return
  3658                           
  3659                           ;APDS9960.c: 51: };APDS9960.c: 52: if( !setProxIntHighThresh(50) ) {
  3660  04E0  3032               	movlw	50
  3661  04E1  318D  2511  3184   	fcall	_setProxIntHighThresh
  3662  04E4  3A00               	xorlw	0
  3663  04E5  1903               	btfsc	3,2
  3664  04E6  0008               	return
  3665                           
  3666                           ;APDS9960.c: 55: };APDS9960.c: 57: if( !setLightIntLowThreshold(0xFFFF) ) {
  3667  04E7  30FF               	movlw	255
  3668  04E8  0023               	movlb	3	; select bank3
  3669  04E9  00A5               	movwf	setLightIntLowThreshold@threshold^(0+384)
  3670  04EA  30FF               	movlw	255
  3671  04EB  00A6               	movwf	(setLightIntLowThreshold@threshold^(0+384)+1)
  3672  04EC  318E  2684  3184   	fcall	_setLightIntLowThreshold
  3673  04EF  3A00               	xorlw	0
  3674  04F0  1903               	btfsc	3,2
  3675  04F1  0008               	return
  3676                           
  3677                           ;APDS9960.c: 59: };APDS9960.c: 60: if( !setLightIntHighThreshold(0) ) {
  3678  04F2  3000               	movlw	0
  3679  04F3  0023               	movlb	3	; select bank3
  3680  04F4  00A5               	movwf	setLightIntHighThreshold@threshold^(0+384)
  3681  04F5  00A6               	movwf	(setLightIntHighThreshold@threshold+1)^(0+384)
  3682  04F6  318E  265D  3184   	fcall	_setLightIntHighThreshold
  3683  04F9  3A00               	xorlw	0
  3684  04FA  1903               	btfsc	3,2
  3685  04FB  0008               	return
  3686                           
  3687                           ;APDS9960.c: 63: };APDS9960.c: 64: if( !wireWriteDataByte(0x8C, 0x11) ) {
  3688  04FC  3011               	movlw	17
  3689  04FD  0023               	movlb	3	; select bank3
  3690  04FE  00AB               	movwf	??_initialize^(0+384)
  3691  04FF  082B               	movf	??_initialize^(0+384),w
  3692  0500  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3693  0501  308C               	movlw	140
  3694  0502  318D  2594  3184   	fcall	_wireWriteDataByte
  3695  0505  0023               	movlb	3	; select bank3
  3696  0506  0821               	movf	?_wireWriteDataByte^(0+384),w
  3697  0507  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3698  0508  1903               	btfsc	3,2
  3699  0509  0008               	return
  3700                           
  3701                           ;APDS9960.c: 67: };APDS9960.c: 68: if( !wireWriteDataByte(0x90, 0x01) ) {
  3702  050A  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3703  050B  0AA1               	incf	wireWriteDataByte@val^(0+384),f
  3704  050C  3090               	movlw	144
  3705  050D  318D  2594  3184   	fcall	_wireWriteDataByte
  3706  0510  0023               	movlb	3	; select bank3
  3707  0511  0821               	movf	?_wireWriteDataByte^(0+384),w
  3708  0512  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3709  0513  1903               	btfsc	3,2
  3710  0514  0008               	return
  3711                           
  3712                           ;APDS9960.c: 70: };APDS9960.c: 71: if( !wireWriteDataByte(0x9F, 0) ) {
  3713  0515  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3714  0516  309F               	movlw	159
  3715  0517  318D  2594  3184   	fcall	_wireWriteDataByte
  3716  051A  0023               	movlb	3	; select bank3
  3717  051B  0821               	movf	?_wireWriteDataByte^(0+384),w
  3718  051C  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3719  051D  1903               	btfsc	3,2
  3720  051E  0008               	return
  3721                           
  3722                           ;APDS9960.c: 73: };APDS9960.c: 75: if( !setGestureEnterThresh(40) ) {
  3723  051F  3028               	movlw	40
  3724  0520  318C  24EB  3184   	fcall	_setGestureEnterThresh
  3725  0523  3A00               	xorlw	0
  3726  0524  1903               	btfsc	3,2
  3727  0525  0008               	return
  3728                           
  3729                           ;APDS9960.c: 78: };APDS9960.c: 79: if( !setGestureExitThresh(30) ) {
  3730  0526  301E               	movlw	30
  3731  0527  318C  24FE  3184   	fcall	_setGestureExitThresh
  3732  052A  3A00               	xorlw	0
  3733  052B  1903               	btfsc	3,2
  3734  052C  0008               	return
  3735                           
  3736                           ;APDS9960.c: 81: };APDS9960.c: 82: if( !wireWriteDataByte(0xA2, 0x40) ) {
  3737  052D  3040               	movlw	64
  3738  052E  0023               	movlb	3	; select bank3
  3739  052F  00AB               	movwf	??_initialize^(0+384)
  3740  0530  082B               	movf	??_initialize^(0+384),w
  3741  0531  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3742  0532  30A2               	movlw	162
  3743  0533  318D  2594  3184   	fcall	_wireWriteDataByte
  3744  0536  0023               	movlb	3	; select bank3
  3745  0537  0821               	movf	?_wireWriteDataByte^(0+384),w
  3746  0538  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3747  0539  1903               	btfsc	3,2
  3748  053A  0008               	return
  3749                           
  3750                           ;APDS9960.c: 84: };APDS9960.c: 85: if( !setGestureGain(2) ) {
  3751  053B  3002               	movlw	2
  3752  053C  318F  2787  3184   	fcall	_setGestureGain
  3753  053F  3A00               	xorlw	0
  3754  0540  1903               	btfsc	3,2
  3755  0541  0008               	return
  3756                           
  3757                           ;APDS9960.c: 87: };APDS9960.c: 88: if( !setGestureLEDDrive(0) ) {
  3758  0542  3000               	movlw	0
  3759  0543  3187  27CE  3184   	fcall	_setGestureLEDDrive
  3760  0546  3A00               	xorlw	0
  3761  0547  1903               	btfsc	3,2
  3762  0548  0008               	return
  3763                           
  3764                           ;APDS9960.c: 90: };APDS9960.c: 91: if( !setGestureWaitTime(1) ) {
  3765  0549  3001               	movlw	1
  3766  054A  318E  2636  3184   	fcall	_setGestureWaitTime
  3767  054D  3A00               	xorlw	0
  3768  054E  1903               	btfsc	3,2
  3769  054F  0008               	return
  3770                           
  3771                           ;APDS9960.c: 93: };APDS9960.c: 94: if( !wireWriteDataByte(0xA4, 0) ) {
  3772  0550  0023               	movlb	3	; select bank3
  3773  0551  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3774  0552  30A4               	movlw	164
  3775  0553  318D  2594  3184   	fcall	_wireWriteDataByte
  3776  0556  0023               	movlb	3	; select bank3
  3777  0557  0821               	movf	?_wireWriteDataByte^(0+384),w
  3778  0558  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3779  0559  1903               	btfsc	3,2
  3780  055A  0008               	return
  3781                           
  3782                           ;APDS9960.c: 96: };APDS9960.c: 97: if( !wireWriteDataByte(0xA5, 0) ) {
  3783  055B  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3784  055C  30A5               	movlw	165
  3785  055D  318D  2594  3184   	fcall	_wireWriteDataByte
  3786  0560  0023               	movlb	3	; select bank3
  3787  0561  0821               	movf	?_wireWriteDataByte^(0+384),w
  3788  0562  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3789  0563  1903               	btfsc	3,2
  3790  0564  0008               	return
  3791                           
  3792                           ;APDS9960.c: 99: };APDS9960.c: 100: if( !wireWriteDataByte(0xA7, 0) ) {
  3793  0565  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3794  0566  30A7               	movlw	167
  3795  0567  318D  2594  3184   	fcall	_wireWriteDataByte
  3796  056A  0023               	movlb	3	; select bank3
  3797  056B  0821               	movf	?_wireWriteDataByte^(0+384),w
  3798  056C  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3799  056D  1903               	btfsc	3,2
  3800  056E  0008               	return
  3801                           
  3802                           ;APDS9960.c: 102: };APDS9960.c: 103: if( !wireWriteDataByte(0xA9, 0) ) {
  3803  056F  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3804  0570  30A9               	movlw	169
  3805  0571  318D  2594  3184   	fcall	_wireWriteDataByte
  3806  0574  0023               	movlb	3	; select bank3
  3807  0575  0821               	movf	?_wireWriteDataByte^(0+384),w
  3808  0576  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3809  0577  1903               	btfsc	3,2
  3810  0578  0008               	return
  3811                           
  3812                           ;APDS9960.c: 105: };APDS9960.c: 106: if( !wireWriteDataByte(0xA6, 0xC9) ) {
  3813  0579  30C9               	movlw	201
  3814  057A  00AB               	movwf	??_initialize^(0+384)
  3815  057B  082B               	movf	??_initialize^(0+384),w
  3816  057C  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3817  057D  30A6               	movlw	166
  3818  057E  318D  2594  3184   	fcall	_wireWriteDataByte
  3819  0581  0023               	movlb	3	; select bank3
  3820  0582  0821               	movf	?_wireWriteDataByte^(0+384),w
  3821  0583  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3822  0584  1903               	btfsc	3,2
  3823  0585  0008               	return
  3824                           
  3825                           ;APDS9960.c: 108: };APDS9960.c: 109: if( !wireWriteDataByte(0xAA, 0) ) {
  3826  0586  01A1               	clrf	wireWriteDataByte@val^(0+384)
  3827  0587  30AA               	movlw	170
  3828  0588  318D  2594  3184   	fcall	_wireWriteDataByte
  3829  058B  0023               	movlb	3	; select bank3
  3830  058C  0821               	movf	?_wireWriteDataByte^(0+384),w
  3831  058D  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3832  058E  1903               	btfsc	3,2
  3833  058F  0008               	return
  3834                           
  3835                           ;APDS9960.c: 111: };APDS9960.c: 112: if( !setGestureIntEnable(0) ) {
  3836  0590  3000               	movlw	0
  3837  0591  318E  26FD         	fcall	_setGestureIntEnable
  3838  0593  0008               	return
  3839  0594                     __end_of_initialize:	
  3840                           
  3841                           	psect	text2
  3842  0ED4                     __ptext2:	
  3843 ;; *************** function _setProximityGain *****************
  3844 ;; Defined at:
  3845 ;;		line 188 in file "APDS9960.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  drive           1    wreg     unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  drive           1    8[BANK3 ] unsigned char 
  3850 ;;  val             1    7[BANK3 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      unsigned char 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, pclath, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3862 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3863 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3864 ;;Total ram usage:        4 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    8
  3867 ;; This function calls:
  3868 ;;		_wireReadDataByte
  3869 ;;		_wireWriteDataByte
  3870 ;; This function is called by:
  3871 ;;		_initialize
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _setProximityGain
  3877  0ED4                     _setProximityGain:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _setProximityGain: [wreg+status,2+status,0+pclath+cstack]
  3881                           ;setProximityGain@drive stored from wreg
  3882  0ED4  0023               	movlb	3	; select bank3
  3883  0ED5  00A8               	movwf	setProximityGain@drive^(0+384)
  3884                           
  3885                           ;APDS9960.c: 190: uint8_t val;;APDS9960.c: 193: val=wireReadDataByte(0x8F);
  3886  0ED6  308F               	movlw	143
  3887  0ED7  318D  25EC  318E   	fcall	_wireReadDataByte
  3888  0EDA  0023               	movlb	3	; select bank3
  3889  0EDB  00A5               	movwf	??_setProximityGain^(0+384)
  3890  0EDC  0825               	movf	??_setProximityGain^(0+384),w
  3891  0EDD  00A7               	movwf	setProximityGain@val^(0+384)
  3892                           
  3893                           ;APDS9960.c: 195: drive &= 0b00000011;
  3894  0EDE  3003               	movlw	3
  3895  0EDF  00A5               	movwf	??_setProximityGain^(0+384)
  3896  0EE0  0825               	movf	??_setProximityGain^(0+384),w
  3897  0EE1  05A8               	andwf	setProximityGain@drive^(0+384),f
  3898                           
  3899                           ;APDS9960.c: 196: drive = drive << 2;
  3900  0EE2  0828               	movf	setProximityGain@drive^(0+384),w
  3901  0EE3  00A5               	movwf	??_setProximityGain^(0+384)
  3902  0EE4  3001               	movlw	1
  3903  0EE5                     u2795:	
  3904  0EE5  35A5               	lslf	??_setProximityGain^(0+384),f
  3905  0EE6  3EFF               	addlw	-1
  3906  0EE7  1D03               	skipz
  3907  0EE8  2EE5               	goto	u2795
  3908  0EE9  3525               	lslf	??_setProximityGain^(0+384),w
  3909  0EEA  00A6               	movwf	(??_setProximityGain+1)^(0+384)
  3910  0EEB  0826               	movf	(??_setProximityGain+1)^(0+384),w
  3911  0EEC  00A8               	movwf	setProximityGain@drive^(0+384)
  3912                           
  3913                           ;APDS9960.c: 197: val &= 0b11110011;
  3914  0EED  30F3               	movlw	243
  3915  0EEE  00A5               	movwf	??_setProximityGain^(0+384)
  3916  0EEF  0825               	movf	??_setProximityGain^(0+384),w
  3917  0EF0  05A7               	andwf	setProximityGain@val^(0+384),f
  3918                           
  3919                           ;APDS9960.c: 198: val |= drive;
  3920  0EF1  0828               	movf	setProximityGain@drive^(0+384),w
  3921  0EF2  00A5               	movwf	??_setProximityGain^(0+384)
  3922  0EF3  0825               	movf	??_setProximityGain^(0+384),w
  3923  0EF4  04A7               	iorwf	setProximityGain@val^(0+384),f
  3924                           
  3925                           ;APDS9960.c: 201: if( !wireWriteDataByte(0x8F, val) ) {
  3926  0EF5  0827               	movf	setProximityGain@val^(0+384),w
  3927  0EF6  00A5               	movwf	??_setProximityGain^(0+384)
  3928  0EF7  0825               	movf	??_setProximityGain^(0+384),w
  3929  0EF8  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3930  0EF9  308F               	movlw	143
  3931  0EFA  318D  2594         	fcall	_wireWriteDataByte
  3932  0EFC  0008               	return
  3933  0EFD                     __end_of_setProximityGain:	
  3934                           
  3935                           	psect	text3
  3936  0D24                     __ptext3:	
  3937 ;; *************** function _setProxIntLowThresh *****************
  3938 ;; Defined at:
  3939 ;;		line 230 in file "APDS9960.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  threshold       1    wreg     unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  threshold       1    6[BANK3 ] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, pclath, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    8
  3960 ;; This function calls:
  3961 ;;		_wireWriteDataByte
  3962 ;; This function is called by:
  3963 ;;		_initialize
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           
  3968                           ;psect for function _setProxIntLowThresh
  3969  0D24                     _setProxIntLowThresh:	
  3970                           
  3971                           ;incstack = 0
  3972                           ; Regs used in _setProxIntLowThresh: [wreg+status,2+status,0+pclath+cstack]
  3973                           ;setProxIntLowThresh@threshold stored from wreg
  3974  0D24  0023               	movlb	3	; select bank3
  3975  0D25  00A6               	movwf	setProxIntLowThresh@threshold^(0+384)
  3976                           
  3977                           ;APDS9960.c: 232: if( !wireWriteDataByte(0x89, threshold) ) {
  3978  0D26  0826               	movf	setProxIntLowThresh@threshold^(0+384),w
  3979  0D27  00A5               	movwf	??_setProxIntLowThresh^(0+384)
  3980  0D28  0825               	movf	??_setProxIntLowThresh^(0+384),w
  3981  0D29  00A1               	movwf	wireWriteDataByte@val^(0+384)
  3982  0D2A  3089               	movlw	137
  3983  0D2B  318D  2594  318D   	fcall	_wireWriteDataByte
  3984  0D2E  0023               	movlb	3	; select bank3
  3985  0D2F  0821               	movf	?_wireWriteDataByte^(0+384),w
  3986  0D30  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  3987  0D31  1D03               	btfss	3,2
  3988  0D32  2D35               	goto	l3269
  3989                           
  3990                           ;APDS9960.c: 233: return 0;
  3991  0D33  3000               	movlw	0
  3992  0D34  0008               	return
  3993  0D35                     l3269:	
  3994                           
  3995                           ;APDS9960.c: 234: };APDS9960.c: 236: return 1;
  3996  0D35  3001               	movlw	1
  3997  0D36  0008               	return
  3998  0D37                     __end_of_setProxIntLowThresh:	
  3999                           
  4000                           	psect	text4
  4001  0D11                     __ptext4:	
  4002 ;; *************** function _setProxIntHighThresh *****************
  4003 ;; Defined at:
  4004 ;;		line 240 in file "APDS9960.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  threshold       1    wreg     unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  threshold       1    6[BANK3 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4022 ;;Total ram usage:        2 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    8
  4025 ;; This function calls:
  4026 ;;		_wireWriteDataByte
  4027 ;; This function is called by:
  4028 ;;		_initialize
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _setProxIntHighThresh
  4034  0D11                     _setProxIntHighThresh:	
  4035                           
  4036                           ;incstack = 0
  4037                           ; Regs used in _setProxIntHighThresh: [wreg+status,2+status,0+pclath+cstack]
  4038                           ;setProxIntHighThresh@threshold stored from wreg
  4039  0D11  0023               	movlb	3	; select bank3
  4040  0D12  00A6               	movwf	setProxIntHighThresh@threshold^(0+384)
  4041                           
  4042                           ;APDS9960.c: 242: if( !wireWriteDataByte(0x8B, threshold) ) {
  4043  0D13  0826               	movf	setProxIntHighThresh@threshold^(0+384),w
  4044  0D14  00A5               	movwf	??_setProxIntHighThresh^(0+384)
  4045  0D15  0825               	movf	??_setProxIntHighThresh^(0+384),w
  4046  0D16  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4047  0D17  308B               	movlw	139
  4048  0D18  318D  2594  318D   	fcall	_wireWriteDataByte
  4049  0D1B  0023               	movlb	3	; select bank3
  4050  0D1C  0821               	movf	?_wireWriteDataByte^(0+384),w
  4051  0D1D  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4052  0D1E  1D03               	btfss	3,2
  4053  0D1F  2D22               	goto	l3279
  4054                           
  4055                           ;APDS9960.c: 243: return 0;
  4056  0D20  3000               	movlw	0
  4057  0D21  0008               	return
  4058  0D22                     l3279:	
  4059                           
  4060                           ;APDS9960.c: 244: };APDS9960.c: 246: return 1;
  4061  0D22  3001               	movlw	1
  4062  0D23  0008               	return
  4063  0D24                     __end_of_setProxIntHighThresh:	
  4064                           
  4065                           	psect	text5
  4066  0E84                     __ptext5:	
  4067 ;; *************** function _setLightIntLowThreshold *****************
  4068 ;; Defined at:
  4069 ;;		line 250 in file "APDS9960.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  threshold       2    5[BANK3 ] unsigned int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  val_high        1    9[BANK3 ] unsigned char 
  4074 ;;  val_low         1    8[BANK3 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      unsigned char 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4084 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  4088 ;;Total ram usage:        5 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    8
  4091 ;; This function calls:
  4092 ;;		_wireWriteDataByte
  4093 ;; This function is called by:
  4094 ;;		_initialize
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _setLightIntLowThreshold
  4100  0E84                     _setLightIntLowThreshold:	
  4101                           
  4102                           ;APDS9960.c: 252: uint8_t val_low;;APDS9960.c: 253: uint8_t val_high;;APDS9960.c: 256: v
      +                          al_low = threshold & 0x00FF;
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _setLightIntLowThreshold: [wreg+status,2+status,0+pclath+cstack]
  4106  0E84  0023               	movlb	3	; select bank3
  4107  0E85  0825               	movf	setLightIntLowThreshold@threshold^(0+384),w
  4108  0E86  00A7               	movwf	??_setLightIntLowThreshold^(0+384)
  4109  0E87  0827               	movf	??_setLightIntLowThreshold^(0+384),w
  4110  0E88  00A8               	movwf	setLightIntLowThreshold@val_low^(0+384)
  4111                           
  4112                           ;APDS9960.c: 257: val_high = (threshold & 0xFF00) >> 8;
  4113  0E89  0826               	movf	(setLightIntLowThreshold@threshold+1)^(0+384),w
  4114  0E8A  00A7               	movwf	??_setLightIntLowThreshold^(0+384)
  4115  0E8B  0827               	movf	??_setLightIntLowThreshold^(0+384),w
  4116  0E8C  00A9               	movwf	setLightIntLowThreshold@val_high^(0+384)
  4117                           
  4118                           ;APDS9960.c: 260: if( !wireWriteDataByte(0x84, val_low) ) {
  4119  0E8D  0828               	movf	setLightIntLowThreshold@val_low^(0+384),w
  4120  0E8E  00A7               	movwf	??_setLightIntLowThreshold^(0+384)
  4121  0E8F  0827               	movf	??_setLightIntLowThreshold^(0+384),w
  4122  0E90  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4123  0E91  3084               	movlw	132
  4124  0E92  318D  2594  318E   	fcall	_wireWriteDataByte
  4125  0E95  0023               	movlb	3	; select bank3
  4126  0E96  0821               	movf	?_wireWriteDataByte^(0+384),w
  4127  0E97  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4128  0E98  1D03               	btfss	3,2
  4129  0E99  2E9C               	goto	l3293
  4130  0E9A                     l3289:	
  4131                           
  4132                           ;APDS9960.c: 261: return 0;
  4133  0E9A  3000               	movlw	0
  4134  0E9B  0008               	return
  4135  0E9C                     l3293:	
  4136                           
  4137                           ;APDS9960.c: 262: };APDS9960.c: 265: if( !wireWriteDataByte(0x85, val_high) ) {
  4138  0E9C  0829               	movf	setLightIntLowThreshold@val_high^(0+384),w
  4139  0E9D  00A7               	movwf	??_setLightIntLowThreshold^(0+384)
  4140  0E9E  0827               	movf	??_setLightIntLowThreshold^(0+384),w
  4141  0E9F  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4142  0EA0  3085               	movlw	133
  4143  0EA1  318D  2594  318E   	fcall	_wireWriteDataByte
  4144  0EA4  0023               	movlb	3	; select bank3
  4145  0EA5  0821               	movf	?_wireWriteDataByte^(0+384),w
  4146  0EA6  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4147  0EA7  1903               	btfsc	3,2
  4148  0EA8  2E9A               	goto	l3289
  4149                           
  4150                           ;APDS9960.c: 267: };APDS9960.c: 269: return 1;
  4151  0EA9  3001               	movlw	1
  4152  0EAA  0008               	return
  4153  0EAB                     __end_of_setLightIntLowThreshold:	
  4154                           
  4155                           	psect	text6
  4156  0E5D                     __ptext6:	
  4157 ;; *************** function _setLightIntHighThreshold *****************
  4158 ;; Defined at:
  4159 ;;		line 273 in file "APDS9960.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  threshold       2    5[BANK3 ] unsigned int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  val_high        1    9[BANK3 ] unsigned char 
  4164 ;;  val_low         1    8[BANK3 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      unsigned char 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4174 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  4178 ;;Total ram usage:        5 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    8
  4181 ;; This function calls:
  4182 ;;		_wireWriteDataByte
  4183 ;; This function is called by:
  4184 ;;		_initialize
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _setLightIntHighThreshold
  4190  0E5D                     _setLightIntHighThreshold:	
  4191                           
  4192                           ;APDS9960.c: 275: uint8_t val_low;;APDS9960.c: 276: uint8_t val_high;;APDS9960.c: 279: v
      +                          al_low = threshold & 0x00FF;
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in _setLightIntHighThreshold: [wreg+status,2+status,0+pclath+cstack]
  4196  0E5D  0023               	movlb	3	; select bank3
  4197  0E5E  0825               	movf	setLightIntHighThreshold@threshold^(0+384),w
  4198  0E5F  00A7               	movwf	??_setLightIntHighThreshold^(0+384)
  4199  0E60  0827               	movf	??_setLightIntHighThreshold^(0+384),w
  4200  0E61  00A8               	movwf	setLightIntHighThreshold@val_low^(0+384)
  4201                           
  4202                           ;APDS9960.c: 280: val_high = (threshold & 0xFF00) >> 8;
  4203  0E62  0826               	movf	(setLightIntHighThreshold@threshold+1)^(0+384),w
  4204  0E63  00A7               	movwf	??_setLightIntHighThreshold^(0+384)
  4205  0E64  0827               	movf	??_setLightIntHighThreshold^(0+384),w
  4206  0E65  00A9               	movwf	setLightIntHighThreshold@val_high^(0+384)
  4207                           
  4208                           ;APDS9960.c: 283: if( !wireWriteDataByte(0x86, val_low) ) {
  4209  0E66  0828               	movf	setLightIntHighThreshold@val_low^(0+384),w
  4210  0E67  00A7               	movwf	??_setLightIntHighThreshold^(0+384)
  4211  0E68  0827               	movf	??_setLightIntHighThreshold^(0+384),w
  4212  0E69  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4213  0E6A  3086               	movlw	134
  4214  0E6B  318D  2594  318E   	fcall	_wireWriteDataByte
  4215  0E6E  0023               	movlb	3	; select bank3
  4216  0E6F  0821               	movf	?_wireWriteDataByte^(0+384),w
  4217  0E70  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4218  0E71  1D03               	btfss	3,2
  4219  0E72  2E75               	goto	l3313
  4220  0E73                     l3309:	
  4221                           
  4222                           ;APDS9960.c: 284: return 0;
  4223  0E73  3000               	movlw	0
  4224  0E74  0008               	return
  4225  0E75                     l3313:	
  4226                           
  4227                           ;APDS9960.c: 285: };APDS9960.c: 288: if( !wireWriteDataByte(0x87, val_high) ) {
  4228  0E75  0829               	movf	setLightIntHighThreshold@val_high^(0+384),w
  4229  0E76  00A7               	movwf	??_setLightIntHighThreshold^(0+384)
  4230  0E77  0827               	movf	??_setLightIntHighThreshold^(0+384),w
  4231  0E78  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4232  0E79  3087               	movlw	135
  4233  0E7A  318D  2594  318E   	fcall	_wireWriteDataByte
  4234  0E7D  0023               	movlb	3	; select bank3
  4235  0E7E  0821               	movf	?_wireWriteDataByte^(0+384),w
  4236  0E7F  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4237  0E80  1903               	btfsc	3,2
  4238  0E81  2E73               	goto	l3309
  4239                           
  4240                           ;APDS9960.c: 290: };APDS9960.c: 292: return 1;
  4241  0E82  3001               	movlw	1
  4242  0E83  0008               	return
  4243  0E84                     __end_of_setLightIntHighThreshold:	
  4244                           
  4245                           	psect	text7
  4246  0EAB                     __ptext7:	
  4247 ;; *************** function _setLEDDrive *****************
  4248 ;; Defined at:
  4249 ;;		line 166 in file "APDS9960.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  drive           1    wreg     unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  drive           1    8[BANK3 ] unsigned char 
  4254 ;;  val             1    7[BANK3 ] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      unsigned char 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  4268 ;;Total ram usage:        4 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    8
  4271 ;; This function calls:
  4272 ;;		_wireReadDataByte
  4273 ;;		_wireWriteDataByte
  4274 ;; This function is called by:
  4275 ;;		_initialize
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _setLEDDrive
  4281  0EAB                     _setLEDDrive:	
  4282                           
  4283                           ;incstack = 0
  4284                           ; Regs used in _setLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4285                           ;setLEDDrive@drive stored from wreg
  4286  0EAB  0023               	movlb	3	; select bank3
  4287  0EAC  00A8               	movwf	setLEDDrive@drive^(0+384)
  4288                           
  4289                           ;APDS9960.c: 168: uint8_t val;;APDS9960.c: 171: val=wireReadDataByte(0x8F);
  4290  0EAD  308F               	movlw	143
  4291  0EAE  318D  25EC  318E   	fcall	_wireReadDataByte
  4292  0EB1  0023               	movlb	3	; select bank3
  4293  0EB2  00A5               	movwf	??_setLEDDrive^(0+384)
  4294  0EB3  0825               	movf	??_setLEDDrive^(0+384),w
  4295  0EB4  00A7               	movwf	setLEDDrive@val^(0+384)
  4296                           
  4297                           ;APDS9960.c: 174: drive &= 0b00000011;
  4298  0EB5  3003               	movlw	3
  4299  0EB6  00A5               	movwf	??_setLEDDrive^(0+384)
  4300  0EB7  0825               	movf	??_setLEDDrive^(0+384),w
  4301  0EB8  05A8               	andwf	setLEDDrive@drive^(0+384),f
  4302                           
  4303                           ;APDS9960.c: 175: drive = drive << 6;
  4304  0EB9  0828               	movf	setLEDDrive@drive^(0+384),w
  4305  0EBA  00A5               	movwf	??_setLEDDrive^(0+384)
  4306  0EBB  3005               	movlw	5
  4307  0EBC                     u2785:	
  4308  0EBC  35A5               	lslf	??_setLEDDrive^(0+384),f
  4309  0EBD  3EFF               	addlw	-1
  4310  0EBE  1D03               	skipz
  4311  0EBF  2EBC               	goto	u2785
  4312  0EC0  3525               	lslf	??_setLEDDrive^(0+384),w
  4313  0EC1  00A6               	movwf	(??_setLEDDrive+1)^(0+384)
  4314  0EC2  0826               	movf	(??_setLEDDrive+1)^(0+384),w
  4315  0EC3  00A8               	movwf	setLEDDrive@drive^(0+384)
  4316                           
  4317                           ;APDS9960.c: 176: val &= 0b00111111;
  4318  0EC4  303F               	movlw	63
  4319  0EC5  00A5               	movwf	??_setLEDDrive^(0+384)
  4320  0EC6  0825               	movf	??_setLEDDrive^(0+384),w
  4321  0EC7  05A7               	andwf	setLEDDrive@val^(0+384),f
  4322                           
  4323                           ;APDS9960.c: 177: val |= drive;
  4324  0EC8  0828               	movf	setLEDDrive@drive^(0+384),w
  4325  0EC9  00A5               	movwf	??_setLEDDrive^(0+384)
  4326  0ECA  0825               	movf	??_setLEDDrive^(0+384),w
  4327  0ECB  04A7               	iorwf	setLEDDrive@val^(0+384),f
  4328                           
  4329                           ;APDS9960.c: 180: if( !wireWriteDataByte(0x8F, val) ) {
  4330  0ECC  0827               	movf	setLEDDrive@val^(0+384),w
  4331  0ECD  00A5               	movwf	??_setLEDDrive^(0+384)
  4332  0ECE  0825               	movf	??_setLEDDrive^(0+384),w
  4333  0ECF  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4334  0ED0  308F               	movlw	143
  4335  0ED1  318D  2594         	fcall	_wireWriteDataByte
  4336  0ED3  0008               	return
  4337  0ED4                     __end_of_setLEDDrive:	
  4338                           
  4339                           	psect	text8
  4340  0E36                     __ptext8:	
  4341 ;; *************** function _setGestureWaitTime *****************
  4342 ;; Defined at:
  4343 ;;		line 362 in file "APDS9960.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  time            1    wreg     unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  time            1    6[BANK3 ] unsigned char 
  4348 ;;  val             1    7[BANK3 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4361 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4362 ;;Total ram usage:        3 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    8
  4365 ;; This function calls:
  4366 ;;		_wireReadDataByte
  4367 ;;		_wireWriteDataByte
  4368 ;; This function is called by:
  4369 ;;		_initialize
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _setGestureWaitTime
  4375  0E36                     _setGestureWaitTime:	
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _setGestureWaitTime: [wreg+status,2+status,0+pclath+cstack]
  4379                           ;setGestureWaitTime@time stored from wreg
  4380  0E36  0023               	movlb	3	; select bank3
  4381  0E37  00A6               	movwf	setGestureWaitTime@time^(0+384)
  4382                           
  4383                           ;APDS9960.c: 364: uint8_t val;;APDS9960.c: 367: val = wireReadDataByte(0xA3);
  4384  0E38  30A3               	movlw	163
  4385  0E39  318D  25EC  318E   	fcall	_wireReadDataByte
  4386  0E3C  0023               	movlb	3	; select bank3
  4387  0E3D  00A5               	movwf	??_setGestureWaitTime^(0+384)
  4388  0E3E  0825               	movf	??_setGestureWaitTime^(0+384),w
  4389  0E3F  00A7               	movwf	setGestureWaitTime@val^(0+384)
  4390                           
  4391                           ;APDS9960.c: 370: time &= 0b00000111;
  4392  0E40  3007               	movlw	7
  4393  0E41  00A5               	movwf	??_setGestureWaitTime^(0+384)
  4394  0E42  0825               	movf	??_setGestureWaitTime^(0+384),w
  4395  0E43  05A6               	andwf	setGestureWaitTime@time^(0+384),f
  4396                           
  4397                           ;APDS9960.c: 371: val &= 0b11111000;
  4398  0E44  30F8               	movlw	248
  4399  0E45  00A5               	movwf	??_setGestureWaitTime^(0+384)
  4400  0E46  0825               	movf	??_setGestureWaitTime^(0+384),w
  4401  0E47  05A7               	andwf	setGestureWaitTime@val^(0+384),f
  4402                           
  4403                           ;APDS9960.c: 372: val |= time;
  4404  0E48  0826               	movf	setGestureWaitTime@time^(0+384),w
  4405  0E49  00A5               	movwf	??_setGestureWaitTime^(0+384)
  4406  0E4A  0825               	movf	??_setGestureWaitTime^(0+384),w
  4407  0E4B  04A7               	iorwf	setGestureWaitTime@val^(0+384),f
  4408                           
  4409                           ;APDS9960.c: 375: if( !wireWriteDataByte(0xA3, val) ) {
  4410  0E4C  0827               	movf	setGestureWaitTime@val^(0+384),w
  4411  0E4D  00A5               	movwf	??_setGestureWaitTime^(0+384)
  4412  0E4E  0825               	movf	??_setGestureWaitTime^(0+384),w
  4413  0E4F  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4414  0E50  30A3               	movlw	163
  4415  0E51  318D  2594  318E   	fcall	_wireWriteDataByte
  4416  0E54  0023               	movlb	3	; select bank3
  4417  0E55  0821               	movf	?_wireWriteDataByte^(0+384),w
  4418  0E56  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4419  0E57  1D03               	btfss	3,2
  4420  0E58  2E5B               	goto	l3393
  4421                           
  4422                           ;APDS9960.c: 376: return 0;
  4423  0E59  3000               	movlw	0
  4424  0E5A  0008               	return
  4425  0E5B                     l3393:	
  4426                           
  4427                           ;APDS9960.c: 377: };APDS9960.c: 379: return 1;
  4428  0E5B  3001               	movlw	1
  4429  0E5C  0008               	return
  4430  0E5D                     __end_of_setGestureWaitTime:	
  4431                           
  4432                           	psect	text9
  4433  07CE                     __ptext9:	
  4434 ;; *************** function _setGestureLEDDrive *****************
  4435 ;; Defined at:
  4436 ;;		line 339 in file "APDS9960.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  drive           1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  drive           1    8[BANK3 ] unsigned char 
  4441 ;;  val             1    7[BANK3 ] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      unsigned char 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4453 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  4455 ;;Total ram usage:        4 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    8
  4458 ;; This function calls:
  4459 ;;		_wireReadDataByte
  4460 ;;		_wireWriteDataByte
  4461 ;; This function is called by:
  4462 ;;		_initialize
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           
  4467                           ;psect for function _setGestureLEDDrive
  4468  07CE                     _setGestureLEDDrive:	
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _setGestureLEDDrive: [wreg+status,2+status,0+pclath+cstack]
  4472                           ;setGestureLEDDrive@drive stored from wreg
  4473  07CE  0023               	movlb	3	; select bank3
  4474  07CF  00A8               	movwf	setGestureLEDDrive@drive^(0+384)
  4475                           
  4476                           ;APDS9960.c: 341: uint8_t val;;APDS9960.c: 344: val = wireReadDataByte(0xA3);
  4477  07D0  30A3               	movlw	163
  4478  07D1  318D  25EC  3187   	fcall	_wireReadDataByte
  4479  07D4  0023               	movlb	3	; select bank3
  4480  07D5  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4481  07D6  0825               	movf	??_setGestureLEDDrive^(0+384),w
  4482  07D7  00A7               	movwf	setGestureLEDDrive@val^(0+384)
  4483                           
  4484                           ;APDS9960.c: 348: drive &= 0b00000011;
  4485  07D8  3003               	movlw	3
  4486  07D9  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4487  07DA  0825               	movf	??_setGestureLEDDrive^(0+384),w
  4488  07DB  05A8               	andwf	setGestureLEDDrive@drive^(0+384),f
  4489                           
  4490                           ;APDS9960.c: 349: drive = drive << 3;
  4491  07DC  0828               	movf	setGestureLEDDrive@drive^(0+384),w
  4492  07DD  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4493  07DE  3002               	movlw	2
  4494  07DF                     u2905:	
  4495  07DF  35A5               	lslf	??_setGestureLEDDrive^(0+384),f
  4496  07E0  3EFF               	addlw	-1
  4497  07E1  1D03               	skipz
  4498  07E2  2FDF               	goto	u2905
  4499  07E3  3525               	lslf	??_setGestureLEDDrive^(0+384),w
  4500  07E4  00A6               	movwf	(??_setGestureLEDDrive+1)^(0+384)
  4501  07E5  0826               	movf	(??_setGestureLEDDrive+1)^(0+384),w
  4502  07E6  00A8               	movwf	setGestureLEDDrive@drive^(0+384)
  4503                           
  4504                           ;APDS9960.c: 350: val &= 0b11100111;
  4505  07E7  30E7               	movlw	231
  4506  07E8  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4507  07E9  0825               	movf	??_setGestureLEDDrive^(0+384),w
  4508  07EA  05A7               	andwf	setGestureLEDDrive@val^(0+384),f
  4509                           
  4510                           ;APDS9960.c: 351: val |= drive;
  4511  07EB  0828               	movf	setGestureLEDDrive@drive^(0+384),w
  4512  07EC  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4513  07ED  0825               	movf	??_setGestureLEDDrive^(0+384),w
  4514  07EE  04A7               	iorwf	setGestureLEDDrive@val^(0+384),f
  4515                           
  4516                           ;APDS9960.c: 354: if( !wireWriteDataByte(0xA3, val) ) {
  4517  07EF  0827               	movf	setGestureLEDDrive@val^(0+384),w
  4518  07F0  00A5               	movwf	??_setGestureLEDDrive^(0+384)
  4519  07F1  0825               	movf	??_setGestureLEDDrive^(0+384),w
  4520  07F2  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4521  07F3  30A3               	movlw	163
  4522  07F4  318D  2594  3187   	fcall	_wireWriteDataByte
  4523  07F7  0023               	movlb	3	; select bank3
  4524  07F8  0821               	movf	?_wireWriteDataByte^(0+384),w
  4525  07F9  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4526  07FA  1D03               	btfss	3,2
  4527  07FB  2FFE               	goto	l3375
  4528                           
  4529                           ;APDS9960.c: 355: return 0;
  4530  07FC  3000               	movlw	0
  4531  07FD  0008               	return
  4532  07FE                     l3375:	
  4533                           
  4534                           ;APDS9960.c: 356: };APDS9960.c: 358: return 1;
  4535  07FE  3001               	movlw	1
  4536  07FF  0008               	return
  4537  0800                     __end_of_setGestureLEDDrive:	
  4538                           
  4539                           	psect	text10
  4540  0F87                     __ptext10:	
  4541 ;; *************** function _setGestureGain *****************
  4542 ;; Defined at:
  4543 ;;		line 316 in file "APDS9960.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  gain            1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  gain            1    8[BANK3 ] unsigned char 
  4548 ;;  val             1    7[BANK3 ] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  4562 ;;Total ram usage:        4 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    8
  4565 ;; This function calls:
  4566 ;;		_wireReadDataByte
  4567 ;;		_wireWriteDataByte
  4568 ;; This function is called by:
  4569 ;;		_initialize
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _setGestureGain
  4575  0F87                     _setGestureGain:	
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _setGestureGain: [wreg+status,2+status,0+pclath+cstack]
  4579                           ;setGestureGain@gain stored from wreg
  4580  0F87  0023               	movlb	3	; select bank3
  4581  0F88  00A8               	movwf	setGestureGain@gain^(0+384)
  4582                           
  4583                           ;APDS9960.c: 318: uint8_t val;;APDS9960.c: 321: val = wireReadDataByte(0xA3);
  4584  0F89  30A3               	movlw	163
  4585  0F8A  318D  25EC  318F   	fcall	_wireReadDataByte
  4586  0F8D  0023               	movlb	3	; select bank3
  4587  0F8E  00A5               	movwf	??_setGestureGain^(0+384)
  4588  0F8F  0825               	movf	??_setGestureGain^(0+384),w
  4589  0F90  00A7               	movwf	setGestureGain@val^(0+384)
  4590                           
  4591                           ;APDS9960.c: 325: gain &= 0b00000011;
  4592  0F91  3003               	movlw	3
  4593  0F92  00A5               	movwf	??_setGestureGain^(0+384)
  4594  0F93  0825               	movf	??_setGestureGain^(0+384),w
  4595  0F94  05A8               	andwf	setGestureGain@gain^(0+384),f
  4596                           
  4597                           ;APDS9960.c: 326: gain = gain << 5;
  4598  0F95  0828               	movf	setGestureGain@gain^(0+384),w
  4599  0F96  00A5               	movwf	??_setGestureGain^(0+384)
  4600  0F97  3004               	movlw	4
  4601  0F98                     u2885:	
  4602  0F98  35A5               	lslf	??_setGestureGain^(0+384),f
  4603  0F99  3EFF               	addlw	-1
  4604  0F9A  1D03               	skipz
  4605  0F9B  2F98               	goto	u2885
  4606  0F9C  3525               	lslf	??_setGestureGain^(0+384),w
  4607  0F9D  00A6               	movwf	(??_setGestureGain+1)^(0+384)
  4608  0F9E  0826               	movf	(??_setGestureGain+1)^(0+384),w
  4609  0F9F  00A8               	movwf	setGestureGain@gain^(0+384)
  4610                           
  4611                           ;APDS9960.c: 327: val &= 0b10011111;
  4612  0FA0  309F               	movlw	159
  4613  0FA1  00A5               	movwf	??_setGestureGain^(0+384)
  4614  0FA2  0825               	movf	??_setGestureGain^(0+384),w
  4615  0FA3  05A7               	andwf	setGestureGain@val^(0+384),f
  4616                           
  4617                           ;APDS9960.c: 328: val |= gain;
  4618  0FA4  0828               	movf	setGestureGain@gain^(0+384),w
  4619  0FA5  00A5               	movwf	??_setGestureGain^(0+384)
  4620  0FA6  0825               	movf	??_setGestureGain^(0+384),w
  4621  0FA7  04A7               	iorwf	setGestureGain@val^(0+384),f
  4622                           
  4623                           ;APDS9960.c: 331: if( !wireWriteDataByte(0xA3, val) ) {
  4624  0FA8  0827               	movf	setGestureGain@val^(0+384),w
  4625  0FA9  00A5               	movwf	??_setGestureGain^(0+384)
  4626  0FAA  0825               	movf	??_setGestureGain^(0+384),w
  4627  0FAB  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4628  0FAC  30A3               	movlw	163
  4629  0FAD  318D  2594  318F   	fcall	_wireWriteDataByte
  4630  0FB0  0023               	movlb	3	; select bank3
  4631  0FB1  0821               	movf	?_wireWriteDataByte^(0+384),w
  4632  0FB2  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4633  0FB3  1D03               	btfss	3,2
  4634  0FB4  2FB7               	goto	l3357
  4635                           
  4636                           ;APDS9960.c: 332: return 0;
  4637  0FB5  3000               	movlw	0
  4638  0FB6  0008               	return
  4639  0FB7                     l3357:	
  4640                           
  4641                           ;APDS9960.c: 333: };APDS9960.c: 335: return 1;
  4642  0FB7  3001               	movlw	1
  4643  0FB8  0008               	return
  4644  0FB9                     __end_of_setGestureGain:	
  4645                           
  4646                           	psect	text11
  4647  0CFE                     __ptext11:	
  4648 ;; *************** function _setGestureExitThresh *****************
  4649 ;; Defined at:
  4650 ;;		line 306 in file "APDS9960.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  threshold       1    wreg     unsigned char 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  threshold       1    6[BANK3 ] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    8
  4671 ;; This function calls:
  4672 ;;		_wireWriteDataByte
  4673 ;; This function is called by:
  4674 ;;		_initialize
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _setGestureExitThresh
  4680  0CFE                     _setGestureExitThresh:	
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _setGestureExitThresh: [wreg+status,2+status,0+pclath+cstack]
  4684                           ;setGestureExitThresh@threshold stored from wreg
  4685  0CFE  0023               	movlb	3	; select bank3
  4686  0CFF  00A6               	movwf	setGestureExitThresh@threshold^(0+384)
  4687                           
  4688                           ;APDS9960.c: 308: if( !wireWriteDataByte(0xA1, threshold) ) {
  4689  0D00  0826               	movf	setGestureExitThresh@threshold^(0+384),w
  4690  0D01  00A5               	movwf	??_setGestureExitThresh^(0+384)
  4691  0D02  0825               	movf	??_setGestureExitThresh^(0+384),w
  4692  0D03  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4693  0D04  30A1               	movlw	161
  4694  0D05  318D  2594  318C   	fcall	_wireWriteDataByte
  4695  0D08  0023               	movlb	3	; select bank3
  4696  0D09  0821               	movf	?_wireWriteDataByte^(0+384),w
  4697  0D0A  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4698  0D0B  1D03               	btfss	3,2
  4699  0D0C  2D0F               	goto	l3339
  4700                           
  4701                           ;APDS9960.c: 309: return 0;
  4702  0D0D  3000               	movlw	0
  4703  0D0E  0008               	return
  4704  0D0F                     l3339:	
  4705                           
  4706                           ;APDS9960.c: 310: };APDS9960.c: 312: return 1;
  4707  0D0F  3001               	movlw	1
  4708  0D10  0008               	return
  4709  0D11                     __end_of_setGestureExitThresh:	
  4710                           
  4711                           	psect	text12
  4712  0CEB                     __ptext12:	
  4713 ;; *************** function _setGestureEnterThresh *****************
  4714 ;; Defined at:
  4715 ;;		line 296 in file "APDS9960.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  threshold       1    wreg     unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  threshold       1    6[BANK3 ] unsigned char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      unsigned char 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, pclath, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4733 ;;Total ram usage:        2 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    8
  4736 ;; This function calls:
  4737 ;;		_wireWriteDataByte
  4738 ;; This function is called by:
  4739 ;;		_initialize
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function _setGestureEnterThresh
  4745  0CEB                     _setGestureEnterThresh:	
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _setGestureEnterThresh: [wreg+status,2+status,0+pclath+cstack]
  4749                           ;setGestureEnterThresh@threshold stored from wreg
  4750  0CEB  0023               	movlb	3	; select bank3
  4751  0CEC  00A6               	movwf	setGestureEnterThresh@threshold^(0+384)
  4752                           
  4753                           ;APDS9960.c: 298: if( !wireWriteDataByte(0xA0, threshold) ) {
  4754  0CED  0826               	movf	setGestureEnterThresh@threshold^(0+384),w
  4755  0CEE  00A5               	movwf	??_setGestureEnterThresh^(0+384)
  4756  0CEF  0825               	movf	??_setGestureEnterThresh^(0+384),w
  4757  0CF0  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4758  0CF1  30A0               	movlw	160
  4759  0CF2  318D  2594  318C   	fcall	_wireWriteDataByte
  4760  0CF5  0023               	movlb	3	; select bank3
  4761  0CF6  0821               	movf	?_wireWriteDataByte^(0+384),w
  4762  0CF7  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  4763  0CF8  1D03               	btfss	3,2
  4764  0CF9  2CFC               	goto	l3329
  4765                           
  4766                           ;APDS9960.c: 299: return 0;
  4767  0CFA  3000               	movlw	0
  4768  0CFB  0008               	return
  4769  0CFC                     l3329:	
  4770                           
  4771                           ;APDS9960.c: 300: };APDS9960.c: 302: return 1;
  4772  0CFC  3001               	movlw	1
  4773  0CFD  0008               	return
  4774  0CFE                     __end_of_setGestureEnterThresh:	
  4775                           
  4776                           	psect	text13
  4777  0DAF                     __ptext13:	
  4778 ;; *************** function _setAmbientLightGain *****************
  4779 ;; Defined at:
  4780 ;;		line 209 in file "APDS9960.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  drive           1    wreg     unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  drive           1    6[BANK3 ] unsigned char 
  4785 ;;  val             1    7[BANK3 ] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      unsigned char 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0, pclath, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4799 ;;Total ram usage:        3 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    8
  4802 ;; This function calls:
  4803 ;;		_wireReadDataByte
  4804 ;;		_wireWriteDataByte
  4805 ;; This function is called by:
  4806 ;;		_initialize
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _setAmbientLightGain
  4812  0DAF                     _setAmbientLightGain:	
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in _setAmbientLightGain: [wreg+status,2+status,0+pclath+cstack]
  4816                           ;setAmbientLightGain@drive stored from wreg
  4817  0DAF  0023               	movlb	3	; select bank3
  4818  0DB0  00A6               	movwf	setAmbientLightGain@drive^(0+384)
  4819                           
  4820                           ;APDS9960.c: 211: uint8_t val;;APDS9960.c: 214: val= wireReadDataByte(0x8F);
  4821  0DB1  308F               	movlw	143
  4822  0DB2  318D  25EC  318D   	fcall	_wireReadDataByte
  4823  0DB5  0023               	movlb	3	; select bank3
  4824  0DB6  00A5               	movwf	??_setAmbientLightGain^(0+384)
  4825  0DB7  0825               	movf	??_setAmbientLightGain^(0+384),w
  4826  0DB8  00A7               	movwf	setAmbientLightGain@val^(0+384)
  4827                           
  4828                           ;APDS9960.c: 217: drive &= 0b00000011;
  4829  0DB9  3003               	movlw	3
  4830  0DBA  00A5               	movwf	??_setAmbientLightGain^(0+384)
  4831  0DBB  0825               	movf	??_setAmbientLightGain^(0+384),w
  4832  0DBC  05A6               	andwf	setAmbientLightGain@drive^(0+384),f
  4833                           
  4834                           ;APDS9960.c: 218: val &= 0b11111100;
  4835  0DBD  30FC               	movlw	252
  4836  0DBE  00A5               	movwf	??_setAmbientLightGain^(0+384)
  4837  0DBF  0825               	movf	??_setAmbientLightGain^(0+384),w
  4838  0DC0  05A7               	andwf	setAmbientLightGain@val^(0+384),f
  4839                           
  4840                           ;APDS9960.c: 219: val |= drive;
  4841  0DC1  0826               	movf	setAmbientLightGain@drive^(0+384),w
  4842  0DC2  00A5               	movwf	??_setAmbientLightGain^(0+384)
  4843  0DC3  0825               	movf	??_setAmbientLightGain^(0+384),w
  4844  0DC4  04A7               	iorwf	setAmbientLightGain@val^(0+384),f
  4845                           
  4846                           ;APDS9960.c: 222: if( !wireWriteDataByte(0x8F, val) ) {
  4847  0DC5  0827               	movf	setAmbientLightGain@val^(0+384),w
  4848  0DC6  00A5               	movwf	??_setAmbientLightGain^(0+384)
  4849  0DC7  0825               	movf	??_setAmbientLightGain^(0+384),w
  4850  0DC8  00A1               	movwf	wireWriteDataByte@val^(0+384)
  4851  0DC9  308F               	movlw	143
  4852  0DCA  318D  2594         	fcall	_wireWriteDataByte
  4853  0DCC  0008               	return
  4854  0DCD                     __end_of_setAmbientLightGain:	
  4855                           
  4856                           	psect	text14
  4857  0CB5                     __ptext14:	
  4858 ;; *************** function _i2c2_driver_open *****************
  4859 ;; Defined at:
  4860 ;;		line 83 in file "mcc_generated_files/i2c2_driver.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, status,2
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    6
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_initialize
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _i2c2_driver_open
  4890  0CB5                     _i2c2_driver_open:	
  4891                           
  4892                           ;i2c2_driver.c: 85: if(!SSP2CON1bits.SSPEN)
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _i2c2_driver_open: [wreg+status,2]
  4896  0CB5  0024               	movlb	4	; select bank4
  4897  0CB6  1A9D               	btfsc	29,5	;volatile
  4898  0CB7  0008               	return
  4899                           
  4900                           ;i2c2_driver.c: 86: {;i2c2_driver.c: 87: SSP2STAT = 0x00;
  4901  0CB8  019C               	clrf	28	;volatile
  4902                           
  4903                           ;i2c2_driver.c: 88: SSP2CON1 = 0x28;
  4904  0CB9  3028               	movlw	40
  4905  0CBA  009D               	movwf	29	;volatile
  4906                           
  4907                           ;i2c2_driver.c: 89: SSP2CON2 = 0x00;
  4908  0CBB  019E               	clrf	30	;volatile
  4909                           
  4910                           ;i2c2_driver.c: 90: SSP2ADD = 0x9;
  4911  0CBC  3009               	movlw	9
  4912  0CBD  009A               	movwf	26	;volatile
  4913  0CBE  0008               	return
  4914  0CBF                     __end_of_i2c2_driver_open:	
  4915                           
  4916                           	psect	text15
  4917  0CAC                     __ptext15:	
  4918 ;; *************** function _i2c2_driver_setI2cISR *****************
  4919 ;; Defined at:
  4920 ;;		line 262 in file "mcc_generated_files/i2c2_driver.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  handler         2    0[BANK3 ] PTR FTN()void 
  4923 ;;		 -> handleGesture(1), 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4935 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4939 ;;Total ram usage:        2 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    6
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           
  4950                           ;psect for function _i2c2_driver_setI2cISR
  4951  0CAC                     _i2c2_driver_setI2cISR:	
  4952                           
  4953                           ;i2c2_driver.c: 263: i2c2_driver_i2cISR = handler;
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _i2c2_driver_setI2cISR: [wreg]
  4957  0CAC  0023               	movlb	3	; select bank3
  4958  0CAD  0821               	movf	(i2c2_driver_setI2cISR@handler+1)^(0+384),w
  4959  0CAE  0020               	movlb	0	; select bank0
  4960  0CAF  00E8               	movwf	_i2c2_driver_i2cISR+1
  4961  0CB0  0023               	movlb	3	; select bank3
  4962  0CB1  0820               	movf	i2c2_driver_setI2cISR@handler^(0+384),w
  4963  0CB2  0020               	movlb	0	; select bank0
  4964  0CB3  00E7               	movwf	_i2c2_driver_i2cISR
  4965  0CB4  0008               	return
  4966  0CB5                     __end_of_i2c2_driver_setI2cISR:	
  4967                           
  4968                           	psect	text16
  4969  0682                     __ptext16:	
  4970 ;; *************** function _enableGestureSensor *****************
  4971 ;; Defined at:
  4972 ;;		line 405 in file "APDS9960.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  interrupts      1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  interrupts      1   12[BANK3 ] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      unsigned char 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  4990 ;;Total ram usage:        2 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:   11
  4993 ;; This function calls:
  4994 ;;		_enablePower
  4995 ;;		_resetGestureParameters
  4996 ;;		_setGestureIntEnable
  4997 ;;		_setGestureMode
  4998 ;;		_setLEDBoost
  4999 ;;		_setMode
  5000 ;;		_wireWriteDataByte
  5001 ;; This function is called by:
  5002 ;;		_main
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function _enableGestureSensor
  5008  0682                     _enableGestureSensor:	
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _enableGestureSensor: [wreg+status,2+status,0+pclath+cstack]
  5012                           ;enableGestureSensor@interrupts stored from wreg
  5013  0682  0023               	movlb	3	; select bank3
  5014  0683  00AC               	movwf	enableGestureSensor@interrupts^(0+384)
  5015                           
  5016                           ;APDS9960.c: 414: resetGestureParameters();
  5017  0684  318D  254C  3186   	fcall	_resetGestureParameters
  5018                           
  5019                           ;APDS9960.c: 415: if( !wireWriteDataByte(0x83, 0xFF) ) {
  5020  0687  30FF               	movlw	255
  5021  0688  0023               	movlb	3	; select bank3
  5022  0689  00AB               	movwf	??_enableGestureSensor^(0+384)
  5023  068A  082B               	movf	??_enableGestureSensor^(0+384),w
  5024  068B  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5025  068C  3083               	movlw	131
  5026  068D  318D  2594  3186   	fcall	_wireWriteDataByte
  5027  0690  0023               	movlb	3	; select bank3
  5028  0691  0821               	movf	?_wireWriteDataByte^(0+384),w
  5029  0692  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5030  0693  1903               	btfsc	3,2
  5031  0694  0008               	return
  5032                           
  5033                           ;APDS9960.c: 417: };APDS9960.c: 418: if( !wireWriteDataByte(0x8E, 0x89) ) {
  5034  0695  3089               	movlw	137
  5035  0696  00AB               	movwf	??_enableGestureSensor^(0+384)
  5036  0697  082B               	movf	??_enableGestureSensor^(0+384),w
  5037  0698  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5038  0699  308E               	movlw	142
  5039  069A  318D  2594  3186   	fcall	_wireWriteDataByte
  5040  069D  0023               	movlb	3	; select bank3
  5041  069E  0821               	movf	?_wireWriteDataByte^(0+384),w
  5042  069F  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5043  06A0  1903               	btfsc	3,2
  5044  06A1  0008               	return
  5045                           
  5046                           ;APDS9960.c: 420: };APDS9960.c: 421: if( !setLEDBoost(3) ) {
  5047  06A2  3003               	movlw	3
  5048  06A3  318F  2755  3186   	fcall	_setLEDBoost
  5049  06A6  3A00               	xorlw	0
  5050  06A7  1903               	btfsc	3,2
  5051  06A8  0008               	return
  5052                           
  5053                           ;APDS9960.c: 423: };APDS9960.c: 424: if( interrupts ) {
  5054  06A9  0023               	movlb	3	; select bank3
  5055  06AA  082C               	movf	enableGestureSensor@interrupts^(0+384),w
  5056  06AB  1903               	btfsc	3,2
  5057  06AC  2EAF               	goto	l3575
  5058                           
  5059                           ;APDS9960.c: 425: if( !setGestureIntEnable(1) ) {
  5060  06AD  3001               	movlw	1
  5061  06AE  2EB0               	goto	L1
  5062  06AF                     l3575:	
  5063                           
  5064                           ;APDS9960.c: 429: if( !setGestureIntEnable(0) ) {
  5065  06AF  3000               	movlw	0
  5066  06B0                     L1:	
  5067  06B0  318E  26FD  3186   	fcall	_setGestureIntEnable
  5068  06B3  3A00               	xorlw	0
  5069  06B4  1903               	btfsc	3,2
  5070  06B5  0008               	return
  5071                           
  5072                           ;APDS9960.c: 431: };APDS9960.c: 432: };APDS9960.c: 433: if( !setGestureMode(1) ) {
  5073  06B6  3001               	movlw	1
  5074  06B7  318E  260F  3186   	fcall	_setGestureMode
  5075  06BA  3A00               	xorlw	0
  5076  06BB  1903               	btfsc	3,2
  5077  06BC  0008               	return
  5078                           
  5079                           ;APDS9960.c: 435: };APDS9960.c: 436: if( !enablePower() ){
  5080  06BD  318C  24CB  3186   	fcall	_enablePower
  5081  06C0  3A00               	xorlw	0
  5082  06C1  1903               	btfsc	3,2
  5083  06C2  0008               	return
  5084                           
  5085                           ;APDS9960.c: 438: };APDS9960.c: 439: if( !setMode(3, 1) ) {
  5086  06C3  0023               	movlb	3	; select bank3
  5087  06C4  01A6               	clrf	setMode@enable^(0+384)
  5088  06C5  0AA6               	incf	setMode@enable^(0+384),f
  5089  06C6  3003               	movlw	3
  5090  06C7  3187  2730  3186   	fcall	_setMode
  5091  06CA  3A00               	xorlw	0
  5092  06CB  1903               	btfsc	3,2
  5093  06CC  0008               	return
  5094                           
  5095                           ;APDS9960.c: 441: };APDS9960.c: 442: if( !setMode(2, 1) ) {
  5096  06CD  0023               	movlb	3	; select bank3
  5097  06CE  01A6               	clrf	setMode@enable^(0+384)
  5098  06CF  0AA6               	incf	setMode@enable^(0+384),f
  5099  06D0  3002               	movlw	2
  5100  06D1  3187  2730  3186   	fcall	_setMode
  5101  06D4  3A00               	xorlw	0
  5102  06D5  1903               	btfsc	3,2
  5103  06D6  0008               	return
  5104                           
  5105                           ;APDS9960.c: 444: };APDS9960.c: 445: if( !setMode(6, 1) ) {
  5106  06D7  0023               	movlb	3	; select bank3
  5107  06D8  01A6               	clrf	setMode@enable^(0+384)
  5108  06D9  0AA6               	incf	setMode@enable^(0+384),f
  5109  06DA  3006               	movlw	6
  5110  06DB  3187  2730         	fcall	_setMode
  5111  06DD  0008               	return
  5112  06DE                     __end_of_enableGestureSensor:	
  5113                           
  5114                           	psect	text17
  5115  0F55                     __ptext17:	
  5116 ;; *************** function _setLEDBoost *****************
  5117 ;; Defined at:
  5118 ;;		line 480 in file "APDS9960.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  boost           1    wreg     unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  boost           1    8[BANK3 ] unsigned char 
  5123 ;;  val             1    7[BANK3 ] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      unsigned char 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5137 ;;Total ram usage:        4 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    8
  5140 ;; This function calls:
  5141 ;;		_wireReadDataByte
  5142 ;;		_wireWriteDataByte
  5143 ;; This function is called by:
  5144 ;;		_enableGestureSensor
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _setLEDBoost
  5150  0F55                     _setLEDBoost:	
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in _setLEDBoost: [wreg+status,2+status,0+pclath+cstack]
  5154                           ;setLEDBoost@boost stored from wreg
  5155  0F55  0023               	movlb	3	; select bank3
  5156  0F56  00A8               	movwf	setLEDBoost@boost^(0+384)
  5157                           
  5158                           ;APDS9960.c: 482: uint8_t val;;APDS9960.c: 485: val=wireReadDataByte(0x90);
  5159  0F57  3090               	movlw	144
  5160  0F58  318D  25EC  318F   	fcall	_wireReadDataByte
  5161  0F5B  0023               	movlb	3	; select bank3
  5162  0F5C  00A5               	movwf	??_setLEDBoost^(0+384)
  5163  0F5D  0825               	movf	??_setLEDBoost^(0+384),w
  5164  0F5E  00A7               	movwf	setLEDBoost@val^(0+384)
  5165                           
  5166                           ;APDS9960.c: 488: boost &= 0b00000011;
  5167  0F5F  3003               	movlw	3
  5168  0F60  00A5               	movwf	??_setLEDBoost^(0+384)
  5169  0F61  0825               	movf	??_setLEDBoost^(0+384),w
  5170  0F62  05A8               	andwf	setLEDBoost@boost^(0+384),f
  5171                           
  5172                           ;APDS9960.c: 489: boost = boost << 4;
  5173  0F63  0828               	movf	setLEDBoost@boost^(0+384),w
  5174  0F64  00A5               	movwf	??_setLEDBoost^(0+384)
  5175  0F65  3003               	movlw	3
  5176  0F66                     u2945:	
  5177  0F66  35A5               	lslf	??_setLEDBoost^(0+384),f
  5178  0F67  3EFF               	addlw	-1
  5179  0F68  1D03               	skipz
  5180  0F69  2F66               	goto	u2945
  5181  0F6A  3525               	lslf	??_setLEDBoost^(0+384),w
  5182  0F6B  00A6               	movwf	(??_setLEDBoost+1)^(0+384)
  5183  0F6C  0826               	movf	(??_setLEDBoost+1)^(0+384),w
  5184  0F6D  00A8               	movwf	setLEDBoost@boost^(0+384)
  5185                           
  5186                           ;APDS9960.c: 490: val &= 0b11001111;
  5187  0F6E  30CF               	movlw	207
  5188  0F6F  00A5               	movwf	??_setLEDBoost^(0+384)
  5189  0F70  0825               	movf	??_setLEDBoost^(0+384),w
  5190  0F71  05A7               	andwf	setLEDBoost@val^(0+384),f
  5191                           
  5192                           ;APDS9960.c: 491: val |= boost;
  5193  0F72  0828               	movf	setLEDBoost@boost^(0+384),w
  5194  0F73  00A5               	movwf	??_setLEDBoost^(0+384)
  5195  0F74  0825               	movf	??_setLEDBoost^(0+384),w
  5196  0F75  04A7               	iorwf	setLEDBoost@val^(0+384),f
  5197                           
  5198                           ;APDS9960.c: 494: if( !wireWriteDataByte(0x90, val) ) {
  5199  0F76  0827               	movf	setLEDBoost@val^(0+384),w
  5200  0F77  00A5               	movwf	??_setLEDBoost^(0+384)
  5201  0F78  0825               	movf	??_setLEDBoost^(0+384),w
  5202  0F79  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5203  0F7A  3090               	movlw	144
  5204  0F7B  318D  2594  318F   	fcall	_wireWriteDataByte
  5205  0F7E  0023               	movlb	3	; select bank3
  5206  0F7F  0821               	movf	?_wireWriteDataByte^(0+384),w
  5207  0F80  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5208  0F81  1D03               	btfss	3,2
  5209  0F82  2F85               	goto	l3431
  5210                           
  5211                           ;APDS9960.c: 495: return 0;
  5212  0F83  3000               	movlw	0
  5213  0F84  0008               	return
  5214  0F85                     l3431:	
  5215                           
  5216                           ;APDS9960.c: 496: };APDS9960.c: 498: return 1;
  5217  0F85  3001               	movlw	1
  5218  0F86  0008               	return
  5219  0F87                     __end_of_setLEDBoost:	
  5220                           
  5221                           	psect	text18
  5222  0E0F                     __ptext18:	
  5223 ;; *************** function _setGestureMode *****************
  5224 ;; Defined at:
  5225 ;;		line 502 in file "APDS9960.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  mode            1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  mode            1    6[BANK3 ] unsigned char 
  5230 ;;  val             1    7[BANK3 ] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      unsigned char 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0, pclath, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5242 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5244 ;;Total ram usage:        3 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    8
  5247 ;; This function calls:
  5248 ;;		_wireReadDataByte
  5249 ;;		_wireWriteDataByte
  5250 ;; This function is called by:
  5251 ;;		_enableGestureSensor
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _setGestureMode
  5257  0E0F                     _setGestureMode:	
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in _setGestureMode: [wreg+status,2+status,0+pclath+cstack]
  5261                           ;setGestureMode@mode stored from wreg
  5262  0E0F  0023               	movlb	3	; select bank3
  5263  0E10  00A6               	movwf	setGestureMode@mode^(0+384)
  5264                           
  5265                           ;APDS9960.c: 504: uint8_t val;;APDS9960.c: 507: val = wireReadDataByte(0xAB);
  5266  0E11  30AB               	movlw	171
  5267  0E12  318D  25EC  318E   	fcall	_wireReadDataByte
  5268  0E15  0023               	movlb	3	; select bank3
  5269  0E16  00A5               	movwf	??_setGestureMode^(0+384)
  5270  0E17  0825               	movf	??_setGestureMode^(0+384),w
  5271  0E18  00A7               	movwf	setGestureMode@val^(0+384)
  5272                           
  5273                           ;APDS9960.c: 510: mode &= 0b00000001;
  5274  0E19  3001               	movlw	1
  5275  0E1A  00A5               	movwf	??_setGestureMode^(0+384)
  5276  0E1B  0825               	movf	??_setGestureMode^(0+384),w
  5277  0E1C  05A6               	andwf	setGestureMode@mode^(0+384),f
  5278                           
  5279                           ;APDS9960.c: 511: val &= 0b11111110;
  5280  0E1D  30FE               	movlw	254
  5281  0E1E  00A5               	movwf	??_setGestureMode^(0+384)
  5282  0E1F  0825               	movf	??_setGestureMode^(0+384),w
  5283  0E20  05A7               	andwf	setGestureMode@val^(0+384),f
  5284                           
  5285                           ;APDS9960.c: 512: val |= mode;
  5286  0E21  0826               	movf	setGestureMode@mode^(0+384),w
  5287  0E22  00A5               	movwf	??_setGestureMode^(0+384)
  5288  0E23  0825               	movf	??_setGestureMode^(0+384),w
  5289  0E24  04A7               	iorwf	setGestureMode@val^(0+384),f
  5290                           
  5291                           ;APDS9960.c: 515: if( !wireWriteDataByte(0xAB, val) ) {
  5292  0E25  0827               	movf	setGestureMode@val^(0+384),w
  5293  0E26  00A5               	movwf	??_setGestureMode^(0+384)
  5294  0E27  0825               	movf	??_setGestureMode^(0+384),w
  5295  0E28  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5296  0E29  30AB               	movlw	171
  5297  0E2A  318D  2594  318E   	fcall	_wireWriteDataByte
  5298  0E2D  0023               	movlb	3	; select bank3
  5299  0E2E  0821               	movf	?_wireWriteDataByte^(0+384),w
  5300  0E2F  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5301  0E30  1D03               	btfss	3,2
  5302  0E31  2E34               	goto	l3449
  5303                           
  5304                           ;APDS9960.c: 516: return 0;
  5305  0E32  3000               	movlw	0
  5306  0E33  0008               	return
  5307  0E34                     l3449:	
  5308                           
  5309                           ;APDS9960.c: 517: };APDS9960.c: 519: return 1;
  5310  0E34  3001               	movlw	1
  5311  0E35  0008               	return
  5312  0E36                     __end_of_setGestureMode:	
  5313                           
  5314                           	psect	text19
  5315  0EFD                     __ptext19:	
  5316 ;; *************** function _setGestureIntEnable *****************
  5317 ;; Defined at:
  5318 ;;		line 383 in file "APDS9960.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  enable          1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  enable          1    7[BANK3 ] unsigned char 
  5323 ;;  val             1    6[BANK3 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      unsigned char 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, pclath, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5337 ;;Total ram usage:        3 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    8
  5340 ;; This function calls:
  5341 ;;		_wireReadDataByte
  5342 ;;		_wireWriteDataByte
  5343 ;; This function is called by:
  5344 ;;		_initialize
  5345 ;;		_enableGestureSensor
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _setGestureIntEnable
  5351  0EFD                     _setGestureIntEnable:	
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _setGestureIntEnable: [wreg+status,2+status,0+pclath+cstack]
  5355                           ;setGestureIntEnable@enable stored from wreg
  5356  0EFD  0023               	movlb	3	; select bank3
  5357  0EFE  00A7               	movwf	setGestureIntEnable@enable^(0+384)
  5358                           
  5359                           ;APDS9960.c: 385: uint8_t val;;APDS9960.c: 388: val = wireReadDataByte(0xAB);
  5360  0EFF  30AB               	movlw	171
  5361  0F00  318D  25EC  318E   	fcall	_wireReadDataByte
  5362  0F03  0023               	movlb	3	; select bank3
  5363  0F04  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5364  0F05  0825               	movf	??_setGestureIntEnable^(0+384),w
  5365  0F06  00A6               	movwf	setGestureIntEnable@val^(0+384)
  5366                           
  5367                           ;APDS9960.c: 391: enable &= 0b00000001;
  5368  0F07  3001               	movlw	1
  5369  0F08  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5370  0F09  0825               	movf	??_setGestureIntEnable^(0+384),w
  5371  0F0A  05A7               	andwf	setGestureIntEnable@enable^(0+384),f
  5372                           
  5373                           ;APDS9960.c: 392: enable = enable << 1;
  5374  0F0B  3527               	lslf	setGestureIntEnable@enable^(0+384),w
  5375  0F0C  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5376  0F0D  0825               	movf	??_setGestureIntEnable^(0+384),w
  5377  0F0E  00A7               	movwf	setGestureIntEnable@enable^(0+384)
  5378                           
  5379                           ;APDS9960.c: 393: val &= 0b11111101;
  5380  0F0F  30FD               	movlw	253
  5381  0F10  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5382  0F11  0825               	movf	??_setGestureIntEnable^(0+384),w
  5383  0F12  05A6               	andwf	setGestureIntEnable@val^(0+384),f
  5384                           
  5385                           ;APDS9960.c: 394: val |= enable;
  5386  0F13  0827               	movf	setGestureIntEnable@enable^(0+384),w
  5387  0F14  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5388  0F15  0825               	movf	??_setGestureIntEnable^(0+384),w
  5389  0F16  04A6               	iorwf	setGestureIntEnable@val^(0+384),f
  5390                           
  5391                           ;APDS9960.c: 397: if( !wireWriteDataByte(0xAB, val) ) {
  5392  0F17  0826               	movf	setGestureIntEnable@val^(0+384),w
  5393  0F18  00A5               	movwf	??_setGestureIntEnable^(0+384)
  5394  0F19  0825               	movf	??_setGestureIntEnable^(0+384),w
  5395  0F1A  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5396  0F1B  30AB               	movlw	171
  5397  0F1C  318D  2594  318E   	fcall	_wireWriteDataByte
  5398  0F1F  0023               	movlb	3	; select bank3
  5399  0F20  0821               	movf	?_wireWriteDataByte^(0+384),w
  5400  0F21  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5401  0F22  1D03               	btfss	3,2
  5402  0F23  2F26               	goto	l3411
  5403                           
  5404                           ;APDS9960.c: 398: return 0;
  5405  0F24  3000               	movlw	0
  5406  0F25  0008               	return
  5407  0F26                     l3411:	
  5408                           
  5409                           ;APDS9960.c: 399: };APDS9960.c: 401: return 1;
  5410  0F26  3001               	movlw	1
  5411  0F27  0008               	return
  5412  0F28                     __end_of_setGestureIntEnable:	
  5413                           
  5414                           	psect	text20
  5415  0D4C                     __ptext20:	
  5416 ;; *************** function _resetGestureParameters *****************
  5417 ;; Defined at:
  5418 ;;		line 453 in file "APDS9960.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		status,2
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;Total ram usage:        0 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    6
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_enableGestureSensor
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           
  5447                           ;psect for function _resetGestureParameters
  5448  0D4C                     _resetGestureParameters:	
  5449                           
  5450                           ;APDS9960.c: 456: gesture_data_.index = 0;
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in _resetGestureParameters: [status,2]
  5454  0D4C  0024               	movlb	4	; select bank4
  5455  0D4D  01E0               	clrf	(_gesture_data_^(0+512)+64)
  5456                           
  5457                           ;APDS9960.c: 457: gesture_data_.total_gestures = 0;
  5458  0D4E  01E1               	clrf	(_gesture_data_^(0+512)+65)
  5459                           
  5460                           ;APDS9960.c: 459: gesture_ud_delta_ = 0;
  5461  0D4F  0020               	movlb	0	; select bank0
  5462  0D50  01E2               	clrf	_gesture_ud_delta_
  5463  0D51  01E3               	clrf	_gesture_ud_delta_+1
  5464                           
  5465                           ;APDS9960.c: 460: gesture_lr_delta_ = 0;
  5466  0D52  01E0               	clrf	_gesture_lr_delta_
  5467  0D53  01E1               	clrf	_gesture_lr_delta_+1
  5468                           
  5469                           ;APDS9960.c: 462: gesture_ud_count_ = 0;
  5470  0D54  01DE               	clrf	_gesture_ud_count_
  5471  0D55  01DF               	clrf	_gesture_ud_count_+1
  5472                           
  5473                           ;APDS9960.c: 463: gesture_lr_count_ = 0;
  5474  0D56  01DC               	clrf	_gesture_lr_count_
  5475  0D57  01DD               	clrf	_gesture_lr_count_+1
  5476                           
  5477                           ;APDS9960.c: 465: gesture_near_count_ = 0;
  5478  0D58  01DA               	clrf	_gesture_near_count_
  5479  0D59  01DB               	clrf	_gesture_near_count_+1
  5480                           
  5481                           ;APDS9960.c: 466: gesture_far_count_ = 0;
  5482  0D5A  01D8               	clrf	_gesture_far_count_
  5483  0D5B  01D9               	clrf	_gesture_far_count_+1
  5484                           
  5485                           ;APDS9960.c: 468: gesture_state_ = 0;
  5486  0D5C  01D6               	clrf	_gesture_state_
  5487  0D5D  01D7               	clrf	_gesture_state_+1
  5488                           
  5489                           ;APDS9960.c: 469: gesture_motion_ = DIR_NONE;
  5490  0D5E  01D4               	clrf	_gesture_motion_
  5491  0D5F  01D5               	clrf	_gesture_motion_+1
  5492  0D60  0008               	return
  5493  0D61                     __end_of_resetGestureParameters:	
  5494                           
  5495                           	psect	text21
  5496  0CCB                     __ptext21:	
  5497 ;; *************** function _enablePower *****************
  5498 ;; Defined at:
  5499 ;;		line 523 in file "APDS9960.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;		None
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, pclath, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;Total ram usage:        0 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   10
  5520 ;; This function calls:
  5521 ;;		_setMode
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;;		_enableGestureSensor
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _enablePower
  5530  0CCB                     _enablePower:	
  5531                           
  5532                           ;APDS9960.c: 525: if( !setMode(0, 1) ) {
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _enablePower: [wreg+status,2+status,0+pclath+cstack]
  5536  0CCB  0023               	movlb	3	; select bank3
  5537  0CCC  01A6               	clrf	setMode@enable^(0+384)
  5538  0CCD  0AA6               	incf	setMode@enable^(0+384),f
  5539  0CCE  3000               	movlw	0
  5540  0CCF  3187  2730  318C   	fcall	_setMode
  5541  0CD2  3A00               	xorlw	0
  5542  0CD3  1D03               	skipz
  5543  0CD4  2CD7               	goto	l3161
  5544                           
  5545                           ;APDS9960.c: 526: return 0;
  5546  0CD5  3000               	movlw	0
  5547  0CD6  0008               	return
  5548  0CD7                     l3161:	
  5549                           
  5550                           ;APDS9960.c: 527: };APDS9960.c: 529: return 1;
  5551  0CD7  3001               	movlw	1
  5552  0CD8  0008               	return
  5553  0CD9                     __end_of_enablePower:	
  5554                           
  5555                           	psect	text22
  5556  0730                     __ptext22:	
  5557 ;; *************** function _setMode *****************
  5558 ;; Defined at:
  5559 ;;		line 120 in file "APDS9960.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  mode            1    wreg     unsigned char 
  5562 ;;  enable          1    6[BANK3 ] unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  mode            1   10[BANK3 ] unsigned char 
  5565 ;;  reg_val         1    9[BANK3 ] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      unsigned char 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0, pclath, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5575 ;;      Params:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  5579 ;;Total ram usage:        5 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    9
  5582 ;; This function calls:
  5583 ;;		_getMode
  5584 ;;		_wireWriteDataByte
  5585 ;; This function is called by:
  5586 ;;		_initialize
  5587 ;;		_enableGestureSensor
  5588 ;;		_enablePower
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function _setMode
  5594  0730                     _setMode:	
  5595                           
  5596                           ;incstack = 0
  5597                           ; Regs used in _setMode: [wreg+status,2+status,0+pclath+cstack]
  5598                           ;setMode@mode stored from wreg
  5599  0730  0023               	movlb	3	; select bank3
  5600  0731  00AA               	movwf	setMode@mode^(0+384)
  5601                           
  5602                           ;APDS9960.c: 122: uint8_t reg_val;;APDS9960.c: 125: reg_val = getMode();
  5603  0732  318C  24A3  3187   	fcall	_getMode
  5604  0735  0023               	movlb	3	; select bank3
  5605  0736  00A7               	movwf	??_setMode^(0+384)
  5606  0737  0827               	movf	??_setMode^(0+384),w
  5607  0738  00A9               	movwf	setMode@reg_val^(0+384)
  5608                           
  5609                           ;APDS9960.c: 126: if( reg_val == 0xFF ) {
  5610  0739  0A29               	incf	setMode@reg_val^(0+384),w
  5611  073A  1D03               	btfss	3,2
  5612  073B  2F3E               	goto	l2763
  5613  073C                     l2759:	
  5614                           
  5615                           ;APDS9960.c: 127: return 0;
  5616  073C  3000               	movlw	0
  5617  073D  0008               	return
  5618  073E                     l2763:	
  5619                           
  5620                           ;APDS9960.c: 128: };APDS9960.c: 131: enable = enable & 0x01;
  5621  073E  0826               	movf	setMode@enable^(0+384),w
  5622  073F  3901               	andlw	1
  5623  0740  00A7               	movwf	??_setMode^(0+384)
  5624  0741  0827               	movf	??_setMode^(0+384),w
  5625  0742  00A6               	movwf	setMode@enable^(0+384)
  5626                           
  5627                           ;APDS9960.c: 132: if( mode >= 0 && mode <= 6 ) {
  5628  0743  3007               	movlw	7
  5629  0744  022A               	subwf	setMode@mode^(0+384),w
  5630  0745  1803               	skipnc
  5631  0746  2F63               	goto	l2773
  5632                           
  5633                           ;APDS9960.c: 133: if (enable) {
  5634  0747  0826               	movf	setMode@enable^(0+384),w
  5635  0748  1903               	btfsc	3,2
  5636  0749  2F56               	goto	l2771
  5637                           
  5638                           ;APDS9960.c: 134: reg_val |= (1 << mode);
  5639  074A  3001               	movlw	1
  5640  074B  00A7               	movwf	??_setMode^(0+384)
  5641  074C  0A2A               	incf	setMode@mode^(0+384),w
  5642  074D  2F4F               	goto	u1874
  5643  074E                     u1875:	
  5644  074E  35A7               	lslf	??_setMode^(0+384),f
  5645  074F                     u1874:	
  5646  074F  0B89               	decfsz	9,f
  5647  0750  2F4E               	goto	u1875
  5648  0751  0827               	movf	??_setMode^(0+384),w
  5649  0752  00A8               	movwf	(??_setMode+1)^(0+384)
  5650  0753  0828               	movf	(??_setMode+1)^(0+384),w
  5651  0754  04A9               	iorwf	setMode@reg_val^(0+384),f
  5652                           
  5653                           ;APDS9960.c: 135: } else {
  5654  0755  2F70               	goto	l2781
  5655  0756                     l2771:	
  5656                           
  5657                           ;APDS9960.c: 136: reg_val &= ~(1 << mode);
  5658  0756  3001               	movlw	1
  5659  0757  00A7               	movwf	??_setMode^(0+384)
  5660  0758  0A2A               	incf	setMode@mode^(0+384),w
  5661  0759  2F5B               	goto	u1884
  5662  075A                     u1885:	
  5663  075A  35A7               	lslf	??_setMode^(0+384),f
  5664  075B                     u1884:	
  5665  075B  0B89               	decfsz	9,f
  5666  075C  2F5A               	goto	u1885
  5667  075D  0827               	movf	??_setMode^(0+384),w
  5668  075E  3AFF               	xorlw	255
  5669  075F  00A8               	movwf	(??_setMode+1)^(0+384)
  5670  0760  0828               	movf	(??_setMode+1)^(0+384),w
  5671  0761  05A9               	andwf	setMode@reg_val^(0+384),f
  5672  0762  2F70               	goto	l2781
  5673  0763                     l2773:	
  5674  0763  3007               	movlw	7
  5675  0764  062A               	xorwf	setMode@mode^(0+384),w
  5676  0765  1D03               	btfss	3,2
  5677  0766  2F70               	goto	l2781
  5678                           
  5679                           ;APDS9960.c: 139: if (enable) {
  5680  0767  0826               	movf	setMode@enable^(0+384),w
  5681  0768  1903               	btfsc	3,2
  5682  0769  2F6F               	goto	l2779
  5683                           
  5684                           ;APDS9960.c: 140: reg_val = 0x7F;
  5685  076A  307F               	movlw	127
  5686  076B  00A7               	movwf	??_setMode^(0+384)
  5687  076C  0827               	movf	??_setMode^(0+384),w
  5688  076D  00A9               	movwf	setMode@reg_val^(0+384)
  5689                           
  5690                           ;APDS9960.c: 141: } else {
  5691  076E  2F70               	goto	l2781
  5692  076F                     l2779:	
  5693                           
  5694                           ;APDS9960.c: 142: reg_val = 0x00;
  5695  076F  01A9               	clrf	setMode@reg_val^(0+384)
  5696  0770                     l2781:	
  5697                           
  5698                           ;APDS9960.c: 143: };APDS9960.c: 144: };APDS9960.c: 147: if( !wireWriteDataByte(0x80, reg
      +                          _val) ) {
  5699  0770  0829               	movf	setMode@reg_val^(0+384),w
  5700  0771  00A7               	movwf	??_setMode^(0+384)
  5701  0772  0827               	movf	??_setMode^(0+384),w
  5702  0773  00A1               	movwf	wireWriteDataByte@val^(0+384)
  5703  0774  3080               	movlw	128
  5704  0775  318D  2594  3187   	fcall	_wireWriteDataByte
  5705  0778  0023               	movlb	3	; select bank3
  5706  0779  0821               	movf	?_wireWriteDataByte^(0+384),w
  5707  077A  0422               	iorwf	(?_wireWriteDataByte+1)^(0+384),w
  5708  077B  1903               	btfsc	3,2
  5709  077C  2F3C               	goto	l2759
  5710                           
  5711                           ;APDS9960.c: 149: };APDS9960.c: 151: return 1;
  5712  077D  3001               	movlw	1
  5713  077E  0008               	return
  5714  077F                     __end_of_setMode:	
  5715                           
  5716                           	psect	text23
  5717  0D94                     __ptext23:	
  5718 ;; *************** function _wireWriteDataByte *****************
  5719 ;; Defined at:
  5720 ;;		line 878 in file "APDS9960.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  reg             1    wreg     unsigned char 
  5723 ;;  val             1    1[BANK3 ] unsigned char 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  reg             1    4[BANK3 ] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  2    1[BANK3 ] int 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, pclath, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        4 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    7
  5742 ;; This function calls:
  5743 ;;		_i2c2_driver_TXData
  5744 ;;		_i2c2_driver_setAddr
  5745 ;;		_i2c2_driver_start
  5746 ;;		_i2c2_driver_stop
  5747 ;; This function is called by:
  5748 ;;		_initialize
  5749 ;;		_setMode
  5750 ;;		_setLEDDrive
  5751 ;;		_setProximityGain
  5752 ;;		_setAmbientLightGain
  5753 ;;		_setProxIntLowThresh
  5754 ;;		_setProxIntHighThresh
  5755 ;;		_setLightIntLowThreshold
  5756 ;;		_setLightIntHighThreshold
  5757 ;;		_setGestureEnterThresh
  5758 ;;		_setGestureExitThresh
  5759 ;;		_setGestureGain
  5760 ;;		_setGestureLEDDrive
  5761 ;;		_setGestureWaitTime
  5762 ;;		_setGestureIntEnable
  5763 ;;		_enableGestureSensor
  5764 ;;		_setLEDBoost
  5765 ;;		_setGestureMode
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           
  5770                           ;psect for function _wireWriteDataByte
  5771  0D94                     _wireWriteDataByte:	
  5772                           
  5773                           ;incstack = 0
  5774                           ; Regs used in _wireWriteDataByte: [wreg+status,2+status,0+pclath+cstack]
  5775                           ;wireWriteDataByte@reg stored from wreg
  5776  0D94  0023               	movlb	3	; select bank3
  5777  0D95  00A4               	movwf	wireWriteDataByte@reg^(0+384)
  5778                           
  5779                           ;APDS9960.c: 895: i2c2_driver_start();
  5780  0D96  318C  245C  318D   	fcall	_i2c2_driver_start
  5781                           
  5782                           ;APDS9960.c: 896: i2c2_driver_setAddr(0x39);
  5783  0D99  3039               	movlw	57
  5784  0D9A  318C  2478  318D   	fcall	_i2c2_driver_setAddr
  5785                           
  5786                           ;APDS9960.c: 897: i2c2_driver_setAddr(reg);
  5787  0D9D  0023               	movlb	3	; select bank3
  5788  0D9E  0824               	movf	wireWriteDataByte@reg^(0+384),w
  5789  0D9F  318C  2478  318D   	fcall	_i2c2_driver_setAddr
  5790                           
  5791                           ;APDS9960.c: 898: i2c2_driver_TXData(val);
  5792  0DA2  0023               	movlb	3	; select bank3
  5793  0DA3  0821               	movf	wireWriteDataByte@val^(0+384),w
  5794  0DA4  318C  247E  318D   	fcall	_i2c2_driver_TXData
  5795                           
  5796                           ;APDS9960.c: 899: i2c2_driver_stop();
  5797  0DA7  318C  2462         	fcall	_i2c2_driver_stop
  5798                           
  5799                           ;APDS9960.c: 902: return 1;
  5800  0DA9  3001               	movlw	1
  5801  0DAA  0023               	movlb	3	; select bank3
  5802  0DAB  00A1               	movwf	?_wireWriteDataByte^(0+384)
  5803  0DAC  3000               	movlw	0
  5804  0DAD  00A2               	movwf	(?_wireWriteDataByte^(0+384)+1)
  5805  0DAE  0008               	return
  5806  0DAF                     __end_of_wireWriteDataByte:	
  5807                           
  5808                           	psect	text24
  5809  0C7E                     __ptext24:	
  5810 ;; *************** function _i2c2_driver_TXData *****************
  5811 ;; Defined at:
  5812 ;;		line 186 in file "mcc_generated_files/i2c2_driver.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  d               1    wreg     unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  d               1    0[BANK3 ] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		wreg
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5830 ;;Total ram usage:        1 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    6
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_wireWriteDataByte
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _i2c2_driver_TXData
  5842  0C7E                     _i2c2_driver_TXData:	
  5843                           
  5844                           ;incstack = 0
  5845                           ; Regs used in _i2c2_driver_TXData: [wreg]
  5846                           ;i2c2_driver_TXData@d stored from wreg
  5847  0C7E  0023               	movlb	3	; select bank3
  5848  0C7F  00A0               	movwf	i2c2_driver_TXData@d^(0+384)
  5849                           
  5850                           ;i2c2_driver.c: 188: SSP2BUF = d;
  5851  0C80  0820               	movf	i2c2_driver_TXData@d^(0+384),w
  5852  0C81  0024               	movlb	4	; select bank4
  5853  0C82  0099               	movwf	25	;volatile
  5854  0C83  0008               	return
  5855  0C84                     __end_of_i2c2_driver_TXData:	
  5856                           
  5857                           	psect	text25
  5858  0CA3                     __ptext25:	
  5859 ;; *************** function _getMode *****************
  5860 ;; Defined at:
  5861 ;;		line 155 in file "APDS9960.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  enable_value    1    5[BANK3 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      unsigned char 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5879 ;;Total ram usage:        2 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    8
  5882 ;; This function calls:
  5883 ;;		_wireReadDataByte
  5884 ;; This function is called by:
  5885 ;;		_setMode
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           
  5890                           ;psect for function _getMode
  5891  0CA3                     _getMode:	
  5892                           
  5893                           ;APDS9960.c: 157: uint8_t enable_value;;APDS9960.c: 160: enable_value = wireReadDataByte
      +                          (0x80);
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _getMode: [wreg+status,2+status,0+pclath+cstack]
  5897  0CA3  3080               	movlw	128
  5898  0CA4  318D  25EC         	fcall	_wireReadDataByte
  5899  0CA6  0023               	movlb	3	; select bank3
  5900  0CA7  00A4               	movwf	??_getMode^(0+384)
  5901  0CA8  0824               	movf	??_getMode^(0+384),w
  5902  0CA9  00A5               	movwf	getMode@enable_value^(0+384)
  5903                           
  5904                           ;APDS9960.c: 162: return enable_value;
  5905  0CAA  0825               	movf	getMode@enable_value^(0+384),w
  5906  0CAB  0008               	return
  5907  0CAC                     __end_of_getMode:	
  5908                           
  5909                           	psect	text26
  5910  0DEC                     __ptext26:	
  5911 ;; *************** function _wireReadDataByte *****************
  5912 ;; Defined at:
  5913 ;;		line 906 in file "APDS9960.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  reg             1    wreg     unsigned char 
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  reg             1    2[BANK3 ] unsigned char 
  5918 ;;  val             1    3[BANK3 ] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      unsigned char 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0, pclath, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5932 ;;Total ram usage:        3 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    7
  5935 ;; This function calls:
  5936 ;;		_i2c2_driver_getRXData
  5937 ;;		_i2c2_driver_isNACK
  5938 ;;		_i2c2_driver_restart
  5939 ;;		_i2c2_driver_setAddr
  5940 ;;		_i2c2_driver_start
  5941 ;;		_i2c2_driver_startRX
  5942 ;;		_i2c2_driver_stop
  5943 ;; This function is called by:
  5944 ;;		_initialize
  5945 ;;		_getMode
  5946 ;;		_setLEDDrive
  5947 ;;		_setProximityGain
  5948 ;;		_setAmbientLightGain
  5949 ;;		_setGestureGain
  5950 ;;		_setGestureLEDDrive
  5951 ;;		_setGestureWaitTime
  5952 ;;		_setGestureIntEnable
  5953 ;;		_setLEDBoost
  5954 ;;		_setGestureMode
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           
  5959                           ;psect for function _wireReadDataByte
  5960  0DEC                     _wireReadDataByte:	
  5961                           
  5962                           ;incstack = 0
  5963                           ; Regs used in _wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  5964                           ;wireReadDataByte@reg stored from wreg
  5965  0DEC  0023               	movlb	3	; select bank3
  5966  0DED  00A2               	movwf	wireReadDataByte@reg^(0+384)
  5967                           
  5968                           ;APDS9960.c: 909: unsigned char val;;APDS9960.c: 929: i2c2_driver_start();
  5969  0DEE  318C  245C  318D   	fcall	_i2c2_driver_start
  5970                           
  5971                           ;APDS9960.c: 930: i2c2_driver_setAddr(0x39);
  5972  0DF1  3039               	movlw	57
  5973  0DF2  318C  2478  318D   	fcall	_i2c2_driver_setAddr
  5974                           
  5975                           ;APDS9960.c: 931: i2c2_driver_setAddr(reg);
  5976  0DF5  0023               	movlb	3	; select bank3
  5977  0DF6  0822               	movf	wireReadDataByte@reg^(0+384),w
  5978  0DF7  318C  2478  318D   	fcall	_i2c2_driver_setAddr
  5979                           
  5980                           ;APDS9960.c: 932: i2c2_driver_restart();
  5981  0DFA  318C  2459  318D   	fcall	_i2c2_driver_restart
  5982                           
  5983                           ;APDS9960.c: 933: i2c2_driver_startRX();
  5984  0DFD  318C  245F  318D   	fcall	_i2c2_driver_startRX
  5985                           
  5986                           ;APDS9960.c: 934: val = i2c2_driver_getRXData();
  5987  0E00  318C  2453  318D   	fcall	_i2c2_driver_getRXData
  5988  0E03  0023               	movlb	3	; select bank3
  5989  0E04  00A1               	movwf	??_wireReadDataByte^(0+384)
  5990  0E05  0821               	movf	??_wireReadDataByte^(0+384),w
  5991  0E06  00A3               	movwf	wireReadDataByte@val^(0+384)
  5992                           
  5993                           ;APDS9960.c: 935: i2c2_driver_isNACK();
  5994  0E07  318C  2456  318D   	fcall	_i2c2_driver_isNACK
  5995                           
  5996                           ;APDS9960.c: 936: i2c2_driver_stop();
  5997  0E0A  318C  2462         	fcall	_i2c2_driver_stop
  5998                           
  5999                           ;APDS9960.c: 938: return (val);
  6000  0E0C  0023               	movlb	3	; select bank3
  6001  0E0D  0823               	movf	wireReadDataByte@val^(0+384),w
  6002  0E0E  0008               	return
  6003  0E0F                     __end_of_wireReadDataByte:	
  6004                           
  6005                           	psect	text27
  6006  0C62                     __ptext27:	
  6007 ;; *************** function _i2c2_driver_stop *****************
  6008 ;; Defined at:
  6009 ;;		line 156 in file "mcc_generated_files/i2c2_driver.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		None
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    6
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_wireWriteDataByte
  6034 ;;		_wireReadDataByte
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _i2c2_driver_stop
  6040  0C62                     _i2c2_driver_stop:	
  6041                           
  6042                           ;i2c2_driver.c: 158: SSP2CON2bits.PEN = 1;
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _i2c2_driver_stop: []
  6046  0C62  0024               	movlb	4	; select bank4
  6047  0C63  151E               	bsf	30,2	;volatile
  6048  0C64  0008               	return
  6049  0C65                     __end_of_i2c2_driver_stop:	
  6050                           
  6051                           	psect	text28
  6052  0C5F                     __ptext28:	
  6053 ;; *************** function _i2c2_driver_startRX *****************
  6054 ;; Defined at:
  6055 ;;		line 166 in file "mcc_generated_files/i2c2_driver.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		None
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    6
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_wireReadDataByte
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           
  6084                           ;psect for function _i2c2_driver_startRX
  6085  0C5F                     _i2c2_driver_startRX:	
  6086                           
  6087                           ;i2c2_driver.c: 168: SSP2CON2bits.RCEN = 1;
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in _i2c2_driver_startRX: []
  6091  0C5F  0024               	movlb	4	; select bank4
  6092  0C60  159E               	bsf	30,3	;volatile
  6093  0C61  0008               	return
  6094  0C62                     __end_of_i2c2_driver_startRX:	
  6095                           
  6096                           	psect	text29
  6097  0C5C                     __ptext29:	
  6098 ;; *************** function _i2c2_driver_start *****************
  6099 ;; Defined at:
  6100 ;;		line 146 in file "mcc_generated_files/i2c2_driver.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		None
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    6
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_wireWriteDataByte
  6125 ;;		_wireReadDataByte
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function _i2c2_driver_start
  6131  0C5C                     _i2c2_driver_start:	
  6132                           
  6133                           ;i2c2_driver.c: 148: SSP2CON2bits.SEN = 1;
  6134                           
  6135                           ;incstack = 0
  6136                           ; Regs used in _i2c2_driver_start: []
  6137  0C5C  0024               	movlb	4	; select bank4
  6138  0C5D  141E               	bsf	30,0	;volatile
  6139  0C5E  0008               	return
  6140  0C5F                     __end_of_i2c2_driver_start:	
  6141                           
  6142                           	psect	text30
  6143  0C78                     __ptext30:	
  6144 ;; *************** function _i2c2_driver_setAddr *****************
  6145 ;; Defined at:
  6146 ;;		line 176 in file "mcc_generated_files/i2c2_driver.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  addr            1    wreg     unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  addr            1    0[BANK3 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  6164 ;;Total ram usage:        1 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    6
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_wireWriteDataByte
  6171 ;;		_wireReadDataByte
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           
  6176                           ;psect for function _i2c2_driver_setAddr
  6177  0C78                     _i2c2_driver_setAddr:	
  6178                           
  6179                           ;incstack = 0
  6180                           ; Regs used in _i2c2_driver_setAddr: [wreg]
  6181                           ;i2c2_driver_setAddr@addr stored from wreg
  6182  0C78  0023               	movlb	3	; select bank3
  6183  0C79  00A0               	movwf	i2c2_driver_setAddr@addr^(0+384)
  6184                           
  6185                           ;i2c2_driver.c: 178: SSP2ADD = addr;
  6186  0C7A  0820               	movf	i2c2_driver_setAddr@addr^(0+384),w
  6187  0C7B  0024               	movlb	4	; select bank4
  6188  0C7C  009A               	movwf	26	;volatile
  6189  0C7D  0008               	return
  6190  0C7E                     __end_of_i2c2_driver_setAddr:	
  6191                           
  6192                           	psect	text31
  6193  0C59                     __ptext31:	
  6194 ;; *************** function _i2c2_driver_restart *****************
  6195 ;; Defined at:
  6196 ;;		line 151 in file "mcc_generated_files/i2c2_driver.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		None
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    6
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_wireReadDataByte
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function _i2c2_driver_restart
  6226  0C59                     _i2c2_driver_restart:	
  6227                           
  6228                           ;i2c2_driver.c: 153: SSP2CON2bits.RSEN = 1;
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in _i2c2_driver_restart: []
  6232  0C59  0024               	movlb	4	; select bank4
  6233  0C5A  149E               	bsf	30,1	;volatile
  6234  0C5B  0008               	return
  6235  0C5C                     __end_of_i2c2_driver_restart:	
  6236                           
  6237                           	psect	text32
  6238  0C56                     __ptext32:	
  6239 ;; *************** function _i2c2_driver_isNACK *****************
  6240 ;; Defined at:
  6241 ;;		line 161 in file "mcc_generated_files/i2c2_driver.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;		None               void
  6248 ;; Registers used:
  6249 ;;		wreg
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    6
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_wireReadDataByte
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           
  6270                           ;psect for function _i2c2_driver_isNACK
  6271  0C56                     _i2c2_driver_isNACK:	
  6272                           
  6273                           ;i2c2_driver.c: 163: return SSP2CON2bits.ACKSTAT;;	Return value of _i2c2_driver_isNACK i
      +                          s never used
  6274                           
  6275                           ;incstack = 0
  6276                           ; Regs used in _i2c2_driver_isNACK: [wreg]
  6277  0C56  0024               	movlb	4	; select bank4
  6278  0C57  081E               	movf	30,w	;volatile
  6279  0C58  0008               	return
  6280  0C59                     __end_of_i2c2_driver_isNACK:	
  6281                           
  6282                           	psect	text33
  6283  0C53                     __ptext33:	
  6284 ;; *************** function _i2c2_driver_getRXData *****************
  6285 ;; Defined at:
  6286 ;;		line 171 in file "mcc_generated_files/i2c2_driver.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;		None
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      unsigned char 
  6293 ;; Registers used:
  6294 ;;		wreg
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;Total ram usage:        0 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    6
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_wireReadDataByte
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           
  6315                           ;psect for function _i2c2_driver_getRXData
  6316  0C53                     _i2c2_driver_getRXData:	
  6317                           
  6318                           ;i2c2_driver.c: 173: return SSP2BUF;
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in _i2c2_driver_getRXData: [wreg]
  6322  0C53  0024               	movlb	4	; select bank4
  6323  0C54  0819               	movf	25,w	;volatile
  6324  0C55  0008               	return
  6325  0C56                     __end_of_i2c2_driver_getRXData:	
  6326                           
  6327                           	psect	text34
  6328  0CBF                     __ptext34:	
  6329 ;; *************** function _SYSTEM_Initialize *****************
  6330 ;; Defined at:
  6331 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;Total ram usage:        0 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    7
  6352 ;; This function calls:
  6353 ;;		_OSCILLATOR_Initialize
  6354 ;;		_PIN_MANAGER_Initialize
  6355 ;;		_PMD_Initialize
  6356 ;;		_WDT_Initialize
  6357 ;; This function is called by:
  6358 ;;		_main
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function _SYSTEM_Initialize
  6364  0CBF                     _SYSTEM_Initialize:	
  6365                           
  6366                           ;mcc.c: 53: PMD_Initialize();
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6370  0CBF  318C  2492  318C   	fcall	_PMD_Initialize
  6371                           
  6372                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  6373  0CC2  318F  2728  318C   	fcall	_PIN_MANAGER_Initialize
  6374                           
  6375                           ;mcc.c: 55: OSCILLATOR_Initialize();
  6376  0CC5  318C  249A  318C   	fcall	_OSCILLATOR_Initialize
  6377                           
  6378                           ;mcc.c: 56: WDT_Initialize();
  6379  0CC8  318C  2469         	fcall	_WDT_Initialize
  6380  0CCA  0008               	return
  6381  0CCB                     __end_of_SYSTEM_Initialize:	
  6382                           
  6383                           	psect	text35
  6384  0C69                     __ptext35:	
  6385 ;; *************** function _WDT_Initialize *****************
  6386 ;; Defined at:
  6387 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    6
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_SYSTEM_Initialize
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           
  6416                           ;psect for function _WDT_Initialize
  6417  0C69                     _WDT_Initialize:	
  6418                           
  6419                           ;mcc.c: 76: WDTCON = 0x16;
  6420                           
  6421                           ;incstack = 0
  6422                           ; Regs used in _WDT_Initialize: [wreg]
  6423  0C69  3016               	movlw	22
  6424  0C6A  0021               	movlb	1	; select bank1
  6425  0C6B  0097               	movwf	23	;volatile
  6426  0C6C  0008               	return
  6427  0C6D                     __end_of_WDT_Initialize:	
  6428                           
  6429                           	psect	text36
  6430  0C92                     __ptext36:	
  6431 ;; *************** function _PMD_Initialize *****************
  6432 ;; Defined at:
  6433 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		status,2
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    6
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_SYSTEM_Initialize
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function _PMD_Initialize
  6463  0C92                     _PMD_Initialize:	
  6464                           
  6465                           ;mcc.c: 82: PMD0 = 0x00;
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _PMD_Initialize: [status,2]
  6469  0C92  0032               	movlb	18	; select bank18
  6470  0C93  0191               	clrf	17	;volatile
  6471                           
  6472                           ;mcc.c: 84: PMD1 = 0x00;
  6473  0C94  0192               	clrf	18	;volatile
  6474                           
  6475                           ;mcc.c: 86: PMD2 = 0x00;
  6476  0C95  0193               	clrf	19	;volatile
  6477                           
  6478                           ;mcc.c: 88: PMD3 = 0x00;
  6479  0C96  0194               	clrf	20	;volatile
  6480                           
  6481                           ;mcc.c: 90: PMD4 = 0x00;
  6482  0C97  0195               	clrf	21	;volatile
  6483                           
  6484                           ;mcc.c: 92: PMD5 = 0x00;
  6485  0C98  0196               	clrf	22	;volatile
  6486  0C99  0008               	return
  6487  0C9A                     __end_of_PMD_Initialize:	
  6488                           
  6489                           	psect	text37
  6490  0F28                     __ptext37:	
  6491 ;; *************** function _PIN_MANAGER_Initialize *****************
  6492 ;; Defined at:
  6493 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    6
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_SYSTEM_Initialize
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function _PIN_MANAGER_Initialize
  6523  0F28                     _PIN_MANAGER_Initialize:	
  6524                           
  6525                           ;pin_manager.c: 60: LATA = 0x00;
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6529  0F28  0022               	movlb	2	; select bank2
  6530  0F29  018C               	clrf	12	;volatile
  6531                           
  6532                           ;pin_manager.c: 61: LATB = 0x00;
  6533  0F2A  018D               	clrf	13	;volatile
  6534                           
  6535                           ;pin_manager.c: 62: LATC = 0x00;
  6536  0F2B  018E               	clrf	14	;volatile
  6537                           
  6538                           ;pin_manager.c: 67: TRISA = 0x11;
  6539  0F2C  3011               	movlw	17
  6540  0F2D  0021               	movlb	1	; select bank1
  6541  0F2E  008C               	movwf	12	;volatile
  6542                           
  6543                           ;pin_manager.c: 68: TRISB = 0xF0;
  6544  0F2F  30F0               	movlw	240
  6545  0F30  008D               	movwf	13	;volatile
  6546                           
  6547                           ;pin_manager.c: 69: TRISC = 0xDF;
  6548  0F31  30DF               	movlw	223
  6549  0F32  008E               	movwf	14	;volatile
  6550                           
  6551                           ;pin_manager.c: 74: ANSELC = 0x8F;
  6552  0F33  308F               	movlw	143
  6553  0F34  0023               	movlb	3	; select bank3
  6554  0F35  008E               	movwf	14	;volatile
  6555                           
  6556                           ;pin_manager.c: 75: ANSELB = 0xF0;
  6557  0F36  30F0               	movlw	240
  6558  0F37  008D               	movwf	13	;volatile
  6559                           
  6560                           ;pin_manager.c: 76: ANSELA = 0x11;
  6561  0F38  3011               	movlw	17
  6562  0F39  008C               	movwf	12	;volatile
  6563                           
  6564                           ;pin_manager.c: 81: WPUB = 0x00;
  6565  0F3A  0024               	movlb	4	; select bank4
  6566  0F3B  018D               	clrf	13	;volatile
  6567                           
  6568                           ;pin_manager.c: 82: WPUA = 0x00;
  6569  0F3C  018C               	clrf	12	;volatile
  6570                           
  6571                           ;pin_manager.c: 83: WPUC = 0x00;
  6572  0F3D  018E               	clrf	14	;volatile
  6573                           
  6574                           ;pin_manager.c: 88: ODCONA = 0x00;
  6575  0F3E  0025               	movlb	5	; select bank5
  6576  0F3F  018C               	clrf	12	;volatile
  6577                           
  6578                           ;pin_manager.c: 89: ODCONB = 0x00;
  6579  0F40  018D               	clrf	13	;volatile
  6580                           
  6581                           ;pin_manager.c: 90: ODCONC = 0x00;
  6582  0F41  018E               	clrf	14	;volatile
  6583                           
  6584                           ;pin_manager.c: 95: SLRCONA = 0x37;
  6585  0F42  3037               	movlw	55
  6586  0F43  0026               	movlb	6	; select bank6
  6587  0F44  008C               	movwf	12	;volatile
  6588                           
  6589                           ;pin_manager.c: 96: SLRCONB = 0xF0;
  6590  0F45  30F0               	movlw	240
  6591  0F46  008D               	movwf	13	;volatile
  6592                           
  6593                           ;pin_manager.c: 97: SLRCONC = 0xFF;
  6594  0F47  30FF               	movlw	255
  6595  0F48  008E               	movwf	14	;volatile
  6596                           
  6597                           ;pin_manager.c: 106: SSP2DATPPS = 0x16;
  6598  0F49  3016               	movlw	22
  6599  0F4A  003C               	movlb	28	; select bank28
  6600  0F4B  009E               	movwf	30	;volatile
  6601                           
  6602                           ;pin_manager.c: 107: RC4PPS = 0x1A;
  6603  0F4C  301A               	movlw	26
  6604  0F4D  003D               	movlb	29	; select bank29
  6605  0F4E  00A4               	movwf	36	;volatile
  6606                           
  6607                           ;pin_manager.c: 108: RC6PPS = 0x1B;
  6608  0F4F  301B               	movlw	27
  6609  0F50  00A6               	movwf	38	;volatile
  6610                           
  6611                           ;pin_manager.c: 109: SSP2CLKPPS = 0x14;
  6612  0F51  3014               	movlw	20
  6613  0F52  003C               	movlb	28	; select bank28
  6614  0F53  009D               	movwf	29	;volatile
  6615  0F54  0008               	return
  6616  0F55                     __end_of_PIN_MANAGER_Initialize:	
  6617                           
  6618                           	psect	text38
  6619  0C9A                     __ptext38:	
  6620 ;; *************** function _OSCILLATOR_Initialize *****************
  6621 ;; Defined at:
  6622 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    6
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_SYSTEM_Initialize
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function _OSCILLATOR_Initialize
  6652  0C9A                     _OSCILLATOR_Initialize:	
  6653                           
  6654                           ;mcc.c: 62: OSCCON1 = 0x60;
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6658  0C9A  3060               	movlw	96
  6659  0C9B  0032               	movlb	18	; select bank18
  6660  0C9C  0099               	movwf	25	;volatile
  6661                           
  6662                           ;mcc.c: 64: OSCCON3 = 0x00;
  6663  0C9D  019B               	clrf	27	;volatile
  6664                           
  6665                           ;mcc.c: 66: OSCEN = 0x00;
  6666  0C9E  019D               	clrf	29	;volatile
  6667                           
  6668                           ;mcc.c: 68: OSCFRQ = 0x03;
  6669  0C9F  3003               	movlw	3
  6670  0CA0  009F               	movwf	31	;volatile
  6671                           
  6672                           ;mcc.c: 70: OSCTUNE = 0x00;
  6673  0CA1  019E               	clrf	30	;volatile
  6674  0CA2  0008               	return
  6675  0CA3                     __end_of_OSCILLATOR_Initialize:	
  6676                           
  6677                           	psect	intentry
  6678  0004                     __pintentry:	
  6679 ;; *************** function _INTERRUPT_InterruptManager *****************
  6680 ;; Defined at:
  6681 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    5
  6702 ;; This function calls:
  6703 ;;		Absolute function
  6704 ;;		_handleGesture
  6705 ;; This function is called by:
  6706 ;;		Interrupt level 1
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710  0004                     _INTERRUPT_InterruptManager:	
  6711                           
  6712                           ;incstack = 0
  6713  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6714                           
  6715                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6716  0005  3180               	pagesel	$
  6717                           
  6718                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  6719  0006  1F0B               	btfss	11,6	;volatile
  6720  0007  2818               	goto	i1l21
  6721                           
  6722                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE2bits.BCL2IE == 1 && PIR2bits
      +                          .BCL2IF == 1)
  6723  0008  0021               	movlb	1	; select bank1
  6724  0009  1912               	btfsc	18,2	;volatile
  6725                           
  6726                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: i2c2_driver_busCollisionISR();
  6727  000A  0020               	movlb	0	; select bank0
  6728  000B  1912               	btfsc	18,2	;volatile
  6729  000C  2818               	goto	i1l21
  6730                           
  6731                           ;interrupt_manager.c: 61: else if(PIE2bits.SSP2IE == 1 && PIR2bits.SSP2IF == 1)
  6732  000D  0021               	movlb	1	; select bank1
  6733  000E  1D92               	btfss	18,3	;volatile
  6734  000F  2818               	goto	i1l21
  6735  0010  0020               	movlb	0	; select bank0
  6736  0011  1D92               	btfss	18,3	;volatile
  6737  0012  2818               	goto	i1l21
  6738                           
  6739                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 64: i2c2_driver_i2cISR();
  6740  0013  0868               	movf	_i2c2_driver_i2cISR+1,w
  6741  0014  008A               	movwf	10
  6742  0015  0867               	movf	_i2c2_driver_i2cISR,w
  6743  0016  000A               	callw
  6744  0017  3180               	pagesel	$
  6745  0018                     i1l21:	
  6746                           ;interrupt_manager.c: 70: };interrupt_manager.c: 71: }
  6747                           
  6748                           ;interrupt_manager.c: 66: }
  6749                           
  6750  0018  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6751  0019  0009               	retfie
  6752  001A                     __end_of_INTERRUPT_InterruptManager:	
  6753                           
  6754                           	psect	text40
  6755  077F                     __ptext40:	
  6756 ;; *************** function _handleGesture *****************
  6757 ;; Defined at:
  6758 ;;		line 105 in file "main.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;Total ram usage:        2 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    4
  6779 ;; This function calls:
  6780 ;;		_LEDs_SetLow
  6781 ;;		_isGestureAvailable
  6782 ;;		_mssp2_clearIRQ
  6783 ;;		_readGesture
  6784 ;; This function is called by:
  6785 ;;		_main
  6786 ;;		_INTERRUPT_InterruptManager
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           
  6791                           ;psect for function _handleGesture
  6792  077F                     _handleGesture:	
  6793                           
  6794                           ;main.c: 107: if(isGestureAvailable())
  6795                           
  6796                           ;incstack = 0
  6797                           ; Regs used in _handleGesture: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6798  077F  318C  24D9  3187   	fcall	_isGestureAvailable
  6799  0782  3A00               	xorlw	0
  6800  0783  1903               	skipnz
  6801  0784  0008               	return
  6802                           
  6803                           ;main.c: 108: {;main.c: 109: mssp2_clearIRQ();
  6804  0785  318C  243E  3187   	fcall	_mssp2_clearIRQ
  6805                           
  6806                           ;main.c: 111: switch(readGesture())
  6807  0788  2FB4               	goto	i1l3637
  6808  0789                     i1l3603:	
  6809                           
  6810                           ;main.c: 115: LEDs_SetLow();
  6811  0789  318C  2472  3187   	fcall	_LEDs_SetLow
  6812  078C  0022               	movlb	2	; select bank2
  6813  078D  168E               	bsf	14,5	;volatile
  6814  078E                     i1l3607:	
  6815                           
  6816                           ;main.c: 117: _delay((unsigned long)((1000)*(4000000/4000.0)));
  6817  078E  3006               	movlw	6
  6818  078F  0020               	movlb	0	; select bank0
  6819  0790  00CF               	movwf	??_handleGesture+1
  6820  0791  3013               	movlw	19
  6821  0792  00CE               	movwf	??_handleGesture
  6822  0793  30AD               	movlw	173
  6823  0794                     u334_27:	
  6824  0794  0B89               	decfsz	9,f
  6825  0795  2F94               	goto	u334_27
  6826  0796  0BCE               	decfsz	??_handleGesture,f
  6827  0797  2F94               	goto	u334_27
  6828  0798  0BCF               	decfsz	??_handleGesture+1,f
  6829  0799  2F94               	goto	u334_27
  6830  079A  3200               	nop2
  6831                           
  6832                           ;main.c: 118: break;
  6833  079B  2FCB               	goto	i1l3639
  6834  079C                     i1l3609:	
  6835                           
  6836                           ;main.c: 120: LEDs_SetLow();
  6837  079C  318C  2472  3187   	fcall	_LEDs_SetLow
  6838  079F  0022               	movlb	2	; select bank2
  6839  07A0  2FB2               	goto	i1l3631
  6840  07A1                     i1l3615:	
  6841                           
  6842                           ;main.c: 125: LEDs_SetLow();
  6843  07A1  318C  2472  3187   	fcall	_LEDs_SetLow
  6844  07A4  0022               	movlb	2	; select bank2
  6845  07A5  148C               	bsf	12,1	;volatile
  6846  07A6  2F8E               	goto	i1l3607
  6847  07A7                     i1l3621:	
  6848                           
  6849                           ;main.c: 130: LEDs_SetLow();
  6850  07A7  318C  2472  3187   	fcall	_LEDs_SetLow
  6851  07AA  0022               	movlb	2	; select bank2
  6852  07AB  168C               	bsf	12,5	;volatile
  6853  07AC  2F8E               	goto	i1l3607
  6854  07AD                     i1l3627:	
  6855                           
  6856                           ;main.c: 146: LEDs_SetLow();
  6857  07AD  318C  2472  3187   	fcall	_LEDs_SetLow
  6858  07B0  0022               	movlb	2	; select bank2
  6859  07B1  168E               	bsf	14,5	;volatile
  6860  07B2                     i1l3631:	
  6861  07B2  150C               	bsf	12,2	;volatile
  6862  07B3  2F8E               	goto	i1l3607
  6863  07B4                     i1l3637:	
  6864  07B4  3185  2594  3187   	fcall	_readGesture
  6865                           
  6866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6867                           ; Switch size 1, requested type "simple"
  6868                           ; Number of cases is 1, Range of values is 0 to 0
  6869                           ; switch strategies available:
  6870                           ; Name         Instructions Cycles
  6871                           ; simple_byte            4     3 (average)
  6872                           ; direct_byte            8     6 (fixed)
  6873                           ; jumptable            260     6 (fixed)
  6874                           ;	Chosen strategy is simple_byte
  6875  07B7  0020               	movlb	0	; select bank0
  6876  07B8  0843               	movf	?_readGesture+1,w
  6877  07B9  3A00               	xorlw	0	; case 0
  6878  07BA  1903               	skipnz
  6879  07BB  2FBD               	goto	i1l3685
  6880  07BC  2FAD               	goto	i1l3627
  6881  07BD                     i1l3685:	
  6882                           
  6883                           ; Switch size 1, requested type "simple"
  6884                           ; Number of cases is 4, Range of values is 1 to 4
  6885                           ; switch strategies available:
  6886                           ; Name         Instructions Cycles
  6887                           ; simple_byte           13     7 (average)
  6888                           ; direct_byte           17     9 (fixed)
  6889                           ; jumptable            263     9 (fixed)
  6890                           ;	Chosen strategy is simple_byte
  6891  07BD  0842               	movf	?_readGesture,w
  6892  07BE  3A01               	xorlw	1	; case 1
  6893  07BF  1903               	skipnz
  6894  07C0  2FA1               	goto	i1l3615
  6895  07C1  3A03               	xorlw	3	; case 2
  6896  07C2  1903               	skipnz
  6897  07C3  2FA7               	goto	i1l3621
  6898  07C4  3A01               	xorlw	1	; case 3
  6899  07C5  1903               	skipnz
  6900  07C6  2F89               	goto	i1l3603
  6901  07C7  3A07               	xorlw	7	; case 4
  6902  07C8  1903               	skipnz
  6903  07C9  2F9C               	goto	i1l3609
  6904  07CA  2FAD               	goto	i1l3627
  6905  07CB                     i1l3639:	
  6906                           
  6907                           ;main.c: 154: LEDs_SetLow();
  6908  07CB  318C  2472         	fcall	_LEDs_SetLow
  6909  07CD  0008               	return
  6910  07CE                     __end_of_handleGesture:	
  6911                           
  6912                           	psect	text41
  6913  0594                     __ptext41:	
  6914 ;; *************** function _readGesture *****************
  6915 ;; Defined at:
  6916 ;;		line 552 in file "APDS9960.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  fifo_data      64    0[BANK2 ] unsigned char [64]
  6921 ;;  fifo_data2     64    0[BANK1 ] unsigned char [64]
  6922 ;;  i               2   44[BANK0 ] int 
  6923 ;;  bytes_read      2   41[BANK0 ] int 
  6924 ;;  motion          2   38[BANK0 ] int 
  6925 ;;  fifo_level      1   43[BANK0 ] unsigned char 
  6926 ;;  gstatus         1   40[BANK0 ] unsigned char 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  2   34[BANK0 ] int 
  6929 ;; Registers used:
  6930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Locals:         0       8      64      64       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Totals:         0      12      64      64       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;Total ram usage:      140 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    3
  6943 ;; This function calls:
  6944 ;;		_decodeGesture
  6945 ;;		_isGestureAvailable
  6946 ;;		_processGestureData
  6947 ;;		_wireReadDataBlock
  6948 ;;		i1_getMode
  6949 ;;		i1_resetGestureParameters
  6950 ;;		i1_wireReadDataByte
  6951 ;; This function is called by:
  6952 ;;		_handleGesture
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _readGesture
  6958  0594                     _readGesture:	
  6959                           
  6960                           ;APDS9960.c: 555: int bytes_read = 0;
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in _readGesture: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6964  0594  0020               	movlb	0	; select bank0
  6965  0595  01C9               	clrf	readGesture@bytes_read
  6966  0596  01CA               	clrf	readGesture@bytes_read+1
  6967                           
  6968                           ;APDS9960.c: 556: uint8_t fifo_data[64];;APDS9960.c: 557: uint8_t fifo_data2[64];;APDS99
      +                          60.c: 558: uint8_t gstatus;;APDS9960.c: 559: int motion;;APDS9960.c: 560: int i;;APDS996
      +                          0.c: 563: if( !isGestureAvailable() || !(getMode() & 0b01000001) ) {
  6969  0597  318C  24D9  3185   	fcall	_isGestureAvailable
  6970  059A  3A00               	xorlw	0
  6971  059B  1903               	skipnz
  6972  059C  2DA3               	goto	i1l3171
  6973  059D  318C  248A  3185   	fcall	i1_getMode
  6974  05A0  3941               	andlw	65
  6975  05A1  1D03               	btfss	3,2
  6976  05A2  2E58               	goto	i1l3175
  6977  05A3                     i1l3171:	
  6978                           
  6979                           ;APDS9960.c: 564: return DIR_NONE;
  6980  05A3  0020               	movlb	0	; select bank0
  6981  05A4  01C2               	clrf	?_readGesture
  6982  05A5  01C3               	clrf	?_readGesture+1
  6983  05A6  0008               	return
  6984  05A7                     i1l3181:	
  6985                           
  6986                           ;APDS9960.c: 580: {;APDS9960.c: 582: fifo_level= wireReadDataByte(0xAE);
  6987  05A7  30AE               	movlw	174
  6988  05A8  318D  25CD  3185   	fcall	i1_wireReadDataByte
  6989  05AB  0020               	movlb	0	; select bank0
  6990  05AC  00C4               	movwf	??_readGesture
  6991  05AD  0844               	movf	??_readGesture,w
  6992  05AE  00CB               	movwf	readGesture@fifo_level
  6993                           
  6994                           ;APDS9960.c: 586: if( fifo_level > 0) {
  6995  05AF  084B               	movf	readGesture@fifo_level,w
  6996  05B0  1903               	btfsc	3,2
  6997  05B1  2E58               	goto	i1l3175
  6998                           
  6999                           ;APDS9960.c: 588: if(fifo_level < 17)
  7000  05B2  3011               	movlw	17
  7001  05B3  024B               	subwf	readGesture@fifo_level,w
  7002  05B4  1803               	skipnc
  7003  05B5  2DBA               	goto	i1l3189
  7004                           
  7005                           ;APDS9960.c: 589: {;APDS9960.c: 590: bytes_read = wireReadDataBlock( 0xFC,;APDS9960.c: 5
      +                          91: (uint8_t*)fifo_data,;APDS9960.c: 592: (fifo_level * 4) );
  7006  05B6  3020               	movlw	low readGesture@fifo_data
  7007  05B7  00F1               	movwf	wireReadDataBlock@val
  7008  05B8  3001               	movlw	high readGesture@fifo_data
  7009  05B9  2DBD               	goto	L2
  7010  05BA                     i1l3189:	
  7011                           ;APDS9960.c: 593: } else
  7012                           
  7013                           
  7014                           ;APDS9960.c: 594: {;APDS9960.c: 595: bytes_read = wireReadDataBlock( 0xFC,;APDS9960.c: 5
      +                          96: (uint8_t*)fifo_data2,;APDS9960.c: 597: (fifo_level * 4) );
  7015  05BA  30A0               	movlw	low readGesture@fifo_data2
  7016  05BB  00F1               	movwf	wireReadDataBlock@val
  7017  05BC  3000               	movlw	high readGesture@fifo_data2
  7018  05BD                     L2:	
  7019  05BD  00F2               	movwf	wireReadDataBlock@val+1
  7020  05BE  084B               	movf	readGesture@fifo_level,w
  7021  05BF  00C4               	movwf	??_readGesture
  7022  05C0  01C5               	clrf	??_readGesture+1
  7023  05C1  35C4               	lslf	??_readGesture,f
  7024  05C2  0DC5               	rlf	??_readGesture+1,f
  7025  05C3  35C4               	lslf	??_readGesture,f
  7026  05C4  0DC5               	rlf	??_readGesture+1,f
  7027  05C5  0844               	movf	??_readGesture,w
  7028  05C6  00F3               	movwf	wireReadDataBlock@len
  7029  05C7  0845               	movf	??_readGesture+1,w
  7030  05C8  00F4               	movwf	wireReadDataBlock@len+1
  7031  05C9  30FC               	movlw	252
  7032  05CA  318F  27B9  3185   	fcall	_wireReadDataBlock
  7033  05CD  0872               	movf	?_wireReadDataBlock+1,w
  7034  05CE  0020               	movlb	0	; select bank0
  7035  05CF  00CA               	movwf	readGesture@bytes_read+1
  7036  05D0  0871               	movf	?_wireReadDataBlock,w
  7037  05D1  00C9               	movwf	readGesture@bytes_read
  7038                           
  7039                           ;APDS9960.c: 598: };APDS9960.c: 601: if( bytes_read == -1 )
  7040  05D2  0A49               	incf	readGesture@bytes_read,w
  7041  05D3  1D03               	skipz
  7042  05D4  2DDD               	goto	i1l3197
  7043  05D5  0A4A               	incf	readGesture@bytes_read+1,w
  7044  05D6  1D03               	btfss	3,2
  7045  05D7  2DDD               	goto	i1l3197
  7046                           
  7047                           ;APDS9960.c: 602: {;APDS9960.c: 603: return 0xFF;
  7048  05D8  30FF               	movlw	255
  7049  05D9  00C2               	movwf	?_readGesture
  7050  05DA  3000               	movlw	0
  7051  05DB  00C3               	movwf	?_readGesture+1
  7052  05DC  0008               	return
  7053  05DD                     i1l3197:	
  7054                           
  7055                           ;APDS9960.c: 604: };APDS9960.c: 608: if( bytes_read >= 4 )
  7056  05DD  084A               	movf	readGesture@bytes_read+1,w
  7057  05DE  3A80               	xorlw	128
  7058  05DF  00C4               	movwf	??_readGesture
  7059  05E0  3080               	movlw	128
  7060  05E1  0244               	subwf	??_readGesture,w
  7061  05E2  1D03               	skipz
  7062  05E3  2DE6               	goto	u275_25
  7063  05E4  3004               	movlw	4
  7064  05E5  0249               	subwf	readGesture@bytes_read,w
  7065  05E6                     u275_25:	
  7066  05E6  1C03               	skipc
  7067  05E7  2E58               	goto	i1l3175
  7068                           
  7069                           ;APDS9960.c: 609: {;APDS9960.c: 611: for( i = 0; i < bytes_read; i += 4 ) {
  7070  05E8  0020               	movlb	0	; select bank0
  7071  05E9  01CC               	clrf	readGesture@i
  7072  05EA  01CD               	clrf	readGesture@i+1
  7073  05EB                     i1l3209:	
  7074  05EB  084D               	movf	readGesture@i+1,w
  7075  05EC  3A80               	xorlw	128
  7076  05ED  00C4               	movwf	??_readGesture
  7077  05EE  084A               	movf	readGesture@bytes_read+1,w
  7078  05EF  3A80               	xorlw	128
  7079  05F0  0244               	subwf	??_readGesture,w
  7080  05F1  1D03               	skipz
  7081  05F2  2DF5               	goto	u276_25
  7082  05F3  0849               	movf	readGesture@bytes_read,w
  7083  05F4  024C               	subwf	readGesture@i,w
  7084  05F5                     u276_25:	
  7085  05F5  1803               	btfsc	3,0
  7086  05F6  2E4C               	goto	i1l3211
  7087                           
  7088                           ;APDS9960.c: 612: gesture_data_.u_data[gesture_data_.index] = fifo_data[i + 0];
  7089  05F7  0020               	movlb	0	; select bank0
  7090  05F8  084C               	movf	readGesture@i,w
  7091  05F9  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7092  05FA  0086               	movwf	6
  7093  05FB  3001               	movlw	1	; select bank2/3
  7094  05FC  0087               	movwf	7
  7095  05FD  0801               	movf	1,w
  7096  05FE  00C4               	movwf	??_readGesture
  7097  05FF  0024               	movlb	4	; select bank4
  7098  0600  0860               	movf	(_gesture_data_^(0+512)+64),w
  7099  0601  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7100  0602  0086               	movwf	6
  7101  0603  3002               	movlw	2	; select bank4/5
  7102  0604  0087               	movwf	7
  7103  0605  0020               	movlb	0	; select bank0
  7104  0606  0844               	movf	??_readGesture,w
  7105  0607  0081               	movwf	1
  7106                           
  7107                           ;APDS9960.c: 614: gesture_data_.d_data[gesture_data_.index] = fifo_data[i + 1];
  7108  0608  084C               	movf	readGesture@i,w
  7109  0609  3E01               	addlw	1
  7110  060A  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7111  060B  0086               	movwf	6
  7112  060C  3001               	movlw	1	; select bank2/3
  7113  060D  0087               	movwf	7
  7114  060E  0801               	movf	1,w
  7115  060F  00C4               	movwf	??_readGesture
  7116  0610  0024               	movlb	4	; select bank4
  7117  0611  0860               	movf	(_gesture_data_^(0+512)+64),w
  7118  0612  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  7119  0613  0086               	movwf	6
  7120  0614  3002               	movlw	2	; select bank4/5
  7121  0615  0087               	movwf	7
  7122  0616  0020               	movlb	0	; select bank0
  7123  0617  0844               	movf	??_readGesture,w
  7124  0618  0081               	movwf	1
  7125                           
  7126                           ;APDS9960.c: 616: gesture_data_.l_data[gesture_data_.index] = fifo_data[i + 2];
  7127  0619  084C               	movf	readGesture@i,w
  7128  061A  3E02               	addlw	2
  7129  061B  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7130  061C  0086               	movwf	6
  7131  061D  3001               	movlw	1	; select bank2/3
  7132  061E  0087               	movwf	7
  7133  061F  0801               	movf	1,w
  7134  0620  00C4               	movwf	??_readGesture
  7135  0621  0024               	movlb	4	; select bank4
  7136  0622  0860               	movf	(_gesture_data_^(0+512)+64),w
  7137  0623  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  7138  0624  0086               	movwf	6
  7139  0625  3002               	movlw	2	; select bank4/5
  7140  0626  0087               	movwf	7
  7141  0627  0020               	movlb	0	; select bank0
  7142  0628  0844               	movf	??_readGesture,w
  7143  0629  0081               	movwf	1
  7144                           
  7145                           ;APDS9960.c: 618: gesture_data_.r_data[gesture_data_.index] = fifo_data[i + 3];
  7146  062A  084C               	movf	readGesture@i,w
  7147  062B  3E03               	addlw	3
  7148  062C  3E20               	addlw	(low (readGesture@fifo_data| (0+256)))& (0+255)
  7149  062D  0086               	movwf	6
  7150  062E  3001               	movlw	1	; select bank2/3
  7151  062F  0087               	movwf	7
  7152  0630  0801               	movf	1,w
  7153  0631  00C4               	movwf	??_readGesture
  7154  0632  0024               	movlb	4	; select bank4
  7155  0633  0860               	movf	(_gesture_data_^(0+512)+64),w
  7156  0634  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  7157  0635  0086               	movwf	6
  7158  0636  3002               	movlw	2	; select bank4/5
  7159  0637  0087               	movwf	7
  7160  0638  0020               	movlb	0	; select bank0
  7161  0639  0844               	movf	??_readGesture,w
  7162  063A  0081               	movwf	1
  7163                           
  7164                           ;APDS9960.c: 620: gesture_data_.index++;
  7165  063B  3001               	movlw	1
  7166  063C  00C4               	movwf	??_readGesture
  7167  063D  0844               	movf	??_readGesture,w
  7168  063E  0024               	movlb	4	; select bank4
  7169  063F  07E0               	addwf	(_gesture_data_^(0+512)+64),f
  7170                           
  7171                           ;APDS9960.c: 621: gesture_data_.total_gestures++;
  7172  0640  3001               	movlw	1
  7173  0641  0020               	movlb	0	; select bank0
  7174  0642  00C4               	movwf	??_readGesture
  7175  0643  0844               	movf	??_readGesture,w
  7176  0644  0024               	movlb	4	; select bank4
  7177  0645  07E1               	addwf	(_gesture_data_^(0+512)+65),f
  7178  0646  3004               	movlw	4
  7179  0647  0020               	movlb	0	; select bank0
  7180  0648  07CC               	addwf	readGesture@i,f
  7181  0649  3000               	movlw	0
  7182  064A  3DCD               	addwfc	readGesture@i+1,f
  7183  064B  2DEB               	goto	i1l3209
  7184  064C                     i1l3211:	
  7185                           
  7186                           ;APDS9960.c: 622: };APDS9960.c: 625: if( processGestureData() )
  7187  064C  3180  2030  3185   	fcall	_processGestureData
  7188  064F  3A00               	xorlw	0
  7189  0650  1903               	skipnz
  7190  0651  2E55               	goto	i1l3215
  7191                           
  7192                           ;APDS9960.c: 626: {;APDS9960.c: 628: if( decodeGesture() ) {
  7193  0652  3182  22F7  3185   	fcall	_decodeGesture
  7194  0655                     i1l3215:	
  7195                           
  7196                           ;APDS9960.c: 630: };APDS9960.c: 631: };APDS9960.c: 634: gesture_data_.index = 0;
  7197  0655  0024               	movlb	4	; select bank4
  7198  0656  01E0               	clrf	(_gesture_data_^(0+512)+64)
  7199                           
  7200                           ;APDS9960.c: 635: gesture_data_.total_gestures = 0;
  7201  0657  01E1               	clrf	(_gesture_data_^(0+512)+65)
  7202  0658                     i1l3175:	
  7203                           
  7204                           ;APDS9960.c: 571: _delay((unsigned long)((30)*(4000000/4000.0)));
  7205  0658  3027               	movlw	39
  7206  0659  0020               	movlb	0	; select bank0
  7207  065A  00C4               	movwf	??_readGesture
  7208  065B  30F5               	movlw	245
  7209  065C                     u335_27:	
  7210  065C  0B89               	decfsz	9,f
  7211  065D  2E5C               	goto	u335_27
  7212  065E  0BC4               	decfsz	??_readGesture,f
  7213  065F  2E5C               	goto	u335_27
  7214                           
  7215                           ;APDS9960.c: 574: gstatus = wireReadDataByte(0xAF);
  7216  0660  30AF               	movlw	175
  7217  0661  318D  25CD  3185   	fcall	i1_wireReadDataByte
  7218  0664  0020               	movlb	0	; select bank0
  7219  0665  00C4               	movwf	??_readGesture
  7220  0666  0844               	movf	??_readGesture,w
  7221  0667  00C8               	movwf	readGesture@gstatus
  7222                           
  7223                           ;APDS9960.c: 579: if( (gstatus & 0b00000001) == 0b00000001 )
  7224  0668  1848               	btfsc	readGesture@gstatus,0
  7225  0669  2DA7               	goto	i1l3181
  7226                           
  7227                           ;APDS9960.c: 641: _delay((unsigned long)((30)*(4000000/4000.0)));
  7228  066A  3027               	movlw	39
  7229  066B  0020               	movlb	0	; select bank0
  7230  066C  00C4               	movwf	??_readGesture
  7231  066D  30F5               	movlw	245
  7232  066E                     u336_27:	
  7233  066E  0B89               	decfsz	9,f
  7234  066F  2E6E               	goto	u336_27
  7235  0670  0BC4               	decfsz	??_readGesture,f
  7236  0671  2E6E               	goto	u336_27
  7237                           
  7238                           ;APDS9960.c: 642: decodeGesture();
  7239  0672  3182  22F7  3185   	fcall	_decodeGesture
  7240                           
  7241                           ;APDS9960.c: 643: motion = gesture_motion_;
  7242  0675  0020               	movlb	0	; select bank0
  7243  0676  0855               	movf	_gesture_motion_+1,w
  7244  0677  00C7               	movwf	readGesture@motion+1
  7245  0678  0854               	movf	_gesture_motion_,w
  7246  0679  00C6               	movwf	readGesture@motion
  7247                           
  7248                           ;APDS9960.c: 645: resetGestureParameters();
  7249  067A  318D  2537         	fcall	i1_resetGestureParameters
  7250                           
  7251                           ;APDS9960.c: 647: return motion;
  7252  067C  0020               	movlb	0	; select bank0
  7253  067D  0847               	movf	readGesture@motion+1,w
  7254  067E  00C3               	movwf	?_readGesture+1
  7255  067F  0846               	movf	readGesture@motion,w
  7256  0680  00C2               	movwf	?_readGesture
  7257  0681  0008               	return
  7258  0682                     __end_of_readGesture:	
  7259                           
  7260                           	psect	text42
  7261  0D37                     __ptext42:	
  7262 ;; *************** function i1_resetGestureParameters *****************
  7263 ;; Defined at:
  7264 ;;		line 453 in file "APDS9960.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		status,2
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_readGesture
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function i1_resetGestureParameters
  7293  0D37                     i1_resetGestureParameters:	
  7294                           
  7295                           ;APDS9960.c: 456: gesture_data_.index = 0;
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in i1_resetGestureParameters: [status,2]
  7299  0D37  0024               	movlb	4	; select bank4
  7300  0D38  01E0               	clrf	(_gesture_data_^(0+512)+64)
  7301                           
  7302                           ;APDS9960.c: 457: gesture_data_.total_gestures = 0;
  7303  0D39  01E1               	clrf	(_gesture_data_^(0+512)+65)
  7304                           
  7305                           ;APDS9960.c: 459: gesture_ud_delta_ = 0;
  7306  0D3A  0020               	movlb	0	; select bank0
  7307  0D3B  01E2               	clrf	_gesture_ud_delta_
  7308  0D3C  01E3               	clrf	_gesture_ud_delta_+1
  7309                           
  7310                           ;APDS9960.c: 460: gesture_lr_delta_ = 0;
  7311  0D3D  01E0               	clrf	_gesture_lr_delta_
  7312  0D3E  01E1               	clrf	_gesture_lr_delta_+1
  7313                           
  7314                           ;APDS9960.c: 462: gesture_ud_count_ = 0;
  7315  0D3F  01DE               	clrf	_gesture_ud_count_
  7316  0D40  01DF               	clrf	_gesture_ud_count_+1
  7317                           
  7318                           ;APDS9960.c: 463: gesture_lr_count_ = 0;
  7319  0D41  01DC               	clrf	_gesture_lr_count_
  7320  0D42  01DD               	clrf	_gesture_lr_count_+1
  7321                           
  7322                           ;APDS9960.c: 465: gesture_near_count_ = 0;
  7323  0D43  01DA               	clrf	_gesture_near_count_
  7324  0D44  01DB               	clrf	_gesture_near_count_+1
  7325                           
  7326                           ;APDS9960.c: 466: gesture_far_count_ = 0;
  7327  0D45  01D8               	clrf	_gesture_far_count_
  7328  0D46  01D9               	clrf	_gesture_far_count_+1
  7329                           
  7330                           ;APDS9960.c: 468: gesture_state_ = 0;
  7331  0D47  01D6               	clrf	_gesture_state_
  7332  0D48  01D7               	clrf	_gesture_state_+1
  7333                           
  7334                           ;APDS9960.c: 469: gesture_motion_ = DIR_NONE;
  7335  0D49  01D4               	clrf	_gesture_motion_
  7336  0D4A  01D5               	clrf	_gesture_motion_+1
  7337  0D4B  0008               	return
  7338  0D4C                     __end_ofi1_resetGestureParameters:	
  7339                           
  7340                           	psect	text43
  7341  0C8A                     __ptext43:	
  7342 ;; *************** function i1_getMode *****************
  7343 ;; Defined at:
  7344 ;;		line 155 in file "APDS9960.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  getMode         1    5[COMMON] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      unsigned char 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, pclath, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    2
  7365 ;; This function calls:
  7366 ;;		i1_wireReadDataByte
  7367 ;; This function is called by:
  7368 ;;		_readGesture
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function i1_getMode
  7374  0C8A                     i1_getMode:	
  7375                           
  7376                           ;APDS9960.c: 157: uint8_t enable_value;;APDS9960.c: 160: enable_value = wireReadDataByte
      +                          (0x80);
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in i1_getMode: [wreg+status,2+status,0+pclath+cstack]
  7380  0C8A  3080               	movlw	128
  7381  0C8B  318D  25CD         	fcall	i1_wireReadDataByte
  7382  0C8D  00F4               	movwf	??i1_getMode
  7383  0C8E  0874               	movf	??i1_getMode,w
  7384  0C8F  00F5               	movwf	i1getMode@enable_value
  7385                           
  7386                           ;APDS9960.c: 162: return enable_value;
  7387  0C90  0875               	movf	i1getMode@enable_value,w
  7388  0C91  0008               	return
  7389  0C92                     __end_ofi1_getMode:	
  7390                           
  7391                           	psect	text44
  7392  0FB9                     __ptext44:	
  7393 ;; *************** function _wireReadDataBlock *****************
  7394 ;; Defined at:
  7395 ;;		line 843 in file "APDS9960.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  reg             1    wreg     unsigned char 
  7398 ;;  val             2    1[COMMON] PTR unsigned char 
  7399 ;;		 -> readGesture@fifo_data2(64), readGesture@fifo_data(64), 
  7400 ;;  len             2    3[COMMON] unsigned int 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  reg             1   10[COMMON] unsigned char 
  7403 ;;  j               1   11[COMMON] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  2    1[COMMON] int 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:       11 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    1
  7420 ;; This function calls:
  7421 ;;		_i2c2_driver_sendNACK
  7422 ;;		i1_i2c2_driver_getRXData
  7423 ;;		i1_i2c2_driver_restart
  7424 ;;		i1_i2c2_driver_setAddr
  7425 ;;		i1_i2c2_driver_start
  7426 ;;		i1_i2c2_driver_startRX
  7427 ;;		i1_i2c2_driver_stop
  7428 ;; This function is called by:
  7429 ;;		_readGesture
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _wireReadDataBlock
  7435  0FB9                     _wireReadDataBlock:	
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _wireReadDataBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7439                           ;wireReadDataBlock@reg stored from wreg
  7440  0FB9  00FA               	movwf	wireReadDataBlock@reg
  7441                           
  7442                           ;APDS9960.c: 861: i2c2_driver_start();
  7443  0FBA  318C  244A  318F   	fcall	i1_i2c2_driver_start
  7444                           
  7445                           ;APDS9960.c: 862: i2c2_driver_setAddr((0x39 << 1));
  7446  0FBD  3072               	movlw	114
  7447  0FBE  318C  246D  318F   	fcall	i1_i2c2_driver_setAddr
  7448                           
  7449                           ;APDS9960.c: 863: i2c2_driver_setAddr(reg);
  7450  0FC1  087A               	movf	wireReadDataBlock@reg,w
  7451  0FC2  318C  246D  318F   	fcall	i1_i2c2_driver_setAddr
  7452                           
  7453                           ;APDS9960.c: 865: for(j=0; j<len; j++)
  7454  0FC5  01FB               	clrf	wireReadDataBlock@j
  7455  0FC6                     i1l2811:	
  7456  0FC6  087B               	movf	wireReadDataBlock@j,w
  7457  0FC7  00F5               	movwf	??_wireReadDataBlock
  7458  0FC8  01F6               	clrf	??_wireReadDataBlock+1
  7459  0FC9  0874               	movf	wireReadDataBlock@len+1,w
  7460  0FCA  0276               	subwf	??_wireReadDataBlock+1,w
  7461  0FCB  1D03               	skipz
  7462  0FCC  2FCF               	goto	u192_25
  7463  0FCD  0873               	movf	wireReadDataBlock@len,w
  7464  0FCE  0275               	subwf	??_wireReadDataBlock,w
  7465  0FCF                     u192_25:	
  7466  0FCF  1803               	btfsc	3,0
  7467  0FD0  2FF6               	goto	i1l2813
  7468                           
  7469                           ;APDS9960.c: 866: {;APDS9960.c: 867: i2c2_driver_restart();
  7470  0FD1  318C  2447  318F   	fcall	i1_i2c2_driver_restart
  7471                           
  7472                           ;APDS9960.c: 868: i2c2_driver_startRX();
  7473  0FD4  318C  244D  318F   	fcall	i1_i2c2_driver_startRX
  7474                           
  7475                           ;APDS9960.c: 869: i2c2_driver_setAddr(0x39 << 1);
  7476  0FD7  3072               	movlw	114
  7477  0FD8  318C  246D  318F   	fcall	i1_i2c2_driver_setAddr
  7478                           
  7479                           ;APDS9960.c: 870: val[j] = i2c2_driver_getRXData();
  7480  0FDB  318C  2441  318F   	fcall	i1_i2c2_driver_getRXData
  7481  0FDE  00F5               	movwf	??_wireReadDataBlock
  7482  0FDF  087B               	movf	wireReadDataBlock@j,w
  7483  0FE0  00F6               	movwf	??_wireReadDataBlock+1
  7484  0FE1  01F7               	clrf	??_wireReadDataBlock+2
  7485  0FE2  0876               	movf	??_wireReadDataBlock+1,w
  7486  0FE3  0771               	addwf	wireReadDataBlock@val,w
  7487  0FE4  00F8               	movwf	??_wireReadDataBlock+3
  7488  0FE5  0877               	movf	??_wireReadDataBlock+2,w
  7489  0FE6  3D72               	addwfc	wireReadDataBlock@val+1,w
  7490  0FE7  00F9               	movwf	??_wireReadDataBlock+4
  7491  0FE8  0878               	movf	??_wireReadDataBlock+3,w
  7492  0FE9  0086               	movwf	6
  7493  0FEA  0879               	movf	??_wireReadDataBlock+4,w
  7494  0FEB  0087               	movwf	7
  7495  0FEC  0875               	movf	??_wireReadDataBlock,w
  7496  0FED  0081               	movwf	1
  7497                           
  7498                           ;APDS9960.c: 871: i2c2_driver_sendNACK();
  7499  0FEE  318C  2465  318F   	fcall	_i2c2_driver_sendNACK
  7500  0FF1  3001               	movlw	1
  7501  0FF2  00F5               	movwf	??_wireReadDataBlock
  7502  0FF3  0875               	movf	??_wireReadDataBlock,w
  7503  0FF4  07FB               	addwf	wireReadDataBlock@j,f
  7504  0FF5  2FC6               	goto	i1l2811
  7505  0FF6                     i1l2813:	
  7506                           
  7507                           ;APDS9960.c: 872: };APDS9960.c: 873: i2c2_driver_stop();
  7508  0FF6  318C  2450         	fcall	i1_i2c2_driver_stop
  7509                           
  7510                           ;APDS9960.c: 874: return (int)j;
  7511  0FF8  087B               	movf	wireReadDataBlock@j,w
  7512  0FF9  00F5               	movwf	??_wireReadDataBlock
  7513  0FFA  01F6               	clrf	??_wireReadDataBlock+1
  7514  0FFB  0875               	movf	??_wireReadDataBlock,w
  7515  0FFC  00F1               	movwf	?_wireReadDataBlock
  7516  0FFD  0876               	movf	??_wireReadDataBlock+1,w
  7517  0FFE  00F2               	movwf	?_wireReadDataBlock+1
  7518  0FFF  0008               	return
  7519  1000                     __end_of_wireReadDataBlock:	
  7520                           
  7521                           	psect	text45
  7522  0C65                     __ptext45:	
  7523 ;; *************** function _i2c2_driver_sendNACK *****************
  7524 ;; Defined at:
  7525 ;;		line 202 in file "mcc_generated_files/i2c2_driver.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		None
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_wireReadDataBlock
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           
  7553                           ;psect for function _i2c2_driver_sendNACK
  7554  0C65                     _i2c2_driver_sendNACK:	
  7555                           
  7556                           ;i2c2_driver.c: 204: SSP2CON2bits.ACKDT = 1;
  7557                           
  7558                           ;incstack = 0
  7559                           ; Regs used in _i2c2_driver_sendNACK: []
  7560  0C65  0024               	movlb	4	; select bank4
  7561  0C66  169E               	bsf	30,5	;volatile
  7562                           
  7563                           ;i2c2_driver.c: 205: SSP2CON2bits.ACKEN = 1;
  7564  0C67  161E               	bsf	30,4	;volatile
  7565  0C68  0008               	return
  7566  0C69                     __end_of_i2c2_driver_sendNACK:	
  7567                           
  7568                           	psect	text46
  7569  0030                     __ptext46:	
  7570 ;; *************** function _processGestureData *****************
  7571 ;; Defined at:
  7572 ;;		line 653 in file "APDS9960.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  i               2   32[BANK0 ] int 
  7577 ;;  lr_delta        2   30[BANK0 ] int 
  7578 ;;  ud_delta        2   28[BANK0 ] int 
  7579 ;;  lr_ratio_las    2   10[BANK0 ] int 
  7580 ;;  ud_ratio_las    2    8[BANK0 ] int 
  7581 ;;  lr_ratio_fir    2    6[BANK0 ] int 
  7582 ;;  ud_ratio_fir    2    4[BANK0 ] int 
  7583 ;;  r_first         1   27[BANK0 ] unsigned char 
  7584 ;;  l_first         1   26[BANK0 ] unsigned char 
  7585 ;;  d_first         1   25[BANK0 ] unsigned char 
  7586 ;;  u_first         1   24[BANK0 ] unsigned char 
  7587 ;;  r_last          1   23[BANK0 ] unsigned char 
  7588 ;;  l_last          1   22[BANK0 ] unsigned char 
  7589 ;;  d_last          1   21[BANK0 ] unsigned char 
  7590 ;;  u_last          1   20[BANK0 ] unsigned char 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      unsigned char 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;Total ram usage:       32 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    1
  7607 ;; This function calls:
  7608 ;;		___awdiv
  7609 ;;		___wmul
  7610 ;; This function is called by:
  7611 ;;		_readGesture
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _processGestureData
  7617  0030                     _processGestureData:	
  7618                           
  7619                           ;APDS9960.c: 655: uint8_t u_first = 0;
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _processGestureData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7623  0030  0020               	movlb	0	; select bank0
  7624  0031  01B8               	clrf	processGestureData@u_first
  7625                           
  7626                           ;APDS9960.c: 656: uint8_t d_first = 0;
  7627  0032  01B9               	clrf	processGestureData@d_first
  7628                           
  7629                           ;APDS9960.c: 657: uint8_t l_first = 0;
  7630  0033  01BA               	clrf	processGestureData@l_first
  7631                           
  7632                           ;APDS9960.c: 658: uint8_t r_first = 0;
  7633  0034  01BB               	clrf	processGestureData@r_first
  7634                           
  7635                           ;APDS9960.c: 659: uint8_t u_last = 0;
  7636  0035  01B4               	clrf	processGestureData@u_last
  7637                           
  7638                           ;APDS9960.c: 660: uint8_t d_last = 0;
  7639  0036  01B5               	clrf	processGestureData@d_last
  7640                           
  7641                           ;APDS9960.c: 661: uint8_t l_last = 0;
  7642  0037  01B6               	clrf	processGestureData@l_last
  7643                           
  7644                           ;APDS9960.c: 662: uint8_t r_last = 0;
  7645  0038  01B7               	clrf	processGestureData@r_last
  7646                           
  7647                           ;APDS9960.c: 663: int ud_ratio_first;;APDS9960.c: 664: int lr_ratio_first;;APDS9960.c: 6
      +                          65: int ud_ratio_last;;APDS9960.c: 666: int lr_ratio_last;;APDS9960.c: 667: int ud_delta
      +                          ;;APDS9960.c: 668: int lr_delta;;APDS9960.c: 669: int i;;APDS9960.c: 672: if( gesture_da
      +                          ta_.total_gestures <= 4 ) {
  7648  0039  3005               	movlw	5
  7649  003A  0024               	movlb	4	; select bank4
  7650  003B  0261               	subwf	(_gesture_data_^(0+512)+65),w
  7651  003C  1803               	skipnc
  7652  003D  2840               	goto	i1l2827
  7653  003E                     i1l2823:	
  7654                           
  7655                           ;APDS9960.c: 673: return 0;
  7656  003E  3000               	movlw	0
  7657  003F  0008               	return
  7658  0040                     i1l2827:	
  7659                           
  7660                           ;APDS9960.c: 674: };APDS9960.c: 677: if( (gesture_data_.total_gestures <= 32) && (gestur
      +                          e_data_.total_gestures > 0) ) {
  7661  0040  3021               	movlw	33
  7662  0041  0261               	subwf	(_gesture_data_^(0+512)+65),w
  7663  0042  1803               	skipnc
  7664  0043  290A               	goto	i1l2877
  7665  0044  0861               	movf	(_gesture_data_^(0+512)+65),w
  7666  0045  1903               	btfsc	3,2
  7667  0046  290A               	goto	i1l2877
  7668                           
  7669                           ;APDS9960.c: 681: for( i = 0; i < gesture_data_.total_gestures; i++ ) {
  7670  0047  0020               	movlb	0	; select bank0
  7671  0048  01C0               	clrf	processGestureData@i
  7672  0049  01C1               	clrf	processGestureData@i+1
  7673  004A  284F               	goto	i1l607
  7674  004B                     i1l2843:	
  7675                           ;APDS9960.c: 691: break;
  7676                           
  7677  004B  3001               	movlw	1
  7678  004C  07C0               	addwf	processGestureData@i,f
  7679  004D  3000               	movlw	0
  7680  004E  3DC1               	addwfc	processGestureData@i+1,f
  7681  004F                     i1l607:	
  7682  004F  0841               	movf	processGestureData@i+1,w
  7683  0050  3A80               	xorlw	128
  7684  0051  00FB               	movwf	??_processGestureData
  7685  0052  3080               	movlw	128
  7686  0053  027B               	subwf	??_processGestureData,w
  7687  0054  1D03               	skipz
  7688  0055  285A               	goto	u200_25
  7689  0056  0024               	movlb	4	; select bank4
  7690  0057  0861               	movf	(_gesture_data_^(0+512)+65),w
  7691  0058  0020               	movlb	0	; select bank0
  7692  0059  0240               	subwf	processGestureData@i,w
  7693  005A                     u200_25:	
  7694  005A  1803               	btfsc	3,0
  7695  005B  28A5               	goto	i1l2845
  7696                           
  7697                           ;APDS9960.c: 682: if( (gesture_data_.u_data[i] > 10) &&;APDS9960.c: 683: (gesture_data_.
      +                          d_data[i] > 10) &&;APDS9960.c: 684: (gesture_data_.l_data[i] > 10) &&;APDS9960.c: 685: (
      +                          gesture_data_.r_data[i] > 10) ) {
  7698  005C  0020               	movlb	0	; select bank0
  7699  005D  0840               	movf	processGestureData@i,w
  7700  005E  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7701  005F  0086               	movwf	6
  7702  0060  3002               	movlw	2	; select bank4/5
  7703  0061  0087               	movwf	7
  7704  0062  300B               	movlw	11
  7705  0063  0201               	subwf	1,w
  7706  0064  1C03               	skipc
  7707  0065  284B               	goto	i1l2843
  7708  0066  0840               	movf	processGestureData@i,w
  7709  0067  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  7710  0068  0086               	movwf	6
  7711  0069  3002               	movlw	2	; select bank4/5
  7712  006A  0087               	movwf	7
  7713  006B  300B               	movlw	11
  7714  006C  0201               	subwf	1,w
  7715  006D  1C03               	skipc
  7716  006E  284B               	goto	i1l2843
  7717  006F  0840               	movf	processGestureData@i,w
  7718  0070  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  7719  0071  0086               	movwf	6
  7720  0072  3002               	movlw	2	; select bank4/5
  7721  0073  0087               	movwf	7
  7722  0074  300B               	movlw	11
  7723  0075  0201               	subwf	1,w
  7724  0076  1C03               	skipc
  7725  0077  284B               	goto	i1l2843
  7726  0078  0840               	movf	processGestureData@i,w
  7727  0079  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  7728  007A  0086               	movwf	6
  7729  007B  3002               	movlw	2	; select bank4/5
  7730  007C  0087               	movwf	7
  7731  007D  300B               	movlw	11
  7732  007E  0201               	subwf	1,w
  7733  007F  1C03               	skipc
  7734  0080  284B               	goto	i1l2843
  7735                           
  7736                           ;APDS9960.c: 687: u_first = gesture_data_.u_data[i];
  7737  0081  0840               	movf	processGestureData@i,w
  7738  0082  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7739  0083  0086               	movwf	6
  7740  0084  3002               	movlw	2	; select bank4/5
  7741  0085  0087               	movwf	7
  7742  0086  0801               	movf	1,w
  7743  0087  00FB               	movwf	??_processGestureData
  7744  0088  087B               	movf	??_processGestureData,w
  7745  0089  00B8               	movwf	processGestureData@u_first
  7746                           
  7747                           ;APDS9960.c: 688: d_first = gesture_data_.d_data[i];
  7748  008A  0840               	movf	processGestureData@i,w
  7749  008B  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  7750  008C  0086               	movwf	6
  7751  008D  3002               	movlw	2	; select bank4/5
  7752  008E  0087               	movwf	7
  7753  008F  0801               	movf	1,w
  7754  0090  00FB               	movwf	??_processGestureData
  7755  0091  087B               	movf	??_processGestureData,w
  7756  0092  00B9               	movwf	processGestureData@d_first
  7757                           
  7758                           ;APDS9960.c: 689: l_first = gesture_data_.l_data[i];
  7759  0093  0840               	movf	processGestureData@i,w
  7760  0094  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  7761  0095  0086               	movwf	6
  7762  0096  3002               	movlw	2	; select bank4/5
  7763  0097  0087               	movwf	7
  7764  0098  0801               	movf	1,w
  7765  0099  00FB               	movwf	??_processGestureData
  7766  009A  087B               	movf	??_processGestureData,w
  7767  009B  00BA               	movwf	processGestureData@l_first
  7768                           
  7769                           ;APDS9960.c: 690: r_first = gesture_data_.r_data[i];
  7770  009C  0840               	movf	processGestureData@i,w
  7771  009D  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  7772  009E  0086               	movwf	6
  7773  009F  3002               	movlw	2	; select bank4/5
  7774  00A0  0087               	movwf	7
  7775  00A1  0801               	movf	1,w
  7776  00A2  00FB               	movwf	??_processGestureData
  7777  00A3  087B               	movf	??_processGestureData,w
  7778  00A4  00BB               	movwf	processGestureData@r_first
  7779  00A5                     i1l2845:	
  7780                           
  7781                           ;APDS9960.c: 692: };APDS9960.c: 693: };APDS9960.c: 696: if( (u_first == 0) || (d_first =
      +                          = 0) || (l_first == 0) || (r_first == 0) ) {
  7782  00A5  0020               	movlb	0	; select bank0
  7783  00A6  0838               	movf	processGestureData@u_first,w
  7784  00A7  1903               	btfsc	3,2
  7785  00A8  283E               	goto	i1l2823
  7786  00A9  0839               	movf	processGestureData@d_first,w
  7787  00AA  1903               	btfsc	3,2
  7788  00AB  283E               	goto	i1l2823
  7789  00AC  083A               	movf	processGestureData@l_first,w
  7790  00AD  1903               	btfsc	3,2
  7791  00AE  283E               	goto	i1l2823
  7792  00AF  083B               	movf	processGestureData@r_first,w
  7793  00B0  1903               	btfsc	3,2
  7794  00B1  283E               	goto	i1l2823
  7795                           
  7796                           ;APDS9960.c: 700: };APDS9960.c: 702: for( i = gesture_data_.total_gestures - 1; i >= 0; 
      +                          i-- ) {
  7797  00B2  0024               	movlb	4	; select bank4
  7798  00B3  0861               	movf	(_gesture_data_^(0+512)+65),w
  7799  00B4  3EFF               	addlw	255
  7800  00B5  0020               	movlb	0	; select bank0
  7801  00B6  00C0               	movwf	processGestureData@i
  7802  00B7  30FF               	movlw	255
  7803  00B8  1803               	skipnc
  7804  00B9  3000               	movlw	0
  7805  00BA  00C1               	movwf	processGestureData@i+1
  7806                           
  7807                           ;APDS9960.c: 713: break;
  7808  00BB  28C0               	goto	i1l2859
  7809  00BC                     i1l2873:	
  7810  00BC  30FF               	movlw	255
  7811  00BD  07C0               	addwf	processGestureData@i,f
  7812  00BE  30FF               	movlw	255
  7813  00BF  3DC1               	addwfc	processGestureData@i+1,f
  7814  00C0                     i1l2859:	
  7815  00C0  1BC1               	btfsc	processGestureData@i+1,7
  7816  00C1  290A               	goto	i1l2877
  7817                           
  7818                           ;APDS9960.c: 704: if( (gesture_data_.u_data[i] > 10) &&;APDS9960.c: 705: (gesture_data_.
      +                          d_data[i] > 10) &&;APDS9960.c: 706: (gesture_data_.l_data[i] > 10) &&;APDS9960.c: 707: (
      +                          gesture_data_.r_data[i] > 10) ) {
  7819  00C2  0840               	movf	processGestureData@i,w
  7820  00C3  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7821  00C4  0086               	movwf	6
  7822  00C5  3002               	movlw	2	; select bank4/5
  7823  00C6  0087               	movwf	7
  7824  00C7  300B               	movlw	11
  7825  00C8  0201               	subwf	1,w
  7826  00C9  1C03               	skipc
  7827  00CA  28BC               	goto	i1l2873
  7828  00CB  0840               	movf	processGestureData@i,w
  7829  00CC  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  7830  00CD  0086               	movwf	6
  7831  00CE  3002               	movlw	2	; select bank4/5
  7832  00CF  0087               	movwf	7
  7833  00D0  300B               	movlw	11
  7834  00D1  0201               	subwf	1,w
  7835  00D2  1C03               	skipc
  7836  00D3  28BC               	goto	i1l2873
  7837  00D4  0840               	movf	processGestureData@i,w
  7838  00D5  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  7839  00D6  0086               	movwf	6
  7840  00D7  3002               	movlw	2	; select bank4/5
  7841  00D8  0087               	movwf	7
  7842  00D9  300B               	movlw	11
  7843  00DA  0201               	subwf	1,w
  7844  00DB  1C03               	skipc
  7845  00DC  28BC               	goto	i1l2873
  7846  00DD  0840               	movf	processGestureData@i,w
  7847  00DE  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  7848  00DF  0086               	movwf	6
  7849  00E0  3002               	movlw	2	; select bank4/5
  7850  00E1  0087               	movwf	7
  7851  00E2  300B               	movlw	11
  7852  00E3  0201               	subwf	1,w
  7853  00E4  1C03               	skipc
  7854  00E5  28BC               	goto	i1l2873
  7855                           
  7856                           ;APDS9960.c: 709: u_last = gesture_data_.u_data[i];
  7857  00E6  0840               	movf	processGestureData@i,w
  7858  00E7  3E20               	addlw	(low (_gesture_data_| (0+512)))& (0+255)
  7859  00E8  0086               	movwf	6
  7860  00E9  3002               	movlw	2	; select bank4/5
  7861  00EA  0087               	movwf	7
  7862  00EB  0801               	movf	1,w
  7863  00EC  00FB               	movwf	??_processGestureData
  7864  00ED  087B               	movf	??_processGestureData,w
  7865  00EE  00B4               	movwf	processGestureData@u_last
  7866                           
  7867                           ;APDS9960.c: 710: d_last = gesture_data_.d_data[i];
  7868  00EF  0840               	movf	processGestureData@i,w
  7869  00F0  3E30               	addlw	(low ((_gesture_data_| (0+512)+16)))& (0+255)
  7870  00F1  0086               	movwf	6
  7871  00F2  3002               	movlw	2	; select bank4/5
  7872  00F3  0087               	movwf	7
  7873  00F4  0801               	movf	1,w
  7874  00F5  00FB               	movwf	??_processGestureData
  7875  00F6  087B               	movf	??_processGestureData,w
  7876  00F7  00B5               	movwf	processGestureData@d_last
  7877                           
  7878                           ;APDS9960.c: 711: l_last = gesture_data_.l_data[i];
  7879  00F8  0840               	movf	processGestureData@i,w
  7880  00F9  3E40               	addlw	(low ((_gesture_data_| (0+512)+32)))& (0+255)
  7881  00FA  0086               	movwf	6
  7882  00FB  3002               	movlw	2	; select bank4/5
  7883  00FC  0087               	movwf	7
  7884  00FD  0801               	movf	1,w
  7885  00FE  00FB               	movwf	??_processGestureData
  7886  00FF  087B               	movf	??_processGestureData,w
  7887  0100  00B6               	movwf	processGestureData@l_last
  7888                           
  7889                           ;APDS9960.c: 712: r_last = gesture_data_.r_data[i];
  7890  0101  0840               	movf	processGestureData@i,w
  7891  0102  3E50               	addlw	(low ((_gesture_data_| (0+512)+48)))& (0+255)
  7892  0103  0086               	movwf	6
  7893  0104  3002               	movlw	2	; select bank4/5
  7894  0105  0087               	movwf	7
  7895  0106  0801               	movf	1,w
  7896  0107  00FB               	movwf	??_processGestureData
  7897  0108  087B               	movf	??_processGestureData,w
  7898  0109  00B7               	movwf	processGestureData@r_last
  7899  010A                     i1l2877:	
  7900                           
  7901                           ;APDS9960.c: 714: };APDS9960.c: 715: };APDS9960.c: 716: };APDS9960.c: 719: ud_ratio_firs
      +                          t = ((u_first - d_first) * 100) / (u_first + d_first);
  7902  010A  0020               	movlb	0	; select bank0
  7903  010B  0838               	movf	processGestureData@u_first,w
  7904  010C  0739               	addwf	processGestureData@d_first,w
  7905  010D  00F6               	movwf	___awdiv@divisor
  7906  010E  01F7               	clrf	___awdiv@divisor+1
  7907  010F  0DF7               	rlf	___awdiv@divisor+1,f
  7908  0110  0839               	movf	processGestureData@d_first,w
  7909  0111  0238               	subwf	processGestureData@u_first,w
  7910  0112  00F0               	movwf	___wmul@multiplier
  7911  0113  01F1               	clrf	___wmul@multiplier+1
  7912  0114  1C03               	skipc
  7913  0115  03F1               	decf	___wmul@multiplier+1,f
  7914  0116  3064               	movlw	100
  7915  0117  00F2               	movwf	___wmul@multiplicand
  7916  0118  3000               	movlw	0
  7917  0119  00F3               	movwf	___wmul@multiplicand+1
  7918  011A  318D  2579  3180   	fcall	___wmul
  7919  011D  0871               	movf	?___wmul+1,w
  7920  011E  00F9               	movwf	___awdiv@dividend+1
  7921  011F  0870               	movf	?___wmul,w
  7922  0120  00F8               	movwf	___awdiv@dividend
  7923  0121  3186  26DE  3180   	fcall	___awdiv
  7924  0124  0877               	movf	?___awdiv+1,w
  7925  0125  0020               	movlb	0	; select bank0
  7926  0126  00A5               	movwf	processGestureData@ud_ratio_first+1
  7927  0127  0876               	movf	?___awdiv,w
  7928  0128  00A4               	movwf	processGestureData@ud_ratio_first
  7929                           
  7930                           ;APDS9960.c: 720: lr_ratio_first = ((l_first - r_first) * 100) / (l_first + r_first);
  7931  0129  083A               	movf	processGestureData@l_first,w
  7932  012A  073B               	addwf	processGestureData@r_first,w
  7933  012B  00F6               	movwf	___awdiv@divisor
  7934  012C  01F7               	clrf	___awdiv@divisor+1
  7935  012D  0DF7               	rlf	___awdiv@divisor+1,f
  7936  012E  083B               	movf	processGestureData@r_first,w
  7937  012F  023A               	subwf	processGestureData@l_first,w
  7938  0130  00F0               	movwf	___wmul@multiplier
  7939  0131  01F1               	clrf	___wmul@multiplier+1
  7940  0132  1C03               	skipc
  7941  0133  03F1               	decf	___wmul@multiplier+1,f
  7942  0134  3064               	movlw	100
  7943  0135  00F2               	movwf	___wmul@multiplicand
  7944  0136  3000               	movlw	0
  7945  0137  00F3               	movwf	___wmul@multiplicand+1
  7946  0138  318D  2579  3180   	fcall	___wmul
  7947  013B  0871               	movf	?___wmul+1,w
  7948  013C  00F9               	movwf	___awdiv@dividend+1
  7949  013D  0870               	movf	?___wmul,w
  7950  013E  00F8               	movwf	___awdiv@dividend
  7951  013F  3186  26DE  3180   	fcall	___awdiv
  7952  0142  0877               	movf	?___awdiv+1,w
  7953  0143  0020               	movlb	0	; select bank0
  7954  0144  00A7               	movwf	processGestureData@lr_ratio_first+1
  7955  0145  0876               	movf	?___awdiv,w
  7956  0146  00A6               	movwf	processGestureData@lr_ratio_first
  7957                           
  7958                           ;APDS9960.c: 721: ud_ratio_last = ((u_last - d_last) * 100) / (u_last + d_last);
  7959  0147  0834               	movf	processGestureData@u_last,w
  7960  0148  0735               	addwf	processGestureData@d_last,w
  7961  0149  00F6               	movwf	___awdiv@divisor
  7962  014A  01F7               	clrf	___awdiv@divisor+1
  7963  014B  0DF7               	rlf	___awdiv@divisor+1,f
  7964  014C  0835               	movf	processGestureData@d_last,w
  7965  014D  0234               	subwf	processGestureData@u_last,w
  7966  014E  00F0               	movwf	___wmul@multiplier
  7967  014F  01F1               	clrf	___wmul@multiplier+1
  7968  0150  1C03               	skipc
  7969  0151  03F1               	decf	___wmul@multiplier+1,f
  7970  0152  3064               	movlw	100
  7971  0153  00F2               	movwf	___wmul@multiplicand
  7972  0154  3000               	movlw	0
  7973  0155  00F3               	movwf	___wmul@multiplicand+1
  7974  0156  318D  2579  3180   	fcall	___wmul
  7975  0159  0871               	movf	?___wmul+1,w
  7976  015A  00F9               	movwf	___awdiv@dividend+1
  7977  015B  0870               	movf	?___wmul,w
  7978  015C  00F8               	movwf	___awdiv@dividend
  7979  015D  3186  26DE  3180   	fcall	___awdiv
  7980  0160  0877               	movf	?___awdiv+1,w
  7981  0161  0020               	movlb	0	; select bank0
  7982  0162  00A9               	movwf	processGestureData@ud_ratio_last+1
  7983  0163  0876               	movf	?___awdiv,w
  7984  0164  00A8               	movwf	processGestureData@ud_ratio_last
  7985                           
  7986                           ;APDS9960.c: 722: lr_ratio_last = ((l_last - r_last) * 100) / (l_last + r_last);
  7987  0165  0836               	movf	processGestureData@l_last,w
  7988  0166  0737               	addwf	processGestureData@r_last,w
  7989  0167  00F6               	movwf	___awdiv@divisor
  7990  0168  01F7               	clrf	___awdiv@divisor+1
  7991  0169  0DF7               	rlf	___awdiv@divisor+1,f
  7992  016A  0837               	movf	processGestureData@r_last,w
  7993  016B  0236               	subwf	processGestureData@l_last,w
  7994  016C  00F0               	movwf	___wmul@multiplier
  7995  016D  01F1               	clrf	___wmul@multiplier+1
  7996  016E  1C03               	skipc
  7997  016F  03F1               	decf	___wmul@multiplier+1,f
  7998  0170  3064               	movlw	100
  7999  0171  00F2               	movwf	___wmul@multiplicand
  8000  0172  3000               	movlw	0
  8001  0173  00F3               	movwf	___wmul@multiplicand+1
  8002  0174  318D  2579  3180   	fcall	___wmul
  8003  0177  0871               	movf	?___wmul+1,w
  8004  0178  00F9               	movwf	___awdiv@dividend+1
  8005  0179  0870               	movf	?___wmul,w
  8006  017A  00F8               	movwf	___awdiv@dividend
  8007  017B  3186  26DE  3180   	fcall	___awdiv
  8008  017E  0877               	movf	?___awdiv+1,w
  8009  017F  0020               	movlb	0	; select bank0
  8010  0180  00AB               	movwf	processGestureData@lr_ratio_last+1
  8011  0181  0876               	movf	?___awdiv,w
  8012  0182  00AA               	movwf	processGestureData@lr_ratio_last
  8013                           
  8014                           ;APDS9960.c: 725: ud_delta = ud_ratio_last - ud_ratio_first;
  8015  0183  0824               	movf	processGestureData@ud_ratio_first,w
  8016  0184  0228               	subwf	processGestureData@ud_ratio_last,w
  8017  0185  00BC               	movwf	processGestureData@ud_delta
  8018  0186  0825               	movf	processGestureData@ud_ratio_first+1,w
  8019  0187  3B29               	subwfb	processGestureData@ud_ratio_last+1,w
  8020  0188  00BD               	movwf	processGestureData@ud_delta+1
  8021                           
  8022                           ;APDS9960.c: 726: lr_delta = lr_ratio_last - lr_ratio_first;
  8023  0189  0826               	movf	processGestureData@lr_ratio_first,w
  8024  018A  022A               	subwf	processGestureData@lr_ratio_last,w
  8025  018B  00BE               	movwf	processGestureData@lr_delta
  8026  018C  0827               	movf	processGestureData@lr_ratio_first+1,w
  8027  018D  3B2B               	subwfb	processGestureData@lr_ratio_last+1,w
  8028  018E  00BF               	movwf	processGestureData@lr_delta+1
  8029                           
  8030                           ;APDS9960.c: 729: gesture_ud_delta_ += ud_delta;
  8031  018F  083C               	movf	processGestureData@ud_delta,w
  8032  0190  07E2               	addwf	_gesture_ud_delta_,f
  8033  0191  083D               	movf	processGestureData@ud_delta+1,w
  8034  0192  3DE3               	addwfc	_gesture_ud_delta_+1,f
  8035                           
  8036                           ;APDS9960.c: 730: gesture_lr_delta_ += lr_delta;
  8037  0193  083E               	movf	processGestureData@lr_delta,w
  8038  0194  07E0               	addwf	_gesture_lr_delta_,f
  8039  0195  083F               	movf	processGestureData@lr_delta+1,w
  8040  0196  3DE1               	addwfc	_gesture_lr_delta_+1,f
  8041                           
  8042                           ;APDS9960.c: 733: if( gesture_ud_delta_ >= 50 ) {
  8043  0197  0863               	movf	_gesture_ud_delta_+1,w
  8044  0198  3A80               	xorlw	128
  8045  0199  00FB               	movwf	??_processGestureData
  8046  019A  3080               	movlw	128
  8047  019B  027B               	subwf	??_processGestureData,w
  8048  019C  1D03               	skipz
  8049  019D  29A0               	goto	u210_25
  8050  019E  3032               	movlw	50
  8051  019F  0262               	subwf	_gesture_ud_delta_,w
  8052  01A0                     u210_25:	
  8053  01A0  1C03               	skipc
  8054  01A1  29A7               	goto	i1l2891
  8055                           
  8056                           ;APDS9960.c: 734: gesture_ud_count_ = 1;
  8057  01A2  3001               	movlw	1
  8058  01A3  0020               	movlb	0	; select bank0
  8059  01A4  00DE               	movwf	_gesture_ud_count_
  8060  01A5  3000               	movlw	0
  8061  01A6  29B7               	goto	L3
  8062  01A7                     i1l2891:	
  8063                           ;APDS9960.c: 735: } else if( gesture_ud_delta_ <= -50 ) {
  8064                           
  8065  01A7  0020               	movlb	0	; select bank0
  8066  01A8  0863               	movf	_gesture_ud_delta_+1,w
  8067  01A9  3A80               	xorlw	128
  8068  01AA  00FB               	movwf	??_processGestureData
  8069  01AB  307F               	movlw	127
  8070  01AC  027B               	subwf	??_processGestureData,w
  8071  01AD  1D03               	skipz
  8072  01AE  29B1               	goto	u211_25
  8073  01AF  30CF               	movlw	207
  8074  01B0  0262               	subwf	_gesture_ud_delta_,w
  8075  01B1                     u211_25:	
  8076  01B1  1803               	skipnc
  8077  01B2  29B9               	goto	i1l2895
  8078                           
  8079                           ;APDS9960.c: 736: gesture_ud_count_ = -1;
  8080  01B3  30FF               	movlw	255
  8081  01B4  0020               	movlb	0	; select bank0
  8082  01B5  00DE               	movwf	_gesture_ud_count_
  8083  01B6  30FF               	movlw	255
  8084  01B7                     L3:	
  8085  01B7  00DF               	movwf	_gesture_ud_count_+1
  8086                           
  8087                           ;APDS9960.c: 737: } else {
  8088  01B8  29BC               	goto	i1l2897
  8089  01B9                     i1l2895:	
  8090                           
  8091                           ;APDS9960.c: 738: gesture_ud_count_ = 0;
  8092  01B9  0020               	movlb	0	; select bank0
  8093  01BA  01DE               	clrf	_gesture_ud_count_
  8094  01BB  01DF               	clrf	_gesture_ud_count_+1
  8095  01BC                     i1l2897:	
  8096                           
  8097                           ;APDS9960.c: 739: };APDS9960.c: 742: if( gesture_lr_delta_ >= 50 ) {
  8098  01BC  0861               	movf	_gesture_lr_delta_+1,w
  8099  01BD  3A80               	xorlw	128
  8100  01BE  00FB               	movwf	??_processGestureData
  8101  01BF  3080               	movlw	128
  8102  01C0  027B               	subwf	??_processGestureData,w
  8103  01C1  1D03               	skipz
  8104  01C2  29C5               	goto	u212_25
  8105  01C3  3032               	movlw	50
  8106  01C4  0260               	subwf	_gesture_lr_delta_,w
  8107  01C5                     u212_25:	
  8108  01C5  1C03               	skipc
  8109  01C6  29CC               	goto	i1l2901
  8110                           
  8111                           ;APDS9960.c: 743: gesture_lr_count_ = 1;
  8112  01C7  3001               	movlw	1
  8113  01C8  0020               	movlb	0	; select bank0
  8114  01C9  00DC               	movwf	_gesture_lr_count_
  8115  01CA  3000               	movlw	0
  8116  01CB  29DC               	goto	L4
  8117  01CC                     i1l2901:	
  8118                           ;APDS9960.c: 744: } else if( gesture_lr_delta_ <= -50 ) {
  8119                           
  8120  01CC  0020               	movlb	0	; select bank0
  8121  01CD  0861               	movf	_gesture_lr_delta_+1,w
  8122  01CE  3A80               	xorlw	128
  8123  01CF  00FB               	movwf	??_processGestureData
  8124  01D0  307F               	movlw	127
  8125  01D1  027B               	subwf	??_processGestureData,w
  8126  01D2  1D03               	skipz
  8127  01D3  29D6               	goto	u213_25
  8128  01D4  30CF               	movlw	207
  8129  01D5  0260               	subwf	_gesture_lr_delta_,w
  8130  01D6                     u213_25:	
  8131  01D6  1803               	skipnc
  8132  01D7  29DE               	goto	i1l2905
  8133                           
  8134                           ;APDS9960.c: 745: gesture_lr_count_ = -1;
  8135  01D8  30FF               	movlw	255
  8136  01D9  0020               	movlb	0	; select bank0
  8137  01DA  00DC               	movwf	_gesture_lr_count_
  8138  01DB  30FF               	movlw	255
  8139  01DC                     L4:	
  8140  01DC  00DD               	movwf	_gesture_lr_count_+1
  8141                           
  8142                           ;APDS9960.c: 746: } else {
  8143  01DD  29E1               	goto	i1l2907
  8144  01DE                     i1l2905:	
  8145                           
  8146                           ;APDS9960.c: 747: gesture_lr_count_ = 0;
  8147  01DE  0020               	movlb	0	; select bank0
  8148  01DF  01DC               	clrf	_gesture_lr_count_
  8149  01E0  01DD               	clrf	_gesture_lr_count_+1
  8150  01E1                     i1l2907:	
  8151                           
  8152                           ;APDS9960.c: 748: };APDS9960.c: 751: if( (gesture_ud_count_ == 0) && (gesture_lr_count_ 
      +                          == 0) ) {
  8153  01E1  085E               	movf	_gesture_ud_count_,w
  8154  01E2  045F               	iorwf	_gesture_ud_count_+1,w
  8155  01E3  1D03               	btfss	3,2
  8156  01E4  2A84               	goto	i1l2951
  8157  01E5  085C               	movf	_gesture_lr_count_,w
  8158  01E6  045D               	iorwf	_gesture_lr_count_+1,w
  8159  01E7  1D03               	btfss	3,2
  8160  01E8  2A84               	goto	i1l2951
  8161                           
  8162                           ;APDS9960.c: 752: if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((lr_delta)
      +                           > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  8163  01E9  083D               	movf	processGestureData@ud_delta+1,w
  8164  01EA  3A80               	xorlw	128
  8165  01EB  00FB               	movwf	??_processGestureData
  8166  01EC  3080               	movlw	128
  8167  01ED  027B               	subwf	??_processGestureData,w
  8168  01EE  1D03               	skipz
  8169  01EF  29F2               	goto	u216_25
  8170  01F0  3001               	movlw	1
  8171  01F1  023C               	subwf	processGestureData@ud_delta,w
  8172  01F2                     u216_25:	
  8173  01F2  1803               	skipnc
  8174  01F3  2A01               	goto	i1l2915
  8175  01F4  0020               	movlb	0	; select bank0
  8176  01F5  093C               	comf	processGestureData@ud_delta,w
  8177  01F6  00FB               	movwf	??_processGestureData
  8178  01F7  093D               	comf	processGestureData@ud_delta+1,w
  8179  01F8  00FC               	movwf	??_processGestureData+1
  8180  01F9  0AFB               	incf	??_processGestureData,f
  8181  01FA  1903               	skipnz
  8182  01FB  0AFC               	incf	??_processGestureData+1,f
  8183  01FC  087B               	movf	??_processGestureData,w
  8184  01FD  00AC               	movwf	_processGestureData$775
  8185  01FE  087C               	movf	??_processGestureData+1,w
  8186  01FF  00AD               	movwf	_processGestureData$775+1
  8187  0200  2A06               	goto	i1l630
  8188  0201                     i1l2915:	
  8189  0201  0020               	movlb	0	; select bank0
  8190  0202  083D               	movf	processGestureData@ud_delta+1,w
  8191  0203  00AD               	movwf	_processGestureData$775+1
  8192  0204  083C               	movf	processGestureData@ud_delta,w
  8193  0205  00AC               	movwf	_processGestureData$775
  8194  0206                     i1l630:	
  8195  0206  082D               	movf	_processGestureData$775+1,w
  8196  0207  3A80               	xorlw	128
  8197  0208  00FB               	movwf	??_processGestureData
  8198  0209  3080               	movlw	128
  8199  020A  027B               	subwf	??_processGestureData,w
  8200  020B  1D03               	skipz
  8201  020C  2A0F               	goto	u217_25
  8202  020D  3014               	movlw	20
  8203  020E  022C               	subwf	_processGestureData$775,w
  8204  020F                     u217_25:	
  8205  020F  1803               	skipnc
  8206  0210  283E               	goto	i1l2823
  8207  0211  0020               	movlb	0	; select bank0
  8208  0212  083F               	movf	processGestureData@lr_delta+1,w
  8209  0213  3A80               	xorlw	128
  8210  0214  00FB               	movwf	??_processGestureData
  8211  0215  3080               	movlw	128
  8212  0216  027B               	subwf	??_processGestureData,w
  8213  0217  1D03               	skipz
  8214  0218  2A1B               	goto	u218_25
  8215  0219  3001               	movlw	1
  8216  021A  023E               	subwf	processGestureData@lr_delta,w
  8217  021B                     u218_25:	
  8218  021B  1803               	skipnc
  8219  021C  2A2A               	goto	i1l2921
  8220  021D  0020               	movlb	0	; select bank0
  8221  021E  093E               	comf	processGestureData@lr_delta,w
  8222  021F  00FB               	movwf	??_processGestureData
  8223  0220  093F               	comf	processGestureData@lr_delta+1,w
  8224  0221  00FC               	movwf	??_processGestureData+1
  8225  0222  0AFB               	incf	??_processGestureData,f
  8226  0223  1903               	skipnz
  8227  0224  0AFC               	incf	??_processGestureData+1,f
  8228  0225  087B               	movf	??_processGestureData,w
  8229  0226  00AE               	movwf	_processGestureData$776
  8230  0227  087C               	movf	??_processGestureData+1,w
  8231  0228  00AF               	movwf	_processGestureData$776+1
  8232  0229  2A2F               	goto	i1l634
  8233  022A                     i1l2921:	
  8234  022A  0020               	movlb	0	; select bank0
  8235  022B  083F               	movf	processGestureData@lr_delta+1,w
  8236  022C  00AF               	movwf	_processGestureData$776+1
  8237  022D  083E               	movf	processGestureData@lr_delta,w
  8238  022E  00AE               	movwf	_processGestureData$776
  8239  022F                     i1l634:	
  8240  022F  082F               	movf	_processGestureData$776+1,w
  8241  0230  3A80               	xorlw	128
  8242  0231  00FB               	movwf	??_processGestureData
  8243  0232  3080               	movlw	128
  8244  0233  027B               	subwf	??_processGestureData,w
  8245  0234  1D03               	skipz
  8246  0235  2A38               	goto	u219_25
  8247  0236  3014               	movlw	20
  8248  0237  022E               	subwf	_processGestureData$776,w
  8249  0238                     u219_25:	
  8250  0238  1803               	skipnc
  8251  0239  283E               	goto	i1l2823
  8252                           
  8253                           ;APDS9960.c: 755: if( (ud_delta == 0) && (lr_delta == 0) ) {
  8254  023A  0020               	movlb	0	; select bank0
  8255  023B  083C               	movf	processGestureData@ud_delta,w
  8256  023C  043D               	iorwf	processGestureData@ud_delta+1,w
  8257  023D  1D03               	btfss	3,2
  8258  023E  2A48               	goto	i1l2929
  8259  023F  083E               	movf	processGestureData@lr_delta,w
  8260  0240  043F               	iorwf	processGestureData@lr_delta+1,w
  8261  0241  1D03               	btfss	3,2
  8262  0242  2A48               	goto	i1l2929
  8263                           
  8264                           ;APDS9960.c: 756: gesture_near_count_++;
  8265  0243  3001               	movlw	1
  8266  0244  07DA               	addwf	_gesture_near_count_,f
  8267  0245  3000               	movlw	0
  8268  0246  3DDB               	addwfc	_gesture_near_count_+1,f
  8269                           
  8270                           ;APDS9960.c: 757: } else if( (ud_delta != 0) || (lr_delta != 0) ) {
  8271  0247  2A54               	goto	i1l636
  8272  0248                     i1l2929:	
  8273  0248  083C               	movf	processGestureData@ud_delta,w
  8274  0249  043D               	iorwf	processGestureData@ud_delta+1,w
  8275  024A  1D03               	btfss	3,2
  8276  024B  2A50               	goto	i1l2933
  8277  024C  083E               	movf	processGestureData@lr_delta,w
  8278  024D  043F               	iorwf	processGestureData@lr_delta+1,w
  8279  024E  1903               	btfsc	3,2
  8280  024F  2A54               	goto	i1l636
  8281  0250                     i1l2933:	
  8282                           
  8283                           ;APDS9960.c: 758: gesture_far_count_++;
  8284  0250  3001               	movlw	1
  8285  0251  07D8               	addwf	_gesture_far_count_,f
  8286  0252  3000               	movlw	0
  8287  0253  3DD9               	addwfc	_gesture_far_count_+1,f
  8288  0254                     i1l636:	
  8289                           
  8290                           ;APDS9960.c: 759: };APDS9960.c: 761: if( (gesture_near_count_ >= 10) && (gesture_far_cou
      +                          nt_ >= 2) ) {
  8291  0254  085B               	movf	_gesture_near_count_+1,w
  8292  0255  3A80               	xorlw	128
  8293  0256  00FB               	movwf	??_processGestureData
  8294  0257  3080               	movlw	128
  8295  0258  027B               	subwf	??_processGestureData,w
  8296  0259  1D03               	skipz
  8297  025A  2A5D               	goto	u224_25
  8298  025B  300A               	movlw	10
  8299  025C  025A               	subwf	_gesture_near_count_,w
  8300  025D                     u224_25:	
  8301  025D  1C03               	skipc
  8302  025E  283E               	goto	i1l2823
  8303  025F  0020               	movlb	0	; select bank0
  8304  0260  0859               	movf	_gesture_far_count_+1,w
  8305  0261  3A80               	xorlw	128
  8306  0262  00FB               	movwf	??_processGestureData
  8307  0263  3080               	movlw	128
  8308  0264  027B               	subwf	??_processGestureData,w
  8309  0265  1D03               	skipz
  8310  0266  2A69               	goto	u225_25
  8311  0267  3002               	movlw	2
  8312  0268  0258               	subwf	_gesture_far_count_,w
  8313  0269                     u225_25:	
  8314  0269  1C03               	skipc
  8315  026A  283E               	goto	i1l2823
  8316                           
  8317                           ;APDS9960.c: 762: if( (ud_delta == 0) && (lr_delta == 0) ) {
  8318  026B  0020               	movlb	0	; select bank0
  8319  026C  083C               	movf	processGestureData@ud_delta,w
  8320  026D  043D               	iorwf	processGestureData@ud_delta+1,w
  8321  026E  1D03               	btfss	3,2
  8322  026F  2A76               	goto	i1l2943
  8323  0270  083E               	movf	processGestureData@lr_delta,w
  8324  0271  043F               	iorwf	processGestureData@lr_delta+1,w
  8325  0272  1D03               	btfss	3,2
  8326  0273  2A76               	goto	i1l2943
  8327                           
  8328                           ;APDS9960.c: 763: gesture_state_ = NEAR_STATE;
  8329  0274  3001               	movlw	1
  8330  0275  2A7F               	goto	L5
  8331  0276                     i1l2943:	
  8332                           ;APDS9960.c: 764: } else if( (ud_delta != 0) && (lr_delta != 0) ) {
  8333                           
  8334  0276  083C               	movf	processGestureData@ud_delta,w
  8335  0277  043D               	iorwf	processGestureData@ud_delta+1,w
  8336  0278  1903               	btfsc	3,2
  8337  0279  2A82               	goto	i1l642
  8338  027A  083E               	movf	processGestureData@lr_delta,w
  8339  027B  043F               	iorwf	processGestureData@lr_delta+1,w
  8340  027C  1903               	btfsc	3,2
  8341  027D  2A82               	goto	i1l642
  8342                           
  8343                           ;APDS9960.c: 765: gesture_state_ = FAR_STATE;
  8344  027E  3002               	movlw	2
  8345  027F                     L5:	
  8346  027F  00D6               	movwf	_gesture_state_
  8347  0280  3000               	movlw	0
  8348  0281  00D7               	movwf	_gesture_state_+1
  8349  0282                     i1l642:	
  8350                           
  8351                           ;APDS9960.c: 766: };APDS9960.c: 767: return 1;
  8352  0282  3001               	movlw	1
  8353  0283  0008               	return
  8354  0284                     i1l2951:	
  8355                           
  8356                           ;APDS9960.c: 771: if( (((ud_delta) > 0 ? (ud_delta) : -(ud_delta)) < 20) && (((lr_delta)
      +                           > 0 ? (lr_delta) : -(lr_delta)) < 20) ) {
  8357  0284  083D               	movf	processGestureData@ud_delta+1,w
  8358  0285  3A80               	xorlw	128
  8359  0286  00FB               	movwf	??_processGestureData
  8360  0287  3080               	movlw	128
  8361  0288  027B               	subwf	??_processGestureData,w
  8362  0289  1D03               	skipz
  8363  028A  2A8D               	goto	u230_25
  8364  028B  3001               	movlw	1
  8365  028C  023C               	subwf	processGestureData@ud_delta,w
  8366  028D                     u230_25:	
  8367  028D  1803               	skipnc
  8368  028E  2A9C               	goto	i1l2955
  8369  028F  0020               	movlb	0	; select bank0
  8370  0290  093C               	comf	processGestureData@ud_delta,w
  8371  0291  00FB               	movwf	??_processGestureData
  8372  0292  093D               	comf	processGestureData@ud_delta+1,w
  8373  0293  00FC               	movwf	??_processGestureData+1
  8374  0294  0AFB               	incf	??_processGestureData,f
  8375  0295  1903               	skipnz
  8376  0296  0AFC               	incf	??_processGestureData+1,f
  8377  0297  087B               	movf	??_processGestureData,w
  8378  0298  00B0               	movwf	_processGestureData$777
  8379  0299  087C               	movf	??_processGestureData+1,w
  8380  029A  00B1               	movwf	_processGestureData$777+1
  8381  029B  2AA1               	goto	i1l649
  8382  029C                     i1l2955:	
  8383  029C  0020               	movlb	0	; select bank0
  8384  029D  083D               	movf	processGestureData@ud_delta+1,w
  8385  029E  00B1               	movwf	_processGestureData$777+1
  8386  029F  083C               	movf	processGestureData@ud_delta,w
  8387  02A0  00B0               	movwf	_processGestureData$777
  8388  02A1                     i1l649:	
  8389  02A1  0831               	movf	_processGestureData$777+1,w
  8390  02A2  3A80               	xorlw	128
  8391  02A3  00FB               	movwf	??_processGestureData
  8392  02A4  3080               	movlw	128
  8393  02A5  027B               	subwf	??_processGestureData,w
  8394  02A6  1D03               	skipz
  8395  02A7  2AAA               	goto	u231_25
  8396  02A8  3014               	movlw	20
  8397  02A9  0230               	subwf	_processGestureData$777,w
  8398  02AA                     u231_25:	
  8399  02AA  1803               	skipnc
  8400  02AB  283E               	goto	i1l2823
  8401  02AC  0020               	movlb	0	; select bank0
  8402  02AD  083F               	movf	processGestureData@lr_delta+1,w
  8403  02AE  3A80               	xorlw	128
  8404  02AF  00FB               	movwf	??_processGestureData
  8405  02B0  3080               	movlw	128
  8406  02B1  027B               	subwf	??_processGestureData,w
  8407  02B2  1D03               	skipz
  8408  02B3  2AB6               	goto	u232_25
  8409  02B4  3001               	movlw	1
  8410  02B5  023E               	subwf	processGestureData@lr_delta,w
  8411  02B6                     u232_25:	
  8412  02B6  1803               	skipnc
  8413  02B7  2AC5               	goto	i1l2961
  8414  02B8  0020               	movlb	0	; select bank0
  8415  02B9  093E               	comf	processGestureData@lr_delta,w
  8416  02BA  00FB               	movwf	??_processGestureData
  8417  02BB  093F               	comf	processGestureData@lr_delta+1,w
  8418  02BC  00FC               	movwf	??_processGestureData+1
  8419  02BD  0AFB               	incf	??_processGestureData,f
  8420  02BE  1903               	skipnz
  8421  02BF  0AFC               	incf	??_processGestureData+1,f
  8422  02C0  087B               	movf	??_processGestureData,w
  8423  02C1  00B2               	movwf	_processGestureData$778
  8424  02C2  087C               	movf	??_processGestureData+1,w
  8425  02C3  00B3               	movwf	_processGestureData$778+1
  8426  02C4  2ACA               	goto	i1l653
  8427  02C5                     i1l2961:	
  8428  02C5  0020               	movlb	0	; select bank0
  8429  02C6  083F               	movf	processGestureData@lr_delta+1,w
  8430  02C7  00B3               	movwf	_processGestureData$778+1
  8431  02C8  083E               	movf	processGestureData@lr_delta,w
  8432  02C9  00B2               	movwf	_processGestureData$778
  8433  02CA                     i1l653:	
  8434  02CA  0833               	movf	_processGestureData$778+1,w
  8435  02CB  3A80               	xorlw	128
  8436  02CC  00FB               	movwf	??_processGestureData
  8437  02CD  3080               	movlw	128
  8438  02CE  027B               	subwf	??_processGestureData,w
  8439  02CF  1D03               	skipz
  8440  02D0  2AD3               	goto	u233_25
  8441  02D1  3014               	movlw	20
  8442  02D2  0232               	subwf	_processGestureData$778,w
  8443  02D3                     u233_25:	
  8444  02D3  1803               	skipnc
  8445  02D4  283E               	goto	i1l2823
  8446                           
  8447                           ;APDS9960.c: 774: if( (ud_delta == 0) && (lr_delta == 0) ) {
  8448  02D5  0020               	movlb	0	; select bank0
  8449  02D6  083C               	movf	processGestureData@ud_delta,w
  8450  02D7  043D               	iorwf	processGestureData@ud_delta+1,w
  8451  02D8  1D03               	btfss	3,2
  8452  02D9  2AE2               	goto	i1l654
  8453  02DA  083E               	movf	processGestureData@lr_delta,w
  8454  02DB  043F               	iorwf	processGestureData@lr_delta+1,w
  8455  02DC  1D03               	btfss	3,2
  8456  02DD  2AE2               	goto	i1l654
  8457                           
  8458                           ;APDS9960.c: 775: gesture_near_count_++;
  8459  02DE  3001               	movlw	1
  8460  02DF  07DA               	addwf	_gesture_near_count_,f
  8461  02E0  3000               	movlw	0
  8462  02E1  3DDB               	addwfc	_gesture_near_count_+1,f
  8463  02E2                     i1l654:	
  8464                           
  8465                           ;APDS9960.c: 776: };APDS9960.c: 778: if( gesture_near_count_ >= 10 ) {
  8466  02E2  085B               	movf	_gesture_near_count_+1,w
  8467  02E3  3A80               	xorlw	128
  8468  02E4  00FB               	movwf	??_processGestureData
  8469  02E5  3080               	movlw	128
  8470  02E6  027B               	subwf	??_processGestureData,w
  8471  02E7  1D03               	skipz
  8472  02E8  2AEB               	goto	u236_25
  8473  02E9  300A               	movlw	10
  8474  02EA  025A               	subwf	_gesture_near_count_,w
  8475  02EB                     u236_25:	
  8476  02EB  1C03               	skipc
  8477  02EC  283E               	goto	i1l2823
  8478                           
  8479                           ;APDS9960.c: 779: gesture_ud_count_ = 0;
  8480  02ED  0020               	movlb	0	; select bank0
  8481  02EE  01DE               	clrf	_gesture_ud_count_
  8482  02EF  01DF               	clrf	_gesture_ud_count_+1
  8483                           
  8484                           ;APDS9960.c: 780: gesture_lr_count_ = 0;
  8485  02F0  01DC               	clrf	_gesture_lr_count_
  8486  02F1  01DD               	clrf	_gesture_lr_count_+1
  8487                           
  8488                           ;APDS9960.c: 781: gesture_ud_delta_ = 0;
  8489  02F2  01E2               	clrf	_gesture_ud_delta_
  8490  02F3  01E3               	clrf	_gesture_ud_delta_+1
  8491                           
  8492                           ;APDS9960.c: 782: gesture_lr_delta_ = 0;
  8493  02F4  01E0               	clrf	_gesture_lr_delta_
  8494  02F5  01E1               	clrf	_gesture_lr_delta_+1
  8495  02F6  283E               	goto	i1l2823
  8496  02F7                     __end_of_processGestureData:	
  8497                           
  8498                           	psect	text47
  8499  0D79                     __ptext47:	
  8500 ;; *************** function ___wmul *****************
  8501 ;; Defined at:
  8502 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  multiplier      2    0[COMMON] unsigned int 
  8505 ;;  multiplicand    2    2[COMMON] unsigned int 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  product         2    4[COMMON] unsigned int 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  2    0[COMMON] unsigned int 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;Total ram usage:        6 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_processGestureData
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function ___wmul
  8532  0D79                     ___wmul:	
  8533                           
  8534                           ;incstack = 0
  8535                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8536  0D79  01F4               	clrf	___wmul@product
  8537  0D7A  01F5               	clrf	___wmul@product+1
  8538  0D7B                     i1l2667:	
  8539  0D7B  1C70               	btfss	___wmul@multiplier,0
  8540  0D7C  2D81               	goto	i1l881
  8541  0D7D  0872               	movf	___wmul@multiplicand,w
  8542  0D7E  07F4               	addwf	___wmul@product,f
  8543  0D7F  0873               	movf	___wmul@multiplicand+1,w
  8544  0D80  3DF5               	addwfc	___wmul@product+1,f
  8545  0D81                     i1l881:	
  8546  0D81  3001               	movlw	1
  8547  0D82                     u170_25:	
  8548  0D82  35F2               	lslf	___wmul@multiplicand,f
  8549  0D83  0DF3               	rlf	___wmul@multiplicand+1,f
  8550  0D84  0B89               	decfsz	9,f
  8551  0D85  2D82               	goto	u170_25
  8552  0D86  3001               	movlw	1
  8553  0D87                     u171_25:	
  8554  0D87  36F1               	lsrf	___wmul@multiplier+1,f
  8555  0D88  0CF0               	rrf	___wmul@multiplier,f
  8556  0D89  0B89               	decfsz	9,f
  8557  0D8A  2D87               	goto	u171_25
  8558  0D8B  0870               	movf	___wmul@multiplier,w
  8559  0D8C  0471               	iorwf	___wmul@multiplier+1,w
  8560  0D8D  1D03               	btfss	3,2
  8561  0D8E  2D7B               	goto	i1l2667
  8562  0D8F  0875               	movf	___wmul@product+1,w
  8563  0D90  00F1               	movwf	?___wmul+1
  8564  0D91  0874               	movf	___wmul@product,w
  8565  0D92  00F0               	movwf	?___wmul
  8566  0D93  0008               	return
  8567  0D94                     __end_of___wmul:	
  8568                           
  8569                           	psect	text48
  8570  06DE                     __ptext48:	
  8571 ;; *************** function ___awdiv *****************
  8572 ;; Defined at:
  8573 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  divisor         2    6[COMMON] int 
  8576 ;;  dividend        2    8[COMMON] int 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  quotient        2    2[BANK0 ] int 
  8579 ;;  sign            1    1[BANK0 ] unsigned char 
  8580 ;;  counter         1    0[BANK0 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2    6[COMMON] int 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        9 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_processGestureData
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           
  8604                           ;psect for function ___awdiv
  8605  06DE                     ___awdiv:	
  8606                           
  8607                           ;incstack = 0
  8608                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8609  06DE  0020               	movlb	0	; select bank0
  8610  06DF  01A1               	clrf	___awdiv@sign
  8611  06E0  1FF7               	btfss	___awdiv@divisor+1,7
  8612  06E1  2EE9               	goto	i1l2687
  8613  06E2  09F6               	comf	___awdiv@divisor,f
  8614  06E3  09F7               	comf	___awdiv@divisor+1,f
  8615  06E4  0AF6               	incf	___awdiv@divisor,f
  8616  06E5  1903               	skipnz
  8617  06E6  0AF7               	incf	___awdiv@divisor+1,f
  8618  06E7  01A1               	clrf	___awdiv@sign
  8619  06E8  0AA1               	incf	___awdiv@sign,f
  8620  06E9                     i1l2687:	
  8621  06E9  1FF9               	btfss	___awdiv@dividend+1,7
  8622  06EA  2EF4               	goto	i1l2693
  8623  06EB  09F8               	comf	___awdiv@dividend,f
  8624  06EC  09F9               	comf	___awdiv@dividend+1,f
  8625  06ED  0AF8               	incf	___awdiv@dividend,f
  8626  06EE  1903               	skipnz
  8627  06EF  0AF9               	incf	___awdiv@dividend+1,f
  8628  06F0  3001               	movlw	1
  8629  06F1  00FA               	movwf	??___awdiv
  8630  06F2  087A               	movf	??___awdiv,w
  8631  06F3  06A1               	xorwf	___awdiv@sign,f
  8632  06F4                     i1l2693:	
  8633  06F4  01A2               	clrf	___awdiv@quotient
  8634  06F5  01A3               	clrf	___awdiv@quotient+1
  8635  06F6  0876               	movf	___awdiv@divisor,w
  8636  06F7  0477               	iorwf	___awdiv@divisor+1,w
  8637  06F8  1903               	btfsc	3,2
  8638  06F9  2F23               	goto	i1l2715
  8639  06FA  01A0               	clrf	___awdiv@counter
  8640  06FB  0AA0               	incf	___awdiv@counter,f
  8641  06FC                     i1l2703:	
  8642  06FC  1BF7               	btfsc	___awdiv@divisor+1,7
  8643  06FD  2F08               	goto	i1l2705
  8644  06FE  3001               	movlw	1
  8645  06FF                     u176_25:	
  8646  06FF  35F6               	lslf	___awdiv@divisor,f
  8647  0700  0DF7               	rlf	___awdiv@divisor+1,f
  8648  0701  0B89               	decfsz	9,f
  8649  0702  2EFF               	goto	u176_25
  8650  0703  3001               	movlw	1
  8651  0704  00FA               	movwf	??___awdiv
  8652  0705  087A               	movf	??___awdiv,w
  8653  0706  07A0               	addwf	___awdiv@counter,f
  8654  0707  2EFC               	goto	i1l2703
  8655  0708                     i1l2705:	
  8656  0708  3001               	movlw	1
  8657  0709                     u178_25:	
  8658  0709  35A2               	lslf	___awdiv@quotient,f
  8659  070A  0DA3               	rlf	___awdiv@quotient+1,f
  8660  070B  0B89               	decfsz	9,f
  8661  070C  2F09               	goto	u178_25
  8662  070D  0877               	movf	___awdiv@divisor+1,w
  8663  070E  0279               	subwf	___awdiv@dividend+1,w
  8664  070F  1D03               	skipz
  8665  0710  2F13               	goto	u179_25
  8666  0711  0876               	movf	___awdiv@divisor,w
  8667  0712  0278               	subwf	___awdiv@dividend,w
  8668  0713                     u179_25:	
  8669  0713  1C03               	skipc
  8670  0714  2F1A               	goto	i1l2711
  8671  0715  0876               	movf	___awdiv@divisor,w
  8672  0716  02F8               	subwf	___awdiv@dividend,f
  8673  0717  0877               	movf	___awdiv@divisor+1,w
  8674  0718  3BF9               	subwfb	___awdiv@dividend+1,f
  8675  0719  1422               	bsf	___awdiv@quotient,0
  8676  071A                     i1l2711:	
  8677  071A  3001               	movlw	1
  8678  071B                     u180_25:	
  8679  071B  36F7               	lsrf	___awdiv@divisor+1,f
  8680  071C  0CF6               	rrf	___awdiv@divisor,f
  8681  071D  0B89               	decfsz	9,f
  8682  071E  2F1B               	goto	u180_25
  8683  071F  3001               	movlw	1
  8684  0720  02A0               	subwf	___awdiv@counter,f
  8685  0721  1D03               	btfss	3,2
  8686  0722  2F08               	goto	i1l2705
  8687  0723                     i1l2715:	
  8688  0723  0821               	movf	___awdiv@sign,w
  8689  0724  1903               	btfsc	3,2
  8690  0725  2F2B               	goto	i1l2719
  8691  0726  09A2               	comf	___awdiv@quotient,f
  8692  0727  09A3               	comf	___awdiv@quotient+1,f
  8693  0728  0AA2               	incf	___awdiv@quotient,f
  8694  0729  1903               	skipnz
  8695  072A  0AA3               	incf	___awdiv@quotient+1,f
  8696  072B                     i1l2719:	
  8697  072B  0823               	movf	___awdiv@quotient+1,w
  8698  072C  00F7               	movwf	?___awdiv+1
  8699  072D  0822               	movf	___awdiv@quotient,w
  8700  072E  00F6               	movwf	?___awdiv
  8701  072F  0008               	return
  8702  0730                     __end_of___awdiv:	
  8703                           
  8704                           	psect	text49
  8705  0CD9                     __ptext49:	
  8706 ;; *************** function _isGestureAvailable *****************
  8707 ;; Defined at:
  8708 ;;		line 533 in file "APDS9960.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  val             1    5[COMMON] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      unsigned char 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, pclath, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:        2 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    2
  8729 ;; This function calls:
  8730 ;;		i1_wireReadDataByte
  8731 ;; This function is called by:
  8732 ;;		_handleGesture
  8733 ;;		_readGesture
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _isGestureAvailable
  8739  0CD9                     _isGestureAvailable:	
  8740                           
  8741                           ;APDS9960.c: 535: uint8_t val;;APDS9960.c: 538: val=wireReadDataByte(0xAF);
  8742                           
  8743                           ;incstack = 0
  8744                           ; Regs used in _isGestureAvailable: [wreg+status,2+status,0+pclath+cstack]
  8745  0CD9  30AF               	movlw	175
  8746  0CDA  318D  25CD  318C   	fcall	i1_wireReadDataByte
  8747  0CDD  00F4               	movwf	??_isGestureAvailable
  8748  0CDE  0874               	movf	??_isGestureAvailable,w
  8749  0CDF  00F5               	movwf	isGestureAvailable@val
  8750                           
  8751                           ;APDS9960.c: 541: val &= 0b00000001;
  8752  0CE0  3001               	movlw	1
  8753  0CE1  00F4               	movwf	??_isGestureAvailable
  8754  0CE2  0874               	movf	??_isGestureAvailable,w
  8755  0CE3  05F5               	andwf	isGestureAvailable@val,f
  8756                           
  8757                           ;APDS9960.c: 544: if( val == 1) {
  8758  0CE4  0375               	decf	isGestureAvailable@val,w
  8759  0CE5  1D03               	btfss	3,2
  8760  0CE6  2CE9               	goto	i1l2751
  8761                           
  8762                           ;APDS9960.c: 545: return 1;
  8763  0CE7  3001               	movlw	1
  8764  0CE8  0008               	return
  8765  0CE9                     i1l2751:	
  8766                           
  8767                           ;APDS9960.c: 547: return 0;
  8768  0CE9  3000               	movlw	0
  8769  0CEA  0008               	return
  8770  0CEB                     __end_of_isGestureAvailable:	
  8771                           
  8772                           	psect	text50
  8773  0DCD                     __ptext50:	
  8774 ;; *************** function i1_wireReadDataByte *****************
  8775 ;; Defined at:
  8776 ;;		line 906 in file "APDS9960.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  reg             1    wreg     unsigned char 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  reg             1    2[COMMON] unsigned char 
  8781 ;;  wireReadData    1    3[COMMON] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      unsigned char 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, pclath, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;Total ram usage:        3 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    1
  8798 ;; This function calls:
  8799 ;;		i1_i2c2_driver_getRXData
  8800 ;;		i1_i2c2_driver_isNACK
  8801 ;;		i1_i2c2_driver_restart
  8802 ;;		i1_i2c2_driver_setAddr
  8803 ;;		i1_i2c2_driver_start
  8804 ;;		i1_i2c2_driver_startRX
  8805 ;;		i1_i2c2_driver_stop
  8806 ;; This function is called by:
  8807 ;;		_isGestureAvailable
  8808 ;;		_readGesture
  8809 ;;		i1_getMode
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function i1_wireReadDataByte
  8815  0DCD                     i1_wireReadDataByte:	
  8816                           
  8817                           ;incstack = 0
  8818                           ; Regs used in i1_wireReadDataByte: [wreg+status,2+status,0+pclath+cstack]
  8819                           ;i1wireReadDataByte@reg stored from wreg
  8820  0DCD  00F2               	movwf	i1wireReadDataByte@reg
  8821                           
  8822                           ;APDS9960.c: 909: unsigned char val;;APDS9960.c: 929: i2c2_driver_start();
  8823  0DCE  318C  244A  318D   	fcall	i1_i2c2_driver_start
  8824                           
  8825                           ;APDS9960.c: 930: i2c2_driver_setAddr(0x39);
  8826  0DD1  3039               	movlw	57
  8827  0DD2  318C  246D  318D   	fcall	i1_i2c2_driver_setAddr
  8828                           
  8829                           ;APDS9960.c: 931: i2c2_driver_setAddr(reg);
  8830  0DD5  0872               	movf	i1wireReadDataByte@reg,w
  8831  0DD6  318C  246D  318D   	fcall	i1_i2c2_driver_setAddr
  8832                           
  8833                           ;APDS9960.c: 932: i2c2_driver_restart();
  8834  0DD9  318C  2447  318D   	fcall	i1_i2c2_driver_restart
  8835                           
  8836                           ;APDS9960.c: 933: i2c2_driver_startRX();
  8837  0DDC  318C  244D  318D   	fcall	i1_i2c2_driver_startRX
  8838                           
  8839                           ;APDS9960.c: 934: val = i2c2_driver_getRXData();
  8840  0DDF  318C  2441  318D   	fcall	i1_i2c2_driver_getRXData
  8841  0DE2  00F1               	movwf	??i1_wireReadDataByte
  8842  0DE3  0871               	movf	??i1_wireReadDataByte,w
  8843  0DE4  00F3               	movwf	i1wireReadDataByte@val
  8844                           
  8845                           ;APDS9960.c: 935: i2c2_driver_isNACK();
  8846  0DE5  318C  2444  318D   	fcall	i1_i2c2_driver_isNACK
  8847                           
  8848                           ;APDS9960.c: 936: i2c2_driver_stop();
  8849  0DE8  318C  2450         	fcall	i1_i2c2_driver_stop
  8850                           
  8851                           ;APDS9960.c: 938: return (val);
  8852  0DEA  0873               	movf	i1wireReadDataByte@val,w
  8853  0DEB  0008               	return
  8854  0DEC                     __end_ofi1_wireReadDataByte:	
  8855                           
  8856                           	psect	text51
  8857  0C50                     __ptext51:	
  8858 ;; *************** function i1_i2c2_driver_stop *****************
  8859 ;; Defined at:
  8860 ;;		line 156 in file "mcc_generated_files/i2c2_driver.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		None
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_wireReadDataBlock
  8884 ;;		i1_wireReadDataByte
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           
  8889                           ;psect for function i1_i2c2_driver_stop
  8890  0C50                     i1_i2c2_driver_stop:	
  8891                           
  8892                           ;i2c2_driver.c: 158: SSP2CON2bits.PEN = 1;
  8893                           
  8894                           ;incstack = 0
  8895                           ; Regs used in i1_i2c2_driver_stop: []
  8896  0C50  0024               	movlb	4	; select bank4
  8897  0C51  151E               	bsf	30,2	;volatile
  8898  0C52  0008               	return
  8899  0C53                     __end_ofi1_i2c2_driver_stop:	
  8900                           
  8901                           	psect	text52
  8902  0C4D                     __ptext52:	
  8903 ;; *************** function i1_i2c2_driver_startRX *****************
  8904 ;; Defined at:
  8905 ;;		line 166 in file "mcc_generated_files/i2c2_driver.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;		None
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		None
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;Total ram usage:        0 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_wireReadDataBlock
  8929 ;;		i1_wireReadDataByte
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function i1_i2c2_driver_startRX
  8935  0C4D                     i1_i2c2_driver_startRX:	
  8936                           
  8937                           ;i2c2_driver.c: 168: SSP2CON2bits.RCEN = 1;
  8938                           
  8939                           ;incstack = 0
  8940                           ; Regs used in i1_i2c2_driver_startRX: []
  8941  0C4D  0024               	movlb	4	; select bank4
  8942  0C4E  159E               	bsf	30,3	;volatile
  8943  0C4F  0008               	return
  8944  0C50                     __end_ofi1_i2c2_driver_startRX:	
  8945                           
  8946                           	psect	text53
  8947  0C4A                     __ptext53:	
  8948 ;; *************** function i1_i2c2_driver_start *****************
  8949 ;; Defined at:
  8950 ;;		line 146 in file "mcc_generated_files/i2c2_driver.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		None
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;Total ram usage:        0 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_wireReadDataBlock
  8974 ;;		i1_wireReadDataByte
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function i1_i2c2_driver_start
  8980  0C4A                     i1_i2c2_driver_start:	
  8981                           
  8982                           ;i2c2_driver.c: 148: SSP2CON2bits.SEN = 1;
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in i1_i2c2_driver_start: []
  8986  0C4A  0024               	movlb	4	; select bank4
  8987  0C4B  141E               	bsf	30,0	;volatile
  8988  0C4C  0008               	return
  8989  0C4D                     __end_ofi1_i2c2_driver_start:	
  8990                           
  8991                           	psect	text54
  8992  0C6D                     __ptext54:	
  8993 ;; *************** function i1_i2c2_driver_setAddr *****************
  8994 ;; Defined at:
  8995 ;;		line 176 in file "mcc_generated_files/i2c2_driver.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  addr            1    wreg     unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  addr            1    0[COMMON] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;Total ram usage:        1 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_wireReadDataBlock
  9019 ;;		i1_wireReadDataByte
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function i1_i2c2_driver_setAddr
  9025  0C6D                     i1_i2c2_driver_setAddr:	
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in i1_i2c2_driver_setAddr: [wreg]
  9029                           ;i1i2c2_driver_setAddr@addr stored from wreg
  9030  0C6D  00F0               	movwf	i1i2c2_driver_setAddr@addr
  9031                           
  9032                           ;i2c2_driver.c: 178: SSP2ADD = addr;
  9033  0C6E  0870               	movf	i1i2c2_driver_setAddr@addr,w
  9034  0C6F  0024               	movlb	4	; select bank4
  9035  0C70  009A               	movwf	26	;volatile
  9036  0C71  0008               	return
  9037  0C72                     __end_ofi1_i2c2_driver_setAddr:	
  9038                           
  9039                           	psect	text55
  9040  0C47                     __ptext55:	
  9041 ;; *************** function i1_i2c2_driver_restart *****************
  9042 ;; Defined at:
  9043 ;;		line 151 in file "mcc_generated_files/i2c2_driver.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		None
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;Total ram usage:        0 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_wireReadDataBlock
  9067 ;;		i1_wireReadDataByte
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           
  9072                           ;psect for function i1_i2c2_driver_restart
  9073  0C47                     i1_i2c2_driver_restart:	
  9074                           
  9075                           ;i2c2_driver.c: 153: SSP2CON2bits.RSEN = 1;
  9076                           
  9077                           ;incstack = 0
  9078                           ; Regs used in i1_i2c2_driver_restart: []
  9079  0C47  0024               	movlb	4	; select bank4
  9080  0C48  149E               	bsf	30,1	;volatile
  9081  0C49  0008               	return
  9082  0C4A                     __end_ofi1_i2c2_driver_restart:	
  9083                           
  9084                           	psect	text56
  9085  0C44                     __ptext56:	
  9086 ;; *************** function i1_i2c2_driver_isNACK *****************
  9087 ;; Defined at:
  9088 ;;		line 161 in file "mcc_generated_files/i2c2_driver.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;		None               void
  9095 ;; Registers used:
  9096 ;;		wreg
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;Total ram usage:        0 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		i1_wireReadDataByte
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           
  9116                           ;psect for function i1_i2c2_driver_isNACK
  9117  0C44                     i1_i2c2_driver_isNACK:	
  9118                           
  9119                           ;i2c2_driver.c: 163: return SSP2CON2bits.ACKSTAT;;	Return value of i1_i2c2_driver_isNACK
      +                           is never used
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in i1_i2c2_driver_isNACK: [wreg]
  9123  0C44  0024               	movlb	4	; select bank4
  9124  0C45  081E               	movf	30,w	;volatile
  9125  0C46  0008               	return
  9126  0C47                     __end_ofi1_i2c2_driver_isNACK:	
  9127                           
  9128                           	psect	text57
  9129  0C41                     __ptext57:	
  9130 ;; *************** function i1_i2c2_driver_getRXData *****************
  9131 ;; Defined at:
  9132 ;;		line 171 in file "mcc_generated_files/i2c2_driver.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      unsigned char 
  9139 ;; Registers used:
  9140 ;;		wreg
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_wireReadDataBlock
  9156 ;;		i1_wireReadDataByte
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           
  9161                           ;psect for function i1_i2c2_driver_getRXData
  9162  0C41                     i1_i2c2_driver_getRXData:	
  9163                           
  9164                           ;i2c2_driver.c: 173: return SSP2BUF;
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in i1_i2c2_driver_getRXData: [wreg]
  9168  0C41  0024               	movlb	4	; select bank4
  9169  0C42  0819               	movf	25,w	;volatile
  9170  0C43  0008               	return
  9171  0C44                     __end_ofi1_i2c2_driver_getRXData:	
  9172                           
  9173                           	psect	text58
  9174  02F7                     __ptext58:	
  9175 ;; *************** function _decodeGesture *****************
  9176 ;; Defined at:
  9177 ;;		line 791 in file "APDS9960.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      unsigned char 
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;Total ram usage:       18 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_readGesture
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function _decodeGesture
  9206  02F7                     _decodeGesture:	
  9207                           
  9208                           ;APDS9960.c: 794: if( gesture_state_ == NEAR_STATE ) {
  9209                           
  9210                           ;incstack = 0
  9211                           ; Regs used in _decodeGesture: [wreg+status,2+status,0]
  9212  02F7  0020               	movlb	0	; select bank0
  9213  02F8  0356               	decf	_gesture_state_,w
  9214  02F9  0457               	iorwf	_gesture_state_+1,w
  9215  02FA  1D03               	btfss	3,2
  9216  02FB  2B02               	goto	i1l2983
  9217                           
  9218                           ;APDS9960.c: 795: gesture_motion_ = DIR_NEAR;
  9219  02FC  3005               	movlw	5
  9220  02FD  00D4               	movwf	_gesture_motion_
  9221  02FE  3000               	movlw	0
  9222  02FF  00D5               	movwf	_gesture_motion_+1
  9223                           
  9224                           ;APDS9960.c: 796: return 1;
  9225  0300  3001               	movlw	1
  9226  0301  0008               	return
  9227  0302                     i1l2983:	
  9228  0302  3002               	movlw	2
  9229  0303  0656               	xorwf	_gesture_state_,w
  9230  0304  0457               	iorwf	_gesture_state_+1,w
  9231  0305  1D03               	btfss	3,2
  9232  0306  2B0D               	goto	i1l2989
  9233                           
  9234                           ;APDS9960.c: 798: gesture_motion_ = DIR_FAR;
  9235  0307  3006               	movlw	6
  9236  0308  00D4               	movwf	_gesture_motion_
  9237  0309  3000               	movlw	0
  9238  030A  00D5               	movwf	_gesture_motion_+1
  9239                           
  9240                           ;APDS9960.c: 799: return 1;
  9241  030B  3001               	movlw	1
  9242  030C  0008               	return
  9243  030D                     i1l2989:	
  9244                           
  9245                           ;APDS9960.c: 800: };APDS9960.c: 803: if( (gesture_ud_count_ == -1) && (gesture_lr_count_
      +                           == 0) ) {
  9246  030D  0A5E               	incf	_gesture_ud_count_,w
  9247  030E  1D03               	skipz
  9248  030F  2B19               	goto	i1l2995
  9249  0310  0A5F               	incf	_gesture_ud_count_+1,w
  9250  0311  1D03               	btfss	3,2
  9251  0312  2B19               	goto	i1l2995
  9252  0313  085C               	movf	_gesture_lr_count_,w
  9253  0314  045D               	iorwf	_gesture_lr_count_+1,w
  9254  0315  1D03               	btfss	3,2
  9255  0316  2B19               	goto	i1l2995
  9256  0317                     i1l2993:	
  9257                           
  9258                           ;APDS9960.c: 804: gesture_motion_ = DIR_UP;
  9259  0317  3003               	movlw	3
  9260  0318  2B38               	goto	L8
  9261  0319                     i1l2995:	
  9262                           ;APDS9960.c: 805: } else if( (gesture_ud_count_ == 1) && (gesture_lr_count_ == 0) ) {
  9263                           
  9264  0319  035E               	decf	_gesture_ud_count_,w
  9265  031A  045F               	iorwf	_gesture_ud_count_+1,w
  9266  031B  1D03               	btfss	3,2
  9267  031C  2B23               	goto	i1l3001
  9268  031D  085C               	movf	_gesture_lr_count_,w
  9269  031E  045D               	iorwf	_gesture_lr_count_+1,w
  9270  031F  1D03               	btfss	3,2
  9271  0320  2B23               	goto	i1l3001
  9272  0321                     i1l2999:	
  9273                           
  9274                           ;APDS9960.c: 806: gesture_motion_ = DIR_DOWN;
  9275  0321  3004               	movlw	4
  9276  0322  2B38               	goto	L8
  9277  0323                     i1l3001:	
  9278                           ;APDS9960.c: 807: } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == 1) ) {
  9279                           
  9280  0323  085E               	movf	_gesture_ud_count_,w
  9281  0324  045F               	iorwf	_gesture_ud_count_+1,w
  9282  0325  1D03               	btfss	3,2
  9283  0326  2B2D               	goto	i1l3007
  9284  0327  035C               	decf	_gesture_lr_count_,w
  9285  0328  045D               	iorwf	_gesture_lr_count_+1,w
  9286  0329  1D03               	btfss	3,2
  9287  032A  2B2D               	goto	i1l3007
  9288  032B                     i1l3005:	
  9289                           
  9290                           ;APDS9960.c: 808: gesture_motion_ = DIR_RIGHT;
  9291  032B  3002               	movlw	2
  9292  032C  2B38               	goto	L8
  9293  032D                     i1l3007:	
  9294                           ;APDS9960.c: 809: } else if( (gesture_ud_count_ == 0) && (gesture_lr_count_ == -1) ) {
  9295                           
  9296  032D  085E               	movf	_gesture_ud_count_,w
  9297  032E  045F               	iorwf	_gesture_ud_count_+1,w
  9298  032F  1D03               	btfss	3,2
  9299  0330  2B3D               	goto	i1l3013
  9300  0331  0A5C               	incf	_gesture_lr_count_,w
  9301  0332  1D03               	skipz
  9302  0333  2B3D               	goto	i1l3013
  9303  0334  0A5D               	incf	_gesture_lr_count_+1,w
  9304  0335  1D03               	btfss	3,2
  9305  0336  2B3D               	goto	i1l3013
  9306  0337                     i1l3011:	
  9307                           
  9308                           ;APDS9960.c: 810: gesture_motion_ = DIR_LEFT;
  9309  0337  3001               	movlw	1
  9310  0338                     L8:	
  9311  0338  0020               	movlb	0	; select bank0
  9312  0339  00D4               	movwf	_gesture_motion_
  9313  033A  3000               	movlw	0
  9314  033B  00D5               	movwf	_gesture_motion_+1
  9315                           
  9316                           ;APDS9960.c: 811: } else if( (gesture_ud_count_ == -1) && (gesture_lr_count_ == 1) ) {
  9317  033C  2C83               	goto	i1l3089
  9318  033D                     i1l3013:	
  9319  033D  0A5E               	incf	_gesture_ud_count_,w
  9320  033E  1D03               	skipz
  9321  033F  2B8E               	goto	i1l3031
  9322  0340  0A5F               	incf	_gesture_ud_count_+1,w
  9323  0341  1D03               	btfss	3,2
  9324  0342  2B8E               	goto	i1l3031
  9325  0343  035C               	decf	_gesture_lr_count_,w
  9326  0344  045D               	iorwf	_gesture_lr_count_+1,w
  9327  0345  1D03               	btfss	3,2
  9328  0346  2B8E               	goto	i1l3031
  9329                           
  9330                           ;APDS9960.c: 812: if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture_ud_delt
      +                          a_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) {
  9331  0347  0863               	movf	_gesture_ud_delta_+1,w
  9332  0348  3A80               	xorlw	128
  9333  0349  00F0               	movwf	??_decodeGesture
  9334  034A  3080               	movlw	128
  9335  034B  0270               	subwf	??_decodeGesture,w
  9336  034C  1D03               	skipz
  9337  034D  2B50               	goto	u249_25
  9338  034E  3001               	movlw	1
  9339  034F  0262               	subwf	_gesture_ud_delta_,w
  9340  0350                     u249_25:	
  9341  0350  1803               	skipnc
  9342  0351  2B5F               	goto	i1l3021
  9343  0352  0020               	movlb	0	; select bank0
  9344  0353  0962               	comf	_gesture_ud_delta_,w
  9345  0354  00F0               	movwf	??_decodeGesture
  9346  0355  0963               	comf	_gesture_ud_delta_+1,w
  9347  0356  00F1               	movwf	??_decodeGesture+1
  9348  0357  0AF0               	incf	??_decodeGesture,f
  9349  0358  1903               	skipnz
  9350  0359  0AF1               	incf	??_decodeGesture+1,f
  9351  035A  0870               	movf	??_decodeGesture,w
  9352  035B  00A0               	movwf	_decodeGesture$780
  9353  035C  0871               	movf	??_decodeGesture+1,w
  9354  035D  00A1               	movwf	_decodeGesture$780+1
  9355  035E  2B64               	goto	i1l675
  9356  035F                     i1l3021:	
  9357  035F  0020               	movlb	0	; select bank0
  9358  0360  0863               	movf	_gesture_ud_delta_+1,w
  9359  0361  00A1               	movwf	_decodeGesture$780+1
  9360  0362  0862               	movf	_gesture_ud_delta_,w
  9361  0363  00A0               	movwf	_decodeGesture$780
  9362  0364                     i1l675:	
  9363  0364  0861               	movf	_gesture_lr_delta_+1,w
  9364  0365  3A80               	xorlw	128
  9365  0366  00F0               	movwf	??_decodeGesture
  9366  0367  3080               	movlw	128
  9367  0368  0270               	subwf	??_decodeGesture,w
  9368  0369  1D03               	skipz
  9369  036A  2B6D               	goto	u250_25
  9370  036B  3001               	movlw	1
  9371  036C  0260               	subwf	_gesture_lr_delta_,w
  9372  036D                     u250_25:	
  9373  036D  1803               	skipnc
  9374  036E  2B7C               	goto	i1l3025
  9375  036F  0020               	movlb	0	; select bank0
  9376  0370  0960               	comf	_gesture_lr_delta_,w
  9377  0371  00F0               	movwf	??_decodeGesture
  9378  0372  0961               	comf	_gesture_lr_delta_+1,w
  9379  0373  00F1               	movwf	??_decodeGesture+1
  9380  0374  0AF0               	incf	??_decodeGesture,f
  9381  0375  1903               	skipnz
  9382  0376  0AF1               	incf	??_decodeGesture+1,f
  9383  0377  0870               	movf	??_decodeGesture,w
  9384  0378  00A2               	movwf	_decodeGesture$781
  9385  0379  0871               	movf	??_decodeGesture+1,w
  9386  037A  00A3               	movwf	_decodeGesture$781+1
  9387  037B  2B81               	goto	i1l679
  9388  037C                     i1l3025:	
  9389  037C  0020               	movlb	0	; select bank0
  9390  037D  0861               	movf	_gesture_lr_delta_+1,w
  9391  037E  00A3               	movwf	_decodeGesture$781+1
  9392  037F  0860               	movf	_gesture_lr_delta_,w
  9393  0380  00A2               	movwf	_decodeGesture$781
  9394  0381                     i1l679:	
  9395  0381  0823               	movf	_decodeGesture$781+1,w
  9396  0382  3A80               	xorlw	128
  9397  0383  00F0               	movwf	??_decodeGesture
  9398  0384  0821               	movf	_decodeGesture$780+1,w
  9399  0385  3A80               	xorlw	128
  9400  0386  0270               	subwf	??_decodeGesture,w
  9401  0387  1D03               	skipz
  9402  0388  2B8B               	goto	u251_25
  9403  0389  0820               	movf	_decodeGesture$780,w
  9404  038A  0222               	subwf	_decodeGesture$781,w
  9405  038B                     u251_25:	
  9406  038B  1C03               	btfss	3,0
  9407  038C  2B17               	goto	i1l2993
  9408  038D  2B2B               	goto	i1l3005
  9409  038E                     i1l3031:	
  9410  038E  035E               	decf	_gesture_ud_count_,w
  9411  038F  045F               	iorwf	_gesture_ud_count_+1,w
  9412  0390  1D03               	btfss	3,2
  9413  0391  2BDF               	goto	i1l3049
  9414  0392  0A5C               	incf	_gesture_lr_count_,w
  9415  0393  1D03               	skipz
  9416  0394  2BDF               	goto	i1l3049
  9417  0395  0A5D               	incf	_gesture_lr_count_+1,w
  9418  0396  1D03               	btfss	3,2
  9419  0397  2BDF               	goto	i1l3049
  9420                           
  9421                           ;APDS9960.c: 818: if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture_ud_delt
      +                          a_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) {
  9422  0398  0863               	movf	_gesture_ud_delta_+1,w
  9423  0399  3A80               	xorlw	128
  9424  039A  00F0               	movwf	??_decodeGesture
  9425  039B  3080               	movlw	128
  9426  039C  0270               	subwf	??_decodeGesture,w
  9427  039D  1D03               	skipz
  9428  039E  2BA1               	goto	u254_25
  9429  039F  3001               	movlw	1
  9430  03A0  0262               	subwf	_gesture_ud_delta_,w
  9431  03A1                     u254_25:	
  9432  03A1  1803               	skipnc
  9433  03A2  2BB0               	goto	i1l3039
  9434  03A3  0020               	movlb	0	; select bank0
  9435  03A4  0962               	comf	_gesture_ud_delta_,w
  9436  03A5  00F0               	movwf	??_decodeGesture
  9437  03A6  0963               	comf	_gesture_ud_delta_+1,w
  9438  03A7  00F1               	movwf	??_decodeGesture+1
  9439  03A8  0AF0               	incf	??_decodeGesture,f
  9440  03A9  1903               	skipnz
  9441  03AA  0AF1               	incf	??_decodeGesture+1,f
  9442  03AB  0870               	movf	??_decodeGesture,w
  9443  03AC  00A4               	movwf	_decodeGesture$782
  9444  03AD  0871               	movf	??_decodeGesture+1,w
  9445  03AE  00A5               	movwf	_decodeGesture$782+1
  9446  03AF  2BB5               	goto	i1l687
  9447  03B0                     i1l3039:	
  9448  03B0  0020               	movlb	0	; select bank0
  9449  03B1  0863               	movf	_gesture_ud_delta_+1,w
  9450  03B2  00A5               	movwf	_decodeGesture$782+1
  9451  03B3  0862               	movf	_gesture_ud_delta_,w
  9452  03B4  00A4               	movwf	_decodeGesture$782
  9453  03B5                     i1l687:	
  9454  03B5  0861               	movf	_gesture_lr_delta_+1,w
  9455  03B6  3A80               	xorlw	128
  9456  03B7  00F0               	movwf	??_decodeGesture
  9457  03B8  3080               	movlw	128
  9458  03B9  0270               	subwf	??_decodeGesture,w
  9459  03BA  1D03               	skipz
  9460  03BB  2BBE               	goto	u255_25
  9461  03BC  3001               	movlw	1
  9462  03BD  0260               	subwf	_gesture_lr_delta_,w
  9463  03BE                     u255_25:	
  9464  03BE  1803               	skipnc
  9465  03BF  2BCD               	goto	i1l3043
  9466  03C0  0020               	movlb	0	; select bank0
  9467  03C1  0960               	comf	_gesture_lr_delta_,w
  9468  03C2  00F0               	movwf	??_decodeGesture
  9469  03C3  0961               	comf	_gesture_lr_delta_+1,w
  9470  03C4  00F1               	movwf	??_decodeGesture+1
  9471  03C5  0AF0               	incf	??_decodeGesture,f
  9472  03C6  1903               	skipnz
  9473  03C7  0AF1               	incf	??_decodeGesture+1,f
  9474  03C8  0870               	movf	??_decodeGesture,w
  9475  03C9  00A6               	movwf	_decodeGesture$783
  9476  03CA  0871               	movf	??_decodeGesture+1,w
  9477  03CB  00A7               	movwf	_decodeGesture$783+1
  9478  03CC  2BD2               	goto	i1l691
  9479  03CD                     i1l3043:	
  9480  03CD  0020               	movlb	0	; select bank0
  9481  03CE  0861               	movf	_gesture_lr_delta_+1,w
  9482  03CF  00A7               	movwf	_decodeGesture$783+1
  9483  03D0  0860               	movf	_gesture_lr_delta_,w
  9484  03D1  00A6               	movwf	_decodeGesture$783
  9485  03D2                     i1l691:	
  9486  03D2  0827               	movf	_decodeGesture$783+1,w
  9487  03D3  3A80               	xorlw	128
  9488  03D4  00F0               	movwf	??_decodeGesture
  9489  03D5  0825               	movf	_decodeGesture$782+1,w
  9490  03D6  3A80               	xorlw	128
  9491  03D7  0270               	subwf	??_decodeGesture,w
  9492  03D8  1D03               	skipz
  9493  03D9  2BDC               	goto	u256_25
  9494  03DA  0824               	movf	_decodeGesture$782,w
  9495  03DB  0226               	subwf	_decodeGesture$783,w
  9496  03DC                     u256_25:	
  9497  03DC  1C03               	btfss	3,0
  9498  03DD  2B21               	goto	i1l2999
  9499  03DE  2B37               	goto	i1l3011
  9500  03DF                     i1l3049:	
  9501  03DF  0A5E               	incf	_gesture_ud_count_,w
  9502  03E0  1D03               	skipz
  9503  03E1  2C32               	goto	i1l3067
  9504  03E2  0A5F               	incf	_gesture_ud_count_+1,w
  9505  03E3  1D03               	btfss	3,2
  9506  03E4  2C32               	goto	i1l3067
  9507  03E5  0A5C               	incf	_gesture_lr_count_,w
  9508  03E6  1D03               	skipz
  9509  03E7  2C32               	goto	i1l3067
  9510  03E8  0A5D               	incf	_gesture_lr_count_+1,w
  9511  03E9  1D03               	btfss	3,2
  9512  03EA  2C32               	goto	i1l3067
  9513                           
  9514                           ;APDS9960.c: 824: if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture_ud_delt
      +                          a_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) {
  9515  03EB  0863               	movf	_gesture_ud_delta_+1,w
  9516  03EC  3A80               	xorlw	128
  9517  03ED  00F0               	movwf	??_decodeGesture
  9518  03EE  3080               	movlw	128
  9519  03EF  0270               	subwf	??_decodeGesture,w
  9520  03F0  1D03               	skipz
  9521  03F1  2BF4               	goto	u259_25
  9522  03F2  3001               	movlw	1
  9523  03F3  0262               	subwf	_gesture_ud_delta_,w
  9524  03F4                     u259_25:	
  9525  03F4  1803               	skipnc
  9526  03F5  2C03               	goto	i1l3057
  9527  03F6  0020               	movlb	0	; select bank0
  9528  03F7  0962               	comf	_gesture_ud_delta_,w
  9529  03F8  00F0               	movwf	??_decodeGesture
  9530  03F9  0963               	comf	_gesture_ud_delta_+1,w
  9531  03FA  00F1               	movwf	??_decodeGesture+1
  9532  03FB  0AF0               	incf	??_decodeGesture,f
  9533  03FC  1903               	skipnz
  9534  03FD  0AF1               	incf	??_decodeGesture+1,f
  9535  03FE  0870               	movf	??_decodeGesture,w
  9536  03FF  00A8               	movwf	_decodeGesture$784
  9537  0400  0871               	movf	??_decodeGesture+1,w
  9538  0401  00A9               	movwf	_decodeGesture$784+1
  9539  0402  2C08               	goto	i1l699
  9540  0403                     i1l3057:	
  9541  0403  0020               	movlb	0	; select bank0
  9542  0404  0863               	movf	_gesture_ud_delta_+1,w
  9543  0405  00A9               	movwf	_decodeGesture$784+1
  9544  0406  0862               	movf	_gesture_ud_delta_,w
  9545  0407  00A8               	movwf	_decodeGesture$784
  9546  0408                     i1l699:	
  9547  0408  0861               	movf	_gesture_lr_delta_+1,w
  9548  0409  3A80               	xorlw	128
  9549  040A  00F0               	movwf	??_decodeGesture
  9550  040B  3080               	movlw	128
  9551  040C  0270               	subwf	??_decodeGesture,w
  9552  040D  1D03               	skipz
  9553  040E  2C11               	goto	u260_25
  9554  040F  3001               	movlw	1
  9555  0410  0260               	subwf	_gesture_lr_delta_,w
  9556  0411                     u260_25:	
  9557  0411  1803               	skipnc
  9558  0412  2C20               	goto	i1l3061
  9559  0413  0020               	movlb	0	; select bank0
  9560  0414  0960               	comf	_gesture_lr_delta_,w
  9561  0415  00F0               	movwf	??_decodeGesture
  9562  0416  0961               	comf	_gesture_lr_delta_+1,w
  9563  0417  00F1               	movwf	??_decodeGesture+1
  9564  0418  0AF0               	incf	??_decodeGesture,f
  9565  0419  1903               	skipnz
  9566  041A  0AF1               	incf	??_decodeGesture+1,f
  9567  041B  0870               	movf	??_decodeGesture,w
  9568  041C  00AA               	movwf	_decodeGesture$785
  9569  041D  0871               	movf	??_decodeGesture+1,w
  9570  041E  00AB               	movwf	_decodeGesture$785+1
  9571  041F  2C25               	goto	i1l703
  9572  0420                     i1l3061:	
  9573  0420  0020               	movlb	0	; select bank0
  9574  0421  0861               	movf	_gesture_lr_delta_+1,w
  9575  0422  00AB               	movwf	_decodeGesture$785+1
  9576  0423  0860               	movf	_gesture_lr_delta_,w
  9577  0424  00AA               	movwf	_decodeGesture$785
  9578  0425                     i1l703:	
  9579  0425  082B               	movf	_decodeGesture$785+1,w
  9580  0426  3A80               	xorlw	128
  9581  0427  00F0               	movwf	??_decodeGesture
  9582  0428  0829               	movf	_decodeGesture$784+1,w
  9583  0429  3A80               	xorlw	128
  9584  042A  0270               	subwf	??_decodeGesture,w
  9585  042B  1D03               	skipz
  9586  042C  2C2F               	goto	u261_25
  9587  042D  0828               	movf	_decodeGesture$784,w
  9588  042E  022A               	subwf	_decodeGesture$785,w
  9589  042F                     u261_25:	
  9590  042F  1C03               	btfss	3,0
  9591  0430  2B17               	goto	i1l2993
  9592  0431  2B37               	goto	i1l3011
  9593  0432                     i1l3067:	
  9594  0432  035E               	decf	_gesture_ud_count_,w
  9595  0433  045F               	iorwf	_gesture_ud_count_+1,w
  9596  0434  1D03               	btfss	3,2
  9597  0435  2C81               	goto	i1l3085
  9598  0436  035C               	decf	_gesture_lr_count_,w
  9599  0437  045D               	iorwf	_gesture_lr_count_+1,w
  9600  0438  1D03               	btfss	3,2
  9601  0439  2C81               	goto	i1l3085
  9602                           
  9603                           ;APDS9960.c: 830: if( ((gesture_ud_delta_) > 0 ? (gesture_ud_delta_) : -(gesture_ud_delt
      +                          a_)) > ((gesture_lr_delta_) > 0 ? (gesture_lr_delta_) : -(gesture_lr_delta_)) ) {
  9604  043A  0863               	movf	_gesture_ud_delta_+1,w
  9605  043B  3A80               	xorlw	128
  9606  043C  00F0               	movwf	??_decodeGesture
  9607  043D  3080               	movlw	128
  9608  043E  0270               	subwf	??_decodeGesture,w
  9609  043F  1D03               	skipz
  9610  0440  2C43               	goto	u264_25
  9611  0441  3001               	movlw	1
  9612  0442  0262               	subwf	_gesture_ud_delta_,w
  9613  0443                     u264_25:	
  9614  0443  1803               	skipnc
  9615  0444  2C52               	goto	i1l3075
  9616  0445  0020               	movlb	0	; select bank0
  9617  0446  0962               	comf	_gesture_ud_delta_,w
  9618  0447  00F0               	movwf	??_decodeGesture
  9619  0448  0963               	comf	_gesture_ud_delta_+1,w
  9620  0449  00F1               	movwf	??_decodeGesture+1
  9621  044A  0AF0               	incf	??_decodeGesture,f
  9622  044B  1903               	skipnz
  9623  044C  0AF1               	incf	??_decodeGesture+1,f
  9624  044D  0870               	movf	??_decodeGesture,w
  9625  044E  00AC               	movwf	_decodeGesture$786
  9626  044F  0871               	movf	??_decodeGesture+1,w
  9627  0450  00AD               	movwf	_decodeGesture$786+1
  9628  0451  2C57               	goto	i1l711
  9629  0452                     i1l3075:	
  9630  0452  0020               	movlb	0	; select bank0
  9631  0453  0863               	movf	_gesture_ud_delta_+1,w
  9632  0454  00AD               	movwf	_decodeGesture$786+1
  9633  0455  0862               	movf	_gesture_ud_delta_,w
  9634  0456  00AC               	movwf	_decodeGesture$786
  9635  0457                     i1l711:	
  9636  0457  0861               	movf	_gesture_lr_delta_+1,w
  9637  0458  3A80               	xorlw	128
  9638  0459  00F0               	movwf	??_decodeGesture
  9639  045A  3080               	movlw	128
  9640  045B  0270               	subwf	??_decodeGesture,w
  9641  045C  1D03               	skipz
  9642  045D  2C60               	goto	u265_25
  9643  045E  3001               	movlw	1
  9644  045F  0260               	subwf	_gesture_lr_delta_,w
  9645  0460                     u265_25:	
  9646  0460  1803               	skipnc
  9647  0461  2C6F               	goto	i1l3079
  9648  0462  0020               	movlb	0	; select bank0
  9649  0463  0960               	comf	_gesture_lr_delta_,w
  9650  0464  00F0               	movwf	??_decodeGesture
  9651  0465  0961               	comf	_gesture_lr_delta_+1,w
  9652  0466  00F1               	movwf	??_decodeGesture+1
  9653  0467  0AF0               	incf	??_decodeGesture,f
  9654  0468  1903               	skipnz
  9655  0469  0AF1               	incf	??_decodeGesture+1,f
  9656  046A  0870               	movf	??_decodeGesture,w
  9657  046B  00AE               	movwf	_decodeGesture$787
  9658  046C  0871               	movf	??_decodeGesture+1,w
  9659  046D  00AF               	movwf	_decodeGesture$787+1
  9660  046E  2C74               	goto	i1l715
  9661  046F                     i1l3079:	
  9662  046F  0020               	movlb	0	; select bank0
  9663  0470  0861               	movf	_gesture_lr_delta_+1,w
  9664  0471  00AF               	movwf	_decodeGesture$787+1
  9665  0472  0860               	movf	_gesture_lr_delta_,w
  9666  0473  00AE               	movwf	_decodeGesture$787
  9667  0474                     i1l715:	
  9668  0474  082F               	movf	_decodeGesture$787+1,w
  9669  0475  3A80               	xorlw	128
  9670  0476  00F0               	movwf	??_decodeGesture
  9671  0477  082D               	movf	_decodeGesture$786+1,w
  9672  0478  3A80               	xorlw	128
  9673  0479  0270               	subwf	??_decodeGesture,w
  9674  047A  1D03               	skipz
  9675  047B  2C7E               	goto	u266_25
  9676  047C  082C               	movf	_decodeGesture$786,w
  9677  047D  022E               	subwf	_decodeGesture$787,w
  9678  047E                     u266_25:	
  9679  047E  1C03               	btfss	3,0
  9680  047F  2B21               	goto	i1l2999
  9681  0480  2B2B               	goto	i1l3005
  9682  0481                     i1l3085:	
  9683                           
  9684                           ;APDS9960.c: 836: return 0;
  9685  0481  3000               	movlw	0
  9686  0482  0008               	return
  9687  0483                     i1l3089:	
  9688                           
  9689                           ;APDS9960.c: 837: };APDS9960.c: 839: return 1;
  9690  0483  3001               	movlw	1
  9691  0484  0008               	return
  9692  0485                     __end_of_decodeGesture:	
  9693                           
  9694                           	psect	text59
  9695  0C3E                     __ptext59:	
  9696 ;; *************** function _mssp2_clearIRQ *****************
  9697 ;; Defined at:
  9698 ;;		line 53 in file "mcc_generated_files/i2c2_driver.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;		None
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		None
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;Total ram usage:        0 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_handleGesture
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           
  9726                           ;psect for function _mssp2_clearIRQ
  9727  0C3E                     _mssp2_clearIRQ:	
  9728                           
  9729                           ;i2c2_driver.c: 55: PIR2bits.SSP2IF = 0;
  9730                           
  9731                           ;incstack = 0
  9732                           ; Regs used in _mssp2_clearIRQ: []
  9733  0C3E  0020               	movlb	0	; select bank0
  9734  0C3F  1192               	bcf	18,3	;volatile
  9735  0C40  0008               	return
  9736  0C41                     __end_of_mssp2_clearIRQ:	
  9737                           
  9738                           	psect	text60
  9739  0C72                     __ptext60:	
  9740 ;; *************** function _LEDs_SetLow *****************
  9741 ;; Defined at:
  9742 ;;		line 97 in file "main.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		None
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        0 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_handleGesture
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           
  9770                           ;psect for function _LEDs_SetLow
  9771  0C72                     _LEDs_SetLow:	
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _LEDs_SetLow: []
  9775                           ;main.c: 99: do { LATCbits.LATC5 = 0; } while(0);
  9776  0C72  0022               	movlb	2	; select bank2
  9777  0C73  128E               	bcf	14,5	;volatile
  9778                           
  9779                           ;main.c: 100: do { LATAbits.LATA2 = 0; } while(0);
  9780  0C74  110C               	bcf	12,2	;volatile
  9781                           
  9782                           ;main.c: 101: do { LATAbits.LATA1 = 0; } while(0);
  9783  0C75  108C               	bcf	12,1	;volatile
  9784                           
  9785                           ;main.c: 102: do { LATAbits.LATA5 = 0; } while(0);
  9786  0C76  128C               	bcf	12,5	;volatile
  9787  0C77  0008               	return
  9788  0C78                     __end_of_LEDs_SetLow:	
  9789  007E                     btemp	set	126	;btemp
  9790  007E                     int$flags	set	126
  9791  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         92
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     48      73
    BANK1            80     64      64
    BANK2            80     64      64
    BANK3            80     13      13
    BANK4            80      0      68
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    wireReadDataBlock@val	PTR unsigned char  size(2) Largest target is 64
		 -> readGesture@fifo_data2(BANK1[64]), readGesture@fifo_data(BANK2[64]), 

    i2c2_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> handleGesture(), 

    i2c2_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), handleGesture(), 

    i2c2_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _readGesture->_processGestureData
    i1_getMode->i1_wireReadDataByte
    _wireReadDataBlock->i1_i2c2_driver_setAddr
    _processGestureData->___awdiv
    ___awdiv->___wmul
    _isGestureAvailable->i1_wireReadDataByte
    i1_wireReadDataByte->i1_i2c2_driver_setAddr

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_handleGesture
    _handleGesture->_readGesture
    _readGesture->_processGestureData
    _processGestureData->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _handleGesture->_readGesture

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _handleGesture->_readGesture

Critical Paths under _main in BANK3

    _main->_enableGestureSensor
    _main->_initialize
    _initialize->_setMode
    _setProximityGain->_wireWriteDataByte
    _setProxIntLowThresh->_wireWriteDataByte
    _setProxIntHighThresh->_wireWriteDataByte
    _setLightIntLowThreshold->_wireWriteDataByte
    _setLightIntHighThreshold->_wireWriteDataByte
    _setLEDDrive->_wireWriteDataByte
    _setGestureWaitTime->_wireWriteDataByte
    _setGestureLEDDrive->_wireWriteDataByte
    _setGestureGain->_wireWriteDataByte
    _setGestureExitThresh->_wireWriteDataByte
    _setGestureEnterThresh->_wireWriteDataByte
    _setAmbientLightGain->_wireWriteDataByte
    _enableGestureSensor->_setMode
    _setLEDBoost->_wireWriteDataByte
    _setGestureMode->_wireWriteDataByte
    _setGestureIntEnable->_wireWriteDataByte
    _enablePower->_setMode
    _setMode->_getMode
    _wireWriteDataByte->_i2c2_driver_TXData
    _wireWriteDataByte->_i2c2_driver_setAddr
    _getMode->_wireReadDataByte
    _wireReadDataByte->_i2c2_driver_setAddr

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66788
                  _SYSTEM_Initialize
                _enableGestureSensor
                        _enablePower
              _i2c2_driver_setI2cISR
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   44487
                                             11 BANK3      2     2      0
                   _i2c2_driver_open
                _setAmbientLightGain
              _setGestureEnterThresh
               _setGestureExitThresh
                     _setGestureGain
                _setGestureIntEnable
                 _setGestureLEDDrive
                 _setGestureWaitTime
                        _setLEDDrive
           _setLightIntHighThreshold
            _setLightIntLowThreshold
                            _setMode
               _setProxIntHighThresh
                _setProxIntLowThresh
                   _setProximityGain
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProximityGain                                     4     4      0    2962
                                              5 BANK3      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntLowThresh                                  2     2      0    2846
                                              5 BANK3      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setProxIntHighThresh                                 2     2      0    2846
                                              5 BANK3      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntLowThreshold                              5     3      2    2990
                                              5 BANK3      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLightIntHighThreshold                             5     3      2    2990
                                              5 BANK3      5     3      2
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDDrive                                          4     4      0    2962
                                              5 BANK3      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureWaitTime                                   3     3      0    2939
                                              5 BANK3      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureLEDDrive                                   4     4      0    2962
                                              5 BANK3      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureGain                                       4     4      0    2962
                                              5 BANK3      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureExitThresh                                 2     2      0    2846
                                              5 BANK3      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureEnterThresh                                2     2      0    2846
                                              5 BANK3      2     2      0
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setAmbientLightGain                                  3     3      0    2939
                                              5 BANK3      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _i2c2_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c2_driver_setI2cISR                                2     0      2      98
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enableGestureSensor                                  2     2      0   18705
                                             11 BANK3      2     2      0
                        _enablePower
             _resetGestureParameters
                _setGestureIntEnable
                     _setGestureMode
                        _setLEDBoost
                            _setMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setLEDBoost                                          4     4      0    2962
                                              5 BANK3      4     4      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureMode                                       3     3      0    2939
                                              5 BANK3      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _setGestureIntEnable                                  3     3      0    2962
                                              5 BANK3      3     3      0
                   _wireReadDataByte
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _resetGestureParameters                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enablePower                                          0     0      0    3498
                            _setMode
 ---------------------------------------------------------------------------------
 (2) _setMode                                              5     4      1    3498
                                              6 BANK3      5     4      1
                            _getMode
                  _wireWriteDataByte
 ---------------------------------------------------------------------------------
 (2) _wireWriteDataByte                                    4     1      3    2824
                                              1 BANK3      4     1      3
                 _i2c2_driver_TXData
                _i2c2_driver_setAddr
                  _i2c2_driver_start
                   _i2c2_driver_stop
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_TXData                                   1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMode                                              2     2      0      90
                                              4 BANK3      2     2      0
                   _wireReadDataByte
 ---------------------------------------------------------------------------------
 (2) _wireReadDataByte                                     3     3      0      67
                                              1 BANK3      3     3      0
              _i2c2_driver_getRXData
                 _i2c2_driver_isNACK
                _i2c2_driver_restart
                _i2c2_driver_setAddr
                  _i2c2_driver_start
                _i2c2_driver_startRX
                   _i2c2_driver_stop
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_setAddr                                  1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_isNACK                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c2_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0    4653
                   Absolute function *
                      _handleGesture *
 ---------------------------------------------------------------------------------
 (8) _handleGesture                                        2     2      0    4653
                                             46 BANK0      2     2      0
                        _LEDs_SetLow
                 _isGestureAvailable
                     _mssp2_clearIRQ
                        _readGesture
 ---------------------------------------------------------------------------------
 (9) _readGesture                                        140   138      2    4562
                                             34 BANK0     12    10      2
                                              0 BANK1     64    64      0
                                              0 BANK2     64    64      0
                      _decodeGesture
                 _isGestureAvailable
                 _processGestureData
                  _wireReadDataBlock
                          i1_getMode
           i1_resetGestureParameters
                 i1_wireReadDataByte
 ---------------------------------------------------------------------------------
 (10) i1_resetGestureParameters                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_getMode                                           2     2      0      90
                                              4 COMMON     2     2      0
                 i1_wireReadDataByte
 ---------------------------------------------------------------------------------
 (10) _wireReadDataBlock                                  11     7      4     461
                                              1 COMMON    11     7      4
               _i2c2_driver_sendNACK
            i1_i2c2_driver_getRXData
              i1_i2c2_driver_restart
              i1_i2c2_driver_setAddr
                i1_i2c2_driver_start
              i1_i2c2_driver_startRX
                 i1_i2c2_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c2_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _processGestureData                                 32    32      0    3204
                                             11 COMMON     2     2      0
                                              4 BANK0     30    30      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___wmul                                              6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) ___awdiv                                             9     5      4     908
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) _isGestureAvailable                                  2     2      0      91
                                              4 COMMON     2     2      0
                 i1_wireReadDataByte
 ---------------------------------------------------------------------------------
 (10) i1_wireReadDataByte                                  3     3      0      67
                                              1 COMMON     3     3      0
            i1_i2c2_driver_getRXData
               i1_i2c2_driver_isNACK
              i1_i2c2_driver_restart
              i1_i2c2_driver_setAddr
                i1_i2c2_driver_start
              i1_i2c2_driver_startRX
                 i1_i2c2_driver_stop
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_start                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_setAddr                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_isNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_i2c2_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _decodeGesture                                      18    18      0     192
                                              0 COMMON     2     2      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (9) _mssp2_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LEDs_SetLow                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize
   _enableGestureSensor
     _enablePower
       _setMode
         _getMode
           _wireReadDataByte
             _i2c2_driver_getRXData
             _i2c2_driver_isNACK
             _i2c2_driver_restart
             _i2c2_driver_setAddr
             _i2c2_driver_start
             _i2c2_driver_startRX
             _i2c2_driver_stop
         _wireWriteDataByte
           _i2c2_driver_TXData
           _i2c2_driver_setAddr
           _i2c2_driver_start
           _i2c2_driver_stop
     _resetGestureParameters
     _setGestureIntEnable
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureMode
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setLEDBoost
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setMode
       _getMode
         _wireReadDataByte
           _i2c2_driver_getRXData
           _i2c2_driver_isNACK
           _i2c2_driver_restart
           _i2c2_driver_setAddr
           _i2c2_driver_start
           _i2c2_driver_startRX
           _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _wireWriteDataByte
       _i2c2_driver_TXData
       _i2c2_driver_setAddr
       _i2c2_driver_start
       _i2c2_driver_stop
   _enablePower
     _setMode
       _getMode
         _wireReadDataByte
           _i2c2_driver_getRXData
           _i2c2_driver_isNACK
           _i2c2_driver_restart
           _i2c2_driver_setAddr
           _i2c2_driver_start
           _i2c2_driver_startRX
           _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
   _i2c2_driver_setI2cISR
   _initialize
     _i2c2_driver_open
     _setAmbientLightGain
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureEnterThresh
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureExitThresh
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureGain
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureIntEnable
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureLEDDrive
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setGestureWaitTime
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setLEDDrive
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setLightIntHighThreshold
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setLightIntLowThreshold
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setMode
       _getMode
         _wireReadDataByte
           _i2c2_driver_getRXData
           _i2c2_driver_isNACK
           _i2c2_driver_restart
           _i2c2_driver_setAddr
           _i2c2_driver_start
           _i2c2_driver_startRX
           _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setProxIntHighThresh
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setProxIntLowThresh
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _setProximityGain
       _wireReadDataByte
         _i2c2_driver_getRXData
         _i2c2_driver_isNACK
         _i2c2_driver_restart
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_startRX
         _i2c2_driver_stop
       _wireWriteDataByte
         _i2c2_driver_TXData
         _i2c2_driver_setAddr
         _i2c2_driver_start
         _i2c2_driver_stop
     _wireReadDataByte
       _i2c2_driver_getRXData
       _i2c2_driver_isNACK
       _i2c2_driver_restart
       _i2c2_driver_setAddr
       _i2c2_driver_start
       _i2c2_driver_startRX
       _i2c2_driver_stop
     _wireWriteDataByte
       _i2c2_driver_TXData
       _i2c2_driver_setAddr
       _i2c2_driver_start
       _i2c2_driver_stop

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _handleGesture *
     _LEDs_SetLow
     _isGestureAvailable
       i1_wireReadDataByte
         i1_i2c2_driver_getRXData
         i1_i2c2_driver_isNACK
         i1_i2c2_driver_restart
         i1_i2c2_driver_setAddr
         i1_i2c2_driver_start
         i1_i2c2_driver_startRX
         i1_i2c2_driver_stop
     _mssp2_clearIRQ
     _readGesture
       _decodeGesture
       _isGestureAvailable
         i1_wireReadDataByte
           i1_i2c2_driver_getRXData
           i1_i2c2_driver_isNACK
           i1_i2c2_driver_restart
           i1_i2c2_driver_setAddr
           i1_i2c2_driver_start
           i1_i2c2_driver_startRX
           i1_i2c2_driver_stop
       _processGestureData
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _wireReadDataBlock
         _i2c2_driver_sendNACK
         i1_i2c2_driver_getRXData
         i1_i2c2_driver_restart
         i1_i2c2_driver_setAddr
         i1_i2c2_driver_start
         i1_i2c2_driver_startRX
         i1_i2c2_driver_stop
       i1_getMode
         i1_wireReadDataByte
           i1_i2c2_driver_getRXData
           i1_i2c2_driver_isNACK
           i1_i2c2_driver_restart
           i1_i2c2_driver_setAddr
           i1_i2c2_driver_start
           i1_i2c2_driver_startRX
           i1_i2c2_driver_stop
       i1_resetGestureParameters
       i1_wireReadDataByte
         i1_i2c2_driver_getRXData
         i1_i2c2_driver_isNACK
         i1_i2c2_driver_restart
         i1_i2c2_driver_setAddr
         i1_i2c2_driver_start
         i1_i2c2_driver_startRX
         i1_i2c2_driver_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     40      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     40      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      D       D      11       16.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      44      13       85.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     128      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     128      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 01:27:36 2019

                                  _t 0050                ?_setGestureExitThresh 0070  
                        __CFG_CP$OFF 0000                         ___awdiv@sign 0021  
                                 _id 0052                  ___wmul@multiplicand 0072  
                        __CFG_LVP$ON 0000       __size_of_i2c2_driver_getRXData 0003  
                                l321 0D78     processGestureData@ud_ratio_first 0024  
                       __CFG_CPD$OFF 0000        __end_of_i2c2_driver_getRXData 0C56  
              __end_of_decodeGesture 0485              __size_of_PMD_Initialize 0008  
   __size_ofi1_i2c2_driver_getRXData 0003                                  wreg 0009  
         __size_of_i2c2_driver_start 0003          __size_of_i2c2_driver_TXData 0006  
                               l3161 0CD7                                 l3313 0E75  
                               l3411 0F26                                 l3309 0E73  
                               l3431 0F85                                 l3329 0CFC  
                               l3339 0D0F                                 l3357 0FB7  
                               l3293 0E9C                                 l3269 0D35  
                               l3375 07FE                                 l3279 0D22  
                               l3449 0E34                                 l3393 0E5B  
                               l3289 0E9A                                 l2771 0756  
                               l2763 073E                                 l3475 0498  
                               l2781 0770                                 l2773 0763  
                               l2759 073C                                 l3575 06AF  
                               l2779 076F                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               u2905 07DF                                 u1874 074F  
                               u1875 074E                                 u1884 075B  
                               _PMD0 0911                                 i1l21 0018  
                               u1885 075A                                 _PMD1 0912  
                               _PMD2 0913                                 _PMD3 0914  
                               _PMD4 0915                                 u2945 0F66  
                               u2785 0EBC                                 _PMD5 0916  
                               u2795 0EE5                                 u2885 0F98  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000          __size_of_i2c2_driver_isNACK 0003  
                               _main 0D61                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
              ??_setGestureIntEnable 01A5                        __CFG_BOREN$ON 0000  
                      __CFG_BORV$LOW 0000       __size_of_i2c2_driver_setI2cISR 0009  
                               start 001A        __end_of_i2c2_driver_setI2cISR 0CB5  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
         __end_ofi1_wireReadDataByte 0DEC                         ?_readGesture 0042  
     __size_of_OSCILLATOR_Initialize 0009                         ?_LEDs_SetLow 0070  
      __end_of_OSCILLATOR_Initialize 0CA3                                ?_main 0070  
                    __end_of___awdiv 0730                        __CFG_WDTE$OFF 0000  
                    ___awdiv@divisor 0076                       __CFG_DEBUG$OFF 0000  
                              i1l630 0206                                i1l711 0457  
                              i1l703 0425                                i1l607 004F  
                              i1l642 0282                                i1l634 022F  
                              i1l715 0474                                i1l636 0254  
                              i1l653 02CA                                i1l654 02E2  
                              i1l649 02A1                                i1l691 03D2  
                              i1l675 0364                                i1l687 03B5  
                              i1l679 0381                                i1l881 0D81  
                              i1l699 0408                         ?_setLEDBoost 0070  
                    ___awdiv@counter 0020                         ?_setLEDDrive 0070  
                     _setGestureGain 0F87                                _OSCEN 091D  
                 wireReadDataBlock@j 007B                       _setGestureMode 0E0F  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E          __end_of_setProxIntLowThresh 0D37  
                    __end_of_getMode 0CAC                isGestureAvailable@val 0075  
                 i1_i2c2_driver_stop 0C50                       _WDT_Initialize 0C69  
                   _b_i2c_error_flag 007D         __end_of_setProxIntHighThresh 0D24  
                    __end_of_setMode 077F                                pclath 000A  
       __size_of_setAmbientLightGain 001E                                status 0003  
                ?i1_i2c2_driver_stop 0070         __size_of_i2c2_driver_setAddr 0006  
                              wtemp0 007E              __size_of_mssp2_clearIRQ 0003  
           ?_setLightIntLowThreshold 01A5           __end_of_setGestureLEDDrive 0800  
       __size_of_i2c2_driver_restart 0003                setGestureWaitTime@val 01A7  
       __size_of_i2c2_driver_startRX 0003                   __size_ofi1_getMode 0008  
                      _gesture_data_ 0220                      __initialization 001C  
             ??_setGestureExitThresh 01A5           processGestureData@lr_delta 003E  
                       __end_of_main 0D79                    _handleGestureFlag 0066  
         processGestureData@ud_delta 003C          ?_INTERRUPT_InterruptManager 0070  
             __end_of_setGestureGain 0FB9            __size_of_setProximityGain 0029  
             __end_of_setGestureMode 0E36                 ??i1_i2c2_driver_stop 0070  
                             ??_main 01AD             __end_of_i2c2_driver_open 0CBF  
           __end_of_i2c2_driver_stop 0C65    __size_of_setLightIntHighThreshold 0027  
             __end_of_WDT_Initialize 0C6D            ?_setLightIntHighThreshold 01A5  
  setLightIntHighThreshold@threshold 01A5                 __size_of_enablePower 000E  
                   ___awdiv@dividend 0078                   _processGestureData 0030  
                             _ANSELA 018C                               _ANSELB 018D  
                             _ANSELC 018E         setProxIntLowThresh@threshold 01A6  
                             _RC4PPS 0EA4                               i1l3001 0323  
                             i1l3011 0337                               i1l3021 035F  
                             i1l3013 033D                               i1l3005 032B  
                             i1l3031 038E                               i1l3007 032D  
                             i1l3025 037C                               _ODCONA 028C  
                             _ODCONB 028D                               i1l3043 03CD  
                             i1l3211 064C                               _RC6PPS 0EA6  
                             _ODCONC 028E                               i1l3061 0420  
                             u200_25 005A                               i1l3039 03B0  
                             i1l3215 0655                               i1l3057 0403  
                             i1l3049 03DF                               i1l3209 05EB  
                             i1l3075 0452                               i1l3067 0432  
                             i1l3171 05A3                               i1l3085 0481  
                             i1l3181 05A7                               i1l3079 046F  
                             i1l2711 071A                               i1l2703 06FC  
                             i1l3175 0658                               i1l3089 0483  
                             i1l2705 0708                               i1l2715 0723  
                             i1l2811 0FC6                               i1l3603 0789  
                             i1l2901 01CC                               u210_25 01A0  
                             i1l2813 0FF6                               i1l3197 05DD  
                             i1l3189 05BA                               i1l3621 07A7  
                             i1l2751 0CE9                               i1l2719 072B  
                             i1l2823 003E                               i1l3631 07B2  
                             i1l3615 07A1                               i1l3607 078E  
                             i1l2921 022A                               i1l2905 01DE  
                             i1l3609 079C                               i1l2667 0D7B  
                             i1l2915 0201                               i1l2907 01E1  
                             i1l2843 004B                               i1l2827 0040  
                             i1l3627 07AD                               i1l2693 06F4  
                             i1l2933 0250                               u211_25 01B1  
                             i1l2845 00A5                               i1l3637 07B4  
                             i1l2687 06E9                               i1l2943 0276  
                             i1l2951 0284                               i1l3639 07CB  
                             i1l2961 02C5                               i1l2929 0248  
                             i1l2873 00BC                               i1l2955 029C  
                             i1l2891 01A7                               i1l2859 00C0  
                             u212_25 01C5                               i1l2877 010A  
                             i1l3685 07BD                               i1l2983 0302  
                             i1l2895 01B9                               i1l2993 0317  
                             i1l2897 01BC                               i1l2995 0319  
                             i1l2989 030D                               u213_25 01D6  
                             i1l2999 0321                               u230_25 028D  
                             u231_25 02AA                               u232_25 02B6  
                             u224_25 025D                               u216_25 01F2  
                             u233_25 02D3                               u225_25 0269  
                             u217_25 020F                               u250_25 036D  
                             u170_25 0D82                               u218_25 021B  
                             u251_25 038B                               u171_25 0D87  
                             u219_25 0238                               u260_25 0411  
                             u180_25 071B                               u236_25 02EB  
                             u261_25 042F                               u254_25 03A1  
                             u334_27 0794                               u255_25 03BE  
                             u335_27 065C                               u264_25 0443  
                             u256_25 03DC                               u176_25 06FF  
                             u192_25 0FCF                               u336_27 066E  
                             u265_25 0460                               u249_25 0350  
                             u266_25 047E                               u178_25 0709  
                             u259_25 03F4                               u179_25 0713  
                             u275_25 05E6                     _wireReadDataByte 0DEC  
                             u276_25 05F5                               _OSCFRQ 091F  
            ?_resetGestureParameters 0070                               _WDTCON 0097  
                ?_processGestureData 0070                    _gesture_lr_delta_ 0060  
                     __CFG_PWRTE$OFF 0000        setProxIntHighThresh@threshold 01A6  
                  _gesture_lr_count_ 005C                  wireReadDataByte@reg 01A2  
                wireReadDataByte@val 01A3              ??i1_i2c2_driver_setAddr 0070  
                  _gesture_ud_delta_ 0062           __end_of_isGestureAvailable 0CEB  
                  _gesture_ud_count_ 005E                               ___wmul 0D79  
                          ??___awdiv 007A           __end_of_setGestureWaitTime 0E5D  
                     __CFG_STVREN$ON 0000                  i1_i2c2_driver_start 0C4A  
            ??i1_i2c2_driver_restart 0070              ??i1_i2c2_driver_startRX 0070  
                   ___awdiv@quotient 0022                      ?_setGestureGain 0070  
                          ??_getMode 01A4                      ?_setGestureMode 0070  
            ??_setGestureEnterThresh 01A5                 ??_processGestureData 007B  
            i1_i2c2_driver_getRXData 0C41                       _PMD_Initialize 0C92  
       __end_ofi1_i2c2_driver_isNACK 0C47                            ??_setMode 01A7  
                    ?_WDT_Initialize 0070                    __end_ofi1_getMode 0C92  
                  readGesture@motion 0046                 ?i1_i2c2_driver_start 0070  
      __size_of_i2c2_driver_sendNACK 0004       __end_of_resetGestureParameters 0D61  
                  _SYSTEM_Initialize 0CBF              __end_of__initialization 002C  
                 ?_SYSTEM_Initialize 0070    __size_ofi1_resetGestureParameters 0015  
          ?i1_resetGestureParameters 0070               setGestureWaitTime@time 01A6  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 01A0  
               _setProxIntHighThresh 0D11                       _gesture_state_ 0056  
             __end_of_PMD_Initialize 0C9A                 __size_of_readGesture 00EE  
              __end_of_handleGesture 07CE                 __size_of_LEDs_SetLow 0006  
                 _gesture_far_count_ 0058                 __size_of_setLEDBoost 0032  
               __size_of_setLEDDrive 0029                ??i1_i2c2_driver_start 0070  
          __end_of_SYSTEM_Initialize 0CCB                           __pbssBANK0 0050  
                         __pbssBANK4 0220                 wireWriteDataByte@reg 01A4  
               wireWriteDataByte@val 01A1                  getMode@enable_value 01A5  
                     _mssp2_clearIRQ 0C3E                           __pmaintext 0D61  
            setGestureLEDDrive@drive 01A8                              ?___wmul 0070  
                    __CFG_PPS1WAY$ON 0000         __size_of_enableGestureSensor 005C  
                         __pintentry 0004                ?_setProxIntHighThresh 0070  
          ??i1_i2c2_driver_getRXData 0070          _i2c2_driver_busCollisionISR 0064  
                   _setProximityGain 0ED4                          setMode@mode 01AA  
                    ?_PMD_Initialize 0070                  _setAmbientLightGain 0DAF  
                __CFG_RSTOSC$HFINT32 0000                  _i2c2_driver_setAddr 0C78  
                _i2c2_driver_restart 0C59           __end_of_i2c2_driver_TXData 0C84  
                  _wireReadDataBlock 0FB9                  _i2c2_driver_startRX 0C5F  
                            _OSCCON1 0919                              _OSCCON3 091B  
                 i1_wireReadDataByte 0DCD                _i2c2_driver_getRXData 0C53  
                            _OSCTUNE 091E                 wireReadDataBlock@len 0073  
               wireReadDataBlock@reg 007A                 wireReadDataBlock@val 0071  
                            _SSP2ADD 021A                              _SLRCONA 030C  
                            _SLRCONB 030D                              _SLRCONC 030E  
                            _SSP2BUF 0219                   ?_wireReadDataBlock 0071  
                            _SSP2MSK 021B          __end_of_setGestureIntEnable 0F28  
    processGestureData@lr_ratio_last 002A           __end_of_i2c2_driver_isNACK 0C59  
             __end_of_mssp2_clearIRQ 0C41                  ?i1_wireReadDataByte 0070  
                       readGesture@i 004C                 ?_setAmbientLightGain 0070  
               ?_i2c2_driver_setAddr 0070                  ??_wireReadDataBlock 0075  
               ?_i2c2_driver_restart 0070                 ?_i2c2_driver_startRX 0070  
                      setMode@enable 01A6               __size_of_decodeGesture 018E  
               i1_i2c2_driver_isNACK 0C44                _i2c2_driver_setI2cISR 0CAC  
                            ___awdiv 06DE                      __size_of___wmul 001B  
               ??i1_wireReadDataByte 0071             __end_of_wireReadDataByte 0E0F  
                         _initialize 0485                              _getMode 0CA3  
   __size_of_setLightIntLowThreshold 0027                   _setGestureLEDDrive 07CE  
                            __ptext1 0485                              __ptext2 0ED4  
                            __ptext3 0D24                              __ptext4 0D11  
                            __ptext5 0E84                              __ptext6 0E5D  
                            __ptext7 0EAB                              __ptext8 0E36  
                            __ptext9 07CE            __end_of_wireReadDataBlock 1000  
                  ?_i2c2_driver_open 0070                    ?_i2c2_driver_stop 0070  
              _OSCILLATOR_Initialize 0C9A                              _setMode 0730  
           ??_PIN_MANAGER_Initialize 01A0                   ??_i2c2_driver_open 01A0  
                 ??_i2c2_driver_stop 01A0                  ?_setGestureLEDDrive 0070  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0C85  
               end_of_initialization 002C                      ?_mssp2_clearIRQ 0070  
              ??_setAmbientLightGain 01A5         __size_of_setProxIntLowThresh 0013  
              ??_i2c2_driver_setAddr 01A0                ??_i2c2_driver_restart 01A0  
      enableGestureSensor@interrupts 01AC                ??_i2c2_driver_startRX 01A0  
      setGestureExitThresh@threshold 01A6                ?i1_i2c2_driver_isNACK 0070  
               ??_setGestureLEDDrive 01A5                   readGesture@gstatus 0048  
                       initialize@id 01AC                     ??_setGestureGain 01A5  
             ??_setProxIntHighThresh 01A5                     ??_setGestureMode 01A5  
     __size_ofi1_i2c2_driver_setAddr 0005        __end_ofi1_i2c2_driver_setAddr 0C72  
      __size_of_setGestureExitThresh 0013       __size_ofi1_i2c2_driver_restart 0003  
      __end_ofi1_i2c2_driver_restart 0C4A                     ??_WDT_Initialize 01A0  
     __size_ofi1_i2c2_driver_startRX 0003                    _wireWriteDataByte 0D94  
      __end_ofi1_i2c2_driver_startRX 0C50          __size_ofi1_i2c2_driver_stop 0003  
                      ??_enablePower 01AB                   ?_wireWriteDataByte 01A1  
    setLightIntHighThreshold@val_low 01A8               ?_i2c2_driver_getRXData 0070  
     __size_of_setGestureEnterThresh 0013        __end_of_setGestureEnterThresh 0CFE  
                      _decodeGesture 02F7                   _isGestureAvailable 0CD9  
   __end_ofi1_resetGestureParameters 0D4C                   _setGestureWaitTime 0E36  
                ??_wireWriteDataByte 01A4                     __CFG_FEXTOSC$OFF 0000  
    processGestureData@ud_ratio_last 0028                  ?_isGestureAvailable 0070  
                          i1_getMode 0C8A                  ?_setGestureWaitTime 0070  
              setProximityGain@drive 01A8               ?_i2c2_driver_setI2cISR 01A0  
       __end_of_i2c2_driver_sendNACK 0C69            __end_of_wireWriteDataByte 0DAF  
               ??_isGestureAvailable 0074                       __end_of___wmul 0D94  
               ??_setGestureWaitTime 01A5                          ?_initialize 0070  
             ?_OSCILLATOR_Initialize 0070             _setLightIntHighThreshold 0E5D  
         __size_of_wireReadDataBlock 0047                      _gesture_motion_ 0054  
        __size_of_processGestureData 02C7                       ?_decodeGesture 0070  
                start_initialization 001C                   setGestureGain@gain 01A8  
    __size_of_PIN_MANAGER_Initialize 002D     setLightIntHighThreshold@val_high 01A9  
                _enableGestureSensor 0682                  __end_of_enablePower 0CD9  
                         ?i1_getMode 0070             __end_of_setProximityGain 0EFD  
           processGestureData@d_last 0035             processGestureData@l_last 0036  
           processGestureData@r_last 0037               ??i1_i2c2_driver_isNACK 0070  
           processGestureData@u_last 0034                     __CFG_LPBOREN$OFF 0000  
                   ??_PMD_Initialize 01A0      setLightIntLowThreshold@val_high 01A9  
                           ??___wmul 0074                 ?_enableGestureSensor 0070  
                      ??_readGesture 0044                   setGestureMode@mode 01A6  
            _setLightIntLowThreshold 0E84            setGestureIntEnable@enable 01A7  
                      ??_LEDs_SetLow 0070             setAmbientLightGain@drive 01A6  
        __end_ofi1_i2c2_driver_start 0C4D                        ??_setLEDBoost 01A5  
                      ??_setLEDDrive 01A5               setGestureIntEnable@val 01A6  
                        __pbssCOMMON 007D                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                      __pcstackBANK2 0120                        __pcstackBANK3 01A0  
           i1_resetGestureParameters 0D37                readGesture@fifo_data2 00A0  
              readGesture@fifo_level 004B                   _i2c2_driver_TXData 0C7E  
                __size_of_initialize 010F                   _i2c2_driver_i2cISR 0067  
                          __pnvBANK0 0067               __size_of_handleGesture 004F  
              i1wireReadDataByte@reg 0072                i1wireReadDataByte@val 0073  
             _PIN_MANAGER_Initialize 0F28                   _i2c2_driver_isNACK 0C56  
                ?_i2c2_driver_TXData 0070                ??_enableGestureSensor 01AB  
                           ?___awdiv 0076           __size_of_wireWriteDataByte 001B  
                _setProxIntLowThresh 0D24         ??_INTERRUPT_InterruptManager 007D  
                ?_i2c2_driver_isNACK 0070                             ?_getMode 0070  
                    ??_decodeGesture 0070                    ?_wireReadDataByte 0070  
                        _enablePower 0CCB                   ??_wireReadDataByte 01A1  
                __end_of_readGesture 0682             ??_resetGestureParameters 01A0  
                           ?_setMode 01A6                     ??_mssp2_clearIRQ 0070  
                __end_of_LEDs_SetLow 0C78                 ??_i2c2_driver_TXData 01A0  
               _i2c2_driver_sendNACK 0C65                  __end_of_setLEDBoost 0F87  
                __end_of_setLEDDrive 0ED4                 ?_setProxIntLowThresh 0070  
              readGesture@bytes_read 0049                          ??i1_getMode 0074  
               ??_i2c2_driver_isNACK 01A0                       ___wmul@product 0074  
          __size_of_i2c2_driver_open 000A                             _LATAbits 010C  
                           _LATCbits 010E            __size_of_i2c2_driver_stop 0003  
                          clear_ram0 0C84                             _PIE2bits 0092  
       __size_of_setGestureIntEnable 002B                  _gesture_near_count_ 005A  
__size_of_INTERRUPT_InterruptManager 0016                             _PIR2bits 0012  
           ?i1_i2c2_driver_getRXData 0070            ??_setLightIntLowThreshold 01A7  
                           _SSP2CON1 021D                             _SSP2CON2 021E  
                     setLEDBoost@val 01A7                             _SSP2STAT 021C  
                     setLEDDrive@val 01A7          __size_ofi1_wireReadDataByte 001F  
            ??_i2c2_driver_getRXData 01A0     processGestureData@lr_ratio_first 0026  
                  ___wmul@multiplier 0070            processGestureData@d_first 0039  
                      _handleGesture 077F          __end_of_setAmbientLightGain 0DCD  
          processGestureData@l_first 003A          __end_of_i2c2_driver_setAddr 0C7E  
              ?_i2c2_driver_sendNACK 0070         __end_of_setGestureExitThresh 0D11  
          processGestureData@r_first 003B          __end_of_i2c2_driver_restart 0C5C  
          processGestureData@u_first 0038                ??_setProxIntLowThresh 01A5  
        __end_of_i2c2_driver_startRX 0C62                i1getMode@enable_value 0075  
                  setGestureGain@val 01A7              ??_i2c2_driver_setI2cISR 01A2  
             _processGestureData$775 002C               _processGestureData$776 002E  
             _processGestureData$777 0030               _processGestureData$778 0032  
         ??_setLightIntHighThreshold 01A7          __size_of_setGestureLEDDrive 0032  
                     setMode@reg_val 01A9       setLightIntLowThreshold@val_low 01A8  
                  setGestureMode@val 01A7              ??_OSCILLATOR_Initialize 01A0  
         __end_ofi1_i2c2_driver_stop 0C53                     __size_of___awdiv 0052  
      __size_of_setProxIntHighThresh 0013                          _readGesture 0594  
                       ??_initialize 01AB                          _LEDs_SetLow 0C72  
              i1_i2c2_driver_setAddr 0C6D     setLightIntLowThreshold@threshold 01A5  
                     ?_handleGesture 0070                     __size_of_getMode 0009  
              i1_i2c2_driver_restart 0C47                 readGesture@fifo_data 0120  
                        _setLEDBoost 0F55                          _setLEDDrive 0EAB  
              i1_i2c2_driver_startRX 0C4D      __size_of_resetGestureParameters 0015  
    __end_of_setLightIntLowThreshold 0EAB                setGestureLEDDrive@val 01A7  
                   __size_of_setMode 004F                             __ptext10 0F87  
                           __ptext11 0CFE                             __ptext20 0D4C  
                           __ptext12 0CEB                             __ptext21 0CCB  
                           __ptext13 0DAF                             __ptext30 0C78  
                           __ptext22 0730                             __ptext14 0CB5  
                           __ptext31 0C59                             __ptext23 0D94  
                           __ptext15 0CAC                             __ptext40 077F  
                           __ptext32 0C56                             __ptext24 0C7E  
                           __ptext16 0682                             __ptext41 0594  
                           __ptext33 0C53                             __ptext25 0CA3  
                           __ptext17 0F55                             __ptext50 0DCD  
                           __ptext42 0D37                             __ptext34 0CBF  
                           __ptext26 0DEC                             __ptext18 0E0F  
                           __ptext51 0C50                             __ptext43 0C8A  
                           __ptext35 0C69                             __ptext27 0C62  
                           __ptext19 0EFD                             __ptext60 0C72  
                           __ptext52 0C4D                             __ptext44 0FB9  
                           __ptext36 0C92                             __ptext28 0C5F  
                           __ptext53 0C4A                             __ptext45 0C65  
                           __ptext37 0F28                             __ptext29 0C5C  
                           __ptext54 0C6D                             __ptext46 0030  
                           __ptext38 0C9A                             __ptext55 0C47  
                           __ptext47 0D79                             __ptext56 0C44  
                           __ptext48 06DE                             __ptext57 0C41  
                           __ptext49 0CD9                             __ptext58 02F7  
                           __ptext59 0C3E                _setGestureEnterThresh 0CEB  
                  _i2c2_driver_start 0C5C       setGestureEnterThresh@threshold 01A6  
                       _SSP2CON1bits 021D                         _SSP2CON2bits 021E  
                 ?_i2c2_driver_start 0070                        __size_of_main 0018  
                  ?_setProximityGain 0070      __end_ofi1_i2c2_driver_getRXData 0C44  
                 __end_of_initialize 0594                   ??_setProximityGain 01A5  
                ??_i2c2_driver_start 01A0                             int$flags 007E  
            i2c2_driver_setAddr@addr 01A0   __end_of_INTERRUPT_InterruptManager 001A  
         _INTERRUPT_InterruptManager 0004          __size_of_isGestureAvailable 0012  
                setProximityGain@val 01A7          __size_of_setGestureWaitTime 0027  
         __end_of_processGestureData 02F7                         _SSP2STATbits 021C  
       i2c2_driver_setI2cISR@handler 01A0           ??i1_resetGestureParameters 0070  
            __size_of_setGestureGain 0032                           _INTCONbits 000B  
            __size_of_setGestureMode 0027                  i2c2_driver_TXData@d 01A0  
             ??_i2c2_driver_sendNACK 0070            i1i2c2_driver_setAddr@addr 0070  
          __end_of_i2c2_driver_start 0C5F               setAmbientLightGain@val 01A7  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
                   _i2c2_driver_open 0CB5              ?_PIN_MANAGER_Initialize 0070  
                   _i2c2_driver_stop 0C62                    __CFG_CLKOUTEN$OFF 0000  
             _resetGestureParameters 0D4C                    _decodeGesture$780 0020  
                  _decodeGesture$781 0022                    _decodeGesture$782 0024  
                  _decodeGesture$783 0026                    _decodeGesture$784 0028  
                  _decodeGesture$785 002A                    _decodeGesture$786 002C  
                  _decodeGesture$787 002E        __size_ofi1_i2c2_driver_isNACK 0003  
               _setGestureExitThresh 0CFE               ?i1_i2c2_driver_setAddr 0070  
                    ??_handleGesture 004E               ?i1_i2c2_driver_restart 0070  
             ?i1_i2c2_driver_startRX 0070                         ?_enablePower 0070  
                         _SSP2DATPPS 0E1E                  _setGestureIntEnable 0EFD  
                         _SSP2CLKPPS 0E1D                     setLEDBoost@boost 01A8  
             ?_setGestureEnterThresh 0070         __size_ofi1_i2c2_driver_start 0003  
     __end_of_PIN_MANAGER_Initialize 0F55            __size_of_wireReadDataByte 0023  
                   setLEDDrive@drive 01A8                  processGestureData@i 0040  
        __end_of_enableGestureSensor 06DE                 ?_setGestureIntEnable 0070  
   __end_of_setLightIntHighThreshold 0E84  
