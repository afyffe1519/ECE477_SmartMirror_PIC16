

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 25 14:31:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18345 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0097                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020D                     	;# 
   173  020E                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0219                     	;# 
   191  021A                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  028C                     	;# 
   199  028D                     	;# 
   200  028E                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0297                     	;# 
   210  0298                     	;# 
   211  029F                     	;# 
   212  030C                     	;# 
   213  030D                     	;# 
   214  030E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0314                     	;# 
   220  0315                     	;# 
   221  0315                     	;# 
   222  0316                     	;# 
   223  0317                     	;# 
   224  0318                     	;# 
   225  038C                     	;# 
   226  038D                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0397                     	;# 
   235  0398                     	;# 
   236  0399                     	;# 
   237  039A                     	;# 
   238  039C                     	;# 
   239  039D                     	;# 
   240  039E                     	;# 
   241  039F                     	;# 
   242  0411                     	;# 
   243  0411                     	;# 
   244  0412                     	;# 
   245  0413                     	;# 
   246  0414                     	;# 
   247  0415                     	;# 
   248  0416                     	;# 
   249  0417                     	;# 
   250  0418                     	;# 
   251  0418                     	;# 
   252  0419                     	;# 
   253  041A                     	;# 
   254  041B                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  041F                     	;# 
   259  0498                     	;# 
   260  0498                     	;# 
   261  0499                     	;# 
   262  049A                     	;# 
   263  049B                     	;# 
   264  049B                     	;# 
   265  049C                     	;# 
   266  049D                     	;# 
   267  049E                     	;# 
   268  049F                     	;# 
   269  0617                     	;# 
   270  0618                     	;# 
   271  0619                     	;# 
   272  0619                     	;# 
   273  061A                     	;# 
   274  061B                     	;# 
   275  061C                     	;# 
   276  061C                     	;# 
   277  061F                     	;# 
   278  0691                     	;# 
   279  0692                     	;# 
   280  0693                     	;# 
   281  0694                     	;# 
   282  0695                     	;# 
   283  0696                     	;# 
   284  0697                     	;# 
   285  0698                     	;# 
   286  0699                     	;# 
   287  0711                     	;# 
   288  0712                     	;# 
   289  0713                     	;# 
   290  0714                     	;# 
   291  0715                     	;# 
   292  0716                     	;# 
   293  0717                     	;# 
   294  0718                     	;# 
   295  0719                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0892                     	;# 
   303  0892                     	;# 
   304  0892                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0894                     	;# 
   312  0894                     	;# 
   313  0894                     	;# 
   314  0895                     	;# 
   315  0895                     	;# 
   316  0895                     	;# 
   317  0896                     	;# 
   318  0896                     	;# 
   319  0896                     	;# 
   320  089B                     	;# 
   321  0911                     	;# 
   322  0912                     	;# 
   323  0913                     	;# 
   324  0914                     	;# 
   325  0915                     	;# 
   326  0916                     	;# 
   327  0918                     	;# 
   328  0919                     	;# 
   329  091A                     	;# 
   330  091B                     	;# 
   331  091C                     	;# 
   332  091D                     	;# 
   333  091E                     	;# 
   334  091F                     	;# 
   335  0E0F                     	;# 
   336  0E10                     	;# 
   337  0E11                     	;# 
   338  0E12                     	;# 
   339  0E13                     	;# 
   340  0E14                     	;# 
   341  0E15                     	;# 
   342  0E16                     	;# 
   343  0E17                     	;# 
   344  0E18                     	;# 
   345  0E19                     	;# 
   346  0E1A                     	;# 
   347  0E1B                     	;# 
   348  0E1C                     	;# 
   349  0E1D                     	;# 
   350  0E1E                     	;# 
   351  0E1F                     	;# 
   352  0E20                     	;# 
   353  0E21                     	;# 
   354  0E22                     	;# 
   355  0E24                     	;# 
   356  0E25                     	;# 
   357  0E28                     	;# 
   358  0E29                     	;# 
   359  0E2A                     	;# 
   360  0E2B                     	;# 
   361  0E2C                     	;# 
   362  0E2D                     	;# 
   363  0E2E                     	;# 
   364  0E2F                     	;# 
   365  0E90                     	;# 
   366  0E91                     	;# 
   367  0E92                     	;# 
   368  0E94                     	;# 
   369  0E95                     	;# 
   370  0E9C                     	;# 
   371  0E9D                     	;# 
   372  0E9E                     	;# 
   373  0E9F                     	;# 
   374  0EA0                     	;# 
   375  0EA1                     	;# 
   376  0EA2                     	;# 
   377  0EA3                     	;# 
   378  0EA4                     	;# 
   379  0EA5                     	;# 
   380  0EA6                     	;# 
   381  0EA7                     	;# 
   382  0F0F                     	;# 
   383  0F10                     	;# 
   384  0F11                     	;# 
   385  0F12                     	;# 
   386  0F13                     	;# 
   387  0F14                     	;# 
   388  0F15                     	;# 
   389  0F16                     	;# 
   390  0F17                     	;# 
   391  0F18                     	;# 
   392  0F19                     	;# 
   393  0F1A                     	;# 
   394  0F1B                     	;# 
   395  0F1C                     	;# 
   396  0F1D                     	;# 
   397  0F1E                     	;# 
   398  0F1F                     	;# 
   399  0F20                     	;# 
   400  0F21                     	;# 
   401  0F22                     	;# 
   402  0F23                     	;# 
   403  0F24                     	;# 
   404  0F25                     	;# 
   405  0F26                     	;# 
   406  0F27                     	;# 
   407  0F28                     	;# 
   408  0F29                     	;# 
   409  0F2A                     	;# 
   410  0F2B                     	;# 
   411  0F2C                     	;# 
   412  0F2D                     	;# 
   413  0F2E                     	;# 
   414  0F2F                     	;# 
   415  0F30                     	;# 
   416  0F31                     	;# 
   417  0F32                     	;# 
   418  0F33                     	;# 
   419  0F34                     	;# 
   420  0F35                     	;# 
   421  0F36                     	;# 
   422  0F37                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0014                     	;# 
   454  0015                     	;# 
   455  0015                     	;# 
   456  0016                     	;# 
   457  0016                     	;# 
   458  0017                     	;# 
   459  0018                     	;# 
   460  0019                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001C                     	;# 
   465  001D                     	;# 
   466  001E                     	;# 
   467  001F                     	;# 
   468  008C                     	;# 
   469  008D                     	;# 
   470  008E                     	;# 
   471  0090                     	;# 
   472  0091                     	;# 
   473  0092                     	;# 
   474  0093                     	;# 
   475  0094                     	;# 
   476  0097                     	;# 
   477  009B                     	;# 
   478  009B                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  0111                     	;# 
   487  0112                     	;# 
   488  0113                     	;# 
   489  0114                     	;# 
   490  0115                     	;# 
   491  0116                     	;# 
   492  0117                     	;# 
   493  0118                     	;# 
   494  0119                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  018E                     	;# 
   498  0197                     	;# 
   499  0199                     	;# 
   500  0199                     	;# 
   501  0199                     	;# 
   502  019A                     	;# 
   503  019A                     	;# 
   504  019A                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019C                     	;# 
   511  019C                     	;# 
   512  019C                     	;# 
   513  019D                     	;# 
   514  019D                     	;# 
   515  019D                     	;# 
   516  019E                     	;# 
   517  019E                     	;# 
   518  019E                     	;# 
   519  019F                     	;# 
   520  019F                     	;# 
   521  019F                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  020C                     	;# 
   525  020D                     	;# 
   526  020E                     	;# 
   527  0211                     	;# 
   528  0211                     	;# 
   529  0212                     	;# 
   530  0212                     	;# 
   531  0213                     	;# 
   532  0213                     	;# 
   533  0214                     	;# 
   534  0214                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0216                     	;# 
   540  0216                     	;# 
   541  0217                     	;# 
   542  0217                     	;# 
   543  0219                     	;# 
   544  021A                     	;# 
   545  021B                     	;# 
   546  021C                     	;# 
   547  021D                     	;# 
   548  021D                     	;# 
   549  021E                     	;# 
   550  021F                     	;# 
   551  028C                     	;# 
   552  028D                     	;# 
   553  028E                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0297                     	;# 
   563  0298                     	;# 
   564  029F                     	;# 
   565  030C                     	;# 
   566  030D                     	;# 
   567  030E                     	;# 
   568  0311                     	;# 
   569  0311                     	;# 
   570  0312                     	;# 
   571  0313                     	;# 
   572  0314                     	;# 
   573  0315                     	;# 
   574  0315                     	;# 
   575  0316                     	;# 
   576  0317                     	;# 
   577  0318                     	;# 
   578  038C                     	;# 
   579  038D                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0397                     	;# 
   588  0398                     	;# 
   589  0399                     	;# 
   590  039A                     	;# 
   591  039C                     	;# 
   592  039D                     	;# 
   593  039E                     	;# 
   594  039F                     	;# 
   595  0411                     	;# 
   596  0411                     	;# 
   597  0412                     	;# 
   598  0413                     	;# 
   599  0414                     	;# 
   600  0415                     	;# 
   601  0416                     	;# 
   602  0417                     	;# 
   603  0418                     	;# 
   604  0418                     	;# 
   605  0419                     	;# 
   606  041A                     	;# 
   607  041B                     	;# 
   608  041C                     	;# 
   609  041D                     	;# 
   610  041E                     	;# 
   611  041F                     	;# 
   612  0498                     	;# 
   613  0498                     	;# 
   614  0499                     	;# 
   615  049A                     	;# 
   616  049B                     	;# 
   617  049B                     	;# 
   618  049C                     	;# 
   619  049D                     	;# 
   620  049E                     	;# 
   621  049F                     	;# 
   622  0617                     	;# 
   623  0618                     	;# 
   624  0619                     	;# 
   625  0619                     	;# 
   626  061A                     	;# 
   627  061B                     	;# 
   628  061C                     	;# 
   629  061C                     	;# 
   630  061F                     	;# 
   631  0691                     	;# 
   632  0692                     	;# 
   633  0693                     	;# 
   634  0694                     	;# 
   635  0695                     	;# 
   636  0696                     	;# 
   637  0697                     	;# 
   638  0698                     	;# 
   639  0699                     	;# 
   640  0711                     	;# 
   641  0712                     	;# 
   642  0713                     	;# 
   643  0714                     	;# 
   644  0715                     	;# 
   645  0716                     	;# 
   646  0717                     	;# 
   647  0718                     	;# 
   648  0719                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0891                     	;# 
   652  0891                     	;# 
   653  0891                     	;# 
   654  0891                     	;# 
   655  0892                     	;# 
   656  0892                     	;# 
   657  0892                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0893                     	;# 
   661  0893                     	;# 
   662  0893                     	;# 
   663  0893                     	;# 
   664  0894                     	;# 
   665  0894                     	;# 
   666  0894                     	;# 
   667  0895                     	;# 
   668  0895                     	;# 
   669  0895                     	;# 
   670  0896                     	;# 
   671  0896                     	;# 
   672  0896                     	;# 
   673  089B                     	;# 
   674  0911                     	;# 
   675  0912                     	;# 
   676  0913                     	;# 
   677  0914                     	;# 
   678  0915                     	;# 
   679  0916                     	;# 
   680  0918                     	;# 
   681  0919                     	;# 
   682  091A                     	;# 
   683  091B                     	;# 
   684  091C                     	;# 
   685  091D                     	;# 
   686  091E                     	;# 
   687  091F                     	;# 
   688  0E0F                     	;# 
   689  0E10                     	;# 
   690  0E11                     	;# 
   691  0E12                     	;# 
   692  0E13                     	;# 
   693  0E14                     	;# 
   694  0E15                     	;# 
   695  0E16                     	;# 
   696  0E17                     	;# 
   697  0E18                     	;# 
   698  0E19                     	;# 
   699  0E1A                     	;# 
   700  0E1B                     	;# 
   701  0E1C                     	;# 
   702  0E1D                     	;# 
   703  0E1E                     	;# 
   704  0E1F                     	;# 
   705  0E20                     	;# 
   706  0E21                     	;# 
   707  0E22                     	;# 
   708  0E24                     	;# 
   709  0E25                     	;# 
   710  0E28                     	;# 
   711  0E29                     	;# 
   712  0E2A                     	;# 
   713  0E2B                     	;# 
   714  0E2C                     	;# 
   715  0E2D                     	;# 
   716  0E2E                     	;# 
   717  0E2F                     	;# 
   718  0E90                     	;# 
   719  0E91                     	;# 
   720  0E92                     	;# 
   721  0E94                     	;# 
   722  0E95                     	;# 
   723  0E9C                     	;# 
   724  0E9D                     	;# 
   725  0E9E                     	;# 
   726  0E9F                     	;# 
   727  0EA0                     	;# 
   728  0EA1                     	;# 
   729  0EA2                     	;# 
   730  0EA3                     	;# 
   731  0EA4                     	;# 
   732  0EA5                     	;# 
   733  0EA6                     	;# 
   734  0EA7                     	;# 
   735  0F0F                     	;# 
   736  0F10                     	;# 
   737  0F11                     	;# 
   738  0F12                     	;# 
   739  0F13                     	;# 
   740  0F14                     	;# 
   741  0F15                     	;# 
   742  0F16                     	;# 
   743  0F17                     	;# 
   744  0F18                     	;# 
   745  0F19                     	;# 
   746  0F1A                     	;# 
   747  0F1B                     	;# 
   748  0F1C                     	;# 
   749  0F1D                     	;# 
   750  0F1E                     	;# 
   751  0F1F                     	;# 
   752  0F20                     	;# 
   753  0F21                     	;# 
   754  0F22                     	;# 
   755  0F23                     	;# 
   756  0F24                     	;# 
   757  0F25                     	;# 
   758  0F26                     	;# 
   759  0F27                     	;# 
   760  0F28                     	;# 
   761  0F29                     	;# 
   762  0F2A                     	;# 
   763  0F2B                     	;# 
   764  0F2C                     	;# 
   765  0F2D                     	;# 
   766  0F2E                     	;# 
   767  0F2F                     	;# 
   768  0F30                     	;# 
   769  0F31                     	;# 
   770  0F32                     	;# 
   771  0F33                     	;# 
   772  0F34                     	;# 
   773  0F35                     	;# 
   774  0F36                     	;# 
   775  0F37                     	;# 
   776  0FE4                     	;# 
   777  0FE5                     	;# 
   778  0FE6                     	;# 
   779  0FE7                     	;# 
   780  0FE8                     	;# 
   781  0FE9                     	;# 
   782  0FEA                     	;# 
   783  0FEB                     	;# 
   784  0FED                     	;# 
   785  0FEE                     	;# 
   786  0FEF                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000D                     	;# 
   801  000E                     	;# 
   802  0010                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0013                     	;# 
   806  0014                     	;# 
   807  0015                     	;# 
   808  0015                     	;# 
   809  0016                     	;# 
   810  0016                     	;# 
   811  0017                     	;# 
   812  0018                     	;# 
   813  0019                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001D                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  008C                     	;# 
   822  008D                     	;# 
   823  008E                     	;# 
   824  0090                     	;# 
   825  0091                     	;# 
   826  0092                     	;# 
   827  0093                     	;# 
   828  0094                     	;# 
   829  0097                     	;# 
   830  009B                     	;# 
   831  009B                     	;# 
   832  009C                     	;# 
   833  009D                     	;# 
   834  009E                     	;# 
   835  009F                     	;# 
   836  010C                     	;# 
   837  010D                     	;# 
   838  010E                     	;# 
   839  0111                     	;# 
   840  0112                     	;# 
   841  0113                     	;# 
   842  0114                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  018C                     	;# 
   849  018D                     	;# 
   850  018E                     	;# 
   851  0197                     	;# 
   852  0199                     	;# 
   853  0199                     	;# 
   854  0199                     	;# 
   855  019A                     	;# 
   856  019A                     	;# 
   857  019A                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019C                     	;# 
   864  019C                     	;# 
   865  019C                     	;# 
   866  019D                     	;# 
   867  019D                     	;# 
   868  019D                     	;# 
   869  019E                     	;# 
   870  019E                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  019F                     	;# 
   874  019F                     	;# 
   875  019F                     	;# 
   876  019F                     	;# 
   877  020C                     	;# 
   878  020D                     	;# 
   879  020E                     	;# 
   880  0211                     	;# 
   881  0211                     	;# 
   882  0212                     	;# 
   883  0212                     	;# 
   884  0213                     	;# 
   885  0213                     	;# 
   886  0214                     	;# 
   887  0214                     	;# 
   888  0215                     	;# 
   889  0215                     	;# 
   890  0215                     	;# 
   891  0215                     	;# 
   892  0216                     	;# 
   893  0216                     	;# 
   894  0217                     	;# 
   895  0217                     	;# 
   896  0219                     	;# 
   897  021A                     	;# 
   898  021B                     	;# 
   899  021C                     	;# 
   900  021D                     	;# 
   901  021D                     	;# 
   902  021E                     	;# 
   903  021F                     	;# 
   904  028C                     	;# 
   905  028D                     	;# 
   906  028E                     	;# 
   907  0291                     	;# 
   908  0291                     	;# 
   909  0292                     	;# 
   910  0293                     	;# 
   911  0294                     	;# 
   912  0295                     	;# 
   913  0295                     	;# 
   914  0296                     	;# 
   915  0297                     	;# 
   916  0298                     	;# 
   917  029F                     	;# 
   918  030C                     	;# 
   919  030D                     	;# 
   920  030E                     	;# 
   921  0311                     	;# 
   922  0311                     	;# 
   923  0312                     	;# 
   924  0313                     	;# 
   925  0314                     	;# 
   926  0315                     	;# 
   927  0315                     	;# 
   928  0316                     	;# 
   929  0317                     	;# 
   930  0318                     	;# 
   931  038C                     	;# 
   932  038D                     	;# 
   933  038E                     	;# 
   934  0391                     	;# 
   935  0392                     	;# 
   936  0393                     	;# 
   937  0394                     	;# 
   938  0395                     	;# 
   939  0396                     	;# 
   940  0397                     	;# 
   941  0398                     	;# 
   942  0399                     	;# 
   943  039A                     	;# 
   944  039C                     	;# 
   945  039D                     	;# 
   946  039E                     	;# 
   947  039F                     	;# 
   948  0411                     	;# 
   949  0411                     	;# 
   950  0412                     	;# 
   951  0413                     	;# 
   952  0414                     	;# 
   953  0415                     	;# 
   954  0416                     	;# 
   955  0417                     	;# 
   956  0418                     	;# 
   957  0418                     	;# 
   958  0419                     	;# 
   959  041A                     	;# 
   960  041B                     	;# 
   961  041C                     	;# 
   962  041D                     	;# 
   963  041E                     	;# 
   964  041F                     	;# 
   965  0498                     	;# 
   966  0498                     	;# 
   967  0499                     	;# 
   968  049A                     	;# 
   969  049B                     	;# 
   970  049B                     	;# 
   971  049C                     	;# 
   972  049D                     	;# 
   973  049E                     	;# 
   974  049F                     	;# 
   975  0617                     	;# 
   976  0618                     	;# 
   977  0619                     	;# 
   978  0619                     	;# 
   979  061A                     	;# 
   980  061B                     	;# 
   981  061C                     	;# 
   982  061C                     	;# 
   983  061F                     	;# 
   984  0691                     	;# 
   985  0692                     	;# 
   986  0693                     	;# 
   987  0694                     	;# 
   988  0695                     	;# 
   989  0696                     	;# 
   990  0697                     	;# 
   991  0698                     	;# 
   992  0699                     	;# 
   993  0711                     	;# 
   994  0712                     	;# 
   995  0713                     	;# 
   996  0714                     	;# 
   997  0715                     	;# 
   998  0716                     	;# 
   999  0717                     	;# 
  1000  0718                     	;# 
  1001  0719                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0891                     	;# 
  1005  0891                     	;# 
  1006  0891                     	;# 
  1007  0891                     	;# 
  1008  0892                     	;# 
  1009  0892                     	;# 
  1010  0892                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0893                     	;# 
  1014  0893                     	;# 
  1015  0893                     	;# 
  1016  0893                     	;# 
  1017  0894                     	;# 
  1018  0894                     	;# 
  1019  0894                     	;# 
  1020  0895                     	;# 
  1021  0895                     	;# 
  1022  0895                     	;# 
  1023  0896                     	;# 
  1024  0896                     	;# 
  1025  0896                     	;# 
  1026  089B                     	;# 
  1027  0911                     	;# 
  1028  0912                     	;# 
  1029  0913                     	;# 
  1030  0914                     	;# 
  1031  0915                     	;# 
  1032  0916                     	;# 
  1033  0918                     	;# 
  1034  0919                     	;# 
  1035  091A                     	;# 
  1036  091B                     	;# 
  1037  091C                     	;# 
  1038  091D                     	;# 
  1039  091E                     	;# 
  1040  091F                     	;# 
  1041  0E0F                     	;# 
  1042  0E10                     	;# 
  1043  0E11                     	;# 
  1044  0E12                     	;# 
  1045  0E13                     	;# 
  1046  0E14                     	;# 
  1047  0E15                     	;# 
  1048  0E16                     	;# 
  1049  0E17                     	;# 
  1050  0E18                     	;# 
  1051  0E19                     	;# 
  1052  0E1A                     	;# 
  1053  0E1B                     	;# 
  1054  0E1C                     	;# 
  1055  0E1D                     	;# 
  1056  0E1E                     	;# 
  1057  0E1F                     	;# 
  1058  0E20                     	;# 
  1059  0E21                     	;# 
  1060  0E22                     	;# 
  1061  0E24                     	;# 
  1062  0E25                     	;# 
  1063  0E28                     	;# 
  1064  0E29                     	;# 
  1065  0E2A                     	;# 
  1066  0E2B                     	;# 
  1067  0E2C                     	;# 
  1068  0E2D                     	;# 
  1069  0E2E                     	;# 
  1070  0E2F                     	;# 
  1071  0E90                     	;# 
  1072  0E91                     	;# 
  1073  0E92                     	;# 
  1074  0E94                     	;# 
  1075  0E95                     	;# 
  1076  0E9C                     	;# 
  1077  0E9D                     	;# 
  1078  0E9E                     	;# 
  1079  0E9F                     	;# 
  1080  0EA0                     	;# 
  1081  0EA1                     	;# 
  1082  0EA2                     	;# 
  1083  0EA3                     	;# 
  1084  0EA4                     	;# 
  1085  0EA5                     	;# 
  1086  0EA6                     	;# 
  1087  0EA7                     	;# 
  1088  0F0F                     	;# 
  1089  0F10                     	;# 
  1090  0F11                     	;# 
  1091  0F12                     	;# 
  1092  0F13                     	;# 
  1093  0F14                     	;# 
  1094  0F15                     	;# 
  1095  0F16                     	;# 
  1096  0F17                     	;# 
  1097  0F18                     	;# 
  1098  0F19                     	;# 
  1099  0F1A                     	;# 
  1100  0F1B                     	;# 
  1101  0F1C                     	;# 
  1102  0F1D                     	;# 
  1103  0F1E                     	;# 
  1104  0F1F                     	;# 
  1105  0F20                     	;# 
  1106  0F21                     	;# 
  1107  0F22                     	;# 
  1108  0F23                     	;# 
  1109  0F24                     	;# 
  1110  0F25                     	;# 
  1111  0F26                     	;# 
  1112  0F27                     	;# 
  1113  0F28                     	;# 
  1114  0F29                     	;# 
  1115  0F2A                     	;# 
  1116  0F2B                     	;# 
  1117  0F2C                     	;# 
  1118  0F2D                     	;# 
  1119  0F2E                     	;# 
  1120  0F2F                     	;# 
  1121  0F30                     	;# 
  1122  0F31                     	;# 
  1123  0F32                     	;# 
  1124  0F33                     	;# 
  1125  0F34                     	;# 
  1126  0F35                     	;# 
  1127  0F36                     	;# 
  1128  0F37                     	;# 
  1129  0FE4                     	;# 
  1130  0FE5                     	;# 
  1131  0FE6                     	;# 
  1132  0FE7                     	;# 
  1133  0FE8                     	;# 
  1134  0FE9                     	;# 
  1135  0FEA                     	;# 
  1136  0FEB                     	;# 
  1137  0FED                     	;# 
  1138  0FEE                     	;# 
  1139  0FEF                     	;# 
  1140  0000                     	;# 
  1141  0001                     	;# 
  1142  0002                     	;# 
  1143  0003                     	;# 
  1144  0004                     	;# 
  1145  0005                     	;# 
  1146  0006                     	;# 
  1147  0007                     	;# 
  1148  0008                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0014                     	;# 
  1160  0015                     	;# 
  1161  0015                     	;# 
  1162  0016                     	;# 
  1163  0016                     	;# 
  1164  0017                     	;# 
  1165  0018                     	;# 
  1166  0019                     	;# 
  1167  0019                     	;# 
  1168  001A                     	;# 
  1169  001B                     	;# 
  1170  001C                     	;# 
  1171  001D                     	;# 
  1172  001E                     	;# 
  1173  001F                     	;# 
  1174  008C                     	;# 
  1175  008D                     	;# 
  1176  008E                     	;# 
  1177  0090                     	;# 
  1178  0091                     	;# 
  1179  0092                     	;# 
  1180  0093                     	;# 
  1181  0094                     	;# 
  1182  0097                     	;# 
  1183  009B                     	;# 
  1184  009B                     	;# 
  1185  009C                     	;# 
  1186  009D                     	;# 
  1187  009E                     	;# 
  1188  009F                     	;# 
  1189  010C                     	;# 
  1190  010D                     	;# 
  1191  010E                     	;# 
  1192  0111                     	;# 
  1193  0112                     	;# 
  1194  0113                     	;# 
  1195  0114                     	;# 
  1196  0115                     	;# 
  1197  0116                     	;# 
  1198  0117                     	;# 
  1199  0118                     	;# 
  1200  0119                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0197                     	;# 
  1205  0199                     	;# 
  1206  0199                     	;# 
  1207  0199                     	;# 
  1208  019A                     	;# 
  1209  019A                     	;# 
  1210  019A                     	;# 
  1211  019B                     	;# 
  1212  019B                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  019C                     	;# 
  1218  019C                     	;# 
  1219  019D                     	;# 
  1220  019D                     	;# 
  1221  019D                     	;# 
  1222  019E                     	;# 
  1223  019E                     	;# 
  1224  019E                     	;# 
  1225  019F                     	;# 
  1226  019F                     	;# 
  1227  019F                     	;# 
  1228  019F                     	;# 
  1229  019F                     	;# 
  1230  020C                     	;# 
  1231  020D                     	;# 
  1232  020E                     	;# 
  1233  0211                     	;# 
  1234  0211                     	;# 
  1235  0212                     	;# 
  1236  0212                     	;# 
  1237  0213                     	;# 
  1238  0213                     	;# 
  1239  0214                     	;# 
  1240  0214                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0216                     	;# 
  1246  0216                     	;# 
  1247  0217                     	;# 
  1248  0217                     	;# 
  1249  0219                     	;# 
  1250  021A                     	;# 
  1251  021B                     	;# 
  1252  021C                     	;# 
  1253  021D                     	;# 
  1254  021D                     	;# 
  1255  021E                     	;# 
  1256  021F                     	;# 
  1257  028C                     	;# 
  1258  028D                     	;# 
  1259  028E                     	;# 
  1260  0291                     	;# 
  1261  0291                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0294                     	;# 
  1265  0295                     	;# 
  1266  0295                     	;# 
  1267  0296                     	;# 
  1268  0297                     	;# 
  1269  0298                     	;# 
  1270  029F                     	;# 
  1271  030C                     	;# 
  1272  030D                     	;# 
  1273  030E                     	;# 
  1274  0311                     	;# 
  1275  0311                     	;# 
  1276  0312                     	;# 
  1277  0313                     	;# 
  1278  0314                     	;# 
  1279  0315                     	;# 
  1280  0315                     	;# 
  1281  0316                     	;# 
  1282  0317                     	;# 
  1283  0318                     	;# 
  1284  038C                     	;# 
  1285  038D                     	;# 
  1286  038E                     	;# 
  1287  0391                     	;# 
  1288  0392                     	;# 
  1289  0393                     	;# 
  1290  0394                     	;# 
  1291  0395                     	;# 
  1292  0396                     	;# 
  1293  0397                     	;# 
  1294  0398                     	;# 
  1295  0399                     	;# 
  1296  039A                     	;# 
  1297  039C                     	;# 
  1298  039D                     	;# 
  1299  039E                     	;# 
  1300  039F                     	;# 
  1301  0411                     	;# 
  1302  0411                     	;# 
  1303  0412                     	;# 
  1304  0413                     	;# 
  1305  0414                     	;# 
  1306  0415                     	;# 
  1307  0416                     	;# 
  1308  0417                     	;# 
  1309  0418                     	;# 
  1310  0418                     	;# 
  1311  0419                     	;# 
  1312  041A                     	;# 
  1313  041B                     	;# 
  1314  041C                     	;# 
  1315  041D                     	;# 
  1316  041E                     	;# 
  1317  041F                     	;# 
  1318  0498                     	;# 
  1319  0498                     	;# 
  1320  0499                     	;# 
  1321  049A                     	;# 
  1322  049B                     	;# 
  1323  049B                     	;# 
  1324  049C                     	;# 
  1325  049D                     	;# 
  1326  049E                     	;# 
  1327  049F                     	;# 
  1328  0617                     	;# 
  1329  0618                     	;# 
  1330  0619                     	;# 
  1331  0619                     	;# 
  1332  061A                     	;# 
  1333  061B                     	;# 
  1334  061C                     	;# 
  1335  061C                     	;# 
  1336  061F                     	;# 
  1337  0691                     	;# 
  1338  0692                     	;# 
  1339  0693                     	;# 
  1340  0694                     	;# 
  1341  0695                     	;# 
  1342  0696                     	;# 
  1343  0697                     	;# 
  1344  0698                     	;# 
  1345  0699                     	;# 
  1346  0711                     	;# 
  1347  0712                     	;# 
  1348  0713                     	;# 
  1349  0714                     	;# 
  1350  0715                     	;# 
  1351  0716                     	;# 
  1352  0717                     	;# 
  1353  0718                     	;# 
  1354  0719                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0891                     	;# 
  1358  0891                     	;# 
  1359  0891                     	;# 
  1360  0891                     	;# 
  1361  0892                     	;# 
  1362  0892                     	;# 
  1363  0892                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0893                     	;# 
  1367  0893                     	;# 
  1368  0893                     	;# 
  1369  0893                     	;# 
  1370  0894                     	;# 
  1371  0894                     	;# 
  1372  0894                     	;# 
  1373  0895                     	;# 
  1374  0895                     	;# 
  1375  0895                     	;# 
  1376  0896                     	;# 
  1377  0896                     	;# 
  1378  0896                     	;# 
  1379  089B                     	;# 
  1380  0911                     	;# 
  1381  0912                     	;# 
  1382  0913                     	;# 
  1383  0914                     	;# 
  1384  0915                     	;# 
  1385  0916                     	;# 
  1386  0918                     	;# 
  1387  0919                     	;# 
  1388  091A                     	;# 
  1389  091B                     	;# 
  1390  091C                     	;# 
  1391  091D                     	;# 
  1392  091E                     	;# 
  1393  091F                     	;# 
  1394  0E0F                     	;# 
  1395  0E10                     	;# 
  1396  0E11                     	;# 
  1397  0E12                     	;# 
  1398  0E13                     	;# 
  1399  0E14                     	;# 
  1400  0E15                     	;# 
  1401  0E16                     	;# 
  1402  0E17                     	;# 
  1403  0E18                     	;# 
  1404  0E19                     	;# 
  1405  0E1A                     	;# 
  1406  0E1B                     	;# 
  1407  0E1C                     	;# 
  1408  0E1D                     	;# 
  1409  0E1E                     	;# 
  1410  0E1F                     	;# 
  1411  0E20                     	;# 
  1412  0E21                     	;# 
  1413  0E22                     	;# 
  1414  0E24                     	;# 
  1415  0E25                     	;# 
  1416  0E28                     	;# 
  1417  0E29                     	;# 
  1418  0E2A                     	;# 
  1419  0E2B                     	;# 
  1420  0E2C                     	;# 
  1421  0E2D                     	;# 
  1422  0E2E                     	;# 
  1423  0E2F                     	;# 
  1424  0E90                     	;# 
  1425  0E91                     	;# 
  1426  0E92                     	;# 
  1427  0E94                     	;# 
  1428  0E95                     	;# 
  1429  0E9C                     	;# 
  1430  0E9D                     	;# 
  1431  0E9E                     	;# 
  1432  0E9F                     	;# 
  1433  0EA0                     	;# 
  1434  0EA1                     	;# 
  1435  0EA2                     	;# 
  1436  0EA3                     	;# 
  1437  0EA4                     	;# 
  1438  0EA5                     	;# 
  1439  0EA6                     	;# 
  1440  0EA7                     	;# 
  1441  0F0F                     	;# 
  1442  0F10                     	;# 
  1443  0F11                     	;# 
  1444  0F12                     	;# 
  1445  0F13                     	;# 
  1446  0F14                     	;# 
  1447  0F15                     	;# 
  1448  0F16                     	;# 
  1449  0F17                     	;# 
  1450  0F18                     	;# 
  1451  0F19                     	;# 
  1452  0F1A                     	;# 
  1453  0F1B                     	;# 
  1454  0F1C                     	;# 
  1455  0F1D                     	;# 
  1456  0F1E                     	;# 
  1457  0F1F                     	;# 
  1458  0F20                     	;# 
  1459  0F21                     	;# 
  1460  0F22                     	;# 
  1461  0F23                     	;# 
  1462  0F24                     	;# 
  1463  0F25                     	;# 
  1464  0F26                     	;# 
  1465  0F27                     	;# 
  1466  0F28                     	;# 
  1467  0F29                     	;# 
  1468  0F2A                     	;# 
  1469  0F2B                     	;# 
  1470  0F2C                     	;# 
  1471  0F2D                     	;# 
  1472  0F2E                     	;# 
  1473  0F2F                     	;# 
  1474  0F30                     	;# 
  1475  0F31                     	;# 
  1476  0F32                     	;# 
  1477  0F33                     	;# 
  1478  0F34                     	;# 
  1479  0F35                     	;# 
  1480  0F36                     	;# 
  1481  0F37                     	;# 
  1482  0FE4                     	;# 
  1483  0FE5                     	;# 
  1484  0FE6                     	;# 
  1485  0FE7                     	;# 
  1486  0FE8                     	;# 
  1487  0FE9                     	;# 
  1488  0FEA                     	;# 
  1489  0FEB                     	;# 
  1490  0FED                     	;# 
  1491  0FEE                     	;# 
  1492  0FEF                     	;# 
  1493  0000                     	;# 
  1494  0001                     	;# 
  1495  0002                     	;# 
  1496  0003                     	;# 
  1497  0004                     	;# 
  1498  0005                     	;# 
  1499  0006                     	;# 
  1500  0007                     	;# 
  1501  0008                     	;# 
  1502  0009                     	;# 
  1503  000A                     	;# 
  1504  000B                     	;# 
  1505  000C                     	;# 
  1506  000D                     	;# 
  1507  000E                     	;# 
  1508  0010                     	;# 
  1509  0011                     	;# 
  1510  0012                     	;# 
  1511  0013                     	;# 
  1512  0014                     	;# 
  1513  0015                     	;# 
  1514  0015                     	;# 
  1515  0016                     	;# 
  1516  0016                     	;# 
  1517  0017                     	;# 
  1518  0018                     	;# 
  1519  0019                     	;# 
  1520  0019                     	;# 
  1521  001A                     	;# 
  1522  001B                     	;# 
  1523  001C                     	;# 
  1524  001D                     	;# 
  1525  001E                     	;# 
  1526  001F                     	;# 
  1527  008C                     	;# 
  1528  008D                     	;# 
  1529  008E                     	;# 
  1530  0090                     	;# 
  1531  0091                     	;# 
  1532  0092                     	;# 
  1533  0093                     	;# 
  1534  0094                     	;# 
  1535  0097                     	;# 
  1536  009B                     	;# 
  1537  009B                     	;# 
  1538  009C                     	;# 
  1539  009D                     	;# 
  1540  009E                     	;# 
  1541  009F                     	;# 
  1542  010C                     	;# 
  1543  010D                     	;# 
  1544  010E                     	;# 
  1545  0111                     	;# 
  1546  0112                     	;# 
  1547  0113                     	;# 
  1548  0114                     	;# 
  1549  0115                     	;# 
  1550  0116                     	;# 
  1551  0117                     	;# 
  1552  0118                     	;# 
  1553  0119                     	;# 
  1554  018C                     	;# 
  1555  018D                     	;# 
  1556  018E                     	;# 
  1557  0197                     	;# 
  1558  0199                     	;# 
  1559  0199                     	;# 
  1560  0199                     	;# 
  1561  019A                     	;# 
  1562  019A                     	;# 
  1563  019A                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019C                     	;# 
  1570  019C                     	;# 
  1571  019C                     	;# 
  1572  019D                     	;# 
  1573  019D                     	;# 
  1574  019D                     	;# 
  1575  019E                     	;# 
  1576  019E                     	;# 
  1577  019E                     	;# 
  1578  019F                     	;# 
  1579  019F                     	;# 
  1580  019F                     	;# 
  1581  019F                     	;# 
  1582  019F                     	;# 
  1583  020C                     	;# 
  1584  020D                     	;# 
  1585  020E                     	;# 
  1586  0211                     	;# 
  1587  0211                     	;# 
  1588  0212                     	;# 
  1589  0212                     	;# 
  1590  0213                     	;# 
  1591  0213                     	;# 
  1592  0214                     	;# 
  1593  0214                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0215                     	;# 
  1597  0215                     	;# 
  1598  0216                     	;# 
  1599  0216                     	;# 
  1600  0217                     	;# 
  1601  0217                     	;# 
  1602  0219                     	;# 
  1603  021A                     	;# 
  1604  021B                     	;# 
  1605  021C                     	;# 
  1606  021D                     	;# 
  1607  021D                     	;# 
  1608  021E                     	;# 
  1609  021F                     	;# 
  1610  028C                     	;# 
  1611  028D                     	;# 
  1612  028E                     	;# 
  1613  0291                     	;# 
  1614  0291                     	;# 
  1615  0292                     	;# 
  1616  0293                     	;# 
  1617  0294                     	;# 
  1618  0295                     	;# 
  1619  0295                     	;# 
  1620  0296                     	;# 
  1621  0297                     	;# 
  1622  0298                     	;# 
  1623  029F                     	;# 
  1624  030C                     	;# 
  1625  030D                     	;# 
  1626  030E                     	;# 
  1627  0311                     	;# 
  1628  0311                     	;# 
  1629  0312                     	;# 
  1630  0313                     	;# 
  1631  0314                     	;# 
  1632  0315                     	;# 
  1633  0315                     	;# 
  1634  0316                     	;# 
  1635  0317                     	;# 
  1636  0318                     	;# 
  1637  038C                     	;# 
  1638  038D                     	;# 
  1639  038E                     	;# 
  1640  0391                     	;# 
  1641  0392                     	;# 
  1642  0393                     	;# 
  1643  0394                     	;# 
  1644  0395                     	;# 
  1645  0396                     	;# 
  1646  0397                     	;# 
  1647  0398                     	;# 
  1648  0399                     	;# 
  1649  039A                     	;# 
  1650  039C                     	;# 
  1651  039D                     	;# 
  1652  039E                     	;# 
  1653  039F                     	;# 
  1654  0411                     	;# 
  1655  0411                     	;# 
  1656  0412                     	;# 
  1657  0413                     	;# 
  1658  0414                     	;# 
  1659  0415                     	;# 
  1660  0416                     	;# 
  1661  0417                     	;# 
  1662  0418                     	;# 
  1663  0418                     	;# 
  1664  0419                     	;# 
  1665  041A                     	;# 
  1666  041B                     	;# 
  1667  041C                     	;# 
  1668  041D                     	;# 
  1669  041E                     	;# 
  1670  041F                     	;# 
  1671  0498                     	;# 
  1672  0498                     	;# 
  1673  0499                     	;# 
  1674  049A                     	;# 
  1675  049B                     	;# 
  1676  049B                     	;# 
  1677  049C                     	;# 
  1678  049D                     	;# 
  1679  049E                     	;# 
  1680  049F                     	;# 
  1681  0617                     	;# 
  1682  0618                     	;# 
  1683  0619                     	;# 
  1684  0619                     	;# 
  1685  061A                     	;# 
  1686  061B                     	;# 
  1687  061C                     	;# 
  1688  061C                     	;# 
  1689  061F                     	;# 
  1690  0691                     	;# 
  1691  0692                     	;# 
  1692  0693                     	;# 
  1693  0694                     	;# 
  1694  0695                     	;# 
  1695  0696                     	;# 
  1696  0697                     	;# 
  1697  0698                     	;# 
  1698  0699                     	;# 
  1699  0711                     	;# 
  1700  0712                     	;# 
  1701  0713                     	;# 
  1702  0714                     	;# 
  1703  0715                     	;# 
  1704  0716                     	;# 
  1705  0717                     	;# 
  1706  0718                     	;# 
  1707  0719                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0891                     	;# 
  1711  0891                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0892                     	;# 
  1715  0892                     	;# 
  1716  0892                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0893                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0894                     	;# 
  1724  0894                     	;# 
  1725  0894                     	;# 
  1726  0895                     	;# 
  1727  0895                     	;# 
  1728  0895                     	;# 
  1729  0896                     	;# 
  1730  0896                     	;# 
  1731  0896                     	;# 
  1732  089B                     	;# 
  1733  0911                     	;# 
  1734  0912                     	;# 
  1735  0913                     	;# 
  1736  0914                     	;# 
  1737  0915                     	;# 
  1738  0916                     	;# 
  1739  0918                     	;# 
  1740  0919                     	;# 
  1741  091A                     	;# 
  1742  091B                     	;# 
  1743  091C                     	;# 
  1744  091D                     	;# 
  1745  091E                     	;# 
  1746  091F                     	;# 
  1747  0E0F                     	;# 
  1748  0E10                     	;# 
  1749  0E11                     	;# 
  1750  0E12                     	;# 
  1751  0E13                     	;# 
  1752  0E14                     	;# 
  1753  0E15                     	;# 
  1754  0E16                     	;# 
  1755  0E17                     	;# 
  1756  0E18                     	;# 
  1757  0E19                     	;# 
  1758  0E1A                     	;# 
  1759  0E1B                     	;# 
  1760  0E1C                     	;# 
  1761  0E1D                     	;# 
  1762  0E1E                     	;# 
  1763  0E1F                     	;# 
  1764  0E20                     	;# 
  1765  0E21                     	;# 
  1766  0E22                     	;# 
  1767  0E24                     	;# 
  1768  0E25                     	;# 
  1769  0E28                     	;# 
  1770  0E29                     	;# 
  1771  0E2A                     	;# 
  1772  0E2B                     	;# 
  1773  0E2C                     	;# 
  1774  0E2D                     	;# 
  1775  0E2E                     	;# 
  1776  0E2F                     	;# 
  1777  0E90                     	;# 
  1778  0E91                     	;# 
  1779  0E92                     	;# 
  1780  0E94                     	;# 
  1781  0E95                     	;# 
  1782  0E9C                     	;# 
  1783  0E9D                     	;# 
  1784  0E9E                     	;# 
  1785  0E9F                     	;# 
  1786  0EA0                     	;# 
  1787  0EA1                     	;# 
  1788  0EA2                     	;# 
  1789  0EA3                     	;# 
  1790  0EA4                     	;# 
  1791  0EA5                     	;# 
  1792  0EA6                     	;# 
  1793  0EA7                     	;# 
  1794  0F0F                     	;# 
  1795  0F10                     	;# 
  1796  0F11                     	;# 
  1797  0F12                     	;# 
  1798  0F13                     	;# 
  1799  0F14                     	;# 
  1800  0F15                     	;# 
  1801  0F16                     	;# 
  1802  0F17                     	;# 
  1803  0F18                     	;# 
  1804  0F19                     	;# 
  1805  0F1A                     	;# 
  1806  0F1B                     	;# 
  1807  0F1C                     	;# 
  1808  0F1D                     	;# 
  1809  0F1E                     	;# 
  1810  0F1F                     	;# 
  1811  0F20                     	;# 
  1812  0F21                     	;# 
  1813  0F22                     	;# 
  1814  0F23                     	;# 
  1815  0F24                     	;# 
  1816  0F25                     	;# 
  1817  0F26                     	;# 
  1818  0F27                     	;# 
  1819  0F28                     	;# 
  1820  0F29                     	;# 
  1821  0F2A                     	;# 
  1822  0F2B                     	;# 
  1823  0F2C                     	;# 
  1824  0F2D                     	;# 
  1825  0F2E                     	;# 
  1826  0F2F                     	;# 
  1827  0F30                     	;# 
  1828  0F31                     	;# 
  1829  0F32                     	;# 
  1830  0F33                     	;# 
  1831  0F34                     	;# 
  1832  0F35                     	;# 
  1833  0F36                     	;# 
  1834  0F37                     	;# 
  1835  0FE4                     	;# 
  1836  0FE5                     	;# 
  1837  0FE6                     	;# 
  1838  0FE7                     	;# 
  1839  0FE8                     	;# 
  1840  0FE9                     	;# 
  1841  0FEA                     	;# 
  1842  0FEB                     	;# 
  1843  0FED                     	;# 
  1844  0FEE                     	;# 
  1845  0FEF                     	;# 
  1846  0000                     	;# 
  1847  0001                     	;# 
  1848  0002                     	;# 
  1849  0003                     	;# 
  1850  0004                     	;# 
  1851  0005                     	;# 
  1852  0006                     	;# 
  1853  0007                     	;# 
  1854  0008                     	;# 
  1855  0009                     	;# 
  1856  000A                     	;# 
  1857  000B                     	;# 
  1858  000C                     	;# 
  1859  000D                     	;# 
  1860  000E                     	;# 
  1861  0010                     	;# 
  1862  0011                     	;# 
  1863  0012                     	;# 
  1864  0013                     	;# 
  1865  0014                     	;# 
  1866  0015                     	;# 
  1867  0015                     	;# 
  1868  0016                     	;# 
  1869  0016                     	;# 
  1870  0017                     	;# 
  1871  0018                     	;# 
  1872  0019                     	;# 
  1873  0019                     	;# 
  1874  001A                     	;# 
  1875  001B                     	;# 
  1876  001C                     	;# 
  1877  001D                     	;# 
  1878  001E                     	;# 
  1879  001F                     	;# 
  1880  008C                     	;# 
  1881  008D                     	;# 
  1882  008E                     	;# 
  1883  0090                     	;# 
  1884  0091                     	;# 
  1885  0092                     	;# 
  1886  0093                     	;# 
  1887  0094                     	;# 
  1888  0097                     	;# 
  1889  009B                     	;# 
  1890  009B                     	;# 
  1891  009C                     	;# 
  1892  009D                     	;# 
  1893  009E                     	;# 
  1894  009F                     	;# 
  1895  010C                     	;# 
  1896  010D                     	;# 
  1897  010E                     	;# 
  1898  0111                     	;# 
  1899  0112                     	;# 
  1900  0113                     	;# 
  1901  0114                     	;# 
  1902  0115                     	;# 
  1903  0116                     	;# 
  1904  0117                     	;# 
  1905  0118                     	;# 
  1906  0119                     	;# 
  1907  018C                     	;# 
  1908  018D                     	;# 
  1909  018E                     	;# 
  1910  0197                     	;# 
  1911  0199                     	;# 
  1912  0199                     	;# 
  1913  0199                     	;# 
  1914  019A                     	;# 
  1915  019A                     	;# 
  1916  019A                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019C                     	;# 
  1923  019C                     	;# 
  1924  019C                     	;# 
  1925  019D                     	;# 
  1926  019D                     	;# 
  1927  019D                     	;# 
  1928  019E                     	;# 
  1929  019E                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  020C                     	;# 
  1937  020D                     	;# 
  1938  020E                     	;# 
  1939  0211                     	;# 
  1940  0211                     	;# 
  1941  0212                     	;# 
  1942  0212                     	;# 
  1943  0213                     	;# 
  1944  0213                     	;# 
  1945  0214                     	;# 
  1946  0214                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0215                     	;# 
  1950  0215                     	;# 
  1951  0216                     	;# 
  1952  0216                     	;# 
  1953  0217                     	;# 
  1954  0217                     	;# 
  1955  0219                     	;# 
  1956  021A                     	;# 
  1957  021B                     	;# 
  1958  021C                     	;# 
  1959  021D                     	;# 
  1960  021D                     	;# 
  1961  021E                     	;# 
  1962  021F                     	;# 
  1963  028C                     	;# 
  1964  028D                     	;# 
  1965  028E                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0294                     	;# 
  1971  0295                     	;# 
  1972  0295                     	;# 
  1973  0296                     	;# 
  1974  0297                     	;# 
  1975  0298                     	;# 
  1976  029F                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  0311                     	;# 
  1981  0311                     	;# 
  1982  0312                     	;# 
  1983  0313                     	;# 
  1984  0314                     	;# 
  1985  0315                     	;# 
  1986  0315                     	;# 
  1987  0316                     	;# 
  1988  0317                     	;# 
  1989  0318                     	;# 
  1990  038C                     	;# 
  1991  038D                     	;# 
  1992  038E                     	;# 
  1993  0391                     	;# 
  1994  0392                     	;# 
  1995  0393                     	;# 
  1996  0394                     	;# 
  1997  0395                     	;# 
  1998  0396                     	;# 
  1999  0397                     	;# 
  2000  0398                     	;# 
  2001  0399                     	;# 
  2002  039A                     	;# 
  2003  039C                     	;# 
  2004  039D                     	;# 
  2005  039E                     	;# 
  2006  039F                     	;# 
  2007  0411                     	;# 
  2008  0411                     	;# 
  2009  0412                     	;# 
  2010  0413                     	;# 
  2011  0414                     	;# 
  2012  0415                     	;# 
  2013  0416                     	;# 
  2014  0417                     	;# 
  2015  0418                     	;# 
  2016  0418                     	;# 
  2017  0419                     	;# 
  2018  041A                     	;# 
  2019  041B                     	;# 
  2020  041C                     	;# 
  2021  041D                     	;# 
  2022  041E                     	;# 
  2023  041F                     	;# 
  2024  0498                     	;# 
  2025  0498                     	;# 
  2026  0499                     	;# 
  2027  049A                     	;# 
  2028  049B                     	;# 
  2029  049B                     	;# 
  2030  049C                     	;# 
  2031  049D                     	;# 
  2032  049E                     	;# 
  2033  049F                     	;# 
  2034  0617                     	;# 
  2035  0618                     	;# 
  2036  0619                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061B                     	;# 
  2040  061C                     	;# 
  2041  061C                     	;# 
  2042  061F                     	;# 
  2043  0691                     	;# 
  2044  0692                     	;# 
  2045  0693                     	;# 
  2046  0694                     	;# 
  2047  0695                     	;# 
  2048  0696                     	;# 
  2049  0697                     	;# 
  2050  0698                     	;# 
  2051  0699                     	;# 
  2052  0711                     	;# 
  2053  0712                     	;# 
  2054  0713                     	;# 
  2055  0714                     	;# 
  2056  0715                     	;# 
  2057  0716                     	;# 
  2058  0717                     	;# 
  2059  0718                     	;# 
  2060  0719                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0891                     	;# 
  2064  0891                     	;# 
  2065  0891                     	;# 
  2066  0891                     	;# 
  2067  0892                     	;# 
  2068  0892                     	;# 
  2069  0892                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0893                     	;# 
  2073  0893                     	;# 
  2074  0893                     	;# 
  2075  0893                     	;# 
  2076  0894                     	;# 
  2077  0894                     	;# 
  2078  0894                     	;# 
  2079  0895                     	;# 
  2080  0895                     	;# 
  2081  0895                     	;# 
  2082  0896                     	;# 
  2083  0896                     	;# 
  2084  0896                     	;# 
  2085  089B                     	;# 
  2086  0911                     	;# 
  2087  0912                     	;# 
  2088  0913                     	;# 
  2089  0914                     	;# 
  2090  0915                     	;# 
  2091  0916                     	;# 
  2092  0918                     	;# 
  2093  0919                     	;# 
  2094  091A                     	;# 
  2095  091B                     	;# 
  2096  091C                     	;# 
  2097  091D                     	;# 
  2098  091E                     	;# 
  2099  091F                     	;# 
  2100  0E0F                     	;# 
  2101  0E10                     	;# 
  2102  0E11                     	;# 
  2103  0E12                     	;# 
  2104  0E13                     	;# 
  2105  0E14                     	;# 
  2106  0E15                     	;# 
  2107  0E16                     	;# 
  2108  0E17                     	;# 
  2109  0E18                     	;# 
  2110  0E19                     	;# 
  2111  0E1A                     	;# 
  2112  0E1B                     	;# 
  2113  0E1C                     	;# 
  2114  0E1D                     	;# 
  2115  0E1E                     	;# 
  2116  0E1F                     	;# 
  2117  0E20                     	;# 
  2118  0E21                     	;# 
  2119  0E22                     	;# 
  2120  0E24                     	;# 
  2121  0E25                     	;# 
  2122  0E28                     	;# 
  2123  0E29                     	;# 
  2124  0E2A                     	;# 
  2125  0E2B                     	;# 
  2126  0E2C                     	;# 
  2127  0E2D                     	;# 
  2128  0E2E                     	;# 
  2129  0E2F                     	;# 
  2130  0E90                     	;# 
  2131  0E91                     	;# 
  2132  0E92                     	;# 
  2133  0E94                     	;# 
  2134  0E95                     	;# 
  2135  0E9C                     	;# 
  2136  0E9D                     	;# 
  2137  0E9E                     	;# 
  2138  0E9F                     	;# 
  2139  0EA0                     	;# 
  2140  0EA1                     	;# 
  2141  0EA2                     	;# 
  2142  0EA3                     	;# 
  2143  0EA4                     	;# 
  2144  0EA5                     	;# 
  2145  0EA6                     	;# 
  2146  0EA7                     	;# 
  2147  0F0F                     	;# 
  2148  0F10                     	;# 
  2149  0F11                     	;# 
  2150  0F12                     	;# 
  2151  0F13                     	;# 
  2152  0F14                     	;# 
  2153  0F15                     	;# 
  2154  0F16                     	;# 
  2155  0F17                     	;# 
  2156  0F18                     	;# 
  2157  0F19                     	;# 
  2158  0F1A                     	;# 
  2159  0F1B                     	;# 
  2160  0F1C                     	;# 
  2161  0F1D                     	;# 
  2162  0F1E                     	;# 
  2163  0F1F                     	;# 
  2164  0F20                     	;# 
  2165  0F21                     	;# 
  2166  0F22                     	;# 
  2167  0F23                     	;# 
  2168  0F24                     	;# 
  2169  0F25                     	;# 
  2170  0F26                     	;# 
  2171  0F27                     	;# 
  2172  0F28                     	;# 
  2173  0F29                     	;# 
  2174  0F2A                     	;# 
  2175  0F2B                     	;# 
  2176  0F2C                     	;# 
  2177  0F2D                     	;# 
  2178  0F2E                     	;# 
  2179  0F2F                     	;# 
  2180  0F30                     	;# 
  2181  0F31                     	;# 
  2182  0F32                     	;# 
  2183  0F33                     	;# 
  2184  0F34                     	;# 
  2185  0F35                     	;# 
  2186  0F36                     	;# 
  2187  0F37                     	;# 
  2188  0FE4                     	;# 
  2189  0FE5                     	;# 
  2190  0FE6                     	;# 
  2191  0FE7                     	;# 
  2192  0FE8                     	;# 
  2193  0FE9                     	;# 
  2194  0FEA                     	;# 
  2195  0FEB                     	;# 
  2196  0FED                     	;# 
  2197  0FEE                     	;# 
  2198  0FEF                     	;# 
  2199                           
  2200                           	psect	idataBANK0
  2201  00ED                     __pidataBANK0:	
  2202                           
  2203                           ;initializer for _name
  2204  00ED  3401               	retlw	1
  2205                           
  2206                           	psect	nvBANK1
  2207  00DF                     __pnvBANK1:	
  2208  00DF                     _adcResult:	
  2209  00DF                     	ds	1
  2210  000E                     _PORTCbits	set	14
  2211  009D                     _ADCON0bits	set	157
  2212  009C                     _ADRESH	set	156
  2213  009B                     _ADRESL	set	155
  2214  009F                     _ADACT	set	159
  2215  009E                     _ADCON1	set	158
  2216  009D                     _ADCON0	set	157
  2217  008E                     _TRISC	set	142
  2218  008D                     _TRISB	set	141
  2219  008C                     _TRISA	set	140
  2220  0097                     _WDTCON	set	151
  2221  010C                     _LATAbits	set	268
  2222  010E                     _LATCbits	set	270
  2223  010E                     _LATC	set	270
  2224  010D                     _LATB	set	269
  2225  010C                     _LATA	set	268
  2226  018C                     _ANSELA	set	396
  2227  018D                     _ANSELB	set	397
  2228  018E                     _ANSELC	set	398
  2229  020E                     _WPUC	set	526
  2230  020C                     _WPUA	set	524
  2231  020D                     _WPUB	set	525
  2232  0214                     _SSP1STATbits	set	532
  2233  0211                     _SSP1BUF	set	529
  2234  0215                     _SSP1CON1bits	set	533
  2235  0212                     _SSP1ADD	set	530
  2236  0215                     _SSP1CON1	set	533
  2237  0214                     _SSP1STAT	set	532
  2238  028E                     _ODCONC	set	654
  2239  028D                     _ODCONB	set	653
  2240  028C                     _ODCONA	set	652
  2241  030E                     _SLRCONC	set	782
  2242  030D                     _SLRCONB	set	781
  2243  030C                     _SLRCONA	set	780
  2244  0916                     _PMD5	set	2326
  2245  0915                     _PMD4	set	2325
  2246  0914                     _PMD3	set	2324
  2247  0913                     _PMD2	set	2323
  2248  0912                     _PMD1	set	2322
  2249  0911                     _PMD0	set	2321
  2250  091E                     _OSCTUNE	set	2334
  2251  091F                     _OSCFRQ	set	2335
  2252  091D                     _OSCEN	set	2333
  2253  091B                     _OSCCON3	set	2331
  2254  0919                     _OSCCON1	set	2329
  2255  0E21                     _SSP1DATPPS	set	3617
  2256  0E20                     _SSP1CLKPPS	set	3616
  2257  0EA2                     _RC2PPS	set	3746
  2258  0E9E                     _RB6PPS	set	3742
  2259                           
  2260                           	psect	stringtext1
  2261  0800                     __pstringtext1:	
  2262  0800                     STR_4:	
  2263  0800  3441               	retlw	65	;'A'
  2264  0801  346C               	retlw	108	;'l'
  2265  0802  3465               	retlw	101	;'e'
  2266  0803  3478               	retlw	120	;'x'
  2267  0804  3461               	retlw	97	;'a'
  2268  0805  346E               	retlw	110	;'n'
  2269  0806  3464               	retlw	100	;'d'
  2270  0807  3472               	retlw	114	;'r'
  2271  0808  3461               	retlw	97	;'a'
  2272  0809  3420               	retlw	32	;' '
  2273  080A  3446               	retlw	70	;'F'
  2274  080B  3479               	retlw	121	;'y'
  2275  080C  3466               	retlw	102	;'f'
  2276  080D  3466               	retlw	102	;'f'
  2277  080E  3465               	retlw	101	;'e'
  2278  080F  3400               	retlw	0
  2279                           
  2280                           	psect	stringtext2
  2281  0810                     __pstringtext2:	
  2282  0810                     STR_3:	
  2283  0810  344E               	retlw	78	;'N'
  2284  0811  346F               	retlw	111	;'o'
  2285  0812  3465               	retlw	101	;'e'
  2286  0813  346C               	retlw	108	;'l'
  2287  0814  346C               	retlw	108	;'l'
  2288  0815  3465               	retlw	101	;'e'
  2289  0816  3420               	retlw	32	;' '
  2290  0817  3443               	retlw	67	;'C'
  2291  0818  3472               	retlw	114	;'r'
  2292  0819  3461               	retlw	97	;'a'
  2293  081A  346E               	retlw	110	;'n'
  2294  081B  3465               	retlw	101	;'e'
  2295  081C  3400               	retlw	0
  2296                           
  2297                           	psect	stringtext3
  2298  081D                     __pstringtext3:	
  2299  081D                     STR_2:	
  2300  081D  344A               	retlw	74	;'J'
  2301  081E  3475               	retlw	117	;'u'
  2302  081F  3473               	retlw	115	;'s'
  2303  0820  3474               	retlw	116	;'t'
  2304  0821  3469               	retlw	105	;'i'
  2305  0822  346E               	retlw	110	;'n'
  2306  0823  3420               	retlw	32	;' '
  2307  0824  3443               	retlw	67	;'C'
  2308  0825  3468               	retlw	104	;'h'
  2309  0826  3461               	retlw	97	;'a'
  2310  0827  346E               	retlw	110	;'n'
  2311  0828  3400               	retlw	0
  2312                           
  2313                           	psect	stringtext4
  2314  0829                     __pstringtext4:	
  2315  0829                     STR_5:	
  2316  0829  344A               	retlw	74	;'J'
  2317  082A  3465               	retlw	101	;'e'
  2318  082B  3466               	retlw	102	;'f'
  2319  082C  3466               	retlw	102	;'f'
  2320  082D  3420               	retlw	32	;' '
  2321  082E  3447               	retlw	71	;'G'
  2322  082F  3465               	retlw	101	;'e'
  2323  0830  3469               	retlw	105	;'i'
  2324  0831  3473               	retlw	115	;'s'
  2325  0832  3473               	retlw	115	;'s'
  2326  0833  3400               	retlw	0
  2327                           
  2328                           	psect	stringtext5
  2329  0834                     __pstringtext5:	
  2330  0834                     STR_1:	
  2331  0834  3425               	retlw	37	;'%'
  2332  0835  3464               	retlw	100	;'d'
  2333  0836  3400               	retlw	0
  2334                           
  2335                           	psect	stringtext6
  2336  0000                     __pstringtext6:	
  2337  0834                     
  2338                           ; #config settings
  2339  0000                     
  2340                           	psect	cinit
  2341  07EF                     start_initialization:	
  2342  07EF                     __initialization:	
  2343                           
  2344                           ; Initialize objects allocated to BANK0
  2345  07EF  3180  20ED  3187   	fcall	__pidataBANK0	;fetch initializer
  2346  07F2  00EF               	movwf	__pdataBANK0& (0+127)
  2347                           
  2348                           ; Clear objects allocated to BANK0
  2349  07F3  01EC               	clrf	__pbssBANK0& (0+127)
  2350  07F4  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2351  07F5  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2352                           
  2353                           ; Clear objects allocated to BANK1
  2354  07F6  30A0               	movlw	low __pbssBANK1
  2355  07F7  0084               	movwf	4
  2356  07F8  3000               	movlw	high __pbssBANK1
  2357  07F9  0085               	movwf	5
  2358  07FA  3028               	movlw	40
  2359  07FB  3180  20F2         	fcall	clear_ram0
  2360  07FD                     end_of_initialization:	
  2361                           ;End of C runtime variable initialization code
  2362                           
  2363  07FD                     __end_of__initialization:	
  2364  07FD  0020               	movlb	0
  2365  07FE  3180  28FF         	ljmp	_main	;jump to C main() function
  2366                           
  2367                           	psect	bssBANK0
  2368  006C                     __pbssBANK0:	
  2369  006C                     _flags:	
  2370  006C                     	ds	2
  2371  006E                     _button:	
  2372  006E                     	ds	1
  2373                           
  2374                           	psect	dataBANK0
  2375  006F                     __pdataBANK0:	
  2376  006F                     _name:	
  2377  006F                     	ds	1
  2378                           
  2379                           	psect	bssBANK1
  2380  00A0                     __pbssBANK1:	
  2381  00A0                     _nout:	
  2382  00A0                     	ds	2
  2383  00A2                     _width:	
  2384  00A2                     	ds	2
  2385  00A4                     _prec:	
  2386  00A4                     	ds	2
  2387  00A6                     _printed:	
  2388  00A6                     	ds	1
  2389  00A7                     _switch1:	
  2390  00A7                     	ds	1
  2391  00A8                     _dbuf:	
  2392  00A8                     	ds	32
  2393                           
  2394                           	psect	clrtext
  2395  00F2                     clear_ram0:	
  2396                           ;	Called with FSR0 containing the base address, and
  2397                           ;	WREG with the size to clear
  2398                           
  2399  00F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2400  00F3                     clrloop0:	
  2401  00F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2402  00F4  3101               	addfsr 0,1
  2403  00F5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2404  00F6  28F3               	goto	clrloop0	;have we reached the end yet?
  2405  00F7  3400               	retlw	0	;all done for this memory range, return
  2406                           
  2407                           	psect	cstackBANK1
  2408  00C8                     __pcstackBANK1:	
  2409  00C8                     	ds	2
  2410  00CA                     sprintf@ap:	
  2411                           
  2412                           ; 1 bytes @ 0x2
  2413  00CA                     	ds	1
  2414  00CB                     sprintf@s:	
  2415                           
  2416                           ; 1 bytes @ 0x3
  2417  00CB                     	ds	1
  2418  00CC                     sprintf@f:	
  2419                           
  2420                           ; 5 bytes @ 0x4
  2421  00CC                     	ds	5
  2422  00D1                     Get_ADC@string1:	
  2423                           
  2424                           ; 12 bytes @ 0x9
  2425  00D1                     	ds	12
  2426  00DD                     Get_ADC@val:	
  2427                           
  2428                           ; 2 bytes @ 0x15
  2429  00DD                     	ds	2
  2430                           
  2431                           	psect	cstackCOMMON
  2432  0070                     __pcstackCOMMON:	
  2433  0070                     ?_PMD_Initialize:	
  2434  0070                     ??_PMD_Initialize:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_PIN_MANAGER_Initialize:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ??_PIN_MANAGER_Initialize:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_OSCILLATOR_Initialize:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ??_OSCILLATOR_Initialize:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_WDT_Initialize:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ??_WDT_Initialize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_ADC_Initialize:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ??_ADC_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_Get_ADC:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_putch:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ??_putch:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_SPI1_Initialize:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ??_SPI1_Initialize:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_SPI1_Exchange8bit:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ??_SPI1_Exchange8bit:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     ?_SYSTEM_Initialize:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     ??_SYSTEM_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     ?_main:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0070                     ?_SPI_Write:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0070                     ??___aodiv:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0070                     ??___aomod:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?_strlen:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?_ADC_GetConversion:	
  2504                           ; 2 bytes @ 0x0
  2505                           
  2506  0070                     ?_fputc:	
  2507                           ; 2 bytes @ 0x0
  2508                           
  2509  0070                     SPI1_Exchange8bit@data:	
  2510                           ; 2 bytes @ 0x0
  2511                           
  2512  0070                     putch@c:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     fputc@c:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     strlen@s:	
  2519                           ; 2 bytes @ 0x0
  2520                           
  2521                           
  2522                           ; 2 bytes @ 0x0
  2523  0070                     	ds	1
  2524  0071                     ??_SPI_Write:	
  2525  0071                     ___aodiv@counter:	
  2526                           ; 1 bytes @ 0x1
  2527                           
  2528  0071                     ___aomod@counter:	
  2529                           ; 1 bytes @ 0x1
  2530                           
  2531                           
  2532                           ; 1 bytes @ 0x1
  2533  0071                     	ds	1
  2534  0072                     ??_strlen:	
  2535  0072                     ??_ADC_GetConversion:	
  2536                           ; 1 bytes @ 0x2
  2537                           
  2538  0072                     SPI_Write@incoming:	
  2539                           ; 1 bytes @ 0x2
  2540                           
  2541  0072                     ___aodiv@sign:	
  2542                           ; 1 bytes @ 0x2
  2543                           
  2544  0072                     ___aomod@sign:	
  2545                           ; 1 bytes @ 0x2
  2546                           
  2547  0072                     fputc@fp:	
  2548                           ; 1 bytes @ 0x2
  2549                           
  2550                           
  2551                           ; 1 bytes @ 0x2
  2552  0072                     	ds	1
  2553  0073                     ??_fputc:	
  2554  0073                     ?_abs:	
  2555                           ; 1 bytes @ 0x3
  2556                           
  2557  0073                     ADC_GetConversion@channel:	
  2558                           ; 2 bytes @ 0x3
  2559                           
  2560  0073                     abs@a:	
  2561                           ; 1 bytes @ 0x3
  2562                           
  2563  0073                     strlen@a:	
  2564                           ; 2 bytes @ 0x3
  2565                           
  2566  0073                     ___aodiv@quotient:	
  2567                           ; 2 bytes @ 0x3
  2568                           
  2569                           
  2570                           ; 8 bytes @ 0x3
  2571  0073                     	ds	2
  2572  0075                     ??_abs:	
  2573  0075                     ?_Display_Name:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     Display_Name@string1:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579                           
  2580                           ; 2 bytes @ 0x5
  2581  0075                     	ds	2
  2582  0077                     ??_Display_Name:	
  2583                           
  2584                           ; 1 bytes @ 0x7
  2585  0077                     	ds	1
  2586  0078                     ?_fputs:	
  2587  0078                     fputs@fp:	
  2588                           ; 2 bytes @ 0x8
  2589                           
  2590  0078                     Display_Name@length:	
  2591                           ; 1 bytes @ 0x8
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x8
  2595  0078                     	ds	1
  2596  0079                     ??_fputs:	
  2597                           
  2598                           ; 1 bytes @ 0x9
  2599  0079                     	ds	1
  2600  007A                     Display_Name@i:	
  2601                           
  2602                           ; 2 bytes @ 0xA
  2603  007A                     	ds	2
  2604  007C                     ??_pad:	
  2605                           
  2606                           ; 1 bytes @ 0xC
  2607  007C                     	ds	1
  2608  007D                     ??_sprintf:	
  2609                           
  2610                           ; 1 bytes @ 0xD
  2611  007D                     	ds	1
  2612  007E                     ??_main:	
  2613                           
  2614                           	psect	cstackBANK0
  2615  0020                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0xE
  2617                           
  2618  0020                     ?___aodiv:	
  2619  0020                     ?___aomod:	
  2620                           ; 8 bytes @ 0x0
  2621                           
  2622  0020                     fputs@c:	
  2623                           ; 8 bytes @ 0x0
  2624                           
  2625  0020                     ___aodiv@divisor:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0020                     ___aomod@divisor:	
  2629                           ; 8 bytes @ 0x0
  2630                           
  2631                           
  2632                           ; 8 bytes @ 0x0
  2633  0020                     	ds	1
  2634  0021                     fputs@i:	
  2635                           
  2636                           ; 2 bytes @ 0x1
  2637  0021                     	ds	2
  2638  0023                     fputs@s:	
  2639                           
  2640                           ; 1 bytes @ 0x3
  2641  0023                     	ds	1
  2642  0024                     ?_pad:	
  2643  0024                     pad@buf:	
  2644                           ; 2 bytes @ 0x4
  2645                           
  2646                           
  2647                           ; 1 bytes @ 0x4
  2648  0024                     	ds	1
  2649  0025                     pad@p:	
  2650                           
  2651                           ; 2 bytes @ 0x5
  2652  0025                     	ds	2
  2653  0027                     pad@i:	
  2654                           
  2655                           ; 2 bytes @ 0x7
  2656  0027                     	ds	1
  2657  0028                     ___aodiv@dividend:	
  2658  0028                     ___aomod@dividend:	
  2659                           ; 8 bytes @ 0x8
  2660                           
  2661                           
  2662                           ; 8 bytes @ 0x8
  2663  0028                     	ds	1
  2664  0029                     pad@w:	
  2665                           
  2666                           ; 2 bytes @ 0x9
  2667  0029                     	ds	2
  2668  002B                     pad@fp:	
  2669                           
  2670                           ; 1 bytes @ 0xB
  2671  002B                     	ds	5
  2672  0030                     ?_dtoa:	
  2673  0030                     dtoa@d:	
  2674                           ; 2 bytes @ 0x10
  2675                           
  2676                           
  2677                           ; 8 bytes @ 0x10
  2678  0030                     	ds	8
  2679  0038                     ??_dtoa:	
  2680                           
  2681                           ; 1 bytes @ 0x18
  2682  0038                     	ds	3
  2683  003B                     _dtoa$595:	
  2684                           
  2685                           ; 2 bytes @ 0x1B
  2686  003B                     	ds	2
  2687  003D                     dtoa@fp:	
  2688                           
  2689                           ; 1 bytes @ 0x1D
  2690  003D                     	ds	1
  2691  003E                     dtoa@p:	
  2692                           
  2693                           ; 2 bytes @ 0x1E
  2694  003E                     	ds	2
  2695  0040                     dtoa@w:	
  2696                           
  2697                           ; 2 bytes @ 0x20
  2698  0040                     	ds	2
  2699  0042                     dtoa@s:	
  2700                           
  2701                           ; 2 bytes @ 0x22
  2702  0042                     	ds	2
  2703  0044                     dtoa@n:	
  2704                           
  2705                           ; 8 bytes @ 0x24
  2706  0044                     	ds	8
  2707  004C                     dtoa@i:	
  2708                           
  2709                           ; 2 bytes @ 0x2C
  2710  004C                     	ds	2
  2711  004E                     ?_vfpfcnvrt:	
  2712  004E                     vfpfcnvrt@fmt:	
  2713                           ; 2 bytes @ 0x2E
  2714                           
  2715                           
  2716                           ; 1 bytes @ 0x2E
  2717  004E                     	ds	1
  2718  004F                     vfpfcnvrt@ap:	
  2719                           
  2720                           ; 1 bytes @ 0x2F
  2721  004F                     	ds	1
  2722  0050                     ??_vfpfcnvrt:	
  2723                           
  2724                           ; 1 bytes @ 0x30
  2725  0050                     	ds	5
  2726  0055                     vfpfcnvrt@ll:	
  2727                           
  2728                           ; 8 bytes @ 0x35
  2729  0055                     	ds	8
  2730  005D                     vfpfcnvrt@fp:	
  2731                           
  2732                           ; 1 bytes @ 0x3D
  2733  005D                     	ds	1
  2734  005E                     ?_vfprintf:	
  2735  005E                     vfprintf@fmt:	
  2736                           ; 2 bytes @ 0x3E
  2737                           
  2738                           
  2739                           ; 2 bytes @ 0x3E
  2740  005E                     	ds	2
  2741  0060                     vfprintf@ap:	
  2742                           
  2743                           ; 1 bytes @ 0x40
  2744  0060                     	ds	1
  2745  0061                     ??_vfprintf:	
  2746                           
  2747                           ; 1 bytes @ 0x41
  2748  0061                     	ds	2
  2749  0063                     vfprintf@fp:	
  2750                           
  2751                           ; 1 bytes @ 0x43
  2752  0063                     	ds	1
  2753  0064                     vfprintf@cfmt:	
  2754                           
  2755                           ; 2 bytes @ 0x44
  2756  0064                     	ds	2
  2757  0066                     ?_sprintf:	
  2758  0066                     sprintf@fmt:	
  2759                           ; 2 bytes @ 0x46
  2760                           
  2761                           
  2762                           ; 2 bytes @ 0x46
  2763  0066                     	ds	4
  2764  006A                     ??_Get_ADC:	
  2765                           
  2766                           ; 1 bytes @ 0x4A
  2767  006A                     	ds	2
  2768                           
  2769                           	psect	maintext
  2770  00FF                     __pmaintext:	
  2771 ;;
  2772 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2773 ;;
  2774 ;; *************** function _main *****************
  2775 ;; Defined at:
  2776 ;;		line 73 in file "main.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : B1F/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels required when called:    9
  2796 ;; This function calls:
  2797 ;;		_Get_ADC
  2798 ;;		_SYSTEM_Initialize
  2799 ;; This function is called by:
  2800 ;;		Startup code after reset
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _main
  2806  00FF                     _main:	
  2807                           
  2808                           ;main.c: 76:     SYSTEM_Initialize();
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2812  00FF  3181  213C  3180   	fcall	_SYSTEM_Initialize
  2813  0102                     l1993:	
  2814                           
  2815                           ;main.c: 94:     {;main.c: 95:         Get_ADC();
  2816  0102  3185  25AE  3180   	fcall	_Get_ADC
  2817  0105  2902               	goto	l1993
  2818  0106                     __end_of_main:	
  2819                           
  2820                           	psect	text1
  2821  013C                     __ptext1:	
  2822 ;; *************** function _SYSTEM_Initialize *****************
  2823 ;; Defined at:
  2824 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, pclath, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    1
  2845 ;; This function calls:
  2846 ;;		_ADC_Initialize
  2847 ;;		_OSCILLATOR_Initialize
  2848 ;;		_PIN_MANAGER_Initialize
  2849 ;;		_PMD_Initialize
  2850 ;;		_SPI1_Initialize
  2851 ;;		_WDT_Initialize
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _SYSTEM_Initialize
  2859  013C                     _SYSTEM_Initialize:	
  2860                           
  2861                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2865  013C  3181  2116  3181   	fcall	_PMD_Initialize
  2866                           
  2867                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2868  013F  3181  21DC  3181   	fcall	_PIN_MANAGER_Initialize
  2869                           
  2870                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2871  0142  3181  210E  3181   	fcall	_OSCILLATOR_Initialize
  2872                           
  2873                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2874  0145  3180  20EE  3181   	fcall	_WDT_Initialize
  2875                           
  2876                           ;mcc_generated_files/mcc.c: 57:     SPI1_Initialize();
  2877  0148  3180  20F8  3181   	fcall	_SPI1_Initialize
  2878                           
  2879                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2880  014B  3181  2106         	fcall	_ADC_Initialize
  2881  014D  0008               	return
  2882  014E                     __end_of_SYSTEM_Initialize:	
  2883                           
  2884                           	psect	text2
  2885  00EE                     __ptext2:	
  2886 ;; *************** function _WDT_Initialize *****************
  2887 ;; Defined at:
  2888 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_SYSTEM_Initialize
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _WDT_Initialize
  2917  00EE                     _WDT_Initialize:	
  2918                           
  2919                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x18;
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _WDT_Initialize: [wreg]
  2923  00EE  3018               	movlw	24
  2924  00EF  0021               	movlb	1	; select bank1
  2925  00F0  0097               	movwf	23	;volatile
  2926  00F1  0008               	return
  2927  00F2                     __end_of_WDT_Initialize:	
  2928                           
  2929                           	psect	text3
  2930  00F8                     __ptext3:	
  2931 ;; *************** function _SPI1_Initialize *****************
  2932 ;; Defined at:
  2933 ;;		line 65 in file "mcc_generated_files/spi1.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_SYSTEM_Initialize
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _SPI1_Initialize
  2962  00F8                     _SPI1_Initialize:	
  2963                           
  2964                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x80;
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  2968  00F8  3080               	movlw	128
  2969  00F9  0024               	movlb	4	; select bank4
  2970  00FA  0094               	movwf	20	;volatile
  2971                           
  2972                           ;mcc_generated_files/spi1.c: 73:     SSP1CON1 = 0x31;
  2973  00FB  3031               	movlw	49
  2974  00FC  0095               	movwf	21	;volatile
  2975                           
  2976                           ;mcc_generated_files/spi1.c: 76:     SSP1ADD = 0x00;
  2977  00FD  0192               	clrf	18	;volatile
  2978  00FE  0008               	return
  2979  00FF                     __end_of_SPI1_Initialize:	
  2980                           
  2981                           	psect	text4
  2982  0116                     __ptext4:	
  2983 ;; *************** function _PMD_Initialize *****************
  2984 ;; Defined at:
  2985 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_SYSTEM_Initialize
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _PMD_Initialize
  3014  0116                     _PMD_Initialize:	
  3015                           
  3016                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _PMD_Initialize: [status,2]
  3020  0116  0032               	movlb	18	; select bank18
  3021  0117  0191               	clrf	17	;volatile
  3022                           
  3023                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  3024  0118  0192               	clrf	18	;volatile
  3025                           
  3026                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  3027  0119  0193               	clrf	19	;volatile
  3028                           
  3029                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  3030  011A  0194               	clrf	20	;volatile
  3031                           
  3032                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  3033  011B  0195               	clrf	21	;volatile
  3034                           
  3035                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  3036  011C  0196               	clrf	22	;volatile
  3037  011D  0008               	return
  3038  011E                     __end_of_PMD_Initialize:	
  3039                           
  3040                           	psect	text5
  3041  01DC                     __ptext5:	
  3042 ;; *************** function _PIN_MANAGER_Initialize *****************
  3043 ;; Defined at:
  3044 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;Total ram usage:        0 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_SYSTEM_Initialize
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _PIN_MANAGER_Initialize
  3073  01DC                     _PIN_MANAGER_Initialize:	
  3074                           
  3075                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3079  01DC  0022               	movlb	2	; select bank2
  3080  01DD  018C               	clrf	12	;volatile
  3081                           
  3082                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3083  01DE  018D               	clrf	13	;volatile
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3086  01DF  018E               	clrf	14	;volatile
  3087                           
  3088                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x11;
  3089  01E0  3011               	movlw	17
  3090  01E1  0021               	movlb	1	; select bank1
  3091  01E2  008C               	movwf	12	;volatile
  3092                           
  3093                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
  3094  01E3  30B0               	movlw	176
  3095  01E4  008D               	movwf	13	;volatile
  3096                           
  3097                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDA;
  3098  01E5  30DA               	movlw	218
  3099  01E6  008E               	movwf	14	;volatile
  3100                           
  3101                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  3102  01E7  30FF               	movlw	255
  3103  01E8  0023               	movlb	3	; select bank3
  3104  01E9  008E               	movwf	14	;volatile
  3105                           
  3106                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  3107  01EA  30A0               	movlw	160
  3108  01EB  008D               	movwf	13	;volatile
  3109                           
  3110                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  3111  01EC  3037               	movlw	55
  3112  01ED  008C               	movwf	12	;volatile
  3113                           
  3114                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3115  01EE  0024               	movlb	4	; select bank4
  3116  01EF  018D               	clrf	13	;volatile
  3117                           
  3118                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3119  01F0  018C               	clrf	12	;volatile
  3120                           
  3121                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3122  01F1  018E               	clrf	14	;volatile
  3123                           
  3124                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3125  01F2  0025               	movlb	5	; select bank5
  3126  01F3  018C               	clrf	12	;volatile
  3127                           
  3128                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3129  01F4  018D               	clrf	13	;volatile
  3130                           
  3131                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3132  01F5  018E               	clrf	14	;volatile
  3133                           
  3134                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  3135  01F6  3037               	movlw	55
  3136  01F7  0026               	movlb	6	; select bank6
  3137  01F8  008C               	movwf	12	;volatile
  3138                           
  3139                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  3140  01F9  30F0               	movlw	240
  3141  01FA  008D               	movwf	13	;volatile
  3142                           
  3143                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  3144  01FB  30FF               	movlw	255
  3145  01FC  008E               	movwf	14	;volatile
  3146                           
  3147                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x0E;
  3148  01FD  300E               	movlw	14
  3149  01FE  003C               	movlb	28	; select bank28
  3150  01FF  00A0               	movwf	32	;volatile
  3151                           
  3152                           ;mcc_generated_files/pin_manager.c: 107:     RB6PPS = 0x18;
  3153  0200  3018               	movlw	24
  3154  0201  003D               	movlb	29	; select bank29
  3155  0202  009E               	movwf	30	;volatile
  3156                           
  3157                           ;mcc_generated_files/pin_manager.c: 108:     RC2PPS = 0x19;
  3158  0203  3019               	movlw	25
  3159  0204  00A2               	movwf	34	;volatile
  3160                           
  3161                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x0C;
  3162  0205  300C               	movlw	12
  3163  0206  003C               	movlb	28	; select bank28
  3164  0207  00A1               	movwf	33	;volatile
  3165  0208  0008               	return
  3166  0209                     __end_of_PIN_MANAGER_Initialize:	
  3167                           
  3168                           	psect	text6
  3169  010E                     __ptext6:	
  3170 ;; *************** function _OSCILLATOR_Initialize *****************
  3171 ;; Defined at:
  3172 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_SYSTEM_Initialize
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _OSCILLATOR_Initialize
  3201  010E                     _OSCILLATOR_Initialize:	
  3202                           
  3203                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x61;
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3207  010E  3061               	movlw	97
  3208  010F  0032               	movlb	18	; select bank18
  3209  0110  0099               	movwf	25	;volatile
  3210                           
  3211                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  3212  0111  019B               	clrf	27	;volatile
  3213                           
  3214                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  3215  0112  019D               	clrf	29	;volatile
  3216                           
  3217                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x00;
  3218  0113  019F               	clrf	31	;volatile
  3219                           
  3220                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3221  0114  019E               	clrf	30	;volatile
  3222  0115  0008               	return
  3223  0116                     __end_of_OSCILLATOR_Initialize:	
  3224                           
  3225                           	psect	text7
  3226  0106                     __ptext7:	
  3227 ;; *************** function _ADC_Initialize *****************
  3228 ;; Defined at:
  3229 ;;		line 65 in file "mcc_generated_files/adc.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_SYSTEM_Initialize
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _ADC_Initialize
  3258  0106                     _ADC_Initialize:	
  3259                           
  3260                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3264  0106  3001               	movlw	1
  3265  0107  0021               	movlb	1	; select bank1
  3266  0108  009D               	movwf	29	;volatile
  3267                           
  3268                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  3269  0109  019E               	clrf	30	;volatile
  3270                           
  3271                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  3272  010A  019F               	clrf	31	;volatile
  3273                           
  3274                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  3275  010B  019B               	clrf	27	;volatile
  3276                           
  3277                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  3278  010C  019C               	clrf	28	;volatile
  3279  010D  0008               	return
  3280  010E                     __end_of_ADC_Initialize:	
  3281                           
  3282                           	psect	text8
  3283  05AE                     __ptext8:	
  3284 ;; *************** function _Get_ADC *****************
  3285 ;; Defined at:
  3286 ;;		line 162 in file "main.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  string1        12    9[BANK1 ] unsigned char [12]
  3291 ;;  val             2   21[BANK1 ] int 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;Total ram usage:       16 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    8
  3308 ;; This function calls:
  3309 ;;		_ADC_GetConversion
  3310 ;;		_Display_Name
  3311 ;;		_sprintf
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _Get_ADC
  3319  05AE                     _Get_ADC:	
  3320                           
  3321                           ;main.c: 164:     adcResult = ADC_GetConversion(BTN) >> 8;
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _Get_ADC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3325  05AE  3014               	movlw	20
  3326  05AF  3181  217C  3185   	fcall	_ADC_GetConversion
  3327  05B2  0871               	movf	?_ADC_GetConversion+1,w
  3328  05B3  0020               	movlb	0	; select bank0
  3329  05B4  00EA               	movwf	??_Get_ADC
  3330  05B5  086A               	movf	??_Get_ADC,w
  3331  05B6  0021               	movlb	1	; select bank1
  3332  05B7  00DF               	movwf	_adcResult^(0+128)
  3333                           
  3334                           ;main.c: 165:     int val = adcResult;
  3335  05B8  085F               	movf	_adcResult^(0+128),w
  3336  05B9  0020               	movlb	0	; select bank0
  3337  05BA  00EA               	movwf	??_Get_ADC
  3338  05BB  01EB               	clrf	??_Get_ADC+1
  3339  05BC  086A               	movf	??_Get_ADC,w
  3340  05BD  0021               	movlb	1	; select bank1
  3341  05BE  00DD               	movwf	Get_ADC@val^(0+128)
  3342  05BF  0020               	movlb	0	; select bank0
  3343  05C0  086B               	movf	??_Get_ADC+1,w
  3344  05C1  0021               	movlb	1	; select bank1
  3345  05C2  00DE               	movwf	(Get_ADC@val+1)^(0+128)
  3346                           
  3347                           ;main.c: 166:     char string1[12];;main.c: 167:     sprintf(string1, "%d", val);
  3348  05C3  3034               	movlw	low (STR_1| (0+32768))
  3349  05C4  0020               	movlb	0	; select bank0
  3350  05C5  00E6               	movwf	sprintf@fmt
  3351  05C6  3088               	movlw	high (STR_1| (0+32768))
  3352  05C7  00E7               	movwf	sprintf@fmt+1
  3353  05C8  0021               	movlb	1	; select bank1
  3354  05C9  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3355  05CA  0020               	movlb	0	; select bank0
  3356  05CB  00E9               	movwf	?_sprintf+3
  3357  05CC  0021               	movlb	1	; select bank1
  3358  05CD  085D               	movf	Get_ADC@val^(0+128),w
  3359  05CE  0020               	movlb	0	; select bank0
  3360  05CF  00E8               	movwf	?_sprintf+2
  3361  05D0  30D1               	movlw	(low (Get_ADC@string1| 0))& (0+255)
  3362  05D1  3181  2194  3185   	fcall	_sprintf
  3363                           
  3364                           ;main.c: 168:     Display_Name(string1);
  3365  05D4  30D1               	movlw	low Get_ADC@string1
  3366  05D5  00F5               	movwf	Display_Name@string1
  3367  05D6  3000               	movlw	high Get_ADC@string1
  3368  05D7  00F6               	movwf	Display_Name@string1+1
  3369  05D8  3182  2238  3185   	fcall	_Display_Name
  3370                           
  3371                           ;main.c: 169:     if(val >= 175 && val <= 180) {
  3372  05DB  0021               	movlb	1	; select bank1
  3373  05DC  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3374  05DD  3A80               	xorlw	128
  3375  05DE  0020               	movlb	0	; select bank0
  3376  05DF  00EA               	movwf	??_Get_ADC
  3377  05E0  3080               	movlw	128
  3378  05E1  026A               	subwf	??_Get_ADC,w
  3379  05E2  1D03               	skipz
  3380  05E3  2DE7               	goto	u1385
  3381  05E4  30AF               	movlw	175
  3382  05E5  0021               	movlb	1	; select bank1
  3383  05E6  025D               	subwf	Get_ADC@val^(0+128),w
  3384  05E7                     u1385:	
  3385  05E7  1C03               	skipc
  3386  05E8  2DFC               	goto	l1889
  3387  05E9  0021               	movlb	1	; select bank1
  3388  05EA  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3389  05EB  3A80               	xorlw	128
  3390  05EC  0020               	movlb	0	; select bank0
  3391  05ED  00EA               	movwf	??_Get_ADC
  3392  05EE  3080               	movlw	128
  3393  05EF  026A               	subwf	??_Get_ADC,w
  3394  05F0  1D03               	skipz
  3395  05F1  2DF5               	goto	u1395
  3396  05F2  30B5               	movlw	181
  3397  05F3  0021               	movlb	1	; select bank1
  3398  05F4  025D               	subwf	Get_ADC@val^(0+128),w
  3399  05F5                     u1395:	
  3400  05F5  1803               	skipnc
  3401  05F6  2DFC               	goto	l1889
  3402  05F7  0022               	movlb	2	; select bank2
  3403  05F8  018C               	clrf	12	;volatile
  3404  05F9  128E               	bcf	14,5	;volatile
  3405  05FA  168C               	bsf	12,5	;volatile
  3406  05FB  0008               	return
  3407  05FC                     l1889:	
  3408  05FC  0021               	movlb	1	; select bank1
  3409  05FD  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3410  05FE  3A80               	xorlw	128
  3411  05FF  0020               	movlb	0	; select bank0
  3412  0600  00EA               	movwf	??_Get_ADC
  3413  0601  3080               	movlw	128
  3414  0602  026A               	subwf	??_Get_ADC,w
  3415  0603  1D03               	skipz
  3416  0604  2E08               	goto	u1405
  3417  0605  30B5               	movlw	181
  3418  0606  0021               	movlb	1	; select bank1
  3419  0607  025D               	subwf	Get_ADC@val^(0+128),w
  3420  0608                     u1405:	
  3421  0608  1C03               	skipc
  3422  0609  2E1D               	goto	l1899
  3423  060A  0021               	movlb	1	; select bank1
  3424  060B  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3425  060C  3A80               	xorlw	128
  3426  060D  0020               	movlb	0	; select bank0
  3427  060E  00EA               	movwf	??_Get_ADC
  3428  060F  3080               	movlw	128
  3429  0610  026A               	subwf	??_Get_ADC,w
  3430  0611  1D03               	skipz
  3431  0612  2E16               	goto	u1415
  3432  0613  30BA               	movlw	186
  3433  0614  0021               	movlb	1	; select bank1
  3434  0615  025D               	subwf	Get_ADC@val^(0+128),w
  3435  0616                     u1415:	
  3436  0616  1803               	skipnc
  3437  0617  2E1D               	goto	l1899
  3438  0618  0022               	movlb	2	; select bank2
  3439  0619  018C               	clrf	12	;volatile
  3440  061A  128E               	bcf	14,5	;volatile
  3441  061B  148C               	bsf	12,1	;volatile
  3442  061C  0008               	return
  3443  061D                     l1899:	
  3444  061D  0021               	movlb	1	; select bank1
  3445  061E  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3446  061F  3A80               	xorlw	128
  3447  0620  0020               	movlb	0	; select bank0
  3448  0621  00EA               	movwf	??_Get_ADC
  3449  0622  3080               	movlw	128
  3450  0623  026A               	subwf	??_Get_ADC,w
  3451  0624  1D03               	skipz
  3452  0625  2E29               	goto	u1425
  3453  0626  30BA               	movlw	186
  3454  0627  0021               	movlb	1	; select bank1
  3455  0628  025D               	subwf	Get_ADC@val^(0+128),w
  3456  0629                     u1425:	
  3457  0629  1C03               	skipc
  3458  062A  2E3F               	goto	l1911
  3459  062B  0021               	movlb	1	; select bank1
  3460  062C  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3461  062D  3A80               	xorlw	128
  3462  062E  0020               	movlb	0	; select bank0
  3463  062F  00EA               	movwf	??_Get_ADC
  3464  0630  3080               	movlw	128
  3465  0631  026A               	subwf	??_Get_ADC,w
  3466  0632  1D03               	skipz
  3467  0633  2E37               	goto	u1435
  3468  0634  30C4               	movlw	196
  3469  0635  0021               	movlb	1	; select bank1
  3470  0636  025D               	subwf	Get_ADC@val^(0+128),w
  3471  0637                     u1435:	
  3472  0637  1803               	skipnc
  3473  0638  2E3F               	goto	l1911
  3474  0639  0022               	movlb	2	; select bank2
  3475  063A  018C               	clrf	12	;volatile
  3476  063B  128E               	bcf	14,5	;volatile
  3477  063C  168C               	bsf	12,5	;volatile
  3478  063D  148C               	bsf	12,1	;volatile
  3479  063E  0008               	return
  3480  063F                     l1911:	
  3481  063F  0021               	movlb	1	; select bank1
  3482  0640  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3483  0641  3A80               	xorlw	128
  3484  0642  0020               	movlb	0	; select bank0
  3485  0643  00EA               	movwf	??_Get_ADC
  3486  0644  3080               	movlw	128
  3487  0645  026A               	subwf	??_Get_ADC,w
  3488  0646  1D03               	skipz
  3489  0647  2E4B               	goto	u1445
  3490  0648  30C4               	movlw	196
  3491  0649  0021               	movlb	1	; select bank1
  3492  064A  025D               	subwf	Get_ADC@val^(0+128),w
  3493  064B                     u1445:	
  3494  064B  1C03               	skipc
  3495  064C  2E60               	goto	l1921
  3496  064D  0021               	movlb	1	; select bank1
  3497  064E  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3498  064F  3A80               	xorlw	128
  3499  0650  0020               	movlb	0	; select bank0
  3500  0651  00EA               	movwf	??_Get_ADC
  3501  0652  3080               	movlw	128
  3502  0653  026A               	subwf	??_Get_ADC,w
  3503  0654  1D03               	skipz
  3504  0655  2E59               	goto	u1455
  3505  0656  30C9               	movlw	201
  3506  0657  0021               	movlb	1	; select bank1
  3507  0658  025D               	subwf	Get_ADC@val^(0+128),w
  3508  0659                     u1455:	
  3509  0659  1803               	skipnc
  3510  065A  2E60               	goto	l1921
  3511  065B  0022               	movlb	2	; select bank2
  3512  065C  018C               	clrf	12	;volatile
  3513  065D  128E               	bcf	14,5	;volatile
  3514  065E  150C               	bsf	12,2	;volatile
  3515  065F  0008               	return
  3516  0660                     l1921:	
  3517  0660  0021               	movlb	1	; select bank1
  3518  0661  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3519  0662  3A80               	xorlw	128
  3520  0663  0020               	movlb	0	; select bank0
  3521  0664  00EA               	movwf	??_Get_ADC
  3522  0665  3080               	movlw	128
  3523  0666  026A               	subwf	??_Get_ADC,w
  3524  0667  1D03               	skipz
  3525  0668  2E6C               	goto	u1465
  3526  0669  30C9               	movlw	201
  3527  066A  0021               	movlb	1	; select bank1
  3528  066B  025D               	subwf	Get_ADC@val^(0+128),w
  3529  066C                     u1465:	
  3530  066C  1C03               	skipc
  3531  066D  2E82               	goto	l1933
  3532  066E  0021               	movlb	1	; select bank1
  3533  066F  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3534  0670  3A80               	xorlw	128
  3535  0671  0020               	movlb	0	; select bank0
  3536  0672  00EA               	movwf	??_Get_ADC
  3537  0673  3080               	movlw	128
  3538  0674  026A               	subwf	??_Get_ADC,w
  3539  0675  1D03               	skipz
  3540  0676  2E7A               	goto	u1475
  3541  0677  30CE               	movlw	206
  3542  0678  0021               	movlb	1	; select bank1
  3543  0679  025D               	subwf	Get_ADC@val^(0+128),w
  3544  067A                     u1475:	
  3545  067A  1803               	skipnc
  3546  067B  2E82               	goto	l1933
  3547  067C  0022               	movlb	2	; select bank2
  3548  067D  018C               	clrf	12	;volatile
  3549  067E  128E               	bcf	14,5	;volatile
  3550  067F  150C               	bsf	12,2	;volatile
  3551  0680  168C               	bsf	12,5	;volatile
  3552  0681  0008               	return
  3553  0682                     l1933:	
  3554  0682  0021               	movlb	1	; select bank1
  3555  0683  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3556  0684  3A80               	xorlw	128
  3557  0685  0020               	movlb	0	; select bank0
  3558  0686  00EA               	movwf	??_Get_ADC
  3559  0687  3080               	movlw	128
  3560  0688  026A               	subwf	??_Get_ADC,w
  3561  0689  1D03               	skipz
  3562  068A  2E8E               	goto	u1485
  3563  068B  30D9               	movlw	217
  3564  068C  0021               	movlb	1	; select bank1
  3565  068D  025D               	subwf	Get_ADC@val^(0+128),w
  3566  068E                     u1485:	
  3567  068E  1C03               	skipc
  3568  068F  0008               	return
  3569  0690  0021               	movlb	1	; select bank1
  3570  0691  085E               	movf	(Get_ADC@val+1)^(0+128),w
  3571  0692  3A80               	xorlw	128
  3572  0693  0020               	movlb	0	; select bank0
  3573  0694  00EA               	movwf	??_Get_ADC
  3574  0695  3080               	movlw	128
  3575  0696  026A               	subwf	??_Get_ADC,w
  3576  0697  1D03               	skipz
  3577  0698  2E9C               	goto	u1495
  3578  0699  30DD               	movlw	221
  3579  069A  0021               	movlb	1	; select bank1
  3580  069B  025D               	subwf	Get_ADC@val^(0+128),w
  3581  069C                     u1495:	
  3582  069C  1803               	skipnc
  3583  069D  0008               	return
  3584  069E  0022               	movlb	2	; select bank2
  3585  069F  018C               	clrf	12	;volatile
  3586  06A0  128E               	bcf	14,5	;volatile
  3587  06A1  150C               	bsf	12,2	;volatile
  3588  06A2  148C               	bsf	12,1	;volatile
  3589  06A3  0008               	return
  3590  06A4                     __end_of_Get_ADC:	
  3591                           
  3592                           	psect	text9
  3593  0194                     __ptext9:	
  3594 ;; *************** function _sprintf *****************
  3595 ;; Defined at:
  3596 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  s               1    wreg     PTR unsigned char 
  3599 ;;		 -> Get_ADC@string1(12), checkButton1@string1(12), 
  3600 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3601 ;;		 -> STR_6(3), STR_1(3), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3604 ;;		 -> Get_ADC@string1(12), checkButton1@string1(12), 
  3605 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3606 ;;  ret             2    0        int 
  3607 ;;  ap              1    2[BANK1 ] PTR void [1]
  3608 ;;		 -> ?_sprintf(2), 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2   70[BANK0 ] int 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3618 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Totals:         1       4       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;Total ram usage:       14 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    7
  3625 ;; This function calls:
  3626 ;;		_vfprintf
  3627 ;; This function is called by:
  3628 ;;		_Get_ADC
  3629 ;;		_checkButton1
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _sprintf
  3635  0194                     _sprintf:	
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3639                           ;sprintf@s stored from wreg
  3640  0194  0021               	movlb	1	; select bank1
  3641  0195  00CB               	movwf	sprintf@s^(0+128)
  3642  0196  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3643  0197  00FD               	movwf	??_sprintf
  3644  0198  087D               	movf	??_sprintf,w
  3645  0199  00CA               	movwf	sprintf@ap^(0+128)
  3646  019A  084B               	movf	sprintf@s^(0+128),w
  3647  019B  00FD               	movwf	??_sprintf
  3648  019C  087D               	movf	??_sprintf,w
  3649  019D  00CC               	movwf	sprintf@f^(0+128)
  3650  019E  01CD               	clrf	(sprintf@f^(0+128)+1)
  3651  019F  01CE               	clrf	((sprintf@f+1)^(0+128)+1)
  3652  01A0  01CF               	clrf	(sprintf@f^(0+128)+3)
  3653  01A1  01D0               	clrf	((sprintf@f+1)^(0+128)+3)
  3654  01A2  0020               	movlb	0	; select bank0
  3655  01A3  0867               	movf	sprintf@fmt+1,w
  3656  01A4  00DF               	movwf	vfprintf@fmt+1
  3657  01A5  0866               	movf	sprintf@fmt,w
  3658  01A6  00DE               	movwf	vfprintf@fmt
  3659  01A7  30CA               	movlw	(low (sprintf@ap| 0))& (0+255)
  3660  01A8  00FD               	movwf	??_sprintf
  3661  01A9  087D               	movf	??_sprintf,w
  3662  01AA  00E0               	movwf	vfprintf@ap
  3663  01AB  30CC               	movlw	(low (sprintf@f| 0))& (0+255)
  3664  01AC  3182  2209         	fcall	_vfprintf
  3665  01AE  0021               	movlb	1	; select bank1
  3666  01AF  084D               	movf	(sprintf@f^(0+128)+1),w
  3667  01B0  074B               	addwf	sprintf@s^(0+128),w
  3668  01B1  00FD               	movwf	??_sprintf
  3669  01B2  087D               	movf	??_sprintf,w
  3670  01B3  0086               	movwf	6
  3671  01B4  0187               	clrf	7
  3672  01B5  0181               	clrf	1
  3673  01B6  0008               	return
  3674  01B7                     __end_of_sprintf:	
  3675                           
  3676                           	psect	text10
  3677  0209                     __ptext10:	
  3678 ;; *************** function _vfprintf *****************
  3679 ;; Defined at:
  3680 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  fp              1    wreg     PTR struct _IO_FILE
  3683 ;;		 -> sprintf@f(5), 
  3684 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3685 ;;		 -> STR_6(3), STR_1(3), 
  3686 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3687 ;;		 -> sprintf@ap(1), 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3690 ;;		 -> sprintf@f(5), 
  3691 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3692 ;;		 -> STR_6(3), STR_1(3), 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   62[BANK0 ] int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3702 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;Total ram usage:        8 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    6
  3709 ;; This function calls:
  3710 ;;		_vfpfcnvrt
  3711 ;; This function is called by:
  3712 ;;		_sprintf
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _vfprintf
  3718  0209                     _vfprintf:	
  3719                           
  3720                           ;incstack = 0
  3721                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3722                           ;vfprintf@fp stored from wreg
  3723  0209  0020               	movlb	0	; select bank0
  3724  020A  00E3               	movwf	vfprintf@fp
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3727  020B  085F               	movf	vfprintf@fmt+1,w
  3728  020C  00E5               	movwf	vfprintf@cfmt+1
  3729  020D  085E               	movf	vfprintf@fmt,w
  3730  020E  00E4               	movwf	vfprintf@cfmt
  3731                           
  3732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3733  020F  0021               	movlb	1	; select bank1
  3734  0210  01A0               	clrf	_nout^(0+128)
  3735  0211  01A1               	clrf	(_nout+1)^(0+128)
  3736  0212                     l1823:	
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3738                           
  3739                           
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3741  0212  0020               	movlb	0	; select bank0
  3742  0213  0864               	movf	vfprintf@cfmt,w
  3743  0214  0084               	movwf	4
  3744  0215  0865               	movf	vfprintf@cfmt+1,w
  3745  0216  0085               	movwf	5
  3746  0217  0012               	moviw fsr0++
  3747  0218  1903               	btfsc	3,2
  3748  0219  2A2F               	goto	l1825
  3749                           
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3751  021A  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3752  021B  00E1               	movwf	??_vfprintf
  3753  021C  0861               	movf	??_vfprintf,w
  3754  021D  00CE               	movwf	vfpfcnvrt@fmt
  3755  021E  0860               	movf	vfprintf@ap,w
  3756  021F  00E2               	movwf	??_vfprintf+1
  3757  0220  0862               	movf	??_vfprintf+1,w
  3758  0221  00CF               	movwf	vfpfcnvrt@ap
  3759  0222  0863               	movf	vfprintf@fp,w
  3760  0223  3183  230D  3182   	fcall	_vfpfcnvrt
  3761  0226  0020               	movlb	0	; select bank0
  3762  0227  084E               	movf	?_vfpfcnvrt,w
  3763  0228  0021               	movlb	1	; select bank1
  3764  0229  07A0               	addwf	_nout^(0+128),f
  3765  022A  0020               	movlb	0	; select bank0
  3766  022B  084F               	movf	?_vfpfcnvrt+1,w
  3767  022C  0021               	movlb	1	; select bank1
  3768  022D  3DA1               	addwfc	(_nout+1)^(0+128),f
  3769  022E  2A12               	goto	l1823
  3770  022F                     l1825:	
  3771                           
  3772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3773  022F  0021               	movlb	1	; select bank1
  3774  0230  0821               	movf	(_nout+1)^(0+128),w
  3775  0231  0020               	movlb	0	; select bank0
  3776  0232  00DF               	movwf	?_vfprintf+1
  3777  0233  0021               	movlb	1	; select bank1
  3778  0234  0820               	movf	_nout^(0+128),w
  3779  0235  0020               	movlb	0	; select bank0
  3780  0236  00DE               	movwf	?_vfprintf
  3781  0237  0008               	return
  3782  0238                     __end_of_vfprintf:	
  3783                           
  3784                           	psect	text11
  3785  030D                     __ptext11:	
  3786 ;; *************** function _vfpfcnvrt *****************
  3787 ;; Defined at:
  3788 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  fp              1    wreg     PTR struct _IO_FILE
  3791 ;;		 -> sprintf@f(5), 
  3792 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  3793 ;;		 -> vfprintf@cfmt(2), 
  3794 ;;  ap              1   47[BANK0 ] PTR PTR void 
  3795 ;;		 -> sprintf@ap(1), 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  3798 ;;		 -> sprintf@f(5), 
  3799 ;;  ll              8   53[BANK0 ] long long 
  3800 ;;  llu             8    0        unsigned long long 
  3801 ;;  f               4    0        unsigned long long 
  3802 ;;  ct              3    0        unsigned char [3]
  3803 ;;  vp              2    0        PTR void 
  3804 ;;  i               2    0        int 
  3805 ;;  done            2    0        int 
  3806 ;;  cp              2    0        PTR unsigned char 
  3807 ;;  c               1    0        unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  2   46[BANK0 ] int 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3820 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;Total ram usage:       16 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    5
  3824 ;; This function calls:
  3825 ;;		_dtoa
  3826 ;;		_fputc
  3827 ;; This function is called by:
  3828 ;;		_vfprintf
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           
  3833                           ;psect for function _vfpfcnvrt
  3834  030D                     _vfpfcnvrt:	
  3835                           
  3836                           ;incstack = 0
  3837                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3838                           ;vfpfcnvrt@fp stored from wreg
  3839  030D  0020               	movlb	0	; select bank0
  3840  030E  00DD               	movwf	vfpfcnvrt@fp
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3843  030F  084E               	movf	vfpfcnvrt@fmt,w
  3844  0310  0086               	movwf	6
  3845  0311  0187               	clrf	7
  3846  0312  3F40               	moviw [0]fsr1
  3847  0313  00D0               	movwf	??_vfpfcnvrt
  3848  0314  3F41               	moviw [1]fsr1
  3849  0315  00D1               	movwf	??_vfpfcnvrt+1
  3850  0316  0850               	movf	??_vfpfcnvrt,w
  3851  0317  0084               	movwf	4
  3852  0318  0851               	movf	??_vfpfcnvrt+1,w
  3853  0319  0085               	movwf	5
  3854  031A  0012               	moviw fsr0++
  3855  031B  3A25               	xorlw	37
  3856  031C  1D03               	btfss	3,2
  3857  031D  2BBC               	goto	l1803
  3858                           
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3860  031E  084E               	movf	vfpfcnvrt@fmt,w
  3861  031F  0086               	movwf	6
  3862  0320  0187               	clrf	7
  3863  0321  3001               	movlw	1
  3864  0322  0781               	addwf	1,f
  3865  0323  3141               	addfsr 1,1
  3866  0324  1803               	skipnc
  3867  0325  0A81               	incf	1,f
  3868                           
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3870  0326  0021               	movlb	1	; select bank1
  3871  0327  01A2               	clrf	_width^(0+128)
  3872  0328  01A3               	clrf	(_width+1)^(0+128)
  3873  0329  0020               	movlb	0	; select bank0
  3874  032A  01EC               	clrf	_flags
  3875  032B  01ED               	clrf	_flags+1
  3876                           
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3878  032C  30FF               	movlw	255
  3879  032D  0021               	movlb	1	; select bank1
  3880  032E  00A4               	movwf	_prec^(0+128)
  3881  032F  30FF               	movlw	255
  3882  0330  00A5               	movwf	(_prec^(0+128)+1)
  3883                           
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3885  0331  0020               	movlb	0	; select bank0
  3886  0332  084E               	movf	vfpfcnvrt@fmt,w
  3887  0333  0086               	movwf	6
  3888  0334  0187               	clrf	7
  3889  0335  3F40               	moviw [0]fsr1
  3890  0336  00D0               	movwf	??_vfpfcnvrt
  3891  0337  3F41               	moviw [1]fsr1
  3892  0338  00D1               	movwf	??_vfpfcnvrt+1
  3893  0339  0850               	movf	??_vfpfcnvrt,w
  3894  033A  0084               	movwf	4
  3895  033B  0851               	movf	??_vfpfcnvrt+1,w
  3896  033C  0085               	movwf	5
  3897  033D  0012               	moviw fsr0++
  3898  033E  3A64               	xorlw	100
  3899  033F  1903               	btfsc	3,2
  3900  0340  2B50               	goto	l1779
  3901  0341  084E               	movf	vfpfcnvrt@fmt,w
  3902  0342  0086               	movwf	6
  3903  0343  0187               	clrf	7
  3904  0344  3F40               	moviw [0]fsr1
  3905  0345  00D0               	movwf	??_vfpfcnvrt
  3906  0346  3F41               	moviw [1]fsr1
  3907  0347  00D1               	movwf	??_vfpfcnvrt+1
  3908  0348  0850               	movf	??_vfpfcnvrt,w
  3909  0349  0084               	movwf	4
  3910  034A  0851               	movf	??_vfpfcnvrt+1,w
  3911  034B  0085               	movwf	5
  3912  034C  0012               	moviw fsr0++
  3913  034D  3A69               	xorlw	105
  3914  034E  1D03               	btfss	3,2
  3915  034F  2B8A               	goto	l1787
  3916  0350                     l1779:	
  3917                           
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3919  0350  084E               	movf	vfpfcnvrt@fmt,w
  3920  0351  0086               	movwf	6
  3921  0352  0187               	clrf	7
  3922  0353  3001               	movlw	1
  3923  0354  0781               	addwf	1,f
  3924  0355  3141               	addfsr 1,1
  3925  0356  1803               	skipnc
  3926  0357  0A81               	incf	1,f
  3927                           
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3929  0358  084F               	movf	vfpfcnvrt@ap,w
  3930  0359  0086               	movwf	6
  3931  035A  0187               	clrf	7
  3932  035B  0801               	movf	1,w
  3933  035C  0084               	movwf	4
  3934  035D  0185               	clrf	5
  3935  035E  3002               	movlw	2
  3936  035F  0781               	addwf	1,f
  3937  0360  3F00               	moviw [0]fsr0
  3938  0361  00D0               	movwf	??_vfpfcnvrt
  3939  0362  3F01               	moviw [1]fsr0
  3940  0363  00D1               	movwf	??_vfpfcnvrt+1
  3941  0364  0850               	movf	??_vfpfcnvrt,w
  3942  0365  00D5               	movwf	vfpfcnvrt@ll
  3943  0366  0851               	movf	??_vfpfcnvrt+1,w
  3944  0367  00D6               	movwf	vfpfcnvrt@ll+1
  3945  0368  0D89               	rlf	9,f
  3946  0369  3B89               	subwfb	9,f
  3947  036A  0989               	comf	9,f
  3948  036B  00D7               	movwf	vfpfcnvrt@ll+2
  3949  036C  00D8               	movwf	vfpfcnvrt@ll+3
  3950  036D  00D9               	movwf	vfpfcnvrt@ll+4
  3951  036E  00DA               	movwf	vfpfcnvrt@ll+5
  3952  036F  00DB               	movwf	vfpfcnvrt@ll+6
  3953  0370  00DC               	movwf	vfpfcnvrt@ll+7
  3954                           
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3956  0371  0855               	movf	vfpfcnvrt@ll,w
  3957  0372  00B0               	movwf	dtoa@d
  3958  0373  0856               	movf	vfpfcnvrt@ll+1,w
  3959  0374  00B1               	movwf	dtoa@d+1
  3960  0375  0857               	movf	vfpfcnvrt@ll+2,w
  3961  0376  00B2               	movwf	dtoa@d+2
  3962  0377  0858               	movf	vfpfcnvrt@ll+3,w
  3963  0378  00B3               	movwf	dtoa@d+3
  3964  0379  0859               	movf	vfpfcnvrt@ll+4,w
  3965  037A  00B4               	movwf	dtoa@d+4
  3966  037B  085A               	movf	vfpfcnvrt@ll+5,w
  3967  037C  00B5               	movwf	dtoa@d+5
  3968  037D  085B               	movf	vfpfcnvrt@ll+6,w
  3969  037E  00B6               	movwf	dtoa@d+6
  3970  037F  085C               	movf	vfpfcnvrt@ll+7,w
  3971  0380  00B7               	movwf	dtoa@d+7
  3972  0381  085D               	movf	vfpfcnvrt@fp,w
  3973  0382  3186  26A4         	fcall	_dtoa
  3974  0384  0020               	movlb	0	; select bank0
  3975  0385  0831               	movf	?_dtoa+1,w
  3976  0386  00CF               	movwf	?_vfpfcnvrt+1
  3977  0387  0830               	movf	?_dtoa,w
  3978  0388  00CE               	movwf	?_vfpfcnvrt
  3979  0389  0008               	return
  3980  038A                     l1787:	
  3981                           
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3983  038A  084E               	movf	vfpfcnvrt@fmt,w
  3984  038B  0086               	movwf	6
  3985  038C  0187               	clrf	7
  3986  038D  3F40               	moviw [0]fsr1
  3987  038E  00D0               	movwf	??_vfpfcnvrt
  3988  038F  3F41               	moviw [1]fsr1
  3989  0390  00D1               	movwf	??_vfpfcnvrt+1
  3990  0391  0850               	movf	??_vfpfcnvrt,w
  3991  0392  0084               	movwf	4
  3992  0393  0851               	movf	??_vfpfcnvrt+1,w
  3993  0394  0085               	movwf	5
  3994  0395  0012               	moviw fsr0++
  3995  0396  3A25               	xorlw	37
  3996  0397  1D03               	btfss	3,2
  3997  0398  2BB1               	goto	l1797
  3998                           
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4000  0399  084E               	movf	vfpfcnvrt@fmt,w
  4001  039A  0086               	movwf	6
  4002  039B  0187               	clrf	7
  4003  039C  3001               	movlw	1
  4004  039D  0781               	addwf	1,f
  4005  039E  3141               	addfsr 1,1
  4006  039F  1803               	skipnc
  4007  03A0  0A81               	incf	1,f
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4010  03A1  3025               	movlw	37
  4011  03A2  00F0               	movwf	fputc@c
  4012  03A3  3000               	movlw	0
  4013  03A4  00F1               	movwf	fputc@c+1
  4014  03A5  085D               	movf	vfpfcnvrt@fp,w
  4015  03A6  00D0               	movwf	??_vfpfcnvrt
  4016  03A7  0850               	movf	??_vfpfcnvrt,w
  4017  03A8  00F2               	movwf	fputc@fp
  4018  03A9  3182  2278         	fcall	_fputc
  4019  03AB                     l1793:	
  4020                           
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4022  03AB  3001               	movlw	1
  4023  03AC  0020               	movlb	0	; select bank0
  4024  03AD  00CE               	movwf	?_vfpfcnvrt
  4025  03AE  3000               	movlw	0
  4026  03AF  00CF               	movwf	?_vfpfcnvrt+1
  4027  03B0  0008               	return
  4028  03B1                     l1797:	
  4029                           
  4030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4031  03B1  084E               	movf	vfpfcnvrt@fmt,w
  4032  03B2  0086               	movwf	6
  4033  03B3  0187               	clrf	7
  4034  03B4  3001               	movlw	1
  4035  03B5  0781               	addwf	1,f
  4036  03B6  3141               	addfsr 1,1
  4037  03B7  1803               	skipnc
  4038  03B8  0A81               	incf	1,f
  4039                           
  4040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4041  03B9  01CE               	clrf	?_vfpfcnvrt
  4042  03BA  01CF               	clrf	?_vfpfcnvrt+1
  4043  03BB  0008               	return
  4044  03BC                     l1803:	
  4045                           
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4047  03BC  084E               	movf	vfpfcnvrt@fmt,w
  4048  03BD  0086               	movwf	6
  4049  03BE  0187               	clrf	7
  4050  03BF  3F40               	moviw [0]fsr1
  4051  03C0  00D0               	movwf	??_vfpfcnvrt
  4052  03C1  3F41               	moviw [1]fsr1
  4053  03C2  00D1               	movwf	??_vfpfcnvrt+1
  4054  03C3  0850               	movf	??_vfpfcnvrt,w
  4055  03C4  0084               	movwf	4
  4056  03C5  0851               	movf	??_vfpfcnvrt+1,w
  4057  03C6  0085               	movwf	5
  4058  03C7  0800               	movf	0,w	;code access
  4059  03C8  00D2               	movwf	??_vfpfcnvrt+2
  4060  03C9  01D3               	clrf	??_vfpfcnvrt+3
  4061  03CA  0852               	movf	??_vfpfcnvrt+2,w
  4062  03CB  00F0               	movwf	fputc@c
  4063  03CC  0853               	movf	??_vfpfcnvrt+3,w
  4064  03CD  00F1               	movwf	fputc@c+1
  4065  03CE  085D               	movf	vfpfcnvrt@fp,w
  4066  03CF  00D4               	movwf	??_vfpfcnvrt+4
  4067  03D0  0854               	movf	??_vfpfcnvrt+4,w
  4068  03D1  00F2               	movwf	fputc@fp
  4069  03D2  3182  2278  3183   	fcall	_fputc
  4070                           
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4072  03D5  0020               	movlb	0	; select bank0
  4073  03D6  084E               	movf	vfpfcnvrt@fmt,w
  4074  03D7  0086               	movwf	6
  4075  03D8  0187               	clrf	7
  4076  03D9  3001               	movlw	1
  4077  03DA  0781               	addwf	1,f
  4078  03DB  3141               	addfsr 1,1
  4079  03DC  1803               	skipnc
  4080  03DD  0A81               	incf	1,f
  4081  03DE  2BAB               	goto	l1793
  4082  03DF                     __end_of_vfpfcnvrt:	
  4083                           
  4084                           	psect	text12
  4085  06A4                     __ptext12:	
  4086 ;; *************** function _dtoa *****************
  4087 ;; Defined at:
  4088 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  fp              1    wreg     PTR struct _IO_FILE
  4091 ;;		 -> sprintf@f(5), 
  4092 ;;  d               8   16[BANK0 ] long long 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4095 ;;		 -> sprintf@f(5), 
  4096 ;;  n               8   36[BANK0 ] long long 
  4097 ;;  i               2   44[BANK0 ] int 
  4098 ;;  s               2   34[BANK0 ] int 
  4099 ;;  w               2   32[BANK0 ] int 
  4100 ;;  p               2   30[BANK0 ] int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2   16[BANK0 ] int 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4110 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;Total ram usage:       30 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    4
  4117 ;; This function calls:
  4118 ;;		___aodiv
  4119 ;;		___aomod
  4120 ;;		_abs
  4121 ;;		_pad
  4122 ;; This function is called by:
  4123 ;;		_vfpfcnvrt
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function _dtoa
  4129  06A4                     _dtoa:	
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4133                           ;dtoa@fp stored from wreg
  4134  06A4  0020               	movlb	0	; select bank0
  4135  06A5  00BD               	movwf	dtoa@fp
  4136                           
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4138  06A6  0830               	movf	dtoa@d,w
  4139  06A7  00C4               	movwf	dtoa@n
  4140  06A8  0831               	movf	dtoa@d+1,w
  4141  06A9  00C5               	movwf	dtoa@n+1
  4142  06AA  0832               	movf	dtoa@d+2,w
  4143  06AB  00C6               	movwf	dtoa@n+2
  4144  06AC  0833               	movf	dtoa@d+3,w
  4145  06AD  00C7               	movwf	dtoa@n+3
  4146  06AE  0834               	movf	dtoa@d+4,w
  4147  06AF  00C8               	movwf	dtoa@n+4
  4148  06B0  0835               	movf	dtoa@d+5,w
  4149  06B1  00C9               	movwf	dtoa@n+5
  4150  06B2  0836               	movf	dtoa@d+6,w
  4151  06B3  00CA               	movwf	dtoa@n+6
  4152  06B4  0837               	movf	dtoa@d+7,w
  4153  06B5  00CB               	movwf	dtoa@n+7
  4154                           
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4156  06B6  3044               	movlw	low dtoa@n
  4157  06B7  0086               	movwf	6
  4158  06B8  3000               	movlw	high dtoa@n
  4159  06B9  0087               	movwf	7
  4160  06BA  3F47               	moviw [7]fsr1
  4161  06BB  00B8               	movwf	??_dtoa
  4162  06BC  1FB8               	btfss	??_dtoa,7
  4163  06BD  2EC0               	goto	u1130
  4164  06BE  3001               	movlw	1
  4165  06BF  2EC1               	goto	u1140
  4166  06C0                     u1130:	
  4167  06C0  3000               	movlw	0
  4168  06C1                     u1140:	
  4169  06C1  0020               	movlb	0	; select bank0
  4170  06C2  00B9               	movwf	??_dtoa+1
  4171  06C3  01BA               	clrf	??_dtoa+2
  4172  06C4  0839               	movf	??_dtoa+1,w
  4173  06C5  00C2               	movwf	dtoa@s
  4174  06C6  083A               	movf	??_dtoa+2,w
  4175  06C7  00C3               	movwf	dtoa@s+1
  4176                           
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4178  06C8  0842               	movf	dtoa@s,w
  4179  06C9  0443               	iorwf	dtoa@s+1,w
  4180  06CA  1903               	btfsc	3,2
  4181  06CB  2EEA               	goto	l485
  4182                           
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4184  06CC  09C4               	comf	dtoa@n,f
  4185  06CD  09C5               	comf	dtoa@n+1,f
  4186  06CE  09C6               	comf	dtoa@n+2,f
  4187  06CF  09C7               	comf	dtoa@n+3,f
  4188  06D0  09C8               	comf	dtoa@n+4,f
  4189  06D1  09C9               	comf	dtoa@n+5,f
  4190  06D2  09CA               	comf	dtoa@n+6,f
  4191  06D3  09CB               	comf	dtoa@n+7,f
  4192  06D4  0AC4               	incf	dtoa@n,f
  4193  06D5  1D03               	skipz
  4194  06D6  2EEA               	goto	l485
  4195  06D7  0AC5               	incf	dtoa@n+1,f
  4196  06D8  1D03               	skipz
  4197  06D9  2EEA               	goto	l485
  4198  06DA  0AC6               	incf	dtoa@n+2,f
  4199  06DB  1D03               	skipz
  4200  06DC  2EEA               	goto	l485
  4201  06DD  0AC7               	incf	dtoa@n+3,f
  4202  06DE  1D03               	skipz
  4203  06DF  2EEA               	goto	l485
  4204  06E0  0AC8               	incf	dtoa@n+4,f
  4205  06E1  1D03               	skipz
  4206  06E2  2EEA               	goto	l485
  4207  06E3  0AC9               	incf	dtoa@n+5,f
  4208  06E4  1D03               	skipz
  4209  06E5  2EEA               	goto	l485
  4210  06E6  0ACA               	incf	dtoa@n+6,f
  4211  06E7  1D03               	skipz
  4212  06E8  2EEA               	goto	l485
  4213  06E9  0ACB               	incf	dtoa@n+7,f
  4214  06EA                     l485:	
  4215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  4216                           
  4217                           
  4218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4219  06EA  0021               	movlb	1	; select bank1
  4220  06EB  1BA5               	btfsc	(_prec+1)^(0+128),7
  4221  06EC  2EF2               	goto	l486
  4222                           
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4224  06ED  30FD               	movlw	253
  4225  06EE  0020               	movlb	0	; select bank0
  4226  06EF  05EC               	andwf	_flags,f
  4227  06F0  30FF               	movlw	255
  4228  06F1  05ED               	andwf	_flags+1,f
  4229  06F2                     l486:	
  4230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  4231                           
  4232                           
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4234  06F2  0021               	movlb	1	; select bank1
  4235  06F3  0825               	movf	(_prec+1)^(0+128),w
  4236  06F4  3A80               	xorlw	128
  4237  06F5  0020               	movlb	0	; select bank0
  4238  06F6  00B8               	movwf	??_dtoa
  4239  06F7  3080               	movlw	128
  4240  06F8  0238               	subwf	??_dtoa,w
  4241  06F9  1D03               	skipz
  4242  06FA  2EFE               	goto	u1185
  4243  06FB  3001               	movlw	1
  4244  06FC  0021               	movlb	1	; select bank1
  4245  06FD  0224               	subwf	_prec^(0+128),w
  4246  06FE                     u1185:	
  4247  06FE  1803               	skipnc
  4248  06FF  2F06               	goto	l1713
  4249  0700  3001               	movlw	1
  4250  0701  0020               	movlb	0	; select bank0
  4251  0702  00BE               	movwf	dtoa@p
  4252  0703  3000               	movlw	0
  4253  0704  00BF               	movwf	dtoa@p+1
  4254  0705  2F0E               	goto	l490
  4255  0706                     l1713:	
  4256  0706  0021               	movlb	1	; select bank1
  4257  0707  0825               	movf	(_prec+1)^(0+128),w
  4258  0708  0020               	movlb	0	; select bank0
  4259  0709  00BF               	movwf	dtoa@p+1
  4260  070A  0021               	movlb	1	; select bank1
  4261  070B  0824               	movf	_prec^(0+128),w
  4262  070C  0020               	movlb	0	; select bank0
  4263  070D  00BE               	movwf	dtoa@p
  4264  070E                     l490:	
  4265                           
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4267  070E  0021               	movlb	1	; select bank1
  4268  070F  0823               	movf	(_width+1)^(0+128),w
  4269  0710  0020               	movlb	0	; select bank0
  4270  0711  00C1               	movwf	dtoa@w+1
  4271  0712  0021               	movlb	1	; select bank1
  4272  0713  0822               	movf	_width^(0+128),w
  4273  0714  0020               	movlb	0	; select bank0
  4274  0715  00C0               	movwf	dtoa@w
  4275                           
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4277  0716  0842               	movf	dtoa@s,w
  4278  0717  0443               	iorwf	dtoa@s+1,w
  4279  0718  1D03               	btfss	3,2
  4280  0719  2F1C               	goto	l1719
  4281  071A  1D6C               	btfss	_flags,2
  4282  071B  2F20               	goto	l491
  4283  071C                     l1719:	
  4284                           
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4286  071C  30FF               	movlw	255
  4287  071D  07C0               	addwf	dtoa@w,f
  4288  071E  30FF               	movlw	255
  4289  071F  3DC1               	addwfc	dtoa@w+1,f
  4290  0720                     l491:	
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  4292                           
  4293                           
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4295  0720  301F               	movlw	31
  4296  0721  00CC               	movwf	dtoa@i
  4297  0722  3000               	movlw	0
  4298  0723  00CD               	movwf	dtoa@i+1
  4299                           
  4300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4301  0724  0021               	movlb	1	; select bank1
  4302  0725  01C7               	clrf	(_dbuf^(0+128)+31)
  4303                           
  4304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4305  0726  2FB4               	goto	l494
  4306  0727                     l1733:	
  4307  0727  0020               	movlb	0	; select bank0
  4308  0728  0844               	movf	dtoa@n,w
  4309  0729  0445               	iorwf	dtoa@n+1,w
  4310  072A  0446               	iorwf	dtoa@n+2,w
  4311  072B  0447               	iorwf	dtoa@n+3,w
  4312  072C  0448               	iorwf	dtoa@n+4,w
  4313  072D  0449               	iorwf	dtoa@n+5,w
  4314  072E  044A               	iorwf	dtoa@n+6,w
  4315  072F  044B               	iorwf	dtoa@n+7,w
  4316  0730  1D03               	skipz
  4317  0731  2F4C               	goto	l1723
  4318  0732  083F               	movf	dtoa@p+1,w
  4319  0733  3A80               	xorlw	128
  4320  0734  00B8               	movwf	??_dtoa
  4321  0735  3080               	movlw	128
  4322  0736  0238               	subwf	??_dtoa,w
  4323  0737  1D03               	skipz
  4324  0738  2F3B               	goto	u1235
  4325  0739  3001               	movlw	1
  4326  073A  023E               	subwf	dtoa@p,w
  4327  073B                     u1235:	
  4328  073B  1803               	skipnc
  4329  073C  2F4C               	goto	l1723
  4330  073D  0020               	movlb	0	; select bank0
  4331  073E  0841               	movf	dtoa@w+1,w
  4332  073F  3A80               	xorlw	128
  4333  0740  00B8               	movwf	??_dtoa
  4334  0741  3080               	movlw	128
  4335  0742  0238               	subwf	??_dtoa,w
  4336  0743  1D03               	skipz
  4337  0744  2F47               	goto	u1245
  4338  0745  3001               	movlw	1
  4339  0746  0240               	subwf	dtoa@w,w
  4340  0747                     u1245:	
  4341  0747  1C03               	skipc
  4342  0748  2FC0               	goto	l1741
  4343  0749  0020               	movlb	0	; select bank0
  4344  074A  1CEC               	btfss	_flags,1
  4345  074B  2FC0               	goto	l1741
  4346  074C                     l1723:	
  4347                           
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4349  074C  30FF               	movlw	255
  4350  074D  0020               	movlb	0	; select bank0
  4351  074E  07CC               	addwf	dtoa@i,f
  4352  074F  30FF               	movlw	255
  4353  0750  3DCD               	addwfc	dtoa@i+1,f
  4354                           
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4356  0751  300A               	movlw	10
  4357  0752  00A0               	movwf	___aomod@divisor
  4358  0753  01A1               	clrf	___aomod@divisor+1
  4359  0754  01A2               	clrf	___aomod@divisor+2
  4360  0755  01A3               	clrf	___aomod@divisor+3
  4361  0756  01A4               	clrf	___aomod@divisor+4
  4362  0757  01A5               	clrf	___aomod@divisor+5
  4363  0758  01A6               	clrf	___aomod@divisor+6
  4364  0759  01A7               	clrf	___aomod@divisor+7
  4365  075A  0844               	movf	dtoa@n,w
  4366  075B  00A8               	movwf	___aomod@dividend
  4367  075C  0845               	movf	dtoa@n+1,w
  4368  075D  00A9               	movwf	___aomod@dividend+1
  4369  075E  0846               	movf	dtoa@n+2,w
  4370  075F  00AA               	movwf	___aomod@dividend+2
  4371  0760  0847               	movf	dtoa@n+3,w
  4372  0761  00AB               	movwf	___aomod@dividend+3
  4373  0762  0848               	movf	dtoa@n+4,w
  4374  0763  00AC               	movwf	___aomod@dividend+4
  4375  0764  0849               	movf	dtoa@n+5,w
  4376  0765  00AD               	movwf	___aomod@dividend+5
  4377  0766  084A               	movf	dtoa@n+6,w
  4378  0767  00AE               	movwf	___aomod@dividend+6
  4379  0768  084B               	movf	dtoa@n+7,w
  4380  0769  00AF               	movwf	___aomod@dividend+7
  4381  076A  3183  23DF  3186   	fcall	___aomod
  4382  076D  0020               	movlb	0	; select bank0
  4383  076E  0821               	movf	?___aomod+1,w
  4384  076F  00F4               	movwf	abs@a+1
  4385  0770  0820               	movf	?___aomod,w
  4386  0771  00F3               	movwf	abs@a
  4387  0772  3181  2165  3186   	fcall	_abs
  4388  0775  0873               	movf	?_abs,w
  4389  0776  3E30               	addlw	48
  4390  0777  0020               	movlb	0	; select bank0
  4391  0778  00B8               	movwf	??_dtoa
  4392  0779  084C               	movf	dtoa@i,w
  4393  077A  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  4394  077B  0086               	movwf	6
  4395  077C  0187               	clrf	7
  4396  077D  0838               	movf	??_dtoa,w
  4397  077E  0081               	movwf	1
  4398                           
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4400  077F  30FF               	movlw	255
  4401  0780  07BE               	addwf	dtoa@p,f
  4402  0781  30FF               	movlw	255
  4403  0782  3DBF               	addwfc	dtoa@p+1,f
  4404                           
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4406  0783  30FF               	movlw	255
  4407  0784  07C0               	addwf	dtoa@w,f
  4408  0785  30FF               	movlw	255
  4409  0786  3DC1               	addwfc	dtoa@w+1,f
  4410                           
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4412  0787  300A               	movlw	10
  4413  0788  00A0               	movwf	___aodiv@divisor
  4414  0789  01A1               	clrf	___aodiv@divisor+1
  4415  078A  01A2               	clrf	___aodiv@divisor+2
  4416  078B  01A3               	clrf	___aodiv@divisor+3
  4417  078C  01A4               	clrf	___aodiv@divisor+4
  4418  078D  01A5               	clrf	___aodiv@divisor+5
  4419  078E  01A6               	clrf	___aodiv@divisor+6
  4420  078F  01A7               	clrf	___aodiv@divisor+7
  4421  0790  0844               	movf	dtoa@n,w
  4422  0791  00A8               	movwf	___aodiv@dividend
  4423  0792  0845               	movf	dtoa@n+1,w
  4424  0793  00A9               	movwf	___aodiv@dividend+1
  4425  0794  0846               	movf	dtoa@n+2,w
  4426  0795  00AA               	movwf	___aodiv@dividend+2
  4427  0796  0847               	movf	dtoa@n+3,w
  4428  0797  00AB               	movwf	___aodiv@dividend+3
  4429  0798  0848               	movf	dtoa@n+4,w
  4430  0799  00AC               	movwf	___aodiv@dividend+4
  4431  079A  0849               	movf	dtoa@n+5,w
  4432  079B  00AD               	movwf	___aodiv@dividend+5
  4433  079C  084A               	movf	dtoa@n+6,w
  4434  079D  00AE               	movwf	___aodiv@dividend+6
  4435  079E  084B               	movf	dtoa@n+7,w
  4436  079F  00AF               	movwf	___aodiv@dividend+7
  4437  07A0  3184  24BB  3186   	fcall	___aodiv
  4438  07A3  0020               	movlb	0	; select bank0
  4439  07A4  0820               	movf	?___aodiv,w
  4440  07A5  00C4               	movwf	dtoa@n
  4441  07A6  0821               	movf	?___aodiv+1,w
  4442  07A7  00C5               	movwf	dtoa@n+1
  4443  07A8  0822               	movf	?___aodiv+2,w
  4444  07A9  00C6               	movwf	dtoa@n+2
  4445  07AA  0823               	movf	?___aodiv+3,w
  4446  07AB  00C7               	movwf	dtoa@n+3
  4447  07AC  0824               	movf	?___aodiv+4,w
  4448  07AD  00C8               	movwf	dtoa@n+4
  4449  07AE  0825               	movf	?___aodiv+5,w
  4450  07AF  00C9               	movwf	dtoa@n+5
  4451  07B0  0826               	movf	?___aodiv+6,w
  4452  07B1  00CA               	movwf	dtoa@n+6
  4453  07B2  0827               	movf	?___aodiv+7,w
  4454  07B3  00CB               	movwf	dtoa@n+7
  4455  07B4                     l494:	
  4456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  4457                           
  4458                           
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4460  07B4  0020               	movlb	0	; select bank0
  4461  07B5  084D               	movf	dtoa@i+1,w
  4462  07B6  3A80               	xorlw	128
  4463  07B7  00B8               	movwf	??_dtoa
  4464  07B8  3080               	movlw	128
  4465  07B9  0238               	subwf	??_dtoa,w
  4466  07BA  1D03               	skipz
  4467  07BB  2FBE               	goto	u1215
  4468  07BC  3001               	movlw	1
  4469  07BD  024C               	subwf	dtoa@i,w
  4470  07BE                     u1215:	
  4471  07BE  1803               	btfsc	3,0
  4472  07BF  2F27               	goto	l1733
  4473  07C0                     l1741:	
  4474                           
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4476  07C0  0020               	movlb	0	; select bank0
  4477  07C1  0842               	movf	dtoa@s,w
  4478  07C2  0443               	iorwf	dtoa@s+1,w
  4479  07C3  1D03               	btfss	3,2
  4480  07C4  2FC7               	goto	l1745
  4481  07C5  1D6C               	btfss	_flags,2
  4482  07C6  2FDD               	goto	l1755
  4483  07C7                     l1745:	
  4484                           
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4486  07C7  30FF               	movlw	255
  4487  07C8  07CC               	addwf	dtoa@i,f
  4488  07C9  30FF               	movlw	255
  4489  07CA  3DCD               	addwfc	dtoa@i+1,f
  4490                           
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4492  07CB  0842               	movf	dtoa@s,w
  4493  07CC  0443               	iorwf	dtoa@s+1,w
  4494  07CD  1D03               	btfss	3,2
  4495  07CE  2FD1               	goto	l1751
  4496  07CF  302B               	movlw	43
  4497  07D0  2FD2               	goto	L1
  4498  07D1                     l1751:	
  4499  07D1  302D               	movlw	45
  4500  07D2                     L1:	
  4501  07D2  00BB               	movwf	_dtoa$595
  4502  07D3  3000               	movlw	0
  4503  07D4  00BC               	movwf	_dtoa$595+1
  4504  07D5  083B               	movf	_dtoa$595,w
  4505  07D6  00B8               	movwf	??_dtoa
  4506  07D7  084C               	movf	dtoa@i,w
  4507  07D8  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  4508  07D9  0086               	movwf	6
  4509  07DA  0187               	clrf	7
  4510  07DB  0838               	movf	??_dtoa,w
  4511  07DC  0081               	movwf	1
  4512  07DD                     l1755:	
  4513                           
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4515  07DD  084C               	movf	dtoa@i,w
  4516  07DE  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  4517  07DF  00B8               	movwf	??_dtoa
  4518  07E0  0838               	movf	??_dtoa,w
  4519  07E1  00A4               	movwf	pad@buf
  4520  07E2  0841               	movf	dtoa@w+1,w
  4521  07E3  00A6               	movwf	pad@p+1
  4522  07E4  0840               	movf	dtoa@w,w
  4523  07E5  00A5               	movwf	pad@p
  4524  07E6  083D               	movf	dtoa@fp,w
  4525  07E7  3182  22BD         	fcall	_pad
  4526  07E9  0020               	movlb	0	; select bank0
  4527  07EA  0825               	movf	?_pad+1,w
  4528  07EB  00B1               	movwf	?_dtoa+1
  4529  07EC  0824               	movf	?_pad,w
  4530  07ED  00B0               	movwf	?_dtoa
  4531  07EE  0008               	return
  4532  07EF                     __end_of_dtoa:	
  4533                           
  4534                           	psect	text13
  4535  02BD                     __ptext13:	
  4536 ;; *************** function _pad *****************
  4537 ;; Defined at:
  4538 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  fp              1    wreg     PTR struct _IO_FILE
  4541 ;;		 -> sprintf@f(5), 
  4542 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4543 ;;		 -> dbuf(32), 
  4544 ;;  p               2    5[BANK0 ] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4547 ;;		 -> sprintf@f(5), 
  4548 ;;  w               2    9[BANK0 ] int 
  4549 ;;  i               2    7[BANK0 ] int 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  2    4[BANK0 ] int 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4559 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;Total ram usage:        9 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		_fputc
  4568 ;;		_fputs
  4569 ;;		_strlen
  4570 ;; This function is called by:
  4571 ;;		_dtoa
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _pad
  4577  02BD                     _pad:	
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4581                           ;pad@fp stored from wreg
  4582  02BD  0020               	movlb	0	; select bank0
  4583  02BE  00AB               	movwf	pad@fp
  4584                           
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4586  02BF  1C6C               	btfss	_flags,0
  4587  02C0  2AC9               	goto	l1611
  4588                           
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4590  02C1  082B               	movf	pad@fp,w
  4591  02C2  00FC               	movwf	??_pad
  4592  02C3  087C               	movf	??_pad,w
  4593  02C4  00F8               	movwf	fputs@fp
  4594  02C5  0824               	movf	pad@buf,w
  4595  02C6  3181  21B7  3182   	fcall	_fputs
  4596  02C9                     l1611:	
  4597                           
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4599  02C9  0020               	movlb	0	; select bank0
  4600  02CA  1BA6               	btfsc	pad@p+1,7
  4601  02CB  2AD1               	goto	l1615
  4602  02CC  0826               	movf	pad@p+1,w
  4603  02CD  00AA               	movwf	pad@w+1
  4604  02CE  0825               	movf	pad@p,w
  4605  02CF  00A9               	movwf	pad@w
  4606  02D0  2AD3               	goto	l477
  4607  02D1                     l1615:	
  4608  02D1  01A9               	clrf	pad@w
  4609  02D2  01AA               	clrf	pad@w+1
  4610  02D3                     l477:	
  4611                           
  4612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4613  02D3  01A7               	clrf	pad@i
  4614  02D4  01A8               	clrf	pad@i+1
  4615  02D5                     l1621:	
  4616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4617                           
  4618                           
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4620  02D5  0828               	movf	pad@i+1,w
  4621  02D6  3A80               	xorlw	128
  4622  02D7  00FC               	movwf	??_pad
  4623  02D8  082A               	movf	pad@w+1,w
  4624  02D9  3A80               	xorlw	128
  4625  02DA  027C               	subwf	??_pad,w
  4626  02DB  1D03               	skipz
  4627  02DC  2ADF               	goto	u895
  4628  02DD  0829               	movf	pad@w,w
  4629  02DE  0227               	subwf	pad@i,w
  4630  02DF                     u895:	
  4631  02DF  1803               	btfsc	3,0
  4632  02E0  2AF3               	goto	l480
  4633                           
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4635  02E1  3020               	movlw	32
  4636  02E2  00F0               	movwf	fputc@c
  4637  02E3  3000               	movlw	0
  4638  02E4  00F1               	movwf	fputc@c+1
  4639  02E5  0020               	movlb	0	; select bank0
  4640  02E6  082B               	movf	pad@fp,w
  4641  02E7  00FC               	movwf	??_pad
  4642  02E8  087C               	movf	??_pad,w
  4643  02E9  00F2               	movwf	fputc@fp
  4644  02EA  3182  2278  3182   	fcall	_fputc
  4645                           
  4646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4647  02ED  3001               	movlw	1
  4648  02EE  0020               	movlb	0	; select bank0
  4649  02EF  07A7               	addwf	pad@i,f
  4650  02F0  3000               	movlw	0
  4651  02F1  3DA8               	addwfc	pad@i+1,f
  4652  02F2  2AD5               	goto	l1621
  4653  02F3                     l480:	
  4654                           
  4655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4656  02F3  0020               	movlb	0	; select bank0
  4657  02F4  186C               	btfsc	_flags,0
  4658  02F5  2AFE               	goto	l1625
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4661  02F6  082B               	movf	pad@fp,w
  4662  02F7  00FC               	movwf	??_pad
  4663  02F8  087C               	movf	??_pad,w
  4664  02F9  00F8               	movwf	fputs@fp
  4665  02FA  0824               	movf	pad@buf,w
  4666  02FB  3181  21B7  3182   	fcall	_fputs
  4667  02FE                     l1625:	
  4668                           
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4670  02FE  0020               	movlb	0	; select bank0
  4671  02FF  0824               	movf	pad@buf,w
  4672  0300  00F0               	movwf	strlen@s
  4673  0301  3000               	movlw	0
  4674  0302  00F1               	movwf	strlen@s+1
  4675  0303  3181  214E         	fcall	_strlen
  4676  0305  0020               	movlb	0	; select bank0
  4677  0306  0829               	movf	pad@w,w
  4678  0307  0770               	addwf	?_strlen,w
  4679  0308  00A4               	movwf	?_pad
  4680  0309  082A               	movf	pad@w+1,w
  4681  030A  3D71               	addwfc	?_strlen+1,w
  4682  030B  00A5               	movwf	?_pad+1
  4683  030C  0008               	return
  4684  030D                     __end_of_pad:	
  4685                           
  4686                           	psect	text14
  4687  01B7                     __ptext14:	
  4688 ;; *************** function _fputs *****************
  4689 ;; Defined at:
  4690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  s               1    wreg     PTR const unsigned char 
  4693 ;;		 -> dbuf(32), 
  4694 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4695 ;;		 -> sprintf@f(5), 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4698 ;;		 -> dbuf(32), 
  4699 ;;  i               2    1[BANK0 ] int 
  4700 ;;  c               1    0[BANK0 ] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  2    8[COMMON] int 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;Total ram usage:        8 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    2
  4717 ;; This function calls:
  4718 ;;		_fputc
  4719 ;; This function is called by:
  4720 ;;		_pad
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _fputs
  4726  01B7                     _fputs:	
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4730                           ;fputs@s stored from wreg
  4731  01B7  0020               	movlb	0	; select bank0
  4732  01B8  00A3               	movwf	fputs@s
  4733  01B9  01A1               	clrf	fputs@i
  4734  01BA  01A2               	clrf	fputs@i+1
  4735  01BB                     l1605:	
  4736  01BB  0821               	movf	fputs@i,w
  4737  01BC  0723               	addwf	fputs@s,w
  4738  01BD  00F9               	movwf	??_fputs
  4739  01BE  0879               	movf	??_fputs,w
  4740  01BF  0086               	movwf	6
  4741  01C0  0187               	clrf	7
  4742  01C1  0801               	movf	1,w
  4743  01C2  00FA               	movwf	??_fputs+1
  4744  01C3  087A               	movf	??_fputs+1,w
  4745  01C4  00A0               	movwf	fputs@c
  4746  01C5  0820               	movf	fputs@c,w
  4747  01C6  1903               	btfsc	3,2
  4748  01C7  0008               	return
  4749  01C8  0820               	movf	fputs@c,w
  4750  01C9  00F9               	movwf	??_fputs
  4751  01CA  01FA               	clrf	??_fputs+1
  4752  01CB  0879               	movf	??_fputs,w
  4753  01CC  00F0               	movwf	fputc@c
  4754  01CD  087A               	movf	??_fputs+1,w
  4755  01CE  00F1               	movwf	fputc@c+1
  4756  01CF  0878               	movf	fputs@fp,w
  4757  01D0  00FB               	movwf	??_fputs+2
  4758  01D1  087B               	movf	??_fputs+2,w
  4759  01D2  00F2               	movwf	fputc@fp
  4760  01D3  3182  2278  3181   	fcall	_fputc
  4761  01D6  3001               	movlw	1
  4762  01D7  0020               	movlb	0	; select bank0
  4763  01D8  07A1               	addwf	fputs@i,f
  4764  01D9  3000               	movlw	0
  4765  01DA  3DA2               	addwfc	fputs@i+1,f
  4766  01DB  29BB               	goto	l1605
  4767  01DC                     __end_of_fputs:	
  4768                           
  4769                           	psect	text15
  4770  0278                     __ptext15:	
  4771 ;; *************** function _fputc *****************
  4772 ;; Defined at:
  4773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  c               2    0[COMMON] int 
  4776 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4777 ;;		 -> sprintf@f(5), 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  2    0[COMMON] int 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4789 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;Total ram usage:        8 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    1
  4796 ;; This function calls:
  4797 ;;		_putch
  4798 ;; This function is called by:
  4799 ;;		_pad
  4800 ;;		_vfpfcnvrt
  4801 ;;		_fputs
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _fputc
  4807  0278                     _fputc:	
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4811  0278  0872               	movf	fputc@fp,w
  4812  0279  1D03               	btfss	3,2
  4813  027A  0872               	movf	fputc@fp,w
  4814  027B  1D03               	btfss	3,2
  4815  027C  2A81               	goto	l1579
  4816  027D  0870               	movf	fputc@c,w
  4817  027E  3180  20EC         	fcall	_putch
  4818  0280  0008               	return
  4819  0281                     l1579:	
  4820  0281  0872               	movf	fputc@fp,w
  4821  0282  3E03               	addlw	3
  4822  0283  0086               	movwf	6
  4823  0284  0187               	clrf	7
  4824  0285  0016               	moviw fsr1++
  4825  0286  0401               	iorwf	1,w
  4826  0287  1903               	btfsc	3,2
  4827  0288  2AA4               	goto	l1583
  4828  0289  0872               	movf	fputc@fp,w
  4829  028A  3E03               	addlw	3
  4830  028B  0086               	movwf	6
  4831  028C  0187               	clrf	7
  4832  028D  3F40               	moviw [0]fsr1
  4833  028E  00F3               	movwf	??_fputc
  4834  028F  3F41               	moviw [1]fsr1
  4835  0290  00F4               	movwf	??_fputc+1
  4836  0291  0A72               	incf	fputc@fp,w
  4837  0292  0086               	movwf	6
  4838  0293  0187               	clrf	7
  4839  0294  3F40               	moviw [0]fsr1
  4840  0295  00F5               	movwf	??_fputc+2
  4841  0296  3F41               	moviw [1]fsr1
  4842  0297  00F6               	movwf	??_fputc+3
  4843  0298  0876               	movf	??_fputc+3,w
  4844  0299  3A80               	xorlw	128
  4845  029A  00F7               	movwf	??_fputc+4
  4846  029B  0874               	movf	??_fputc+1,w
  4847  029C  3A80               	xorlw	128
  4848  029D  0277               	subwf	??_fputc+4,w
  4849  029E  1D03               	skipz
  4850  029F  2AA2               	goto	u845
  4851  02A0  0873               	movf	??_fputc,w
  4852  02A1  0275               	subwf	??_fputc+2,w
  4853  02A2                     u845:	
  4854  02A2  1803               	skipnc
  4855  02A3  0008               	return
  4856  02A4                     l1583:	
  4857  02A4  0870               	movf	fputc@c,w
  4858  02A5  00F3               	movwf	??_fputc
  4859  02A6  0872               	movf	fputc@fp,w
  4860  02A7  0086               	movwf	6
  4861  02A8  0187               	clrf	7
  4862  02A9  0A72               	incf	fputc@fp,w
  4863  02AA  0084               	movwf	4
  4864  02AB  0185               	clrf	5
  4865  02AC  0800               	movf	0,w
  4866  02AD  0701               	addwf	1,w
  4867  02AE  00F4               	movwf	??_fputc+1
  4868  02AF  0874               	movf	??_fputc+1,w
  4869  02B0  0086               	movwf	6
  4870  02B1  0187               	clrf	7
  4871  02B2  0873               	movf	??_fputc,w
  4872  02B3  0081               	movwf	1
  4873  02B4  0A72               	incf	fputc@fp,w
  4874  02B5  0086               	movwf	6
  4875  02B6  0187               	clrf	7
  4876  02B7  3001               	movlw	1
  4877  02B8  0781               	addwf	1,f
  4878  02B9  3141               	addfsr 1,1
  4879  02BA  1803               	skipnc
  4880  02BB  0A81               	incf	1,f
  4881  02BC  0008               	return
  4882  02BD                     __end_of_fputc:	
  4883                           
  4884                           	psect	text16
  4885  00EC                     __ptext16:	
  4886 ;; *************** function _putch *****************
  4887 ;; Defined at:
  4888 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  c               1    wreg     unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  c               1    0[COMMON] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_fputc
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _putch
  4917  00EC                     _putch:	
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _putch: [wreg]
  4921  00EC  0008               	return
  4922  00ED                     __end_of_putch:	
  4923                           
  4924                           	psect	text17
  4925  0165                     __ptext17:	
  4926 ;; *************** function _abs *****************
  4927 ;; Defined at:
  4928 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  a               2    3[COMMON] int 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  2    3[COMMON] int 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;Total ram usage:        4 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_dtoa
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function _abs
  4957  0165                     _abs:	
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in _abs: [wreg+status,2+status,0]
  4961  0165  0874               	movf	abs@a+1,w
  4962  0166  3A80               	xorlw	128
  4963  0167  00F5               	movwf	??_abs
  4964  0168  3080               	movlw	128
  4965  0169  0275               	subwf	??_abs,w
  4966  016A  1D03               	skipz
  4967  016B  296E               	goto	u915
  4968  016C  3001               	movlw	1
  4969  016D  0273               	subwf	abs@a,w
  4970  016E                     u915:	
  4971  016E  1803               	skipnc
  4972  016F  0008               	return
  4973  0170  0973               	comf	abs@a,w
  4974  0171  00F5               	movwf	??_abs
  4975  0172  0974               	comf	abs@a+1,w
  4976  0173  00F6               	movwf	??_abs+1
  4977  0174  0AF5               	incf	??_abs,f
  4978  0175  1903               	skipnz
  4979  0176  0AF6               	incf	??_abs+1,f
  4980  0177  0875               	movf	??_abs,w
  4981  0178  00F3               	movwf	?_abs
  4982  0179  0876               	movf	??_abs+1,w
  4983  017A  00F4               	movwf	?_abs+1
  4984  017B  0008               	return
  4985  017C                     __end_of_abs:	
  4986                           
  4987                           	psect	text18
  4988  03DF                     __ptext18:	
  4989 ;; *************** function ___aomod *****************
  4990 ;; Defined at:
  4991 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  divisor         8    0[BANK0 ] long long 
  4994 ;;  dividend        8    8[BANK0 ] long long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  sign            1    2[COMMON] unsigned char 
  4997 ;;  counter         1    1[COMMON] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  8    0[BANK0 ] long long 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5007 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;Total ram usage:       19 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_dtoa
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function ___aomod
  5022  03DF                     ___aomod:	
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5026  03DF  01F2               	clrf	___aomod@sign
  5027  03E0  3028               	movlw	low ___aomod@dividend
  5028  03E1  0086               	movwf	6
  5029  03E2  3000               	movlw	high ___aomod@dividend
  5030  03E3  0087               	movwf	7
  5031  03E4  3F47               	moviw [7]fsr1
  5032  03E5  00F0               	movwf	??___aomod
  5033  03E6  1FF0               	btfss	??___aomod,7
  5034  03E7  2C09               	goto	l1677
  5035  03E8  0020               	movlb	0	; select bank0
  5036  03E9  09A8               	comf	___aomod@dividend,f
  5037  03EA  09A9               	comf	___aomod@dividend+1,f
  5038  03EB  09AA               	comf	___aomod@dividend+2,f
  5039  03EC  09AB               	comf	___aomod@dividend+3,f
  5040  03ED  09AC               	comf	___aomod@dividend+4,f
  5041  03EE  09AD               	comf	___aomod@dividend+5,f
  5042  03EF  09AE               	comf	___aomod@dividend+6,f
  5043  03F0  09AF               	comf	___aomod@dividend+7,f
  5044  03F1  0AA8               	incf	___aomod@dividend,f
  5045  03F2  1D03               	skipz
  5046  03F3  2C07               	goto	u104lld
  5047  03F4  0AA9               	incf	___aomod@dividend+1,f
  5048  03F5  1D03               	skipz
  5049  03F6  2C07               	goto	u104lld
  5050  03F7  0AAA               	incf	___aomod@dividend+2,f
  5051  03F8  1D03               	skipz
  5052  03F9  2C07               	goto	u104lld
  5053  03FA  0AAB               	incf	___aomod@dividend+3,f
  5054  03FB  1D03               	skipz
  5055  03FC  2C07               	goto	u104lld
  5056  03FD  0AAC               	incf	___aomod@dividend+4,f
  5057  03FE  1D03               	skipz
  5058  03FF  2C07               	goto	u104lld
  5059  0400  0AAD               	incf	___aomod@dividend+5,f
  5060  0401  1D03               	skipz
  5061  0402  2C07               	goto	u104lld
  5062  0403  0AAE               	incf	___aomod@dividend+6,f
  5063  0404  1D03               	skipz
  5064  0405  2C07               	goto	u104lld
  5065  0406  0AAF               	incf	___aomod@dividend+7,f
  5066  0407                     u104lld:	
  5067  0407  01F2               	clrf	___aomod@sign
  5068  0408  0AF2               	incf	___aomod@sign,f
  5069  0409                     l1677:	
  5070  0409  3020               	movlw	low ___aomod@divisor
  5071  040A  0086               	movwf	6
  5072  040B  3000               	movlw	high ___aomod@divisor
  5073  040C  0087               	movwf	7
  5074  040D  3F47               	moviw [7]fsr1
  5075  040E  00F0               	movwf	??___aomod
  5076  040F  1FF0               	btfss	??___aomod,7
  5077  0410  2C30               	goto	l1681
  5078  0411  0020               	movlb	0	; select bank0
  5079  0412  09A0               	comf	___aomod@divisor,f
  5080  0413  09A1               	comf	___aomod@divisor+1,f
  5081  0414  09A2               	comf	___aomod@divisor+2,f
  5082  0415  09A3               	comf	___aomod@divisor+3,f
  5083  0416  09A4               	comf	___aomod@divisor+4,f
  5084  0417  09A5               	comf	___aomod@divisor+5,f
  5085  0418  09A6               	comf	___aomod@divisor+6,f
  5086  0419  09A7               	comf	___aomod@divisor+7,f
  5087  041A  0AA0               	incf	___aomod@divisor,f
  5088  041B  1D03               	skipz
  5089  041C  2C30               	goto	l1681
  5090  041D  0AA1               	incf	___aomod@divisor+1,f
  5091  041E  1D03               	skipz
  5092  041F  2C30               	goto	l1681
  5093  0420  0AA2               	incf	___aomod@divisor+2,f
  5094  0421  1D03               	skipz
  5095  0422  2C30               	goto	l1681
  5096  0423  0AA3               	incf	___aomod@divisor+3,f
  5097  0424  1D03               	skipz
  5098  0425  2C30               	goto	l1681
  5099  0426  0AA4               	incf	___aomod@divisor+4,f
  5100  0427  1D03               	skipz
  5101  0428  2C30               	goto	l1681
  5102  0429  0AA5               	incf	___aomod@divisor+5,f
  5103  042A  1D03               	skipz
  5104  042B  2C30               	goto	l1681
  5105  042C  0AA6               	incf	___aomod@divisor+6,f
  5106  042D  1D03               	skipz
  5107  042E  2C30               	goto	l1681
  5108  042F  0AA7               	incf	___aomod@divisor+7,f
  5109  0430                     l1681:	
  5110  0430  0020               	movlb	0	; select bank0
  5111  0431  0820               	movf	___aomod@divisor,w
  5112  0432  0421               	iorwf	___aomod@divisor+1,w
  5113  0433  0422               	iorwf	___aomod@divisor+2,w
  5114  0434  0423               	iorwf	___aomod@divisor+3,w
  5115  0435  0424               	iorwf	___aomod@divisor+4,w
  5116  0436  0425               	iorwf	___aomod@divisor+5,w
  5117  0437  0426               	iorwf	___aomod@divisor+6,w
  5118  0438  0427               	iorwf	___aomod@divisor+7,w
  5119  0439  1903               	skipnz
  5120  043A  2C88               	goto	l1697
  5121  043B  01F1               	clrf	___aomod@counter
  5122  043C  0AF1               	incf	___aomod@counter,f
  5123  043D                     l1689:	
  5124  043D  1BA7               	btfsc	___aomod@divisor+7,7
  5125  043E  2C4C               	goto	l1691
  5126  043F  35A0               	lslf	___aomod@divisor,f
  5127  0440  0DA1               	rlf	___aomod@divisor+1,f
  5128  0441  0DA2               	rlf	___aomod@divisor+2,f
  5129  0442  0DA3               	rlf	___aomod@divisor+3,f
  5130  0443  0DA4               	rlf	___aomod@divisor+4,f
  5131  0444  0DA5               	rlf	___aomod@divisor+5,f
  5132  0445  0DA6               	rlf	___aomod@divisor+6,f
  5133  0446  0DA7               	rlf	___aomod@divisor+7,f
  5134  0447  3001               	movlw	1
  5135  0448  00F0               	movwf	??___aomod
  5136  0449  0870               	movf	??___aomod,w
  5137  044A  07F1               	addwf	___aomod@counter,f
  5138  044B  2C3D               	goto	l1689
  5139  044C                     l1691:	
  5140  044C  0827               	movf	___aomod@divisor+7,w
  5141  044D  022F               	subwf	___aomod@dividend+7,w
  5142  044E  1D03               	skipz
  5143  044F  2C6A               	goto	u1095
  5144  0450  0826               	movf	___aomod@divisor+6,w
  5145  0451  022E               	subwf	___aomod@dividend+6,w
  5146  0452  1D03               	skipz
  5147  0453  2C6A               	goto	u1095
  5148  0454  0825               	movf	___aomod@divisor+5,w
  5149  0455  022D               	subwf	___aomod@dividend+5,w
  5150  0456  1D03               	skipz
  5151  0457  2C6A               	goto	u1095
  5152  0458  0824               	movf	___aomod@divisor+4,w
  5153  0459  022C               	subwf	___aomod@dividend+4,w
  5154  045A  1D03               	skipz
  5155  045B  2C6A               	goto	u1095
  5156  045C  0823               	movf	___aomod@divisor+3,w
  5157  045D  022B               	subwf	___aomod@dividend+3,w
  5158  045E  1D03               	skipz
  5159  045F  2C6A               	goto	u1095
  5160  0460  0822               	movf	___aomod@divisor+2,w
  5161  0461  022A               	subwf	___aomod@dividend+2,w
  5162  0462  1D03               	skipz
  5163  0463  2C6A               	goto	u1095
  5164  0464  0821               	movf	___aomod@divisor+1,w
  5165  0465  0229               	subwf	___aomod@dividend+1,w
  5166  0466  1D03               	skipz
  5167  0467  2C6A               	goto	u1095
  5168  0468  0820               	movf	___aomod@divisor,w
  5169  0469  0228               	subwf	___aomod@dividend,w
  5170  046A                     u1095:	
  5171  046A  1C03               	skipc
  5172  046B  2C7C               	goto	l1695
  5173  046C  0820               	movf	___aomod@divisor,w
  5174  046D  02A8               	subwf	___aomod@dividend,f
  5175  046E  0821               	movf	___aomod@divisor+1,w
  5176  046F  3BA9               	subwfb	___aomod@dividend+1,f
  5177  0470  0822               	movf	___aomod@divisor+2,w
  5178  0471  3BAA               	subwfb	___aomod@dividend+2,f
  5179  0472  0823               	movf	___aomod@divisor+3,w
  5180  0473  3BAB               	subwfb	___aomod@dividend+3,f
  5181  0474  0824               	movf	___aomod@divisor+4,w
  5182  0475  3BAC               	subwfb	___aomod@dividend+4,f
  5183  0476  0825               	movf	___aomod@divisor+5,w
  5184  0477  3BAD               	subwfb	___aomod@dividend+5,f
  5185  0478  0826               	movf	___aomod@divisor+6,w
  5186  0479  3BAE               	subwfb	___aomod@dividend+6,f
  5187  047A  0827               	movf	___aomod@divisor+7,w
  5188  047B  3BAF               	subwfb	___aomod@dividend+7,f
  5189  047C                     l1695:	
  5190  047C  36A7               	lsrf	___aomod@divisor+7,f
  5191  047D  0CA6               	rrf	___aomod@divisor+6,f
  5192  047E  0CA5               	rrf	___aomod@divisor+5,f
  5193  047F  0CA4               	rrf	___aomod@divisor+4,f
  5194  0480  0CA3               	rrf	___aomod@divisor+3,f
  5195  0481  0CA2               	rrf	___aomod@divisor+2,f
  5196  0482  0CA1               	rrf	___aomod@divisor+1,f
  5197  0483  0CA0               	rrf	___aomod@divisor,f
  5198  0484  3001               	movlw	1
  5199  0485  02F1               	subwf	___aomod@counter,f
  5200  0486  1D03               	btfss	3,2
  5201  0487  2C4C               	goto	l1691
  5202  0488                     l1697:	
  5203  0488  0872               	movf	___aomod@sign,w
  5204  0489  1903               	btfsc	3,2
  5205  048A  2CA9               	goto	l639
  5206  048B  09A8               	comf	___aomod@dividend,f
  5207  048C  09A9               	comf	___aomod@dividend+1,f
  5208  048D  09AA               	comf	___aomod@dividend+2,f
  5209  048E  09AB               	comf	___aomod@dividend+3,f
  5210  048F  09AC               	comf	___aomod@dividend+4,f
  5211  0490  09AD               	comf	___aomod@dividend+5,f
  5212  0491  09AE               	comf	___aomod@dividend+6,f
  5213  0492  09AF               	comf	___aomod@dividend+7,f
  5214  0493  0AA8               	incf	___aomod@dividend,f
  5215  0494  1D03               	skipz
  5216  0495  2CA9               	goto	l639
  5217  0496  0AA9               	incf	___aomod@dividend+1,f
  5218  0497  1D03               	skipz
  5219  0498  2CA9               	goto	l639
  5220  0499  0AAA               	incf	___aomod@dividend+2,f
  5221  049A  1D03               	skipz
  5222  049B  2CA9               	goto	l639
  5223  049C  0AAB               	incf	___aomod@dividend+3,f
  5224  049D  1D03               	skipz
  5225  049E  2CA9               	goto	l639
  5226  049F  0AAC               	incf	___aomod@dividend+4,f
  5227  04A0  1D03               	skipz
  5228  04A1  2CA9               	goto	l639
  5229  04A2  0AAD               	incf	___aomod@dividend+5,f
  5230  04A3  1D03               	skipz
  5231  04A4  2CA9               	goto	l639
  5232  04A5  0AAE               	incf	___aomod@dividend+6,f
  5233  04A6  1D03               	skipz
  5234  04A7  2CA9               	goto	l639
  5235  04A8  0AAF               	incf	___aomod@dividend+7,f
  5236  04A9                     l639:	
  5237  04A9  0020               	movlb	0	; select bank0
  5238  04AA  0828               	movf	___aomod@dividend,w
  5239  04AB  00A0               	movwf	?___aomod
  5240  04AC  0829               	movf	___aomod@dividend+1,w
  5241  04AD  00A1               	movwf	?___aomod+1
  5242  04AE  082A               	movf	___aomod@dividend+2,w
  5243  04AF  00A2               	movwf	?___aomod+2
  5244  04B0  082B               	movf	___aomod@dividend+3,w
  5245  04B1  00A3               	movwf	?___aomod+3
  5246  04B2  082C               	movf	___aomod@dividend+4,w
  5247  04B3  00A4               	movwf	?___aomod+4
  5248  04B4  082D               	movf	___aomod@dividend+5,w
  5249  04B5  00A5               	movwf	?___aomod+5
  5250  04B6  082E               	movf	___aomod@dividend+6,w
  5251  04B7  00A6               	movwf	?___aomod+6
  5252  04B8  082F               	movf	___aomod@dividend+7,w
  5253  04B9  00A7               	movwf	?___aomod+7
  5254  04BA  0008               	return
  5255  04BB                     __end_of___aomod:	
  5256                           
  5257                           	psect	text19
  5258  04BB                     __ptext19:	
  5259 ;; *************** function ___aodiv *****************
  5260 ;; Defined at:
  5261 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  divisor         8    0[BANK0 ] long long 
  5264 ;;  dividend        8    8[BANK0 ] long long 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  quotient        8    3[COMMON] long long 
  5267 ;;  sign            1    2[COMMON] unsigned char 
  5268 ;;  counter         1    1[COMMON] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  8    0[BANK0 ] long long 
  5271 ;; Registers used:
  5272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5278 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;Total ram usage:       27 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_dtoa
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function ___aodiv
  5293  04BB                     ___aodiv:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5297  04BB  01F2               	clrf	___aodiv@sign
  5298  04BC  3020               	movlw	low ___aodiv@divisor
  5299  04BD  0086               	movwf	6
  5300  04BE  3000               	movlw	high ___aodiv@divisor
  5301  04BF  0087               	movwf	7
  5302  04C0  3F47               	moviw [7]fsr1
  5303  04C1  00F0               	movwf	??___aodiv
  5304  04C2  1FF0               	btfss	??___aodiv,7
  5305  04C3  2CE5               	goto	l1639
  5306  04C4  0020               	movlb	0	; select bank0
  5307  04C5  09A0               	comf	___aodiv@divisor,f
  5308  04C6  09A1               	comf	___aodiv@divisor+1,f
  5309  04C7  09A2               	comf	___aodiv@divisor+2,f
  5310  04C8  09A3               	comf	___aodiv@divisor+3,f
  5311  04C9  09A4               	comf	___aodiv@divisor+4,f
  5312  04CA  09A5               	comf	___aodiv@divisor+5,f
  5313  04CB  09A6               	comf	___aodiv@divisor+6,f
  5314  04CC  09A7               	comf	___aodiv@divisor+7,f
  5315  04CD  0AA0               	incf	___aodiv@divisor,f
  5316  04CE  1D03               	skipz
  5317  04CF  2CE3               	goto	u93lld
  5318  04D0  0AA1               	incf	___aodiv@divisor+1,f
  5319  04D1  1D03               	skipz
  5320  04D2  2CE3               	goto	u93lld
  5321  04D3  0AA2               	incf	___aodiv@divisor+2,f
  5322  04D4  1D03               	skipz
  5323  04D5  2CE3               	goto	u93lld
  5324  04D6  0AA3               	incf	___aodiv@divisor+3,f
  5325  04D7  1D03               	skipz
  5326  04D8  2CE3               	goto	u93lld
  5327  04D9  0AA4               	incf	___aodiv@divisor+4,f
  5328  04DA  1D03               	skipz
  5329  04DB  2CE3               	goto	u93lld
  5330  04DC  0AA5               	incf	___aodiv@divisor+5,f
  5331  04DD  1D03               	skipz
  5332  04DE  2CE3               	goto	u93lld
  5333  04DF  0AA6               	incf	___aodiv@divisor+6,f
  5334  04E0  1D03               	skipz
  5335  04E1  2CE3               	goto	u93lld
  5336  04E2  0AA7               	incf	___aodiv@divisor+7,f
  5337  04E3                     u93lld:	
  5338  04E3  01F2               	clrf	___aodiv@sign
  5339  04E4  0AF2               	incf	___aodiv@sign,f
  5340  04E5                     l1639:	
  5341  04E5  3028               	movlw	low ___aodiv@dividend
  5342  04E6  0086               	movwf	6
  5343  04E7  3000               	movlw	high ___aodiv@dividend
  5344  04E8  0087               	movwf	7
  5345  04E9  3F47               	moviw [7]fsr1
  5346  04EA  00F0               	movwf	??___aodiv
  5347  04EB  1FF0               	btfss	??___aodiv,7
  5348  04EC  2D10               	goto	l1645
  5349  04ED  0020               	movlb	0	; select bank0
  5350  04EE  09A8               	comf	___aodiv@dividend,f
  5351  04EF  09A9               	comf	___aodiv@dividend+1,f
  5352  04F0  09AA               	comf	___aodiv@dividend+2,f
  5353  04F1  09AB               	comf	___aodiv@dividend+3,f
  5354  04F2  09AC               	comf	___aodiv@dividend+4,f
  5355  04F3  09AD               	comf	___aodiv@dividend+5,f
  5356  04F4  09AE               	comf	___aodiv@dividend+6,f
  5357  04F5  09AF               	comf	___aodiv@dividend+7,f
  5358  04F6  0AA8               	incf	___aodiv@dividend,f
  5359  04F7  1D03               	skipz
  5360  04F8  2D0C               	goto	l1643
  5361  04F9  0AA9               	incf	___aodiv@dividend+1,f
  5362  04FA  1D03               	skipz
  5363  04FB  2D0C               	goto	l1643
  5364  04FC  0AAA               	incf	___aodiv@dividend+2,f
  5365  04FD  1D03               	skipz
  5366  04FE  2D0C               	goto	l1643
  5367  04FF  0AAB               	incf	___aodiv@dividend+3,f
  5368  0500  1D03               	skipz
  5369  0501  2D0C               	goto	l1643
  5370  0502  0AAC               	incf	___aodiv@dividend+4,f
  5371  0503  1D03               	skipz
  5372  0504  2D0C               	goto	l1643
  5373  0505  0AAD               	incf	___aodiv@dividend+5,f
  5374  0506  1D03               	skipz
  5375  0507  2D0C               	goto	l1643
  5376  0508  0AAE               	incf	___aodiv@dividend+6,f
  5377  0509  1D03               	skipz
  5378  050A  2D0C               	goto	l1643
  5379  050B  0AAF               	incf	___aodiv@dividend+7,f
  5380  050C                     l1643:	
  5381  050C  3001               	movlw	1
  5382  050D  00F0               	movwf	??___aodiv
  5383  050E  0870               	movf	??___aodiv,w
  5384  050F  06F2               	xorwf	___aodiv@sign,f
  5385  0510                     l1645:	
  5386  0510  3073               	movlw	low ___aodiv@quotient
  5387  0511  0086               	movwf	6
  5388  0512  3000               	movlw	high ___aodiv@quotient
  5389  0513  0087               	movwf	7
  5390  0514  3008               	movlw	8
  5391  0515  00F0               	movwf	??___aodiv
  5392  0516  3000               	movlw	0
  5393  0517                     u960:	
  5394  0517  001E               	movwi fsr1++
  5395  0518  0BF0               	decfsz	??___aodiv,f
  5396  0519  2D17               	goto	u960
  5397  051A  0020               	movlb	0	; select bank0
  5398  051B  0820               	movf	___aodiv@divisor,w
  5399  051C  0421               	iorwf	___aodiv@divisor+1,w
  5400  051D  0422               	iorwf	___aodiv@divisor+2,w
  5401  051E  0423               	iorwf	___aodiv@divisor+3,w
  5402  051F  0424               	iorwf	___aodiv@divisor+4,w
  5403  0520  0425               	iorwf	___aodiv@divisor+5,w
  5404  0521  0426               	iorwf	___aodiv@divisor+6,w
  5405  0522  0427               	iorwf	___aodiv@divisor+7,w
  5406  0523  1903               	skipnz
  5407  0524  2D7B               	goto	l1667
  5408  0525  01F1               	clrf	___aodiv@counter
  5409  0526  0AF1               	incf	___aodiv@counter,f
  5410  0527                     l1655:	
  5411  0527  1BA7               	btfsc	___aodiv@divisor+7,7
  5412  0528  2D36               	goto	l1657
  5413  0529  35A0               	lslf	___aodiv@divisor,f
  5414  052A  0DA1               	rlf	___aodiv@divisor+1,f
  5415  052B  0DA2               	rlf	___aodiv@divisor+2,f
  5416  052C  0DA3               	rlf	___aodiv@divisor+3,f
  5417  052D  0DA4               	rlf	___aodiv@divisor+4,f
  5418  052E  0DA5               	rlf	___aodiv@divisor+5,f
  5419  052F  0DA6               	rlf	___aodiv@divisor+6,f
  5420  0530  0DA7               	rlf	___aodiv@divisor+7,f
  5421  0531  3001               	movlw	1
  5422  0532  00F0               	movwf	??___aodiv
  5423  0533  0870               	movf	??___aodiv,w
  5424  0534  07F1               	addwf	___aodiv@counter,f
  5425  0535  2D27               	goto	l1655
  5426  0536                     l1657:	
  5427  0536  35F3               	lslf	___aodiv@quotient,f
  5428  0537  0DF4               	rlf	___aodiv@quotient+1,f
  5429  0538  0DF5               	rlf	___aodiv@quotient+2,f
  5430  0539  0DF6               	rlf	___aodiv@quotient+3,f
  5431  053A  0DF7               	rlf	___aodiv@quotient+4,f
  5432  053B  0DF8               	rlf	___aodiv@quotient+5,f
  5433  053C  0DF9               	rlf	___aodiv@quotient+6,f
  5434  053D  0DFA               	rlf	___aodiv@quotient+7,f
  5435  053E  0827               	movf	___aodiv@divisor+7,w
  5436  053F  022F               	subwf	___aodiv@dividend+7,w
  5437  0540  1D03               	skipz
  5438  0541  2D5C               	goto	u995
  5439  0542  0826               	movf	___aodiv@divisor+6,w
  5440  0543  022E               	subwf	___aodiv@dividend+6,w
  5441  0544  1D03               	skipz
  5442  0545  2D5C               	goto	u995
  5443  0546  0825               	movf	___aodiv@divisor+5,w
  5444  0547  022D               	subwf	___aodiv@dividend+5,w
  5445  0548  1D03               	skipz
  5446  0549  2D5C               	goto	u995
  5447  054A  0824               	movf	___aodiv@divisor+4,w
  5448  054B  022C               	subwf	___aodiv@dividend+4,w
  5449  054C  1D03               	skipz
  5450  054D  2D5C               	goto	u995
  5451  054E  0823               	movf	___aodiv@divisor+3,w
  5452  054F  022B               	subwf	___aodiv@dividend+3,w
  5453  0550  1D03               	skipz
  5454  0551  2D5C               	goto	u995
  5455  0552  0822               	movf	___aodiv@divisor+2,w
  5456  0553  022A               	subwf	___aodiv@dividend+2,w
  5457  0554  1D03               	skipz
  5458  0555  2D5C               	goto	u995
  5459  0556  0821               	movf	___aodiv@divisor+1,w
  5460  0557  0229               	subwf	___aodiv@dividend+1,w
  5461  0558  1D03               	skipz
  5462  0559  2D5C               	goto	u995
  5463  055A  0820               	movf	___aodiv@divisor,w
  5464  055B  0228               	subwf	___aodiv@dividend,w
  5465  055C                     u995:	
  5466  055C  1C03               	skipc
  5467  055D  2D6F               	goto	l1665
  5468  055E  0820               	movf	___aodiv@divisor,w
  5469  055F  02A8               	subwf	___aodiv@dividend,f
  5470  0560  0821               	movf	___aodiv@divisor+1,w
  5471  0561  3BA9               	subwfb	___aodiv@dividend+1,f
  5472  0562  0822               	movf	___aodiv@divisor+2,w
  5473  0563  3BAA               	subwfb	___aodiv@dividend+2,f
  5474  0564  0823               	movf	___aodiv@divisor+3,w
  5475  0565  3BAB               	subwfb	___aodiv@dividend+3,f
  5476  0566  0824               	movf	___aodiv@divisor+4,w
  5477  0567  3BAC               	subwfb	___aodiv@dividend+4,f
  5478  0568  0825               	movf	___aodiv@divisor+5,w
  5479  0569  3BAD               	subwfb	___aodiv@dividend+5,f
  5480  056A  0826               	movf	___aodiv@divisor+6,w
  5481  056B  3BAE               	subwfb	___aodiv@dividend+6,f
  5482  056C  0827               	movf	___aodiv@divisor+7,w
  5483  056D  3BAF               	subwfb	___aodiv@dividend+7,f
  5484  056E  1473               	bsf	___aodiv@quotient,0
  5485  056F                     l1665:	
  5486  056F  36A7               	lsrf	___aodiv@divisor+7,f
  5487  0570  0CA6               	rrf	___aodiv@divisor+6,f
  5488  0571  0CA5               	rrf	___aodiv@divisor+5,f
  5489  0572  0CA4               	rrf	___aodiv@divisor+4,f
  5490  0573  0CA3               	rrf	___aodiv@divisor+3,f
  5491  0574  0CA2               	rrf	___aodiv@divisor+2,f
  5492  0575  0CA1               	rrf	___aodiv@divisor+1,f
  5493  0576  0CA0               	rrf	___aodiv@divisor,f
  5494  0577  3001               	movlw	1
  5495  0578  02F1               	subwf	___aodiv@counter,f
  5496  0579  1D03               	btfss	3,2
  5497  057A  2D36               	goto	l1657
  5498  057B                     l1667:	
  5499  057B  0872               	movf	___aodiv@sign,w
  5500  057C  1903               	btfsc	3,2
  5501  057D  2D9C               	goto	l626
  5502  057E  09F3               	comf	___aodiv@quotient,f
  5503  057F  09F4               	comf	___aodiv@quotient+1,f
  5504  0580  09F5               	comf	___aodiv@quotient+2,f
  5505  0581  09F6               	comf	___aodiv@quotient+3,f
  5506  0582  09F7               	comf	___aodiv@quotient+4,f
  5507  0583  09F8               	comf	___aodiv@quotient+5,f
  5508  0584  09F9               	comf	___aodiv@quotient+6,f
  5509  0585  09FA               	comf	___aodiv@quotient+7,f
  5510  0586  0AF3               	incf	___aodiv@quotient,f
  5511  0587  1D03               	skipz
  5512  0588  2D9C               	goto	l626
  5513  0589  0AF4               	incf	___aodiv@quotient+1,f
  5514  058A  1D03               	skipz
  5515  058B  2D9C               	goto	l626
  5516  058C  0AF5               	incf	___aodiv@quotient+2,f
  5517  058D  1D03               	skipz
  5518  058E  2D9C               	goto	l626
  5519  058F  0AF6               	incf	___aodiv@quotient+3,f
  5520  0590  1D03               	skipz
  5521  0591  2D9C               	goto	l626
  5522  0592  0AF7               	incf	___aodiv@quotient+4,f
  5523  0593  1D03               	skipz
  5524  0594  2D9C               	goto	l626
  5525  0595  0AF8               	incf	___aodiv@quotient+5,f
  5526  0596  1D03               	skipz
  5527  0597  2D9C               	goto	l626
  5528  0598  0AF9               	incf	___aodiv@quotient+6,f
  5529  0599  1D03               	skipz
  5530  059A  2D9C               	goto	l626
  5531  059B  0AFA               	incf	___aodiv@quotient+7,f
  5532  059C                     l626:	
  5533  059C  0873               	movf	___aodiv@quotient,w
  5534  059D  0020               	movlb	0	; select bank0
  5535  059E  00A0               	movwf	?___aodiv
  5536  059F  0874               	movf	___aodiv@quotient+1,w
  5537  05A0  00A1               	movwf	?___aodiv+1
  5538  05A1  0875               	movf	___aodiv@quotient+2,w
  5539  05A2  00A2               	movwf	?___aodiv+2
  5540  05A3  0876               	movf	___aodiv@quotient+3,w
  5541  05A4  00A3               	movwf	?___aodiv+3
  5542  05A5  0877               	movf	___aodiv@quotient+4,w
  5543  05A6  00A4               	movwf	?___aodiv+4
  5544  05A7  0878               	movf	___aodiv@quotient+5,w
  5545  05A8  00A5               	movwf	?___aodiv+5
  5546  05A9  0879               	movf	___aodiv@quotient+6,w
  5547  05AA  00A6               	movwf	?___aodiv+6
  5548  05AB  087A               	movf	___aodiv@quotient+7,w
  5549  05AC  00A7               	movwf	?___aodiv+7
  5550  05AD  0008               	return
  5551  05AE                     __end_of___aodiv:	
  5552                           
  5553                           	psect	text20
  5554  0238                     __ptext20:	
  5555 ;; *************** function _Display_Name *****************
  5556 ;; Defined at:
  5557 ;;		line 108 in file "main.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  string1         2    5[COMMON] PTR unsigned char 
  5560 ;;		 -> Get_ADC@string1(12), STR_5(11), STR_4(16), STR_3(13), 
  5561 ;;		 -> STR_2(12), checkButton1@string1(12), 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  i               2   10[COMMON] int 
  5564 ;;  length          2    8[COMMON] int 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;Total ram usage:        7 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    2
  5581 ;; This function calls:
  5582 ;;		_SPI_Write
  5583 ;;		_strlen
  5584 ;; This function is called by:
  5585 ;;		_Get_ADC
  5586 ;;		_checkButton1
  5587 ;;		_Send_Names
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _Display_Name
  5593  0238                     _Display_Name:	
  5594                           
  5595                           ;main.c: 109:     int length;;main.c: 110:     int i;;main.c: 111:     if(printed == 0) 
      +                          {
  5596                           
  5597                           ;incstack = 0
  5598                           ; Regs used in _Display_Name: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5599  0238  0021               	movlb	1	; select bank1
  5600  0239  0826               	movf	_printed^(0+128),w
  5601  023A  1D03               	btfss	3,2
  5602  023B  2A74               	goto	l195
  5603                           
  5604                           ;main.c: 112:         SPI_Write(0xFE);
  5605  023C  30FE               	movlw	254
  5606  023D  3181  212A  3182   	fcall	_SPI_Write
  5607                           
  5608                           ;main.c: 113:         _delay((unsigned long)((100)*(500000/4000.0)));
  5609  0240  3011               	movlw	17
  5610  0241  00F7               	movwf	??_Display_Name
  5611  0242  303A               	movlw	58
  5612  0243                     u1617:	
  5613  0243  0B89               	decfsz	9,f
  5614  0244  2A43               	goto	u1617
  5615  0245  0BF7               	decfsz	??_Display_Name,f
  5616  0246  2A43               	goto	u1617
  5617  0247  3200               	nop2
  5618                           
  5619                           ;main.c: 114:         SPI_Write(0x51);
  5620  0248  3051               	movlw	81
  5621  0249  3181  212A  3182   	fcall	_SPI_Write
  5622                           
  5623                           ;main.c: 115:         length = strlen(string1);
  5624  024C  0876               	movf	Display_Name@string1+1,w
  5625  024D  00F1               	movwf	strlen@s+1
  5626  024E  0875               	movf	Display_Name@string1,w
  5627  024F  00F0               	movwf	strlen@s
  5628  0250  3181  214E  3182   	fcall	_strlen
  5629  0253  0871               	movf	?_strlen+1,w
  5630  0254  00F9               	movwf	Display_Name@length+1
  5631  0255  0870               	movf	?_strlen,w
  5632  0256  00F8               	movwf	Display_Name@length
  5633                           
  5634                           ;main.c: 116:         for(i = 0; i < length; i++){
  5635  0257  01FA               	clrf	Display_Name@i
  5636  0258  01FB               	clrf	Display_Name@i+1
  5637  0259                     l1845:	
  5638  0259  087B               	movf	Display_Name@i+1,w
  5639  025A  3A80               	xorlw	128
  5640  025B  00F7               	movwf	??_Display_Name
  5641  025C  0879               	movf	Display_Name@length+1,w
  5642  025D  3A80               	xorlw	128
  5643  025E  0277               	subwf	??_Display_Name,w
  5644  025F  1D03               	skipz
  5645  0260  2A63               	goto	u1365
  5646  0261  0878               	movf	Display_Name@length,w
  5647  0262  027A               	subwf	Display_Name@i,w
  5648  0263                     u1365:	
  5649  0263  1803               	btfsc	3,0
  5650  0264  2A74               	goto	l195
  5651                           
  5652                           ;main.c: 117:             SPI_Write(string1[i]);
  5653  0265  0875               	movf	Display_Name@string1,w
  5654  0266  077A               	addwf	Display_Name@i,w
  5655  0267  0084               	movwf	4
  5656  0268  0876               	movf	Display_Name@string1+1,w
  5657  0269  3D7B               	addwfc	Display_Name@i+1,w
  5658  026A  0085               	movwf	5
  5659  026B  0800               	movf	0,w	;code access
  5660  026C  3181  212A  3182   	fcall	_SPI_Write
  5661                           
  5662                           ;main.c: 118:         }
  5663  026F  3001               	movlw	1
  5664  0270  07FA               	addwf	Display_Name@i,f
  5665  0271  3000               	movlw	0
  5666  0272  3DFB               	addwfc	Display_Name@i+1,f
  5667  0273  2A59               	goto	l1845
  5668  0274                     l195:	
  5669                           ;main.c: 119:     }
  5670                           
  5671                           
  5672                           ;main.c: 120:     printed = 1;
  5673  0274  0021               	movlb	1	; select bank1
  5674  0275  01A6               	clrf	_printed^(0+128)
  5675  0276  0AA6               	incf	_printed^(0+128),f
  5676  0277  0008               	return
  5677  0278                     __end_of_Display_Name:	
  5678                           
  5679                           	psect	text21
  5680  014E                     __ptext21:	
  5681 ;; *************** function _strlen *****************
  5682 ;; Defined at:
  5683 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  s               2    0[COMMON] PTR const unsigned char 
  5686 ;;		 -> dbuf(32), Get_ADC@string1(12), STR_5(11), STR_4(16), 
  5687 ;;		 -> STR_3(13), STR_2(12), checkButton1@string1(12), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  a               2    3[COMMON] PTR const unsigned char 
  5690 ;;		 -> dbuf(32), Get_ADC@string1(12), STR_5(11), STR_4(16), 
  5691 ;;		 -> STR_3(13), STR_2(12), checkButton1@string1(12), 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2    0[COMMON] unsigned int 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;Total ram usage:        5 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_Display_Name
  5711 ;;		_pad
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _strlen
  5717  014E                     _strlen:	
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5721  014E  0871               	movf	strlen@s+1,w
  5722  014F  00F4               	movwf	strlen@a+1
  5723  0150  0870               	movf	strlen@s,w
  5724  0151  00F3               	movwf	strlen@a
  5725  0152                     l1593:	
  5726  0152  0870               	movf	strlen@s,w
  5727  0153  0084               	movwf	4
  5728  0154  0871               	movf	strlen@s+1,w
  5729  0155  0085               	movwf	5
  5730  0156  0012               	moviw fsr0++
  5731  0157  1903               	btfsc	3,2
  5732  0158  295E               	goto	l1595
  5733  0159  3001               	movlw	1
  5734  015A  07F0               	addwf	strlen@s,f
  5735  015B  3000               	movlw	0
  5736  015C  3DF1               	addwfc	strlen@s+1,f
  5737  015D  2952               	goto	l1593
  5738  015E                     l1595:	
  5739  015E  0873               	movf	strlen@a,w
  5740  015F  0270               	subwf	strlen@s,w
  5741  0160  00F0               	movwf	?_strlen
  5742  0161  0874               	movf	strlen@a+1,w
  5743  0162  3B71               	subwfb	strlen@s+1,w
  5744  0163  00F1               	movwf	?_strlen+1
  5745  0164  0008               	return
  5746  0165                     __end_of_strlen:	
  5747                           
  5748                           	psect	text22
  5749  012A                     __ptext22:	
  5750 ;; *************** function _SPI_Write *****************
  5751 ;; Defined at:
  5752 ;;		line 99 in file "main.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  incoming        1    wreg     unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  incoming        1    2[COMMON] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;Total ram usage:        2 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    1
  5773 ;; This function calls:
  5774 ;;		_SPI1_Exchange8bit
  5775 ;; This function is called by:
  5776 ;;		_Display_Name
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function _SPI_Write
  5782  012A                     _SPI_Write:	
  5783                           
  5784                           ;incstack = 0
  5785                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
  5786                           ;SPI_Write@incoming stored from wreg
  5787  012A  00F2               	movwf	SPI_Write@incoming
  5788                           
  5789                           ;main.c: 99: void SPI_Write(char incoming);main.c: 100: {;main.c: 101:     do { LATCbits
      +                          .LATC0 = 0; } while(0);
  5790  012B  0022               	movlb	2	; select bank2
  5791  012C  100E               	bcf	14,0	;volatile
  5792                           
  5793                           ;main.c: 102:     SPI1_Exchange8bit(incoming);
  5794  012D  0872               	movf	SPI_Write@incoming,w
  5795  012E  3181  211E  3181   	fcall	_SPI1_Exchange8bit
  5796  0131  0022               	movlb	2	; select bank2
  5797  0132  140E               	bsf	14,0	;volatile
  5798                           
  5799                           ;main.c: 104:     _delay((unsigned long)((100)*(500000/4000.0)));
  5800  0133  3011               	movlw	17
  5801  0134  00F1               	movwf	??_SPI_Write
  5802  0135  303A               	movlw	58
  5803  0136                     u1627:	
  5804  0136  0B89               	decfsz	9,f
  5805  0137  2936               	goto	u1627
  5806  0138  0BF1               	decfsz	??_SPI_Write,f
  5807  0139  2936               	goto	u1627
  5808  013A  3200               	nop2
  5809  013B  0008               	return
  5810  013C                     __end_of_SPI_Write:	
  5811                           
  5812                           	psect	text23
  5813  011E                     __ptext23:	
  5814 ;; *************** function _SPI1_Exchange8bit *****************
  5815 ;; Defined at:
  5816 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  data            1    wreg     unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  data            1    0[COMMON] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      unsigned char 
  5823 ;; Registers used:
  5824 ;;		wreg
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        1 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_SPI_Write
  5840 ;;		_SPI1_Exchange8bitBuffer
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           
  5845                           ;psect for function _SPI1_Exchange8bit
  5846  011E                     _SPI1_Exchange8bit:	
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _SPI1_Exchange8bit: [wreg]
  5850                           ;SPI1_Exchange8bit@data stored from wreg
  5851  011E  00F0               	movwf	SPI1_Exchange8bit@data
  5852                           
  5853                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SSP1CON1bits.WCOL = 0;
  5854  011F  0024               	movlb	4	; select bank4
  5855  0120  1395               	bcf	21,7	;volatile
  5856                           
  5857                           ;mcc_generated_files/spi1.c: 84:     SSP1BUF = data;
  5858  0121  0870               	movf	SPI1_Exchange8bit@data,w
  5859  0122  0091               	movwf	17	;volatile
  5860  0123                     l18:	
  5861                           ;mcc_generated_files/spi1.c: 89:     }
  5862                           
  5863                           ;mcc_generated_files/spi1.c: 86:     while(SSP1STATbits.BF == 0x0)
  5864                           
  5865                           
  5866                           ;mcc_generated_files/spi1.c: 86:     while(SSP1STATbits.BF == 0x0)
  5867  0123  0024               	movlb	4	; select bank4
  5868  0124  1814               	btfsc	20,0	;volatile
  5869  0125  2928               	goto	l1763
  5870  0126  0064               	clrwdt	;# 
  5871  0127  2923               	goto	l18
  5872  0128                     l1763:	
  5873                           
  5874                           ;mcc_generated_files/spi1.c: 91:     return (SSP1BUF);
  5875  0128  0811               	movf	17,w	;volatile
  5876  0129  0008               	return
  5877  012A                     __end_of_SPI1_Exchange8bit:	
  5878                           
  5879                           	psect	text24
  5880  017C                     __ptext24:	
  5881 ;; *************** function _ADC_GetConversion *****************
  5882 ;; Defined at:
  5883 ;;		line 113 in file "mcc_generated_files/adc.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  channel         1    wreg     enum E6648
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  channel         1    3[COMMON] enum E6648
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  2    0[COMMON] unsigned short 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;Total ram usage:        4 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_Get_ADC
  5907 ;;		_checkButton1
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _ADC_GetConversion
  5913  017C                     _ADC_GetConversion:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5917                           ;ADC_GetConversion@channel stored from wreg
  5918  017C  00F3               	movwf	ADC_GetConversion@channel
  5919                           
  5920                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  5921  017D  0873               	movf	ADC_GetConversion@channel,w
  5922  017E  00F2               	movwf	??_ADC_GetConversion
  5923  017F  0DF2               	rlf	??_ADC_GetConversion,f
  5924  0180  0DF2               	rlf	??_ADC_GetConversion,f
  5925  0181  0021               	movlb	1	; select bank1
  5926  0182  081D               	movf	29,w	;volatile
  5927  0183  0672               	xorwf	??_ADC_GetConversion,w
  5928  0184  3903               	andlw	-253
  5929  0185  0672               	xorwf	??_ADC_GetConversion,w
  5930  0186  009D               	movwf	29	;volatile
  5931                           
  5932                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  5933  0187  141D               	bsf	29,0	;volatile
  5934                           
  5935                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
  5936                           
  5937                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
  5938  0188  0021               	movlb	1	; select bank1
  5939  0189  149D               	bsf	29,1	;volatile
  5940  018A                     l296:	
  5941                           ;mcc_generated_files/adc.c: 131:     }
  5942                           
  5943                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5944                           
  5945                           
  5946                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  5947  018A  0021               	movlb	1	; select bank1
  5948  018B  1C9D               	btfss	29,1	;volatile
  5949  018C  298F               	goto	l1855
  5950  018D  0064               	clrwdt	;# 
  5951  018E  298A               	goto	l296
  5952  018F                     l1855:	
  5953                           
  5954                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5955  018F  081C               	movf	28,w	;volatile
  5956  0190  00F1               	movwf	?_ADC_GetConversion+1
  5957  0191  081B               	movf	27,w	;volatile
  5958  0192  00F0               	movwf	?_ADC_GetConversion
  5959  0193  0008               	return
  5960  0194                     __end_of_ADC_GetConversion:	
  5961  007E                     btemp	set	126	;btemp
  5962  007E                     wtemp0	set	126


Data Sizes:
    Strings     55
    Constant    0
    Data        1
    BSS         43
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     23      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), Get_ADC@string1(BANK1[12]), STR_5(CODE[11]), STR_4(CODE[16]), 
		 -> STR_3(CODE[13]), STR_2(CODE[12]), checkButton1@string1(COMMON[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), Get_ADC@string1(BANK1[12]), STR_5(CODE[11]), STR_4(CODE[16]), 
		 -> STR_3(CODE[13]), STR_2(CODE[12]), checkButton1@string1(COMMON[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 12
		 -> Get_ADC@string1(BANK1[12]), checkButton1@string1(COMMON[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 12
		 -> Get_ADC@string1(BANK1[12]), checkButton1@string1(COMMON[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    S894_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 12
		 -> Get_ADC@string1(BANK1[12]), checkButton1@string1(COMMON[12]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 12
		 -> Get_ADC@string1(BANK1[12]), checkButton1@string1(COMMON[12]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    Display_Name@string1	PTR unsigned char  size(2) Largest target is 16
		 -> Get_ADC@string1(BANK1[12]), STR_5(CODE[11]), STR_4(CODE[16]), STR_3(CODE[13]), 
		 -> STR_2(CODE[12]), checkButton1@string1(COMMON[12]), 


Critical Paths under _main in COMMON

    _Get_ADC->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Display_Name->_strlen
    _SPI_Write->_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _main->_Get_ADC
    _Get_ADC->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_Get_ADC
    _Get_ADC->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7554
                            _Get_ADC
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_ADC                                             16    16      0    7554
                                             74 BANK0      2     2      0
                                              9 BANK1     14    14      0
                  _ADC_GetConversion
                       _Display_Name
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    10      4    6340
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5923
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5612
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4262
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2656
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _Display_Name                                         7     5      2     855
                                              5 COMMON     7     5      2
                          _SPI_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     242
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            2     2      0      44
                                              1 COMMON     2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_ADC
     _ADC_GetConversion
     _Display_Name
       _SPI_Write
         _SPI1_Exchange8bit
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     17      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 25 14:31:22 2019

              _SPI1_Exchange8bit 011E               ?_SPI1_Exchange8bit 0070                      __CFG_CP$OFF 0000  
                             l18 0123                      __CFG_LVP$ON 0000                              l195 0274  
                            l296 018A                              l480 02F3                              l626 059C  
                            l490 070E                              l491 0720                              l477 02D3  
                            l485 06EA                              l494 07B4                              l486 06F2  
                            l639 04A9                     __CFG_CPD$OFF 0000                              u915 016E  
                            u845 02A2                              u960 0517                              u895 02DF  
                            u995 055C                              _abs 0165              ??_SPI1_Exchange8bit 0070  
                            _pad 02BD          __size_of_PMD_Initialize 0008                              wreg 0009  
                           ?_abs 0073                             l1611 02C9                             l1605 01BB  
                           l1621 02D5                             l1615 02D1                             l1625 02FE  
                           l1713 0706                             l1643 050C                             l1723 074C  
                           l1803 03BC                             l1645 0510                             l1733 0727  
                           l1741 07C0                             l1655 0527                             l1639 04E5  
                           l1583 02A4                             l1751 07D1                             l1719 071C  
                           l1823 0212                             l1911 063F                             l1593 0152  
                           l1665 056F                             l1657 0536                             l1681 0430  
                           l1745 07C7                             l1825 022F                             l1921 0660  
                           l1763 0128                             l1595 015E                             l1667 057B  
                           l1691 044C                             l1579 0281                             l1755 07DD  
                           l1845 0259                             l1677 0409                             l1933 0682  
                           l1855 018F                             l1695 047C                             l1689 043D  
                           l1697 0488                             l1793 03AB                             l1787 038A  
                           l1779 0350                             l1797 03B1                             ?_pad 0024  
                           l1889 05FC                             l1993 0102                             l1899 061D  
                           STR_1 0834                             STR_2 081D                             STR_3 0810  
                           STR_4 0800                             STR_5 0829                             STR_6 0834  
                           u1130 06C0                             u1140 06C1                             u1215 07BE  
                           u1235 073B                             u1245 0747                             u1405 0608  
                           _LATA 010C                             _LATB 010D                             u1095 046A  
                           u1415 0616                             _LATC 010E                             u1185 06FE  
                           u1425 0629                             u1435 0637                             u1365 0263  
                           u1445 064B                             u1455 0659                             u1617 0243  
                           u1465 066C                             u1385 05E7                             u1627 0136  
                           u1475 067A                             u1395 05F5                             u1485 068E  
                           u1495 069C                             _PMD0 0911                             _PMD1 0912  
                           _PMD2 0913                             _PMD3 0914                             _PMD4 0915  
                           _PMD5 0916                             _WPUA 020C                             _WPUB 020D  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           abs@a 0073                             _dbuf 00A8                             _main 00FF  
                           _dtoa 06A4                             _name 006F                             _prec 00A4  
                           _nout 00A0                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                    __CFG_BOREN$ON 0000  
                  __CFG_BORV$LOW 0000                             start 0002        __end_of_SPI1_Exchange8bit 012A  
                __end_of_Get_ADC 06A4                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                          ??_abs 0075                            ??_pad 007C   __size_of_OSCILLATOR_Initialize 0008  
  __end_of_OSCILLATOR_Initialize 0116                  __end_of___aodiv 05AE                            _ADACT 009F  
                          ?_main 0070                            ?_dtoa 0030                  __end_of___aomod 04BB  
                 __CFG_DEBUG$OFF 0000                            _OSCEN 091D                     vfpfcnvrt@fmt 004E  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          u93lld 04E3                            _flags 006C                   _WDT_Initialize 00EE  
                          _fputc 0278                            _fputs 01B7                            pad@fp 002B  
                          _width 00A2                            _putch 00EC                            dtoa@d 0030  
                          dtoa@i 004C                            dtoa@n 0044                            dtoa@p 003E  
                          dtoa@s 0042                            dtoa@w 0040                            status 0003  
                          wtemp0 007E                  __end_of_sprintf 01B7               __size_of_SPI_Write 0012  
       __size_of_SPI1_Initialize 0007                  __initialization 07EF                     __end_of_main 0106  
                   __end_of_dtoa 07EF                           ??_main 007E                           ??_dtoa 0038  
         __end_of_WDT_Initialize 00F2             __end_of_Display_Name 0278                           _ADCON0 009D  
                         _ADCON1 009E                           ?_fputc 0070                           ?_fputs 0078  
                         _ADRESH 009C                           _ADRESL 009B                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELC 018E  
             __CFG_RSTOSC$HFINT1 0000                           _RC2PPS 0EA2                           _RB6PPS 0E9E  
                         _ODCONA 028C                           _ODCONB 028D                           _ODCONC 028E  
                      ??_Get_ADC 006A                           u104lld 0407                           _OSCFRQ 091F  
                         _WDTCON 0097            SPI1_Exchange8bit@data 0070       __size_of_SPI1_Exchange8bit 000C  
                 __CFG_PWRTE$OFF 0000                     vfprintf@cfmt 0064                        ??___aodiv 0070  
                      ??___aomod 0070                   __CFG_STVREN$ON 0000                           _button 006E  
                         pad@buf 0024                           dtoa@fp 003D                           _strlen 014E  
              __end_of_SPI_Write 013C                           fputc@c 0070                   _PMD_Initialize 0116  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
             Display_Name@length 0078                  ?_WDT_Initialize 0070         ADC_GetConversion@channel 0073  
                         putch@c 0070                 __end_of_vfprintf 0238                        ??_sprintf 007D  
              _SYSTEM_Initialize 013C          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070                     __pidataBANK0 00ED              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 02BD                    __end_of_fputs 01DC                ??_SPI1_Initialize 0070  
                  __end_of_putch 00ED           __end_of_PMD_Initialize 011E                          ??_fputc 0073  
      __end_of_SYSTEM_Initialize 014E                          ??_fputs 0079                          ??_putch 0070  
                     __pbssBANK0 006C                       __pbssBANK1 00A0                   Get_ADC@string1 00D1  
                     __pmaintext 00FF                  __CFG_PPS1WAY$ON 0000                  ?_PMD_Initialize 0070  
        __size_of_ADC_Initialize 0008            __size_of_Display_Name 0040                          ?_strlen 0070  
                        _OSCCON1 0919                          _OSCCON3 091B               __size_of_vfpfcnvrt 00D2  
                        _OSCTUNE 091E                          _SSP1ADD 0212                          _SLRCONA 030C  
                        _SLRCONB 030D                          _SLRCONC 030E                          _SSP1BUF 0211  
              SPI_Write@incoming 0072                          _Get_ADC 05AE                     _Display_Name 0238  
                        ___aodiv 04BB                          ___aomod 03DF                        ?_vfprintf 005E  
                        __ptext1 013C                          __ptext2 00EE                          __ptext3 00F8  
                        __ptext4 0116                          __ptext5 01DC                          __ptext6 010E  
                        __ptext7 0106                          __ptext8 05AE                          __ptext9 0194  
                __size_of_strlen 0017            _OSCILLATOR_Initialize 010E                     __size_of_abs 0017  
                   __size_of_pad 0050         ??_PIN_MANAGER_Initialize 0070                          _printed 00A6  
     __size_of_SYSTEM_Initialize 0012                          _sprintf 0194                          clrloop0 00F3  
                        _switch1 00A7             end_of_initialization 07FD                          fputc@fp 0072  
                        fputs@fp 0078                __end_of_vfpfcnvrt 03DF              Display_Name@string1 0075  
                     ??_vfprintf 0061                          strlen@a 0073                          strlen@s 0070  
               ??_WDT_Initialize 0070                        _PORTCbits 000E                        _SPI_Write 012A  
               __CFG_FEXTOSC$OFF 0000                  _SPI1_Initialize 00F8                      vfpfcnvrt@ap 004F  
                    vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055                   _ADC_Initialize 0106  
         ?_OSCILLATOR_Initialize 0070                   __end_of_strlen 0165              start_initialization 07EF  
__size_of_PIN_MANAGER_Initialize 002D                      __end_of_abs 017C                      __end_of_pad 030D  
                     ?_SPI_Write 0070                 __CFG_LPBOREN$OFF 0000                      vfprintf@fmt 005E  
               ??_PMD_Initialize 0070           __end_of_ADC_Initialize 010E                      __pdataBANK0 006F  
                       ??_strlen 0072                        ___latbits 0002                        _adcResult 00DF  
                  __pcstackBANK0 0020                    __pcstackBANK1 00C8                 ___aodiv@dividend 0028  
        __end_of_SPI1_Initialize 00FF                         ?_Get_ADC 0070                        __pnvBANK1 00DF  
         _PIN_MANAGER_Initialize 01DC                         ?___aodiv 0020                         ?___aomod 0020  
               ___aodiv@quotient 0073                  ?_ADC_Initialize 0070                __size_of_vfprintf 002F  
               __CFG_WDTE$SWDTEN 0000                      ??_SPI_Write 0071                         ?_sprintf 0066  
                 __size_of_fputc 0045                   __size_of_fputs 0025                   __size_of_putch 0001  
                       _LATAbits 010C                         _LATCbits 010E                        clear_ram0 00F2  
                       _SSP1CON1 0215                         _SSP1STAT 0214                        _vfpfcnvrt 030D  
                     _ADCON0bits 009D                 ?_SPI1_Initialize 0070                 __size_of_Get_ADC 00F6  
                     vfprintf@ap 0060                       vfprintf@fp 0063                _ADC_GetConversion 017C  
        ??_OSCILLATOR_Initialize 0070               ?_ADC_GetConversion 0070                 __size_of___aodiv 00F3  
               __size_of___aomod 00DC                       ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020  
                ___aodiv@counter 0071              ??_ADC_GetConversion 0072                       sprintf@fmt 0066  
                       _dtoa$595 003B                         __ptext10 0209                         __ptext11 030D  
                       __ptext20 0238                         __ptext12 06A4                         __ptext21 014E  
                       __ptext13 02BD                         __ptext22 012A                         __ptext14 01B7  
                       __ptext23 011E                         __ptext15 0278                         __ptext24 017C  
                       __ptext16 00EC                         __ptext17 0165                         __ptext18 03DF  
                       __ptext19 04BB                     _SSP1CON1bits 0215                 __size_of_sprintf 0023  
                  __size_of_main 0007                    __size_of_dtoa 014B        __end_of_ADC_GetConversion 0194  
                       _vfprintf 0209                     _SSP1STATbits 0214                    Display_Name@i 007A  
               ___aomod@dividend 0028                       Get_ADC@val 00DD          __size_of_WDT_Initialize 0004  
                      sprintf@ap 00CA          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
               ??_ADC_Initialize 0070                    ?_Display_Name 0075                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 0800  
                  __pstringtext2 0810                    __pstringtext3 081D                    __pstringtext4 0829  
                  __pstringtext5 0834                    __pstringtext6 0000                         sprintf@f 00CC  
                       sprintf@s 00CB                       _SSP1DATPPS 0E21                       _SSP1CLKPPS 0E20  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0209       __size_of_ADC_GetConversion 0018  
                   ___aomod@sign 0072                   ??_Display_Name 0077  
