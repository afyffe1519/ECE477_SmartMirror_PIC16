

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 31 17:38:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F18345 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0097                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0197                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0219                     	;# 
   193  021A                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030D                     	;# 
   216  030E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0314                     	;# 
   222  0315                     	;# 
   223  0315                     	;# 
   224  0316                     	;# 
   225  0317                     	;# 
   226  0318                     	;# 
   227  038C                     	;# 
   228  038D                     	;# 
   229  038E                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  0393                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  0397                     	;# 
   237  0398                     	;# 
   238  0399                     	;# 
   239  039A                     	;# 
   240  039C                     	;# 
   241  039D                     	;# 
   242  039E                     	;# 
   243  039F                     	;# 
   244  0411                     	;# 
   245  0411                     	;# 
   246  0412                     	;# 
   247  0413                     	;# 
   248  0414                     	;# 
   249  0415                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  0418                     	;# 
   253  0418                     	;# 
   254  0419                     	;# 
   255  041A                     	;# 
   256  041B                     	;# 
   257  041C                     	;# 
   258  041D                     	;# 
   259  041E                     	;# 
   260  041F                     	;# 
   261  0498                     	;# 
   262  0498                     	;# 
   263  0499                     	;# 
   264  049A                     	;# 
   265  049B                     	;# 
   266  049B                     	;# 
   267  049C                     	;# 
   268  049D                     	;# 
   269  049E                     	;# 
   270  049F                     	;# 
   271  0617                     	;# 
   272  0618                     	;# 
   273  0619                     	;# 
   274  0619                     	;# 
   275  061A                     	;# 
   276  061B                     	;# 
   277  061C                     	;# 
   278  061C                     	;# 
   279  061F                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0696                     	;# 
   286  0697                     	;# 
   287  0698                     	;# 
   288  0699                     	;# 
   289  0711                     	;# 
   290  0712                     	;# 
   291  0713                     	;# 
   292  0714                     	;# 
   293  0715                     	;# 
   294  0716                     	;# 
   295  0717                     	;# 
   296  0718                     	;# 
   297  0719                     	;# 
   298  0891                     	;# 
   299  0891                     	;# 
   300  0891                     	;# 
   301  0891                     	;# 
   302  0891                     	;# 
   303  0891                     	;# 
   304  0892                     	;# 
   305  0892                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0893                     	;# 
   310  0893                     	;# 
   311  0893                     	;# 
   312  0893                     	;# 
   313  0894                     	;# 
   314  0894                     	;# 
   315  0894                     	;# 
   316  0895                     	;# 
   317  0895                     	;# 
   318  0895                     	;# 
   319  0896                     	;# 
   320  0896                     	;# 
   321  0896                     	;# 
   322  089B                     	;# 
   323  0911                     	;# 
   324  0912                     	;# 
   325  0913                     	;# 
   326  0914                     	;# 
   327  0915                     	;# 
   328  0916                     	;# 
   329  0918                     	;# 
   330  0919                     	;# 
   331  091A                     	;# 
   332  091B                     	;# 
   333  091C                     	;# 
   334  091D                     	;# 
   335  091E                     	;# 
   336  091F                     	;# 
   337  0E0F                     	;# 
   338  0E10                     	;# 
   339  0E11                     	;# 
   340  0E12                     	;# 
   341  0E13                     	;# 
   342  0E14                     	;# 
   343  0E15                     	;# 
   344  0E16                     	;# 
   345  0E17                     	;# 
   346  0E18                     	;# 
   347  0E19                     	;# 
   348  0E1A                     	;# 
   349  0E1B                     	;# 
   350  0E1C                     	;# 
   351  0E1D                     	;# 
   352  0E1E                     	;# 
   353  0E1F                     	;# 
   354  0E20                     	;# 
   355  0E21                     	;# 
   356  0E22                     	;# 
   357  0E24                     	;# 
   358  0E25                     	;# 
   359  0E28                     	;# 
   360  0E29                     	;# 
   361  0E2A                     	;# 
   362  0E2B                     	;# 
   363  0E2C                     	;# 
   364  0E2D                     	;# 
   365  0E2E                     	;# 
   366  0E2F                     	;# 
   367  0E90                     	;# 
   368  0E91                     	;# 
   369  0E92                     	;# 
   370  0E94                     	;# 
   371  0E95                     	;# 
   372  0E9C                     	;# 
   373  0E9D                     	;# 
   374  0E9E                     	;# 
   375  0E9F                     	;# 
   376  0EA0                     	;# 
   377  0EA1                     	;# 
   378  0EA2                     	;# 
   379  0EA3                     	;# 
   380  0EA4                     	;# 
   381  0EA5                     	;# 
   382  0EA6                     	;# 
   383  0EA7                     	;# 
   384  0F0F                     	;# 
   385  0F10                     	;# 
   386  0F11                     	;# 
   387  0F12                     	;# 
   388  0F13                     	;# 
   389  0F14                     	;# 
   390  0F15                     	;# 
   391  0F16                     	;# 
   392  0F17                     	;# 
   393  0F18                     	;# 
   394  0F19                     	;# 
   395  0F1A                     	;# 
   396  0F1B                     	;# 
   397  0F1C                     	;# 
   398  0F1D                     	;# 
   399  0F1E                     	;# 
   400  0F1F                     	;# 
   401  0F20                     	;# 
   402  0F21                     	;# 
   403  0F22                     	;# 
   404  0F23                     	;# 
   405  0F24                     	;# 
   406  0F25                     	;# 
   407  0F26                     	;# 
   408  0F27                     	;# 
   409  0F28                     	;# 
   410  0F29                     	;# 
   411  0F2A                     	;# 
   412  0F2B                     	;# 
   413  0F2C                     	;# 
   414  0F2D                     	;# 
   415  0F2E                     	;# 
   416  0F2F                     	;# 
   417  0F30                     	;# 
   418  0F31                     	;# 
   419  0F32                     	;# 
   420  0F33                     	;# 
   421  0F34                     	;# 
   422  0F35                     	;# 
   423  0F36                     	;# 
   424  0F37                     	;# 
   425  0FE4                     	;# 
   426  0FE5                     	;# 
   427  0FE6                     	;# 
   428  0FE7                     	;# 
   429  0FE8                     	;# 
   430  0FE9                     	;# 
   431  0FEA                     	;# 
   432  0FEB                     	;# 
   433  0FED                     	;# 
   434  0FEE                     	;# 
   435  0FEF                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0016                     	;# 
   460  0017                     	;# 
   461  0018                     	;# 
   462  0019                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001C                     	;# 
   467  001D                     	;# 
   468  001E                     	;# 
   469  001F                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0090                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0093                     	;# 
   477  0094                     	;# 
   478  0097                     	;# 
   479  009B                     	;# 
   480  009B                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  009F                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  0111                     	;# 
   489  0112                     	;# 
   490  0113                     	;# 
   491  0114                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0117                     	;# 
   495  0118                     	;# 
   496  0119                     	;# 
   497  018C                     	;# 
   498  018D                     	;# 
   499  018E                     	;# 
   500  0197                     	;# 
   501  0199                     	;# 
   502  0199                     	;# 
   503  0199                     	;# 
   504  019A                     	;# 
   505  019A                     	;# 
   506  019A                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019D                     	;# 
   517  019D                     	;# 
   518  019E                     	;# 
   519  019E                     	;# 
   520  019E                     	;# 
   521  019F                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  020C                     	;# 
   527  020D                     	;# 
   528  020E                     	;# 
   529  0211                     	;# 
   530  0211                     	;# 
   531  0212                     	;# 
   532  0212                     	;# 
   533  0213                     	;# 
   534  0213                     	;# 
   535  0214                     	;# 
   536  0214                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0216                     	;# 
   542  0216                     	;# 
   543  0217                     	;# 
   544  0217                     	;# 
   545  0219                     	;# 
   546  021A                     	;# 
   547  021B                     	;# 
   548  021C                     	;# 
   549  021D                     	;# 
   550  021D                     	;# 
   551  021E                     	;# 
   552  021F                     	;# 
   553  028C                     	;# 
   554  028D                     	;# 
   555  028E                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0294                     	;# 
   561  0295                     	;# 
   562  0295                     	;# 
   563  0296                     	;# 
   564  0297                     	;# 
   565  0298                     	;# 
   566  029F                     	;# 
   567  030C                     	;# 
   568  030D                     	;# 
   569  030E                     	;# 
   570  0311                     	;# 
   571  0311                     	;# 
   572  0312                     	;# 
   573  0313                     	;# 
   574  0314                     	;# 
   575  0315                     	;# 
   576  0315                     	;# 
   577  0316                     	;# 
   578  0317                     	;# 
   579  0318                     	;# 
   580  038C                     	;# 
   581  038D                     	;# 
   582  038E                     	;# 
   583  0391                     	;# 
   584  0392                     	;# 
   585  0393                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  0397                     	;# 
   590  0398                     	;# 
   591  0399                     	;# 
   592  039A                     	;# 
   593  039C                     	;# 
   594  039D                     	;# 
   595  039E                     	;# 
   596  039F                     	;# 
   597  0411                     	;# 
   598  0411                     	;# 
   599  0412                     	;# 
   600  0413                     	;# 
   601  0414                     	;# 
   602  0415                     	;# 
   603  0416                     	;# 
   604  0417                     	;# 
   605  0418                     	;# 
   606  0418                     	;# 
   607  0419                     	;# 
   608  041A                     	;# 
   609  041B                     	;# 
   610  041C                     	;# 
   611  041D                     	;# 
   612  041E                     	;# 
   613  041F                     	;# 
   614  0498                     	;# 
   615  0498                     	;# 
   616  0499                     	;# 
   617  049A                     	;# 
   618  049B                     	;# 
   619  049B                     	;# 
   620  049C                     	;# 
   621  049D                     	;# 
   622  049E                     	;# 
   623  049F                     	;# 
   624  0617                     	;# 
   625  0618                     	;# 
   626  0619                     	;# 
   627  0619                     	;# 
   628  061A                     	;# 
   629  061B                     	;# 
   630  061C                     	;# 
   631  061C                     	;# 
   632  061F                     	;# 
   633  0691                     	;# 
   634  0692                     	;# 
   635  0693                     	;# 
   636  0694                     	;# 
   637  0695                     	;# 
   638  0696                     	;# 
   639  0697                     	;# 
   640  0698                     	;# 
   641  0699                     	;# 
   642  0711                     	;# 
   643  0712                     	;# 
   644  0713                     	;# 
   645  0714                     	;# 
   646  0715                     	;# 
   647  0716                     	;# 
   648  0717                     	;# 
   649  0718                     	;# 
   650  0719                     	;# 
   651  0891                     	;# 
   652  0891                     	;# 
   653  0891                     	;# 
   654  0891                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0892                     	;# 
   658  0892                     	;# 
   659  0892                     	;# 
   660  0893                     	;# 
   661  0893                     	;# 
   662  0893                     	;# 
   663  0893                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0894                     	;# 
   667  0894                     	;# 
   668  0894                     	;# 
   669  0895                     	;# 
   670  0895                     	;# 
   671  0895                     	;# 
   672  0896                     	;# 
   673  0896                     	;# 
   674  0896                     	;# 
   675  089B                     	;# 
   676  0911                     	;# 
   677  0912                     	;# 
   678  0913                     	;# 
   679  0914                     	;# 
   680  0915                     	;# 
   681  0916                     	;# 
   682  0918                     	;# 
   683  0919                     	;# 
   684  091A                     	;# 
   685  091B                     	;# 
   686  091C                     	;# 
   687  091D                     	;# 
   688  091E                     	;# 
   689  091F                     	;# 
   690  0E0F                     	;# 
   691  0E10                     	;# 
   692  0E11                     	;# 
   693  0E12                     	;# 
   694  0E13                     	;# 
   695  0E14                     	;# 
   696  0E15                     	;# 
   697  0E16                     	;# 
   698  0E17                     	;# 
   699  0E18                     	;# 
   700  0E19                     	;# 
   701  0E1A                     	;# 
   702  0E1B                     	;# 
   703  0E1C                     	;# 
   704  0E1D                     	;# 
   705  0E1E                     	;# 
   706  0E1F                     	;# 
   707  0E20                     	;# 
   708  0E21                     	;# 
   709  0E22                     	;# 
   710  0E24                     	;# 
   711  0E25                     	;# 
   712  0E28                     	;# 
   713  0E29                     	;# 
   714  0E2A                     	;# 
   715  0E2B                     	;# 
   716  0E2C                     	;# 
   717  0E2D                     	;# 
   718  0E2E                     	;# 
   719  0E2F                     	;# 
   720  0E90                     	;# 
   721  0E91                     	;# 
   722  0E92                     	;# 
   723  0E94                     	;# 
   724  0E95                     	;# 
   725  0E9C                     	;# 
   726  0E9D                     	;# 
   727  0E9E                     	;# 
   728  0E9F                     	;# 
   729  0EA0                     	;# 
   730  0EA1                     	;# 
   731  0EA2                     	;# 
   732  0EA3                     	;# 
   733  0EA4                     	;# 
   734  0EA5                     	;# 
   735  0EA6                     	;# 
   736  0EA7                     	;# 
   737  0F0F                     	;# 
   738  0F10                     	;# 
   739  0F11                     	;# 
   740  0F12                     	;# 
   741  0F13                     	;# 
   742  0F14                     	;# 
   743  0F15                     	;# 
   744  0F16                     	;# 
   745  0F17                     	;# 
   746  0F18                     	;# 
   747  0F19                     	;# 
   748  0F1A                     	;# 
   749  0F1B                     	;# 
   750  0F1C                     	;# 
   751  0F1D                     	;# 
   752  0F1E                     	;# 
   753  0F1F                     	;# 
   754  0F20                     	;# 
   755  0F21                     	;# 
   756  0F22                     	;# 
   757  0F23                     	;# 
   758  0F24                     	;# 
   759  0F25                     	;# 
   760  0F26                     	;# 
   761  0F27                     	;# 
   762  0F28                     	;# 
   763  0F29                     	;# 
   764  0F2A                     	;# 
   765  0F2B                     	;# 
   766  0F2C                     	;# 
   767  0F2D                     	;# 
   768  0F2E                     	;# 
   769  0F2F                     	;# 
   770  0F30                     	;# 
   771  0F31                     	;# 
   772  0F32                     	;# 
   773  0F33                     	;# 
   774  0F34                     	;# 
   775  0F35                     	;# 
   776  0F36                     	;# 
   777  0F37                     	;# 
   778  0FE4                     	;# 
   779  0FE5                     	;# 
   780  0FE6                     	;# 
   781  0FE7                     	;# 
   782  0FE8                     	;# 
   783  0FE9                     	;# 
   784  0FEA                     	;# 
   785  0FEB                     	;# 
   786  0FED                     	;# 
   787  0FEE                     	;# 
   788  0FEF                     	;# 
   789  0000                     	;# 
   790  0001                     	;# 
   791  0002                     	;# 
   792  0003                     	;# 
   793  0004                     	;# 
   794  0005                     	;# 
   795  0006                     	;# 
   796  0007                     	;# 
   797  0008                     	;# 
   798  0009                     	;# 
   799  000A                     	;# 
   800  000B                     	;# 
   801  000C                     	;# 
   802  000D                     	;# 
   803  000E                     	;# 
   804  0010                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0013                     	;# 
   808  0014                     	;# 
   809  0015                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  0019                     	;# 
   817  001A                     	;# 
   818  001B                     	;# 
   819  001C                     	;# 
   820  001D                     	;# 
   821  001E                     	;# 
   822  001F                     	;# 
   823  008C                     	;# 
   824  008D                     	;# 
   825  008E                     	;# 
   826  0090                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0093                     	;# 
   830  0094                     	;# 
   831  0097                     	;# 
   832  009B                     	;# 
   833  009B                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  009F                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018E                     	;# 
   853  0197                     	;# 
   854  0199                     	;# 
   855  0199                     	;# 
   856  0199                     	;# 
   857  019A                     	;# 
   858  019A                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  019C                     	;# 
   867  019C                     	;# 
   868  019D                     	;# 
   869  019D                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019E                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  019F                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  020C                     	;# 
   880  020D                     	;# 
   881  020E                     	;# 
   882  0211                     	;# 
   883  0211                     	;# 
   884  0212                     	;# 
   885  0212                     	;# 
   886  0213                     	;# 
   887  0213                     	;# 
   888  0214                     	;# 
   889  0214                     	;# 
   890  0215                     	;# 
   891  0215                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0216                     	;# 
   895  0216                     	;# 
   896  0217                     	;# 
   897  0217                     	;# 
   898  0219                     	;# 
   899  021A                     	;# 
   900  021B                     	;# 
   901  021C                     	;# 
   902  021D                     	;# 
   903  021D                     	;# 
   904  021E                     	;# 
   905  021F                     	;# 
   906  028C                     	;# 
   907  028D                     	;# 
   908  028E                     	;# 
   909  0291                     	;# 
   910  0291                     	;# 
   911  0292                     	;# 
   912  0293                     	;# 
   913  0294                     	;# 
   914  0295                     	;# 
   915  0295                     	;# 
   916  0296                     	;# 
   917  0297                     	;# 
   918  0298                     	;# 
   919  029F                     	;# 
   920  030C                     	;# 
   921  030D                     	;# 
   922  030E                     	;# 
   923  0311                     	;# 
   924  0311                     	;# 
   925  0312                     	;# 
   926  0313                     	;# 
   927  0314                     	;# 
   928  0315                     	;# 
   929  0315                     	;# 
   930  0316                     	;# 
   931  0317                     	;# 
   932  0318                     	;# 
   933  038C                     	;# 
   934  038D                     	;# 
   935  038E                     	;# 
   936  0391                     	;# 
   937  0392                     	;# 
   938  0393                     	;# 
   939  0394                     	;# 
   940  0395                     	;# 
   941  0396                     	;# 
   942  0397                     	;# 
   943  0398                     	;# 
   944  0399                     	;# 
   945  039A                     	;# 
   946  039C                     	;# 
   947  039D                     	;# 
   948  039E                     	;# 
   949  039F                     	;# 
   950  0411                     	;# 
   951  0411                     	;# 
   952  0412                     	;# 
   953  0413                     	;# 
   954  0414                     	;# 
   955  0415                     	;# 
   956  0416                     	;# 
   957  0417                     	;# 
   958  0418                     	;# 
   959  0418                     	;# 
   960  0419                     	;# 
   961  041A                     	;# 
   962  041B                     	;# 
   963  041C                     	;# 
   964  041D                     	;# 
   965  041E                     	;# 
   966  041F                     	;# 
   967  0498                     	;# 
   968  0498                     	;# 
   969  0499                     	;# 
   970  049A                     	;# 
   971  049B                     	;# 
   972  049B                     	;# 
   973  049C                     	;# 
   974  049D                     	;# 
   975  049E                     	;# 
   976  049F                     	;# 
   977  0617                     	;# 
   978  0618                     	;# 
   979  0619                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061C                     	;# 
   985  061F                     	;# 
   986  0691                     	;# 
   987  0692                     	;# 
   988  0693                     	;# 
   989  0694                     	;# 
   990  0695                     	;# 
   991  0696                     	;# 
   992  0697                     	;# 
   993  0698                     	;# 
   994  0699                     	;# 
   995  0711                     	;# 
   996  0712                     	;# 
   997  0713                     	;# 
   998  0714                     	;# 
   999  0715                     	;# 
  1000  0716                     	;# 
  1001  0717                     	;# 
  1002  0718                     	;# 
  1003  0719                     	;# 
  1004  0891                     	;# 
  1005  0891                     	;# 
  1006  0891                     	;# 
  1007  0891                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0892                     	;# 
  1011  0892                     	;# 
  1012  0892                     	;# 
  1013  0893                     	;# 
  1014  0893                     	;# 
  1015  0893                     	;# 
  1016  0893                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0894                     	;# 
  1020  0894                     	;# 
  1021  0894                     	;# 
  1022  0895                     	;# 
  1023  0895                     	;# 
  1024  0895                     	;# 
  1025  0896                     	;# 
  1026  0896                     	;# 
  1027  0896                     	;# 
  1028  089B                     	;# 
  1029  0911                     	;# 
  1030  0912                     	;# 
  1031  0913                     	;# 
  1032  0914                     	;# 
  1033  0915                     	;# 
  1034  0916                     	;# 
  1035  0918                     	;# 
  1036  0919                     	;# 
  1037  091A                     	;# 
  1038  091B                     	;# 
  1039  091C                     	;# 
  1040  091D                     	;# 
  1041  091E                     	;# 
  1042  091F                     	;# 
  1043  0E0F                     	;# 
  1044  0E10                     	;# 
  1045  0E11                     	;# 
  1046  0E12                     	;# 
  1047  0E13                     	;# 
  1048  0E14                     	;# 
  1049  0E15                     	;# 
  1050  0E16                     	;# 
  1051  0E17                     	;# 
  1052  0E18                     	;# 
  1053  0E19                     	;# 
  1054  0E1A                     	;# 
  1055  0E1B                     	;# 
  1056  0E1C                     	;# 
  1057  0E1D                     	;# 
  1058  0E1E                     	;# 
  1059  0E1F                     	;# 
  1060  0E20                     	;# 
  1061  0E21                     	;# 
  1062  0E22                     	;# 
  1063  0E24                     	;# 
  1064  0E25                     	;# 
  1065  0E28                     	;# 
  1066  0E29                     	;# 
  1067  0E2A                     	;# 
  1068  0E2B                     	;# 
  1069  0E2C                     	;# 
  1070  0E2D                     	;# 
  1071  0E2E                     	;# 
  1072  0E2F                     	;# 
  1073  0E90                     	;# 
  1074  0E91                     	;# 
  1075  0E92                     	;# 
  1076  0E94                     	;# 
  1077  0E95                     	;# 
  1078  0E9C                     	;# 
  1079  0E9D                     	;# 
  1080  0E9E                     	;# 
  1081  0E9F                     	;# 
  1082  0EA0                     	;# 
  1083  0EA1                     	;# 
  1084  0EA2                     	;# 
  1085  0EA3                     	;# 
  1086  0EA4                     	;# 
  1087  0EA5                     	;# 
  1088  0EA6                     	;# 
  1089  0EA7                     	;# 
  1090  0F0F                     	;# 
  1091  0F10                     	;# 
  1092  0F11                     	;# 
  1093  0F12                     	;# 
  1094  0F13                     	;# 
  1095  0F14                     	;# 
  1096  0F15                     	;# 
  1097  0F16                     	;# 
  1098  0F17                     	;# 
  1099  0F18                     	;# 
  1100  0F19                     	;# 
  1101  0F1A                     	;# 
  1102  0F1B                     	;# 
  1103  0F1C                     	;# 
  1104  0F1D                     	;# 
  1105  0F1E                     	;# 
  1106  0F1F                     	;# 
  1107  0F20                     	;# 
  1108  0F21                     	;# 
  1109  0F22                     	;# 
  1110  0F23                     	;# 
  1111  0F24                     	;# 
  1112  0F25                     	;# 
  1113  0F26                     	;# 
  1114  0F27                     	;# 
  1115  0F28                     	;# 
  1116  0F29                     	;# 
  1117  0F2A                     	;# 
  1118  0F2B                     	;# 
  1119  0F2C                     	;# 
  1120  0F2D                     	;# 
  1121  0F2E                     	;# 
  1122  0F2F                     	;# 
  1123  0F30                     	;# 
  1124  0F31                     	;# 
  1125  0F32                     	;# 
  1126  0F33                     	;# 
  1127  0F34                     	;# 
  1128  0F35                     	;# 
  1129  0F36                     	;# 
  1130  0F37                     	;# 
  1131  0FE4                     	;# 
  1132  0FE5                     	;# 
  1133  0FE6                     	;# 
  1134  0FE7                     	;# 
  1135  0FE8                     	;# 
  1136  0FE9                     	;# 
  1137  0FEA                     	;# 
  1138  0FEB                     	;# 
  1139  0FED                     	;# 
  1140  0FEE                     	;# 
  1141  0FEF                     	;# 
  1142  0000                     	;# 
  1143  0001                     	;# 
  1144  0002                     	;# 
  1145  0003                     	;# 
  1146  0004                     	;# 
  1147  0005                     	;# 
  1148  0006                     	;# 
  1149  0007                     	;# 
  1150  0008                     	;# 
  1151  0009                     	;# 
  1152  000A                     	;# 
  1153  000B                     	;# 
  1154  000C                     	;# 
  1155  000D                     	;# 
  1156  000E                     	;# 
  1157  0010                     	;# 
  1158  0011                     	;# 
  1159  0012                     	;# 
  1160  0013                     	;# 
  1161  0014                     	;# 
  1162  0015                     	;# 
  1163  0015                     	;# 
  1164  0016                     	;# 
  1165  0016                     	;# 
  1166  0017                     	;# 
  1167  0018                     	;# 
  1168  0019                     	;# 
  1169  0019                     	;# 
  1170  001A                     	;# 
  1171  001B                     	;# 
  1172  001C                     	;# 
  1173  001D                     	;# 
  1174  001E                     	;# 
  1175  001F                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0092                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0097                     	;# 
  1185  009B                     	;# 
  1186  009B                     	;# 
  1187  009C                     	;# 
  1188  009D                     	;# 
  1189  009E                     	;# 
  1190  009F                     	;# 
  1191  010C                     	;# 
  1192  010D                     	;# 
  1193  010E                     	;# 
  1194  0111                     	;# 
  1195  0112                     	;# 
  1196  0113                     	;# 
  1197  0114                     	;# 
  1198  0115                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  0118                     	;# 
  1202  0119                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  0197                     	;# 
  1207  0199                     	;# 
  1208  0199                     	;# 
  1209  0199                     	;# 
  1210  019A                     	;# 
  1211  019A                     	;# 
  1212  019A                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019C                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019D                     	;# 
  1222  019D                     	;# 
  1223  019D                     	;# 
  1224  019E                     	;# 
  1225  019E                     	;# 
  1226  019E                     	;# 
  1227  019F                     	;# 
  1228  019F                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  019F                     	;# 
  1232  020C                     	;# 
  1233  020D                     	;# 
  1234  020E                     	;# 
  1235  0211                     	;# 
  1236  0211                     	;# 
  1237  0212                     	;# 
  1238  0212                     	;# 
  1239  0213                     	;# 
  1240  0213                     	;# 
  1241  0214                     	;# 
  1242  0214                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0216                     	;# 
  1248  0216                     	;# 
  1249  0217                     	;# 
  1250  0217                     	;# 
  1251  0219                     	;# 
  1252  021A                     	;# 
  1253  021B                     	;# 
  1254  021C                     	;# 
  1255  021D                     	;# 
  1256  021D                     	;# 
  1257  021E                     	;# 
  1258  021F                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028E                     	;# 
  1262  0291                     	;# 
  1263  0291                     	;# 
  1264  0292                     	;# 
  1265  0293                     	;# 
  1266  0294                     	;# 
  1267  0295                     	;# 
  1268  0295                     	;# 
  1269  0296                     	;# 
  1270  0297                     	;# 
  1271  0298                     	;# 
  1272  029F                     	;# 
  1273  030C                     	;# 
  1274  030D                     	;# 
  1275  030E                     	;# 
  1276  0311                     	;# 
  1277  0311                     	;# 
  1278  0312                     	;# 
  1279  0313                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0315                     	;# 
  1283  0316                     	;# 
  1284  0317                     	;# 
  1285  0318                     	;# 
  1286  038C                     	;# 
  1287  038D                     	;# 
  1288  038E                     	;# 
  1289  0391                     	;# 
  1290  0392                     	;# 
  1291  0393                     	;# 
  1292  0394                     	;# 
  1293  0395                     	;# 
  1294  0396                     	;# 
  1295  0397                     	;# 
  1296  0398                     	;# 
  1297  0399                     	;# 
  1298  039A                     	;# 
  1299  039C                     	;# 
  1300  039D                     	;# 
  1301  039E                     	;# 
  1302  039F                     	;# 
  1303  0411                     	;# 
  1304  0411                     	;# 
  1305  0412                     	;# 
  1306  0413                     	;# 
  1307  0414                     	;# 
  1308  0415                     	;# 
  1309  0416                     	;# 
  1310  0417                     	;# 
  1311  0418                     	;# 
  1312  0418                     	;# 
  1313  0419                     	;# 
  1314  041A                     	;# 
  1315  041B                     	;# 
  1316  041C                     	;# 
  1317  041D                     	;# 
  1318  041E                     	;# 
  1319  041F                     	;# 
  1320  0498                     	;# 
  1321  0498                     	;# 
  1322  0499                     	;# 
  1323  049A                     	;# 
  1324  049B                     	;# 
  1325  049B                     	;# 
  1326  049C                     	;# 
  1327  049D                     	;# 
  1328  049E                     	;# 
  1329  049F                     	;# 
  1330  0617                     	;# 
  1331  0618                     	;# 
  1332  0619                     	;# 
  1333  0619                     	;# 
  1334  061A                     	;# 
  1335  061B                     	;# 
  1336  061C                     	;# 
  1337  061C                     	;# 
  1338  061F                     	;# 
  1339  0691                     	;# 
  1340  0692                     	;# 
  1341  0693                     	;# 
  1342  0694                     	;# 
  1343  0695                     	;# 
  1344  0696                     	;# 
  1345  0697                     	;# 
  1346  0698                     	;# 
  1347  0699                     	;# 
  1348  0711                     	;# 
  1349  0712                     	;# 
  1350  0713                     	;# 
  1351  0714                     	;# 
  1352  0715                     	;# 
  1353  0716                     	;# 
  1354  0717                     	;# 
  1355  0718                     	;# 
  1356  0719                     	;# 
  1357  0891                     	;# 
  1358  0891                     	;# 
  1359  0891                     	;# 
  1360  0891                     	;# 
  1361  0891                     	;# 
  1362  0891                     	;# 
  1363  0892                     	;# 
  1364  0892                     	;# 
  1365  0892                     	;# 
  1366  0893                     	;# 
  1367  0893                     	;# 
  1368  0893                     	;# 
  1369  0893                     	;# 
  1370  0893                     	;# 
  1371  0893                     	;# 
  1372  0894                     	;# 
  1373  0894                     	;# 
  1374  0894                     	;# 
  1375  0895                     	;# 
  1376  0895                     	;# 
  1377  0895                     	;# 
  1378  0896                     	;# 
  1379  0896                     	;# 
  1380  0896                     	;# 
  1381  089B                     	;# 
  1382  0911                     	;# 
  1383  0912                     	;# 
  1384  0913                     	;# 
  1385  0914                     	;# 
  1386  0915                     	;# 
  1387  0916                     	;# 
  1388  0918                     	;# 
  1389  0919                     	;# 
  1390  091A                     	;# 
  1391  091B                     	;# 
  1392  091C                     	;# 
  1393  091D                     	;# 
  1394  091E                     	;# 
  1395  091F                     	;# 
  1396  0E0F                     	;# 
  1397  0E10                     	;# 
  1398  0E11                     	;# 
  1399  0E12                     	;# 
  1400  0E13                     	;# 
  1401  0E14                     	;# 
  1402  0E15                     	;# 
  1403  0E16                     	;# 
  1404  0E17                     	;# 
  1405  0E18                     	;# 
  1406  0E19                     	;# 
  1407  0E1A                     	;# 
  1408  0E1B                     	;# 
  1409  0E1C                     	;# 
  1410  0E1D                     	;# 
  1411  0E1E                     	;# 
  1412  0E1F                     	;# 
  1413  0E20                     	;# 
  1414  0E21                     	;# 
  1415  0E22                     	;# 
  1416  0E24                     	;# 
  1417  0E25                     	;# 
  1418  0E28                     	;# 
  1419  0E29                     	;# 
  1420  0E2A                     	;# 
  1421  0E2B                     	;# 
  1422  0E2C                     	;# 
  1423  0E2D                     	;# 
  1424  0E2E                     	;# 
  1425  0E2F                     	;# 
  1426  0E90                     	;# 
  1427  0E91                     	;# 
  1428  0E92                     	;# 
  1429  0E94                     	;# 
  1430  0E95                     	;# 
  1431  0E9C                     	;# 
  1432  0E9D                     	;# 
  1433  0E9E                     	;# 
  1434  0E9F                     	;# 
  1435  0EA0                     	;# 
  1436  0EA1                     	;# 
  1437  0EA2                     	;# 
  1438  0EA3                     	;# 
  1439  0EA4                     	;# 
  1440  0EA5                     	;# 
  1441  0EA6                     	;# 
  1442  0EA7                     	;# 
  1443  0F0F                     	;# 
  1444  0F10                     	;# 
  1445  0F11                     	;# 
  1446  0F12                     	;# 
  1447  0F13                     	;# 
  1448  0F14                     	;# 
  1449  0F15                     	;# 
  1450  0F16                     	;# 
  1451  0F17                     	;# 
  1452  0F18                     	;# 
  1453  0F19                     	;# 
  1454  0F1A                     	;# 
  1455  0F1B                     	;# 
  1456  0F1C                     	;# 
  1457  0F1D                     	;# 
  1458  0F1E                     	;# 
  1459  0F1F                     	;# 
  1460  0F20                     	;# 
  1461  0F21                     	;# 
  1462  0F22                     	;# 
  1463  0F23                     	;# 
  1464  0F24                     	;# 
  1465  0F25                     	;# 
  1466  0F26                     	;# 
  1467  0F27                     	;# 
  1468  0F28                     	;# 
  1469  0F29                     	;# 
  1470  0F2A                     	;# 
  1471  0F2B                     	;# 
  1472  0F2C                     	;# 
  1473  0F2D                     	;# 
  1474  0F2E                     	;# 
  1475  0F2F                     	;# 
  1476  0F30                     	;# 
  1477  0F31                     	;# 
  1478  0F32                     	;# 
  1479  0F33                     	;# 
  1480  0F34                     	;# 
  1481  0F35                     	;# 
  1482  0F36                     	;# 
  1483  0F37                     	;# 
  1484  0FE4                     	;# 
  1485  0FE5                     	;# 
  1486  0FE6                     	;# 
  1487  0FE7                     	;# 
  1488  0FE8                     	;# 
  1489  0FE9                     	;# 
  1490  0FEA                     	;# 
  1491  0FEB                     	;# 
  1492  0FED                     	;# 
  1493  0FEE                     	;# 
  1494  0FEF                     	;# 
  1495  0000                     	;# 
  1496  0001                     	;# 
  1497  0002                     	;# 
  1498  0003                     	;# 
  1499  0004                     	;# 
  1500  0005                     	;# 
  1501  0006                     	;# 
  1502  0007                     	;# 
  1503  0008                     	;# 
  1504  0009                     	;# 
  1505  000A                     	;# 
  1506  000B                     	;# 
  1507  000C                     	;# 
  1508  000D                     	;# 
  1509  000E                     	;# 
  1510  0010                     	;# 
  1511  0011                     	;# 
  1512  0012                     	;# 
  1513  0013                     	;# 
  1514  0014                     	;# 
  1515  0015                     	;# 
  1516  0015                     	;# 
  1517  0016                     	;# 
  1518  0016                     	;# 
  1519  0017                     	;# 
  1520  0018                     	;# 
  1521  0019                     	;# 
  1522  0019                     	;# 
  1523  001A                     	;# 
  1524  001B                     	;# 
  1525  001C                     	;# 
  1526  001D                     	;# 
  1527  001E                     	;# 
  1528  001F                     	;# 
  1529  008C                     	;# 
  1530  008D                     	;# 
  1531  008E                     	;# 
  1532  0090                     	;# 
  1533  0091                     	;# 
  1534  0092                     	;# 
  1535  0093                     	;# 
  1536  0094                     	;# 
  1537  0097                     	;# 
  1538  009B                     	;# 
  1539  009B                     	;# 
  1540  009C                     	;# 
  1541  009D                     	;# 
  1542  009E                     	;# 
  1543  009F                     	;# 
  1544  010C                     	;# 
  1545  010D                     	;# 
  1546  010E                     	;# 
  1547  0111                     	;# 
  1548  0112                     	;# 
  1549  0113                     	;# 
  1550  0114                     	;# 
  1551  0115                     	;# 
  1552  0116                     	;# 
  1553  0117                     	;# 
  1554  0118                     	;# 
  1555  0119                     	;# 
  1556  018C                     	;# 
  1557  018D                     	;# 
  1558  018E                     	;# 
  1559  0197                     	;# 
  1560  0199                     	;# 
  1561  0199                     	;# 
  1562  0199                     	;# 
  1563  019A                     	;# 
  1564  019A                     	;# 
  1565  019A                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019B                     	;# 
  1570  019B                     	;# 
  1571  019C                     	;# 
  1572  019C                     	;# 
  1573  019C                     	;# 
  1574  019D                     	;# 
  1575  019D                     	;# 
  1576  019D                     	;# 
  1577  019E                     	;# 
  1578  019E                     	;# 
  1579  019E                     	;# 
  1580  019F                     	;# 
  1581  019F                     	;# 
  1582  019F                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  020C                     	;# 
  1586  020D                     	;# 
  1587  020E                     	;# 
  1588  0211                     	;# 
  1589  0211                     	;# 
  1590  0212                     	;# 
  1591  0212                     	;# 
  1592  0213                     	;# 
  1593  0213                     	;# 
  1594  0214                     	;# 
  1595  0214                     	;# 
  1596  0215                     	;# 
  1597  0215                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0216                     	;# 
  1601  0216                     	;# 
  1602  0217                     	;# 
  1603  0217                     	;# 
  1604  0219                     	;# 
  1605  021A                     	;# 
  1606  021B                     	;# 
  1607  021C                     	;# 
  1608  021D                     	;# 
  1609  021D                     	;# 
  1610  021E                     	;# 
  1611  021F                     	;# 
  1612  028C                     	;# 
  1613  028D                     	;# 
  1614  028E                     	;# 
  1615  0291                     	;# 
  1616  0291                     	;# 
  1617  0292                     	;# 
  1618  0293                     	;# 
  1619  0294                     	;# 
  1620  0295                     	;# 
  1621  0295                     	;# 
  1622  0296                     	;# 
  1623  0297                     	;# 
  1624  0298                     	;# 
  1625  029F                     	;# 
  1626  030C                     	;# 
  1627  030D                     	;# 
  1628  030E                     	;# 
  1629  0311                     	;# 
  1630  0311                     	;# 
  1631  0312                     	;# 
  1632  0313                     	;# 
  1633  0314                     	;# 
  1634  0315                     	;# 
  1635  0315                     	;# 
  1636  0316                     	;# 
  1637  0317                     	;# 
  1638  0318                     	;# 
  1639  038C                     	;# 
  1640  038D                     	;# 
  1641  038E                     	;# 
  1642  0391                     	;# 
  1643  0392                     	;# 
  1644  0393                     	;# 
  1645  0394                     	;# 
  1646  0395                     	;# 
  1647  0396                     	;# 
  1648  0397                     	;# 
  1649  0398                     	;# 
  1650  0399                     	;# 
  1651  039A                     	;# 
  1652  039C                     	;# 
  1653  039D                     	;# 
  1654  039E                     	;# 
  1655  039F                     	;# 
  1656  0411                     	;# 
  1657  0411                     	;# 
  1658  0412                     	;# 
  1659  0413                     	;# 
  1660  0414                     	;# 
  1661  0415                     	;# 
  1662  0416                     	;# 
  1663  0417                     	;# 
  1664  0418                     	;# 
  1665  0418                     	;# 
  1666  0419                     	;# 
  1667  041A                     	;# 
  1668  041B                     	;# 
  1669  041C                     	;# 
  1670  041D                     	;# 
  1671  041E                     	;# 
  1672  041F                     	;# 
  1673  0498                     	;# 
  1674  0498                     	;# 
  1675  0499                     	;# 
  1676  049A                     	;# 
  1677  049B                     	;# 
  1678  049B                     	;# 
  1679  049C                     	;# 
  1680  049D                     	;# 
  1681  049E                     	;# 
  1682  049F                     	;# 
  1683  0617                     	;# 
  1684  0618                     	;# 
  1685  0619                     	;# 
  1686  0619                     	;# 
  1687  061A                     	;# 
  1688  061B                     	;# 
  1689  061C                     	;# 
  1690  061C                     	;# 
  1691  061F                     	;# 
  1692  0691                     	;# 
  1693  0692                     	;# 
  1694  0693                     	;# 
  1695  0694                     	;# 
  1696  0695                     	;# 
  1697  0696                     	;# 
  1698  0697                     	;# 
  1699  0698                     	;# 
  1700  0699                     	;# 
  1701  0711                     	;# 
  1702  0712                     	;# 
  1703  0713                     	;# 
  1704  0714                     	;# 
  1705  0715                     	;# 
  1706  0716                     	;# 
  1707  0717                     	;# 
  1708  0718                     	;# 
  1709  0719                     	;# 
  1710  0891                     	;# 
  1711  0891                     	;# 
  1712  0891                     	;# 
  1713  0891                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0892                     	;# 
  1717  0892                     	;# 
  1718  0892                     	;# 
  1719  0893                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0894                     	;# 
  1726  0894                     	;# 
  1727  0894                     	;# 
  1728  0895                     	;# 
  1729  0895                     	;# 
  1730  0895                     	;# 
  1731  0896                     	;# 
  1732  0896                     	;# 
  1733  0896                     	;# 
  1734  089B                     	;# 
  1735  0911                     	;# 
  1736  0912                     	;# 
  1737  0913                     	;# 
  1738  0914                     	;# 
  1739  0915                     	;# 
  1740  0916                     	;# 
  1741  0918                     	;# 
  1742  0919                     	;# 
  1743  091A                     	;# 
  1744  091B                     	;# 
  1745  091C                     	;# 
  1746  091D                     	;# 
  1747  091E                     	;# 
  1748  091F                     	;# 
  1749  0E0F                     	;# 
  1750  0E10                     	;# 
  1751  0E11                     	;# 
  1752  0E12                     	;# 
  1753  0E13                     	;# 
  1754  0E14                     	;# 
  1755  0E15                     	;# 
  1756  0E16                     	;# 
  1757  0E17                     	;# 
  1758  0E18                     	;# 
  1759  0E19                     	;# 
  1760  0E1A                     	;# 
  1761  0E1B                     	;# 
  1762  0E1C                     	;# 
  1763  0E1D                     	;# 
  1764  0E1E                     	;# 
  1765  0E1F                     	;# 
  1766  0E20                     	;# 
  1767  0E21                     	;# 
  1768  0E22                     	;# 
  1769  0E24                     	;# 
  1770  0E25                     	;# 
  1771  0E28                     	;# 
  1772  0E29                     	;# 
  1773  0E2A                     	;# 
  1774  0E2B                     	;# 
  1775  0E2C                     	;# 
  1776  0E2D                     	;# 
  1777  0E2E                     	;# 
  1778  0E2F                     	;# 
  1779  0E90                     	;# 
  1780  0E91                     	;# 
  1781  0E92                     	;# 
  1782  0E94                     	;# 
  1783  0E95                     	;# 
  1784  0E9C                     	;# 
  1785  0E9D                     	;# 
  1786  0E9E                     	;# 
  1787  0E9F                     	;# 
  1788  0EA0                     	;# 
  1789  0EA1                     	;# 
  1790  0EA2                     	;# 
  1791  0EA3                     	;# 
  1792  0EA4                     	;# 
  1793  0EA5                     	;# 
  1794  0EA6                     	;# 
  1795  0EA7                     	;# 
  1796  0F0F                     	;# 
  1797  0F10                     	;# 
  1798  0F11                     	;# 
  1799  0F12                     	;# 
  1800  0F13                     	;# 
  1801  0F14                     	;# 
  1802  0F15                     	;# 
  1803  0F16                     	;# 
  1804  0F17                     	;# 
  1805  0F18                     	;# 
  1806  0F19                     	;# 
  1807  0F1A                     	;# 
  1808  0F1B                     	;# 
  1809  0F1C                     	;# 
  1810  0F1D                     	;# 
  1811  0F1E                     	;# 
  1812  0F1F                     	;# 
  1813  0F20                     	;# 
  1814  0F21                     	;# 
  1815  0F22                     	;# 
  1816  0F23                     	;# 
  1817  0F24                     	;# 
  1818  0F25                     	;# 
  1819  0F26                     	;# 
  1820  0F27                     	;# 
  1821  0F28                     	;# 
  1822  0F29                     	;# 
  1823  0F2A                     	;# 
  1824  0F2B                     	;# 
  1825  0F2C                     	;# 
  1826  0F2D                     	;# 
  1827  0F2E                     	;# 
  1828  0F2F                     	;# 
  1829  0F30                     	;# 
  1830  0F31                     	;# 
  1831  0F32                     	;# 
  1832  0F33                     	;# 
  1833  0F34                     	;# 
  1834  0F35                     	;# 
  1835  0F36                     	;# 
  1836  0F37                     	;# 
  1837  0FE4                     	;# 
  1838  0FE5                     	;# 
  1839  0FE6                     	;# 
  1840  0FE7                     	;# 
  1841  0FE8                     	;# 
  1842  0FE9                     	;# 
  1843  0FEA                     	;# 
  1844  0FEB                     	;# 
  1845  0FED                     	;# 
  1846  0FEE                     	;# 
  1847  0FEF                     	;# 
  1848  0000                     	;# 
  1849  0001                     	;# 
  1850  0002                     	;# 
  1851  0003                     	;# 
  1852  0004                     	;# 
  1853  0005                     	;# 
  1854  0006                     	;# 
  1855  0007                     	;# 
  1856  0008                     	;# 
  1857  0009                     	;# 
  1858  000A                     	;# 
  1859  000B                     	;# 
  1860  000C                     	;# 
  1861  000D                     	;# 
  1862  000E                     	;# 
  1863  0010                     	;# 
  1864  0011                     	;# 
  1865  0012                     	;# 
  1866  0013                     	;# 
  1867  0014                     	;# 
  1868  0015                     	;# 
  1869  0015                     	;# 
  1870  0016                     	;# 
  1871  0016                     	;# 
  1872  0017                     	;# 
  1873  0018                     	;# 
  1874  0019                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001D                     	;# 
  1880  001E                     	;# 
  1881  001F                     	;# 
  1882  008C                     	;# 
  1883  008D                     	;# 
  1884  008E                     	;# 
  1885  0090                     	;# 
  1886  0091                     	;# 
  1887  0092                     	;# 
  1888  0093                     	;# 
  1889  0094                     	;# 
  1890  0097                     	;# 
  1891  009B                     	;# 
  1892  009B                     	;# 
  1893  009C                     	;# 
  1894  009D                     	;# 
  1895  009E                     	;# 
  1896  009F                     	;# 
  1897  010C                     	;# 
  1898  010D                     	;# 
  1899  010E                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0197                     	;# 
  1913  0199                     	;# 
  1914  0199                     	;# 
  1915  0199                     	;# 
  1916  019A                     	;# 
  1917  019A                     	;# 
  1918  019A                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019C                     	;# 
  1925  019C                     	;# 
  1926  019C                     	;# 
  1927  019D                     	;# 
  1928  019D                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019E                     	;# 
  1932  019E                     	;# 
  1933  019F                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  020C                     	;# 
  1939  020D                     	;# 
  1940  020E                     	;# 
  1941  0211                     	;# 
  1942  0211                     	;# 
  1943  0212                     	;# 
  1944  0212                     	;# 
  1945  0213                     	;# 
  1946  0213                     	;# 
  1947  0214                     	;# 
  1948  0214                     	;# 
  1949  0215                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0216                     	;# 
  1954  0216                     	;# 
  1955  0217                     	;# 
  1956  0217                     	;# 
  1957  0219                     	;# 
  1958  021A                     	;# 
  1959  021B                     	;# 
  1960  021C                     	;# 
  1961  021D                     	;# 
  1962  021D                     	;# 
  1963  021E                     	;# 
  1964  021F                     	;# 
  1965  028C                     	;# 
  1966  028D                     	;# 
  1967  028E                     	;# 
  1968  0291                     	;# 
  1969  0291                     	;# 
  1970  0292                     	;# 
  1971  0293                     	;# 
  1972  0294                     	;# 
  1973  0295                     	;# 
  1974  0295                     	;# 
  1975  0296                     	;# 
  1976  0297                     	;# 
  1977  0298                     	;# 
  1978  029F                     	;# 
  1979  030C                     	;# 
  1980  030D                     	;# 
  1981  030E                     	;# 
  1982  0311                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  0314                     	;# 
  1987  0315                     	;# 
  1988  0315                     	;# 
  1989  0316                     	;# 
  1990  0317                     	;# 
  1991  0318                     	;# 
  1992  038C                     	;# 
  1993  038D                     	;# 
  1994  038E                     	;# 
  1995  0391                     	;# 
  1996  0392                     	;# 
  1997  0393                     	;# 
  1998  0394                     	;# 
  1999  0395                     	;# 
  2000  0396                     	;# 
  2001  0397                     	;# 
  2002  0398                     	;# 
  2003  0399                     	;# 
  2004  039A                     	;# 
  2005  039C                     	;# 
  2006  039D                     	;# 
  2007  039E                     	;# 
  2008  039F                     	;# 
  2009  0411                     	;# 
  2010  0411                     	;# 
  2011  0412                     	;# 
  2012  0413                     	;# 
  2013  0414                     	;# 
  2014  0415                     	;# 
  2015  0416                     	;# 
  2016  0417                     	;# 
  2017  0418                     	;# 
  2018  0418                     	;# 
  2019  0419                     	;# 
  2020  041A                     	;# 
  2021  041B                     	;# 
  2022  041C                     	;# 
  2023  041D                     	;# 
  2024  041E                     	;# 
  2025  041F                     	;# 
  2026  0498                     	;# 
  2027  0498                     	;# 
  2028  0499                     	;# 
  2029  049A                     	;# 
  2030  049B                     	;# 
  2031  049B                     	;# 
  2032  049C                     	;# 
  2033  049D                     	;# 
  2034  049E                     	;# 
  2035  049F                     	;# 
  2036  0617                     	;# 
  2037  0618                     	;# 
  2038  0619                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  061C                     	;# 
  2044  061F                     	;# 
  2045  0691                     	;# 
  2046  0692                     	;# 
  2047  0693                     	;# 
  2048  0694                     	;# 
  2049  0695                     	;# 
  2050  0696                     	;# 
  2051  0697                     	;# 
  2052  0698                     	;# 
  2053  0699                     	;# 
  2054  0711                     	;# 
  2055  0712                     	;# 
  2056  0713                     	;# 
  2057  0714                     	;# 
  2058  0715                     	;# 
  2059  0716                     	;# 
  2060  0717                     	;# 
  2061  0718                     	;# 
  2062  0719                     	;# 
  2063  0891                     	;# 
  2064  0891                     	;# 
  2065  0891                     	;# 
  2066  0891                     	;# 
  2067  0891                     	;# 
  2068  0891                     	;# 
  2069  0892                     	;# 
  2070  0892                     	;# 
  2071  0892                     	;# 
  2072  0893                     	;# 
  2073  0893                     	;# 
  2074  0893                     	;# 
  2075  0893                     	;# 
  2076  0893                     	;# 
  2077  0893                     	;# 
  2078  0894                     	;# 
  2079  0894                     	;# 
  2080  0894                     	;# 
  2081  0895                     	;# 
  2082  0895                     	;# 
  2083  0895                     	;# 
  2084  0896                     	;# 
  2085  0896                     	;# 
  2086  0896                     	;# 
  2087  089B                     	;# 
  2088  0911                     	;# 
  2089  0912                     	;# 
  2090  0913                     	;# 
  2091  0914                     	;# 
  2092  0915                     	;# 
  2093  0916                     	;# 
  2094  0918                     	;# 
  2095  0919                     	;# 
  2096  091A                     	;# 
  2097  091B                     	;# 
  2098  091C                     	;# 
  2099  091D                     	;# 
  2100  091E                     	;# 
  2101  091F                     	;# 
  2102  0E0F                     	;# 
  2103  0E10                     	;# 
  2104  0E11                     	;# 
  2105  0E12                     	;# 
  2106  0E13                     	;# 
  2107  0E14                     	;# 
  2108  0E15                     	;# 
  2109  0E16                     	;# 
  2110  0E17                     	;# 
  2111  0E18                     	;# 
  2112  0E19                     	;# 
  2113  0E1A                     	;# 
  2114  0E1B                     	;# 
  2115  0E1C                     	;# 
  2116  0E1D                     	;# 
  2117  0E1E                     	;# 
  2118  0E1F                     	;# 
  2119  0E20                     	;# 
  2120  0E21                     	;# 
  2121  0E22                     	;# 
  2122  0E24                     	;# 
  2123  0E25                     	;# 
  2124  0E28                     	;# 
  2125  0E29                     	;# 
  2126  0E2A                     	;# 
  2127  0E2B                     	;# 
  2128  0E2C                     	;# 
  2129  0E2D                     	;# 
  2130  0E2E                     	;# 
  2131  0E2F                     	;# 
  2132  0E90                     	;# 
  2133  0E91                     	;# 
  2134  0E92                     	;# 
  2135  0E94                     	;# 
  2136  0E95                     	;# 
  2137  0E9C                     	;# 
  2138  0E9D                     	;# 
  2139  0E9E                     	;# 
  2140  0E9F                     	;# 
  2141  0EA0                     	;# 
  2142  0EA1                     	;# 
  2143  0EA2                     	;# 
  2144  0EA3                     	;# 
  2145  0EA4                     	;# 
  2146  0EA5                     	;# 
  2147  0EA6                     	;# 
  2148  0EA7                     	;# 
  2149  0F0F                     	;# 
  2150  0F10                     	;# 
  2151  0F11                     	;# 
  2152  0F12                     	;# 
  2153  0F13                     	;# 
  2154  0F14                     	;# 
  2155  0F15                     	;# 
  2156  0F16                     	;# 
  2157  0F17                     	;# 
  2158  0F18                     	;# 
  2159  0F19                     	;# 
  2160  0F1A                     	;# 
  2161  0F1B                     	;# 
  2162  0F1C                     	;# 
  2163  0F1D                     	;# 
  2164  0F1E                     	;# 
  2165  0F1F                     	;# 
  2166  0F20                     	;# 
  2167  0F21                     	;# 
  2168  0F22                     	;# 
  2169  0F23                     	;# 
  2170  0F24                     	;# 
  2171  0F25                     	;# 
  2172  0F26                     	;# 
  2173  0F27                     	;# 
  2174  0F28                     	;# 
  2175  0F29                     	;# 
  2176  0F2A                     	;# 
  2177  0F2B                     	;# 
  2178  0F2C                     	;# 
  2179  0F2D                     	;# 
  2180  0F2E                     	;# 
  2181  0F2F                     	;# 
  2182  0F30                     	;# 
  2183  0F31                     	;# 
  2184  0F32                     	;# 
  2185  0F33                     	;# 
  2186  0F34                     	;# 
  2187  0F35                     	;# 
  2188  0F36                     	;# 
  2189  0F37                     	;# 
  2190  0FE4                     	;# 
  2191  0FE5                     	;# 
  2192  0FE6                     	;# 
  2193  0FE7                     	;# 
  2194  0FE8                     	;# 
  2195  0FE9                     	;# 
  2196  0FEA                     	;# 
  2197  0FEB                     	;# 
  2198  0FED                     	;# 
  2199  0FEE                     	;# 
  2200  0FEF                     	;# 
  2201                           
  2202                           	psect	idataBANK0
  2203  0061                     __pidataBANK0:	
  2204                           
  2205                           ;initializer for _right
  2206  0061  3401               	retlw	1
  2207                           
  2208                           	psect	idataBANK1
  2209  0098                     __pidataBANK1:	
  2210                           
  2211                           ;initializer for _names
  2212  0098  341D               	retlw	low (STR_1| (0+32768))
  2213  0099  3488               	retlw	high (STR_1| (0+32768))
  2214  009A  3410               	retlw	low (STR_2| (0+32768))
  2215  009B  3488               	retlw	high (STR_2| (0+32768))
  2216  009C  3400               	retlw	low (STR_3| (0+32768))
  2217  009D  3488               	retlw	high (STR_3| (0+32768))
  2218  009E  3429               	retlw	low (STR_4| (0+32768))
  2219  009F  3488               	retlw	high (STR_4| (0+32768))
  2220                           
  2221                           ;initializer for _start
  2222  00A0  3401               	retlw	1
  2223  000E                     _PORTCbits	set	14
  2224  009D                     _ADCON0bits	set	157
  2225  009C                     _ADRESH	set	156
  2226  009B                     _ADRESL	set	155
  2227  009F                     _ADACT	set	159
  2228  009E                     _ADCON1	set	158
  2229  009D                     _ADCON0	set	157
  2230  008E                     _TRISC	set	142
  2231  008D                     _TRISB	set	141
  2232  008C                     _TRISA	set	140
  2233  0097                     _WDTCON	set	151
  2234  010C                     _LATAbits	set	268
  2235  010E                     _LATCbits	set	270
  2236  010E                     _LATC	set	270
  2237  010D                     _LATB	set	269
  2238  010C                     _LATA	set	268
  2239  018C                     _ANSELA	set	396
  2240  018D                     _ANSELB	set	397
  2241  018E                     _ANSELC	set	398
  2242  021C                     _SSP2STATbits	set	540
  2243  0219                     _SSP2BUF	set	537
  2244  021D                     _SSP2CON1bits	set	541
  2245  021A                     _SSP2ADD	set	538
  2246  021D                     _SSP2CON1	set	541
  2247  021C                     _SSP2STAT	set	540
  2248  020E                     _WPUC	set	526
  2249  020C                     _WPUA	set	524
  2250  020D                     _WPUB	set	525
  2251  028E                     _ODCONC	set	654
  2252  028D                     _ODCONB	set	653
  2253  028C                     _ODCONA	set	652
  2254  030E                     _SLRCONC	set	782
  2255  030D                     _SLRCONB	set	781
  2256  030C                     _SLRCONA	set	780
  2257  0916                     _PMD5	set	2326
  2258  0915                     _PMD4	set	2325
  2259  0914                     _PMD3	set	2324
  2260  0913                     _PMD2	set	2323
  2261  0912                     _PMD1	set	2322
  2262  0911                     _PMD0	set	2321
  2263  091E                     _OSCTUNE	set	2334
  2264  091F                     _OSCFRQ	set	2335
  2265  091D                     _OSCEN	set	2333
  2266  091B                     _OSCCON3	set	2331
  2267  0919                     _OSCCON1	set	2329
  2268  0E1D                     _SSP2CLKPPS	set	3613
  2269  0E1E                     _SSP2DATPPS	set	3614
  2270  0EA2                     _RC2PPS	set	3746
  2271  0E9E                     _RB6PPS	set	3742
  2272                           
  2273                           	psect	stringtext1
  2274  0800                     __pstringtext1:	
  2275  0800                     STR_3:	
  2276  0800  3441               	retlw	65	;'A'
  2277  0801  346C               	retlw	108	;'l'
  2278  0802  3465               	retlw	101	;'e'
  2279  0803  3478               	retlw	120	;'x'
  2280  0804  3461               	retlw	97	;'a'
  2281  0805  346E               	retlw	110	;'n'
  2282  0806  3464               	retlw	100	;'d'
  2283  0807  3472               	retlw	114	;'r'
  2284  0808  3461               	retlw	97	;'a'
  2285  0809  3420               	retlw	32	;' '
  2286  080A  3446               	retlw	70	;'F'
  2287  080B  3479               	retlw	121	;'y'
  2288  080C  3466               	retlw	102	;'f'
  2289  080D  3466               	retlw	102	;'f'
  2290  080E  3465               	retlw	101	;'e'
  2291  080F  3400               	retlw	0
  2292                           
  2293                           	psect	stringtext2
  2294  0810                     __pstringtext2:	
  2295  0810                     STR_2:	
  2296  0810  344E               	retlw	78	;'N'
  2297  0811  346F               	retlw	111	;'o'
  2298  0812  3465               	retlw	101	;'e'
  2299  0813  346C               	retlw	108	;'l'
  2300  0814  346C               	retlw	108	;'l'
  2301  0815  3465               	retlw	101	;'e'
  2302  0816  3420               	retlw	32	;' '
  2303  0817  3443               	retlw	67	;'C'
  2304  0818  3472               	retlw	114	;'r'
  2305  0819  3461               	retlw	97	;'a'
  2306  081A  346E               	retlw	110	;'n'
  2307  081B  3465               	retlw	101	;'e'
  2308  081C  3400               	retlw	0
  2309                           
  2310                           	psect	stringtext3
  2311  081D                     __pstringtext3:	
  2312  081D                     STR_1:	
  2313  081D  344A               	retlw	74	;'J'
  2314  081E  3475               	retlw	117	;'u'
  2315  081F  3473               	retlw	115	;'s'
  2316  0820  3474               	retlw	116	;'t'
  2317  0821  3469               	retlw	105	;'i'
  2318  0822  346E               	retlw	110	;'n'
  2319  0823  3420               	retlw	32	;' '
  2320  0824  3443               	retlw	67	;'C'
  2321  0825  3468               	retlw	104	;'h'
  2322  0826  3461               	retlw	97	;'a'
  2323  0827  346E               	retlw	110	;'n'
  2324  0828  3400               	retlw	0
  2325                           
  2326                           	psect	stringtext4
  2327  0829                     __pstringtext4:	
  2328  0829                     STR_4:	
  2329  0829  344A               	retlw	74	;'J'
  2330  082A  3465               	retlw	101	;'e'
  2331  082B  3466               	retlw	102	;'f'
  2332  082C  3466               	retlw	102	;'f'
  2333  082D  3420               	retlw	32	;' '
  2334  082E  3447               	retlw	71	;'G'
  2335  082F  3465               	retlw	101	;'e'
  2336  0830  3469               	retlw	105	;'i'
  2337  0831  3473               	retlw	115	;'s'
  2338  0832  3473               	retlw	115	;'s'
  2339  0833  3400               	retlw	0
  2340                           
  2341                           	psect	stringtext5
  2342  0834                     __pstringtext5:	
  2343  0834                     STR_5:	
  2344  0834  3425               	retlw	37	;'%'
  2345  0835  3464               	retlw	100	;'d'
  2346  0836  3400               	retlw	0
  2347                           
  2348                           	psect	stringtext6
  2349  0000                     __pstringtext6:	
  2350  0800                     
  2351                           ; #config settings
  2352  0000                     
  2353                           	psect	cinit
  2354  07E6                     start_initialization:	
  2355  07E6                     __initialization:	
  2356                           
  2357                           ; Initialize objects allocated to BANK0
  2358  07E6  3180  2061  3187   	fcall	__pidataBANK0	;fetch initializer
  2359  07E9  00EF               	movwf	__pdataBANK0& (0+127)
  2360                           
  2361                           ; Initialize objects allocated to BANK1
  2362  07EA  3098               	movlw	low __pidataBANK1
  2363  07EB  0084               	movwf	4
  2364  07EC  3080               	movlw	(high __pidataBANK1)| (0+128)
  2365  07ED  0085               	movwf	5
  2366  07EE  30E5               	movlw	low __pdataBANK1
  2367  07EF  0086               	movwf	6
  2368  07F0  3000               	movlw	high __pdataBANK1
  2369  07F1  0087               	movwf	7
  2370  07F2  3009               	movlw	9
  2371  07F3  3180  206C  3187   	fcall	init_ram
  2372                           
  2373                           ; Clear objects allocated to BANK1
  2374  07F6  30A0               	movlw	low __pbssBANK1
  2375  07F7  0084               	movwf	4
  2376  07F8  3000               	movlw	high __pbssBANK1
  2377  07F9  0085               	movwf	5
  2378  07FA  302E               	movlw	46
  2379  07FB  3180  2066         	fcall	clear_ram0
  2380  07FD                     end_of_initialization:	
  2381                           ;End of C runtime variable initialization code
  2382                           
  2383  07FD                     __end_of__initialization:	
  2384  07FD  0020               	movlb	0
  2385  07FE  3180  2879         	ljmp	_main	;jump to C main() function
  2386                           
  2387                           	psect	dataBANK0
  2388  006F                     __pdataBANK0:	
  2389  006F                     _right:	
  2390  006F                     	ds	1
  2391                           
  2392                           	psect	bssBANK1
  2393  00A0                     __pbssBANK1:	
  2394  00A0                     _nout:	
  2395  00A0                     	ds	2
  2396  00A2                     _width:	
  2397  00A2                     	ds	2
  2398  00A4                     _prec:	
  2399  00A4                     	ds	2
  2400  00A6                     _flags:	
  2401  00A6                     	ds	2
  2402  00A8                     _name:	
  2403  00A8                     	ds	2
  2404  00AA                     _adcResult:	
  2405  00AA                     	ds	1
  2406  00AB                     _printed:	
  2407  00AB                     	ds	1
  2408  00AC                     _switch1:	
  2409  00AC                     	ds	1
  2410  00AD                     _button:	
  2411  00AD                     	ds	1
  2412  00AE                     _dbuf:	
  2413  00AE                     	ds	32
  2414                           
  2415                           	psect	dataBANK1
  2416  00E5                     __pdataBANK1:	
  2417  00E5                     _names:	
  2418  00E5                     	ds	8
  2419  00ED                     _start:	
  2420  00ED                     	ds	1
  2421                           
  2422                           	psect	inittext
  2423  006C                     init_ram:	
  2424  006C  00FE               	movwf	126
  2425  006D                     initloop:	
  2426  006D  0012               	moviw fsr0++
  2427  006E  001E               	movwi fsr1++
  2428  006F  0BFE               	decfsz	126,f
  2429  0070  286D               	goto	initloop
  2430  0071  3400               	retlw	0
  2431                           
  2432                           	psect	clrtext
  2433  0066                     clear_ram0:	
  2434                           ;	Called with FSR0 containing the base address, and
  2435                           ;	WREG with the size to clear
  2436                           
  2437  0066  0064               	clrwdt	;clear the watchdog before getting into this loop
  2438  0067                     clrloop0:	
  2439  0067  0180               	clrf	0	;clear RAM location pointed to by FSR
  2440  0068  3101               	addfsr 0,1
  2441  0069  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2442  006A  2867               	goto	clrloop0	;have we reached the end yet?
  2443  006B  3400               	retlw	0	;all done for this memory range, return
  2444                           
  2445                           	psect	cstackBANK1
  2446  00CE                     __pcstackBANK1:	
  2447  00CE                     	ds	2
  2448  00D0                     sprintf@ap:	
  2449                           
  2450                           ; 1 bytes @ 0x2
  2451  00D0                     	ds	1
  2452  00D1                     sprintf@s:	
  2453                           
  2454                           ; 1 bytes @ 0x3
  2455  00D1                     	ds	1
  2456  00D2                     sprintf@f:	
  2457                           
  2458                           ; 5 bytes @ 0x4
  2459  00D2                     	ds	5
  2460  00D7                     checkButton1@string1:	
  2461                           
  2462                           ; 12 bytes @ 0x9
  2463  00D7                     	ds	12
  2464  00E3                     Get_ADC@val:	
  2465                           
  2466                           ; 2 bytes @ 0x15
  2467  00E3                     	ds	2
  2468                           
  2469                           	psect	cstackCOMMON
  2470  0070                     __pcstackCOMMON:	
  2471  0070                     ?_PMD_Initialize:	
  2472  0070                     ??_PMD_Initialize:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_PIN_MANAGER_Initialize:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ??_PIN_MANAGER_Initialize:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_OSCILLATOR_Initialize:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ??_OSCILLATOR_Initialize:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ?_WDT_Initialize:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ??_WDT_Initialize:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ?_SPI2_Initialize:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ??_SPI2_Initialize:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_ADC_Initialize:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ??_ADC_Initialize:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?_Get_ADC:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_SPI2_Exchange8bit:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ??_SPI2_Exchange8bit:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_putch:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ??_putch:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_SYSTEM_Initialize:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ??_SYSTEM_Initialize:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_main:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ?_SPI_Write:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_checkButton1:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ??___aodiv:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ??___aomod:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?_strlen:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?_fputc:	
  2545                           ; 2 bytes @ 0x0
  2546                           
  2547  0070                     ?_ADC_GetConversion:	
  2548                           ; 2 bytes @ 0x0
  2549                           
  2550  0070                     SPI2_Exchange8bit@data:	
  2551                           ; 2 bytes @ 0x0
  2552                           
  2553  0070                     putch@c:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     fputc@c:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     strlen@s:	
  2560                           ; 2 bytes @ 0x0
  2561                           
  2562                           
  2563                           ; 2 bytes @ 0x0
  2564  0070                     	ds	1
  2565  0071                     ??_SPI_Write:	
  2566  0071                     ___aodiv@counter:	
  2567                           ; 1 bytes @ 0x1
  2568                           
  2569  0071                     ___aomod@counter:	
  2570                           ; 1 bytes @ 0x1
  2571                           
  2572                           
  2573                           ; 1 bytes @ 0x1
  2574  0071                     	ds	1
  2575  0072                     ??_strlen:	
  2576  0072                     ??_ADC_GetConversion:	
  2577                           ; 1 bytes @ 0x2
  2578                           
  2579  0072                     SPI_Write@incoming:	
  2580                           ; 1 bytes @ 0x2
  2581                           
  2582  0072                     ___aodiv@sign:	
  2583                           ; 1 bytes @ 0x2
  2584                           
  2585  0072                     ___aomod@sign:	
  2586                           ; 1 bytes @ 0x2
  2587                           
  2588  0072                     fputc@fp:	
  2589                           ; 1 bytes @ 0x2
  2590                           
  2591                           
  2592                           ; 1 bytes @ 0x2
  2593  0072                     	ds	1
  2594  0073                     ??_fputc:	
  2595  0073                     ?_abs:	
  2596                           ; 1 bytes @ 0x3
  2597                           
  2598  0073                     ADC_GetConversion@channel:	
  2599                           ; 2 bytes @ 0x3
  2600                           
  2601  0073                     abs@a:	
  2602                           ; 1 bytes @ 0x3
  2603                           
  2604  0073                     strlen@a:	
  2605                           ; 2 bytes @ 0x3
  2606                           
  2607  0073                     ___aodiv@quotient:	
  2608                           ; 2 bytes @ 0x3
  2609                           
  2610                           
  2611                           ; 8 bytes @ 0x3
  2612  0073                     	ds	2
  2613  0075                     ??_abs:	
  2614  0075                     ?_Display_Name:	
  2615                           ; 1 bytes @ 0x5
  2616                           
  2617  0075                     Display_Name@string1:	
  2618                           ; 1 bytes @ 0x5
  2619                           
  2620                           
  2621                           ; 2 bytes @ 0x5
  2622  0075                     	ds	2
  2623  0077                     ??_Display_Name:	
  2624                           
  2625                           ; 1 bytes @ 0x7
  2626  0077                     	ds	1
  2627  0078                     ?_fputs:	
  2628  0078                     fputs@fp:	
  2629                           ; 2 bytes @ 0x8
  2630                           
  2631  0078                     Display_Name@length:	
  2632                           ; 1 bytes @ 0x8
  2633                           
  2634                           
  2635                           ; 2 bytes @ 0x8
  2636  0078                     	ds	1
  2637  0079                     ??_fputs:	
  2638                           
  2639                           ; 1 bytes @ 0x9
  2640  0079                     	ds	1
  2641  007A                     Display_Name@i:	
  2642                           
  2643                           ; 2 bytes @ 0xA
  2644  007A                     	ds	2
  2645  007C                     ??_pad:	
  2646                           
  2647                           ; 1 bytes @ 0xC
  2648  007C                     	ds	1
  2649  007D                     ??_sprintf:	
  2650                           
  2651                           ; 1 bytes @ 0xD
  2652  007D                     	ds	1
  2653  007E                     ??_main:	
  2654                           
  2655                           	psect	cstackBANK0
  2656  0020                     __pcstackBANK0:	
  2657                           ; 1 bytes @ 0xE
  2658                           
  2659  0020                     ?___aodiv:	
  2660  0020                     ?___aomod:	
  2661                           ; 8 bytes @ 0x0
  2662                           
  2663  0020                     fputs@c:	
  2664                           ; 8 bytes @ 0x0
  2665                           
  2666  0020                     ___aodiv@divisor:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0020                     ___aomod@divisor:	
  2670                           ; 8 bytes @ 0x0
  2671                           
  2672                           
  2673                           ; 8 bytes @ 0x0
  2674  0020                     	ds	1
  2675  0021                     fputs@i:	
  2676                           
  2677                           ; 2 bytes @ 0x1
  2678  0021                     	ds	2
  2679  0023                     fputs@s:	
  2680                           
  2681                           ; 1 bytes @ 0x3
  2682  0023                     	ds	1
  2683  0024                     ?_pad:	
  2684  0024                     pad@buf:	
  2685                           ; 2 bytes @ 0x4
  2686                           
  2687                           
  2688                           ; 1 bytes @ 0x4
  2689  0024                     	ds	1
  2690  0025                     pad@p:	
  2691                           
  2692                           ; 2 bytes @ 0x5
  2693  0025                     	ds	2
  2694  0027                     pad@i:	
  2695                           
  2696                           ; 2 bytes @ 0x7
  2697  0027                     	ds	1
  2698  0028                     ___aodiv@dividend:	
  2699  0028                     ___aomod@dividend:	
  2700                           ; 8 bytes @ 0x8
  2701                           
  2702                           
  2703                           ; 8 bytes @ 0x8
  2704  0028                     	ds	1
  2705  0029                     pad@w:	
  2706                           
  2707                           ; 2 bytes @ 0x9
  2708  0029                     	ds	2
  2709  002B                     pad@fp:	
  2710                           
  2711                           ; 1 bytes @ 0xB
  2712  002B                     	ds	5
  2713  0030                     ?_dtoa:	
  2714  0030                     dtoa@d:	
  2715                           ; 2 bytes @ 0x10
  2716                           
  2717                           
  2718                           ; 8 bytes @ 0x10
  2719  0030                     	ds	8
  2720  0038                     ??_dtoa:	
  2721                           
  2722                           ; 1 bytes @ 0x18
  2723  0038                     	ds	3
  2724  003B                     _dtoa$602:	
  2725                           
  2726                           ; 2 bytes @ 0x1B
  2727  003B                     	ds	2
  2728  003D                     dtoa@fp:	
  2729                           
  2730                           ; 1 bytes @ 0x1D
  2731  003D                     	ds	1
  2732  003E                     dtoa@p:	
  2733                           
  2734                           ; 2 bytes @ 0x1E
  2735  003E                     	ds	2
  2736  0040                     dtoa@w:	
  2737                           
  2738                           ; 2 bytes @ 0x20
  2739  0040                     	ds	2
  2740  0042                     dtoa@s:	
  2741                           
  2742                           ; 2 bytes @ 0x22
  2743  0042                     	ds	2
  2744  0044                     dtoa@n:	
  2745                           
  2746                           ; 8 bytes @ 0x24
  2747  0044                     	ds	8
  2748  004C                     dtoa@i:	
  2749                           
  2750                           ; 2 bytes @ 0x2C
  2751  004C                     	ds	2
  2752  004E                     ?_vfpfcnvrt:	
  2753  004E                     vfpfcnvrt@fmt:	
  2754                           ; 2 bytes @ 0x2E
  2755                           
  2756                           
  2757                           ; 1 bytes @ 0x2E
  2758  004E                     	ds	1
  2759  004F                     vfpfcnvrt@ap:	
  2760                           
  2761                           ; 1 bytes @ 0x2F
  2762  004F                     	ds	1
  2763  0050                     ??_vfpfcnvrt:	
  2764                           
  2765                           ; 1 bytes @ 0x30
  2766  0050                     	ds	5
  2767  0055                     vfpfcnvrt@ll:	
  2768                           
  2769                           ; 8 bytes @ 0x35
  2770  0055                     	ds	8
  2771  005D                     vfpfcnvrt@fp:	
  2772                           
  2773                           ; 1 bytes @ 0x3D
  2774  005D                     	ds	1
  2775  005E                     ?_vfprintf:	
  2776  005E                     vfprintf@fmt:	
  2777                           ; 2 bytes @ 0x3E
  2778                           
  2779                           
  2780                           ; 2 bytes @ 0x3E
  2781  005E                     	ds	2
  2782  0060                     vfprintf@ap:	
  2783                           
  2784                           ; 1 bytes @ 0x40
  2785  0060                     	ds	1
  2786  0061                     ??_vfprintf:	
  2787                           
  2788                           ; 1 bytes @ 0x41
  2789  0061                     	ds	2
  2790  0063                     vfprintf@fp:	
  2791                           
  2792                           ; 1 bytes @ 0x43
  2793  0063                     	ds	1
  2794  0064                     vfprintf@cfmt:	
  2795                           
  2796                           ; 2 bytes @ 0x44
  2797  0064                     	ds	2
  2798  0066                     ?_sprintf:	
  2799  0066                     sprintf@fmt:	
  2800                           ; 2 bytes @ 0x46
  2801                           
  2802                           
  2803                           ; 2 bytes @ 0x46
  2804  0066                     	ds	4
  2805  006A                     ??_checkButton1:	
  2806                           
  2807                           ; 1 bytes @ 0x4A
  2808  006A                     	ds	3
  2809  006D                     ??_Get_ADC:	
  2810                           
  2811                           ; 1 bytes @ 0x4D
  2812  006D                     	ds	2
  2813                           
  2814                           	psect	maintext
  2815  0079                     __pmaintext:	
  2816 ;;
  2817 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2818 ;;
  2819 ;; *************** function _main *****************
  2820 ;; Defined at:
  2821 ;;		line 76 in file "main.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : B1F/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels required when called:   10
  2841 ;; This function calls:
  2842 ;;		_Get_ADC
  2843 ;;		_SYSTEM_Initialize
  2844 ;; This function is called by:
  2845 ;;		Startup code after reset
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _main
  2851  0079                     _main:	
  2852                           
  2853                           ;main.c: 79:     SYSTEM_Initialize();
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2857  0079  3180  20BF  3180   	fcall	_SYSTEM_Initialize
  2858  007C                     l1965:	
  2859                           
  2860                           ;main.c: 97:     {;main.c: 98:         Get_ADC();
  2861  007C  3185  2574  3180   	fcall	_Get_ADC
  2862  007F  287C               	goto	l1965
  2863  0080                     __end_of_main:	
  2864                           
  2865                           	psect	text1
  2866  00BF                     __ptext1:	
  2867 ;; *************** function _SYSTEM_Initialize *****************
  2868 ;; Defined at:
  2869 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    1
  2890 ;; This function calls:
  2891 ;;		_ADC_Initialize
  2892 ;;		_OSCILLATOR_Initialize
  2893 ;;		_PIN_MANAGER_Initialize
  2894 ;;		_PMD_Initialize
  2895 ;;		_SPI2_Initialize
  2896 ;;		_WDT_Initialize
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function _SYSTEM_Initialize
  2904  00BF                     _SYSTEM_Initialize:	
  2905                           
  2906                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2910  00BF  3180  2090  3180   	fcall	_PMD_Initialize
  2911                           
  2912                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2913  00C2  3181  215F  3180   	fcall	_PIN_MANAGER_Initialize
  2914                           
  2915                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2916  00C5  3180  2088  3180   	fcall	_OSCILLATOR_Initialize
  2917                           
  2918                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2919  00C8  3180  2062  3180   	fcall	_WDT_Initialize
  2920                           
  2921                           ;mcc_generated_files/mcc.c: 57:     SPI2_Initialize();
  2922  00CB  3180  2072  3180   	fcall	_SPI2_Initialize
  2923                           
  2924                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2925  00CE  3180  2080         	fcall	_ADC_Initialize
  2926  00D0  0008               	return
  2927  00D1                     __end_of_SYSTEM_Initialize:	
  2928                           
  2929                           	psect	text2
  2930  0062                     __ptext2:	
  2931 ;; *************** function _WDT_Initialize *****************
  2932 ;; Defined at:
  2933 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_SYSTEM_Initialize
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _WDT_Initialize
  2962  0062                     _WDT_Initialize:	
  2963                           
  2964                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x18;
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _WDT_Initialize: [wreg]
  2968  0062  3018               	movlw	24
  2969  0063  0021               	movlb	1	; select bank1
  2970  0064  0097               	movwf	23	;volatile
  2971  0065  0008               	return
  2972  0066                     __end_of_WDT_Initialize:	
  2973                           
  2974                           	psect	text3
  2975  0072                     __ptext3:	
  2976 ;; *************** function _SPI2_Initialize *****************
  2977 ;; Defined at:
  2978 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_SYSTEM_Initialize
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _SPI2_Initialize
  3007  0072                     _SPI2_Initialize:	
  3008                           
  3009                           ;mcc_generated_files/spi2.c: 70:     SSP2STAT = 0x80;
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
  3013  0072  3080               	movlw	128
  3014  0073  0024               	movlb	4	; select bank4
  3015  0074  009C               	movwf	28	;volatile
  3016                           
  3017                           ;mcc_generated_files/spi2.c: 73:     SSP2CON1 = 0x31;
  3018  0075  3031               	movlw	49
  3019  0076  009D               	movwf	29	;volatile
  3020                           
  3021                           ;mcc_generated_files/spi2.c: 76:     SSP2ADD = 0x00;
  3022  0077  019A               	clrf	26	;volatile
  3023  0078  0008               	return
  3024  0079                     __end_of_SPI2_Initialize:	
  3025                           
  3026                           	psect	text4
  3027  0090                     __ptext4:	
  3028 ;; *************** function _PMD_Initialize *****************
  3029 ;; Defined at:
  3030 ;;		line 81 in file "mcc_generated_files/mcc.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_SYSTEM_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _PMD_Initialize
  3059  0090                     _PMD_Initialize:	
  3060                           
  3061                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in _PMD_Initialize: [status,2]
  3065  0090  0032               	movlb	18	; select bank18
  3066  0091  0191               	clrf	17	;volatile
  3067                           
  3068                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  3069  0092  0192               	clrf	18	;volatile
  3070                           
  3071                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  3072  0093  0193               	clrf	19	;volatile
  3073                           
  3074                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  3075  0094  0194               	clrf	20	;volatile
  3076                           
  3077                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  3078  0095  0195               	clrf	21	;volatile
  3079                           
  3080                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  3081  0096  0196               	clrf	22	;volatile
  3082  0097  0008               	return
  3083  0098                     __end_of_PMD_Initialize:	
  3084                           
  3085                           	psect	text5
  3086  015F                     __ptext5:	
  3087 ;; *************** function _PIN_MANAGER_Initialize *****************
  3088 ;; Defined at:
  3089 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_SYSTEM_Initialize
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _PIN_MANAGER_Initialize
  3118  015F                     _PIN_MANAGER_Initialize:	
  3119                           
  3120                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3124  015F  0022               	movlb	2	; select bank2
  3125  0160  018C               	clrf	12	;volatile
  3126                           
  3127                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3128  0161  018D               	clrf	13	;volatile
  3129                           
  3130                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3131  0162  018E               	clrf	14	;volatile
  3132                           
  3133                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x11;
  3134  0163  3011               	movlw	17
  3135  0164  0021               	movlb	1	; select bank1
  3136  0165  008C               	movwf	12	;volatile
  3137                           
  3138                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
  3139  0166  30B0               	movlw	176
  3140  0167  008D               	movwf	13	;volatile
  3141                           
  3142                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDA;
  3143  0168  30DA               	movlw	218
  3144  0169  008E               	movwf	14	;volatile
  3145                           
  3146                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  3147  016A  30FF               	movlw	255
  3148  016B  0023               	movlb	3	; select bank3
  3149  016C  008E               	movwf	14	;volatile
  3150                           
  3151                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  3152  016D  30A0               	movlw	160
  3153  016E  008D               	movwf	13	;volatile
  3154                           
  3155                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  3156  016F  3037               	movlw	55
  3157  0170  008C               	movwf	12	;volatile
  3158                           
  3159                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3160  0171  0024               	movlb	4	; select bank4
  3161  0172  018D               	clrf	13	;volatile
  3162                           
  3163                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3164  0173  018C               	clrf	12	;volatile
  3165                           
  3166                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3167  0174  018E               	clrf	14	;volatile
  3168                           
  3169                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3170  0175  0025               	movlb	5	; select bank5
  3171  0176  018C               	clrf	12	;volatile
  3172                           
  3173                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3174  0177  018D               	clrf	13	;volatile
  3175                           
  3176                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3177  0178  018E               	clrf	14	;volatile
  3178                           
  3179                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  3180  0179  3037               	movlw	55
  3181  017A  0026               	movlb	6	; select bank6
  3182  017B  008C               	movwf	12	;volatile
  3183                           
  3184                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  3185  017C  30F0               	movlw	240
  3186  017D  008D               	movwf	13	;volatile
  3187                           
  3188                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  3189  017E  30FF               	movlw	255
  3190  017F  008E               	movwf	14	;volatile
  3191                           
  3192                           ;mcc_generated_files/pin_manager.c: 106:     SSP2DATPPS = 0x0C;
  3193  0180  300C               	movlw	12
  3194  0181  003C               	movlb	28	; select bank28
  3195  0182  009E               	movwf	30	;volatile
  3196                           
  3197                           ;mcc_generated_files/pin_manager.c: 107:     RB6PPS = 0x1A;
  3198  0183  301A               	movlw	26
  3199  0184  003D               	movlb	29	; select bank29
  3200  0185  009E               	movwf	30	;volatile
  3201                           
  3202                           ;mcc_generated_files/pin_manager.c: 108:     RC2PPS = 0x1B;
  3203  0186  301B               	movlw	27
  3204  0187  00A2               	movwf	34	;volatile
  3205                           
  3206                           ;mcc_generated_files/pin_manager.c: 109:     SSP2CLKPPS = 0x0E;
  3207  0188  300E               	movlw	14
  3208  0189  003C               	movlb	28	; select bank28
  3209  018A  009D               	movwf	29	;volatile
  3210  018B  0008               	return
  3211  018C                     __end_of_PIN_MANAGER_Initialize:	
  3212                           
  3213                           	psect	text6
  3214  0088                     __ptext6:	
  3215 ;; *************** function _OSCILLATOR_Initialize *****************
  3216 ;; Defined at:
  3217 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_SYSTEM_Initialize
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _OSCILLATOR_Initialize
  3246  0088                     _OSCILLATOR_Initialize:	
  3247                           
  3248                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x61;
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3252  0088  3061               	movlw	97
  3253  0089  0032               	movlb	18	; select bank18
  3254  008A  0099               	movwf	25	;volatile
  3255                           
  3256                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  3257  008B  019B               	clrf	27	;volatile
  3258                           
  3259                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  3260  008C  019D               	clrf	29	;volatile
  3261                           
  3262                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x00;
  3263  008D  019F               	clrf	31	;volatile
  3264                           
  3265                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3266  008E  019E               	clrf	30	;volatile
  3267  008F  0008               	return
  3268  0090                     __end_of_OSCILLATOR_Initialize:	
  3269                           
  3270                           	psect	text7
  3271  0080                     __ptext7:	
  3272 ;; *************** function _ADC_Initialize *****************
  3273 ;; Defined at:
  3274 ;;		line 65 in file "mcc_generated_files/adc.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_SYSTEM_Initialize
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _ADC_Initialize
  3303  0080                     _ADC_Initialize:	
  3304                           
  3305                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3309  0080  3001               	movlw	1
  3310  0081  0021               	movlb	1	; select bank1
  3311  0082  009D               	movwf	29	;volatile
  3312                           
  3313                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  3314  0083  019E               	clrf	30	;volatile
  3315                           
  3316                           ;mcc_generated_files/adc.c: 76:     ADACT = 0x00;
  3317  0084  019F               	clrf	31	;volatile
  3318                           
  3319                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  3320  0085  019B               	clrf	27	;volatile
  3321                           
  3322                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  3323  0086  019C               	clrf	28	;volatile
  3324  0087  0008               	return
  3325  0088                     __end_of_ADC_Initialize:	
  3326                           
  3327                           	psect	text8
  3328  0574                     __ptext8:	
  3329 ;; *************** function _Get_ADC *****************
  3330 ;; Defined at:
  3331 ;;		line 172 in file "main.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  val             2   21[BANK1 ] int 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;Total ram usage:        4 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    9
  3352 ;; This function calls:
  3353 ;;		_ADC_GetConversion
  3354 ;;		_Display_Name
  3355 ;;		_checkButton1
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _Get_ADC
  3363  0574                     _Get_ADC:	
  3364                           
  3365                           ;main.c: 173:     checkButton1();
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _Get_ADC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3369  0574  3182  223C  3185   	fcall	_checkButton1
  3370                           
  3371                           ;main.c: 174:     if(start == 1) {
  3372  0577  0021               	movlb	1	; select bank1
  3373  0578  036D               	decf	_start^(0+128),w
  3374  0579  1D03               	btfss	3,2
  3375  057A  2D88               	goto	l1893
  3376                           
  3377                           ;main.c: 175:         Display_Name(names[name]);
  3378  057B  3528               	lslf	_name^(0+128),w
  3379  057C  3EE5               	addlw	(low (_names| 0))& (0+255)
  3380  057D  0086               	movwf	6
  3381  057E  0187               	clrf	7
  3382  057F  3F40               	moviw [0]fsr1
  3383  0580  00F5               	movwf	Display_Name@string1
  3384  0581  3F41               	moviw [1]fsr1
  3385  0582  00F6               	movwf	Display_Name@string1+1
  3386  0583  3181  21BB  3185   	fcall	_Display_Name
  3387                           
  3388                           ;main.c: 176:         start = 0;
  3389  0586  0021               	movlb	1	; select bank1
  3390  0587  01ED               	clrf	_start^(0+128)
  3391  0588                     l1893:	
  3392                           
  3393                           ;main.c: 178:     adcResult = ADC_GetConversion(BTN) >> 8;
  3394  0588  3014               	movlw	20
  3395  0589  3180  20FF  3185   	fcall	_ADC_GetConversion
  3396  058C  0871               	movf	?_ADC_GetConversion+1,w
  3397  058D  0020               	movlb	0	; select bank0
  3398  058E  00ED               	movwf	??_Get_ADC
  3399  058F  086D               	movf	??_Get_ADC,w
  3400  0590  0021               	movlb	1	; select bank1
  3401  0591  00AA               	movwf	_adcResult^(0+128)
  3402                           
  3403                           ;main.c: 179:     int val = adcResult;
  3404  0592  082A               	movf	_adcResult^(0+128),w
  3405  0593  0020               	movlb	0	; select bank0
  3406  0594  00ED               	movwf	??_Get_ADC
  3407  0595  01EE               	clrf	??_Get_ADC+1
  3408  0596  086D               	movf	??_Get_ADC,w
  3409  0597  0021               	movlb	1	; select bank1
  3410  0598  00E3               	movwf	Get_ADC@val^(0+128)
  3411  0599  0020               	movlb	0	; select bank0
  3412  059A  086E               	movf	??_Get_ADC+1,w
  3413  059B  0021               	movlb	1	; select bank1
  3414  059C  00E4               	movwf	(Get_ADC@val+1)^(0+128)
  3415                           
  3416                           ;main.c: 180:     if(val >= 175 && val <= 180) {
  3417  059D  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3418  059E  3A80               	xorlw	128
  3419  059F  0020               	movlb	0	; select bank0
  3420  05A0  00ED               	movwf	??_Get_ADC
  3421  05A1  3080               	movlw	128
  3422  05A2  026D               	subwf	??_Get_ADC,w
  3423  05A3  1D03               	skipz
  3424  05A4  2DA8               	goto	u1445
  3425  05A5  30AF               	movlw	175
  3426  05A6  0021               	movlb	1	; select bank1
  3427  05A7  0263               	subwf	Get_ADC@val^(0+128),w
  3428  05A8                     u1445:	
  3429  05A8  1C03               	skipc
  3430  05A9  2DC8               	goto	l1909
  3431  05AA  0021               	movlb	1	; select bank1
  3432  05AB  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3433  05AC  3A80               	xorlw	128
  3434  05AD  0020               	movlb	0	; select bank0
  3435  05AE  00ED               	movwf	??_Get_ADC
  3436  05AF  3080               	movlw	128
  3437  05B0  026D               	subwf	??_Get_ADC,w
  3438  05B1  1D03               	skipz
  3439  05B2  2DB6               	goto	u1455
  3440  05B3  30B5               	movlw	181
  3441  05B4  0021               	movlb	1	; select bank1
  3442  05B5  0263               	subwf	Get_ADC@val^(0+128),w
  3443  05B6                     u1455:	
  3444  05B6  1803               	skipnc
  3445  05B7  2DC8               	goto	l1909
  3446  05B8  0022               	movlb	2	; select bank2
  3447  05B9  018C               	clrf	12	;volatile
  3448  05BA  128E               	bcf	14,5	;volatile
  3449  05BB  168C               	bsf	12,5	;volatile
  3450                           
  3451                           ;main.c: 183:         Display_Name(names[name]);
  3452  05BC  0021               	movlb	1	; select bank1
  3453  05BD  3528               	lslf	_name^(0+128),w
  3454  05BE  3EE5               	addlw	(low (_names| 0))& (0+255)
  3455  05BF  0086               	movwf	6
  3456  05C0  0187               	clrf	7
  3457  05C1  3F40               	moviw [0]fsr1
  3458  05C2  00F5               	movwf	Display_Name@string1
  3459  05C3  3F41               	moviw [1]fsr1
  3460  05C4  00F6               	movwf	Display_Name@string1+1
  3461  05C5  3181  21BB         	fcall	_Display_Name
  3462                           
  3463                           ;main.c: 184:     }
  3464  05C7  0008               	return
  3465  05C8                     l1909:	
  3466  05C8  0021               	movlb	1	; select bank1
  3467  05C9  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3468  05CA  3A80               	xorlw	128
  3469  05CB  0020               	movlb	0	; select bank0
  3470  05CC  00ED               	movwf	??_Get_ADC
  3471  05CD  3080               	movlw	128
  3472  05CE  026D               	subwf	??_Get_ADC,w
  3473  05CF  1D03               	skipz
  3474  05D0  2DD4               	goto	u1465
  3475  05D1  30B5               	movlw	181
  3476  05D2  0021               	movlb	1	; select bank1
  3477  05D3  0263               	subwf	Get_ADC@val^(0+128),w
  3478  05D4                     u1465:	
  3479  05D4  1C03               	skipc
  3480  05D5  2DE4               	goto	l1915
  3481  05D6  0021               	movlb	1	; select bank1
  3482  05D7  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3483  05D8  3A80               	xorlw	128
  3484  05D9  0020               	movlb	0	; select bank0
  3485  05DA  00ED               	movwf	??_Get_ADC
  3486  05DB  3080               	movlw	128
  3487  05DC  026D               	subwf	??_Get_ADC,w
  3488  05DD  1D03               	skipz
  3489  05DE  2DE2               	goto	u1475
  3490  05DF  30BA               	movlw	186
  3491  05E0  0021               	movlb	1	; select bank1
  3492  05E1  0263               	subwf	Get_ADC@val^(0+128),w
  3493  05E2                     u1475:	
  3494  05E2  1C03               	btfss	3,0
  3495  05E3  0008               	return
  3496  05E4                     l1915:	
  3497  05E4  0021               	movlb	1	; select bank1
  3498  05E5  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3499  05E6  3A80               	xorlw	128
  3500  05E7  0020               	movlb	0	; select bank0
  3501  05E8  00ED               	movwf	??_Get_ADC
  3502  05E9  3080               	movlw	128
  3503  05EA  026D               	subwf	??_Get_ADC,w
  3504  05EB  1D03               	skipz
  3505  05EC  2DF0               	goto	u1485
  3506  05ED  30BA               	movlw	186
  3507  05EE  0021               	movlb	1	; select bank1
  3508  05EF  0263               	subwf	Get_ADC@val^(0+128),w
  3509  05F0                     u1485:	
  3510  05F0  1C03               	skipc
  3511  05F1  2E00               	goto	l1921
  3512  05F2  0021               	movlb	1	; select bank1
  3513  05F3  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3514  05F4  3A80               	xorlw	128
  3515  05F5  0020               	movlb	0	; select bank0
  3516  05F6  00ED               	movwf	??_Get_ADC
  3517  05F7  3080               	movlw	128
  3518  05F8  026D               	subwf	??_Get_ADC,w
  3519  05F9  1D03               	skipz
  3520  05FA  2DFE               	goto	u1495
  3521  05FB  30C4               	movlw	196
  3522  05FC  0021               	movlb	1	; select bank1
  3523  05FD  0263               	subwf	Get_ADC@val^(0+128),w
  3524  05FE                     u1495:	
  3525  05FE  1C03               	btfss	3,0
  3526  05FF  0008               	return
  3527  0600                     l1921:	
  3528  0600  0021               	movlb	1	; select bank1
  3529  0601  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3530  0602  3A80               	xorlw	128
  3531  0603  0020               	movlb	0	; select bank0
  3532  0604  00ED               	movwf	??_Get_ADC
  3533  0605  3080               	movlw	128
  3534  0606  026D               	subwf	??_Get_ADC,w
  3535  0607  1D03               	skipz
  3536  0608  2E0C               	goto	u1505
  3537  0609  30C4               	movlw	196
  3538  060A  0021               	movlb	1	; select bank1
  3539  060B  0263               	subwf	Get_ADC@val^(0+128),w
  3540  060C                     u1505:	
  3541  060C  1C03               	skipc
  3542  060D  2E38               	goto	l1939
  3543  060E  0021               	movlb	1	; select bank1
  3544  060F  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3545  0610  3A80               	xorlw	128
  3546  0611  0020               	movlb	0	; select bank0
  3547  0612  00ED               	movwf	??_Get_ADC
  3548  0613  3080               	movlw	128
  3549  0614  026D               	subwf	??_Get_ADC,w
  3550  0615  1D03               	skipz
  3551  0616  2E1A               	goto	u1515
  3552  0617  30C9               	movlw	201
  3553  0618  0021               	movlb	1	; select bank1
  3554  0619  0263               	subwf	Get_ADC@val^(0+128),w
  3555  061A                     u1515:	
  3556  061A  1803               	skipnc
  3557  061B  2E38               	goto	l1939
  3558                           
  3559                           ;main.c: 190:         printed = 0;
  3560  061C  0021               	movlb	1	; select bank1
  3561  061D  01AB               	clrf	_printed^(0+128)
  3562                           
  3563                           ;main.c: 191:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  3564  061E  0022               	movlb	2	; select bank2
  3565  061F  018C               	clrf	12	;volatile
  3566  0620  128E               	bcf	14,5	;volatile
  3567  0621  150C               	bsf	12,2	;volatile
  3568                           
  3569                           ;main.c: 193:         --name;
  3570  0622  30FF               	movlw	255
  3571  0623  0021               	movlb	1	; select bank1
  3572  0624  07A8               	addwf	_name^(0+128),f
  3573  0625  30FF               	movlw	255
  3574  0626  3DA9               	addwfc	(_name+1)^(0+128),f
  3575                           
  3576                           ;main.c: 194:         if(name < 0) {
  3577  0627  1FA9               	btfss	(_name+1)^(0+128),7
  3578  0628  2E2D               	goto	l1937
  3579                           
  3580                           ;main.c: 195:             name = 3;
  3581  0629  3003               	movlw	3
  3582  062A  00A8               	movwf	_name^(0+128)
  3583  062B  3000               	movlw	0
  3584  062C  00A9               	movwf	(_name^(0+128)+1)
  3585  062D                     l1937:	
  3586                           
  3587                           ;main.c: 197:         Display_Name(names[name]);
  3588  062D  3528               	lslf	_name^(0+128),w
  3589  062E  3EE5               	addlw	(low (_names| 0))& (0+255)
  3590  062F  0086               	movwf	6
  3591  0630  0187               	clrf	7
  3592  0631  3F40               	moviw [0]fsr1
  3593  0632  00F5               	movwf	Display_Name@string1
  3594  0633  3F41               	moviw [1]fsr1
  3595  0634  00F6               	movwf	Display_Name@string1+1
  3596  0635  3181  21BB         	fcall	_Display_Name
  3597                           
  3598                           ;main.c: 198:     }
  3599  0637  0008               	return
  3600  0638                     l1939:	
  3601  0638  0021               	movlb	1	; select bank1
  3602  0639  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3603  063A  3A80               	xorlw	128
  3604  063B  0020               	movlb	0	; select bank0
  3605  063C  00ED               	movwf	??_Get_ADC
  3606  063D  3080               	movlw	128
  3607  063E  026D               	subwf	??_Get_ADC,w
  3608  063F  1D03               	skipz
  3609  0640  2E44               	goto	u1535
  3610  0641  30C9               	movlw	201
  3611  0642  0021               	movlb	1	; select bank1
  3612  0643  0263               	subwf	Get_ADC@val^(0+128),w
  3613  0644                     u1535:	
  3614  0644  1C03               	skipc
  3615  0645  2E54               	goto	l1945
  3616  0646  0021               	movlb	1	; select bank1
  3617  0647  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3618  0648  3A80               	xorlw	128
  3619  0649  0020               	movlb	0	; select bank0
  3620  064A  00ED               	movwf	??_Get_ADC
  3621  064B  3080               	movlw	128
  3622  064C  026D               	subwf	??_Get_ADC,w
  3623  064D  1D03               	skipz
  3624  064E  2E52               	goto	u1545
  3625  064F  30CE               	movlw	206
  3626  0650  0021               	movlb	1	; select bank1
  3627  0651  0263               	subwf	Get_ADC@val^(0+128),w
  3628  0652                     u1545:	
  3629  0652  1C03               	btfss	3,0
  3630  0653  0008               	return
  3631  0654                     l1945:	
  3632  0654  0021               	movlb	1	; select bank1
  3633  0655  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3634  0656  3A80               	xorlw	128
  3635  0657  0020               	movlb	0	; select bank0
  3636  0658  00ED               	movwf	??_Get_ADC
  3637  0659  3080               	movlw	128
  3638  065A  026D               	subwf	??_Get_ADC,w
  3639  065B  1D03               	skipz
  3640  065C  2E60               	goto	u1555
  3641  065D  30D9               	movlw	217
  3642  065E  0021               	movlb	1	; select bank1
  3643  065F  0263               	subwf	Get_ADC@val^(0+128),w
  3644  0660                     u1555:	
  3645  0660  1C03               	skipc
  3646  0661  0008               	return
  3647  0662  0021               	movlb	1	; select bank1
  3648  0663  0864               	movf	(Get_ADC@val+1)^(0+128),w
  3649  0664  3A80               	xorlw	128
  3650  0665  0020               	movlb	0	; select bank0
  3651  0666  00ED               	movwf	??_Get_ADC
  3652  0667  3080               	movlw	128
  3653  0668  026D               	subwf	??_Get_ADC,w
  3654  0669  1D03               	skipz
  3655  066A  2E6E               	goto	u1565
  3656  066B  30DD               	movlw	221
  3657  066C  0021               	movlb	1	; select bank1
  3658  066D  0263               	subwf	Get_ADC@val^(0+128),w
  3659  066E                     u1565:	
  3660  066E  1803               	skipnc
  3661  066F  0008               	return
  3662                           
  3663                           ;main.c: 202:         printed = 0;
  3664  0670  0021               	movlb	1	; select bank1
  3665  0671  01AB               	clrf	_printed^(0+128)
  3666                           
  3667                           ;main.c: 203:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  3668  0672  0022               	movlb	2	; select bank2
  3669  0673  018C               	clrf	12	;volatile
  3670  0674  128E               	bcf	14,5	;volatile
  3671  0675  148C               	bsf	12,1	;volatile
  3672                           
  3673                           ;main.c: 205:         name++;
  3674  0676  3001               	movlw	1
  3675  0677  0021               	movlb	1	; select bank1
  3676  0678  07A8               	addwf	_name^(0+128),f
  3677  0679  3000               	movlw	0
  3678  067A  3DA9               	addwfc	(_name+1)^(0+128),f
  3679                           
  3680                           ;main.c: 206:         if(name > 3) {
  3681  067B  0829               	movf	(_name+1)^(0+128),w
  3682  067C  3A80               	xorlw	128
  3683  067D  0020               	movlb	0	; select bank0
  3684  067E  00ED               	movwf	??_Get_ADC
  3685  067F  3080               	movlw	128
  3686  0680  026D               	subwf	??_Get_ADC,w
  3687  0681  1D03               	skipz
  3688  0682  2E86               	goto	u1575
  3689  0683  3004               	movlw	4
  3690  0684  0021               	movlb	1	; select bank1
  3691  0685  0228               	subwf	_name^(0+128),w
  3692  0686                     u1575:	
  3693  0686  1C03               	skipc
  3694  0687  2E8B               	goto	l1961
  3695                           
  3696                           ;main.c: 207:            name = 0;
  3697  0688  0021               	movlb	1	; select bank1
  3698  0689  01A8               	clrf	_name^(0+128)
  3699  068A  01A9               	clrf	(_name+1)^(0+128)
  3700  068B                     l1961:	
  3701                           
  3702                           ;main.c: 209:         Display_Name(names[name]);
  3703  068B  0021               	movlb	1	; select bank1
  3704  068C  3528               	lslf	_name^(0+128),w
  3705  068D  3EE5               	addlw	(low (_names| 0))& (0+255)
  3706  068E  0086               	movwf	6
  3707  068F  0187               	clrf	7
  3708  0690  3F40               	moviw [0]fsr1
  3709  0691  00F5               	movwf	Display_Name@string1
  3710  0692  3F41               	moviw [1]fsr1
  3711  0693  00F6               	movwf	Display_Name@string1+1
  3712  0694  3181  21BB         	fcall	_Display_Name
  3713  0696  0008               	return
  3714  0697                     __end_of_Get_ADC:	
  3715                           
  3716                           	psect	text9
  3717  023C                     __ptext9:	
  3718 ;; *************** function _checkButton1 *****************
  3719 ;; Defined at:
  3720 ;;		line 126 in file "main.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  string1        12    9[BANK1 ] unsigned char [12]
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Totals:         0       3      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;Total ram usage:       15 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    8
  3741 ;; This function calls:
  3742 ;;		_ADC_GetConversion
  3743 ;;		_Display_Name
  3744 ;;		_sprintf
  3745 ;; This function is called by:
  3746 ;;		_Get_ADC
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function _checkButton1
  3752  023C                     _checkButton1:	
  3753                           
  3754                           ;main.c: 127:     char string1[12];;main.c: 128:     if(button == 0){
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _checkButton1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3758  023C  0021               	movlb	1	; select bank1
  3759  023D  082D               	movf	_button^(0+128),w
  3760  023E  1D03               	btfss	3,2
  3761  023F  2A50               	goto	l200
  3762                           
  3763                           ;main.c: 129:         if(PORTCbits.RC4 == 0){
  3764  0240  0020               	movlb	0	; select bank0
  3765  0241  1A0E               	btfsc	14,4	;volatile
  3766  0242  0008               	return
  3767                           
  3768                           ;main.c: 130:             _delay((unsigned long)((100)*(500000/4000.0)));
  3769  0243  3011               	movlw	17
  3770  0244  0020               	movlb	0	; select bank0
  3771  0245  00EA               	movwf	??_checkButton1
  3772  0246  303A               	movlw	58
  3773  0247                     u1677:	
  3774  0247  0B89               	decfsz	9,f
  3775  0248  2A47               	goto	u1677
  3776  0249  0BEA               	decfsz	??_checkButton1,f
  3777  024A  2A47               	goto	u1677
  3778  024B  0000               	nop
  3779                           
  3780                           ;main.c: 131:             button = 1;
  3781  024C  0021               	movlb	1	; select bank1
  3782  024D  01AD               	clrf	_button^(0+128)
  3783  024E  0AAD               	incf	_button^(0+128),f
  3784  024F  0008               	return
  3785  0250                     l200:	
  3786  0250  0020               	movlb	0	; select bank0
  3787  0251  1E0E               	btfss	14,4	;volatile
  3788  0252  0008               	return
  3789                           
  3790                           ;main.c: 134:             button = 0;
  3791  0253  0021               	movlb	1	; select bank1
  3792  0254  01AD               	clrf	_button^(0+128)
  3793                           
  3794                           ;main.c: 135:             switch1 = 1;
  3795  0255  01AC               	clrf	_switch1^(0+128)
  3796  0256  0AAC               	incf	_switch1^(0+128),f
  3797                           
  3798                           ;main.c: 136:             adcResult = ADC_GetConversion(BTN) >> 12;
  3799  0257  3014               	movlw	20
  3800  0258  3180  20FF  3182   	fcall	_ADC_GetConversion
  3801  025B  0870               	movf	?_ADC_GetConversion,w
  3802  025C  0020               	movlb	0	; select bank0
  3803  025D  00EA               	movwf	??_checkButton1
  3804  025E  0871               	movf	?_ADC_GetConversion+1,w
  3805  025F  00EB               	movwf	??_checkButton1+1
  3806  0260  0E6B               	swapf	??_checkButton1+1,w
  3807  0261  390F               	andlw	15
  3808  0262  00EA               	movwf	??_checkButton1
  3809  0263  01EB               	clrf	??_checkButton1+1
  3810  0264  086A               	movf	??_checkButton1,w
  3811  0265  00EC               	movwf	??_checkButton1+2
  3812  0266  086C               	movf	??_checkButton1+2,w
  3813  0267  0021               	movlb	1	; select bank1
  3814  0268  00AA               	movwf	_adcResult^(0+128)
  3815                           
  3816                           ;main.c: 137:             sprintf(string1, "%d", adcResult);
  3817  0269  3034               	movlw	low (STR_5| (0+32768))
  3818  026A  0020               	movlb	0	; select bank0
  3819  026B  00E6               	movwf	sprintf@fmt
  3820  026C  3088               	movlw	high (STR_5| (0+32768))
  3821  026D  00E7               	movwf	sprintf@fmt+1
  3822  026E  0021               	movlb	1	; select bank1
  3823  026F  082A               	movf	_adcResult^(0+128),w
  3824  0270  0020               	movlb	0	; select bank0
  3825  0271  00EA               	movwf	??_checkButton1
  3826  0272  01EB               	clrf	??_checkButton1+1
  3827  0273  086A               	movf	??_checkButton1,w
  3828  0274  00E8               	movwf	?_sprintf+2
  3829  0275  086B               	movf	??_checkButton1+1,w
  3830  0276  00E9               	movwf	?_sprintf+3
  3831  0277  30D7               	movlw	(low (checkButton1@string1| 0))& (0+255)
  3832  0278  3181  2117  3182   	fcall	_sprintf
  3833                           
  3834                           ;main.c: 138:             Display_Name(string1);
  3835  027B  30D7               	movlw	low checkButton1@string1
  3836  027C  00F5               	movwf	Display_Name@string1
  3837  027D  3000               	movlw	high checkButton1@string1
  3838  027E  00F6               	movwf	Display_Name@string1+1
  3839  027F  3181  21BB         	fcall	_Display_Name
  3840  0281  0008               	return
  3841  0282                     __end_of_checkButton1:	
  3842                           
  3843                           	psect	text10
  3844  0117                     __ptext10:	
  3845 ;; *************** function _sprintf *****************
  3846 ;; Defined at:
  3847 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  s               1    wreg     PTR unsigned char 
  3850 ;;		 -> checkButton1@string1(12), 
  3851 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  3852 ;;		 -> STR_5(3), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  s               1    3[BANK1 ] PTR unsigned char 
  3855 ;;		 -> checkButton1@string1(12), 
  3856 ;;  f               5    4[BANK1 ] struct _IO_FILE
  3857 ;;  ret             2    0        int 
  3858 ;;  ap              1    2[BANK1 ] PTR void [1]
  3859 ;;		 -> ?_sprintf(2), 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2   70[BANK0 ] int 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Totals:         1       4       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;Total ram usage:       14 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    7
  3876 ;; This function calls:
  3877 ;;		_vfprintf
  3878 ;; This function is called by:
  3879 ;;		_checkButton1
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _sprintf
  3885  0117                     _sprintf:	
  3886                           
  3887                           ;incstack = 0
  3888                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3889                           ;sprintf@s stored from wreg
  3890  0117  0021               	movlb	1	; select bank1
  3891  0118  00D1               	movwf	sprintf@s^(0+128)
  3892  0119  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3893  011A  00FD               	movwf	??_sprintf
  3894  011B  087D               	movf	??_sprintf,w
  3895  011C  00D0               	movwf	sprintf@ap^(0+128)
  3896  011D  0851               	movf	sprintf@s^(0+128),w
  3897  011E  00FD               	movwf	??_sprintf
  3898  011F  087D               	movf	??_sprintf,w
  3899  0120  00D2               	movwf	sprintf@f^(0+128)
  3900  0121  01D3               	clrf	(sprintf@f^(0+128)+1)
  3901  0122  01D4               	clrf	((sprintf@f+1)^(0+128)+1)
  3902  0123  01D5               	clrf	(sprintf@f^(0+128)+3)
  3903  0124  01D6               	clrf	((sprintf@f+1)^(0+128)+3)
  3904  0125  0020               	movlb	0	; select bank0
  3905  0126  0867               	movf	sprintf@fmt+1,w
  3906  0127  00DF               	movwf	vfprintf@fmt+1
  3907  0128  0866               	movf	sprintf@fmt,w
  3908  0129  00DE               	movwf	vfprintf@fmt
  3909  012A  30D0               	movlw	(low (sprintf@ap| 0))& (0+255)
  3910  012B  00FD               	movwf	??_sprintf
  3911  012C  087D               	movf	??_sprintf,w
  3912  012D  00E0               	movwf	vfprintf@ap
  3913  012E  30D2               	movlw	(low (sprintf@f| 0))& (0+255)
  3914  012F  3181  218C         	fcall	_vfprintf
  3915  0131  0021               	movlb	1	; select bank1
  3916  0132  0853               	movf	(sprintf@f^(0+128)+1),w
  3917  0133  0751               	addwf	sprintf@s^(0+128),w
  3918  0134  00FD               	movwf	??_sprintf
  3919  0135  087D               	movf	??_sprintf,w
  3920  0136  0086               	movwf	6
  3921  0137  0187               	clrf	7
  3922  0138  0181               	clrf	1
  3923  0139  0008               	return
  3924  013A                     __end_of_sprintf:	
  3925                           
  3926                           	psect	text11
  3927  018C                     __ptext11:	
  3928 ;; *************** function _vfprintf *****************
  3929 ;; Defined at:
  3930 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  fp              1    wreg     PTR struct _IO_FILE
  3933 ;;		 -> sprintf@f(5), 
  3934 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3935 ;;		 -> STR_5(3), 
  3936 ;;  ap              1   64[BANK0 ] PTR PTR void 
  3937 ;;		 -> sprintf@ap(1), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  3940 ;;		 -> sprintf@f(5), 
  3941 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  3942 ;;		 -> STR_5(3), 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  2   62[BANK0 ] int 
  3945 ;; Registers used:
  3946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3952 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;Total ram usage:        8 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    6
  3959 ;; This function calls:
  3960 ;;		_vfpfcnvrt
  3961 ;; This function is called by:
  3962 ;;		_sprintf
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _vfprintf
  3968  018C                     _vfprintf:	
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3972                           ;vfprintf@fp stored from wreg
  3973  018C  0020               	movlb	0	; select bank0
  3974  018D  00E3               	movwf	vfprintf@fp
  3975                           
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3977  018E  085F               	movf	vfprintf@fmt+1,w
  3978  018F  00E5               	movwf	vfprintf@cfmt+1
  3979  0190  085E               	movf	vfprintf@fmt,w
  3980  0191  00E4               	movwf	vfprintf@cfmt
  3981                           
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3983  0192  0021               	movlb	1	; select bank1
  3984  0193  01A0               	clrf	_nout^(0+128)
  3985  0194  01A1               	clrf	(_nout+1)^(0+128)
  3986  0195                     l1821:	
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3988                           
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3991  0195  0020               	movlb	0	; select bank0
  3992  0196  0864               	movf	vfprintf@cfmt,w
  3993  0197  0084               	movwf	4
  3994  0198  0865               	movf	vfprintf@cfmt+1,w
  3995  0199  0085               	movwf	5
  3996  019A  0012               	moviw fsr0++
  3997  019B  1903               	btfsc	3,2
  3998  019C  29B2               	goto	l1823
  3999                           
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4001  019D  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4002  019E  00E1               	movwf	??_vfprintf
  4003  019F  0861               	movf	??_vfprintf,w
  4004  01A0  00CE               	movwf	vfpfcnvrt@fmt
  4005  01A1  0860               	movf	vfprintf@ap,w
  4006  01A2  00E2               	movwf	??_vfprintf+1
  4007  01A3  0862               	movf	??_vfprintf+1,w
  4008  01A4  00CF               	movwf	vfpfcnvrt@ap
  4009  01A5  0863               	movf	vfprintf@fp,w
  4010  01A6  3182  22D5  3181   	fcall	_vfpfcnvrt
  4011  01A9  0020               	movlb	0	; select bank0
  4012  01AA  084E               	movf	?_vfpfcnvrt,w
  4013  01AB  0021               	movlb	1	; select bank1
  4014  01AC  07A0               	addwf	_nout^(0+128),f
  4015  01AD  0020               	movlb	0	; select bank0
  4016  01AE  084F               	movf	?_vfpfcnvrt+1,w
  4017  01AF  0021               	movlb	1	; select bank1
  4018  01B0  3DA1               	addwfc	(_nout+1)^(0+128),f
  4019  01B1  2995               	goto	l1821
  4020  01B2                     l1823:	
  4021                           
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4023  01B2  0021               	movlb	1	; select bank1
  4024  01B3  0821               	movf	(_nout+1)^(0+128),w
  4025  01B4  0020               	movlb	0	; select bank0
  4026  01B5  00DF               	movwf	?_vfprintf+1
  4027  01B6  0021               	movlb	1	; select bank1
  4028  01B7  0820               	movf	_nout^(0+128),w
  4029  01B8  0020               	movlb	0	; select bank0
  4030  01B9  00DE               	movwf	?_vfprintf
  4031  01BA  0008               	return
  4032  01BB                     __end_of_vfprintf:	
  4033                           
  4034                           	psect	text12
  4035  02D5                     __ptext12:	
  4036 ;; *************** function _vfpfcnvrt *****************
  4037 ;; Defined at:
  4038 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  fp              1    wreg     PTR struct _IO_FILE
  4041 ;;		 -> sprintf@f(5), 
  4042 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  4043 ;;		 -> vfprintf@cfmt(2), 
  4044 ;;  ap              1   47[BANK0 ] PTR PTR void 
  4045 ;;		 -> sprintf@ap(1), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  4048 ;;		 -> sprintf@f(5), 
  4049 ;;  ll              8   53[BANK0 ] long long 
  4050 ;;  llu             8    0        unsigned long long 
  4051 ;;  f               4    0        unsigned long long 
  4052 ;;  ct              3    0        unsigned char [3]
  4053 ;;  vp              2    0        PTR void 
  4054 ;;  i               2    0        int 
  4055 ;;  done            2    0        int 
  4056 ;;  cp              2    0        PTR unsigned char 
  4057 ;;  c               1    0        unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2   46[BANK0 ] int 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;Total ram usage:       16 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    5
  4074 ;; This function calls:
  4075 ;;		_dtoa
  4076 ;;		_fputc
  4077 ;; This function is called by:
  4078 ;;		_vfprintf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _vfpfcnvrt
  4084  02D5                     _vfpfcnvrt:	
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4088                           ;vfpfcnvrt@fp stored from wreg
  4089  02D5  0020               	movlb	0	; select bank0
  4090  02D6  00DD               	movwf	vfpfcnvrt@fp
  4091                           
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4093  02D7  084E               	movf	vfpfcnvrt@fmt,w
  4094  02D8  0086               	movwf	6
  4095  02D9  0187               	clrf	7
  4096  02DA  3F40               	moviw [0]fsr1
  4097  02DB  00D0               	movwf	??_vfpfcnvrt
  4098  02DC  3F41               	moviw [1]fsr1
  4099  02DD  00D1               	movwf	??_vfpfcnvrt+1
  4100  02DE  0850               	movf	??_vfpfcnvrt,w
  4101  02DF  0084               	movwf	4
  4102  02E0  0851               	movf	??_vfpfcnvrt+1,w
  4103  02E1  0085               	movwf	5
  4104  02E2  0012               	moviw fsr0++
  4105  02E3  3A25               	xorlw	37
  4106  02E4  1D03               	btfss	3,2
  4107  02E5  2B82               	goto	l1801
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4110  02E6  084E               	movf	vfpfcnvrt@fmt,w
  4111  02E7  0086               	movwf	6
  4112  02E8  0187               	clrf	7
  4113  02E9  3001               	movlw	1
  4114  02EA  0781               	addwf	1,f
  4115  02EB  3141               	addfsr 1,1
  4116  02EC  1803               	skipnc
  4117  02ED  0A81               	incf	1,f
  4118                           
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4120  02EE  0021               	movlb	1	; select bank1
  4121  02EF  01A2               	clrf	_width^(0+128)
  4122  02F0  01A3               	clrf	(_width+1)^(0+128)
  4123  02F1  01A6               	clrf	_flags^(0+128)
  4124  02F2  01A7               	clrf	(_flags+1)^(0+128)
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4127  02F3  30FF               	movlw	255
  4128  02F4  00A4               	movwf	_prec^(0+128)
  4129  02F5  30FF               	movlw	255
  4130  02F6  00A5               	movwf	(_prec^(0+128)+1)
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4133  02F7  0020               	movlb	0	; select bank0
  4134  02F8  084E               	movf	vfpfcnvrt@fmt,w
  4135  02F9  0086               	movwf	6
  4136  02FA  0187               	clrf	7
  4137  02FB  3F40               	moviw [0]fsr1
  4138  02FC  00D0               	movwf	??_vfpfcnvrt
  4139  02FD  3F41               	moviw [1]fsr1
  4140  02FE  00D1               	movwf	??_vfpfcnvrt+1
  4141  02FF  0850               	movf	??_vfpfcnvrt,w
  4142  0300  0084               	movwf	4
  4143  0301  0851               	movf	??_vfpfcnvrt+1,w
  4144  0302  0085               	movwf	5
  4145  0303  0012               	moviw fsr0++
  4146  0304  3A64               	xorlw	100
  4147  0305  1903               	btfsc	3,2
  4148  0306  2B16               	goto	l1777
  4149  0307  084E               	movf	vfpfcnvrt@fmt,w
  4150  0308  0086               	movwf	6
  4151  0309  0187               	clrf	7
  4152  030A  3F40               	moviw [0]fsr1
  4153  030B  00D0               	movwf	??_vfpfcnvrt
  4154  030C  3F41               	moviw [1]fsr1
  4155  030D  00D1               	movwf	??_vfpfcnvrt+1
  4156  030E  0850               	movf	??_vfpfcnvrt,w
  4157  030F  0084               	movwf	4
  4158  0310  0851               	movf	??_vfpfcnvrt+1,w
  4159  0311  0085               	movwf	5
  4160  0312  0012               	moviw fsr0++
  4161  0313  3A69               	xorlw	105
  4162  0314  1D03               	btfss	3,2
  4163  0315  2B50               	goto	l1785
  4164  0316                     l1777:	
  4165                           
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4167  0316  084E               	movf	vfpfcnvrt@fmt,w
  4168  0317  0086               	movwf	6
  4169  0318  0187               	clrf	7
  4170  0319  3001               	movlw	1
  4171  031A  0781               	addwf	1,f
  4172  031B  3141               	addfsr 1,1
  4173  031C  1803               	skipnc
  4174  031D  0A81               	incf	1,f
  4175                           
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4177  031E  084F               	movf	vfpfcnvrt@ap,w
  4178  031F  0086               	movwf	6
  4179  0320  0187               	clrf	7
  4180  0321  0801               	movf	1,w
  4181  0322  0084               	movwf	4
  4182  0323  0185               	clrf	5
  4183  0324  3002               	movlw	2
  4184  0325  0781               	addwf	1,f
  4185  0326  3F00               	moviw [0]fsr0
  4186  0327  00D0               	movwf	??_vfpfcnvrt
  4187  0328  3F01               	moviw [1]fsr0
  4188  0329  00D1               	movwf	??_vfpfcnvrt+1
  4189  032A  0850               	movf	??_vfpfcnvrt,w
  4190  032B  00D5               	movwf	vfpfcnvrt@ll
  4191  032C  0851               	movf	??_vfpfcnvrt+1,w
  4192  032D  00D6               	movwf	vfpfcnvrt@ll+1
  4193  032E  0D89               	rlf	9,f
  4194  032F  3B89               	subwfb	9,f
  4195  0330  0989               	comf	9,f
  4196  0331  00D7               	movwf	vfpfcnvrt@ll+2
  4197  0332  00D8               	movwf	vfpfcnvrt@ll+3
  4198  0333  00D9               	movwf	vfpfcnvrt@ll+4
  4199  0334  00DA               	movwf	vfpfcnvrt@ll+5
  4200  0335  00DB               	movwf	vfpfcnvrt@ll+6
  4201  0336  00DC               	movwf	vfpfcnvrt@ll+7
  4202                           
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4204  0337  0855               	movf	vfpfcnvrt@ll,w
  4205  0338  00B0               	movwf	dtoa@d
  4206  0339  0856               	movf	vfpfcnvrt@ll+1,w
  4207  033A  00B1               	movwf	dtoa@d+1
  4208  033B  0857               	movf	vfpfcnvrt@ll+2,w
  4209  033C  00B2               	movwf	dtoa@d+2
  4210  033D  0858               	movf	vfpfcnvrt@ll+3,w
  4211  033E  00B3               	movwf	dtoa@d+3
  4212  033F  0859               	movf	vfpfcnvrt@ll+4,w
  4213  0340  00B4               	movwf	dtoa@d+4
  4214  0341  085A               	movf	vfpfcnvrt@ll+5,w
  4215  0342  00B5               	movwf	dtoa@d+5
  4216  0343  085B               	movf	vfpfcnvrt@ll+6,w
  4217  0344  00B6               	movwf	dtoa@d+6
  4218  0345  085C               	movf	vfpfcnvrt@ll+7,w
  4219  0346  00B7               	movwf	dtoa@d+7
  4220  0347  085D               	movf	vfpfcnvrt@fp,w
  4221  0348  3186  2697         	fcall	_dtoa
  4222  034A  0020               	movlb	0	; select bank0
  4223  034B  0831               	movf	?_dtoa+1,w
  4224  034C  00CF               	movwf	?_vfpfcnvrt+1
  4225  034D  0830               	movf	?_dtoa,w
  4226  034E  00CE               	movwf	?_vfpfcnvrt
  4227  034F  0008               	return
  4228  0350                     l1785:	
  4229                           
  4230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4231  0350  084E               	movf	vfpfcnvrt@fmt,w
  4232  0351  0086               	movwf	6
  4233  0352  0187               	clrf	7
  4234  0353  3F40               	moviw [0]fsr1
  4235  0354  00D0               	movwf	??_vfpfcnvrt
  4236  0355  3F41               	moviw [1]fsr1
  4237  0356  00D1               	movwf	??_vfpfcnvrt+1
  4238  0357  0850               	movf	??_vfpfcnvrt,w
  4239  0358  0084               	movwf	4
  4240  0359  0851               	movf	??_vfpfcnvrt+1,w
  4241  035A  0085               	movwf	5
  4242  035B  0012               	moviw fsr0++
  4243  035C  3A25               	xorlw	37
  4244  035D  1D03               	btfss	3,2
  4245  035E  2B77               	goto	l1795
  4246                           
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4248  035F  084E               	movf	vfpfcnvrt@fmt,w
  4249  0360  0086               	movwf	6
  4250  0361  0187               	clrf	7
  4251  0362  3001               	movlw	1
  4252  0363  0781               	addwf	1,f
  4253  0364  3141               	addfsr 1,1
  4254  0365  1803               	skipnc
  4255  0366  0A81               	incf	1,f
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4258  0367  3025               	movlw	37
  4259  0368  00F0               	movwf	fputc@c
  4260  0369  3000               	movlw	0
  4261  036A  00F1               	movwf	fputc@c+1
  4262  036B  085D               	movf	vfpfcnvrt@fp,w
  4263  036C  00D0               	movwf	??_vfpfcnvrt
  4264  036D  0850               	movf	??_vfpfcnvrt,w
  4265  036E  00F2               	movwf	fputc@fp
  4266  036F  3181  21F7         	fcall	_fputc
  4267  0371                     l1791:	
  4268                           
  4269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4270  0371  3001               	movlw	1
  4271  0372  0020               	movlb	0	; select bank0
  4272  0373  00CE               	movwf	?_vfpfcnvrt
  4273  0374  3000               	movlw	0
  4274  0375  00CF               	movwf	?_vfpfcnvrt+1
  4275  0376  0008               	return
  4276  0377                     l1795:	
  4277                           
  4278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4279  0377  084E               	movf	vfpfcnvrt@fmt,w
  4280  0378  0086               	movwf	6
  4281  0379  0187               	clrf	7
  4282  037A  3001               	movlw	1
  4283  037B  0781               	addwf	1,f
  4284  037C  3141               	addfsr 1,1
  4285  037D  1803               	skipnc
  4286  037E  0A81               	incf	1,f
  4287                           
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4289  037F  01CE               	clrf	?_vfpfcnvrt
  4290  0380  01CF               	clrf	?_vfpfcnvrt+1
  4291  0381  0008               	return
  4292  0382                     l1801:	
  4293                           
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4295  0382  084E               	movf	vfpfcnvrt@fmt,w
  4296  0383  0086               	movwf	6
  4297  0384  0187               	clrf	7
  4298  0385  3F40               	moviw [0]fsr1
  4299  0386  00D0               	movwf	??_vfpfcnvrt
  4300  0387  3F41               	moviw [1]fsr1
  4301  0388  00D1               	movwf	??_vfpfcnvrt+1
  4302  0389  0850               	movf	??_vfpfcnvrt,w
  4303  038A  0084               	movwf	4
  4304  038B  0851               	movf	??_vfpfcnvrt+1,w
  4305  038C  0085               	movwf	5
  4306  038D  0800               	movf	0,w	;code access
  4307  038E  00D2               	movwf	??_vfpfcnvrt+2
  4308  038F  01D3               	clrf	??_vfpfcnvrt+3
  4309  0390  0852               	movf	??_vfpfcnvrt+2,w
  4310  0391  00F0               	movwf	fputc@c
  4311  0392  0853               	movf	??_vfpfcnvrt+3,w
  4312  0393  00F1               	movwf	fputc@c+1
  4313  0394  085D               	movf	vfpfcnvrt@fp,w
  4314  0395  00D4               	movwf	??_vfpfcnvrt+4
  4315  0396  0854               	movf	??_vfpfcnvrt+4,w
  4316  0397  00F2               	movwf	fputc@fp
  4317  0398  3181  21F7  3182   	fcall	_fputc
  4318                           
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4320  039B  0020               	movlb	0	; select bank0
  4321  039C  084E               	movf	vfpfcnvrt@fmt,w
  4322  039D  0086               	movwf	6
  4323  039E  0187               	clrf	7
  4324  039F  3001               	movlw	1
  4325  03A0  0781               	addwf	1,f
  4326  03A1  3141               	addfsr 1,1
  4327  03A2  1803               	skipnc
  4328  03A3  0A81               	incf	1,f
  4329  03A4  2B71               	goto	l1791
  4330  03A5                     __end_of_vfpfcnvrt:	
  4331                           
  4332                           	psect	text13
  4333  0697                     __ptext13:	
  4334 ;; *************** function _dtoa *****************
  4335 ;; Defined at:
  4336 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  fp              1    wreg     PTR struct _IO_FILE
  4339 ;;		 -> sprintf@f(5), 
  4340 ;;  d               8   16[BANK0 ] long long 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  4343 ;;		 -> sprintf@f(5), 
  4344 ;;  n               8   36[BANK0 ] long long 
  4345 ;;  i               2   44[BANK0 ] int 
  4346 ;;  s               2   34[BANK0 ] int 
  4347 ;;  w               2   32[BANK0 ] int 
  4348 ;;  p               2   30[BANK0 ] int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2   16[BANK0 ] int 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4358 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;Total ram usage:       30 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    4
  4365 ;; This function calls:
  4366 ;;		___aodiv
  4367 ;;		___aomod
  4368 ;;		_abs
  4369 ;;		_pad
  4370 ;; This function is called by:
  4371 ;;		_vfpfcnvrt
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _dtoa
  4377  0697                     _dtoa:	
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4381                           ;dtoa@fp stored from wreg
  4382  0697  0020               	movlb	0	; select bank0
  4383  0698  00BD               	movwf	dtoa@fp
  4384                           
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4386  0699  0830               	movf	dtoa@d,w
  4387  069A  00C4               	movwf	dtoa@n
  4388  069B  0831               	movf	dtoa@d+1,w
  4389  069C  00C5               	movwf	dtoa@n+1
  4390  069D  0832               	movf	dtoa@d+2,w
  4391  069E  00C6               	movwf	dtoa@n+2
  4392  069F  0833               	movf	dtoa@d+3,w
  4393  06A0  00C7               	movwf	dtoa@n+3
  4394  06A1  0834               	movf	dtoa@d+4,w
  4395  06A2  00C8               	movwf	dtoa@n+4
  4396  06A3  0835               	movf	dtoa@d+5,w
  4397  06A4  00C9               	movwf	dtoa@n+5
  4398  06A5  0836               	movf	dtoa@d+6,w
  4399  06A6  00CA               	movwf	dtoa@n+6
  4400  06A7  0837               	movf	dtoa@d+7,w
  4401  06A8  00CB               	movwf	dtoa@n+7
  4402                           
  4403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4404  06A9  3044               	movlw	low dtoa@n
  4405  06AA  0086               	movwf	6
  4406  06AB  3000               	movlw	high dtoa@n
  4407  06AC  0087               	movwf	7
  4408  06AD  3F47               	moviw [7]fsr1
  4409  06AE  00B8               	movwf	??_dtoa
  4410  06AF  1FB8               	btfss	??_dtoa,7
  4411  06B0  2EB3               	goto	u1160
  4412  06B1  3001               	movlw	1
  4413  06B2  2EB4               	goto	u1170
  4414  06B3                     u1160:	
  4415  06B3  3000               	movlw	0
  4416  06B4                     u1170:	
  4417  06B4  0020               	movlb	0	; select bank0
  4418  06B5  00B9               	movwf	??_dtoa+1
  4419  06B6  01BA               	clrf	??_dtoa+2
  4420  06B7  0839               	movf	??_dtoa+1,w
  4421  06B8  00C2               	movwf	dtoa@s
  4422  06B9  083A               	movf	??_dtoa+2,w
  4423  06BA  00C3               	movwf	dtoa@s+1
  4424                           
  4425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4426  06BB  0842               	movf	dtoa@s,w
  4427  06BC  0443               	iorwf	dtoa@s+1,w
  4428  06BD  1903               	btfsc	3,2
  4429  06BE  2EDD               	goto	l479
  4430                           
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4432  06BF  09C4               	comf	dtoa@n,f
  4433  06C0  09C5               	comf	dtoa@n+1,f
  4434  06C1  09C6               	comf	dtoa@n+2,f
  4435  06C2  09C7               	comf	dtoa@n+3,f
  4436  06C3  09C8               	comf	dtoa@n+4,f
  4437  06C4  09C9               	comf	dtoa@n+5,f
  4438  06C5  09CA               	comf	dtoa@n+6,f
  4439  06C6  09CB               	comf	dtoa@n+7,f
  4440  06C7  0AC4               	incf	dtoa@n,f
  4441  06C8  1D03               	skipz
  4442  06C9  2EDD               	goto	l479
  4443  06CA  0AC5               	incf	dtoa@n+1,f
  4444  06CB  1D03               	skipz
  4445  06CC  2EDD               	goto	l479
  4446  06CD  0AC6               	incf	dtoa@n+2,f
  4447  06CE  1D03               	skipz
  4448  06CF  2EDD               	goto	l479
  4449  06D0  0AC7               	incf	dtoa@n+3,f
  4450  06D1  1D03               	skipz
  4451  06D2  2EDD               	goto	l479
  4452  06D3  0AC8               	incf	dtoa@n+4,f
  4453  06D4  1D03               	skipz
  4454  06D5  2EDD               	goto	l479
  4455  06D6  0AC9               	incf	dtoa@n+5,f
  4456  06D7  1D03               	skipz
  4457  06D8  2EDD               	goto	l479
  4458  06D9  0ACA               	incf	dtoa@n+6,f
  4459  06DA  1D03               	skipz
  4460  06DB  2EDD               	goto	l479
  4461  06DC  0ACB               	incf	dtoa@n+7,f
  4462  06DD                     l479:	
  4463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  4464                           
  4465                           
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4467  06DD  0021               	movlb	1	; select bank1
  4468  06DE  1BA5               	btfsc	(_prec+1)^(0+128),7
  4469  06DF  2EE4               	goto	l480
  4470                           
  4471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4472  06E0  30FD               	movlw	253
  4473  06E1  05A6               	andwf	_flags^(0+128),f
  4474  06E2  30FF               	movlw	255
  4475  06E3  05A7               	andwf	(_flags+1)^(0+128),f
  4476  06E4                     l480:	
  4477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  4478                           
  4479                           
  4480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4481  06E4  0825               	movf	(_prec+1)^(0+128),w
  4482  06E5  3A80               	xorlw	128
  4483  06E6  0020               	movlb	0	; select bank0
  4484  06E7  00B8               	movwf	??_dtoa
  4485  06E8  3080               	movlw	128
  4486  06E9  0238               	subwf	??_dtoa,w
  4487  06EA  1D03               	skipz
  4488  06EB  2EEF               	goto	u1215
  4489  06EC  3001               	movlw	1
  4490  06ED  0021               	movlb	1	; select bank1
  4491  06EE  0224               	subwf	_prec^(0+128),w
  4492  06EF                     u1215:	
  4493  06EF  1803               	skipnc
  4494  06F0  2EF7               	goto	l1711
  4495  06F1  3001               	movlw	1
  4496  06F2  0020               	movlb	0	; select bank0
  4497  06F3  00BE               	movwf	dtoa@p
  4498  06F4  3000               	movlw	0
  4499  06F5  00BF               	movwf	dtoa@p+1
  4500  06F6  2EFF               	goto	l484
  4501  06F7                     l1711:	
  4502  06F7  0021               	movlb	1	; select bank1
  4503  06F8  0825               	movf	(_prec+1)^(0+128),w
  4504  06F9  0020               	movlb	0	; select bank0
  4505  06FA  00BF               	movwf	dtoa@p+1
  4506  06FB  0021               	movlb	1	; select bank1
  4507  06FC  0824               	movf	_prec^(0+128),w
  4508  06FD  0020               	movlb	0	; select bank0
  4509  06FE  00BE               	movwf	dtoa@p
  4510  06FF                     l484:	
  4511                           
  4512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4513  06FF  0021               	movlb	1	; select bank1
  4514  0700  0823               	movf	(_width+1)^(0+128),w
  4515  0701  0020               	movlb	0	; select bank0
  4516  0702  00C1               	movwf	dtoa@w+1
  4517  0703  0021               	movlb	1	; select bank1
  4518  0704  0822               	movf	_width^(0+128),w
  4519  0705  0020               	movlb	0	; select bank0
  4520  0706  00C0               	movwf	dtoa@w
  4521                           
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4523  0707  0842               	movf	dtoa@s,w
  4524  0708  0443               	iorwf	dtoa@s+1,w
  4525  0709  1D03               	btfss	3,2
  4526  070A  2F0E               	goto	l1717
  4527  070B  0021               	movlb	1	; select bank1
  4528  070C  1D26               	btfss	_flags^(0+128),2
  4529  070D  2F13               	goto	l485
  4530  070E                     l1717:	
  4531                           
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4533  070E  30FF               	movlw	255
  4534  070F  0020               	movlb	0	; select bank0
  4535  0710  07C0               	addwf	dtoa@w,f
  4536  0711  30FF               	movlw	255
  4537  0712  3DC1               	addwfc	dtoa@w+1,f
  4538  0713                     l485:	
  4539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  4540                           
  4541                           
  4542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4543  0713  301F               	movlw	31
  4544  0714  0020               	movlb	0	; select bank0
  4545  0715  00CC               	movwf	dtoa@i
  4546  0716  3000               	movlw	0
  4547  0717  00CD               	movwf	dtoa@i+1
  4548                           
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4550  0718  0021               	movlb	1	; select bank1
  4551  0719  01CD               	clrf	(_dbuf^(0+128)+31)
  4552                           
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4554  071A  2FA8               	goto	l488
  4555  071B                     l1731:	
  4556  071B  0020               	movlb	0	; select bank0
  4557  071C  0844               	movf	dtoa@n,w
  4558  071D  0445               	iorwf	dtoa@n+1,w
  4559  071E  0446               	iorwf	dtoa@n+2,w
  4560  071F  0447               	iorwf	dtoa@n+3,w
  4561  0720  0448               	iorwf	dtoa@n+4,w
  4562  0721  0449               	iorwf	dtoa@n+5,w
  4563  0722  044A               	iorwf	dtoa@n+6,w
  4564  0723  044B               	iorwf	dtoa@n+7,w
  4565  0724  1D03               	skipz
  4566  0725  2F40               	goto	l1721
  4567  0726  083F               	movf	dtoa@p+1,w
  4568  0727  3A80               	xorlw	128
  4569  0728  00B8               	movwf	??_dtoa
  4570  0729  3080               	movlw	128
  4571  072A  0238               	subwf	??_dtoa,w
  4572  072B  1D03               	skipz
  4573  072C  2F2F               	goto	u1265
  4574  072D  3001               	movlw	1
  4575  072E  023E               	subwf	dtoa@p,w
  4576  072F                     u1265:	
  4577  072F  1803               	skipnc
  4578  0730  2F40               	goto	l1721
  4579  0731  0020               	movlb	0	; select bank0
  4580  0732  0841               	movf	dtoa@w+1,w
  4581  0733  3A80               	xorlw	128
  4582  0734  00B8               	movwf	??_dtoa
  4583  0735  3080               	movlw	128
  4584  0736  0238               	subwf	??_dtoa,w
  4585  0737  1D03               	skipz
  4586  0738  2F3B               	goto	u1275
  4587  0739  3001               	movlw	1
  4588  073A  0240               	subwf	dtoa@w,w
  4589  073B                     u1275:	
  4590  073B  1C03               	skipc
  4591  073C  2FB4               	goto	l1739
  4592  073D  0021               	movlb	1	; select bank1
  4593  073E  1CA6               	btfss	_flags^(0+128),1
  4594  073F  2FB4               	goto	l1739
  4595  0740                     l1721:	
  4596                           
  4597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4598  0740  30FF               	movlw	255
  4599  0741  0020               	movlb	0	; select bank0
  4600  0742  07CC               	addwf	dtoa@i,f
  4601  0743  30FF               	movlw	255
  4602  0744  3DCD               	addwfc	dtoa@i+1,f
  4603                           
  4604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4605  0745  300A               	movlw	10
  4606  0746  00A0               	movwf	___aomod@divisor
  4607  0747  01A1               	clrf	___aomod@divisor+1
  4608  0748  01A2               	clrf	___aomod@divisor+2
  4609  0749  01A3               	clrf	___aomod@divisor+3
  4610  074A  01A4               	clrf	___aomod@divisor+4
  4611  074B  01A5               	clrf	___aomod@divisor+5
  4612  074C  01A6               	clrf	___aomod@divisor+6
  4613  074D  01A7               	clrf	___aomod@divisor+7
  4614  074E  0844               	movf	dtoa@n,w
  4615  074F  00A8               	movwf	___aomod@dividend
  4616  0750  0845               	movf	dtoa@n+1,w
  4617  0751  00A9               	movwf	___aomod@dividend+1
  4618  0752  0846               	movf	dtoa@n+2,w
  4619  0753  00AA               	movwf	___aomod@dividend+2
  4620  0754  0847               	movf	dtoa@n+3,w
  4621  0755  00AB               	movwf	___aomod@dividend+3
  4622  0756  0848               	movf	dtoa@n+4,w
  4623  0757  00AC               	movwf	___aomod@dividend+4
  4624  0758  0849               	movf	dtoa@n+5,w
  4625  0759  00AD               	movwf	___aomod@dividend+5
  4626  075A  084A               	movf	dtoa@n+6,w
  4627  075B  00AE               	movwf	___aomod@dividend+6
  4628  075C  084B               	movf	dtoa@n+7,w
  4629  075D  00AF               	movwf	___aomod@dividend+7
  4630  075E  3183  23A5  3186   	fcall	___aomod
  4631  0761  0020               	movlb	0	; select bank0
  4632  0762  0821               	movf	?___aomod+1,w
  4633  0763  00F4               	movwf	abs@a+1
  4634  0764  0820               	movf	?___aomod,w
  4635  0765  00F3               	movwf	abs@a
  4636  0766  3180  20E8  3186   	fcall	_abs
  4637  0769  0873               	movf	?_abs,w
  4638  076A  3E30               	addlw	48
  4639  076B  0020               	movlb	0	; select bank0
  4640  076C  00B8               	movwf	??_dtoa
  4641  076D  084C               	movf	dtoa@i,w
  4642  076E  3EAE               	addlw	(low (_dbuf| 0))& (0+255)
  4643  076F  0086               	movwf	6
  4644  0770  0187               	clrf	7
  4645  0771  0838               	movf	??_dtoa,w
  4646  0772  0081               	movwf	1
  4647                           
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4649  0773  30FF               	movlw	255
  4650  0774  07BE               	addwf	dtoa@p,f
  4651  0775  30FF               	movlw	255
  4652  0776  3DBF               	addwfc	dtoa@p+1,f
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4655  0777  30FF               	movlw	255
  4656  0778  07C0               	addwf	dtoa@w,f
  4657  0779  30FF               	movlw	255
  4658  077A  3DC1               	addwfc	dtoa@w+1,f
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4661  077B  300A               	movlw	10
  4662  077C  00A0               	movwf	___aodiv@divisor
  4663  077D  01A1               	clrf	___aodiv@divisor+1
  4664  077E  01A2               	clrf	___aodiv@divisor+2
  4665  077F  01A3               	clrf	___aodiv@divisor+3
  4666  0780  01A4               	clrf	___aodiv@divisor+4
  4667  0781  01A5               	clrf	___aodiv@divisor+5
  4668  0782  01A6               	clrf	___aodiv@divisor+6
  4669  0783  01A7               	clrf	___aodiv@divisor+7
  4670  0784  0844               	movf	dtoa@n,w
  4671  0785  00A8               	movwf	___aodiv@dividend
  4672  0786  0845               	movf	dtoa@n+1,w
  4673  0787  00A9               	movwf	___aodiv@dividend+1
  4674  0788  0846               	movf	dtoa@n+2,w
  4675  0789  00AA               	movwf	___aodiv@dividend+2
  4676  078A  0847               	movf	dtoa@n+3,w
  4677  078B  00AB               	movwf	___aodiv@dividend+3
  4678  078C  0848               	movf	dtoa@n+4,w
  4679  078D  00AC               	movwf	___aodiv@dividend+4
  4680  078E  0849               	movf	dtoa@n+5,w
  4681  078F  00AD               	movwf	___aodiv@dividend+5
  4682  0790  084A               	movf	dtoa@n+6,w
  4683  0791  00AE               	movwf	___aodiv@dividend+6
  4684  0792  084B               	movf	dtoa@n+7,w
  4685  0793  00AF               	movwf	___aodiv@dividend+7
  4686  0794  3184  2481  3186   	fcall	___aodiv
  4687  0797  0020               	movlb	0	; select bank0
  4688  0798  0820               	movf	?___aodiv,w
  4689  0799  00C4               	movwf	dtoa@n
  4690  079A  0821               	movf	?___aodiv+1,w
  4691  079B  00C5               	movwf	dtoa@n+1
  4692  079C  0822               	movf	?___aodiv+2,w
  4693  079D  00C6               	movwf	dtoa@n+2
  4694  079E  0823               	movf	?___aodiv+3,w
  4695  079F  00C7               	movwf	dtoa@n+3
  4696  07A0  0824               	movf	?___aodiv+4,w
  4697  07A1  00C8               	movwf	dtoa@n+4
  4698  07A2  0825               	movf	?___aodiv+5,w
  4699  07A3  00C9               	movwf	dtoa@n+5
  4700  07A4  0826               	movf	?___aodiv+6,w
  4701  07A5  00CA               	movwf	dtoa@n+6
  4702  07A6  0827               	movf	?___aodiv+7,w
  4703  07A7  00CB               	movwf	dtoa@n+7
  4704  07A8                     l488:	
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  4706                           
  4707                           
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4709  07A8  0020               	movlb	0	; select bank0
  4710  07A9  084D               	movf	dtoa@i+1,w
  4711  07AA  3A80               	xorlw	128
  4712  07AB  00B8               	movwf	??_dtoa
  4713  07AC  3080               	movlw	128
  4714  07AD  0238               	subwf	??_dtoa,w
  4715  07AE  1D03               	skipz
  4716  07AF  2FB2               	goto	u1245
  4717  07B0  3001               	movlw	1
  4718  07B1  024C               	subwf	dtoa@i,w
  4719  07B2                     u1245:	
  4720  07B2  1803               	btfsc	3,0
  4721  07B3  2F1B               	goto	l1731
  4722  07B4                     l1739:	
  4723                           
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4725  07B4  0020               	movlb	0	; select bank0
  4726  07B5  0842               	movf	dtoa@s,w
  4727  07B6  0443               	iorwf	dtoa@s+1,w
  4728  07B7  1D03               	btfss	3,2
  4729  07B8  2FBC               	goto	l1743
  4730  07B9  0021               	movlb	1	; select bank1
  4731  07BA  1D26               	btfss	_flags^(0+128),2
  4732  07BB  2FD3               	goto	l1753
  4733  07BC                     l1743:	
  4734                           
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4736  07BC  30FF               	movlw	255
  4737  07BD  0020               	movlb	0	; select bank0
  4738  07BE  07CC               	addwf	dtoa@i,f
  4739  07BF  30FF               	movlw	255
  4740  07C0  3DCD               	addwfc	dtoa@i+1,f
  4741                           
  4742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4743  07C1  0842               	movf	dtoa@s,w
  4744  07C2  0443               	iorwf	dtoa@s+1,w
  4745  07C3  1D03               	btfss	3,2
  4746  07C4  2FC7               	goto	l1749
  4747  07C5  302B               	movlw	43
  4748  07C6  2FC8               	goto	L1
  4749  07C7                     l1749:	
  4750  07C7  302D               	movlw	45
  4751  07C8                     L1:	
  4752  07C8  00BB               	movwf	_dtoa$602
  4753  07C9  3000               	movlw	0
  4754  07CA  00BC               	movwf	_dtoa$602+1
  4755  07CB  083B               	movf	_dtoa$602,w
  4756  07CC  00B8               	movwf	??_dtoa
  4757  07CD  084C               	movf	dtoa@i,w
  4758  07CE  3EAE               	addlw	(low (_dbuf| 0))& (0+255)
  4759  07CF  0086               	movwf	6
  4760  07D0  0187               	clrf	7
  4761  07D1  0838               	movf	??_dtoa,w
  4762  07D2  0081               	movwf	1
  4763  07D3                     l1753:	
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4766  07D3  0020               	movlb	0	; select bank0
  4767  07D4  084C               	movf	dtoa@i,w
  4768  07D5  3EAE               	addlw	(low (_dbuf| 0))& (0+255)
  4769  07D6  00B8               	movwf	??_dtoa
  4770  07D7  0838               	movf	??_dtoa,w
  4771  07D8  00A4               	movwf	pad@buf
  4772  07D9  0841               	movf	dtoa@w+1,w
  4773  07DA  00A6               	movwf	pad@p+1
  4774  07DB  0840               	movf	dtoa@w,w
  4775  07DC  00A5               	movwf	pad@p
  4776  07DD  083D               	movf	dtoa@fp,w
  4777  07DE  3182  2282         	fcall	_pad
  4778  07E0  0020               	movlb	0	; select bank0
  4779  07E1  0825               	movf	?_pad+1,w
  4780  07E2  00B1               	movwf	?_dtoa+1
  4781  07E3  0824               	movf	?_pad,w
  4782  07E4  00B0               	movwf	?_dtoa
  4783  07E5  0008               	return
  4784  07E6                     __end_of_dtoa:	
  4785                           
  4786                           	psect	text14
  4787  0282                     __ptext14:	
  4788 ;; *************** function _pad *****************
  4789 ;; Defined at:
  4790 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  fp              1    wreg     PTR struct _IO_FILE
  4793 ;;		 -> sprintf@f(5), 
  4794 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  4795 ;;		 -> dbuf(32), 
  4796 ;;  p               2    5[BANK0 ] int 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  4799 ;;		 -> sprintf@f(5), 
  4800 ;;  w               2    9[BANK0 ] int 
  4801 ;;  i               2    7[BANK0 ] int 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  2    4[BANK0 ] int 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4811 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;Total ram usage:        9 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		_fputc
  4820 ;;		_fputs
  4821 ;;		_strlen
  4822 ;; This function is called by:
  4823 ;;		_dtoa
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function _pad
  4829  0282                     _pad:	
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4833                           ;pad@fp stored from wreg
  4834  0282  0020               	movlb	0	; select bank0
  4835  0283  00AB               	movwf	pad@fp
  4836                           
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4838  0284  0021               	movlb	1	; select bank1
  4839  0285  1C26               	btfss	_flags^(0+128),0
  4840  0286  2A90               	goto	l1609
  4841                           
  4842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4843  0287  0020               	movlb	0	; select bank0
  4844  0288  082B               	movf	pad@fp,w
  4845  0289  00FC               	movwf	??_pad
  4846  028A  087C               	movf	??_pad,w
  4847  028B  00F8               	movwf	fputs@fp
  4848  028C  0824               	movf	pad@buf,w
  4849  028D  3181  213A  3182   	fcall	_fputs
  4850  0290                     l1609:	
  4851                           
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4853  0290  0020               	movlb	0	; select bank0
  4854  0291  1BA6               	btfsc	pad@p+1,7
  4855  0292  2A98               	goto	l1613
  4856  0293  0826               	movf	pad@p+1,w
  4857  0294  00AA               	movwf	pad@w+1
  4858  0295  0825               	movf	pad@p,w
  4859  0296  00A9               	movwf	pad@w
  4860  0297  2A9A               	goto	l471
  4861  0298                     l1613:	
  4862  0298  01A9               	clrf	pad@w
  4863  0299  01AA               	clrf	pad@w+1
  4864  029A                     l471:	
  4865                           
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4867  029A  01A7               	clrf	pad@i
  4868  029B  01A8               	clrf	pad@i+1
  4869  029C                     l1619:	
  4870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4871                           
  4872                           
  4873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4874  029C  0828               	movf	pad@i+1,w
  4875  029D  3A80               	xorlw	128
  4876  029E  00FC               	movwf	??_pad
  4877  029F  082A               	movf	pad@w+1,w
  4878  02A0  3A80               	xorlw	128
  4879  02A1  027C               	subwf	??_pad,w
  4880  02A2  1D03               	skipz
  4881  02A3  2AA6               	goto	u925
  4882  02A4  0829               	movf	pad@w,w
  4883  02A5  0227               	subwf	pad@i,w
  4884  02A6                     u925:	
  4885  02A6  1803               	btfsc	3,0
  4886  02A7  2ABA               	goto	l474
  4887                           
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4889  02A8  3020               	movlw	32
  4890  02A9  00F0               	movwf	fputc@c
  4891  02AA  3000               	movlw	0
  4892  02AB  00F1               	movwf	fputc@c+1
  4893  02AC  0020               	movlb	0	; select bank0
  4894  02AD  082B               	movf	pad@fp,w
  4895  02AE  00FC               	movwf	??_pad
  4896  02AF  087C               	movf	??_pad,w
  4897  02B0  00F2               	movwf	fputc@fp
  4898  02B1  3181  21F7  3182   	fcall	_fputc
  4899                           
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4901  02B4  3001               	movlw	1
  4902  02B5  0020               	movlb	0	; select bank0
  4903  02B6  07A7               	addwf	pad@i,f
  4904  02B7  3000               	movlw	0
  4905  02B8  3DA8               	addwfc	pad@i+1,f
  4906  02B9  2A9C               	goto	l1619
  4907  02BA                     l474:	
  4908                           
  4909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4910  02BA  0021               	movlb	1	; select bank1
  4911  02BB  1826               	btfsc	_flags^(0+128),0
  4912  02BC  2AC6               	goto	l1623
  4913                           
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4915  02BD  0020               	movlb	0	; select bank0
  4916  02BE  082B               	movf	pad@fp,w
  4917  02BF  00FC               	movwf	??_pad
  4918  02C0  087C               	movf	??_pad,w
  4919  02C1  00F8               	movwf	fputs@fp
  4920  02C2  0824               	movf	pad@buf,w
  4921  02C3  3181  213A  3182   	fcall	_fputs
  4922  02C6                     l1623:	
  4923                           
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4925  02C6  0020               	movlb	0	; select bank0
  4926  02C7  0824               	movf	pad@buf,w
  4927  02C8  00F0               	movwf	strlen@s
  4928  02C9  3000               	movlw	0
  4929  02CA  00F1               	movwf	strlen@s+1
  4930  02CB  3180  20D1         	fcall	_strlen
  4931  02CD  0020               	movlb	0	; select bank0
  4932  02CE  0829               	movf	pad@w,w
  4933  02CF  0770               	addwf	?_strlen,w
  4934  02D0  00A4               	movwf	?_pad
  4935  02D1  082A               	movf	pad@w+1,w
  4936  02D2  3D71               	addwfc	?_strlen+1,w
  4937  02D3  00A5               	movwf	?_pad+1
  4938  02D4  0008               	return
  4939  02D5                     __end_of_pad:	
  4940                           
  4941                           	psect	text15
  4942  013A                     __ptext15:	
  4943 ;; *************** function _fputs *****************
  4944 ;; Defined at:
  4945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  s               1    wreg     PTR const unsigned char 
  4948 ;;		 -> dbuf(32), 
  4949 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  4950 ;;		 -> sprintf@f(5), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4953 ;;		 -> dbuf(32), 
  4954 ;;  i               2    1[BANK0 ] int 
  4955 ;;  c               1    0[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  2    8[COMMON] int 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;Total ram usage:        8 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    2
  4972 ;; This function calls:
  4973 ;;		_fputc
  4974 ;; This function is called by:
  4975 ;;		_pad
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _fputs
  4981  013A                     _fputs:	
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4985                           ;fputs@s stored from wreg
  4986  013A  0020               	movlb	0	; select bank0
  4987  013B  00A3               	movwf	fputs@s
  4988  013C  01A1               	clrf	fputs@i
  4989  013D  01A2               	clrf	fputs@i+1
  4990  013E                     l1603:	
  4991  013E  0821               	movf	fputs@i,w
  4992  013F  0723               	addwf	fputs@s,w
  4993  0140  00F9               	movwf	??_fputs
  4994  0141  0879               	movf	??_fputs,w
  4995  0142  0086               	movwf	6
  4996  0143  0187               	clrf	7
  4997  0144  0801               	movf	1,w
  4998  0145  00FA               	movwf	??_fputs+1
  4999  0146  087A               	movf	??_fputs+1,w
  5000  0147  00A0               	movwf	fputs@c
  5001  0148  0820               	movf	fputs@c,w
  5002  0149  1903               	btfsc	3,2
  5003  014A  0008               	return
  5004  014B  0820               	movf	fputs@c,w
  5005  014C  00F9               	movwf	??_fputs
  5006  014D  01FA               	clrf	??_fputs+1
  5007  014E  0879               	movf	??_fputs,w
  5008  014F  00F0               	movwf	fputc@c
  5009  0150  087A               	movf	??_fputs+1,w
  5010  0151  00F1               	movwf	fputc@c+1
  5011  0152  0878               	movf	fputs@fp,w
  5012  0153  00FB               	movwf	??_fputs+2
  5013  0154  087B               	movf	??_fputs+2,w
  5014  0155  00F2               	movwf	fputc@fp
  5015  0156  3181  21F7  3181   	fcall	_fputc
  5016  0159  3001               	movlw	1
  5017  015A  0020               	movlb	0	; select bank0
  5018  015B  07A1               	addwf	fputs@i,f
  5019  015C  3000               	movlw	0
  5020  015D  3DA2               	addwfc	fputs@i+1,f
  5021  015E  293E               	goto	l1603
  5022  015F                     __end_of_fputs:	
  5023                           
  5024                           	psect	text16
  5025  01F7                     __ptext16:	
  5026 ;; *************** function _fputc *****************
  5027 ;; Defined at:
  5028 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  c               2    0[COMMON] int 
  5031 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  5032 ;;		 -> sprintf@f(5), 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  2    0[COMMON] int 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5044 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;Total ram usage:        8 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    1
  5051 ;; This function calls:
  5052 ;;		_putch
  5053 ;; This function is called by:
  5054 ;;		_pad
  5055 ;;		_vfpfcnvrt
  5056 ;;		_fputs
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _fputc
  5062  01F7                     _fputc:	
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5066  01F7  0872               	movf	fputc@fp,w
  5067  01F8  1D03               	btfss	3,2
  5068  01F9  0872               	movf	fputc@fp,w
  5069  01FA  1D03               	btfss	3,2
  5070  01FB  2A00               	goto	l1577
  5071  01FC  0870               	movf	fputc@c,w
  5072  01FD  3180  2060         	fcall	_putch
  5073  01FF  0008               	return
  5074  0200                     l1577:	
  5075  0200  0872               	movf	fputc@fp,w
  5076  0201  3E03               	addlw	3
  5077  0202  0086               	movwf	6
  5078  0203  0187               	clrf	7
  5079  0204  0016               	moviw fsr1++
  5080  0205  0401               	iorwf	1,w
  5081  0206  1903               	btfsc	3,2
  5082  0207  2A23               	goto	l1581
  5083  0208  0872               	movf	fputc@fp,w
  5084  0209  3E03               	addlw	3
  5085  020A  0086               	movwf	6
  5086  020B  0187               	clrf	7
  5087  020C  3F40               	moviw [0]fsr1
  5088  020D  00F3               	movwf	??_fputc
  5089  020E  3F41               	moviw [1]fsr1
  5090  020F  00F4               	movwf	??_fputc+1
  5091  0210  0A72               	incf	fputc@fp,w
  5092  0211  0086               	movwf	6
  5093  0212  0187               	clrf	7
  5094  0213  3F40               	moviw [0]fsr1
  5095  0214  00F5               	movwf	??_fputc+2
  5096  0215  3F41               	moviw [1]fsr1
  5097  0216  00F6               	movwf	??_fputc+3
  5098  0217  0876               	movf	??_fputc+3,w
  5099  0218  3A80               	xorlw	128
  5100  0219  00F7               	movwf	??_fputc+4
  5101  021A  0874               	movf	??_fputc+1,w
  5102  021B  3A80               	xorlw	128
  5103  021C  0277               	subwf	??_fputc+4,w
  5104  021D  1D03               	skipz
  5105  021E  2A21               	goto	u875
  5106  021F  0873               	movf	??_fputc,w
  5107  0220  0275               	subwf	??_fputc+2,w
  5108  0221                     u875:	
  5109  0221  1803               	skipnc
  5110  0222  0008               	return
  5111  0223                     l1581:	
  5112  0223  0870               	movf	fputc@c,w
  5113  0224  00F3               	movwf	??_fputc
  5114  0225  0872               	movf	fputc@fp,w
  5115  0226  0086               	movwf	6
  5116  0227  0187               	clrf	7
  5117  0228  0A72               	incf	fputc@fp,w
  5118  0229  0084               	movwf	4
  5119  022A  0185               	clrf	5
  5120  022B  0800               	movf	0,w
  5121  022C  0701               	addwf	1,w
  5122  022D  00F4               	movwf	??_fputc+1
  5123  022E  0874               	movf	??_fputc+1,w
  5124  022F  0086               	movwf	6
  5125  0230  0187               	clrf	7
  5126  0231  0873               	movf	??_fputc,w
  5127  0232  0081               	movwf	1
  5128  0233  0A72               	incf	fputc@fp,w
  5129  0234  0086               	movwf	6
  5130  0235  0187               	clrf	7
  5131  0236  3001               	movlw	1
  5132  0237  0781               	addwf	1,f
  5133  0238  3141               	addfsr 1,1
  5134  0239  1803               	skipnc
  5135  023A  0A81               	incf	1,f
  5136  023B  0008               	return
  5137  023C                     __end_of_fputc:	
  5138                           
  5139                           	psect	text17
  5140  0060                     __ptext17:	
  5141 ;; *************** function _putch *****************
  5142 ;; Defined at:
  5143 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  c               1    wreg     unsigned char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  c               1    0[COMMON] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_fputc
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           
  5171                           ;psect for function _putch
  5172  0060                     _putch:	
  5173                           
  5174                           ;incstack = 0
  5175                           ; Regs used in _putch: [wreg]
  5176  0060  0008               	return
  5177  0061                     __end_of_putch:	
  5178                           
  5179                           	psect	text18
  5180  00E8                     __ptext18:	
  5181 ;; *************** function _abs *****************
  5182 ;; Defined at:
  5183 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  a               2    3[COMMON] int 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  2    3[COMMON] int 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;Total ram usage:        4 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_dtoa
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _abs
  5212  00E8                     _abs:	
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _abs: [wreg+status,2+status,0]
  5216  00E8  0874               	movf	abs@a+1,w
  5217  00E9  3A80               	xorlw	128
  5218  00EA  00F5               	movwf	??_abs
  5219  00EB  3080               	movlw	128
  5220  00EC  0275               	subwf	??_abs,w
  5221  00ED  1D03               	skipz
  5222  00EE  28F1               	goto	u945
  5223  00EF  3001               	movlw	1
  5224  00F0  0273               	subwf	abs@a,w
  5225  00F1                     u945:	
  5226  00F1  1803               	skipnc
  5227  00F2  0008               	return
  5228  00F3  0973               	comf	abs@a,w
  5229  00F4  00F5               	movwf	??_abs
  5230  00F5  0974               	comf	abs@a+1,w
  5231  00F6  00F6               	movwf	??_abs+1
  5232  00F7  0AF5               	incf	??_abs,f
  5233  00F8  1903               	skipnz
  5234  00F9  0AF6               	incf	??_abs+1,f
  5235  00FA  0875               	movf	??_abs,w
  5236  00FB  00F3               	movwf	?_abs
  5237  00FC  0876               	movf	??_abs+1,w
  5238  00FD  00F4               	movwf	?_abs+1
  5239  00FE  0008               	return
  5240  00FF                     __end_of_abs:	
  5241                           
  5242                           	psect	text19
  5243  03A5                     __ptext19:	
  5244 ;; *************** function ___aomod *****************
  5245 ;; Defined at:
  5246 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  divisor         8    0[BANK0 ] long long 
  5249 ;;  dividend        8    8[BANK0 ] long long 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  sign            1    2[COMMON] unsigned char 
  5252 ;;  counter         1    1[COMMON] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  8    0[BANK0 ] long long 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5262 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;Total ram usage:       19 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_dtoa
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function ___aomod
  5277  03A5                     ___aomod:	
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5281  03A5  01F2               	clrf	___aomod@sign
  5282  03A6  3028               	movlw	low ___aomod@dividend
  5283  03A7  0086               	movwf	6
  5284  03A8  3000               	movlw	high ___aomod@dividend
  5285  03A9  0087               	movwf	7
  5286  03AA  3F47               	moviw [7]fsr1
  5287  03AB  00F0               	movwf	??___aomod
  5288  03AC  1FF0               	btfss	??___aomod,7
  5289  03AD  2BCF               	goto	l1675
  5290  03AE  0020               	movlb	0	; select bank0
  5291  03AF  09A8               	comf	___aomod@dividend,f
  5292  03B0  09A9               	comf	___aomod@dividend+1,f
  5293  03B1  09AA               	comf	___aomod@dividend+2,f
  5294  03B2  09AB               	comf	___aomod@dividend+3,f
  5295  03B3  09AC               	comf	___aomod@dividend+4,f
  5296  03B4  09AD               	comf	___aomod@dividend+5,f
  5297  03B5  09AE               	comf	___aomod@dividend+6,f
  5298  03B6  09AF               	comf	___aomod@dividend+7,f
  5299  03B7  0AA8               	incf	___aomod@dividend,f
  5300  03B8  1D03               	skipz
  5301  03B9  2BCD               	goto	u107lld
  5302  03BA  0AA9               	incf	___aomod@dividend+1,f
  5303  03BB  1D03               	skipz
  5304  03BC  2BCD               	goto	u107lld
  5305  03BD  0AAA               	incf	___aomod@dividend+2,f
  5306  03BE  1D03               	skipz
  5307  03BF  2BCD               	goto	u107lld
  5308  03C0  0AAB               	incf	___aomod@dividend+3,f
  5309  03C1  1D03               	skipz
  5310  03C2  2BCD               	goto	u107lld
  5311  03C3  0AAC               	incf	___aomod@dividend+4,f
  5312  03C4  1D03               	skipz
  5313  03C5  2BCD               	goto	u107lld
  5314  03C6  0AAD               	incf	___aomod@dividend+5,f
  5315  03C7  1D03               	skipz
  5316  03C8  2BCD               	goto	u107lld
  5317  03C9  0AAE               	incf	___aomod@dividend+6,f
  5318  03CA  1D03               	skipz
  5319  03CB  2BCD               	goto	u107lld
  5320  03CC  0AAF               	incf	___aomod@dividend+7,f
  5321  03CD                     u107lld:	
  5322  03CD  01F2               	clrf	___aomod@sign
  5323  03CE  0AF2               	incf	___aomod@sign,f
  5324  03CF                     l1675:	
  5325  03CF  3020               	movlw	low ___aomod@divisor
  5326  03D0  0086               	movwf	6
  5327  03D1  3000               	movlw	high ___aomod@divisor
  5328  03D2  0087               	movwf	7
  5329  03D3  3F47               	moviw [7]fsr1
  5330  03D4  00F0               	movwf	??___aomod
  5331  03D5  1FF0               	btfss	??___aomod,7
  5332  03D6  2BF6               	goto	l1679
  5333  03D7  0020               	movlb	0	; select bank0
  5334  03D8  09A0               	comf	___aomod@divisor,f
  5335  03D9  09A1               	comf	___aomod@divisor+1,f
  5336  03DA  09A2               	comf	___aomod@divisor+2,f
  5337  03DB  09A3               	comf	___aomod@divisor+3,f
  5338  03DC  09A4               	comf	___aomod@divisor+4,f
  5339  03DD  09A5               	comf	___aomod@divisor+5,f
  5340  03DE  09A6               	comf	___aomod@divisor+6,f
  5341  03DF  09A7               	comf	___aomod@divisor+7,f
  5342  03E0  0AA0               	incf	___aomod@divisor,f
  5343  03E1  1D03               	skipz
  5344  03E2  2BF6               	goto	l1679
  5345  03E3  0AA1               	incf	___aomod@divisor+1,f
  5346  03E4  1D03               	skipz
  5347  03E5  2BF6               	goto	l1679
  5348  03E6  0AA2               	incf	___aomod@divisor+2,f
  5349  03E7  1D03               	skipz
  5350  03E8  2BF6               	goto	l1679
  5351  03E9  0AA3               	incf	___aomod@divisor+3,f
  5352  03EA  1D03               	skipz
  5353  03EB  2BF6               	goto	l1679
  5354  03EC  0AA4               	incf	___aomod@divisor+4,f
  5355  03ED  1D03               	skipz
  5356  03EE  2BF6               	goto	l1679
  5357  03EF  0AA5               	incf	___aomod@divisor+5,f
  5358  03F0  1D03               	skipz
  5359  03F1  2BF6               	goto	l1679
  5360  03F2  0AA6               	incf	___aomod@divisor+6,f
  5361  03F3  1D03               	skipz
  5362  03F4  2BF6               	goto	l1679
  5363  03F5  0AA7               	incf	___aomod@divisor+7,f
  5364  03F6                     l1679:	
  5365  03F6  0020               	movlb	0	; select bank0
  5366  03F7  0820               	movf	___aomod@divisor,w
  5367  03F8  0421               	iorwf	___aomod@divisor+1,w
  5368  03F9  0422               	iorwf	___aomod@divisor+2,w
  5369  03FA  0423               	iorwf	___aomod@divisor+3,w
  5370  03FB  0424               	iorwf	___aomod@divisor+4,w
  5371  03FC  0425               	iorwf	___aomod@divisor+5,w
  5372  03FD  0426               	iorwf	___aomod@divisor+6,w
  5373  03FE  0427               	iorwf	___aomod@divisor+7,w
  5374  03FF  1903               	skipnz
  5375  0400  2C4E               	goto	l1695
  5376  0401  01F1               	clrf	___aomod@counter
  5377  0402  0AF1               	incf	___aomod@counter,f
  5378  0403                     l1687:	
  5379  0403  1BA7               	btfsc	___aomod@divisor+7,7
  5380  0404  2C12               	goto	l1689
  5381  0405  35A0               	lslf	___aomod@divisor,f
  5382  0406  0DA1               	rlf	___aomod@divisor+1,f
  5383  0407  0DA2               	rlf	___aomod@divisor+2,f
  5384  0408  0DA3               	rlf	___aomod@divisor+3,f
  5385  0409  0DA4               	rlf	___aomod@divisor+4,f
  5386  040A  0DA5               	rlf	___aomod@divisor+5,f
  5387  040B  0DA6               	rlf	___aomod@divisor+6,f
  5388  040C  0DA7               	rlf	___aomod@divisor+7,f
  5389  040D  3001               	movlw	1
  5390  040E  00F0               	movwf	??___aomod
  5391  040F  0870               	movf	??___aomod,w
  5392  0410  07F1               	addwf	___aomod@counter,f
  5393  0411  2C03               	goto	l1687
  5394  0412                     l1689:	
  5395  0412  0827               	movf	___aomod@divisor+7,w
  5396  0413  022F               	subwf	___aomod@dividend+7,w
  5397  0414  1D03               	skipz
  5398  0415  2C30               	goto	u1125
  5399  0416  0826               	movf	___aomod@divisor+6,w
  5400  0417  022E               	subwf	___aomod@dividend+6,w
  5401  0418  1D03               	skipz
  5402  0419  2C30               	goto	u1125
  5403  041A  0825               	movf	___aomod@divisor+5,w
  5404  041B  022D               	subwf	___aomod@dividend+5,w
  5405  041C  1D03               	skipz
  5406  041D  2C30               	goto	u1125
  5407  041E  0824               	movf	___aomod@divisor+4,w
  5408  041F  022C               	subwf	___aomod@dividend+4,w
  5409  0420  1D03               	skipz
  5410  0421  2C30               	goto	u1125
  5411  0422  0823               	movf	___aomod@divisor+3,w
  5412  0423  022B               	subwf	___aomod@dividend+3,w
  5413  0424  1D03               	skipz
  5414  0425  2C30               	goto	u1125
  5415  0426  0822               	movf	___aomod@divisor+2,w
  5416  0427  022A               	subwf	___aomod@dividend+2,w
  5417  0428  1D03               	skipz
  5418  0429  2C30               	goto	u1125
  5419  042A  0821               	movf	___aomod@divisor+1,w
  5420  042B  0229               	subwf	___aomod@dividend+1,w
  5421  042C  1D03               	skipz
  5422  042D  2C30               	goto	u1125
  5423  042E  0820               	movf	___aomod@divisor,w
  5424  042F  0228               	subwf	___aomod@dividend,w
  5425  0430                     u1125:	
  5426  0430  1C03               	skipc
  5427  0431  2C42               	goto	l1693
  5428  0432  0820               	movf	___aomod@divisor,w
  5429  0433  02A8               	subwf	___aomod@dividend,f
  5430  0434  0821               	movf	___aomod@divisor+1,w
  5431  0435  3BA9               	subwfb	___aomod@dividend+1,f
  5432  0436  0822               	movf	___aomod@divisor+2,w
  5433  0437  3BAA               	subwfb	___aomod@dividend+2,f
  5434  0438  0823               	movf	___aomod@divisor+3,w
  5435  0439  3BAB               	subwfb	___aomod@dividend+3,f
  5436  043A  0824               	movf	___aomod@divisor+4,w
  5437  043B  3BAC               	subwfb	___aomod@dividend+4,f
  5438  043C  0825               	movf	___aomod@divisor+5,w
  5439  043D  3BAD               	subwfb	___aomod@dividend+5,f
  5440  043E  0826               	movf	___aomod@divisor+6,w
  5441  043F  3BAE               	subwfb	___aomod@dividend+6,f
  5442  0440  0827               	movf	___aomod@divisor+7,w
  5443  0441  3BAF               	subwfb	___aomod@dividend+7,f
  5444  0442                     l1693:	
  5445  0442  36A7               	lsrf	___aomod@divisor+7,f
  5446  0443  0CA6               	rrf	___aomod@divisor+6,f
  5447  0444  0CA5               	rrf	___aomod@divisor+5,f
  5448  0445  0CA4               	rrf	___aomod@divisor+4,f
  5449  0446  0CA3               	rrf	___aomod@divisor+3,f
  5450  0447  0CA2               	rrf	___aomod@divisor+2,f
  5451  0448  0CA1               	rrf	___aomod@divisor+1,f
  5452  0449  0CA0               	rrf	___aomod@divisor,f
  5453  044A  3001               	movlw	1
  5454  044B  02F1               	subwf	___aomod@counter,f
  5455  044C  1D03               	btfss	3,2
  5456  044D  2C12               	goto	l1689
  5457  044E                     l1695:	
  5458  044E  0872               	movf	___aomod@sign,w
  5459  044F  1903               	btfsc	3,2
  5460  0450  2C6F               	goto	l633
  5461  0451  09A8               	comf	___aomod@dividend,f
  5462  0452  09A9               	comf	___aomod@dividend+1,f
  5463  0453  09AA               	comf	___aomod@dividend+2,f
  5464  0454  09AB               	comf	___aomod@dividend+3,f
  5465  0455  09AC               	comf	___aomod@dividend+4,f
  5466  0456  09AD               	comf	___aomod@dividend+5,f
  5467  0457  09AE               	comf	___aomod@dividend+6,f
  5468  0458  09AF               	comf	___aomod@dividend+7,f
  5469  0459  0AA8               	incf	___aomod@dividend,f
  5470  045A  1D03               	skipz
  5471  045B  2C6F               	goto	l633
  5472  045C  0AA9               	incf	___aomod@dividend+1,f
  5473  045D  1D03               	skipz
  5474  045E  2C6F               	goto	l633
  5475  045F  0AAA               	incf	___aomod@dividend+2,f
  5476  0460  1D03               	skipz
  5477  0461  2C6F               	goto	l633
  5478  0462  0AAB               	incf	___aomod@dividend+3,f
  5479  0463  1D03               	skipz
  5480  0464  2C6F               	goto	l633
  5481  0465  0AAC               	incf	___aomod@dividend+4,f
  5482  0466  1D03               	skipz
  5483  0467  2C6F               	goto	l633
  5484  0468  0AAD               	incf	___aomod@dividend+5,f
  5485  0469  1D03               	skipz
  5486  046A  2C6F               	goto	l633
  5487  046B  0AAE               	incf	___aomod@dividend+6,f
  5488  046C  1D03               	skipz
  5489  046D  2C6F               	goto	l633
  5490  046E  0AAF               	incf	___aomod@dividend+7,f
  5491  046F                     l633:	
  5492  046F  0020               	movlb	0	; select bank0
  5493  0470  0828               	movf	___aomod@dividend,w
  5494  0471  00A0               	movwf	?___aomod
  5495  0472  0829               	movf	___aomod@dividend+1,w
  5496  0473  00A1               	movwf	?___aomod+1
  5497  0474  082A               	movf	___aomod@dividend+2,w
  5498  0475  00A2               	movwf	?___aomod+2
  5499  0476  082B               	movf	___aomod@dividend+3,w
  5500  0477  00A3               	movwf	?___aomod+3
  5501  0478  082C               	movf	___aomod@dividend+4,w
  5502  0479  00A4               	movwf	?___aomod+4
  5503  047A  082D               	movf	___aomod@dividend+5,w
  5504  047B  00A5               	movwf	?___aomod+5
  5505  047C  082E               	movf	___aomod@dividend+6,w
  5506  047D  00A6               	movwf	?___aomod+6
  5507  047E  082F               	movf	___aomod@dividend+7,w
  5508  047F  00A7               	movwf	?___aomod+7
  5509  0480  0008               	return
  5510  0481                     __end_of___aomod:	
  5511                           
  5512                           	psect	text20
  5513  0481                     __ptext20:	
  5514 ;; *************** function ___aodiv *****************
  5515 ;; Defined at:
  5516 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  divisor         8    0[BANK0 ] long long 
  5519 ;;  dividend        8    8[BANK0 ] long long 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;  quotient        8    3[COMMON] long long 
  5522 ;;  sign            1    2[COMMON] unsigned char 
  5523 ;;  counter         1    1[COMMON] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  8    0[BANK0 ] long long 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5533 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;Total ram usage:       27 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_dtoa
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function ___aodiv
  5548  0481                     ___aodiv:	
  5549                           
  5550                           ;incstack = 0
  5551                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  5552  0481  01F2               	clrf	___aodiv@sign
  5553  0482  3020               	movlw	low ___aodiv@divisor
  5554  0483  0086               	movwf	6
  5555  0484  3000               	movlw	high ___aodiv@divisor
  5556  0485  0087               	movwf	7
  5557  0486  3F47               	moviw [7]fsr1
  5558  0487  00F0               	movwf	??___aodiv
  5559  0488  1FF0               	btfss	??___aodiv,7
  5560  0489  2CAB               	goto	l1637
  5561  048A  0020               	movlb	0	; select bank0
  5562  048B  09A0               	comf	___aodiv@divisor,f
  5563  048C  09A1               	comf	___aodiv@divisor+1,f
  5564  048D  09A2               	comf	___aodiv@divisor+2,f
  5565  048E  09A3               	comf	___aodiv@divisor+3,f
  5566  048F  09A4               	comf	___aodiv@divisor+4,f
  5567  0490  09A5               	comf	___aodiv@divisor+5,f
  5568  0491  09A6               	comf	___aodiv@divisor+6,f
  5569  0492  09A7               	comf	___aodiv@divisor+7,f
  5570  0493  0AA0               	incf	___aodiv@divisor,f
  5571  0494  1D03               	skipz
  5572  0495  2CA9               	goto	u96lld
  5573  0496  0AA1               	incf	___aodiv@divisor+1,f
  5574  0497  1D03               	skipz
  5575  0498  2CA9               	goto	u96lld
  5576  0499  0AA2               	incf	___aodiv@divisor+2,f
  5577  049A  1D03               	skipz
  5578  049B  2CA9               	goto	u96lld
  5579  049C  0AA3               	incf	___aodiv@divisor+3,f
  5580  049D  1D03               	skipz
  5581  049E  2CA9               	goto	u96lld
  5582  049F  0AA4               	incf	___aodiv@divisor+4,f
  5583  04A0  1D03               	skipz
  5584  04A1  2CA9               	goto	u96lld
  5585  04A2  0AA5               	incf	___aodiv@divisor+5,f
  5586  04A3  1D03               	skipz
  5587  04A4  2CA9               	goto	u96lld
  5588  04A5  0AA6               	incf	___aodiv@divisor+6,f
  5589  04A6  1D03               	skipz
  5590  04A7  2CA9               	goto	u96lld
  5591  04A8  0AA7               	incf	___aodiv@divisor+7,f
  5592  04A9                     u96lld:	
  5593  04A9  01F2               	clrf	___aodiv@sign
  5594  04AA  0AF2               	incf	___aodiv@sign,f
  5595  04AB                     l1637:	
  5596  04AB  3028               	movlw	low ___aodiv@dividend
  5597  04AC  0086               	movwf	6
  5598  04AD  3000               	movlw	high ___aodiv@dividend
  5599  04AE  0087               	movwf	7
  5600  04AF  3F47               	moviw [7]fsr1
  5601  04B0  00F0               	movwf	??___aodiv
  5602  04B1  1FF0               	btfss	??___aodiv,7
  5603  04B2  2CD6               	goto	l1643
  5604  04B3  0020               	movlb	0	; select bank0
  5605  04B4  09A8               	comf	___aodiv@dividend,f
  5606  04B5  09A9               	comf	___aodiv@dividend+1,f
  5607  04B6  09AA               	comf	___aodiv@dividend+2,f
  5608  04B7  09AB               	comf	___aodiv@dividend+3,f
  5609  04B8  09AC               	comf	___aodiv@dividend+4,f
  5610  04B9  09AD               	comf	___aodiv@dividend+5,f
  5611  04BA  09AE               	comf	___aodiv@dividend+6,f
  5612  04BB  09AF               	comf	___aodiv@dividend+7,f
  5613  04BC  0AA8               	incf	___aodiv@dividend,f
  5614  04BD  1D03               	skipz
  5615  04BE  2CD2               	goto	l1641
  5616  04BF  0AA9               	incf	___aodiv@dividend+1,f
  5617  04C0  1D03               	skipz
  5618  04C1  2CD2               	goto	l1641
  5619  04C2  0AAA               	incf	___aodiv@dividend+2,f
  5620  04C3  1D03               	skipz
  5621  04C4  2CD2               	goto	l1641
  5622  04C5  0AAB               	incf	___aodiv@dividend+3,f
  5623  04C6  1D03               	skipz
  5624  04C7  2CD2               	goto	l1641
  5625  04C8  0AAC               	incf	___aodiv@dividend+4,f
  5626  04C9  1D03               	skipz
  5627  04CA  2CD2               	goto	l1641
  5628  04CB  0AAD               	incf	___aodiv@dividend+5,f
  5629  04CC  1D03               	skipz
  5630  04CD  2CD2               	goto	l1641
  5631  04CE  0AAE               	incf	___aodiv@dividend+6,f
  5632  04CF  1D03               	skipz
  5633  04D0  2CD2               	goto	l1641
  5634  04D1  0AAF               	incf	___aodiv@dividend+7,f
  5635  04D2                     l1641:	
  5636  04D2  3001               	movlw	1
  5637  04D3  00F0               	movwf	??___aodiv
  5638  04D4  0870               	movf	??___aodiv,w
  5639  04D5  06F2               	xorwf	___aodiv@sign,f
  5640  04D6                     l1643:	
  5641  04D6  3073               	movlw	low ___aodiv@quotient
  5642  04D7  0086               	movwf	6
  5643  04D8  3000               	movlw	high ___aodiv@quotient
  5644  04D9  0087               	movwf	7
  5645  04DA  3008               	movlw	8
  5646  04DB  00F0               	movwf	??___aodiv
  5647  04DC  3000               	movlw	0
  5648  04DD                     u990:	
  5649  04DD  001E               	movwi fsr1++
  5650  04DE  0BF0               	decfsz	??___aodiv,f
  5651  04DF  2CDD               	goto	u990
  5652  04E0  0020               	movlb	0	; select bank0
  5653  04E1  0820               	movf	___aodiv@divisor,w
  5654  04E2  0421               	iorwf	___aodiv@divisor+1,w
  5655  04E3  0422               	iorwf	___aodiv@divisor+2,w
  5656  04E4  0423               	iorwf	___aodiv@divisor+3,w
  5657  04E5  0424               	iorwf	___aodiv@divisor+4,w
  5658  04E6  0425               	iorwf	___aodiv@divisor+5,w
  5659  04E7  0426               	iorwf	___aodiv@divisor+6,w
  5660  04E8  0427               	iorwf	___aodiv@divisor+7,w
  5661  04E9  1903               	skipnz
  5662  04EA  2D41               	goto	l1665
  5663  04EB  01F1               	clrf	___aodiv@counter
  5664  04EC  0AF1               	incf	___aodiv@counter,f
  5665  04ED                     l1653:	
  5666  04ED  1BA7               	btfsc	___aodiv@divisor+7,7
  5667  04EE  2CFC               	goto	l1655
  5668  04EF  35A0               	lslf	___aodiv@divisor,f
  5669  04F0  0DA1               	rlf	___aodiv@divisor+1,f
  5670  04F1  0DA2               	rlf	___aodiv@divisor+2,f
  5671  04F2  0DA3               	rlf	___aodiv@divisor+3,f
  5672  04F3  0DA4               	rlf	___aodiv@divisor+4,f
  5673  04F4  0DA5               	rlf	___aodiv@divisor+5,f
  5674  04F5  0DA6               	rlf	___aodiv@divisor+6,f
  5675  04F6  0DA7               	rlf	___aodiv@divisor+7,f
  5676  04F7  3001               	movlw	1
  5677  04F8  00F0               	movwf	??___aodiv
  5678  04F9  0870               	movf	??___aodiv,w
  5679  04FA  07F1               	addwf	___aodiv@counter,f
  5680  04FB  2CED               	goto	l1653
  5681  04FC                     l1655:	
  5682  04FC  35F3               	lslf	___aodiv@quotient,f
  5683  04FD  0DF4               	rlf	___aodiv@quotient+1,f
  5684  04FE  0DF5               	rlf	___aodiv@quotient+2,f
  5685  04FF  0DF6               	rlf	___aodiv@quotient+3,f
  5686  0500  0DF7               	rlf	___aodiv@quotient+4,f
  5687  0501  0DF8               	rlf	___aodiv@quotient+5,f
  5688  0502  0DF9               	rlf	___aodiv@quotient+6,f
  5689  0503  0DFA               	rlf	___aodiv@quotient+7,f
  5690  0504  0827               	movf	___aodiv@divisor+7,w
  5691  0505  022F               	subwf	___aodiv@dividend+7,w
  5692  0506  1D03               	skipz
  5693  0507  2D22               	goto	u1025
  5694  0508  0826               	movf	___aodiv@divisor+6,w
  5695  0509  022E               	subwf	___aodiv@dividend+6,w
  5696  050A  1D03               	skipz
  5697  050B  2D22               	goto	u1025
  5698  050C  0825               	movf	___aodiv@divisor+5,w
  5699  050D  022D               	subwf	___aodiv@dividend+5,w
  5700  050E  1D03               	skipz
  5701  050F  2D22               	goto	u1025
  5702  0510  0824               	movf	___aodiv@divisor+4,w
  5703  0511  022C               	subwf	___aodiv@dividend+4,w
  5704  0512  1D03               	skipz
  5705  0513  2D22               	goto	u1025
  5706  0514  0823               	movf	___aodiv@divisor+3,w
  5707  0515  022B               	subwf	___aodiv@dividend+3,w
  5708  0516  1D03               	skipz
  5709  0517  2D22               	goto	u1025
  5710  0518  0822               	movf	___aodiv@divisor+2,w
  5711  0519  022A               	subwf	___aodiv@dividend+2,w
  5712  051A  1D03               	skipz
  5713  051B  2D22               	goto	u1025
  5714  051C  0821               	movf	___aodiv@divisor+1,w
  5715  051D  0229               	subwf	___aodiv@dividend+1,w
  5716  051E  1D03               	skipz
  5717  051F  2D22               	goto	u1025
  5718  0520  0820               	movf	___aodiv@divisor,w
  5719  0521  0228               	subwf	___aodiv@dividend,w
  5720  0522                     u1025:	
  5721  0522  1C03               	skipc
  5722  0523  2D35               	goto	l1663
  5723  0524  0820               	movf	___aodiv@divisor,w
  5724  0525  02A8               	subwf	___aodiv@dividend,f
  5725  0526  0821               	movf	___aodiv@divisor+1,w
  5726  0527  3BA9               	subwfb	___aodiv@dividend+1,f
  5727  0528  0822               	movf	___aodiv@divisor+2,w
  5728  0529  3BAA               	subwfb	___aodiv@dividend+2,f
  5729  052A  0823               	movf	___aodiv@divisor+3,w
  5730  052B  3BAB               	subwfb	___aodiv@dividend+3,f
  5731  052C  0824               	movf	___aodiv@divisor+4,w
  5732  052D  3BAC               	subwfb	___aodiv@dividend+4,f
  5733  052E  0825               	movf	___aodiv@divisor+5,w
  5734  052F  3BAD               	subwfb	___aodiv@dividend+5,f
  5735  0530  0826               	movf	___aodiv@divisor+6,w
  5736  0531  3BAE               	subwfb	___aodiv@dividend+6,f
  5737  0532  0827               	movf	___aodiv@divisor+7,w
  5738  0533  3BAF               	subwfb	___aodiv@dividend+7,f
  5739  0534  1473               	bsf	___aodiv@quotient,0
  5740  0535                     l1663:	
  5741  0535  36A7               	lsrf	___aodiv@divisor+7,f
  5742  0536  0CA6               	rrf	___aodiv@divisor+6,f
  5743  0537  0CA5               	rrf	___aodiv@divisor+5,f
  5744  0538  0CA4               	rrf	___aodiv@divisor+4,f
  5745  0539  0CA3               	rrf	___aodiv@divisor+3,f
  5746  053A  0CA2               	rrf	___aodiv@divisor+2,f
  5747  053B  0CA1               	rrf	___aodiv@divisor+1,f
  5748  053C  0CA0               	rrf	___aodiv@divisor,f
  5749  053D  3001               	movlw	1
  5750  053E  02F1               	subwf	___aodiv@counter,f
  5751  053F  1D03               	btfss	3,2
  5752  0540  2CFC               	goto	l1655
  5753  0541                     l1665:	
  5754  0541  0872               	movf	___aodiv@sign,w
  5755  0542  1903               	btfsc	3,2
  5756  0543  2D62               	goto	l620
  5757  0544  09F3               	comf	___aodiv@quotient,f
  5758  0545  09F4               	comf	___aodiv@quotient+1,f
  5759  0546  09F5               	comf	___aodiv@quotient+2,f
  5760  0547  09F6               	comf	___aodiv@quotient+3,f
  5761  0548  09F7               	comf	___aodiv@quotient+4,f
  5762  0549  09F8               	comf	___aodiv@quotient+5,f
  5763  054A  09F9               	comf	___aodiv@quotient+6,f
  5764  054B  09FA               	comf	___aodiv@quotient+7,f
  5765  054C  0AF3               	incf	___aodiv@quotient,f
  5766  054D  1D03               	skipz
  5767  054E  2D62               	goto	l620
  5768  054F  0AF4               	incf	___aodiv@quotient+1,f
  5769  0550  1D03               	skipz
  5770  0551  2D62               	goto	l620
  5771  0552  0AF5               	incf	___aodiv@quotient+2,f
  5772  0553  1D03               	skipz
  5773  0554  2D62               	goto	l620
  5774  0555  0AF6               	incf	___aodiv@quotient+3,f
  5775  0556  1D03               	skipz
  5776  0557  2D62               	goto	l620
  5777  0558  0AF7               	incf	___aodiv@quotient+4,f
  5778  0559  1D03               	skipz
  5779  055A  2D62               	goto	l620
  5780  055B  0AF8               	incf	___aodiv@quotient+5,f
  5781  055C  1D03               	skipz
  5782  055D  2D62               	goto	l620
  5783  055E  0AF9               	incf	___aodiv@quotient+6,f
  5784  055F  1D03               	skipz
  5785  0560  2D62               	goto	l620
  5786  0561  0AFA               	incf	___aodiv@quotient+7,f
  5787  0562                     l620:	
  5788  0562  0873               	movf	___aodiv@quotient,w
  5789  0563  0020               	movlb	0	; select bank0
  5790  0564  00A0               	movwf	?___aodiv
  5791  0565  0874               	movf	___aodiv@quotient+1,w
  5792  0566  00A1               	movwf	?___aodiv+1
  5793  0567  0875               	movf	___aodiv@quotient+2,w
  5794  0568  00A2               	movwf	?___aodiv+2
  5795  0569  0876               	movf	___aodiv@quotient+3,w
  5796  056A  00A3               	movwf	?___aodiv+3
  5797  056B  0877               	movf	___aodiv@quotient+4,w
  5798  056C  00A4               	movwf	?___aodiv+4
  5799  056D  0878               	movf	___aodiv@quotient+5,w
  5800  056E  00A5               	movwf	?___aodiv+5
  5801  056F  0879               	movf	___aodiv@quotient+6,w
  5802  0570  00A6               	movwf	?___aodiv+6
  5803  0571  087A               	movf	___aodiv@quotient+7,w
  5804  0572  00A7               	movwf	?___aodiv+7
  5805  0573  0008               	return
  5806  0574                     __end_of___aodiv:	
  5807                           
  5808                           	psect	text21
  5809  01BB                     __ptext21:	
  5810 ;; *************** function _Display_Name *****************
  5811 ;; Defined at:
  5812 ;;		line 111 in file "main.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  string1         2    5[COMMON] PTR unsigned char 
  5815 ;;		 -> STR_9(11), STR_8(16), STR_7(13), STR_6(12), 
  5816 ;;		 -> checkButton1@string1(12), STR_4(11), STR_3(16), STR_2(13), 
  5817 ;;		 -> STR_1(12), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  i               2   10[COMMON] int 
  5820 ;;  length          2    8[COMMON] int 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        7 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    2
  5837 ;; This function calls:
  5838 ;;		_SPI_Write
  5839 ;;		_strlen
  5840 ;; This function is called by:
  5841 ;;		_checkButton1
  5842 ;;		_Get_ADC
  5843 ;;		_Send_Names
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _Display_Name
  5849  01BB                     _Display_Name:	
  5850                           
  5851                           ;main.c: 112:     int length;;main.c: 113:     int i;;main.c: 115:         SPI_Write(0xF
      +                          E);
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _Display_Name: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5855  01BB  30FE               	movlw	254
  5856  01BC  3180  20AD  3181   	fcall	_SPI_Write
  5857                           
  5858                           ;main.c: 116:         _delay((unsigned long)((100)*(500000/4000.0)));
  5859  01BF  3011               	movlw	17
  5860  01C0  00F7               	movwf	??_Display_Name
  5861  01C1  303A               	movlw	58
  5862  01C2                     u1687:	
  5863  01C2  0B89               	decfsz	9,f
  5864  01C3  29C2               	goto	u1687
  5865  01C4  0BF7               	decfsz	??_Display_Name,f
  5866  01C5  29C2               	goto	u1687
  5867  01C6  3200               	nop2
  5868                           
  5869                           ;main.c: 117:         SPI_Write(0x51);
  5870  01C7  3051               	movlw	81
  5871  01C8  3180  20AD  3181   	fcall	_SPI_Write
  5872                           
  5873                           ;main.c: 118:         length = strlen(string1);
  5874  01CB  0876               	movf	Display_Name@string1+1,w
  5875  01CC  00F1               	movwf	strlen@s+1
  5876  01CD  0875               	movf	Display_Name@string1,w
  5877  01CE  00F0               	movwf	strlen@s
  5878  01CF  3180  20D1  3181   	fcall	_strlen
  5879  01D2  0871               	movf	?_strlen+1,w
  5880  01D3  00F9               	movwf	Display_Name@length+1
  5881  01D4  0870               	movf	?_strlen,w
  5882  01D5  00F8               	movwf	Display_Name@length
  5883                           
  5884                           ;main.c: 119:         for(i = 0; i < length; i++){
  5885  01D6  01FA               	clrf	Display_Name@i
  5886  01D7  01FB               	clrf	Display_Name@i+1
  5887  01D8                     l1853:	
  5888  01D8  087B               	movf	Display_Name@i+1,w
  5889  01D9  3A80               	xorlw	128
  5890  01DA  00F7               	movwf	??_Display_Name
  5891  01DB  0879               	movf	Display_Name@length+1,w
  5892  01DC  3A80               	xorlw	128
  5893  01DD  0277               	subwf	??_Display_Name,w
  5894  01DE  1D03               	skipz
  5895  01DF  29E2               	goto	u1395
  5896  01E0  0878               	movf	Display_Name@length,w
  5897  01E1  027A               	subwf	Display_Name@i,w
  5898  01E2                     u1395:	
  5899  01E2  1803               	btfsc	3,0
  5900  01E3  29F3               	goto	l196
  5901                           
  5902                           ;main.c: 120:             SPI_Write(string1[i]);
  5903  01E4  0875               	movf	Display_Name@string1,w
  5904  01E5  077A               	addwf	Display_Name@i,w
  5905  01E6  0084               	movwf	4
  5906  01E7  0876               	movf	Display_Name@string1+1,w
  5907  01E8  3D7B               	addwfc	Display_Name@i+1,w
  5908  01E9  0085               	movwf	5
  5909  01EA  0800               	movf	0,w	;code access
  5910  01EB  3180  20AD  3181   	fcall	_SPI_Write
  5911                           
  5912                           ;main.c: 121:         }
  5913  01EE  3001               	movlw	1
  5914  01EF  07FA               	addwf	Display_Name@i,f
  5915  01F0  3000               	movlw	0
  5916  01F1  3DFB               	addwfc	Display_Name@i+1,f
  5917  01F2  29D8               	goto	l1853
  5918  01F3                     l196:	
  5919                           
  5920                           ;main.c: 123:     printed = 1;
  5921  01F3  0021               	movlb	1	; select bank1
  5922  01F4  01AB               	clrf	_printed^(0+128)
  5923  01F5  0AAB               	incf	_printed^(0+128),f
  5924  01F6  0008               	return
  5925  01F7                     __end_of_Display_Name:	
  5926                           
  5927                           	psect	text22
  5928  00D1                     __ptext22:	
  5929 ;; *************** function _strlen *****************
  5930 ;; Defined at:
  5931 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  s               2    0[COMMON] PTR const unsigned char 
  5934 ;;		 -> dbuf(32), STR_9(11), STR_8(16), STR_7(13), 
  5935 ;;		 -> STR_6(12), checkButton1@string1(12), STR_4(11), STR_3(16), 
  5936 ;;		 -> STR_2(13), STR_1(12), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  a               2    3[COMMON] PTR const unsigned char 
  5939 ;;		 -> dbuf(32), STR_9(11), STR_8(16), STR_7(13), 
  5940 ;;		 -> STR_6(12), checkButton1@string1(12), STR_4(11), STR_3(16), 
  5941 ;;		 -> STR_2(13), STR_1(12), 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2    0[COMMON] unsigned int 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;Total ram usage:        5 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_Display_Name
  5961 ;;		_pad
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           
  5966                           ;psect for function _strlen
  5967  00D1                     _strlen:	
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  5971  00D1  0871               	movf	strlen@s+1,w
  5972  00D2  00F4               	movwf	strlen@a+1
  5973  00D3  0870               	movf	strlen@s,w
  5974  00D4  00F3               	movwf	strlen@a
  5975  00D5                     l1591:	
  5976  00D5  0870               	movf	strlen@s,w
  5977  00D6  0084               	movwf	4
  5978  00D7  0871               	movf	strlen@s+1,w
  5979  00D8  0085               	movwf	5
  5980  00D9  0012               	moviw fsr0++
  5981  00DA  1903               	btfsc	3,2
  5982  00DB  28E1               	goto	l1593
  5983  00DC  3001               	movlw	1
  5984  00DD  07F0               	addwf	strlen@s,f
  5985  00DE  3000               	movlw	0
  5986  00DF  3DF1               	addwfc	strlen@s+1,f
  5987  00E0  28D5               	goto	l1591
  5988  00E1                     l1593:	
  5989  00E1  0873               	movf	strlen@a,w
  5990  00E2  0270               	subwf	strlen@s,w
  5991  00E3  00F0               	movwf	?_strlen
  5992  00E4  0874               	movf	strlen@a+1,w
  5993  00E5  3B71               	subwfb	strlen@s+1,w
  5994  00E6  00F1               	movwf	?_strlen+1
  5995  00E7  0008               	return
  5996  00E8                     __end_of_strlen:	
  5997                           
  5998                           	psect	text23
  5999  00AD                     __ptext23:	
  6000 ;; *************** function _SPI_Write *****************
  6001 ;; Defined at:
  6002 ;;		line 102 in file "main.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  incoming        1    wreg     unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  incoming        1    2[COMMON] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0, pclath, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;Total ram usage:        2 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    1
  6023 ;; This function calls:
  6024 ;;		_SPI2_Exchange8bit
  6025 ;; This function is called by:
  6026 ;;		_Display_Name
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           
  6031                           ;psect for function _SPI_Write
  6032  00AD                     _SPI_Write:	
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
  6036                           ;SPI_Write@incoming stored from wreg
  6037  00AD  00F2               	movwf	SPI_Write@incoming
  6038                           
  6039                           ;main.c: 102: void SPI_Write(char incoming);main.c: 103: {;main.c: 104:     do { LATCbit
      +                          s.LATC0 = 0; } while(0);
  6040  00AE  0022               	movlb	2	; select bank2
  6041  00AF  100E               	bcf	14,0	;volatile
  6042                           
  6043                           ;main.c: 105:     SPI2_Exchange8bit(incoming);
  6044  00B0  0872               	movf	SPI_Write@incoming,w
  6045  00B1  3180  20A1  3180   	fcall	_SPI2_Exchange8bit
  6046  00B4  0022               	movlb	2	; select bank2
  6047  00B5  140E               	bsf	14,0	;volatile
  6048                           
  6049                           ;main.c: 107:     _delay((unsigned long)((100)*(500000/4000.0)));
  6050  00B6  3011               	movlw	17
  6051  00B7  00F1               	movwf	??_SPI_Write
  6052  00B8  303A               	movlw	58
  6053  00B9                     u1697:	
  6054  00B9  0B89               	decfsz	9,f
  6055  00BA  28B9               	goto	u1697
  6056  00BB  0BF1               	decfsz	??_SPI_Write,f
  6057  00BC  28B9               	goto	u1697
  6058  00BD  3200               	nop2
  6059  00BE  0008               	return
  6060  00BF                     __end_of_SPI_Write:	
  6061                           
  6062                           	psect	text24
  6063  00A1                     __ptext24:	
  6064 ;; *************** function _SPI2_Exchange8bit *****************
  6065 ;; Defined at:
  6066 ;;		line 79 in file "mcc_generated_files/spi2.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  data            1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  data            1    0[COMMON] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      unsigned char 
  6073 ;; Registers used:
  6074 ;;		wreg
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;Total ram usage:        1 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_SPI_Write
  6090 ;;		_SPI2_Exchange8bitBuffer
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _SPI2_Exchange8bit
  6096  00A1                     _SPI2_Exchange8bit:	
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _SPI2_Exchange8bit: [wreg]
  6100                           ;SPI2_Exchange8bit@data stored from wreg
  6101  00A1  00F0               	movwf	SPI2_Exchange8bit@data
  6102                           
  6103                           ;mcc_generated_files/spi2.c: 79: uint8_t SPI2_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 80: {;mcc_generated_files/spi2.c: 82:     SSP2CON1bits.WCOL = 0;
  6104  00A2  0024               	movlb	4	; select bank4
  6105  00A3  139D               	bcf	29,7	;volatile
  6106                           
  6107                           ;mcc_generated_files/spi2.c: 84:     SSP2BUF = data;
  6108  00A4  0870               	movf	SPI2_Exchange8bit@data,w
  6109  00A5  0099               	movwf	25	;volatile
  6110  00A6                     l269:	
  6111                           ;mcc_generated_files/spi2.c: 89:     }
  6112                           
  6113                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
  6114                           
  6115                           
  6116                           ;mcc_generated_files/spi2.c: 86:     while(SSP2STATbits.BF == 0x0)
  6117  00A6  0024               	movlb	4	; select bank4
  6118  00A7  181C               	btfsc	28,0	;volatile
  6119  00A8  28AB               	goto	l1761
  6120  00A9  0064               	clrwdt	;# 
  6121  00AA  28A6               	goto	l269
  6122  00AB                     l1761:	
  6123                           
  6124                           ;mcc_generated_files/spi2.c: 91:     return (SSP2BUF);
  6125  00AB  0819               	movf	25,w	;volatile
  6126  00AC  0008               	return
  6127  00AD                     __end_of_SPI2_Exchange8bit:	
  6128                           
  6129                           	psect	text25
  6130  00FF                     __ptext25:	
  6131 ;; *************** function _ADC_GetConversion *****************
  6132 ;; Defined at:
  6133 ;;		line 113 in file "mcc_generated_files/adc.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  channel         1    wreg     enum E6648
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  channel         1    3[COMMON] enum E6648
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  2    0[COMMON] unsigned short 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:        4 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_checkButton1
  6157 ;;		_Get_ADC
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function _ADC_GetConversion
  6163  00FF                     _ADC_GetConversion:	
  6164                           
  6165                           ;incstack = 0
  6166                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6167                           ;ADC_GetConversion@channel stored from wreg
  6168  00FF  00F3               	movwf	ADC_GetConversion@channel
  6169                           
  6170                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  6171  0100  0873               	movf	ADC_GetConversion@channel,w
  6172  0101  00F2               	movwf	??_ADC_GetConversion
  6173  0102  0DF2               	rlf	??_ADC_GetConversion,f
  6174  0103  0DF2               	rlf	??_ADC_GetConversion,f
  6175  0104  0021               	movlb	1	; select bank1
  6176  0105  081D               	movf	29,w	;volatile
  6177  0106  0672               	xorwf	??_ADC_GetConversion,w
  6178  0107  3903               	andlw	-253
  6179  0108  0672               	xorwf	??_ADC_GetConversion,w
  6180  0109  009D               	movwf	29	;volatile
  6181                           
  6182                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  6183  010A  141D               	bsf	29,0	;volatile
  6184                           
  6185                           ;mcc_generated_files/adc.c: 125:     ADCON0bits.ADGO = 1;
  6186                           
  6187                           ;mcc_generated_files/adc.c: 122:     _delay((unsigned long)((5)*(500000/4000000.0)));
  6188  010B  0021               	movlb	1	; select bank1
  6189  010C  149D               	bsf	29,1	;volatile
  6190  010D                     l130:	
  6191                           ;mcc_generated_files/adc.c: 131:     }
  6192                           
  6193                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  6194                           
  6195                           
  6196                           ;mcc_generated_files/adc.c: 128:     while (ADCON0bits.ADGO)
  6197  010D  0021               	movlb	1	; select bank1
  6198  010E  1C9D               	btfss	29,1	;volatile
  6199  010F  2912               	goto	l1835
  6200  0110  0064               	clrwdt	;# 
  6201  0111  290D               	goto	l130
  6202  0112                     l1835:	
  6203                           
  6204                           ;mcc_generated_files/adc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6205  0112  081C               	movf	28,w	;volatile
  6206  0113  00F1               	movwf	?_ADC_GetConversion+1
  6207  0114  081B               	movf	27,w	;volatile
  6208  0115  00F0               	movwf	?_ADC_GetConversion
  6209  0116  0008               	return
  6210  0117                     __end_of_ADC_GetConversion:	
  6211  007E                     btemp	set	126	;btemp
  6212  007E                     wtemp0	set	126


Data Sizes:
    Strings     55
    Constant    0
    Data        10
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     23      78
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), 
		 -> STR_6(CODE[12]), checkButton1@string1(BANK1[12]), STR_4(CODE[11]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), 
		 -> STR_6(CODE[12]), checkButton1@string1(BANK1[12]), STR_4(CODE[11]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 12
		 -> checkButton1@string1(BANK1[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 12
		 -> checkButton1@string1(BANK1[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    S901_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 12
		 -> checkButton1@string1(BANK1[12]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 12
		 -> checkButton1@string1(BANK1[12]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    Display_Name@string1	PTR unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[13]), STR_6(CODE[12]), 
		 -> checkButton1@string1(BANK1[12]), STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), 
		 -> STR_1(CODE[12]), 

    names	PTR unsigned char [4] size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_3(CODE[16]), STR_2(CODE[13]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _checkButton1->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Display_Name->_strlen
    _SPI_Write->_SPI2_Exchange8bit

Critical Paths under _main in BANK0

    _main->_Get_ADC
    _Get_ADC->_checkButton1
    _checkButton1->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_Get_ADC
    _Get_ADC->_checkButton1
    _checkButton1->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8756
                            _Get_ADC
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_ADC                                              4     4      0    8756
                                             77 BANK0      2     2      0
                                             21 BANK1      2     2      0
                  _ADC_GetConversion
                       _Display_Name
                       _checkButton1
 ---------------------------------------------------------------------------------
 (2) _checkButton1                                        15    15      0    7386
                                             74 BANK0      3     3      0
                                              9 BANK1     12    12      0
                  _ADC_GetConversion
                       _Display_Name
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             14    10      4    6231
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3    5923
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           40    38      2    5612
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                30    22      8    4262
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     6      3    2656
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (3) _Display_Name                                         7     5      2    1083
                                              5 COMMON     7     5      2
                          _SPI_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               5     3      2     242
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _SPI_Write                                            2     2      0      44
                                              1 COMMON     2     2      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_ADC
     _ADC_GetConversion
     _Display_Name
       _SPI_Write
         _SPI2_Exchange8bit
       _strlen
     _checkButton1
       _ADC_GetConversion
       _Display_Name
         _SPI_Write
           _SPI2_Exchange8bit
         _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     17      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 31 17:38:54 2019

                    __CFG_CP$OFF 0000                      __CFG_LVP$ON 0000                              l200 0250  
                            l130 010D                              l196 01F3                              l620 0562  
                            l269 00A6                              l471 029A                              l480 06E4  
                            l633 046F                              l474 02BA                              l484 06FF  
                            l485 0713                              l479 06DD                              l488 07A8  
                   __CFG_CPD$OFF 0000                              u925 02A6                              u945 00F1  
                            u875 0221                              u990 04DD                              _abs 00E8  
                            _pad 0282          __size_of_PMD_Initialize 0008                              wreg 0009  
                           ?_abs 0073                             l1603 013E                             l1613 0298  
                           l1623 02C6                             l1711 06F7                             l1641 04D2  
                           l1609 0290                             l1721 0740                             l1801 0382  
                           l1643 04D6                             l1619 029C                             l1731 071B  
                           l1653 04ED                             l1637 04AB                             l1581 0223  
                           l1717 070E                             l1821 0195                             l1591 00D5  
                           l1663 0535                             l1655 04FC                             l1743 07BC  
                           l1823 01B2                             l1761 00AB                             l1593 00E1  
                           l1665 0541                             l1577 0200                             l1753 07D3  
                           l1921 0600                             l1835 0112                             l1675 03CF  
                           l1739 07B4                             l1915 05E4                             l1853 01D8  
                           l1693 0442                             l1749 07C7                             l1909 05C8  
                           l1687 0403                             l1695 044E                             l1679 03F6  
                           l1791 0371                             l1689 0412                             l1785 0350  
                           l1777 0316                             l1961 068B                             l1945 0654  
                           l1937 062D                             l1795 0377                             l1939 0638  
                           l1893 0588                             l1965 007C                             ?_pad 0024  
                           STR_1 081D                             STR_2 0810                             STR_3 0800  
                           STR_4 0829                             STR_5 0834                             u1025 0522  
                           u1125 0430                             u1215 06EF                             u1160 06B3  
                           u1170 06B4                             u1245 07B2                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             u1265 072F  
                           u1505 060C                             u1275 073B                             u1515 061A  
                           u1445 05A8                             u1535 0644                             u1455 05B6  
                           u1545 0652                             u1465 05D4                             u1395 01E2  
                           u1555 0660                             u1475 05E2                             u1565 066E  
                           u1485 05F0                             u1575 0686                             u1495 05FE  
                           u1677 0247                             u1687 01C2                             u1697 00B9  
                           _PMD0 0911                             _PMD1 0912                             _PMD2 0913  
                           _PMD3 0914                             _PMD4 0915                             _PMD5 0916  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             abs@a 0073  
                           _dbuf 00AE                             _main 0079                             _dtoa 0697  
                           _name 00A8                             _prec 00A4                             _nout 00A0  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                    __CFG_BOREN$ON 0000                    __CFG_BORV$LOW 0000  
                           start 0002                  __end_of_Get_ADC 0697                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_abs 0075                            ??_pad 007C  
 __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 0090                  __end_of___aodiv 0574  
                          _ADACT 009F                            ?_main 0070                            ?_dtoa 0030  
                __end_of___aomod 0481                   __CFG_DEBUG$OFF 0000                            _OSCEN 091D  
                   vfpfcnvrt@fmt 004E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                            u96lld 04A9                            _flags 00A6  
                 _WDT_Initialize 0062                            _names 00E5                            _fputc 01F7  
                          _fputs 013A                            _right 006F                            pad@fp 002B  
                          _width 00A2                            _putch 0060                            _start 00ED  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003E                            dtoa@s 0042                            dtoa@w 0040  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 013A  
             __size_of_SPI_Write 0012                  __initialization 07E6                _SPI2_Exchange8bit 00A1  
                   __end_of_main 0080                     __end_of_dtoa 07E6               ?_SPI2_Exchange8bit 0070  
                         ??_main 007E                           ??_dtoa 0038         __size_of_SPI2_Initialize 0007  
            ??_SPI2_Exchange8bit 0070           __end_of_WDT_Initialize 0066             __end_of_Display_Name 01F7  
                         _ADCON0 009D                           _ADCON1 009E                           ?_fputc 0070  
                         ?_fputs 0078                           _ADRESH 009C                           _ADRESL 009B  
                         _ANSELA 018C                           ?_putch 0070                           _ANSELB 018D  
                         _ANSELC 018E               __CFG_RSTOSC$HFINT1 0000                           _RC2PPS 0EA2  
                         _RB6PPS 0E9E                           _ODCONA 028C                           _ODCONB 028D  
                         _ODCONC 028E                        ??_Get_ADC 006D                           _OSCFRQ 091F  
                         u107lld 03CD                           _WDTCON 0097            __size_of_checkButton1 0046  
                 __CFG_PWRTE$OFF 0000        __end_of_SPI2_Exchange8bit 00AD                     vfprintf@cfmt 0064  
                      ??___aodiv 0070                        ??___aomod 0070                   __CFG_STVREN$ON 0000  
                         _button 00AD                           pad@buf 0024                           dtoa@fp 003D  
                         _strlen 00D1                __end_of_SPI_Write 00BF                           fputc@c 0070  
                 _PMD_Initialize 0090                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023               Display_Name@length 0078                  ?_WDT_Initialize 0070  
       ADC_GetConversion@channel 0073                     _checkButton1 023C                           putch@c 0070  
               __end_of_vfprintf 01BB                        ??_sprintf 007D                _SYSTEM_Initialize 00BF  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
                   __pidataBANK0 0061                     __pidataBANK1 0098              ??_SYSTEM_Initialize 0070  
                  __end_of_fputc 023C                    __end_of_fputs 015F                    __end_of_putch 0061  
         __end_of_PMD_Initialize 0098                          ??_fputc 0073        __end_of_SYSTEM_Initialize 00D1  
                        ??_fputs 0079                          ??_putch 0070                ??_SPI2_Initialize 0070  
                     __pbssBANK1 00A0       __size_of_SPI2_Exchange8bit 000C                       __pmaintext 0079  
                __CFG_PPS1WAY$ON 0000                  ?_PMD_Initialize 0070          __size_of_ADC_Initialize 0008  
          __size_of_Display_Name 003C                          ?_strlen 0070                          _OSCCON1 0919  
                        _OSCCON3 091B               __size_of_vfpfcnvrt 00D0                          _OSCTUNE 091E  
                        _SSP2ADD 021A                          _SLRCONA 030C                          _SLRCONB 030D  
                        _SLRCONC 030E                          _SSP2BUF 0219                SPI_Write@incoming 0072  
                        _Get_ADC 0574                     _Display_Name 01BB                          ___aodiv 0481  
                        ___aomod 03A5                        ?_vfprintf 005E                          __ptext1 00BF  
                        __ptext2 0062                          __ptext3 0072                          __ptext4 0090  
                        __ptext5 015F                          __ptext6 0088                          __ptext7 0080  
                        __ptext8 0574                          __ptext9 023C                  __size_of_strlen 0017  
          _OSCILLATOR_Initialize 0088                     __size_of_abs 0017                     __size_of_pad 0053  
       ??_PIN_MANAGER_Initialize 0070                          _printed 00AB       __size_of_SYSTEM_Initialize 0012  
                        _sprintf 0117                          clrloop0 0067                          _switch1 00AC  
           end_of_initialization 07FD                          fputc@fp 0072                          init_ram 006C  
                        fputs@fp 0078                          initloop 006D                __end_of_vfpfcnvrt 03A5  
            Display_Name@string1 0075                       ??_vfprintf 0061                          strlen@a 0073  
                        strlen@s 0070                 ??_WDT_Initialize 0070                        _PORTCbits 000E  
                      _SPI_Write 00AD                 __CFG_FEXTOSC$OFF 0000            SPI2_Exchange8bit@data 0070  
                    vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005D                      vfpfcnvrt@ll 0055  
                 _ADC_Initialize 0080           ?_OSCILLATOR_Initialize 0070                  _SPI2_Initialize 0072  
                 __end_of_strlen 00E8              start_initialization 07E6  __size_of_PIN_MANAGER_Initialize 002D  
                    __end_of_abs 00FF                      __end_of_pad 02D5                       ?_SPI_Write 0070  
               __CFG_LPBOREN$OFF 0000                      vfprintf@fmt 005E                 ??_PMD_Initialize 0070  
         __end_of_ADC_Initialize 0088                      __pdataBANK0 006F                      __pdataBANK1 00E5  
                       ??_strlen 0072                        ___latbits 0002                        _adcResult 00AA  
                  __pcstackBANK0 0020                    __pcstackBANK1 00CE                 ___aodiv@dividend 0028  
                       ?_Get_ADC 0070              checkButton1@string1 00D7           _PIN_MANAGER_Initialize 015F  
        __end_of_SPI2_Initialize 0079                         ?___aodiv 0020                         ?___aomod 0020  
               ___aodiv@quotient 0073                  ?_ADC_Initialize 0070                __size_of_vfprintf 002F  
               __CFG_WDTE$SWDTEN 0000                      ??_SPI_Write 0071                         ?_sprintf 0066  
                 __size_of_fputc 0045                   __size_of_fputs 0025                   __size_of_putch 0001  
                       _LATAbits 010C                         _LATCbits 010E                        clear_ram0 0066  
                       _SSP2CON1 021D                         _SSP2STAT 021C                        _vfpfcnvrt 02D5  
                     _ADCON0bits 009D                    ?_checkButton1 0070                 __size_of_Get_ADC 0123  
                     vfprintf@ap 0060                       vfprintf@fp 0063                _ADC_GetConversion 00FF  
               ?_SPI2_Initialize 0070          ??_OSCILLATOR_Initialize 0070               ?_ADC_GetConversion 0070  
               __size_of___aodiv 00F3                 __size_of___aomod 00DC                       ?_vfpfcnvrt 004E  
                ___aodiv@divisor 0020                  ___aodiv@counter 0071              ??_ADC_GetConversion 0072  
                     sprintf@fmt 0066                   ??_checkButton1 006A                         _dtoa$602 003B  
                       __ptext10 0117                         __ptext11 018C                         __ptext20 0481  
                       __ptext12 02D5                         __ptext21 01BB                         __ptext13 0697  
                       __ptext22 00D1                         __ptext14 0282                         __ptext23 00AD  
                       __ptext15 013A                         __ptext24 00A1                         __ptext16 01F7  
                       __ptext25 00FF                         __ptext17 0060                         __ptext18 00E8  
                       __ptext19 03A5                     _SSP2CON1bits 021D                 __size_of_sprintf 0023  
                  __size_of_main 0007                    __size_of_dtoa 014F        __end_of_ADC_GetConversion 0117  
                       _vfprintf 018C                    Display_Name@i 007A                     _SSP2STATbits 021C  
               ___aomod@dividend 0028                       Get_ADC@val 00E3          __size_of_WDT_Initialize 0004  
                      sprintf@ap 00D0          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
               ??_ADC_Initialize 0070                    ?_Display_Name 0075                  ___aomod@divisor 0020  
                    ??_vfpfcnvrt 0050                  ___aomod@counter 0071                    __pstringtext1 0800  
                  __pstringtext2 0810                    __pstringtext3 081D                    __pstringtext4 0829  
                  __pstringtext5 0834                    __pstringtext6 0000                         sprintf@f 00D2  
                       sprintf@s 00D1                       _SSP2DATPPS 0E1E                       _SSP2CLKPPS 0E1D  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 018C       __size_of_ADC_GetConversion 0018  
                   ___aomod@sign 0072                   ??_Display_Name 0077             __end_of_checkButton1 0282  
